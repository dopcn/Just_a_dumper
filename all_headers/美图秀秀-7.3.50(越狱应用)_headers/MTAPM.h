//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class AFNetworkReachabilityManager, MTAPMDataManager, NSString;
@protocol OS_dispatch_queue;

@interface MTAPM : NSObject
{
    _Bool _isUploadOnWifi;
    _Bool _isUseNotificationUpload;
    _Bool _isStartRegister;
    unsigned short _version;
    unsigned long long _appKey;
    NSString *_RSAKey;
    NSString *_psw;
    NSString *_channel;
    NSString *_userID;
    NSString *_tokenID;
    NSObject<OS_dispatch_queue> *_runQueue;
    AFNetworkReachabilityManager *_reachabilityManager;
    MTAPMDataManager *_dataManager;
}

+ (id)manager;
+ (id)sharedInstance;
@property(retain, nonatomic) MTAPMDataManager *dataManager; // @synthesize dataManager=_dataManager;
@property(retain, nonatomic) AFNetworkReachabilityManager *reachabilityManager; // @synthesize reachabilityManager=_reachabilityManager;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *runQueue; // @synthesize runQueue=_runQueue;
@property(nonatomic) _Bool isStartRegister; // @synthesize isStartRegister=_isStartRegister;
@property(nonatomic) _Bool isUseNotificationUpload; // @synthesize isUseNotificationUpload=_isUseNotificationUpload;
@property(nonatomic) _Bool isUploadOnWifi; // @synthesize isUploadOnWifi=_isUploadOnWifi;
@property(copy, nonatomic) NSString *tokenID; // @synthesize tokenID=_tokenID;
@property(copy, nonatomic) NSString *userID; // @synthesize userID=_userID;
@property(copy, nonatomic) NSString *channel; // @synthesize channel=_channel;
@property(nonatomic) unsigned short version; // @synthesize version=_version;
@property(copy, nonatomic) NSString *psw; // @synthesize psw=_psw;
@property(copy, nonatomic) NSString *RSAKey; // @synthesize RSAKey=_RSAKey;
@property(nonatomic) unsigned long long appKey; // @synthesize appKey=_appKey;
- (void).cxx_destruct;
- (void)setUploadTimeInterval:(long long)arg1 retryCount:(long long)arg2;
- (void)setOpenDynameicDomain:(_Bool)arg1 subUrl:(id)arg2;
- (void)stopTaskWithId:(unsigned int)arg1;
- (unsigned int)uploadWithLogType:(int)arg1 typeString:(id)arg2 data:(id)arg3 filePaths:(id)arg4 isNeedFailCache:(_Bool)arg5 completion:(CDUnknownBlockType)arg6;
- (unsigned int)uploadWithLogType:(int)arg1 typeString:(id)arg2 dictionary:(id)arg3 filePaths:(id)arg4 isNeedFailCache:(_Bool)arg5 completion:(CDUnknownBlockType)arg6;
- (unsigned int)uploadLogTypeString:(id)arg1 dictionary:(id)arg2 filePaths:(id)arg3 isNeedFailCache:(_Bool)arg4 completion:(CDUnknownBlockType)arg5;
- (unsigned int)uploadLogType:(int)arg1 data:(id)arg2 filePaths:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)uploadLogType:(int)arg1 data:(id)arg2 filePaths:(id)arg3;
- (unsigned int)uploadLogTypeString:(id)arg1 dictionary:(id)arg2 filePaths:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (unsigned int)uploadLogType:(int)arg1 dictionary:(id)arg2 filePaths:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)uploadLogType:(int)arg1 dictionary:(id)arg2 filePaths:(id)arg3;
- (void)setUploadSDKMaxFormSize:(unsigned int)arg1;
- (void)setUploadSDKChunkSize:(unsigned int)arg1;
- (void)setUploadSDKTokenURL:(id)arg1;
- (void)setOpenUploadFileCache:(_Bool)arg1;
- (void)cleanUploadFileCache;
- (void)setUploadAppKey:(id)arg1;
- (void)setIsTestNetWork:(_Bool)arg1;
- (void)setToken:(id)arg1;
- (void)setUid:(id)arg1;
- (void)setUploadURL:(id)arg1;
- (void)uploadFromNotification:(id)arg1;
- (void)setRetryCount:(unsigned long long)arg1;
- (void)setHTTPRequestTimeOut:(unsigned long long)arg1;
- (void)setUploadSDKSendNotification:(_Bool)arg1;
- (void)setUseNotificationUploadTask:(_Bool)arg1;
- (void)setOnlyUploadFileOnWifi:(_Bool)arg1;
- (void)cleanALLCacheTask;
- (void)setUploadSDKTokenRequestCount:(unsigned int)arg1;
- (void)setMaxCacheTaskCount:(unsigned long long)arg1;
- (_Bool)isRegister;
- (void)startWithAppKey:(unsigned long long)arg1 password:(id)arg2 RSAKey:(id)arg3 serverVersion:(unsigned short)arg4 channel:(id)arg5;
- (void)dealloc;
- (id)init;

@end

