//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "FBMQTTChannelCoordinating-Protocol.h"
#import "FBMQTTClientDelegate-Protocol.h"
#import "FBMQTTNetworkStatusChangedListening-Protocol.h"

@class FBMQTTChannelEndpointCapabilities, FBMQTTChannelTopicSubscribeListeningAnnouncer, FBMQTTClientActivityLogger, FBMQTTClientCapabilities, FBMQTTClientConfiguration, FBMQTTConfigurations, FBMQTTConnectionConfiguration, FBMQTTCredentialHashProcessor, FBMQTTExperiments, FBMQTTNetworkStatusChangedListeningAnnouncer, FBMQTTNetworkStatusMonitor, FBMQTTTopicListenersMap, FBTimer, JSONDecoder, NSDate, NSDictionary, NSError, NSMutableDictionary, NSMutableSet, NSNotificationCenter, NSNumber, NSString;
@protocol FBMQTTAnalyticsLogger, FBMQTTClient, FBMQTTClientFactory, FBMQTTNetworkStatusChangedListening, OS_dispatch_queue;

@interface FBMQTTClientManager : NSObject <FBMQTTClientDelegate, FBMQTTNetworkStatusChangedListening, FBMQTTChannelCoordinating>
{
    NSObject<OS_dispatch_queue> *_queue;
    NSObject<OS_dispatch_queue> *_clientQueue;
    NSObject<OS_dispatch_queue> *_jsonDecodingQueue;
    NSObject<OS_dispatch_queue> *_jsonEncodingQueue;
    int _runningState;
    NSNotificationCenter *_notificationCenter;
    FBMQTTChannelTopicSubscribeListeningAnnouncer *_topicSubscribeAnnouncer;
    _Bool _credentialsAndUserAgentFetched;
    FBMQTTExperiments *_experiments;
    NSDictionary *_appSpecificInfo;
    id <FBMQTTClientFactory> _clientFactory;
    _Bool _isFirstConnect;
    NSDate *_clientStartTime;
    FBMQTTClientConfiguration *_clientConfig;
    JSONDecoder *_jsonDecoder;
    NSString *_appSessionId;
    int _encodingFormat;
    FBMQTTCredentialHashProcessor *_credentialHashProcessor;
    NSNumber *_currentEncodedReferenceCode;
    long long _currentConnMessageId;
    FBMQTTNetworkStatusMonitor *_networkMonitor;
    FBMQTTNetworkStatusChangedListeningAnnouncer *_networkEventAnnouncer;
    id <FBMQTTNetworkStatusChangedListening> _networkEventListener;
    _Bool _inBackground;
    FBMQTTClientActivityLogger *_activityLogger;
    FBMQTTChannelEndpointCapabilities *_endpointCapabilities;
    CDUnknownBlockType _clientCreationBlock;
    NSString *_password;
    NSMutableDictionary *_usernameKeyValueDictionary;
    id <FBMQTTClient> _client;
    FBTimer *_connectTimer;
    FBTimer *_reconnectTimer;
    FBMQTTClientCapabilities *_clientCapabilities;
    FBMQTTTopicListenersMap *_topicListenersMap;
    NSMutableSet *_suspendedListeners;
    NSMutableSet *_publishers;
    NSMutableSet *_queuedPublishers;
    double _reconnectDelay;
    long long _reconnectMode;
    int _totalReconnectTimes;
    int _fastReconnectTimes;
    long long _bgPingState;
    int _totalBgPingSentSinceConnected;
    int _totalDisconnectOnBgPing;
    NSDate *_reconnectBgBackoffStartDate;
    NSString *_networkSessionId;
    FBMQTTConfigurations *_config;
    NSDate *_connectStartTime;
    NSDate *_connectSentTime;
    NSMutableSet *_subscribedTopicsOnConnect;
    CDUnknownBlockType _showOnlineBlock;
    NSError *_lastError;
    id <FBMQTTAnalyticsLogger> _analyticsLogger;
    _Bool _reachable;
    CDUnknownBlockType _credentialsAvailableBlock;
    CDUnknownBlockType _credentialsFetcherBlock;
    CDUnknownBlockType _userAgentFormatterBlock;
    long long _clientState;
    NSString *_mqttSessionId;
    FBMQTTConnectionConfiguration *_connectionConfiguration;
}

@property(copy) FBMQTTConnectionConfiguration *connectionConfiguration; // @synthesize connectionConfiguration=_connectionConfiguration;
@property(copy) NSString *mqttSessionId; // @synthesize mqttSessionId=_mqttSessionId;
@property long long clientState; // @synthesize clientState=_clientState;
@property _Bool reachable; // @synthesize reachable=_reachable;
@property(copy) CDUnknownBlockType userAgentFormatterBlock; // @synthesize userAgentFormatterBlock=_userAgentFormatterBlock;
@property(copy) CDUnknownBlockType credentialsFetcherBlock; // @synthesize credentialsFetcherBlock=_credentialsFetcherBlock;
@property(copy) CDUnknownBlockType credentialsAvailableBlock; // @synthesize credentialsAvailableBlock=_credentialsAvailableBlock;
- (void).cxx_destruct;
- (void)_logAnalyticsError:(CDUnknownBlockType)arg1;
- (void)_logConnect:(id)arg1 error:(id)arg2;
- (void)_logPublish:(id)arg1 publisher:(id)arg2 error:(id)arg3;
- (id)_getEncodingFormatString;
- (int)_getEncodingFormat;
- (void)_updateMessagePayloadIfNeeded:(id)arg1;
- (void)_setupMQTTPayloadFormat;
- (void)_publishNetworkOutgoingEvent:(long long)arg1 direction:(id)arg2 payloadSize:(unsigned long long)arg3 topic:(id)arg4;
- (id)_processConnAckPayload:(id)arg1;
- (id)_formatInvalidCredentialForLogging:(id)arg1;
- (void)_fetchCredentialsAndUserAgentThenStartClientIfCredentialsAvailableWithHostName:(id)arg1 caller:(id)arg2;
- (void)_dispatchToClientManagerQueueFromClientQueue:(CDUnknownBlockType)arg1;
- (void)_dispatchToClientQueueFromClientManagerQueue:(CDUnknownBlockType)arg1;
- (id)_createEncodedMessage:(id)arg1 payload:(id)arg2 qos:(int)arg3;
- (void)_postPatternSubscribedNotification:(id)arg1;
- (void)_subscribeToPatternsAndPostNotification:(id)arg1 topicSubscribedByConnect:(id)arg2;
- (void)_unsubscribeFromPatterns:(id)arg1;
- (void)_startWithCredentials:(id)arg1 userAgent:(id)arg2;
- (int)_keepAliveTimeoutForForegroundState:(_Bool)arg1;
- (void)_publishCombinedForegroundState:(_Bool)arg1 subscribeTopics:(id)arg2 unsubscribeTopics:(id)arg3;
- (void)_handleEligibilityCheckMessage:(id)arg1;
- (_Bool)_hasShouldRetryMessage;
- (void)_postNotificationWithName:(id)arg1 userInfo:(id)arg2;
- (void)_postConnectivityNotification;
- (_Bool)started;
- (void)mqttClientDidSubscribe:(id)arg1;
- (void)mqttClientDidReceivePingResponse:(id)arg1;
- (void)mqttClientDidReceiveDisconnect:(id)arg1;
- (void)mqttClientDidSendDisconnect:(id)arg1;
- (void)mqttClient:(id)arg1 didSendConnectWithPayloadSize:(unsigned long long)arg2;
- (void)mqttClientReconnectNow:(id)arg1;
- (void)mqttClient:(id)arg1 couldNotPublishMessage:(id)arg2 error:(id)arg3;
- (void)mqttClient:(id)arg1 didPublishMessage:(id)arg2;
- (void)mqttClientDidSendUnsubscribeMessage:(id)arg1;
- (void)mqttClientDidSendSubscribeMessage:(id)arg1;
- (void)mqttClientDidSendPingRequest:(id)arg1;
- (void)mqttClient:(id)arg1 didSendMessage:(id)arg2;
- (void)mqttClient:(id)arg1 didReceiveMessage:(id)arg2;
- (void)mqttClientDidDisconnect:(id)arg1 error:(id)arg2;
- (void)mqttClientCouldNotConnect:(id)arg1 error:(id)arg2;
- (void)_sendPendingPublishes;
- (void)mqttClient:(id)arg1 didConnectWithPayload:(id)arg2;
- (void)mqttClientDidSentConnect:(id)arg1;
- (void)publishForegroundState:(_Bool)arg1 subscribeTopics:(id)arg2 unsubscribeTopics:(id)arg3;
- (_Bool)_isAuthenticationFailure:(id)arg1;
- (void)onReconnectTimerFired;
- (void)scheduleReconnect;
- (void)triggerFastReconnect:(_Bool)arg1 resetReconnectDelay:(_Bool)arg2;
- (void)triggerBackOffReconnect;
- (void)cancelPublishers:(id)arg1 error:(id)arg2;
- (void)resetClient:(id)arg1;
- (void)onPublishTimeout:(id)arg1;
- (void)addPublisherToQueue:(id)arg1;
- (_Bool)_supportEnumTopic;
- (void)_convertPublisherToUseEnumTopicIfNeeded:(id)arg1;
- (_Bool)_doesListener:(id)arg1 haveBackgroundPolicy:(unsigned long long)arg2;
- (void)_continueInitializeClient;
- (void)_encodePublisherMessageThenDispatchToClient:(id)arg1;
- (id)_addListenersWithBackgroundPolicy:(unsigned long long)arg1;
- (id)_removeListenerWithBackgroundPolicy:(unsigned long long)arg1;
- (void)addPublisher:(id)arg1;
- (void)removeListener:(id)arg1;
- (void)removeListeners:(id)arg1;
- (void)subscribeListeners:(id)arg1;
- (void)addListener:(id)arg1;
- (void)addListeners:(id)arg1;
- (_Bool)_shouldAddListener:(id)arg1;
- (void)stop;
- (void)networkStatusChangedFrom:(long long)arg1 to:(long long)arg2;
- (void)onConnectTimeoutFired;
- (void)resumeForegroundKeepAlive;
- (void)pauseForegroundKeepAliveIfNeeded;
- (void)sendMQTTKeepAlive;
- (_Bool)triggerKeepAliveBackOffOnDisconnect;
- (void)setInBackground:(_Bool)arg1;
- (id)getClientSettings;
- (void)setClientKeepAliveTimes;
- (void)initializeClient;
- (void)resetConnectionConfig:(id)arg1;
- (void)updateRegionPreference:(id)arg1;
- (void)credentialsDidBecomeAvailable;
- (void)start;
- (id)endpointCapabilities;
- (id)connectionConfig;
- (id)config;
- (id)clientConfig;
- (unsigned long long)clientCapabilities;
- (id)mqttSessionIdForAnalytics;
- (long long)networkStatus;
- (_Bool)isStarted;
- (_Bool)isReachable;
- (_Bool)isConnected;
- (long long)state;
- (void)configureWithClientConfig:(id)arg1 customConnectionConfiguration:(id)arg2 clientCapabilities:(unsigned long long)arg3 endpointCapabilities:(unsigned long long)arg4 appSpecificInfo:(id)arg5 showOnLineOnForegroundBlock:(CDUnknownBlockType)arg6 credentialsAvailableBlock:(CDUnknownBlockType)arg7 credentialsFetcherBlock:(CDUnknownBlockType)arg8 userAgentFormatterBlock:(CDUnknownBlockType)arg9 analyticsLogger:(id)arg10;
- (void)dealloc;
- (void)createNewNetworkSessionId;
- (id)_debugInfoNoLock;
- (id)debugInfo;
- (id)initWithMQTTClientCreationBlock:(CDUnknownBlockType)arg1 clientFactory:(id)arg2 topicSubscribeAnnouncer:(id)arg3 notificationCenter:(id)arg4 experiments:(id)arg5 clientQueue:(id)arg6 queue:(id)arg7;
- (id)initWithExperiments:(id)arg1 clientFactory:(id)arg2 topicSubscribeAnnouncer:(id)arg3 queue:(id)arg4;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

