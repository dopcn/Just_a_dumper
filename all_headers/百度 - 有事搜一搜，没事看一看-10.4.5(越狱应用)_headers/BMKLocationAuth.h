//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

@class BMKLocationReachability, BMKURLSessionManager, NSString, NSTimer;
@protocol BMKLocationAuthDelegate;

@interface BMKLocationAuth : NSObject
{
    BMKLocationReachability *m_hostReach;
    id <BMKLocationAuthDelegate> _delegate;
    _Bool _isUpdating;
    int _wifiState;
    int _akRetryTime;
    long long _permisionState;
    NSTimer *_timer;
    NSTimer *_akRetryTimer;
    NSString *_cuid;
    NSString *_idfa;
    NSString *_sidfa;
    NSString *_ak;
    NSString *_token;
    long long _lastTokenTime;
    BMKURLSessionManager *_localManager;
}

+ (id)alloc;
+ (id)sharedInstance;
@property(retain, nonatomic) BMKURLSessionManager *localManager; // @synthesize localManager=_localManager;
@property(nonatomic) long long lastTokenTime; // @synthesize lastTokenTime=_lastTokenTime;
@property(retain, nonatomic) NSString *token; // @synthesize token=_token;
@property(retain, nonatomic) NSString *ak; // @synthesize ak=_ak;
@property(nonatomic) _Bool isUpdating; // @synthesize isUpdating=_isUpdating;
@property(copy, nonatomic) NSString *sidfa; // @synthesize sidfa=_sidfa;
@property(copy, nonatomic) NSString *idfa; // @synthesize idfa=_idfa;
@property(copy, nonatomic) NSString *cuid; // @synthesize cuid=_cuid;
@property(nonatomic) int akRetryTime; // @synthesize akRetryTime=_akRetryTime;
@property(retain, nonatomic) NSTimer *akRetryTimer; // @synthesize akRetryTimer=_akRetryTimer;
@property(nonatomic) int wifiState; // @synthesize wifiState=_wifiState;
@property(retain, nonatomic) NSTimer *timer; // @synthesize timer=_timer;
@property(readonly, nonatomic) long long permisionState; // @synthesize permisionState=_permisionState;
- (void).cxx_destruct;
- (void)sendNetworkStateRequestWithLocation:(id)arg1;
- (void)updateWifiToServer;
- (void)reachabilityChanged:(id)arg1;
- (void)checkToNet:(id)arg1 needDelegate:(_Bool)arg2;
- (void)retrtAK2;
- (void)retrtAK;
- (id)getToken;
- (void)checkPermisionWithKey:(id)arg1 authDelegate:(id)arg2;
- (void)dealloc;
- (id)init;

@end

