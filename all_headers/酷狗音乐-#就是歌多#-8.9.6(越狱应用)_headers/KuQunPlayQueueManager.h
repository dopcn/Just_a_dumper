//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "RemoteControl-Protocol.h"

@class NSConditionLock, NSMutableArray, NSString, SongInfo;

@interface KuQunPlayQueueManager : NSObject <RemoteControl>
{
    double _seekTime;
    _Bool _isInterruption;
    _Bool _isGroupVoice;
    long long _playQueueIndex;
    NSConditionLock *_playQueueIndexLock;
    struct StreamBase *_curStream;
    NSConditionLock *_streamLock;
    int _typeBeforeKuQun;
    _Bool _isVipGroup;
    _Bool _isPlayingKQSong;
    _Bool _isPlayingGroupNotice;
    _Bool _isCompletedDecode;
    _Bool _pauseByContribution;
    _Bool _isPlayingContributionSong;
    int _groupID;
    int _songNum;
    int _onlinePersonCount;
    NSString *_groupName;
    NSString *_groupImgUrl;
    long long _djOnline;
    NSMutableArray *_arSongsToPlay;
    NSMutableArray *_arSongsPlayed;
    SongInfo *_currentSong;
    NSMutableArray *_arSongsMsgHandled;
    NSString *_voiceMsgUrlOrPath;
    NSString *_stoppedVoiceMsgUrlOrPath;
    NSString *_playSourcePath;
    double _kqPersistentVolume;
    NSMutableArray *_arDelegates;
    NSMutableArray *_arGroupNoticeToplay;
    NSString *_msgTag;
    SongInfo *_contributionSong;
    SongInfo *_stoppedContributionSong;
    unsigned long long _playMode;
}

+ (id)sharedInstance;
@property(nonatomic) unsigned long long playMode; // @synthesize playMode=_playMode;
@property(retain, nonatomic) SongInfo *stoppedContributionSong; // @synthesize stoppedContributionSong=_stoppedContributionSong;
@property(retain, nonatomic) SongInfo *contributionSong; // @synthesize contributionSong=_contributionSong;
@property(copy, nonatomic) NSString *msgTag; // @synthesize msgTag=_msgTag;
@property(nonatomic) _Bool isPlayingContributionSong; // @synthesize isPlayingContributionSong=_isPlayingContributionSong;
@property(retain, nonatomic) NSMutableArray *arGroupNoticeToplay; // @synthesize arGroupNoticeToplay=_arGroupNoticeToplay;
@property(retain, nonatomic) NSMutableArray *arDelegates; // @synthesize arDelegates=_arDelegates;
@property(nonatomic) double kqPersistentVolume; // @synthesize kqPersistentVolume=_kqPersistentVolume;
@property(nonatomic) _Bool pauseByContribution; // @synthesize pauseByContribution=_pauseByContribution;
@property(copy, nonatomic) NSString *playSourcePath; // @synthesize playSourcePath=_playSourcePath;
@property(nonatomic) _Bool isCompletedDecode; // @synthesize isCompletedDecode=_isCompletedDecode;
@property(copy, nonatomic) NSString *stoppedVoiceMsgUrlOrPath; // @synthesize stoppedVoiceMsgUrlOrPath=_stoppedVoiceMsgUrlOrPath;
@property(copy, nonatomic) NSString *voiceMsgUrlOrPath; // @synthesize voiceMsgUrlOrPath=_voiceMsgUrlOrPath;
@property(nonatomic) _Bool isPlayingGroupNotice; // @synthesize isPlayingGroupNotice=_isPlayingGroupNotice;
@property(nonatomic) _Bool isPlayingKQSong; // @synthesize isPlayingKQSong=_isPlayingKQSong;
@property(retain, nonatomic) NSMutableArray *arSongsMsgHandled; // @synthesize arSongsMsgHandled=_arSongsMsgHandled;
@property(retain, nonatomic) SongInfo *currentSong; // @synthesize currentSong=_currentSong;
@property(retain, nonatomic) NSMutableArray *arSongsPlayed; // @synthesize arSongsPlayed=_arSongsPlayed;
@property(retain, nonatomic) NSMutableArray *arSongsToPlay; // @synthesize arSongsToPlay=_arSongsToPlay;
@property(nonatomic) int onlinePersonCount; // @synthesize onlinePersonCount=_onlinePersonCount;
@property(nonatomic) _Bool isVipGroup; // @synthesize isVipGroup=_isVipGroup;
@property(nonatomic) long long djOnline; // @synthesize djOnline=_djOnline;
@property(nonatomic) int songNum; // @synthesize songNum=_songNum;
@property(copy, nonatomic) NSString *groupImgUrl; // @synthesize groupImgUrl=_groupImgUrl;
@property(copy, nonatomic) NSString *groupName; // @synthesize groupName=_groupName;
@property(nonatomic) int groupID; // @synthesize groupID=_groupID;
- (void).cxx_destruct;
- (void)resetKQBackgroundVolume;
@property(readonly, nonatomic) int beforeTypeWithKuQun;
- (void)playUGCSongWithoutCheckNet:(id)arg1;
- (void)playUgcSong:(id)arg1;
- (void)setPlayModeTpye:(int *)arg1 toIntValue:(int)arg2;
- (void)deleteStreamErrorFile:(id)arg1 songInfo:(id)arg2;
- (id)currentPlayingContributionSong;
- (void)endAPMWithPlayStatus:(CDStruct_51d7d1dc)arg1 withNotification:(id)arg2;
- (void)APMStartWithIsManal:(_Bool)arg1;
- (id)p_PervSong;
- (_Bool)isPlaySameWithPrevSong;
- (_Bool)askUseWifiOnly:(id)arg1;
- (_Bool)checkIfSongMsgHandled:(id)arg1;
- (void)tryToHandleCurrentSongDeleteMsg:(id)arg1 andSongHash:(id)arg2 andLeftSongCount:(int)arg3;
- (void)needToRefreshDjSongList;
- (void)tryToHandleDjCurrentSongDeleteMsg:(id)arg1 andSongHash:(id)arg2 andIsCurrentSong:(_Bool)arg3 andOperaterId:(id)arg4;
- (void)tryToHandleSongSwitchMsg:(id)arg1 andSongHash:(id)arg2;
- (void)tryToHandleDjSongSwitchMsg:(id)arg1 andSongHash:(id)arg2 andIntoDjMode:(_Bool)arg3;
- (void)enterBackground:(id)arg1;
- (void)endInterruptionWithType:(_Bool)arg1;
- (void)beginInterruptionWithType:(_Bool)arg1;
- (void)recordNotifyCallback:(id)arg1;
- (void)interruptionNotifyCallback:(id)arg1;
- (void)routeChangedNotifyCallback:(id)arg1;
- (void)refreshDjSongList;
- (void)songPlayToNextWithIsPlayDjSong:(_Bool)arg1;
- (void)firstOutDjModeWithUserId:(id)arg1;
- (void)firstIntoDjModeWithUserId:(id)arg1;
- (void)djModeChangeState:(unsigned long long)arg1;
- (void)needRefreshSongList;
- (void)kqSongsStoped;
- (void)contributionSongStoped;
- (void)contributionSongStarted;
- (void)VoiceMessageStoped;
- (void)groupInfoChanged:(id)arg1;
- (void)voiceMessageStarted;
- (void)roleInGroupChanged:(_Bool)arg1;
- (void)songNumChanged;
- (void)groupIsBuffering:(_Bool)arg1;
- (void)groupPaused:(_Bool)arg1;
- (void)notifyPlaySongChanged;
- (void)removePlayStatusChangeDelegage:(id)arg1;
- (void)addPlayStatusChangeDelegage:(id)arg1;
- (void)resetKQPlayVolume;
- (void)resumeVolume;
- (void)KQVoicePlayStateChange:(id)arg1;
- (void)KQTryListenPlayStateChange:(id)arg1;
- (void)KQPlayStateChange:(id)arg1;
- (void)refreshSongWithRadioLiveSong:(id)arg1;
- (void)handleNotification:(id)arg1;
- (_Bool)kgRemoteControlReceivedWithEvent:(id)arg1;
- (void)playCurrentSongOnServer;
- (_Bool)checkIfInChina;
- (void)playOrPause;
- (void)pausePlay;
- (long long)stopVoiceMessage;
- (void)stopAllVoiceMessage;
- (void)stopVoiceMessageWhileQuitGroupChat;
- (void *)getStreamWithUrl:(id)arg1;
- (void)playGroupNotice:(id)arg1;
- (void)playVoiceMessageFile:(id)arg1 andIsGroup:(_Bool)arg2;
- (void)playVoiceMessage:(id)arg1 andIsGroup:(_Bool)arg2;
- (void)playContributionSongWithoutCheckNet:(id)arg1 continuePlayer:(_Bool)arg2;
- (void)playContributionSong:(id)arg1 continuePlayer:(_Bool)arg2;
- (void)switchSongWhenCurrentSongDeleted:(id)arg1;
- (void)switchToPlaySong:(id)arg1 andIsRadioSong:(_Bool)arg2;
- (void)checkSongForSwitch:(id)arg1 andIsRadioSong:(_Bool)arg2;
- (void)switchToDjMode:(unsigned long long)arg1 Song:(id)arg2 andUserId:(id)arg3;
- (void)playlistOnServerReset;
- (void)playlistOnServerEdited;
- (void)contributinsongPassed;
- (void)kqPlaylistChanged:(id)arg1;
- (void)djModeChangeWithMode:(unsigned long long)arg1;
- (void)stopPlay;
- (_Bool)isInKuQunMode;
- (void)obtainNextSongsIfNeeded;
- (void)playNextSong;
- (_Bool)isDjOnline;
- (_Bool)isDjMode;
- (void)unActiveRemoteControl;
- (void)activeRemoteControl;
- (void)playSong:(id)arg1 andIsManul:(_Bool)arg2 andIsRadioSong:(_Bool)arg3;
- (void)playCurrentSong;
- (void)addSongToPlayed:(id)arg1;
- (void)addSongs:(id)arg1;
- (void)obtainPlayListWithoutPlay:(int)arg1;
- (void)PlaySongs:(id)arg1 seekToTime:(double)arg2 andIsRadioSong:(_Bool)arg3;
- (long long)makePlayQueueIndex;
- (id)currentRealPlayPath:(id)arg1;
- (void)userLoginOut;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

