//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "SkinViewController.h"

#import "BEActionSheetDelegate-Protocol.h"
#import "CommentInputViewDelegate-Protocol.h"
#import "ImageManagerDelegate-Protocol.h"
#import "QMBulletSendGiftPluginDelegate-Protocol.h"
#import "QMJsMessageDelegate-Protocol.h"
#import "QMLSCommentInputViewDelegate-Protocol.h"
#import "QMMenuViewDelegate-Protocol.h"
#import "QMWebViewDelegate-Protocol.h"
#import "QQJSWebViewProtocol-Protocol.h"
#import "UIActionSheetDelegate-Protocol.h"
#import "UITextViewDelegate-Protocol.h"

@class BETouchView, CommentInputView, GenericWebViewControllerTimestampInfo, JSResponseCallbackObject, NSDate, NSDictionary, NSMutableDictionary, NSString, NSTimer, OnLineSearchViewController, QMBulletSendGiftPlugin, QMLSCommentInputView, QMLabel, QMMenuView, QMWebView, QMessageInputView, SingleHourglass, UIActivityIndicatorView, UIButton, UIImageView, URLImageView, WVJBResponseCallbackObject;

@interface GenericWebViewController : SkinViewController <BEActionSheetDelegate, QMMenuViewDelegate, CommentInputViewDelegate, UIActionSheetDelegate, ImageManagerDelegate, QMWebViewDelegate, QMJsMessageDelegate, UITextViewDelegate, QQJSWebViewProtocol, QMBulletSendGiftPluginDelegate, QMLSCommentInputViewDelegate>
{
    struct CGRect _viewFrame;
    UIButton *_backwardBtn;
    UIButton *_forwardBtn;
    BETouchView *_bottomBar;
    UIButton *_refreshBtn;
    UIButton *_shareBtn;
    UIButton *_customBtn;
    UIImageView *_redPoint;
    UIActivityIndicatorView *_loadingActivityView;
    NSString *_rightBtnTitle;
    _Bool showPlayAndReturnBtn;
    _Bool _showLeftButton;
    _Bool isLocalHtml;
    NSDate *lastDate;
    _Bool isLoadAgain;
    _Bool slideShow;
    long long pageCount;
    _Bool _isWebGoBack;
    _Bool _scrollsToTop;
    _Bool _isFromScanCode;
    _Bool _isFlashWindowWeb;
    _Bool _isWebPPTVC;
    _Bool _isHideHeader;
    _Bool _hideMiniPlayer;
    _Bool _isAllowedHideRightBtn;
    _Bool _isHideBottomBar;
    _Bool _useSelfNavigation;
    _Bool _webMediaPlaybackRequiresUserAction;
    _Bool _isForceResetWebViewEdgeInsets;
    _Bool _isTabSubView;
    _Bool _simpleWebview;
    _Bool _notScroll;
    _Bool _notSkinChange;
    _Bool _notUsePopGestureRecognize;
    _Bool _hideStatusBar;
    _Bool _hideHeaderBgView;
    _Bool _useCustomeRightBtn;
    _Bool _disableScrollBounces;
    _Bool _isMoviePlayerEnterFullScreen;
    _Bool _useDefaultBgImage;
    _Bool _isForceToLoadUrl;
    _Bool _isWebViewDidLoad;
    _Bool _shouldShowAlertWhenClose;
    _Bool _hasReportLoadStatus;
    float visibleTopOffset;
    int _localTimeOut;
    float _specialinfoViewTopOffset;
    int _urlShareType;
    QMWebView *genericWebView;
    id onFinishedCallbackTarget;
    SEL onFinishedCallbackSelector;
    NSString *returnBtnTitle;
    NSMutableDictionary *responseCallbacks;
    NSString *_webPageUrl;
    unsigned long long _webViewType;
    long long _lastStatusBarStyle;
    CDUnknownBlockType _genericeWebCallback;
    NSString *_currentFromIDStr;
    OnLineSearchViewController *_onLineSearchVC;
    QMessageInputView *_messageInputView;
    CommentInputView *_commentInputView;
    QMLSCommentInputView *_hornInputView;
    WVJBResponseCallbackObject *_jsResponseCallback;
    JSResponseCallbackObject *_mClientResponseCallback;
    JSResponseCallbackObject *_mClientActionBtnCallback;
    double _previousTextViewContentHeight;
    NSDictionary *_actionSheetIndexToH5IconDict;
    NSMutableDictionary *_hasSolvedPlayTask;
    QMBulletSendGiftPlugin *_bulletSendGiftPlugin;
    NSDictionary *_mClientShareDic;
    CDUnknownBlockType _navBackCallBackBlock;
    CDUnknownBlockType _navCloseCallBackBlock;
    CDUnknownBlockType _noNetBlock;
    CDUnknownBlockType _didSendCommentCallBackBlock;
    NSString *_noNetButtonTitle;
    long long _visibility;
    long long _headerColorType;
    long long _headerBackgroundColorType;
    long long _closeButtonType;
    long long _statusBarType;
    URLImageView *_webRightBtnImageView;
    NSString *_webRightBtnImageName;
    QMLabel *_webRightBtnLabel;
    NSString *_jsTitle;
    QMMenuView *_popUpMenuView;
    NSDictionary *_dictShareData;
    unsigned long long _currentState;
    NSTimer *_timeoutTimer;
    NSString *_imgSrc;
    NSString *_closeAlertTitle;
    NSString *_closeAlertExitText;
    NSString *_closeAlertNotExitText;
    SingleHourglass *_openHourGlass;
    GenericWebViewControllerTimestampInfo *_tagTiInfo;
    unsigned long long _qmWebCoreType;
    struct UIEdgeInsets _webViewEdgeInsets;
}

+ (void)fixedWebViewCrashOfiOS8;
+ (struct CGSize)menuButtonSize;
+ (double)menuButtonPadding;
@property(nonatomic) unsigned long long qmWebCoreType; // @synthesize qmWebCoreType=_qmWebCoreType;
@property(retain, nonatomic) GenericWebViewControllerTimestampInfo *tagTiInfo; // @synthesize tagTiInfo=_tagTiInfo;
@property(retain, nonatomic) SingleHourglass *openHourGlass; // @synthesize openHourGlass=_openHourGlass;
@property(nonatomic) _Bool hasReportLoadStatus; // @synthesize hasReportLoadStatus=_hasReportLoadStatus;
@property(retain, nonatomic) NSString *closeAlertNotExitText; // @synthesize closeAlertNotExitText=_closeAlertNotExitText;
@property(retain, nonatomic) NSString *closeAlertExitText; // @synthesize closeAlertExitText=_closeAlertExitText;
@property(retain, nonatomic) NSString *closeAlertTitle; // @synthesize closeAlertTitle=_closeAlertTitle;
@property(nonatomic) _Bool shouldShowAlertWhenClose; // @synthesize shouldShowAlertWhenClose=_shouldShowAlertWhenClose;
@property(nonatomic) int urlShareType; // @synthesize urlShareType=_urlShareType;
@property(retain, nonatomic) NSString *imgSrc; // @synthesize imgSrc=_imgSrc;
@property(retain, nonatomic) NSTimer *timeoutTimer; // @synthesize timeoutTimer=_timeoutTimer;
@property(nonatomic) unsigned long long currentState; // @synthesize currentState=_currentState;
@property(nonatomic) _Bool isWebViewDidLoad; // @synthesize isWebViewDidLoad=_isWebViewDidLoad;
@property(nonatomic) _Bool isForceToLoadUrl; // @synthesize isForceToLoadUrl=_isForceToLoadUrl;
@property(retain, nonatomic) NSDictionary *dictShareData; // @synthesize dictShareData=_dictShareData;
@property(retain, nonatomic) QMMenuView *popUpMenuView; // @synthesize popUpMenuView=_popUpMenuView;
@property(retain, nonatomic) NSString *jsTitle; // @synthesize jsTitle=_jsTitle;
@property(nonatomic) _Bool useDefaultBgImage; // @synthesize useDefaultBgImage=_useDefaultBgImage;
@property(retain, nonatomic) QMLabel *webRightBtnLabel; // @synthesize webRightBtnLabel=_webRightBtnLabel;
@property(retain, nonatomic) NSString *webRightBtnImageName; // @synthesize webRightBtnImageName=_webRightBtnImageName;
@property(retain, nonatomic) URLImageView *webRightBtnImageView; // @synthesize webRightBtnImageView=_webRightBtnImageView;
@property(nonatomic) _Bool isMoviePlayerEnterFullScreen; // @synthesize isMoviePlayerEnterFullScreen=_isMoviePlayerEnterFullScreen;
@property(nonatomic) _Bool disableScrollBounces; // @synthesize disableScrollBounces=_disableScrollBounces;
@property(nonatomic) _Bool useCustomeRightBtn; // @synthesize useCustomeRightBtn=_useCustomeRightBtn;
@property(nonatomic) long long statusBarType; // @synthesize statusBarType=_statusBarType;
@property(nonatomic) long long closeButtonType; // @synthesize closeButtonType=_closeButtonType;
@property(nonatomic) long long headerBackgroundColorType; // @synthesize headerBackgroundColorType=_headerBackgroundColorType;
@property(nonatomic) long long headerColorType; // @synthesize headerColorType=_headerColorType;
@property(nonatomic) _Bool hideHeaderBgView; // @synthesize hideHeaderBgView=_hideHeaderBgView;
@property(nonatomic) _Bool hideStatusBar; // @synthesize hideStatusBar=_hideStatusBar;
@property(nonatomic) _Bool notUsePopGestureRecognize; // @synthesize notUsePopGestureRecognize=_notUsePopGestureRecognize;
@property(nonatomic) long long visibility; // @synthesize visibility=_visibility;
@property(retain, nonatomic) NSString *noNetButtonTitle; // @synthesize noNetButtonTitle=_noNetButtonTitle;
@property(copy, nonatomic) CDUnknownBlockType didSendCommentCallBackBlock; // @synthesize didSendCommentCallBackBlock=_didSendCommentCallBackBlock;
@property(copy, nonatomic) CDUnknownBlockType noNetBlock; // @synthesize noNetBlock=_noNetBlock;
@property(copy, nonatomic) CDUnknownBlockType navCloseCallBackBlock; // @synthesize navCloseCallBackBlock=_navCloseCallBackBlock;
@property(copy, nonatomic) CDUnknownBlockType navBackCallBackBlock; // @synthesize navBackCallBackBlock=_navBackCallBackBlock;
@property(retain, nonatomic) NSDictionary *mClientShareDic; // @synthesize mClientShareDic=_mClientShareDic;
@property(nonatomic) _Bool notSkinChange; // @synthesize notSkinChange=_notSkinChange;
@property(nonatomic) _Bool notScroll; // @synthesize notScroll=_notScroll;
@property(nonatomic) _Bool simpleWebview; // @synthesize simpleWebview=_simpleWebview;
@property(retain, nonatomic) QMBulletSendGiftPlugin *bulletSendGiftPlugin; // @synthesize bulletSendGiftPlugin=_bulletSendGiftPlugin;
@property(retain, nonatomic) NSMutableDictionary *hasSolvedPlayTask; // @synthesize hasSolvedPlayTask=_hasSolvedPlayTask;
@property(retain, nonatomic) NSDictionary *actionSheetIndexToH5IconDict; // @synthesize actionSheetIndexToH5IconDict=_actionSheetIndexToH5IconDict;
@property(nonatomic) double previousTextViewContentHeight; // @synthesize previousTextViewContentHeight=_previousTextViewContentHeight;
@property(retain, nonatomic) JSResponseCallbackObject *mClientActionBtnCallback; // @synthesize mClientActionBtnCallback=_mClientActionBtnCallback;
@property(retain, nonatomic) JSResponseCallbackObject *mClientResponseCallback; // @synthesize mClientResponseCallback=_mClientResponseCallback;
@property(retain, nonatomic) WVJBResponseCallbackObject *jsResponseCallback; // @synthesize jsResponseCallback=_jsResponseCallback;
@property(retain, nonatomic) QMLSCommentInputView *hornInputView; // @synthesize hornInputView=_hornInputView;
@property(retain, nonatomic) CommentInputView *commentInputView; // @synthesize commentInputView=_commentInputView;
@property(retain, nonatomic) QMessageInputView *messageInputView; // @synthesize messageInputView=_messageInputView;
@property(nonatomic) float specialinfoViewTopOffset; // @synthesize specialinfoViewTopOffset=_specialinfoViewTopOffset;
@property(retain) OnLineSearchViewController *onLineSearchVC; // @synthesize onLineSearchVC=_onLineSearchVC;
@property(retain, nonatomic) NSString *currentFromIDStr; // @synthesize currentFromIDStr=_currentFromIDStr;
@property(nonatomic) _Bool isTabSubView; // @synthesize isTabSubView=_isTabSubView;
@property(nonatomic) struct UIEdgeInsets webViewEdgeInsets; // @synthesize webViewEdgeInsets=_webViewEdgeInsets;
@property(nonatomic) _Bool isForceResetWebViewEdgeInsets; // @synthesize isForceResetWebViewEdgeInsets=_isForceResetWebViewEdgeInsets;
@property(nonatomic) _Bool webMediaPlaybackRequiresUserAction; // @synthesize webMediaPlaybackRequiresUserAction=_webMediaPlaybackRequiresUserAction;
@property(copy, nonatomic) CDUnknownBlockType genericeWebCallback; // @synthesize genericeWebCallback=_genericeWebCallback;
@property(nonatomic) long long lastStatusBarStyle; // @synthesize lastStatusBarStyle=_lastStatusBarStyle;
@property(nonatomic) unsigned long long webViewType; // @synthesize webViewType=_webViewType;
@property(nonatomic) _Bool useSelfNavigation; // @synthesize useSelfNavigation=_useSelfNavigation;
@property(nonatomic) _Bool isHideBottomBar; // @synthesize isHideBottomBar=_isHideBottomBar;
@property(nonatomic) _Bool isAllowedHideRightBtn; // @synthesize isAllowedHideRightBtn=_isAllowedHideRightBtn;
@property(nonatomic) _Bool hideMiniPlayer; // @synthesize hideMiniPlayer=_hideMiniPlayer;
@property(nonatomic) _Bool isHideHeader; // @synthesize isHideHeader=_isHideHeader;
@property(nonatomic) int localTimeOut; // @synthesize localTimeOut=_localTimeOut;
@property(nonatomic) _Bool isWebPPTVC; // @synthesize isWebPPTVC=_isWebPPTVC;
@property(nonatomic) _Bool isFlashWindowWeb; // @synthesize isFlashWindowWeb=_isFlashWindowWeb;
@property(nonatomic) _Bool isFromScanCode; // @synthesize isFromScanCode=_isFromScanCode;
@property(copy, nonatomic) NSString *webPageUrl; // @synthesize webPageUrl=_webPageUrl;
@property(nonatomic) _Bool scrollsToTop; // @synthesize scrollsToTop=_scrollsToTop;
@property(retain, nonatomic) NSMutableDictionary *responseCallbacks; // @synthesize responseCallbacks;
@property(nonatomic) float visibleTopOffset; // @synthesize visibleTopOffset;
@property(nonatomic) long long pageCount; // @synthesize pageCount;
@property(nonatomic) _Bool slideShow; // @synthesize slideShow;
@property(retain, nonatomic) NSString *rightBtnTitle; // @synthesize rightBtnTitle=_rightBtnTitle;
@property(nonatomic) _Bool isLocalHtml; // @synthesize isLocalHtml;
@property(copy, nonatomic) NSString *returnBtnTitle; // @synthesize returnBtnTitle;
@property(nonatomic) _Bool showLeftButton; // @synthesize showLeftButton=_showLeftButton;
@property(nonatomic) _Bool showPlayAndReturnBtn; // @synthesize showPlayAndReturnBtn;
@property(nonatomic) SEL onFinishedCallbackSelector; // @synthesize onFinishedCallbackSelector;
@property(nonatomic) __weak id onFinishedCallbackTarget; // @synthesize onFinishedCallbackTarget;
@property(retain, nonatomic) QMWebView *genericWebView; // @synthesize genericWebView;
- (void).cxx_destruct;
- (long long)addTag:(id)arg1 withTimeStamp:(long long)arg2 withUrl:(id)arg3;
- (void)reportWebviewLoadStatus:(id)arg1;
- (void)onAppWillEnterBackground;
- (void)onAppWillEnterForeground;
- (void)scrollViewWillEndDragging:(id)arg1 withVelocity:(struct CGPoint)arg2 targetContentOffset:(inout struct CGPoint *)arg3;
- (void)scrollViewDidScroll:(id)arg1;
- (void)executeJsScript:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (id)getPageURL;
- (int)_getUrlShareType:(id)arg1;
- (void)_handleResetUserLimitNotification:(id)arg1;
- (void)_resetCookies:(id)arg1;
- (void)tabWillBecomeActive;
- (void)tabWillResignActive;
- (void)removeVIPObserver;
- (void)addVIPObserver;
- (void)showCloseConfirmAlertWithTitle:(id)arg1 ExitText:(id)arg2 NotExitText:(id)arg3 shouldShow:(_Bool)arg4;
- (void)setMiniPlayerVisibility:(_Bool)arg1;
- (void)showWebFailedView:(id)arg1;
- (void)loadRequest:(id)arg1;
- (void)imageSavedToPhotosAlbum:(id)arg1 didFinishSavingWithError:(id)arg2 contextInfo:(void *)arg3;
- (void)saveImageToPhotos:(id)arg1;
- (void)onImagetWithInfo:(id)arg1 error:(id)arg2;
- (void)onImagetWithInfo:(id)arg1 Image:(id)arg2;
- (void)saveImageByUrl:(id)arg1;
- (void)actionSheet:(id)arg1 clickedButtonAtIndex:(long long)arg2;
- (void)onWebViewLongPressed:(id)arg1;
- (_Bool)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
- (void)handleJsBridgeRequest_sendGift:(id)arg1 responseCallback:(id)arg2;
- (void)handleJsBridgeRequest_uploadGalleryPhoto:(id)arg1 responseCallback:(id)arg2;
- (void)handleJsBridgeRequest_savePhoto:(id)arg1 responseCallback:(id)arg2;
- (void)handleJsBridgeRequest_resetUserLimit:(id)arg1 responseCallback:(id)arg2;
- (void)handleJsBridgeRequest_resetCookie:(id)arg1 responseCallback:(id)arg2;
- (void)handleJsBridgeRequest_update_songs_flag:(id)arg1 responseCallback:(id)arg2;
- (void)handleJsBridgeRequest_sharePoster:(id)arg1 responseCallback:(id)arg2;
- (void)handleJsBridgeRequest_editPoster:(id)arg1 responseCallback:(id)arg2;
- (void)handleJsBridgeRequest_playSongByUrl:(id)arg1 responseCallback:(id)arg2;
- (void)handleJsBridgeRequest_showTips:(id)arg1 responseCallback:(id)arg2;
- (void)handleJsBridgeRequest_gotoSongComment:(id)arg1 responseCallback:(id)arg2;
- (void)handleJsBridgeRequest_actionSheet:(id)arg1 responseCallback:(id)arg2;
- (void)handleJsBridgeRequest_theme_detail:(id)arg1 responseCallback:(id)arg2;
- (void)handleJsBridgeRequest_showkeyboard:(id)arg1 responseCallback:(id)arg2;
- (void)handleJsBridgeRequest_initMenu:(id)arg1 responseCallback:(id)arg2;
- (void)handleJsBridgeRequest_native_open_vip:(id)arg1 responseCallback:(id)arg2;
- (void)handleJsBridgeRequest_reportSourceId:(id)arg1 responseCallback:(id)arg2;
- (void)handleJsBridgeRequest_check_liuliang_count:(id)arg1 responseCallback:(id)arg2;
- (void)handleJsBridgeRequest_native_query_payway:(id)arg1 responseCallback:(id)arg2;
- (void)handleJsBridgeRequest_qplay_query:(id)arg1 responseCallback:(id)arg2;
- (void)handleJsBridgeRequest_jumptoradio:(id)arg1 responseCallback:(id)arg2;
- (void)handleJsBridgeRequest_hideMiniPlayer:(id)arg1 responseCallback:(id)arg2;
- (void)handleJsBridgeRequest_showMiniPlayer:(id)arg1 responseCallback:(id)arg2;
- (void)handleJsBridgeRequest_ipadpage:(id)arg1 responseCallback:(id)arg2;
- (void)handleJsBridgeRequest_query_radio:(id)arg1 responseCallback:(id)arg2;
- (void)handleJsBridgeRequest_data_size:(id)arg1 responseCallback:(id)arg2;
- (void)handleJsBridgeRequest_data_clear:(id)arg1 responseCallback:(id)arg2;
- (void)handleJsBridgeRequest_data_delet:(id)arg1 responseCallback:(id)arg2;
- (void)handleJsBridgeRequest_data_get:(id)arg1 responseCallback:(id)arg2;
- (void)handleJsBridgeRequest_data_set:(id)arg1 responseCallback:(id)arg2;
- (void)handleJsBridgeRequest_register_musicstate:(id)arg1 responseCallback:(id)arg2;
- (void)handleJsBridgeRequest_query_songlist:(id)arg1 responseCallback:(id)arg2;
- (void)handleJsBridgeRequest_query_songinfo:(id)arg1 responseCallback:(id)arg2;
- (void)handleJsBridgeRequest_calldown:(id)arg1 responseCallback:(id)arg2;
- (void)handleJsBridgeRequest_music_playnext:(id)arg1 responseCallback:(id)arg2;
- (void)handleJsBridgeRequest_music_playpre:(id)arg1 responseCallback:(id)arg2;
- (void)handleJsBridgeRequest_music_resume:(id)arg1 responseCallback:(id)arg2;
- (void)handleJsBridgeRequest_music_pause:(id)arg1 responseCallback:(id)arg2;
- (void)handleJsBridgeRequest_music_playlist:(id)arg1 responseCallback:(id)arg2;
- (void)handleJsBridgeRequest_playradio:(id)arg1 responseCallback:(id)arg2;
- (void)handleJsBridgeRequest_set_right_btn:(id)arg1 responseCallback:(id)arg2;
- (void)handleJsBridgeRequest_callshare:(id)arg1 responseCallback:(id)arg2;
- (void)handleJsBridgeRequest_recognize:(id)arg1 responseCallback:(id)arg2;
- (void)handleJsBridgeRequest_webPageInnerFailed:(id)arg1 responseCallback:(id)arg2;
- (void)handleJsBridgeRequest_update_mv_cmts:(id)arg1 responseCallback:(id)arg2;
- (void)handleJsBridgeRequest_qplay_choose:(id)arg1 responseCallback:(id)arg2;
- (void)handleJsBridgeRequest_goto_dts:(id)arg1 responseCallback:(id)arg2;
- (void)handleJsBridgeRequest_qplay_autoset:(id)arg1 responseCallback:(id)arg2;
- (void)handleJsBridgeRequest_qplay_set:(id)arg1 responseCallback:(id)arg2;
- (void)handleJsBridgeRequest_liveplay:(id)arg1 responseCallback:(id)arg2;
- (void)handleJsBridgeRequest_goMusicHall:(id)arg1 responseCallback:(id)arg2;
- (void)handleJsBridgeRequest_refreshTitle:(id)arg1 responseCallback:(id)arg2;
- (void)handleJsBridgeRequest_gomusiccircle:(id)arg1 responseCallback:(id)arg2;
- (void)handleJsBridgeRequest_newWebview:(id)arg1 responseCallback:(id)arg2;
- (void)handleJsBridgeRequest_finishWebView:(id)arg1 responseCallback:(id)arg2;
- (void)handleJsBridgeRequest_returnWebview:(id)arg1 responseCallback:(id)arg2;
- (void)handleJsBridgeRequest_closeWebview:(id)arg1 responseCallback:(id)arg2;
- (void)handleJsBridgeRequest_controlbar:(id)arg1 responseCallback:(id)arg2;
- (void)handleJsBridgeRequest_share:(id)arg1 responseCallback:(id)arg2;
- (id)getIconName:(id)arg1;
- (id)findWebBrowserView;
- (void)evaluateJavaScriptStringFromFile:(id)arg1 ofType:(id)arg2;
- (void)evaluateJavaScript:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)evaluateJavaScript:(id)arg1;
- (id)strVCtype;
- (id)navigationController;
- (int)vcType;
- (void)playStatusDidChange:(id)arg1;
- (void)resetNavTitleFrame:(struct CGRect)arg1;
- (void)refreshTitle;
- (_Bool)dismissMeWhenOnBackground;
- (void)onFinishCallback;
- (_Bool)handleJSCMD:(id)arg1 withParam:(id)arg2 responseCallback:(id)arg3;
- (void)handleJSCMD:(id)arg1 withParam:(id)arg2;
- (void)showControlBar:(id)arg1 animated:(_Bool)arg2;
- (id)removeAllVideoTagJsString;
- (_Bool)shouldRemoveAllVideoTag;
- (void)setShareBtnData:(id)arg1;
- (void)hideShareBtn;
- (void)showShareBtn;
- (void)showDefaultShareBtnForMClient:(id)arg1;
- (void)showDefaultShareBtn:(id)arg1;
- (_Bool)checkAndShowDefaultShareBtn;
- (_Bool)isShowingRightBtn;
- (void)addVideoSeekEvent;
- (void)webViewDidFinishLoad:(id)arg1;
- (float)infoViewTopOffset;
- (void)webView:(id)arg1 onTitleChange:(id)arg2;
- (void)webView:(id)arg1 didFailLoadWithError:(id)arg2;
- (void)webViewDidStartLoad:(id)arg1;
- (_Bool)webView:(id)arg1 shouldStartLoadWithRequest:(id)arg2 navigationType:(long long)arg3;
- (void)hideBottomBar;
- (void)disableChangeWebViewFrame;
- (_Bool)checkUrlInWhiteList:(id)arg1;
- (_Bool)pageSourceViewEnabled;
- (void)loadData:(id)arg1 MIMEType:(id)arg2 textEncodingName:(id)arg3 baseURL:(id)arg4;
- (void)updateNavigateBtnAvailability;
- (void)passiveSharePage:(id)arg1 responseCallback:(id)arg2;
- (void)rightButtonClicked:(id)arg1;
- (void)MClientShareWebPage;
- (void)sharePage:(id)arg1;
- (id)presentFromVC;
- (void)reloadPage:(id)arg1;
- (void)reloadWebPageWithUrl:(id)arg1;
- (void)goBackward:(id)arg1;
- (void)backAction:(id)arg1;
- (void)popGestureRecognize;
- (void)back:(id)arg1;
- (void)forceClose:(id)arg1;
- (void)closeWebView:(id)arg1;
- (void)goForward:(id)arg1;
- (void)loadWebPage;
- (void)hideLoadingView;
- (void)showLoadingView;
- (void)onTouchUpInsideViewCustomizedNoNetButton:(id)arg1;
- (id)noNetViewCustomButton;
- (void)headerCancel:(id)arg1;
- (void)doHandlePushComming:(id)arg1;
- (void)genericWebViewShowNetErrView;
- (id)topBackImage;
- (void)showTopBackBgView;
- (void)genericWebViewShowNetErrWithResult:(int)arg1 withTopOffset:(double)arg2;
- (_Bool)shouldAutorotate;
- (unsigned long long)supportedInterfaceOrientations;
- (void)onActionSheetVisibilityChange:(id)arg1;
- (void)onAudioPlayingViewVisibilityChange:(id)arg1;
- (id)getCurrentNavigationController;
- (void)moviePlayerWillExitFullScreen:(id)arg1;
- (void)moviePlayerDidEnterFullScreen:(id)arg1;
- (void)reFreshWithNetworkDetection;
- (void)reFresh;
- (void)commentInputFreshAfterDismiss;
- (void)commentInputFreshAfterShow;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)getPhoneNumberWhenShowWeb;
- (void)statusBarFrameDidChange:(id)arg1 withDiff:(double)arg2;
- (void)viewDidLoad;
- (_Bool)isNeedAddBottomLine;
- (void)hideCloseWebviewBtn:(_Bool)arg1;
- (void)setWebViewEdgeInset:(struct UIEdgeInsets)arg1 isForceResetWebViewEdgeInsets:(_Bool)arg2;
- (void)setEdgeInset:(_Bool)arg1;
- (void)reportATSFailExposure;
- (_Bool)canChangeFreeFlowUrlFromHttpsToHttp:(id)arg1;
- (id)httpUrlStringFromUrl:(id)arg1;
- (_Bool)canRefreshIfNetChanged;
- (void)freshReturnButton;
- (void)refreshCloseButton;
- (void)refreshHeaderBackgroundColor;
- (void)refreshHeaderColor;
- (void)refreshStatusBarStyle:(long long)arg1;
- (_Bool)useBgImage;
- (void)resetEdgeInset;
- (_Bool)fixHideHeader:(id)arg1;
- (void)fixedCrashOfiOS8;
- (void)loadView;
- (_Bool)shouldcStatusBarHidden;
- (_Bool)isFullBlankMode;
- (long long)closeButtonTypeAccordToUrl:(id)arg1;
- (long long)headerBackgroundColorTypeAccordToUrl:(id)arg1;
- (long long)headerColorTypeAccordToUrl:(id)arg1;
- (_Bool)isHideHeaderBgViewAccordToUrl:(id)arg1;
- (_Bool)isHideHeaderAccordToUrl:(id)arg1;
- (void)onColorStyleChanged;
- (struct CGRect)getWebViewRect;
- (struct CGRect)getNetErrShowFrame;
- (id)initAsSimpleWebviewWithViewFrame:(struct CGRect)arg1;
- (id)initWithViewFrame:(struct CGRect)arg1;
- (id)initWithViewFrame:(struct CGRect)arg1 andQMWebCoreType:(unsigned long long)arg2;
- (id)initWithQMWebCoreType:(unsigned long long)arg1;
- (id)init;
- (void)unregisterActiveWebViewVCFromJSHandler;
- (void)loadBlankPage;
- (void)dealloc;
- (void)hideActionBtn:(long long)arg1;
- (long long)eInitMenuShowTypeFromString:(id)arg1;
- (long long)eInitMenuSetPosFromString:(id)arg1;
- (void)removeRightOfMenuView;
- (void)replaceInitMenuViewWithPos:(long long)arg1 view:(id)arg2;
- (id)getRedPointWithPos:(long long)arg1;
- (id)getInitMenuViewWithPos:(long long)arg1;
- (void)onTouchUpInsideRightRedirect:(id)arg1;
- (void)onTouchUpInsideRightSearch;
- (void)onTouchUpInsideRightActionBtn;
- (_Bool)handleInitMenuButtonAction:(id)arg1 actionParam:(id)arg2;
- (id)iconImageName:(id)arg1;
- (id)nativeImageNameByContent:(id)arg1;
- (void)setRightViewColor:(long long)arg1;
- (void)addInitMenuButtonContent:(id)arg1 showContent:(id)arg2 eInitMenuShowType:(long long)arg3;
- (id)createInitMenuButtonWithShowContent:(id)arg1 eInitMenuShowType:(long long)arg2;
- (struct CGRect)menuButtonFrameWithPos:(long long)arg1;
- (struct CGRect)menuRightTextButtonFrameWithSize:(struct CGSize)arg1;
- (_Bool)handleInitMenuButtonWithPos:(long long)arg1 showType:(long long)arg2 showContent:(id)arg3 showRedPoint:(_Bool)arg4 action:(id)arg5 actionParam:(id)arg6;
- (_Bool)handleInitMenuTitleWithShowType:(long long)arg1 showContent:(id)arg2 action:(id)arg3 actionParam:(id)arg4;
- (_Bool)handleInitMenuWithPos:(long long)arg1 showType:(long long)arg2 showContent:(id)arg3 showRedPoint:(_Bool)arg4 action:(id)arg5 actionParam:(id)arg6;
- (_Bool)handleInitMenu:(id)arg1 MClientResponseObject:(id)arg2;
- (void)handleInitMenu:(id)arg1 responseCallback:(id)arg2;
- (void)delayPlayList:(id)arg1 taskId:(unsigned long long)arg2 index:(int)arg3 action:(id)arg4 uin:(unsigned long long)arg5 type:(int)arg6;
- (void)stopPlayAudioInWeb;
- (void)triggerMiniPlayerWithAction:(_Bool)arg1;
- (void)openWebViewWithFullScreenView:(id)arg1;
- (void)queryrRadio:(id)arg1;
- (void)getDataSize:(id)arg1;
- (void)clearData:(id)arg1;
- (void)deleteData:(id)arg1 responseCallback:(id)arg2;
- (void)getData:(id)arg1 responseCallback:(id)arg2;
- (void)setData:(id)arg1 responseCallback:(id)arg2;
- (void)reportPlayerState:(id)arg1;
- (void)registerPlayerState:(id)arg1;
- (void)queryCurrentList:(id)arg1 responseCallback:(id)arg2;
- (void)queryCurrentSong:(id)arg1 responseCallback:(id)arg2;
- (void)playNext;
- (void)playPre;
- (void)playResume;
- (void)playPause;
- (void)radioDataDidReady:(id)arg1;
- (void)live:(id)arg1;
- (void)playRadio:(id)arg1;
- (void)QMMenuViewWillHide:(id)arg1;
- (void)QMMenuView:(id)arg1 didSelectRowAtIndexPath:(int)arg2;
- (void)actionSheetCancelBtnClicked;
- (id)getIconImageArrayFromIconKeyName:(id)arg1;
- (id)getIconImageArrayFromIconNumber:(long long)arg1;
- (void)actionSheet:(id)arg1 actionSheetButtonClickedAtIndex:(long long)arg2;
- (void)showActionSheetAsMenu:(id)arg1 subType:(long long)arg2;
- (void)handleActionSheet:(id)arg1 MClientResponseObject:(id)arg2;
- (void)handleActionSheet:(id)arg1 responseCallback:(id)arg2;
- (void)sendButtonClick:(id)arg1;
- (id)dictionaryForShowKeyboardWithSong:(id)arg1;
- (void)onTextEditCancelWithContent:(id)arg1 withScore:(id)arg2 withSong:(id)arg3;
- (void)onTextEditDoneWithContent:(id)arg1 withScore:(id)arg2 withSong:(id)arg3;
- (void)onTextEditDoneWithContent:(id)arg1 isHorn:(_Bool)arg2;
- (_Bool)textView:(id)arg1 shouldChangeTextInRange:(struct _NSRange)arg2 replacementText:(id)arg3;
- (void)textViewDidEndEditing:(id)arg1;
- (void)textViewDidChangeSelection:(id)arg1;
- (void)textViewDidChange:(id)arg1;
- (void)textViewDidBeginEditing:(id)arg1;
- (void)keyboardWillShowOrHide:(id)arg1;
- (_Bool)checkMessageInputViewText;
- (void)reSetCommentInputViewUI:(id)arg1;
- (void)sendComment:(id)arg1;
- (struct CGSize)getContentSize:(id)arg1;
- (void)updateTextViewFrame:(id)arg1;
- (void)removeObseverForKeyboardNotification;
- (void)registerForKeyboardNotification;
- (void)turnOffMessageInputView;
- (void)addMessageInputView:(id)arg1;
- (void)handleTextView:(id)arg1 MClientResponseObject:(id)arg2;
- (void)handleTextView:(id)arg1 responseCallback:(id)arg2;
- (void)bulletSendGiftPlugin:(id)arg1 didClickBuyStarWithUrl:(id)arg2;
- (void)didCanceledByBulletSendGiftPlugin:(id)arg1;
- (void)bulletSendGiftPlugin:(id)arg1 didSendGiftFailWithErrorCode:(id)arg2;
- (void)bulletSendGiftPlugin:(id)arg1 didSendGiftSuccWithCgiResponse:(id)arg2;
- (void)handleBulletGift:(id)arg1 MClientResponseObject:(id)arg2;
- (void)handleBulletGift:(id)arg1 responseCallback:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

