//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "NLViewController.h"

@class NLApplicationEnterForegroundDetector, NLProfilePopupCollectionViewController, NLSearchAutoCompletionHelper, NLSearchAutoCompletionView, NLSearchDefaultViewHandler, NSArray, NSMutableArray, NSString, NSTimer, UITableView;
@protocol NLProfilePopupCollectionViewControllerDataSource;

@interface NLSearchBaseViewController : NLViewController
{
    _Bool _needToSearchImmediately;
    _Bool _needNewSearchId;
    _Bool _viewInRotating;
    long long _searchMode;
    long long _searchState;
    UITableView *_searchDefaultTableView;
    NLSearchDefaultViewHandler *_searchDefaultViewHandler;
    NSString *_searchKeyword;
    NSTimer *_serverSearchTimer;
    NSArray *_searchResultList;
    NSString *_searchId;
    long long _currentRecentSearchKeywordType;
    NLApplicationEnterForegroundDetector *_enterForegroundDetector;
    NLSearchAutoCompletionHelper *_autoCompletionHelper;
    NLSearchAutoCompletionView *_autoCompletionView;
    NSMutableArray *_autoCompletionViewConstraints;
    long long _autoCompletionViewState;
    NLProfilePopupCollectionViewController *_profilePopupCollectionViewController;
    id <NLProfilePopupCollectionViewControllerDataSource> _profilePopupCollectionViewControllerDataSource;
}

@property(retain, nonatomic) id <NLProfilePopupCollectionViewControllerDataSource> profilePopupCollectionViewControllerDataSource; // @synthesize profilePopupCollectionViewControllerDataSource=_profilePopupCollectionViewControllerDataSource;
@property(nonatomic) __weak NLProfilePopupCollectionViewController *profilePopupCollectionViewController; // @synthesize profilePopupCollectionViewController=_profilePopupCollectionViewController;
@property(nonatomic, getter=isViewInRotating) _Bool viewInRotating; // @synthesize viewInRotating=_viewInRotating;
@property(nonatomic) long long autoCompletionViewState; // @synthesize autoCompletionViewState=_autoCompletionViewState;
@property(retain, nonatomic) NSMutableArray *autoCompletionViewConstraints; // @synthesize autoCompletionViewConstraints=_autoCompletionViewConstraints;
@property(retain, nonatomic) NLSearchAutoCompletionView *autoCompletionView; // @synthesize autoCompletionView=_autoCompletionView;
@property(retain, nonatomic) NLSearchAutoCompletionHelper *autoCompletionHelper; // @synthesize autoCompletionHelper=_autoCompletionHelper;
@property(retain, nonatomic) NLApplicationEnterForegroundDetector *enterForegroundDetector; // @synthesize enterForegroundDetector=_enterForegroundDetector;
@property(nonatomic) long long currentRecentSearchKeywordType; // @synthesize currentRecentSearchKeywordType=_currentRecentSearchKeywordType;
@property(retain, nonatomic) NSString *searchId; // @synthesize searchId=_searchId;
@property(nonatomic, getter=isNeedNewSearchId) _Bool needNewSearchId; // @synthesize needNewSearchId=_needNewSearchId;
@property(readonly, nonatomic) NSArray *searchResultList; // @synthesize searchResultList=_searchResultList;
@property(retain, nonatomic) NSTimer *serverSearchTimer; // @synthesize serverSearchTimer=_serverSearchTimer;
@property(nonatomic) _Bool needToSearchImmediately; // @synthesize needToSearchImmediately=_needToSearchImmediately;
@property(retain, nonatomic) NSString *searchKeyword; // @synthesize searchKeyword=_searchKeyword;
@property(retain, nonatomic) NLSearchDefaultViewHandler *searchDefaultViewHandler; // @synthesize searchDefaultViewHandler=_searchDefaultViewHandler;
@property(retain, nonatomic) UITableView *searchDefaultTableView; // @synthesize searchDefaultTableView=_searchDefaultTableView;
@property(nonatomic) long long searchState; // @synthesize searchState=_searchState;
@property(nonatomic) long long searchMode; // @synthesize searchMode=_searchMode;
- (void).cxx_destruct;
- (id)sourceForSearchClickLog:(id)arg1;
- (void)makeSearchClickLogWithCollection:(id)arg1 item:(id)arg2 clickTarget:(id)arg3 searchKeyword:(id)arg4 key:(id)arg5;
- (void)makeSearchClickLogWithCollection:(id)arg1 item:(id)arg2 clickTarget:(id)arg3;
- (void)searchAutoCompletionView:(id)arg1 displayedItemCount:(long long)arg2;
- (void)searchAutoCompletionView:(id)arg1 selectedText:(id)arg2 index:(long long)arg3 query:(id)arg4;
- (void)searchAutoCompletionHelper:(id)arg1 query:(id)arg2 result:(id)arg3;
- (void)adjustPositionOfAutoCompletionViewIfNeeded;
- (void)finishAutoCompletionWithAnimation:(_Bool)arg1;
- (void)hideAutoCompletionViewWithAnimation:(_Bool)arg1;
- (void)reloadAutoCompletionView;
- (_Bool)isShowAutoCompletionView;
- (void)showAutoCompletions:(id)arg1 query:(id)arg2;
- (void)showAutoCompletionView;
- (void)prepareAutoCompletionViewInHiddenState;
- (struct UIOffset)positionOfAutoCompletionView;
- (void)removeAutoCompletionViewConstraints;
- (void)removeAutoCompletionView;
- (void)configureAutoCompletionViewAutoLayout:(id)arg1 metrics:(id)arg2 views:(id)arg3;
- (void)configureAutoCompletionViewHiddenLayout:(id)arg1;
- (void)configureAutoCompletionViewAutoLayout:(id)arg1;
- (_Bool)isPossibleAutoCompletion;
- (_Bool)isProvideLocationService;
- (void)detectWillEnterForeground:(id)arg1;
- (void)updateCustomLocation:(id)arg1;
- (_Bool)isMoreContentsAvailableInSection:(long long)arg1;
- (double)heightOfSectionHeader;
- (void)saveRecentSearchKeyword;
- (void)resetBottomInset:(id)arg1;
- (void)processPanGestureOnSearchResultTableView:(id)arg1;
- (void)processTryAgain;
- (void)showStickerItem:(id)arg1 preprocessBlock:(CDUnknownBlockType)arg2;
- (void)showYellowPageItem:(id)arg1;
- (void)processShortcutItemInstallAppAction:(id)arg1 urlScheme:(id)arg2;
- (void)processShortcutItemAddFriendAction:(id)arg1 sectionIndex:(long long)arg2;
- (void)processShortcutItemJumpUrlAction:(id)arg1;
- (void)processCellSelectionForShortcutItem:(id)arg1 indexPath:(id)arg2;
- (void)processUseCustomLocationEvent;
- (void)processUseMyLocationEventWithPostProcess:(CDUnknownBlockType)arg1;
- (void)processRecentSearchKeywordSelection:(id)arg1;
- (void)processPopularItemSelection:(id)arg1 type:(long long)arg2;
- (void)keyboardWillHide:(id)arg1;
- (void)keyboardDidShow:(id)arg1;
- (void)didUpdateDynamicFontSize:(id)arg1;
- (void)stopToObserveNotificationWhenViewIsAppeared;
- (void)startToObserveNotificationWhenViewIsAppeared;
- (void)searchViewShortcutCellDidTapWithButton:(id)arg1;
- (id)cellForOAWithTableView:(id)arg1 collection:(id)arg2 item:(id)arg3;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 viewForHeaderInSection:(long long)arg2;
- (double)tableView:(id)arg1 heightForHeaderInSection:(long long)arg2;
- (double)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (id)searchResultsTableView;
- (id)sectionInfoForTableView:(id)arg1 section:(long long)arg2;
- (id)dataSourceForTableView:(id)arg1;
- (void)cancelServerRequestIfNeed;
- (void)appendLoadingCollection;
- (void)processLoadMoreAgain;
- (void)loadMoreContents;
- (void)didShowSearchDefaultView;
- (void)willShowSearchDefaultView;
- (void)searchServerCollections;
- (void)searchClientCollections;
- (int)lineSearchCollectionType;
- (void)generateNewSearchIdIfNeed;
- (void)startToSearch;
- (void)resetSearchResult;
- (void)fireServerSearchIntervalTimer:(id)arg1;
- (void)stopServerSearchIntervalTimer;
- (void)startServerSearchIntervalTimer;
- (void)removeSearchDefaultTableView;
- (void)prepareSearchDefaultTableView;
- (id)searchBarResponder;
- (void)viewWillTransitionToSize:(struct CGSize)arg1 withTransitionCoordinator:(id)arg2;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (void)initSearchDefaultView;
- (void)initInstanceOfNLSearchBaseViewController;
- (id)init;
- (void)sendSquareSearchClickGAEvent;
- (void)registerSquareTableViewCellInTableView:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

