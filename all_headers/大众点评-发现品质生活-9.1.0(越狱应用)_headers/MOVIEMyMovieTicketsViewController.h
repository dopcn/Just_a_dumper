//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "NVTableViewController.h"

#import "MOVIEDataLoaderDelegate-Protocol.h"
#import "MOVIEMyMovieTicketCellDelegate-Protocol.h"
#import "NVSegmentedAddNumberControlDelegate-Protocol.h"
#import "TGBaseCellWithDisableMaskEditModeDelegate-Protocol.h"
#import "TGBaseTableViewDeleteViewDelegate-Protocol.h"

@class MOVIEDataLoader, NSArray, NSString, NVPostTaskM, NVSegmentedAddNumberControl, TGBaseTableViewDeleteView, UITableViewCell;

@interface MOVIEMyMovieTicketsViewController : NVTableViewController <NVSegmentedAddNumberControlDelegate, MOVIEMyMovieTicketCellDelegate, TGBaseTableViewDeleteViewDelegate, TGBaseCellWithDisableMaskEditModeDelegate, MOVIEDataLoaderDelegate>
{
    NSString *_deleteToastString;
    NVSegmentedAddNumberControl *_segmentedControl;
    long long _filterType;
    UITableViewCell *_emptyCell;
    TGBaseTableViewDeleteView *_viewForDeleteButton;
    NVPostTaskM *_taskForDelete;
    NSArray *_indexPathsForSelectedRowsForEditMode;
    MOVIEDataLoader *_allTicketsDataloader;
    MOVIEDataLoader *_processingTicketsDataloader;
    MOVIEDataLoader *_currentTicketsDataloader;
}

+ (_Bool)isSingleton;
+ (_Bool)needsLogin:(id)arg1;
@property(readonly, nonatomic) MOVIEDataLoader *currentTicketsDataloader; // @synthesize currentTicketsDataloader=_currentTicketsDataloader;
@property(retain, nonatomic) MOVIEDataLoader *processingTicketsDataloader; // @synthesize processingTicketsDataloader=_processingTicketsDataloader;
@property(retain, nonatomic) MOVIEDataLoader *allTicketsDataloader; // @synthesize allTicketsDataloader=_allTicketsDataloader;
@property(retain, nonatomic) NSArray *indexPathsForSelectedRowsForEditMode; // @synthesize indexPathsForSelectedRowsForEditMode=_indexPathsForSelectedRowsForEditMode;
@property(retain, nonatomic) NVPostTaskM *taskForDelete; // @synthesize taskForDelete=_taskForDelete;
@property(retain, nonatomic) TGBaseTableViewDeleteView *viewForDeleteButton; // @synthesize viewForDeleteButton=_viewForDeleteButton;
@property(retain, nonatomic) UITableViewCell *emptyCell; // @synthesize emptyCell=_emptyCell;
@property(nonatomic) long long filterType; // @synthesize filterType=_filterType;
@property(nonatomic) NVSegmentedAddNumberControl *segmentedControl; // @synthesize segmentedControl=_segmentedControl;
- (void).cxx_destruct;
- (void)goMovie:(id)arg1;
- (void)dealloc;
- (void)payTicketOrder:(id)arg1;
- (_Bool)tuanBaseCellWithDisableMaskShouldShowDisableMaskView:(id)arg1;
- (_Bool)isTableViewForTuanBaseCellWithDisableMaskInEditMode:(id)arg1;
- (_Bool)tableView:(id)arg1 canEditRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 willSelectRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 didDeselectRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (double)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (_Bool)isEmptyResult;
- (void)tuanBaseTableViewDeleteView:(id)arg1 clickedDeleteButton:(id)arg2;
- (void)updateDeleteTask;
- (void)setupDeleteOrderTask;
- (void)updateDeleteStatus;
- (void)endDeleting;
- (void)beginDeleting;
- (void)setNavigationItemDeleteButton:(_Bool)arg1;
- (void)resumeSelectedStatusOfCellsInEditing;
- (void)refreshView:(id)arg1;
- (void)loadFailed:(id)arg1 error:(id)arg2;
- (id)dataLoader:(id)arg1 parseTaskResult:(id)arg2;
- (void)jsapi_movieCommentAddormodified:(id)arg1;
- (void)loadNext;
- (_Bool)refreshData;
- (void)filterTypeChanged:(id)arg1;
- (void)valueChanged:(id)arg1 selectedSegmentIndex:(long long)arg2;
- (id)makeupDataloaderWithFilter:(long long)arg1;
- (void)didReceiveMemoryWarning;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (_Bool)handleWithURLAction:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

