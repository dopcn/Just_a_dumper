//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

#import "YTEngineYoukuPlatformDataSource-Protocol.h"
#import "YTEngineYoukuPlayerEvents-Protocol.h"

@class NSArray, NSDictionary, NSString, UIGestureRecognizer, UIViewController, YTEngineController, YTEngineYoukuPlatformManager, YYMediaPlayerEventsManager;
@protocol YYMediaPlayerNetworkParamsDelegate;

@interface YYMediaPlayer : NSObject <YTEngineYoukuPlayerEvents, YTEngineYoukuPlatformDataSource>
{
    YTEngineYoukuPlatformManager *mPlatformManager;
    id <YYMediaPlayerNetworkParamsDelegate> mParamsDelegate;
    YYMediaPlayerEventsManager *mPlayerEventsManager;
    YTEngineController *mEngineController;
    _Bool mAdvertisementEnable;
    _Bool mIsOnStartAction;
    _Bool _useUps;
    _Bool _isDeinit;
}

+ (void)updateInfosBeforeDownloadVideo:(id)arg1;
+ (void)updateInfosBeforeDeleteVideo:(id)arg1;
+ (id)version;
+ (void)load;
+ (void)sendLocalRootImageStatistics;
+ (id)localRootImageUrl;
+ (void)startOfflineAdTaskWithVideoParams:(id)arg1;
+ (void)createYoukuFileCacheSystem;
+ (void)startMediaPlayerP2PServiceWithUserinfo:(id)arg1;
+ (void)configurePreAdShouldNotRepeatInSeconds:(unsigned long long)arg1;
+ (void)videoAdInstantPlayInitWithParams:(id)arg1;
+ (void)turnOnErrorInterface;
+ (void)turnOffErrorInterface;
+ (void)mediaPlayerPendingThreshold;
+ (void)mediaPlayerTweakDynamicBufferOn;
+ (void)mediaPlayerTweakQualityOn;
+ (void)mediaPlayerTweakOn;
+ (void)supportDynamicDomain:(id)arg1 buildType:(long long)arg2 otherInfos:(id)arg3;
+ (_Bool)addSkipBackupAttributeToItemAtURL:(id)arg1;
+ (id)getYoukuFileCacheSystemPath;
+ (void)getPlayerDiskCacheAsync:(CDUnknownBlockType)arg1;
+ (void)clearPlayerDiskCacheAsync:(CDUnknownBlockType)arg1;
+ (id)cacheClearQueue;
+ (void)enableRealTimeMonitor:(_Bool)arg1;
+ (void)enableVideoPlayerMonitor:(_Bool)arg1;
+ (void)enableHTTPSVideo:(_Bool)arg1;
+ (void)enableHttpDns:(_Bool)arg1;
@property _Bool isDeinit; // @synthesize isDeinit=_isDeinit;
@property(nonatomic) _Bool useUps; // @synthesize useUps=_useUps;
- (void).cxx_destruct;
- (id)extraStatisticsInfoWithEvent:(id)arg1;
- (_Bool)isTopActivePlayer:(id)arg1;
- (id)barrageStatisticsInfoWithVid:(id)arg1;
- (id)hevcWhitelist;
- (long long)subjectVideo;
- (id)skipAdTitle;
- (id)gdid;
- (id)appName;
- (_Bool)needFreeFlow;
- (id)extraAdInfos;
- (_Bool)isVipUser;
- (id)userId;
- (long long)ctu;
- (id)adCookieValue;
@property(readonly, retain, nonatomic) NSString *adext;
- (id)adParams;
- (id)videoParams;
- (void)timestampInvalid:(long long)arg1;
- (long long)timestamp;
- (id)userAgent;
- (void)playWithUrl:(id)arg1 from:(float)arg2 vid:(id)arg3;
- (void)playVideo:(id)arg1 quality:(id)arg2 from:(float)arg3 oldEncrypt:(_Bool)arg4;
- (void)playShowid:(id)arg1 sequence:(long long)arg2 quality:(id)arg3 from:(float)arg4;
- (void)playVid:(id)arg1 quality:(id)arg2 password:(id)arg3 from:(float)arg4 enableAD:(_Bool)arg5;
- (void)playVid:(id)arg1 quality:(id)arg2 password:(id)arg3 from:(float)arg4;
@property(nonatomic) float volume;
@property(nonatomic) long long decodingScheme;
@property(nonatomic, getter=isMasterLogEnable) _Bool masterLogEnable;
@property(nonatomic) long long buildType;
@property(nonatomic) long long appType;
@property(nonatomic) __weak id <YYMediaPlayerNetworkParamsDelegate> paramsDelegate;
@property(nonatomic) UIViewController *controller;
@property(nonatomic, getter=isAutoSkipHead) _Bool autoSkipHead;
- (id)init;
- (void)setCMSConfig:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)p_deregisterObserver;
- (void)p_registerObserver;
- (void)deinit;
- (void)dealloc;
@property(readonly, nonatomic) NSDictionary *upsResponseDict;
@property(readonly, nonatomic) NSString *sleepMode;
@property(readonly, nonatomic) NSDictionary *previewDict;
@property(readonly, nonatomic) NSDictionary *trialDict;
@property(readonly, nonatomic) _Bool isExclusiveVideo;
@property(readonly, nonatomic) _Bool isPGCVideo;
@property(readonly, nonatomic) double tailTime;
@property(readonly, nonatomic) double headTime;
@property(readonly, nonatomic) double hoverTime;
@property(readonly, retain, nonatomic) NSDictionary *app_buy_info;
- (_Bool)hasM3U8Url;
@property(readonly, nonatomic, getter=isRTMPEVideo) _Bool rtmpeVideo;
@property(readonly, nonatomic) NSArray *videoTypeArray;
@property(readonly, nonatomic) NSDictionary *pay;
@property(readonly, nonatomic) NSDictionary *zpdPayInfo;
@property(readonly, nonatomic) NSDictionary *vipPayInfo;
@property(readonly, nonatomic) _Bool suggestSightEnhance;
@property(readonly, nonatomic) long long videoMemberType;
@property(readonly, nonatomic) NSString *videoOwner;
@property(readonly, nonatomic) long long videoStreamType;
@property(readonly, nonatomic) _Bool needsShowInteract;
@property(readonly, nonatomic) long long interact;
@property(readonly, nonatomic) long long videoType;
@property(readonly, retain, nonatomic) NSString *tryWatchDesc;
@property(readonly, nonatomic) long long tryWatchSeries;
@property(readonly, retain, nonatomic) NSString *tryWatchType;
@property(readonly, nonatomic) long long tryWatchTime;
@property(readonly, nonatomic, getter=isTryWatch) _Bool tryWatch;
@property(readonly, retain, nonatomic) NSArray *payTypes;
@property(readonly, nonatomic, getter=isPaid) _Bool paid;
@property(readonly, retain, nonatomic) NSString *imageUrl;
@property(readonly, retain, nonatomic) NSString *webUrl;
@property(readonly, retain, nonatomic) NSString *title;
@property(readonly, retain, nonatomic) NSString *showid;
@property(readonly, retain, nonatomic) NSString *subVideoid;
@property(readonly, retain, nonatomic) NSString *videoid;
@property(readonly, retain, nonatomic) NSString *sessionid;
- (void)enableSubscribeButton:(_Bool)arg1;
- (id)adConfigInfo;
@property(nonatomic) _Bool showFullButton;
- (void)changeToScreenMode:(long long)arg1 frame:(struct CGRect)arg2 transfrom:(struct CGAffineTransform)arg3;
@property(nonatomic) _Bool floatViewLayoutEnable;
@property(nonatomic) _Bool imageAdVertisementEnable;
- (_Bool)overseaAdvertisementEnable;
- (void)setOverseaAdvertisementEnable:(_Bool)arg1;
@property(nonatomic) _Bool forbiddenPauseAdPlay;
@property(nonatomic, getter=isPreVideoAdEnable) _Bool preVideoAdEnable;
@property(nonatomic) _Bool forbiddenMidAdPlay;
@property(nonatomic) _Bool offlineAdvertisementEnable;
@property(nonatomic) _Bool advertisementEnable;
- (void)subScribeSuccessWithShowid:(id)arg1;
- (void)hideGraphicAdView;
- (void)showGraphicAdView;
- (void)hideFooterAd;
- (void)showFooterAd;
- (unsigned long long)YTEngineYoukuViewEventTypeFromYYViewEventType:(unsigned long long)arg1;
- (void)hidePositionViewWithEventType:(unsigned long long)arg1;
- (void)showPositionViewWithEventType:(unsigned long long)arg1;
- (void)resumeQuestionTimer;
- (void)pauseQuestionTimer;
- (void)clickQuestionnaireURL:(id)arg1;
- (void)hideQuestionnaireView;
- (void)showQuestionnaireView;
- (void)adClicked;
@property(readonly, retain, nonatomic) NSString *questionnaireClickUrl;
@property(readonly, retain, nonatomic) NSString *adClickDetailUrl;
@property(readonly, retain, nonatomic) NSString *cuu;
@property(readonly, nonatomic) long long cuf;
@property(readonly, nonatomic, getter=isSubscribeVideo) _Bool subscribeVideo;
@property(readonly, nonatomic) long long ownFansCount;
@property(readonly, retain, nonatomic) NSString *ownPhoto;
@property(readonly, retain, nonatomic) NSString *ownUid;
@property(readonly, retain, nonatomic) NSString *ownName;
- (id)startActionInfo;
@property(readonly, nonatomic) NSString *trackErrorCode;
@property(readonly, nonatomic) long long level2ErrorCode;
@property(readonly, nonatomic) long long interActiveAdType;
@property(readonly, nonatomic) NSString *nocopyrightLink;
@property(readonly, nonatomic) NSString *errorLink;
@property(readonly, nonatomic) NSString *errorDescription;
@property(readonly, nonatomic) long long playerShowType;
@property(readonly, nonatomic) long long errorCode;
@property(readonly, nonatomic) NSDictionary *qualitySizeDict;
@property(readonly, nonatomic, getter=isSupportSuperHD2Video) _Bool supportSuperHD2Video;
@property(readonly, nonatomic) NSArray *videoPoints;
@property(readonly, nonatomic) NSDictionary *languageDict;
@property(copy, nonatomic) NSString *langcode;
- (void)setQualityDict:(id)arg1;
@property(readonly, nonatomic) NSDictionary *qualityDict;
- (void)setQualityArray:(id)arg1;
@property(readonly, nonatomic) NSArray *qualityArray;
@property(readonly, nonatomic) NSString *corePlayerQuality;
@property(copy, nonatomic) NSString *quality;
@property(readonly, nonatomic) long long sequence;
@property(readonly, nonatomic, getter=isLocalPlay) _Bool localPlay;
- (_Bool)isSeeking;
- (_Bool)isPending;
- (_Bool)isPause;
- (_Bool)isPlaying;
- (_Bool)isPausingInitiative;
- (void)stop;
- (void)next;
- (_Bool)hasNext;
- (void)resume;
- (void)interrupt;
- (void)replay;
- (void)dpause;
- (void)pause2;
- (void)pause;
- (void)play;
- (long long)networkSpeed;
- (void)setEnableLoadData:(_Bool)arg1;
- (double)getCurrentTime;
- (void)seekToEnd;
- (void)endSeek:(double)arg1;
- (void)seekTo:(double)arg1;
- (void)beginSeek:(double)arg1;
@property(readonly, nonatomic) double playable;
@property(readonly, nonatomic) double played;
@property(readonly, nonatomic) double tailVideoDuration;
@property(readonly, nonatomic) double headVideoDuration;
@property(readonly, nonatomic) double duration;
- (void)startAirplayWithVid:(id)arg1 quality:(id)arg2 from:(double)arg3 deviceName:(id)arg4 deviceIP:(id)arg5 devicePort:(long long)arg6;
- (id)initWithDirectAirplay;
- (void)verifyAirplayDevicePassword:(id)arg1;
- (void)stopAirplay;
- (void)startAirplayOnDeviceInfo:(id)arg1;
- (void)startAirplayOnDevice:(id)arg1;
@property(readonly, nonatomic, getter=isAirplayPlaying) _Bool airplayPlaying;
@property(readonly, retain, nonatomic) NSDictionary *usingAirplayDeviceInfo;
@property(readonly, retain, nonatomic) NSArray *airplayDeviceInfoList;
@property(readonly, retain, nonatomic) NSString *usingAirplayDevice;
@property(readonly, retain, nonatomic) NSArray *airplayDeviceList;
@property(nonatomic, getter=isAirplayEnabled) _Bool airplayEnabled;
@property(readonly, nonatomic) double cdnToRenderDuration;
@property(readonly, nonatomic) double requestPermissionInfoDuration;
@property(readonly, nonatomic) double requestLiveInfoDuration;
@property(readonly, retain, nonatomic) id livePlayItem;
@property(readonly, nonatomic) long long lvshowcountdown;
@property(readonly, retain, nonatomic) NSArray *lvbarrageColor;
@property(readonly, nonatomic) long long lvbarrageid;
@property(readonly, nonatomic) long long lvbarrage;
@property(readonly, retain, nonatomic) NSString *lvsid;
@property(readonly, retain, nonatomic) NSString *lvdescription;
@property(readonly, retain, nonatomic) NSString *lvvideotitle;
@property(readonly, retain, nonatomic) NSString *lvtitle;
@property(readonly, nonatomic) long long lvcountdowntime;
@property(readonly, retain, nonatomic) NSString *lvfinishtime;
@property(readonly, retain, nonatomic) NSString *lvbegintime;
@property(readonly, retain, nonatomic) NSString *lvendtime;
@property(readonly, retain, nonatomic) NSString *lvstarttime;
@property(readonly, retain, nonatomic) NSString *lvservertime;
@property(readonly, retain, nonatomic) NSString *lvchannelid;
@property(readonly, retain, nonatomic) NSString *lvvipnotes;
@property(readonly, retain, nonatomic) NSString *lvvip;
@property(readonly, retain, nonatomic) NSString *lvtotaltime;
@property(readonly, retain, nonatomic) NSString *lvuid;
@property(readonly, retain, nonatomic) NSString *lvid;
@property(readonly, retain, nonatomic) NSString *lvlimitMessage;
@property(readonly, nonatomic) long long livelimitState;
@property(readonly, nonatomic) long long livestate;
@property(readonly, nonatomic) long long barrage;
@property(readonly, nonatomic) long long density;
@property(copy, nonatomic) NSString *referencePageCode;
@property(copy, nonatomic) NSString *pageCode;
- (void)stopLiveVideo;
- (void)playLiveVideo:(id)arg1;
- (void)playLiveVideo:(id)arg1 viewSequence:(long long)arg2;
- (void)playLiveVideo:(id)arg1 viewSequence:(long long)arg2 liveFullInfo:(id)arg3;
- (void)removeBarrageView;
- (void)addBarrageView:(id)arg1;
- (id)playerLayer;
- (id)playerView;
- (id)view;
@property(nonatomic) float scale;
@property(nonatomic) long long gravity;
@property(nonatomic) long long screenMode;
@property(nonatomic, getter=isFullscreen) _Bool fullscreen;
- (void)removeEventsObservers:(id)arg1;
- (void)removeEventsObserver:(id)arg1;
- (void)addEventsObservers:(id)arg1;
- (void)addEventsObserver:(id)arg1;
@property(nonatomic) double midAdPointAfterTime;
@property(nonatomic) double midAdForbiddenTime;
- (void)passiveStop;
- (void)onStatisticsCacheWithType:(unsigned long long)arg1 controller:(id)arg2 extra:(id)arg3;
@property(retain, nonatomic) NSString *istest;
@property(retain, nonatomic) NSString *testid;
@property(retain, nonatomic) NSString *vvreason;
@property(readonly, retain, nonatomic) NSString *LUCSessionID;
- (void)playerWirelessExtend:(id)arg1 extendInfo:(id)arg2;
- (void)player:(id)arg1 wirelessDevicePasswordError:(id)arg2;
- (void)player:(id)arg1 wirelessDevicePlayError:(id)arg2;
- (void)playerWirelessDeviceFinishPlay:(id)arg1;
- (void)playerWirelessDeviceStartPlay:(id)arg1;
- (void)playerWirelessDevicePrepareToPlay:(id)arg1;
- (void)playerWirelessDeviceNeedPassword:(id)arg1;
- (void)playerWirelessDeviceUpdateList:(id)arg1;
- (void)playerVideoEnd:(id)arg1 ucStatDict:(id)arg2;
- (void)playerUpdatedSleepMode:(id)arg1 sleepMode:(id)arg2;
- (void)playerSpheer3DVideoAvailavle:(_Bool)arg1;
- (long long)playerBarrageDensityType;
- (long long)playerBarrageSwitchType;
- (void)player:(id)arg1 barrageIdAvaliable:(id)arg2;
- (id)player:(id)arg1 cacheItemWith:(id)arg2;
- (id)player:(id)arg1 playHistory:(id)arg2;
- (id)player:(id)arg1 videoNeedPassword:(id)arg2;
- (void)player:(id)arg1 requestScreenContent:(id)arg2 handler:(CDUnknownBlockType)arg3;
- (void)player:(id)arg1 subScribeWithVid:(id)arg2 handler:(CDUnknownBlockType)arg3;
- (void)player:(id)arg1 requestSuccessAdType:(long long)arg2 data:(id)arg3;
- (void)player:(id)arg1 onClickImageAd:(long long)arg2 url:(id)arg3 cuf:(long long)arg4;
- (void)player:(id)arg1 onClickQuestionnaire:(id)arg2;
- (void)player:(id)arg1 imageAdWillDisAppear:(long long)arg2;
- (void)player:(id)arg1 imageAdWillAppear:(long long)arg2;
- (void)player:(id)arg1 imageAdWillShowDetail:(long long)arg2;
- (void)player:(id)arg1 imageAdWillRequest:(long long)arg2;
- (void)player:(id)arg1 viewTouchesCancelled:(id)arg2 withEvent:(id)arg3;
- (void)player:(id)arg1 viewTouchesMoved:(id)arg2 withEvent:(id)arg3;
- (void)player:(id)arg1 viewTouchesEnded:(id)arg2 withEvent:(id)arg3;
- (void)player:(id)arg1 viewTouchesBegan:(id)arg2 withEvent:(id)arg3;
- (void)playerClickUserErrorLink:(id)arg1 link:(id)arg2;
- (void)playerClickedSmallScreen:(id)arg1;
- (void)player:(id)arg1 adCuOfTrueView:(id)arg2 withIMP:(id)arg3 andVID:(id)arg4;
- (void)playerSkipAdForTrueView:(id)arg1;
- (void)playerSkipAdWithLogin:(id)arg1 loginType:(long long)arg2 userInfo:(id)arg3;
- (void)playerSkipVipAdForTrueView:(id)arg1;
- (void)player:(id)arg1 detailCufOfTrueView:(long long)arg2 withCuu:(id)arg3 andCum:(id)arg4;
- (void)player:(id)arg1 vidOfTrueView:(id)arg2;
- (void)playerInteractValueChangeed:(id)arg1 interact:(long long)arg2;
- (void)playerPushOffInterActiveAd:(id)arg1;
- (void)playerPushOnInterActiveAd:(id)arg1;
- (void)playerShowInterActiveAdFalied:(id)arg1;
- (void)playerShowInterActiveAdSuccess:(id)arg1 interActiveView:(id)arg2;
- (void)playerShowInterActiveAdSuccess:(id)arg1;
- (void)playerEndPlayInterActiveAd:(id)arg1;
- (void)playerBeginPlayInterActiveAd:(id)arg1;
- (void)player:(id)arg1 adCutdownTime:(double)arg2;
- (void)player:(id)arg1 videoAdType:(long long)arg2 switchAd:(long long)arg3 cuf:(int)arg4;
- (void)playerWillResignActive:(id)arg1;
- (void)playerDidBecomeActive:(id)arg1;
- (void)playerOnHeadsetPullOutEvent:(id)arg1;
- (void)playerOnHeadsetPluggedInEvent:(id)arg1;
- (void)player:(id)arg1 prepareFreeFlowAudioInfo:(_Bool)arg2;
- (void)player:(id)arg1 prepareFreeFlowVideoInfo:(_Bool)arg2;
- (void)player:(id)arg1 playerViewModeNeedLayout:(unsigned long long)arg2;
- (void)player:(id)arg1 videoScreenModeDidChange:(unsigned long long)arg2;
- (void)player:(id)arg1 videoScreenModeWillChange:(unsigned long long)arg2;
- (void)player:(id)arg1 playerViewNeedLayout:(_Bool)arg2;
- (void)player:(id)arg1 errorInterfaceScreenChange:(_Bool)arg2;
- (void)player:(id)arg1 videoScreenDidChange:(_Bool)arg2;
- (void)player:(id)arg1 videoScreenWillChange:(_Bool)arg2;
- (void)player:(id)arg1 videoUsingCacheFile:(_Bool)arg2;
- (void)player:(id)arg1 surroundSoundAvailable:(_Bool)arg2;
- (void)playerAudioPlayerPrepareError:(id)arg1;
- (void)playerAudioPlayerEndPlay:(id)arg1;
- (void)playerAudioPlayerStartPlay:(id)arg1;
- (void)player:(id)arg1 audioPlayerAvailable:(_Bool)arg2;
- (void)player:(id)arg1 videoLanguageDidChange:(id)arg2;
- (void)player:(id)arg1 videoLanguageWillChange:(id)arg2;
- (void)player:(id)arg1 schemeDidChange:(unsigned long long)arg2;
- (void)player:(id)arg1 schemeWillChange:(unsigned long long)arg2;
- (void)player:(id)arg1 videoQualityFailChange:(long long)arg2;
- (void)player:(id)arg1 videoQualityDidChange:(long long)arg2;
- (void)player:(id)arg1 videoQualityWillChange:(long long)arg2;
- (void)playerVideoDidChange:(id)arg1;
- (void)playerVideoWillChange:(id)arg1;
- (void)player:(id)arg1 videoPlayableTime:(double)arg2;
- (void)player:(id)arg1 currentPositionType:(unsigned long long)arg2;
- (void)player:(id)arg1 videoPlayedTime:(double)arg2;
- (void)player:(id)arg1 videoTotalDuration:(double)arg2;
- (void)player:(id)arg1 videoEndSeek:(double)arg2 isTerminal:(_Bool)arg3;
- (void)player:(id)arg1 videoSeekTo:(double)arg2;
- (void)player:(id)arg1 videoBeginSeek:(double)arg2;
- (void)player:(id)arg1 videoRateChanged:(float)arg2;
- (void)playerPrepareReplay:(id)arg1;
- (void)playerEndPause:(id)arg1;
- (void)playerBeginPause:(id)arg1;
- (void)playerEndLoading:(id)arg1;
- (void)playerBeginLoading:(id)arg1;
- (void)player:(id)arg1 adPlayError:(long long)arg2;
- (void)player:(id)arg1 videoPlayError:(long long)arg2 error:(id)arg3;
- (void)player:(id)arg1 finishPlayVideoWithType:(long long)arg2;
- (void)player:(id)arg1 startPlayVideoWithType:(long long)arg2;
- (void)playerUrlInvalid:(id)arg1;
- (void)playerPrepareToPlay:(id)arg1;
- (void)playerPrepareDone:(id)arg1;
- (void)playerPrepare:(id)arg1;
- (id)p_convertPlayItemToYoukuInstanceItem:(id)arg1 needEncrypt:(_Bool)arg2;
@property(nonatomic) _Bool needSightEnhanceStatus;
@property(nonatomic) _Bool needSightEnhance; // @dynamic needSightEnhance;
- (void)openVRMode:(_Bool)arg1;
- (void)resetShpeerViewPoint;
@property(readonly, nonatomic) _Bool spheer3DVideo;
@property(nonatomic) _Bool enableGyroscope;
@property(nonatomic) _Bool lockScreen;
@property(nonatomic) UIGestureRecognizer *gestureForSpheer3DVideo;
- (struct CGSize)getVideoSize;
- (void)captureScreenEnd:(long long)arg1 success:(CDUnknownBlockType)arg2;
- (void)captureScreenEnd:(long long)arg1;
- (id)capturePlayerScreen:(id)arg1 destinationWidth:(long long)arg2 destinationHeight:(long long)arg3 destinationFormat:(long long)arg4 logoPath:(id)arg5 logoWidth:(long long)arg6 logoHeight:(long long)arg7 logoPositionX:(long long)arg8 logoPositionY:(long long)arg9 captureBarrageView:(_Bool)arg10;
- (id)captureScreen:(id)arg1 destinationWidth:(long long)arg2 destinationHeight:(long long)arg3 destinationFormat:(long long)arg4 logoPath:(id)arg5 logoWidth:(long long)arg6 logoHeight:(long long)arg7 logoPositionX:(long long)arg8 logoPositionY:(long long)arg9;
- (void)turnOnErrorInterface;
- (void)turnOffErrorInterface;
@property(readonly, nonatomic, getter=isBackgroundPlayingAudioMode) _Bool backgroundPlayingAudioMode;
@property(readonly, nonatomic, getter=isSupportBackgroundAudio) _Bool supportBackgroundAudio;
@property(nonatomic) _Bool backgroundPlayAudioEnable;
@property(nonatomic) _Bool audioPlayerMasterEnable;
@property(readonly, nonatomic, getter=isStereoPlayingAudioMode) _Bool stereoPlayingAudioMode;
@property(readonly, nonatomic, getter=isSupportStereoAudio) _Bool supportStereoAudio;
@property(nonatomic) _Bool stereoPlayAudioEnable;
@property(readonly, nonatomic, getter=isUsingCachedFilePlay) _Bool usingCachedFilePlay;
@property(readonly, nonatomic, getter=isCacheVideoCompleted) _Bool cacheVideoCompleted;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly, retain, nonatomic) NSDictionary *sidData;
@property(readonly) Class superclass;

@end

