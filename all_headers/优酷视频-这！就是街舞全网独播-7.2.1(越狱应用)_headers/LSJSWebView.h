//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "DYKH5WebView.h"

#import "LSWordEventDelegate-Protocol.h"
#import "UIWebViewDelegate-Protocol.h"

@class LSCallback, LSJSProcess, LSLiveInfoModel, LSLivePlayerDataManager, NSMutableDictionary, NSObject, NSString, UIButton;
@protocol LSLiveDataManagerProc, UIWebViewDelegate;

@interface LSJSWebView : DYKH5WebView <UIWebViewDelegate, LSWordEventDelegate>
{
    unsigned char _needAutoCloseWhenErrorFound;
    unsigned char _needBtnCloseForNoTopBar;
    LSLivePlayerDataManager *_dataManager;
    id <LSLiveDataManagerProc> _dataManagerProc;
    NSObject<UIWebViewDelegate> *_webviewDelegate;
    CDUnknownBlockType _urljsBlock;
    CDUnknownBlockType _blockWebViewDidFailLoadWithError;
    LSCallback *_mcallback;
    LSLiveInfoModel *_liveInfoModel;
    UIButton *_btnCloseForNoTopBar;
    LSJSProcess *_gameprocess;
    NSMutableDictionary *_events;
}

@property(retain, nonatomic) NSMutableDictionary *events; // @synthesize events=_events;
@property(retain, nonatomic) LSJSProcess *gameprocess; // @synthesize gameprocess=_gameprocess;
@property(retain, nonatomic) UIButton *btnCloseForNoTopBar; // @synthesize btnCloseForNoTopBar=_btnCloseForNoTopBar;
@property(nonatomic) unsigned char needBtnCloseForNoTopBar; // @synthesize needBtnCloseForNoTopBar=_needBtnCloseForNoTopBar;
@property(nonatomic) unsigned char needAutoCloseWhenErrorFound; // @synthesize needAutoCloseWhenErrorFound=_needAutoCloseWhenErrorFound;
@property(copy, nonatomic) LSLiveInfoModel *liveInfoModel; // @synthesize liveInfoModel=_liveInfoModel;
@property(retain, nonatomic) LSCallback *mcallback; // @synthesize mcallback=_mcallback;
@property(copy, nonatomic) CDUnknownBlockType blockWebViewDidFailLoadWithError; // @synthesize blockWebViewDidFailLoadWithError=_blockWebViewDidFailLoadWithError;
@property(copy, nonatomic) CDUnknownBlockType urljsBlock; // @synthesize urljsBlock=_urljsBlock;
@property(nonatomic) __weak NSObject<UIWebViewDelegate> *webviewDelegate; // @synthesize webviewDelegate=_webviewDelegate;
@property(nonatomic) __weak id <LSLiveDataManagerProc> dataManagerProc; // @synthesize dataManagerProc=_dataManagerProc;
@property(nonatomic) __weak LSLivePlayerDataManager *dataManager; // @synthesize dataManager=_dataManager;
- (void).cxx_destruct;
- (void)loginChangedNotification:(id)arg1;
- (void)webView:(id)arg1 didFailLoadWithError:(id)arg2;
- (void)webViewDidFinishLoad:(id)arg1;
- (void)webViewDidStartLoad:(id)arg1;
- (_Bool)webView:(id)arg1 shouldStartLoadWithRequest:(id)arg2 navigationType:(long long)arg3;
- (void)dealloc;
- (void)ykliveApiSetup;
- (void)removeEventListeners;
- (void)removeEventListener:(long long)arg1;
- (void)addEventListener:(long long)arg1;
- (void)receiveJson:(long long)arg1 json:(id)arg2;
- (void)innerSetup;
- (id)initWithCoder:(id)arg1;
- (void)loadURLString:(id)arg1;
- (void)loadURL:(id)arg1;
- (void)loadRequest:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1 dataManagerProc:(id)arg2;
- (id)initWithFrame:(struct CGRect)arg1 dataManager:(id)arg2;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithFrame:(struct CGRect)arg1 configuration:(id)arg2;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

