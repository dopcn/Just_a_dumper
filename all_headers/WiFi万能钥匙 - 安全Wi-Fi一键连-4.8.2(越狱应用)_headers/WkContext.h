//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class NSString;

@interface WkContext : NSObject
{
    _Bool _isSupportForExtension;
    _Bool _isSessionKeySetted;
    NSString *_mAppId;
    NSString *_mChannelID;
    NSString *_mOrgChannelID;
    NSString *_mKeyChainName;
    NSString *_mAppGroupSuitName;
    NSString *_mUHID;
    NSString *_mToken;
    NSString *_mCurLan;
    NSString *_mAPPVer;
    NSString *_mAPPBuild;
    NSString *_mLatitude;
    NSString *_mLongitude;
    NSString *_mMapProvider;
    NSString *_mDHID;
    NSString *_mIMEI;
    NSString *_mMac;
    NSString *_mAESKey;
    NSString *_mAESIV;
    NSString *_mMD5Key;
    NSString *_mHMacKey;
    NSString *_mPrivateKey;
    NSString *_mFixedAESKey;
    NSString *_mFixedAESIV;
    NSString *_mFixedPrivateKey;
}

+ (id)getInstance;
@property(retain, nonatomic) NSString *mFixedPrivateKey; // @synthesize mFixedPrivateKey=_mFixedPrivateKey;
@property(retain, nonatomic) NSString *mFixedAESIV; // @synthesize mFixedAESIV=_mFixedAESIV;
@property(retain, nonatomic) NSString *mFixedAESKey; // @synthesize mFixedAESKey=_mFixedAESKey;
@property(nonatomic) _Bool isSessionKeySetted; // @synthesize isSessionKeySetted=_isSessionKeySetted;
@property(retain, nonatomic) NSString *mPrivateKey; // @synthesize mPrivateKey=_mPrivateKey;
@property(retain, nonatomic) NSString *mHMacKey; // @synthesize mHMacKey=_mHMacKey;
@property(retain, nonatomic) NSString *mMD5Key; // @synthesize mMD5Key=_mMD5Key;
@property(retain, nonatomic) NSString *mAESIV; // @synthesize mAESIV=_mAESIV;
@property(retain, nonatomic) NSString *mAESKey; // @synthesize mAESKey=_mAESKey;
@property(retain, nonatomic) NSString *mMac; // @synthesize mMac=_mMac;
@property(retain, nonatomic) NSString *mIMEI; // @synthesize mIMEI=_mIMEI;
@property(retain, nonatomic) NSString *mDHID; // @synthesize mDHID=_mDHID;
@property(retain, nonatomic) NSString *mMapProvider; // @synthesize mMapProvider=_mMapProvider;
@property(retain, nonatomic) NSString *mLongitude; // @synthesize mLongitude=_mLongitude;
@property(retain, nonatomic) NSString *mLatitude; // @synthesize mLatitude=_mLatitude;
@property(retain, nonatomic) NSString *mAPPBuild; // @synthesize mAPPBuild=_mAPPBuild;
@property(retain, nonatomic) NSString *mAPPVer; // @synthesize mAPPVer=_mAPPVer;
@property(retain, nonatomic) NSString *mCurLan; // @synthesize mCurLan=_mCurLan;
@property(retain, nonatomic) NSString *mToken; // @synthesize mToken=_mToken;
@property(retain, nonatomic) NSString *mUHID; // @synthesize mUHID=_mUHID;
@property(retain, nonatomic) NSString *mAppGroupSuitName; // @synthesize mAppGroupSuitName=_mAppGroupSuitName;
@property(retain, nonatomic) NSString *mKeyChainName; // @synthesize mKeyChainName=_mKeyChainName;
@property(retain, nonatomic) NSString *mOrgChannelID; // @synthesize mOrgChannelID=_mOrgChannelID;
@property(retain, nonatomic) NSString *mChannelID; // @synthesize mChannelID=_mChannelID;
@property(retain, nonatomic) NSString *mAppId; // @synthesize mAppId=_mAppId;
@property(nonatomic) _Bool isSupportForExtension; // @synthesize isSupportForExtension=_isSupportForExtension;
- (void).cxx_destruct;
- (void)setFixedAESKey:(id)arg1 AESIV:(id)arg2 PrivateKey:(id)arg3;
- (id)getFixedPrivateKey;
- (id)getFixedAESIV;
- (id)getFixedAESKey;
- (void)setSessionKey:(id)arg1 iv:(id)arg2 md5:(id)arg3 hmac:(id)arg4 private:(id)arg5;
- (_Bool)isNeedRequestSessionKey;
- (void)needRequestSessionKey;
- (id)getPrivateKey;
- (id)getHMacKey;
- (id)getMD5Key;
- (id)getAESIV;
- (id)getAESKey;
- (void)getDeviceInfoInAppGroup;
- (void)backupDeviceInfoInAppGroup;
- (id)convertDataToString:(id)arg1;
- (void)backupValue:(id)arg1 userKey:(id)arg2 securityKey:(id)arg3;
- (id)getMacStringFromConfig;
- (id)getIMEIStringFromConfig;
- (id)getDHIDStringFromConfig;
- (id)getIDFAString;
- (id)getMac;
- (void)setIMEI:(id)arg1;
- (id)getIMEI;
- (void)setDHID:(id)arg1;
- (id)getDHID;
- (id)getPublicParams;
- (id)getVerCode;
- (id)getVerName;
- (id)getChannelID;
- (id)getAPPID;
- (void)setLanguage:(id)arg1;
- (id)getLanguage;
- (void)setUHID:(id)arg1 token:(id)arg2;
- (id)getUserToken;
- (id)getUHID;
- (void)initParams:(id)arg1 channelId:(id)arg2 keyChainName:(id)arg3 appGroupSuiteName:(id)arg4;
- (_Bool)isSupportedForExtension;
- (void)supportForExtension;
- (id)init;

@end

