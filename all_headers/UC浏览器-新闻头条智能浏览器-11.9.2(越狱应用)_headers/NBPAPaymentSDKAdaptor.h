//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

#import "ShuqiPayEnDecryptDelegate-Protocol.h"

@class NSArray, NSMutableDictionary, NSString;
@protocol NBPAPaymentSDKAdaptorDelegate;

@interface NBPAPaymentSDKAdaptor : NSObject <ShuqiPayEnDecryptDelegate>
{
    struct {
        unsigned int PurchaseTimeOutHandled:1;
        unsigned int GetBalanceTimeOutHandled:1;
        unsigned int GetProductListTimeOutHandled:1;
        unsigned int GetBatchInfoTimeOutHandled:1;
        unsigned int GetAccountInfoTimeOutHandled:1;
        unsigned int UpdateBeanTicketsInfoTimeOutHandled:1;
        unsigned int GetPresentBeanTicketsTimeOutHandled:1;
        unsigned int GetAccountRechargeStatusTimeOutHandled:1;
        unsigned int GetBeanTicketAffordBatchTimeOutHandled:1;
        unsigned int GetBeanTicketForUserTimeOutHandled:1;
        unsigned int GetBestBeanTicketSetTimeOutHandled:1;
    } _completionFlags;
    id <NBPAPaymentSDKAdaptorDelegate> _delegate;
    NSMutableDictionary *_receiptAssist;
    NSArray *_requireBeanTicketValues;
    unsigned long long _currentBuyType;
}

@property(nonatomic) unsigned long long currentBuyType; // @synthesize currentBuyType=_currentBuyType;
@property(nonatomic) CDStruct_52e1c6c6 completionFlags; // @synthesize completionFlags=_completionFlags;
@property(retain, nonatomic) NSArray *requireBeanTicketValues; // @synthesize requireBeanTicketValues=_requireBeanTicketValues;
@property(retain, nonatomic) NSMutableDictionary *receiptAssist; // @synthesize receiptAssist=_receiptAssist;
@property(nonatomic) id <NBPAPaymentSDKAdaptorDelegate> delegate; // @synthesize delegate=_delegate;
- (id)sdkM9EncodeDataWithOrg:(id)arg1;
- (id)sdkM9DecodeDataWithOrg:(id)arg1;
- (void)handleGetBestTicketSetWithResult:(long long)arg1 resultInfo:(id)arg2 params:(id)arg3;
- (void)handleGetBeanTicketForCurrentUserResult:(long long)arg1 resultInfo:(id)arg2 params:(id)arg3;
- (void)handleGetBeanTicketAffordBatchResult:(long long)arg1 resultInfo:(id)arg2 params:(id)arg3;
- (void)handleGetAccountRechargeStatusResult:(long long)arg1 resultInfo:(id)arg2 params:(id)arg3;
- (void)handleGetPresentTicketsWithResult:(long long)arg1 resultInfo:(id)arg2 params:(id)arg3;
- (void)handleUpdateBeanTicketsInfoResult:(long long)arg1 resultInfo:(id)arg2 params:(id)arg3;
- (void)handleGetBatchInfoResult:(long long)arg1 resultInfo:(id)arg2 params:(id)arg3;
- (void)handleGetRechargeProductResult:(long long)arg1 resultInfo:(id)arg2 params:(id)arg3;
- (void)handleRechargeResult:(long long)arg1 resultInfo:(id)arg2 params:(id)arg3;
- (void)handleGetAccountInfoResult:(long long)arg1 resultInfo:(id)arg2 params:(id)arg3;
- (void)handleGetBalanceResult:(long long)arg1 resultInfo:(id)arg2 params:(id)arg3;
- (void)handlePurchaseResult:(long long)arg1 resultInfo:(id)arg2 params:(id)arg3;
- (void)getBestBeanTicketSetWithParams:(id)arg1;
- (void)getBeanTicketForCurrentUserWithParams:(id)arg1;
- (void)getBeanTicketAffordCountWithParams:(id)arg1;
- (void)queryAccountRechargeStatusWithParams:(id)arg1;
- (void)retryReceipt:(id)arg1 withParams:(id)arg2;
- (void)retryReceiptsWithParam:(id)arg1;
- (void)requirePresentBeanTicketsWithParams:(id)arg1;
- (void)queryBeanTicketUpdateInfoWithParams:(id)arg1;
- (void)requireBatchInfoWithParam:(id)arg1;
- (void)rechargeWithParams:(id)arg1;
- (void)getRechargeProductWithParams:(id)arg1;
- (void)getAccountInfoWithParams:(id)arg1;
- (void)getBalanceWithParams:(id)arg1;
- (void)purchaseNovelWithParams:(id)arg1;
- (void)getBeanTicketForCurrentUserAtPage:(long long)arg1 forAmount:(long long)arg2;
- (void)getBeanTicket:(id)arg1 affordBatchFromChapter:(id)arg2 ofBook:(id)arg3;
- (void)requirePresentBeanTicketsWithValue:(id)arg1 andTypes:(id)arg2;
- (void)purchaseNovel:(id)arg1 from:(id)arg2 toCount:(id)arg3 bargainWith:(id)arg4 andVouchers:(id)arg5 forCost:(float)arg6;
- (void)getBestTicketSetForFullPurchaseOfBook:(id)arg1;
- (void)requireBatchInfoForNovel:(id)arg1 startFromChapter:(id)arg2;
- (void)queryAccountRechargeStatus;
- (void)rechargeWithProduct:(id)arg1;
- (void)requireRechargeProductList;
- (void)queryBeanTicketUpdateInfo;
- (void)queryAccountInfo;
- (void)queryBalance;
- (void)purchaseNovel:(id)arg1 inChapter:(id)arg2 forCost:(float)arg3 withDistcount:(id)arg4 andVouchers:(id)arg5;
- (void)cancelTimeOutHandler:(SEL)arg1;
- (void)scheduleTimeOutHandler:(SEL)arg1 forTimeOutIntervel:(double)arg2;
- (void)setUpTimeOutHandler:(SEL)arg1;
- (void)handleGetBestBeanTicketSetTimeOut;
- (void)handelGetBeanTicketForCurrentUserTimeOut;
- (void)handleGetBeanTicketAffordBatchCountTimeOut;
- (void)handleGetAccountRechargeStatusTimeOut;
- (void)handleGetPresentBeanTicketsTimeOut;
- (void)handleUpdateBeanTicketsInfoTimeOut;
- (void)handleGetAccountInfoTimeOut;
- (void)handleGetBatchInfoTimeOut;
- (void)handleGetProductListTimeOut;
- (void)handleGetBalanceTimeOut;
- (void)handlePurchaseTimeOut;
- (id)mutableDictionaryWithTimeConsumeOfParams:(id)arg1;
- (id)timeConsumeAccordingParams:(id)arg1;
- (void)addTimeRecordToInterfaceParams:(id)arg1;
- (id)localUserUnavailableResult;
- (id)localTimeoutErrorResult;
- (id)localParamParseErrorResult;
- (id)stringFromErrorCode:(long long)arg1;
- (id)receiptInfoUniqueIdentifer:(id)arg1;
- (void)getUserIDWithSuccessFulHandler:(CDUnknownBlockType)arg1;
- (id)getChpaterIDsFromPurchaseResult:(id)arg1 andPayParams:(id)arg2;
- (void)notifyDelegatePurchaseFinishedWithDetail:(id)arg1 andPurhcaseType:(unsigned long long)arg2;
- (_Bool)fullfillParamDictionary:(id)arg1 withHostType:(long long)arg2;
- (void)dealloc;
- (id)init;
- (void)stopRetryAllReceipts;
- (void)stopRetryReceipt:(id)arg1;
- (_Bool)removeReceipt:(id)arg1;
- (void)retryReceiptInHightPriority:(id)arg1;
- (void)retryAllReceipts;
- (_Bool)hasAuthenticationFailedReceipts;
- (long long)localStoredReceiptsCount;
- (_Bool)isNetworkReachable;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

