//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <CFNetwork/NSURLProtocol.h>

#import "BBANetDataTrafficNoticeRecorderCancelDelegate-Protocol.h"
#import "BBAWANetworkProvider-Protocol.h"
#import "NSURLSessionDataDelegate-Protocol.h"

@class NSArray, NSMutableData, NSString, NSThread, NSURLResponse, NSURLSessionDataTask;

@interface BBAGlobalURLProtocol : NSURLProtocol <BBANetDataTrafficNoticeRecorderCancelDelegate, NSURLSessionDataDelegate, BBAWANetworkProvider>
{
    long long _recordId;
    long long _noticeRecordId;
    unsigned long long _protocolType;
    struct {
        unsigned int didStartLoading:1;
        unsigned int didStopLoading:1;
        unsigned int didReceiveResponse:1;
        unsigned int didFinishedLoading:1;
    } _flags;
    _Bool _needAppendData;
    _Bool _shouldUseMF;
    _Bool _matchUserRule;
    NSMutableData *_data;
    NSURLResponse *_response;
    NSThread *_clientThread;
    NSArray *_modes;
    NSURLSessionDataTask *_task;
}

+ (id)canonicalRequestForRequest:(id)arg1;
+ (_Bool)canInitWithRequest:(id)arg1;
+ (void)enableFileProtocolProtector:(_Bool)arg1;
+ (void)enableServiceWorker:(_Bool)arg1;
+ (id)sharedNoramlDemux;
+ (id)sharedDemux;
+ (void)swapMutableSetAddObjectWithBBAMethod;
+ (_Bool)hades_shouldInterceptRequest:(id)arg1;
+ (_Bool)webapp_canInitWithRequest:(id)arg1;
@property _Bool matchUserRule; // @synthesize matchUserRule=_matchUserRule;
@property(retain) NSURLSessionDataTask *task; // @synthesize task=_task;
@property _Bool shouldUseMF; // @synthesize shouldUseMF=_shouldUseMF;
@property(copy) NSArray *modes; // @synthesize modes=_modes;
@property(retain) NSThread *clientThread; // @synthesize clientThread=_clientThread;
@property(retain, nonatomic) NSURLResponse *response; // @synthesize response=_response;
@property(retain, nonatomic) NSMutableData *data; // @synthesize data=_data;
- (void).cxx_destruct;
- (void)netDataTrafficNoticeRecorderCancel;
- (void)handleCancel;
- (void)handleError:(id)arg1;
- (void)handldFinishedLoading;
- (void)handleReceiveData:(id)arg1;
- (void)handleAResponse:(id)arg1;
- (id)bbawaRequest;
- (void)clearAll;
- (void)clearAllOnClientThread;
- (void)appendData:(id)arg1;
- (void)connection:(id)arg1 willSendRequestForAuthenticationChallenge:(id)arg2;
- (void)connectionDidFinishLoading:(id)arg1;
- (void)connection:(id)arg1 didReceiveResponse:(id)arg2;
- (void)connection:(id)arg1 didFailWithError:(id)arg2;
- (void)connection:(id)arg1 didReceiveData:(id)arg2;
- (id)connection:(id)arg1 willSendRequest:(id)arg2 redirectResponse:(id)arg3;
- (void)URLSession:(id)arg1 task:(id)arg2 didReceiveChallenge:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)URLSession:(id)arg1 task:(id)arg2 didCompleteWithError:(id)arg3;
- (void)URLSession:(id)arg1 dataTask:(id)arg2 didReceiveData:(id)arg3;
- (void)URLSession:(id)arg1 dataTask:(id)arg2 didReceiveResponse:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)URLSession:(id)arg1 task:(id)arg2 willPerformHTTPRedirection:(id)arg3 newRequest:(id)arg4 completionHandler:(CDUnknownBlockType)arg5;
- (void)onThreadPerformBlock:(CDUnknownBlockType)arg1;
- (void)protocolPerformOnThread:(id)arg1 modes:(id)arg2 block:(CDUnknownBlockType)arg3;
- (void)removeMarkRequest:(id)arg1;
- (void)markRequestIsHandle:(id)arg1;
- (void)passThroughInOriginalThread;
- (void)passThrough;
- (void)cancelRequest;
- (void)stopLoading;
- (void)startLoading;
- (void)dealloc;
- (void)hades_connectionDidFinishLoading:(id)arg1;
- (void)hades_connection:(id)arg1 didReceiveResponse:(id)arg2;
- (void)hades_connection:(id)arg1 didFailWithError:(id)arg2;
- (void)hades_connection:(id)arg1 didReceiveData:(id)arg2;
- (void)hades_connection:(id)arg1 willSendRequest:(id)arg2 redirectResponse:(id)arg3;
- (void)webapp_startLoading;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

