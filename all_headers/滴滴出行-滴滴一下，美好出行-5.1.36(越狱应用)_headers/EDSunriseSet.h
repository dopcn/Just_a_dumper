//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class NSCalendar, NSDate, NSDateComponents, NSTimeZone;

@interface EDSunriseSet : NSObject
{
    NSDate *_date;
    NSDate *_sunset;
    NSDate *_sunrise;
    NSDate *_civilTwilightStart;
    NSDate *_civilTwilightEnd;
    NSDate *_nauticalTwilightStart;
    NSDate *_nauticalTwilightEnd;
    NSDate *_astronomicalTwilightStart;
    NSDate *_astronomicalTwilightEnd;
    NSDateComponents *_localSunrise;
    NSDateComponents *_localSunset;
    NSDateComponents *_localCivilTwilightStart;
    NSDateComponents *_localCivilTwilightEnd;
    NSDateComponents *_localNauticalTwilightStart;
    NSDateComponents *_localNauticalTwilightEnd;
    NSDateComponents *_localAstronomicalTwilightStart;
    NSDateComponents *_localAstronomicalTwilightEnd;
    double _latitude;
    double _longitude;
    NSTimeZone *_timezone;
    NSCalendar *_calendar;
    NSTimeZone *_utcTimeZone;
}

+ (id)sunrisesetWithDate:(id)arg1 timezone:(id)arg2 latitude:(double)arg3 longitude:(double)arg4;
@property(retain, nonatomic) NSTimeZone *utcTimeZone; // @synthesize utcTimeZone=_utcTimeZone;
@property(retain, nonatomic) NSCalendar *calendar; // @synthesize calendar=_calendar;
@property(retain, nonatomic) NSTimeZone *timezone; // @synthesize timezone=_timezone;
@property(nonatomic) double longitude; // @synthesize longitude=_longitude;
@property(nonatomic) double latitude; // @synthesize latitude=_latitude;
@property(retain) NSDateComponents *localAstronomicalTwilightEnd; // @synthesize localAstronomicalTwilightEnd=_localAstronomicalTwilightEnd;
@property(retain) NSDateComponents *localAstronomicalTwilightStart; // @synthesize localAstronomicalTwilightStart=_localAstronomicalTwilightStart;
@property(retain) NSDateComponents *localNauticalTwilightEnd; // @synthesize localNauticalTwilightEnd=_localNauticalTwilightEnd;
@property(retain) NSDateComponents *localNauticalTwilightStart; // @synthesize localNauticalTwilightStart=_localNauticalTwilightStart;
@property(retain) NSDateComponents *localCivilTwilightEnd; // @synthesize localCivilTwilightEnd=_localCivilTwilightEnd;
@property(retain) NSDateComponents *localCivilTwilightStart; // @synthesize localCivilTwilightStart=_localCivilTwilightStart;
@property(retain) NSDateComponents *localSunset; // @synthesize localSunset=_localSunset;
@property(retain) NSDateComponents *localSunrise; // @synthesize localSunrise=_localSunrise;
@property(retain) NSDate *astronomicalTwilightEnd; // @synthesize astronomicalTwilightEnd=_astronomicalTwilightEnd;
@property(retain) NSDate *astronomicalTwilightStart; // @synthesize astronomicalTwilightStart=_astronomicalTwilightStart;
@property(retain) NSDate *nauticalTwilightEnd; // @synthesize nauticalTwilightEnd=_nauticalTwilightEnd;
@property(retain) NSDate *nauticalTwilightStart; // @synthesize nauticalTwilightStart=_nauticalTwilightStart;
@property(retain) NSDate *civilTwilightEnd; // @synthesize civilTwilightEnd=_civilTwilightEnd;
@property(retain) NSDate *civilTwilightStart; // @synthesize civilTwilightStart=_civilTwilightStart;
@property(retain) NSDate *sunrise; // @synthesize sunrise=_sunrise;
@property(retain) NSDate *sunset; // @synthesize sunset=_sunset;
@property(retain) NSDate *date; // @synthesize date=_date;
- (void).cxx_destruct;
- (id)initWithDate:(id)arg1 timezone:(id)arg2 latitude:(double)arg3 longitude:(double)arg4;
- (int)sunRiseSetHelperForYear:(int)arg1 month:(int)arg2 day:(int)arg3 longitude:(double)arg4 latitude:(double)arg5 altitude:(double)arg6 upper_limb:(int)arg7 trise:(double *)arg8 tset:(double *)arg9;
- (int)astronomicalTwilightForYear:(int)arg1 month:(int)arg2 day:(int)arg3 longitude:(double)arg4 latitude:(double)arg5 trise:(double *)arg6 tset:(double *)arg7;
- (int)nauticalTwilightForYear:(int)arg1 month:(int)arg2 day:(int)arg3 longitude:(double)arg4 latitude:(double)arg5 trise:(double *)arg6 tset:(double *)arg7;
- (int)civilTwilightForYear:(int)arg1 month:(int)arg2 day:(int)arg3 longitude:(double)arg4 latitude:(double)arg5 trise:(double *)arg6 tset:(double *)arg7;
- (int)sunRiseSetForYear:(int)arg1 month:(int)arg2 day:(int)arg3 longitude:(double)arg4 latitude:(double)arg5 trise:(double *)arg6 tset:(double *)arg7;
- (void)sun_RA_decAtDay:(double)arg1 RA:(double *)arg2 decl:(double *)arg3 r:(double *)arg4;
- (void)sunposAtDay:(double)arg1 longitude:(double *)arg2 r:(double *)arg3;
- (double)GMST0:(double)arg1;
- (double)rev180:(double)arg1;
- (double)revolution:(double)arg1;
- (void)calculate;
- (void)calculateTwilight;
- (void)calculateSunriseSunset;
- (id)description;
- (id)init;
- (id)localTime:(id)arg1;
- (id)utcTime:(id)arg1 withOffset:(double)arg2;

@end

