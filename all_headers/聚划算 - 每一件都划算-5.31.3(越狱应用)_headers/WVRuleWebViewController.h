//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <UIKit/UIViewController.h>

#import "WVURLInterceptorCallbackProtocol-Protocol.h"
#import "WVWebViewControllerBasicProtocol-Protocol.h"
#import "WVWebViewDelegate-Protocol.h"

@class NSString, NSURL, NSURLRequest, UIScrollView, UIView, WKWebViewConfiguration, WVUserContentController;
@protocol WVWebViewProtocol;

@interface WVRuleWebViewController : UIViewController <WVWebViewControllerBasicProtocol, WVWebViewDelegate, WVURLInterceptorCallbackProtocol>
{
    _Bool _bounces;
    _Bool _openWebKitLongPress;
    _Bool _openLongPressSaveImage;
    _Bool _allowsInlineMediaPlayback;
    _Bool _mediaPlaybackRequiresUserAction;
    _Bool _openLocalService;
    _Bool _usePullToRefresh;
    _Bool _useInfiniteScrolling;
    _Bool _useCustomPullToRefresh;
    _Bool _pullToRefreshConfigured;
    UIView<WVWebViewProtocol> *_webView;
    _Bool _recycleWebView;
    long long _useWKWebView;
    WKWebViewConfiguration *_WKWebViewConfiguration;
    CDUnknownBlockType _souldStartLoadAction;
    CDUnknownBlockType _didStartLoadAction;
    CDUnknownBlockType _didFinishLoadAction;
    CDUnknownBlockType _didFailLoadAction;
    CDUnknownBlockType _didReceiveJSLogAction;
}

+ (void)removeRecycleWebViews;
@property(copy, nonatomic) CDUnknownBlockType didReceiveJSLogAction; // @synthesize didReceiveJSLogAction=_didReceiveJSLogAction;
@property(copy, nonatomic) CDUnknownBlockType didFailLoadAction; // @synthesize didFailLoadAction=_didFailLoadAction;
@property(copy, nonatomic) CDUnknownBlockType didFinishLoadAction; // @synthesize didFinishLoadAction=_didFinishLoadAction;
@property(copy, nonatomic) CDUnknownBlockType didStartLoadAction; // @synthesize didStartLoadAction=_didStartLoadAction;
@property(copy, nonatomic) CDUnknownBlockType souldStartLoadAction; // @synthesize souldStartLoadAction=_souldStartLoadAction;
@property(retain, nonatomic) WKWebViewConfiguration *WKWebViewConfiguration; // @synthesize WKWebViewConfiguration=_WKWebViewConfiguration;
@property(nonatomic) _Bool recycleWebView; // @synthesize recycleWebView=_recycleWebView;
@property(nonatomic, getter=isUseWKWebView) long long useWKWebView; // @synthesize useWKWebView=_useWKWebView;
- (void).cxx_destruct;
- (CDUnknownBlockType)callBackResponeseForJSWithHandlerName:(id)arg1 className:(id)arg2;
- (id)currentJSBContext;
- (id)getWebView;
- (void)autoWiredJSBridgeWithTargetJSFile:(id)arg1;
- (void)setIsForbiddenBroswerViewPull:(_Bool)arg1;
- (_Bool)isForbiddenBroswerViewPull;
- (void)closeLongPressSaveImage;
- (void)openLongPressSaveImage;
- (void)permiteLongPressEvent;
- (void)forbiddenLongPressEvent;
- (void)setIsUseWKWebView:(long long)arg1;
- (_Bool)isWebViewReleased;
- (void)releaseWebView;
@property(nonatomic, getter=isForbiddenPullScroll) _Bool forbiddenPullScroll;
- (float)getArrowWidth;
- (float)getArrowHeight;
- (id)getArrowImage;
- (void)webViewRefresh;
@property(readonly, nonatomic, getter=isLoading) _Bool loading;
- (_Bool)interruptJumpToLocalPage:(long long)arg1 withParam:(id)arg2 withRequest:(id)arg3;
- (id)getCurrentUrl;
- (void)presentViewController:(id)arg1 animated:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;
- (void)configPullToRefreshStyle;
- (void)configPullToRefresh;
- (void)viewDidLayoutSubviews;
- (void)loadView;
@property(nonatomic, getter=isUseCustomPullToRefresh) _Bool useCustomPullToRefresh;
@property(nonatomic, getter=isUseInfiniteScrolling) _Bool useInfiniteScrolling;
@property(nonatomic, getter=isUsePullToRefresh) _Bool usePullToRefresh;
- (void)webView:(id)arg1 didReceiveJSLog:(id)arg2 level:(long long)arg3;
- (void)webView:(id)arg1 didFailLoadWithError:(id)arg2;
- (void)webViewDidFinishLoad:(id)arg1;
- (void)webViewDidStartLoad:(id)arg1;
- (_Bool)webView:(id)arg1 shouldStartLoadWithRequest:(id)arg2 navigationType:(long long)arg3;
- (id)webviewJSBContext;
- (void)callRegistedHandler:(id)arg1 withMethod:(id)arg2 withData:(id)arg3 withFatherClass:(id)arg4 withFatherMethod:(id)arg5 withResultCallback:(CDUnknownBlockType)arg6;
- (void)callRegistedHandler:(id)arg1 withMethod:(id)arg2 withData:(id)arg3 withFatherClass:(id)arg4 withFatherMethod:(id)arg5;
- (void)registeHandler:(id)arg1 withClassName:(id)arg2 handler:(CDUnknownBlockType)arg3;
- (void)registerHandler:(id)arg1 withClassName:(id)arg2 withHandler:(CDUnknownBlockType)arg3;
- (void)registerHandler:(id)arg1 withBlock:(CDUnknownBlockType)arg2;
- (void)closeLocalService;
- (void)openLocalService;
- (void)setIsOpenLocalService:(_Bool)arg1;
@property(nonatomic, getter=isOpenLocalService) _Bool openLocalService;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)webViewReload;
- (void)webViewStopLoading;
- (void)webViewGoForward;
- (void)webViewGoBack;
- (_Bool)decideIsUseWKWebView;
- (void)dealloc;
- (void)loadPageByUrl:(id)arg1 postBody:(id)arg2;
- (void)loadPageByUrl:(id)arg1;
- (void)loadPageByRequest:(id)arg1;
@property(readonly, nonatomic) _Bool webViewCanGoForward;
@property(readonly, nonatomic) _Bool webViewCanGoBack;
@property(nonatomic, getter=isAutoPlayAudio) _Bool autoPlayAudio;
@property(nonatomic) _Bool mediaPlaybackRequiresUserAction;
@property(nonatomic) _Bool allowsInlineMediaPlayback;
@property(nonatomic, getter=isOpenLongPressSaveImage) _Bool openLongPressSaveImage;
@property(nonatomic, getter=isOpenWebKitLongPress) _Bool openWebKitLongPress;
@property(readonly, nonatomic) WVUserContentController *userContentController;
@property(readonly, copy, nonatomic) NSURL *webViewURL;
@property(readonly, copy, nonatomic) NSURLRequest *webViewRequest;
@property(readonly, nonatomic, getter=isWebViewLoading) _Bool webViewLoading;
@property(nonatomic) _Bool bounces;
@property(readonly, nonatomic) __weak UIScrollView *webViewScrollView;
- (void)initWebView;
@property(readonly, nonatomic) UIView<WVWebViewProtocol> *internalWebView;
- (void)setWebView:(id)arg1;
@property(readonly, nonatomic) UIView<WVWebViewProtocol> *webView;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

