//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "MTBAppStatusOvservable-Protocol.h"
#import "MTBMediaAdViewDelegate-Protocol.h"
#import "MTBWebViewJSBridgeCollapseEmbedPage-Protocol.h"

@class MTBMultiSourceRequest, MTBSplashAdView, NSDate, NSString, NSTimer, UIView, UIWindow;
@protocol MTBSplashAdDelegate;

@interface MTBSplashAdManager : NSObject <MTBMediaAdViewDelegate, MTBAppStatusOvservable, MTBWebViewJSBridgeCollapseEmbedPage>
{
    _Bool _isColdStart;
    _Bool _hasClickAd;
    _Bool _hasPendingDisplayTask;
    _Bool _isIntervalLargerThanSetting;
    _Bool _shouldPerformPreparationalLoad;
    int _splashStackCount;
    NSDate *_lastLeaveDate;
    NSTimer *_tickTimer;
    long long _leftTickCount;
    double _videoPlayDuration;
    unsigned long long _splashShownCountInWarmStart;
    double _intervalBetweenSplash;
    double _splashStartAppearingTime;
    NSString *_adConfigID;
    unsigned long long _splashRequestTimes;
    UIView *_splashDefaultView;
    UIWindow *_splashWindow;
    double _baseWindowLevel;
    MTBSplashAdView *_splashAdView;
    MTBMultiSourceRequest *_multiPlatRequest;
    id <MTBSplashAdDelegate> _splashDelegate;
    unsigned long long _skipButtonPositionType;
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (id)shareSplashAdManger;
+ (id)sharedManager;
@property(nonatomic) _Bool shouldPerformPreparationalLoad; // @synthesize shouldPerformPreparationalLoad=_shouldPerformPreparationalLoad;
@property(nonatomic) _Bool isIntervalLargerThanSetting; // @synthesize isIntervalLargerThanSetting=_isIntervalLargerThanSetting;
@property(nonatomic) _Bool hasPendingDisplayTask; // @synthesize hasPendingDisplayTask=_hasPendingDisplayTask;
@property(nonatomic, getter=isHasClickAd) _Bool hasClickAd; // @synthesize hasClickAd=_hasClickAd;
@property(nonatomic) unsigned long long skipButtonPositionType; // @synthesize skipButtonPositionType=_skipButtonPositionType;
@property(nonatomic) __weak id <MTBSplashAdDelegate> splashDelegate; // @synthesize splashDelegate=_splashDelegate;
@property(retain, nonatomic) MTBMultiSourceRequest *multiPlatRequest; // @synthesize multiPlatRequest=_multiPlatRequest;
@property(retain, nonatomic) MTBSplashAdView *splashAdView; // @synthesize splashAdView=_splashAdView;
@property(nonatomic) double baseWindowLevel; // @synthesize baseWindowLevel=_baseWindowLevel;
@property(retain, nonatomic) UIWindow *splashWindow; // @synthesize splashWindow=_splashWindow;
@property(retain, nonatomic) UIView *splashDefaultView; // @synthesize splashDefaultView=_splashDefaultView;
@property(nonatomic) unsigned long long splashRequestTimes; // @synthesize splashRequestTimes=_splashRequestTimes;
@property(retain, nonatomic) NSString *adConfigID; // @synthesize adConfigID=_adConfigID;
@property(nonatomic) double splashStartAppearingTime; // @synthesize splashStartAppearingTime=_splashStartAppearingTime;
@property(nonatomic) double intervalBetweenSplash; // @synthesize intervalBetweenSplash=_intervalBetweenSplash;
@property(nonatomic) _Bool isColdStart; // @synthesize isColdStart=_isColdStart;
@property(nonatomic) unsigned long long splashShownCountInWarmStart; // @synthesize splashShownCountInWarmStart=_splashShownCountInWarmStart;
@property(nonatomic) double videoPlayDuration; // @synthesize videoPlayDuration=_videoPlayDuration;
@property(nonatomic) long long leftTickCount; // @synthesize leftTickCount=_leftTickCount;
@property(retain, nonatomic) NSTimer *tickTimer; // @synthesize tickTimer=_tickTimer;
@property(retain, nonatomic) NSDate *lastLeaveDate; // @synthesize lastLeaveDate=_lastLeaveDate;
@property(nonatomic) int splashStackCount; // @synthesize splashStackCount=_splashStackCount;
- (void).cxx_destruct;
- (void)dealloc;
- (void)setSkipButtonTitleWithTime:(long long)arg1;
- (id)referenceViewController;
- (void)collapseEmbeddedContentAnimated:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;
- (void)collapseAnimated:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;
- (void)resetWindow:(_Bool)arg1 animated:(_Bool)arg2 videoPlayCompleted:(_Bool)arg3;
- (void)resetWindow:(_Bool)arg1 animated:(_Bool)arg2;
- (void)showAdView;
- (void)reportSplashPV;
- (_Bool)prepareSplash;
- (_Bool)shouldAbortSplash;
@property(readonly, nonatomic, getter=isShowingSplashAd) _Bool showingSplashAd;
- (void)startFetchingSplashAdsAsFirstTime:(_Bool)arg1;
- (void)tick:(id)arg1;
- (void)createTimer;
- (void)startTimer;
- (void)adViewCurrentContextDidLeaveWithCommand:(unsigned long long)arg1;
- (void)adView:(id)arg1 shareToPlatform:(long long)arg2 title:(id)arg3 content:(id)arg4 link:(id)arg5 andImageURL:(id)arg6 currentViewController:(id)arg7 successCompletion:(CDUnknownBlockType)arg8;
- (_Bool)adView:(id)arg1 externalJumpWithPossibleMTScheme:(id)arg2 possibleMTAction:(id)arg3 jumpOperation:(id)arg4;
- (id)adView:(id)arg1 internalJumpWithDestination:(id)arg2 jumpOperation:(id)arg3;
- (void)adView:(id)arg1 didFailLoadingWithError:(id)arg2;
- (void)adView:(id)arg1 didFinishLoadingUsingCache:(_Bool)arg2;
- (void)adViewDidPlayToEnd:(id)arg1;
- (void)adViewDidStartFromBeginning:(id)arg1 videoDuration:(double)arg2;
- (void)appDidEnterBackground;
- (void)appWillEnterForeground;
- (void)enableSplashWithAdConfID:(id)arg1 splashDelegate:(id)arg2 skipButtonPosition:(unsigned long long)arg3 baseWindowLevel:(double)arg4;
- (void)enableSplashWithAdConfID:(id)arg1 splashDelegate:(id)arg2;
- (struct CGSize)normalizedWindowSize;
- (struct CGSize)mainWindowSize;
@property(readonly, nonatomic) double splashDuration;
@property(retain, nonatomic) NSString *lastLocalizationString;
@property(retain, nonatomic) NSString *lastAppVersion;
- (id)localizationStringForSplashImage;
- (id)launchImageView;
- (void)appStatusChanged:(_Bool)arg1;
- (void)setupNotification;
- (id)init;
- (void)enableSplashWithPositionId:(id)arg1 splashDelegate:(id)arg2 jsBridgeDelegate:(id)arg3 customJSBridgeHandleDelegate:(id)arg4 skipButtonPosition:(unsigned long long)arg5 baseWindowLevel:(double)arg6;
- (void)enableSplashWithPositionId:(id)arg1 splashDelegate:(id)arg2 skipButtonPosition:(unsigned long long)arg3 baseWindowLevel:(double)arg4;
- (void)enableSplashWithPositionId:(id)arg1 splashDelegate:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

