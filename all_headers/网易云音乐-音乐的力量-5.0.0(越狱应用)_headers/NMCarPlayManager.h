//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "MPPlayableContentDataSource-Protocol.h"
#import "MPPlayableContentDelegate-Protocol.h"
#import "NMPlayListGetManagerDelegate-Protocol.h"

@class MPContentItem, NMAlbumSongPrivilegeRequest, NMAlbumSongRequest, NMCarPlayCacheHandler, NMDjProgram, NMDjRadioProgramRequest, NMGetBatchRequest, NMMyAlbumRequest, NMMyPlaylistSqliteManager, NMPlaylist, NMPlaylistDetailRequest, NMPriorityApiRequestManager, NMSubscribeCountRequest, NSMutableArray, NSMutableDictionary, NSString, UIImage;
@protocol OS_dispatch_semaphore;

@interface NMCarPlayManager : NSObject <MPPlayableContentDataSource, MPPlayableContentDelegate, NMPlayListGetManagerDelegate>
{
    NSObject<OS_dispatch_semaphore> *_semaphore;
    CDUnknownBlockType _beginLoadCompleteBlock;
    NMMyPlaylistSqliteManager *_myPlaylistSqliteManager;
    NMDjRadioProgramRequest *_programRequest;
    NMPlaylistDetailRequest *_detailRequest;
    NMDjRadioProgramRequest *_lastProgramRequest;
    NMSubscribeCountRequest *_subscribeCountRequest;
    NMGetBatchRequest *_subedAndBoughtRequest;
    NMMyAlbumRequest *_myAlbumRequest;
    NMAlbumSongRequest *_nginxCacheAlbumInfoRequest;
    NMAlbumSongPrivilegeRequest *_albumPrivilegeRequest;
    NMPriorityApiRequestManager *_priorityRequestManager;
    NMAlbumSongRequest *_deletedAlbumInfoRequest;
    NSMutableDictionary *_albumPrivilegesDict;
    _Bool _hasDjRadio;
    _Bool _needShowLastPlay;
    NSMutableArray *_downloadSongArray;
    NSMutableArray *_downloadSongContentArray;
    NSMutableArray *_myPlaylistContentArray;
    NSMutableArray *_myPlaylistArray;
    NMPlaylist *_myDownloadPlaylist;
    NMPlaylist *_myLikePlaylist;
    NSMutableArray *_songArray;
    NSMutableArray *_songContentArray;
    NSMutableArray *_allDjRadioArray;
    NSMutableArray *_allDjRadioContentArray;
    NSMutableArray *_djProgramArray;
    NSMutableArray *_djProgramContentArray;
    NSMutableArray *_myAlbumArray;
    NSMutableArray *_myAlbumContentArray;
    long long _downloadDjProgramRow;
    unsigned long long _radioLevelSpecialItemNum;
    unsigned long long _carRadioRow;
    NMDjProgram *_lastdjProgram;
    MPContentItem *_currentContentItem;
    long long _enterSameItemCount;
    UIImage *_myPlaylistIconImage;
    UIImage *_fmIconImage;
    UIImage *_radioIconImage;
    UIImage *_dldmusicIconImage;
    UIImage *_vehicleIconImage;
    UIImage *_playAllIconImage;
    UIImage *_loveIconImage;
    UIImage *_myAlbumIconImage;
    _Bool _firstRequestMyPlaylist;
    NMCarPlayCacheHandler *_carPlayCacheHandler;
}

+ (id)defaultManager;
@property(retain, nonatomic) NMCarPlayCacheHandler *carPlayCacheHandler; // @synthesize carPlayCacheHandler=_carPlayCacheHandler;
- (void).cxx_destruct;
- (void)daTrack:(id)arg1;
- (void)dealloc;
- (void)clearData;
- (id)handleErrorInIOS8:(long long)arg1;
- (void)alertHandleErrorTip;
- (void)alertWANN;
- (id)generateError:(long long)arg1;
- (_Bool)isCurrentPlayingDjProgram:(id)arg1;
- (void)playSelectedProgram:(id)arg1 djRadio:(id)arg2 withComplete:(CDUnknownBlockType)arg3;
- (_Bool)checkSongInPlaylistCanPlay:(id)arg1;
- (id)collectionForResource:(id)arg1;
- (void)playAllInternalWithResource:(id)arg1 withComplete:(CDUnknownBlockType)arg2;
- (void)playSelectedSong:(id)arg1 resource:(id)arg2 withComplete:(CDUnknownBlockType)arg3;
- (_Bool)checkCanPlay:(CDUnknownBlockType)arg1;
- (id)generateNoContentItemWithType:(long long)arg1;
- (void)resetSongArrayEmpty;
- (void)generateDjProgramArray:(id)arg1;
- (void)parseRadioProgramsResult:(id)arg1 withRadioId:(id)arg2;
- (id)parseBoughtDjRadio:(id)arg1;
- (id)parseSubedDjRadio:(id)arg1;
- (void)loadProgramsDataByRadioId:(id)arg1 withComplete:(CDUnknownBlockType)arg2;
- (void)loadProgramsDataByRadioId:(id)arg1 withDjProgrameData:(id)arg2 withComplete:(CDUnknownBlockType)arg3;
- (void)loadLastPlayfromDbWithDjRadioId:(id)arg1 withComplete:(CDUnknownBlockType)arg2;
- (void)loadSubedAndBoughtDjRadioDataWithComplete:(CDUnknownBlockType)arg1;
- (void)generateDjRadioContentArray:(id)arg1;
- (void)loadSubedAndBoughtDjRadioData:(id)arg1 WithComplete:(CDUnknownBlockType)arg2;
- (void)loadDownloadDjProgramWithComplete:(CDUnknownBlockType)arg1;
- (void)generateDjProgramContentArray:(id)arg1;
- (void)loadDownloadDjProgram:(id)arg1 WithComplete:(CDUnknownBlockType)arg2;
- (void)doLoadSubedAndBoughtRadioWithComplete:(CDUnknownBlockType)arg1;
- (void)finishLoadOfflineProgramData:(id)arg1 WithComplete:(CDUnknownBlockType)arg2;
- (void)doLoadOfflineProgramDataWithComplete:(CDUnknownBlockType)arg1;
- (void)loadDjRadioData:(id)arg1 WithComplete:(CDUnknownBlockType)arg2;
- (void)loadPlaylistOnLineWithPlaylist:(id)arg1 downloadArray:(id)arg2 withComplete:(CDUnknownBlockType)arg3;
- (void)loadPlaylistOffLine:(id)arg1 withComplete:(CDUnknownBlockType)arg2;
- (void)loadFromLocalDidFinish:(id)arg1 withComplete:(CDUnknownBlockType)arg2;
- (void)loadFromLocalWithPlaylistId:(id)arg1 withComplete:(CDUnknownBlockType)arg2;
- (id)parsePrivilegesDic:(id)arg1;
- (void)loadMyplaylistDetail:(id)arg1 withComplete:(CDUnknownBlockType)arg2;
- (void)generateSongsContent:(id)arg1;
- (void)loadPlaylistSongs:(id)arg1 withPlaylistId:(id)arg2 withComplete:(CDUnknownBlockType)arg3;
- (void)parseAlbumInfoWithResult:(id)arg1 withAlbumId:(id)arg2 withComplete:(CDUnknownBlockType)arg3;
- (void)parseAlbumPrivilegeWithResult:(id)arg1;
- (void)requestAlbumDetailFailedWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)requestAlbumFail:(id)arg1 withAlbumId:(id)arg2 withCompletionHandler:(CDUnknownBlockType)arg3;
- (void)handlePriorityRequestArray:(id)arg1 withSuccess:(_Bool)arg2 withAlbumId:(id)arg3 withCompletionHandler:(CDUnknownBlockType)arg4;
- (void)loadAlbumDetail:(id)arg1 withComplete:(CDUnknownBlockType)arg2;
- (void)loadAlbumSongs:(id)arg1 withAlbumId:(id)arg2 withComplete:(CDUnknownBlockType)arg3;
- (void)generateAlbumsContent:(id)arg1;
- (void)finishRequestMyAlbums:(id)arg1;
- (void)requestMyAlbumlistWithComplete:(CDUnknownBlockType)arg1;
- (void)loadMyAlbumlist:(id)arg1 withComplete:(CDUnknownBlockType)arg2;
- (void)generateDownloadContenArray:(id)arg1;
- (void)downloadSongsDidLoad:(id)arg1 withComplete:(CDUnknownBlockType)arg2;
- (void)loadDownloadSong:(id)arg1 WithComplete:(CDUnknownBlockType)arg2;
@property(nonatomic) _Bool firstRequestMyPlaylist; // @synthesize firstRequestMyPlaylist=_firstRequestMyPlaylist;
- (void)getPlayListDidFail:(id)arg1;
- (void)getPlayListDidSuccess:(id)arg1;
- (void)addToMyPlaylistContentArray:(id)arg1;
- (void)handleMyPlaylist:(id)arg1;
- (void)loadMyMusic:(id)arg1 withComplete:(CDUnknownBlockType)arg2;
- (void)loadMyAllPlaylist:(id)arg1 WithComplete:(CDUnknownBlockType)arg2;
- (void)playableContentManager:(id)arg1 initiatePlaybackOfContentItemAtIndexPath:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)beginLoadingChildItemsAtIndexPath:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (long long)numberOfChildItemsAtIndexPath:(id)arg1;
- (id)contentItemAtIndexPath:(id)arg1;
- (id)setArtwork:(id)arg1;
- (void)requestForDjRadioCountWithCompletion:(CDUnknownBlockType)arg1;
- (void)judgeHasRadioWithComplete:(CDUnknownBlockType)arg1;
- (void)judgeHasRadioWithUpdateContentItem;
- (void)_refreshDataForUMG;
- (void)_downloadStateChanged:(id)arg1;
- (void)_radioSubChanged:(id)arg1;
- (void)updateAlbumContentItem;
- (void)_loginStateChanged:(id)arg1;
- (void)loadIconImage;
- (void)loadData;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

