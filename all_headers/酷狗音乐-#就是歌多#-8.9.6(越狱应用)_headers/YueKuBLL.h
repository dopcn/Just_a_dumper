//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class NeeFileCache;

@interface YueKuBLL : NSObject
{
    int _mvType;
    NeeFileCache *_todaySongMenuFileCache;
}

+ (id)sharedInstance;
@property(retain, nonatomic) NeeFileCache *todaySongMenuFileCache; // @synthesize todaySongMenuFileCache=_todaySongMenuFileCache;
@property(nonatomic) int mvType; // @synthesize mvType=_mvType;
- (void).cxx_destruct;
- (void)getRecommenSpecialsWithHash:(id)arg1 successBlock:(CDUnknownBlockType)arg2 failBlock:(CDUnknownBlockType)arg3;
- (void)obtainTodaySongMeunWithHashList:(id)arg1 successBlock:(CDUnknownBlockType)arg2 failBlock:(CDUnknownBlockType)arg3;
- (id)getMatchIpodMusicWithName:(id)arg1 andOperationTimeout:(double)arg2 withError:(id)arg3;
- (id)getMatchIpodMusicWithName:(id)arg1 withError:(id)arg2;
- (void)getNetSimilarSpecial:(long long)arg1 withCompletion:(CDUnknownBlockType)arg2;
- (void)obtainSongRelatedCollectionInfo:(id)arg1 page:(long long)arg2 resultBlock:(CDUnknownBlockType)arg3;
- (void)getOtherVersionSongWithAlbumAudioId:(long long)arg1 hash:(id)arg2 type:(unsigned long long)arg3 successBlock:(CDUnknownBlockType)arg4 failureBlock:(CDUnknownBlockType)arg5;
- (void)obtainRecommendSongRelatedCollectionInfo:(id)arg1 number:(long long)arg2 albumAudioId:(long long)arg3 successBlock:(CDUnknownBlockType)arg4 failureBlock:(CDUnknownBlockType)arg5;
- (void)obtainAlbumInfoWithSongHash:(id)arg1 successBlock:(CDUnknownBlockType)arg2 failureBlock:(CDUnknownBlockType)arg3;
- (void)obtainRecommendSongRelatedPlayInfo:(long long)arg1 hash:(id)arg2 albumAudioId:(long long)arg3 resultBlock:(CDUnknownBlockType)arg4;
- (void)getSongInfoWithHash:(id)arg1 successBlock:(CDUnknownBlockType)arg2 failBlock:(CDUnknownBlockType)arg3;
- (id)getSpecialZoneTagListWithTagID:(long long)arg1 error:(id *)arg2;
- (void)obtainDateRankedMusic:(id)arg1 resultBlock:(CDUnknownBlockType)arg2;
- (void)sendServerErrorMessage:(id)arg1 AndContent:(id)arg2;
- (void)sendErrorMessage:(id)arg1;
- (id)getInfoAndKey:(id)arg1 AndFillUrl:(id)arg2 andAskUseWifiOnly:(_Bool)arg3;
- (id)getInfoAndKey:(id)arg1 AndFillUrl:(id)arg2 AndError:(id *)arg3;
- (id)getInfoAndKey:(id)arg1 AndFillUrl:(id)arg2;
- (_Bool)hadCacheOfAllCategory;
- (id)getAllCategoryWithError:(id *)arg1;
- (id)getRankListByID:(long long)arg1 withError:(id *)arg2;
- (id)getRankMusic:(int)arg1 pageSize:(int)arg2 tID:(int)arg3 type:(int)arg4 volid:(id)arg5 withError:(id *)arg6;
- (id)getSingleMusicRankInfo:(int)arg1 pageSize:(int)arg2 requestType:(id)arg3 withError:(id *)arg4;
- (id)getRankInfo:(int)arg1 withError:(id *)arg2;
- (id)getNetMusic:(int)arg1 andSourceSongHash:(id)arg2 andCount:(int)arg3 andSongSource:(int)arg4 withError:(id *)arg5;
- (id)getSonglistWithEntity:(id)arg1 atPage:(long long)arg2 pageSize:(long long)arg3 error:(id *)arg4;

@end

