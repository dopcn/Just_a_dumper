//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

@class NSArray, NSAttributedString, NSCharacterSet, NSMutableArray, NSString, Protocol, UIColor;

#pragma mark Function Pointers and Blocks

typedef void (*CDUnknownFunctionPointerType)(void); // return type and parameters are unknown

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct APTaskInfoData {
    unsigned char _field1[30];
};

struct ARApplication;

struct ARApplicationContext {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
    int _field5;
    basic_string_7c0a1c0b _field6;
    struct MapData _field7;
    basic_string_7c0a1c0b _field8;
    float _field9;
};

struct ARApplicationController {
    CDUnknownFunctionPointerType *_field1;
    struct ARApplication *_field2;
    struct ARApplicationContext _field3;
    struct LuaExecutor *_field4;
    struct LuaHandler *_field5;
    struct LuaUtils *_field6;
    struct map<std::__1::basic_string<char>, ae::ARApplication *, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, ae::ARApplication *>>> _field7;
    int _field8;
    struct tvec4<float, glm::precision::packed_highp> _field9;
    struct tvec4<float, glm::precision::packed_highp> _field10;
    int _field11;
    int _field12;
};

struct ASDisplayNodeFlags {
    unsigned int synchronous:1;
    unsigned int layerBacked:1;
    unsigned int displaysAsynchronously:1;
    unsigned int shouldRasterizeDescendants:1;
    unsigned int shouldBypassEnsureDisplay:1;
    unsigned int displaySuspended:1;
    unsigned int shouldAnimateSizeChanges:1;
    unsigned int hasCustomDrawingPriority:1;
    unsigned int canClearContentsOfLayer:1;
    unsigned int canCallSetNeedsDisplayOfLayer:1;
    unsigned int implementsInstanceDrawRect:1;
    unsigned int implementsDrawRect:1;
    unsigned int implementsInstanceImageDisplay:1;
    unsigned int implementsImageDisplay:1;
    unsigned int implementsDrawParameters:1;
    unsigned int isEnteringHierarchy:1;
    unsigned int isExitingHierarchy:1;
    unsigned int isInHierarchy:1;
    unsigned int visibilityNotificationsDisabled:4;
    unsigned int isDeallocating:1;
};

struct ASDisplayNodeLayout;

struct ASImageNodeDrawParameters {
    _Bool opaque;
    struct CGRect bounds;
    double contentsScale;
    UIColor *backgroundColor;
    long long contentMode;
    _Bool cropEnabled;
    _Bool forceUpscaling;
    struct CGSize forcedSize;
    struct CGRect cropRect;
    struct CGRect cropDisplayBounds;
    CDUnknownBlockType imageModificationBlock;
};

struct ASLayoutElementStyleExtensions {
    _Bool boolExtensions[1];
    long long integerExtensions[4];
    struct UIEdgeInsets edgeInsetsExtensions[1];
};

struct ASPendingStateControllerFlags {
    unsigned int pendingFlush:1;
};

struct ASPrimitiveTraitCollection {
    double displayScale;
    long long horizontalSizeClass;
    long long userInterfaceIdiom;
    long long verticalSizeClass;
    long long forceTouchCapability;
    struct CGSize containerSize;
};

struct ASTextKitAttributes {
    NSAttributedString *attributedString;
    NSAttributedString *truncationAttributedString;
    NSCharacterSet *avoidTailTruncationSet;
    long long lineBreakMode;
    unsigned long long maximumNumberOfLines;
    NSArray *exclusionPaths;
    struct CGSize shadowOffset;
    UIColor *shadowColor;
    double shadowOpacity;
    double shadowRadius;
    NSArray *pointSizeScaleFactors;
};

struct ASTextNodeDrawParameter {
    struct CGRect bounds;
    UIColor *backgroundColor;
};

struct AddressList {
    struct vector<net::IPEndPoint, std::__1::allocator<net::IPEndPoint>> _field1;
    basic_string_7c0a1c0b _field2;
};

struct ArBridge {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    int _field3;
    _Bool _field4;
    struct list<ae::MessageCallback, std::__1::allocator<ae::MessageCallback>> _field5;
    struct function<void (int, int, const ae::MapData &, int)> _field6;
    struct function<void (int, const std::__1::basic_string<char>&)> _field7;
    int _field8;
};

struct AudioQueueBuffer {
    unsigned int _field1;
    void *_field2;
    unsigned int _field3;
    void *_field4;
    unsigned int _field5;
    struct AudioStreamPacketDescription *_field6;
    unsigned int _field7;
};

struct AudioQueueLevelMeterState {
    float _field1;
    float _field2;
};

struct AudioStreamBasicDescription {
    double mSampleRate;
    unsigned int mFormatID;
    unsigned int mFormatFlags;
    unsigned int mBytesPerPacket;
    unsigned int mFramesPerPacket;
    unsigned int mBytesPerFrame;
    unsigned int mChannelsPerFrame;
    unsigned int mBitsPerChannel;
    unsigned int mReserved;
};

struct AudioStreamPacketDescription {
    long long mStartOffset;
    unsigned int mVariableFramesInPacket;
    unsigned int mDataByteSize;
};

struct AuthChallengeInfo {
    int _field1;
    _Bool _field2;
    struct Origin _field3;
    basic_string_7c0a1c0b _field4;
    basic_string_7c0a1c0b _field5;
};

struct AuthCredentials {
    struct basic_string<unsigned short, base::string16_char_traits, std::__1::allocator<unsigned short>> _field1;
    struct basic_string<unsigned short, base::string16_char_traits, std::__1::allocator<unsigned short>> _field2;
};

struct BDNCartConfirmPayMoneyStruct {
    double totalMoney;
    double needPayMoney;
    double useRedPacketMoney;
    double useBalanceMoney;
};

struct BDVRAQRecorder {
    unsigned long long _field1;
    id _field2;
    short _field3;
    struct __CFString *_field4;
    struct OpaqueAudioQueue *_field5;
    struct AudioQueueBuffer *_field6[3];
    struct OpaqueAudioFileID *_field7;
    long long _field8;
    struct CAStreamBasicDescription _field9;
    unsigned char _field10;
};

struct BDVRMeterTable {
    float _field1;
    float _field2;
    float _field3;
    float *_field4;
};

struct BMMapMsgObserver {
    CDUnknownFunctionPointerType *_field1;
};

struct BMMapStatus {
    double fLevel;
    double fRotation;
    double fOverlooking;
    struct BMPoint ptCenter;
    struct BMQuadrangle mapRound;
    struct BMRect winRound;
    double centerXoffset;
    double centerYoffset;
};

struct BMPoint {
    double x;
    double y;
};

struct BMQuadrangle {
    struct BMPoint lb;
    struct BMPoint lt;
    struct BMPoint rt;
    struct BMPoint rb;
};

struct BMRect {
    long long left;
    long long right;
    long long top;
    long long bottom;
};

struct BaiduPanoArrowTextStyle {
    double _field1;
    double _field2;
    double _field3;
};

struct BaiduPanoOverlayAnchor {
    double anchorX;
    double anchorY;
};

struct BainuoUIControlViewAlignment {
    long long horizontalAlignment;
    long long verticalAlignment;
};

struct BarcodeResultIOS {
    int _field1;
    struct CGRect _field2;
    int _field3;
    int _field4;
    char *_field5;
};

struct BindStateBase;

struct BoundNetLog {
    struct Source _field1;
    struct NetLog *_field2;
    int _field3;
};

struct CAStreamBasicDescription {
    double _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned int _field6;
    unsigned int _field7;
    unsigned int _field8;
    unsigned int _field9;
};

struct CATransform3D {
    double m11;
    double m12;
    double m13;
    double m14;
    double m21;
    double m22;
    double m23;
    double m24;
    double m31;
    double m32;
    double m33;
    double m34;
    double m41;
    double m42;
    double m43;
    double m44;
};

struct CAssoc;

struct CGAffineTransform {
    double a;
    double b;
    double c;
    double d;
    double tx;
    double ty;
};

struct CGPoint {
    double x;
    double y;
};

struct CGRect {
    struct CGPoint origin;
    struct CGSize size;
};

struct CGSize {
    double width;
    double height;
};

struct CLLocationCoordinate2D {
    double latitude;
    double longitude;
};

struct CLSMachOSlice {
    void *_field1;
    int _field2;
    int _field3;
};

struct CMapGesture {
    CDUnknownFunctionPointerType *_vptr$CMapGesture;
    int m_bMouseDown;
    struct CVPoint m_ptMove;
    struct CVPoint m_ptUp;
    struct CVPoint m_ptDown;
    unsigned long long m_LastDownTime;
    float m_level;
    struct CVArray<tag_PaoPaoAttribute, tag_PaoPaoAttribute &> m_PaopaoAtt;
    struct IVMapbaseInterface *m_mapControl;
    float m_minZoomLevel;
    float m_maxZoomLevel;
};

struct CMapModeEngine {
    CDUnknownFunctionPointerType *_vptr$CMapModeEngine;
    struct IVMapbaseInterface *m_mapControl;
};

struct CMetaData {
    char _field1[100];
    char _field2[100];
    char _field3[100];
    char _field4[100];
    int _field5;
    int _field6;
    int _field7;
    char _field8[100];
    int _field9;
    int *_field10;
    char **_field11;
    int _field12;
    int _field13;
    int _field14;
    int _field15;
    float _field16;
    int _field17;
    int _field18;
    int _field19;
    int _field20;
};

struct CSearchInterface {
    CDUnknownFunctionPointerType *_field1;
};

struct CVArray<_baidu_vi::CVBundle, _baidu_vi::CVBundle &> {
    CDUnknownFunctionPointerType *_field1;
    struct CVBundle *_field2;
    int _field3;
    int _field4;
    int _field5;
    int _field6;
};

struct CVArray<_baidu_vi::CVString, _baidu_vi::CVString &> {
    CDUnknownFunctionPointerType *_field1;
    struct CVString *_field2;
    int _field3;
    int _field4;
    int _field5;
    int _field6;
};

struct CVArray<tag_PaoPaoAttribute, tag_PaoPaoAttribute &> {
    CDUnknownFunctionPointerType *_vptr$CVArray;
    struct tag_PaoPaoAttribute *m_pData;
    int m_iSize;
    int m_iMaxSize;
    int m_iGrowBy;
    int m_iTemp;
};

struct CVBundle {
    struct CVMapStringToPtr _field1;
};

struct CVGpsDetailInfo {
    int _field1;
    float _field2;
    float _field3;
    float _field4;
    float _field5;
    float _field6;
    float _field7;
    unsigned short _field8;
    unsigned short _field9;
    struct tagVTime _field10;
    int _field11;
};

struct CVMapStringToPtr {
    CDUnknownFunctionPointerType *_field1;
    struct CAssoc **_field2;
    unsigned int _field3;
    int _field4;
    struct CAssoc *_field5;
    int _field6;
    struct CVPlex *_field7;
};

struct CVPlex;

struct CVPoint {
    int x;
    int y;
};

struct CVString {
    CDUnknownFunctionPointerType *_field1;
    unsigned short *_field2;
};

struct Callback<void (bool, const std::__1::basic_string<base::char16, base::string16_char_traits>&, const std::__1::basic_string<base::char16, base::string16_char_traits>&), base::internal::CopyMode::Copyable> {
    struct scoped_refptr<base::internal::BindStateBase> _field1;
    CDUnknownFunctionPointerType _field2;
};

struct Callback<void (int), base::internal::CopyMode::Copyable> {
    struct scoped_refptr<base::internal::BindStateBase> _field1;
    CDUnknownFunctionPointerType _field2;
};

struct Component {
    int _field1;
    int _field2;
};

struct ConnectTiming {
    struct TimeTicks _field1;
    struct TimeTicks _field2;
    struct TimeTicks _field3;
    struct TimeTicks _field4;
    struct TimeTicks _field5;
    struct TimeTicks _field6;
    basic_string_7c0a1c0b _field7;
    struct AddressList _field8;
    int _field9;
};

struct Delegate;

struct FaceTracker {
    float notFace;
    struct vector<int, std::__1::allocator<int>> eulur_angle_thrs;
    float illum_thr;
    int AlignModelType;
    int parsingModelType;
    int track_by_detection_interval;
    int detect_in_video_interval;
    _Bool isFineAlign;
    _Bool isVerifyLive;
    int min_face_size;
    int cropFaceSize;
    float cropFaceEnlargeRatio;
    int MAXREGNUM;
    double lastPrefetchTime;
    double lastDetectionTime;
    int prefetch_reg_img_interval;
    struct vector<TrackedFaceInfo, std::__1::allocator<TrackedFaceInfo>> trackedFaces;
};

struct Flag;

struct GPUMatrix3x3 {
    struct GPUVector3 _field1;
    struct GPUVector3 _field2;
    struct GPUVector3 _field3;
};

struct GPUMatrix4x4 {
    struct GPUVector4 _field1;
    struct GPUVector4 _field2;
    struct GPUVector4 _field3;
    struct GPUVector4 _field4;
};

struct GPUTextureOptions {
    unsigned int minFilter;
    unsigned int magFilter;
    unsigned int wrapS;
    unsigned int wrapT;
    unsigned int internalFormat;
    unsigned int format;
    unsigned int type;
};

struct GPUVector3 {
    float _field1;
    float _field2;
    float _field3;
};

struct GPUVector4 {
    float _field1;
    float _field2;
    float _field3;
    float _field4;
};

struct GURL {
    basic_string_7c0a1c0b _field1;
    _Bool _field2;
    struct Parsed _field3;
    struct unique_ptr<GURL, std::__1::default_delete<GURL>> _field4;
};

struct Group {
    CDUnknownFunctionPointerType *_field1;
};

struct HashValue;

struct HeaderKeyValuePair;

struct HostPortPair {
    basic_string_7c0a1c0b _field1;
    basic_string_7c0a1c0b _field2;
    unsigned short _field3;
};

struct HttpProtocolHandlerCore {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    struct ThreadChecker _field3;
    struct scoped_nsobject<NSMutableArray> _field4;
    id _field5;
    struct scoped_refptr<net::IOBuffer> _field6;
    struct scoped_nsobject<NSMutableURLRequest> _field7;
    struct scoped_nsobject<CRWHTTPStreamDelegate> _field8;
    struct vector<std::__1::unique_ptr<net::UploadElementReader, std::__1::default_delete<net::UploadElementReader>>, std::__1::allocator<std::__1::unique_ptr<net::UploadElementReader, std::__1::default_delete<net::UploadElementReader>>>> _field9;
    struct URLRequest *_field10;
    struct WeakPtr<net::RequestTracker> _field11;
};

struct HttpRequestHeaders {
    struct vector<net::HttpRequestHeaders::HeaderKeyValuePair, std::__1::allocator<net::HttpRequestHeaders::HeaderKeyValuePair>> _field1;
};

struct HttpResponseHeaders;

struct HttpResponseInfo {
    _Bool _field1;
    int _field2;
    _Bool _field3;
    _Bool _field4;
    _Bool _field5;
    _Bool _field6;
    _Bool _field7;
    struct HostPortPair _field8;
    _Bool _field9;
    _Bool _field10;
    _Bool _field11;
    struct HostPortPair _field12;
    basic_string_7c0a1c0b _field13;
    int _field14;
    struct Time _field15;
    struct Time _field16;
    struct TimeTicks _field17;
    struct scoped_refptr<net::AuthChallengeInfo> _field18;
    struct scoped_refptr<net::SSLCertRequestInfo> _field19;
    struct SSLInfo _field20;
    struct scoped_refptr<net::HttpResponseHeaders> _field21;
    struct HttpVaryData _field22;
    struct scoped_refptr<net::IOBufferWithSize> _field23;
};

struct HttpVaryData {
    struct MD5Digest _field1;
    _Bool _field2;
};

struct IOBuffer;

struct IOBufferWithSize;

struct IOSCallBack {
    CDUnknownFunctionPointerType *_field1;
};

struct IPEndPoint;

struct IPanaroma {
    CDUnknownFunctionPointerType *_field1;
};

struct IVMapbaseInterface {
    CDUnknownFunctionPointerType *_field1;
};

struct Identification {
    char *_field1;
    char *_field2;
    char *_field3;
    int _field4;
    long long _field5;
};

struct LeakTracker<net::URLRequest>;

struct LoadStateWithParam {
    int _field1;
    struct basic_string<unsigned short, base::string16_char_traits, std::__1::allocator<unsigned short>> _field2;
};

struct LoadTimingInfo {
    _Bool _field1;
    unsigned int _field2;
    struct Time _field3;
    struct TimeTicks _field4;
    struct TimeTicks _field5;
    struct TimeTicks _field6;
    struct ConnectTiming _field7;
    struct TimeTicks _field8;
    struct TimeTicks _field9;
    struct TimeTicks _field10;
    struct TimeTicks _field11;
    struct TimeTicks _field12;
};

struct LogEntryBase;

struct LuaExecutor;

struct LuaHandler;

struct LuaUtils;

struct MD5Digest {
    unsigned char _field1[16];
};

struct MapData {
    struct __tree<std::__1::__value_type<std::__1::basic_string<char>, ae::MapDataWrapper>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, ae::MapDataWrapper>, std::__1::less<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, ae::MapDataWrapper>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, ae::MapDataWrapper>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, ae::MapDataWrapper>, std::__1::less<std::__1::basic_string<char>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct MecatorPoint {
    double _field1;
    double _field2;
};

struct Mutex {
    struct _opaque_pthread_mutex_t _m;
};

struct NSArray {
    Class _field1;
};

struct NSMutableArray {
    Class _field1;
};

struct NSMutableDictionary {
    Class _field1;
};

struct NetLog;

struct NetworkDelegate;

struct OpaqueAudioFileID;

struct OpaqueAudioQueue;

struct Origin {
    struct SchemeHostPort _field1;
    _Bool _field2;
};

struct PLCrashHostInfoVersion {
    unsigned long long major;
    unsigned long long minor;
    unsigned long long revision;
};

struct PLCrashReporterCallbacks {
    unsigned short _field1;
    void *_field2;
    CDUnknownFunctionPointerType _field3;
};

struct Parsed {
    struct Component _field1;
    struct Component _field2;
    struct Component _field3;
    struct Component _field4;
    struct Component _field5;
    struct Component _field6;
    struct Component _field7;
    struct Component _field8;
    struct Parsed *_field9;
};

struct RecursiveMutex {
    struct _opaque_pthread_mutex_t _m;
};

struct RequestTracker;

struct SDL_Rect {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
};

struct SDL_Surface;

struct SDL_Window {
    void *_field1;
    unsigned int _field2;
    char *_field3;
    int _field4;
    int _field5;
    int _field6;
    int _field7;
    unsigned int _field8;
    struct SDL_Rect _field9;
    struct {
        unsigned int _field1;
        int _field2;
        int _field3;
        int _field4;
        void *_field5;
    } _field10;
    float _field11;
    unsigned short *_field12;
    unsigned short *_field13;
    struct SDL_Surface *_field14;
    int _field15;
    struct SDL_WindowShaper *_field16;
    struct SDL_WindowUserData *_field17;
    void *_field18;
    struct SDL_Window *_field19;
    struct SDL_Window *_field20;
};

struct SDL_WindowShaper;

struct SDL_WindowUserData;

struct SSLCertRequestInfo;

struct SSLInfo {
    struct scoped_refptr<net::X509Certificate> _field1;
    struct scoped_refptr<net::X509Certificate> _field2;
    unsigned int _field3;
    int _field4;
    int _field5;
    int _field6;
    _Bool _field7;
    _Bool _field8;
    _Bool _field9;
    _Bool _field10;
    _Bool _field11;
    int _field12;
    int _field13;
    struct vector<net::HashValue, std::__1::allocator<net::HashValue>> _field14;
    basic_string_7c0a1c0b _field15;
    struct vector<net::SignedCertificateTimestampAndStatus, std::__1::allocator<net::SignedCertificateTimestampAndStatus>> _field16;
    _Bool _field17;
    int _field18;
    int _field19;
};

struct SSSignalHanlderInfo {
    int bIsRegistered;
    int signo;
    struct sigaction origSignalAction;
    CDUnknownFunctionPointerType crashCallback;
    void *crashCallbackContext;
};

struct SchemeHostPort {
    basic_string_7c0a1c0b _field1;
    basic_string_7c0a1c0b _field2;
    unsigned short _field3;
};

struct SignedCertificateTimestampAndStatus;

struct Source {
    int _field1;
    unsigned int _field2;
};

struct ThreadChecker;

struct Time {
    long long us_;
};

struct TimeTicks {
    long long _field1;
};

struct TrackedFaceInfo;

struct UIColor {
    Class _field1;
};

struct UIEdgeInsets {
    double top;
    double left;
    double bottom;
    double right;
};

struct UPAFileRef {
    int _field1;
};

struct URLRequest {
    CDUnknownFunctionPointerType *_field1;
    struct map<const void *, std::__1::unique_ptr<base::SupportsUserData::Data, std::__1::default_delete<base::SupportsUserData::Data>>, std::__1::less<const void *>, std::__1::allocator<std::__1::pair<const void *const, std::__1::unique_ptr<base::SupportsUserData::Data, std::__1::default_delete<base::SupportsUserData::Data>>>>> _field2;
    struct ThreadChecker _field3;
    CDUnknownFunctionPointerType *_field4;
    struct scoped_refptr<net::BdNetLogManager::LogEntryBase> _field5;
    struct URLRequestContext *_field6;
    struct NetworkDelegate *_field7;
    struct BoundNetLog _field8;
    struct unique_ptr<net::URLRequestJob, std::__1::default_delete<net::URLRequestJob>> _field9;
    struct unique_ptr<net::UploadDataStream, std::__1::default_delete<net::UploadDataStream>> _field10;
    struct vector<GURL, std::__1::allocator<GURL>> _field11;
    struct GURL _field12;
    struct Origin _field13;
    struct GURL _field14;
    basic_string_7c0a1c0b _field15;
    basic_string_7c0a1c0b _field16;
    int _field17;
    basic_string_7c0a1c0b _field18;
    int _field19;
    struct HttpRequestHeaders _field20;
    int _field21;
    struct Delegate *_field22;
    struct URLRequestStatus _field23;
    struct HttpResponseInfo _field24;
    _Bool _field25;
    _Bool _field26;
    _Bool _field27;
    int _field28;
    struct UploadProgress _field29;
    int _field30;
    _Bool _field31;
    _Bool _field32;
    unsigned long long _field33;
    _Bool _field34;
    basic_string_7c0a1c0b _field35;
    _Bool _field36;
    struct LeakTracker<net::URLRequest> _field37;
    struct Callback<void (int), base::internal::CopyMode::Copyable> _field38;
    _Bool _field39;
    struct AuthCredentials _field40;
    struct scoped_refptr<net::AuthChallengeInfo> _field41;
    long long _field42;
    struct TimeTicks _field43;
    struct TimeTicks _field44;
    struct TimeTicks _field45;
    struct TimeTicks _field46;
    struct vector<GURL, std::__1::allocator<GURL>> _field47;
    struct LoadTimingInfo _field48;
    struct LoadStateWithParam _field49;
    _Bool _field50;
    struct HostPortPair _field51;
};

struct URLRequestContext;

struct URLRequestJob;

struct URLRequestStatus {
    int _field1;
    int _field2;
};

struct UploadDataStream;

struct UploadProgress {
    unsigned long long _field1;
    unsigned long long _field2;
};

struct WBSDKJKConstBuffer {
    struct WBSDKJKConstPtrRange _field1;
};

struct WBSDKJKConstPtrRange {
    char *_field1;
    unsigned long long _field2;
};

struct WBSDKJKEncodeCache {
    id _field1;
    unsigned long long _field2;
    unsigned long long _field3;
};

struct WBSDKJKEncodeState {
    struct WBSDKJKManagedBuffer _field1;
    struct WBSDKJKManagedBuffer _field2;
    unsigned long long _field3;
    struct WBSDKJKFastClassLookup _field4;
    struct WBSDKJKEncodeCache _field5[1024];
    unsigned long long _field6;
    unsigned long long _field7;
    unsigned long long _field8;
    id _field9;
    id _field10;
    SEL _field11;
    CDUnknownFunctionPointerType _field12;
    CDUnknownBlockType _field13;
};

struct WBSDKJKFastClassLookup {
    void *_field1;
    void *_field2;
    void *_field3;
    void *_field4;
    void *_field5;
};

struct WBSDKJKHashTableEntry {
    unsigned long long _field1;
    id _field2;
    id _field3;
};

struct WBSDKJKManagedBuffer {
    struct WBSDKJKPtrRange _field1;
    unsigned long long _field2;
    unsigned long long _field3;
};

struct WBSDKJKObjCImpCache {
    Class _field1;
    CDUnknownFunctionPointerType _field2;
    CDUnknownFunctionPointerType _field3;
};

struct WBSDKJKObjectStack {
    void **_field1;
    void **_field2;
    unsigned long long *_field3;
    unsigned long long _field4;
    unsigned long long _field5;
    unsigned long long _field6;
    unsigned long long _field7;
};

struct WBSDKJKParseState {
    unsigned long long _field1;
    struct WBSDKJKConstBuffer _field2;
    unsigned long long _field3;
    unsigned long long _field4;
    unsigned long long _field5;
    unsigned long long _field6;
    unsigned long long _field7;
    unsigned long long _field8;
    struct WBSDKJKParseToken _field9;
    struct WBSDKJKObjectStack _field10;
    struct WBSDKJKTokenCache _field11;
    struct WBSDKJKObjCImpCache _field12;
    id _field13;
    int _field14;
    _Bool _field15;
};

struct WBSDKJKParseToken {
    struct WBSDKJKConstPtrRange _field1;
    unsigned long long _field2;
    struct WBSDKJKTokenValue _field3;
    struct WBSDKJKManagedBuffer _field4;
};

struct WBSDKJKPtrRange {
    char *_field1;
    unsigned long long _field2;
};

struct WBSDKJKTokenCache {
    struct WBSDKJKTokenCacheItem *_field1;
    unsigned long long _field2;
    unsigned int _field3;
    unsigned char _field4[1024];
};

struct WBSDKJKTokenCacheItem;

struct WBSDKJKTokenValue {
    struct WBSDKJKConstPtrRange _field1;
    unsigned long long _field2;
    unsigned long long _field3;
    union {
        long long _field1;
        unsigned long long _field2;
        double _field3;
    } _field4;
    struct WBSDKJKTokenCacheItem *_field5;
};

struct WeakContainer;

struct WeakPtr<net::RequestTracker> {
    struct WeakReference _field1;
    struct RequestTracker *_field2;
};

struct WeakReference {
    struct scoped_refptr<const base::internal::WeakReference::Flag> _field1;
};

struct X509Certificate;

struct _FileHashComputationContext {
    CDUnknownFunctionPointerType _field1;
    CDUnknownFunctionPointerType _field2;
    CDUnknownFunctionPointerType _field3;
    unsigned long long _field4;
    char **_field5;
};

struct _NSRange {
    unsigned long long location;
    unsigned long long length;
};

struct _PLCrashReportDecoder {
    struct _Plcrash__CrashReport *_field1;
};

struct _Plcrash__CrashReport {
    struct _ProtobufCMessage _field1;
    struct _Plcrash__CrashReport__SystemInfo *_field2;
    struct _Plcrash__CrashReport__ApplicationInfo *_field3;
    unsigned long long _field4;
    struct _Plcrash__CrashReport__Thread **_field5;
    unsigned long long _field6;
    struct _Plcrash__CrashReport__BinaryImage **_field7;
    struct _Plcrash__CrashReport__Exception *_field8;
    struct _Plcrash__CrashReport__Signal *_field9;
    struct _Plcrash__CrashReport__ProcessInfo *_field10;
    struct _Plcrash__CrashReport__MachineInfo *_field11;
    struct _Plcrash__CrashReport__ReportInfo *_field12;
};

struct _Plcrash__CrashReport__ApplicationInfo {
    struct _ProtobufCMessage _field1;
    char *_field2;
    char *_field3;
};

struct _Plcrash__CrashReport__BinaryImage;

struct _Plcrash__CrashReport__Exception {
    struct _ProtobufCMessage _field1;
    char *_field2;
    char *_field3;
    unsigned long long _field4;
    struct _Plcrash__CrashReport__Thread__StackFrame **_field5;
};

struct _Plcrash__CrashReport__MachineInfo {
    struct _ProtobufCMessage _field1;
    char *_field2;
    struct _Plcrash__CrashReport__Processor *_field3;
    unsigned int _field4;
    unsigned int _field5;
};

struct _Plcrash__CrashReport__ProcessInfo {
    struct _ProtobufCMessage _field1;
    char *_field2;
    unsigned int _field3;
    char *_field4;
    char *_field5;
    unsigned int _field6;
    int _field7;
    int _field8;
    unsigned long long _field9;
};

struct _Plcrash__CrashReport__Processor {
    struct _ProtobufCMessage _field1;
    int _field2;
    int _field3;
    unsigned long long _field4;
    unsigned long long _field5;
};

struct _Plcrash__CrashReport__ReportInfo;

struct _Plcrash__CrashReport__Signal {
    struct _ProtobufCMessage _field1;
    char *_field2;
    char *_field3;
    unsigned long long _field4;
    struct _Plcrash__CrashReport__Signal__MachException *_field5;
};

struct _Plcrash__CrashReport__Signal__MachException {
    struct _ProtobufCMessage _field1;
    unsigned long long _field2;
    unsigned long long _field3;
    unsigned long long *_field4;
};

struct _Plcrash__CrashReport__Symbol {
    struct _ProtobufCMessage _field1;
    char *_field2;
    unsigned long long _field3;
    int _field4;
    unsigned long long _field5;
};

struct _Plcrash__CrashReport__SystemInfo {
    struct _ProtobufCMessage _field1;
    int _field2;
    int _field3;
    char *_field4;
    int _field5;
    long long _field6;
    char *_field7;
};

struct _Plcrash__CrashReport__Thread;

struct _Plcrash__CrashReport__Thread__StackFrame {
    struct _ProtobufCMessage _field1;
    unsigned long long _field2;
    struct _Plcrash__CrashReport__Symbol *_field3;
};

struct _ProtobufCMessage {
    struct _ProtobufCMessageDescriptor *_field1;
    unsigned int _field2;
    struct _ProtobufCMessageUnknownField *_field3;
};

struct _ProtobufCMessageDescriptor;

struct _ProtobufCMessageUnknownField;

struct __BDBLPacketHeader__ {
    unsigned char _field1[4];
    unsigned char _field2;
    unsigned char _field3;
    unsigned char _field4;
    unsigned char _field5;
    unsigned char _field6;
    unsigned char _field7;
    unsigned short _field8;
    unsigned int _field9;
    unsigned long long _field10;
    unsigned long long _field11;
    unsigned int _field12;
    unsigned char _field13[4];
};

struct __BDZLIBHEADER__ {
    unsigned short _field1;
    unsigned int _field2;
    unsigned long long _field3;
    unsigned long long _field4;
    unsigned int _field5;
};

struct __darwin_sigaltstack {
    void *ss_sp;
    unsigned long long ss_size;
    int ss_flags;
};

struct __list_node_base<ae::MessageCallback, void *> {
    struct __list_node_base<ae::MessageCallback, void *> *_field1;
    struct __list_node_base<ae::MessageCallback, void *> *_field2;
};

struct __raw {
    unsigned long long _field1[3];
};

struct __sFILE {
    char *_field1;
    int _field2;
    int _field3;
    short _field4;
    short _field5;
    struct __sbuf _field6;
    int _field7;
    void *_field8;
    CDUnknownFunctionPointerType _field9;
    CDUnknownFunctionPointerType _field10;
    CDUnknownFunctionPointerType _field11;
    CDUnknownFunctionPointerType _field12;
    struct __sbuf _field13;
    struct __sFILEX *_field14;
    int _field15;
    unsigned char _field16[3];
    unsigned char _field17[1];
    struct __sbuf _field18;
    int _field19;
    long long _field20;
};

struct __sbuf {
    char *_field1;
    int _field2;
};

struct __shared_weak_count;

struct __tree_end_node<std::__1::__tree_node_base<void *>*> {
    struct __tree_node_base<void *> *_field1;
};

struct _opaque_pthread_cond_t {
    long long __sig;
    char __opaque[40];
};

struct _opaque_pthread_mutex_t {
    long long __sig;
    char __opaque[56];
};

struct _utils {
    CDUnknownFunctionPointerType _field1;
};

struct basic_filebuf<char, std::__1::char_traits<char>> {
    CDUnknownFunctionPointerType *_field1;
    struct locale _field2;
    char *_field3;
    char *_field4;
    char *_field5;
    char *_field6;
    char *_field7;
    char *_field8;
    char *_field9;
    char *_field10;
    char *_field11;
    char _field12[8];
    unsigned long long _field13;
    char *_field14;
    unsigned long long _field15;
    struct __sFILE *_field16;
    struct codecvt<char, char, __mbstate_t> *_field17;
    CDUnion_4426d289 _field18;
    CDUnion_4426d289 _field19;
    unsigned int _field20;
    unsigned int _field21;
    _Bool _field22;
    _Bool _field23;
    _Bool _field24;
};

struct basic_ofstream<char, std::__1::char_traits<char>> {
    CDUnknownFunctionPointerType *_field1;
    struct basic_filebuf<char, std::__1::char_traits<char>> _field2;
    CDUnknownFunctionPointerType *_field3;
    unsigned int _field4;
    long long _field5;
    long long _field6;
    unsigned int _field7;
    unsigned int _field8;
    void *_field9;
    void *_field10;
    CDUnknownFunctionPointerType *_field11;
    int *_field12;
    unsigned long long _field13;
    unsigned long long _field14;
    long long *_field15;
    unsigned long long _field16;
    unsigned long long _field17;
    void **_field18;
    unsigned long long _field19;
    unsigned long long _field20;
    struct basic_ostream<char, std::__1::char_traits<char>> *_field21;
    int _field22;
};

struct basic_ostream<char, std::__1::char_traits<char>>;

struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
    struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
        struct __rep {
            union {
                struct __long {
                    char *_field1;
                    unsigned long long _field2;
                    unsigned long long _field3;
                } _field1;
                struct __short {
                    char _field1[23];
                    struct {
                        unsigned char _field1;
                    } _field2;
                } _field2;
                struct __raw _field3;
            } _field1;
        } _field1;
    } _field1;
};

struct basic_string<unsigned short, base::string16_char_traits, std::__1::allocator<unsigned short>> {
    struct __compressed_pair<std::__1::basic_string<unsigned short, base::string16_char_traits, std::__1::allocator<unsigned short>>::__rep, std::__1::allocator<unsigned short>> {
        struct __rep {
            union {
                struct __long {
                    unsigned short *_field1;
                    unsigned long long _field2;
                    unsigned long long _field3;
                } _field1;
                struct __short {
                    unsigned short _field1[11];
                    struct {
                        unsigned char _field1[1];
                        unsigned char _field2;
                    } _field2;
                } _field2;
                struct __raw _field3;
            } _field1;
        } _field1;
    } _field1;
};

struct bds_shared_ptr<BDS_TTS::Context> {
    CDUnknownFunctionPointerType *_vptr$bds_shared_ptr_base;
    struct bds_shared_ptr_control_object *controlObject;
    CDUnknownFunctionPointerType objectDestructor;
    _Bool isStrong;
};

struct bds_shared_ptr<BDS_TTS::EventManager> {
    CDUnknownFunctionPointerType *_vptr$bds_shared_ptr_base;
    struct bds_shared_ptr_control_object *controlObject;
    CDUnknownFunctionPointerType objectDestructor;
    _Bool isStrong;
};

struct bds_shared_ptr<BDS_TTS::Message> {
    CDUnknownFunctionPointerType *_field1;
    struct bds_shared_ptr_control_object *_field2;
    CDUnknownFunctionPointerType _field3;
    _Bool _field4;
};

struct bds_shared_ptr<BDS_TTS::Networking::bds_HttpResponse> {
    CDUnknownFunctionPointerType *_field1;
    struct bds_shared_ptr_control_object *_field2;
    CDUnknownFunctionPointerType _field3;
    _Bool _field4;
};

struct bds_shared_ptr<BDS_TTS::PCMQueue> {
    CDUnknownFunctionPointerType *_vptr$bds_shared_ptr_base;
    struct bds_shared_ptr_control_object *controlObject;
    CDUnknownFunctionPointerType objectDestructor;
    _Bool isStrong;
};

struct bds_shared_ptr<BDS_TTS::Threads::Synchronization::AppConditionMutex> {
    CDUnknownFunctionPointerType *_vptr$bds_shared_ptr_base;
    struct bds_shared_ptr_control_object *controlObject;
    CDUnknownFunctionPointerType objectDestructor;
    _Bool isStrong;
};

struct bds_shared_ptr<std::__1::map<std::__1::basic_string<char>, BDS_TTS::paramBase, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, BDS_TTS::paramBase>>>> {
    CDUnknownFunctionPointerType *_field1;
    struct bds_shared_ptr_control_object *_field2;
    CDUnknownFunctionPointerType _field3;
    _Bool _field4;
};

struct bds_shared_ptr<unsigned char> {
    CDUnknownFunctionPointerType *_field1;
    struct bds_shared_ptr_control_object *_field2;
    CDUnknownFunctionPointerType _field3;
    _Bool _field4;
};

struct bds_shared_ptr_control_object;

struct bds_weak_ptr<BDS_TTS::Audio::AudioPlayer> {
    CDUnknownFunctionPointerType *_vptr$bds_shared_ptr_base;
    struct bds_shared_ptr_control_object *controlObject;
    CDUnknownFunctionPointerType objectDestructor;
    _Bool isStrong;
};

struct bds_weak_ptr<BDS_TTS::Networking::bds_HttpRequestMaker_iOS> {
    CDUnknownFunctionPointerType *_vptr$bds_shared_ptr_base;
    struct bds_shared_ptr_control_object *controlObject;
    CDUnknownFunctionPointerType objectDestructor;
    _Bool isStrong;
};

struct codecvt<char, char, __mbstate_t>;

struct deque<id, std::__1::allocator<id>> {
    struct __split_buffer<__strong id *, std::__1::allocator<__strong id *>> {
        id **__first_;
        id **__begin_;
        id **__end_;
        struct __compressed_pair<__strong id **, std::__1::allocator<__strong id *>> {
            id **__first_;
        } __end_cap_;
    } __map_;
    unsigned long long __start_;
    struct __compressed_pair<unsigned long, std::__1::allocator<id>> {
        unsigned long long __first_;
    } __size_;
};

struct function<void (int, const std::__1::basic_string<char>&)> {
    struct type _field1;
    struct __base<void (int, const std::__1::basic_string<char>&)> *_field2;
};

struct function<void (int, int, const ae::MapData &, int)> {
    struct type _field1;
    struct __base<void (int, int, const ae::MapData &, int)> *_field2;
};

struct in6_addr {
    union {
        unsigned char _field1[16];
        unsigned short _field2[8];
        unsigned int _field3[4];
    } _field1;
};

struct in_addr {
    unsigned int _field1;
};

struct internal_state;

struct list<ae::MessageCallback, std::__1::allocator<ae::MessageCallback>> {
    struct __list_node_base<ae::MessageCallback, void *> _field1;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<ae::MessageCallback, void *>>> {
        unsigned long long _field1;
    } _field2;
};

struct locale {
    struct __imp *_field1;
};

struct map<const void *, std::__1::unique_ptr<base::SupportsUserData::Data, std::__1::default_delete<base::SupportsUserData::Data>>, std::__1::less<const void *>, std::__1::allocator<std::__1::pair<const void *const, std::__1::unique_ptr<base::SupportsUserData::Data, std::__1::default_delete<base::SupportsUserData::Data>>>>> {
    struct __tree<std::__1::__value_type<const void *, std::__1::unique_ptr<base::SupportsUserData::Data, std::__1::default_delete<base::SupportsUserData::Data>>>, std::__1::__map_value_compare<const void *, std::__1::__value_type<const void *, std::__1::unique_ptr<base::SupportsUserData::Data, std::__1::default_delete<base::SupportsUserData::Data>>>, std::__1::less<const void *>, true>, std::__1::allocator<std::__1::__value_type<const void *, std::__1::unique_ptr<base::SupportsUserData::Data, std::__1::default_delete<base::SupportsUserData::Data>>>>> {
        struct __tree_node<std::__1::__value_type<const void *, std::__1::unique_ptr<base::SupportsUserData::Data, std::__1::default_delete<base::SupportsUserData::Data>>>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<const void *, std::__1::unique_ptr<base::SupportsUserData::Data, std::__1::default_delete<base::SupportsUserData::Data>>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<const void *, std::__1::__value_type<const void *, std::__1::unique_ptr<base::SupportsUserData::Data, std::__1::default_delete<base::SupportsUserData::Data>>>, std::__1::less<const void *>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::basic_string<char>, ae::ARApplication *, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, ae::ARApplication *>>> {
    struct __tree<std::__1::__value_type<std::__1::basic_string<char>, ae::ARApplication *>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, ae::ARApplication *>, std::__1::less<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, ae::ARApplication *>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, ae::ARApplication *>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, ae::ARApplication *>, std::__1::less<std::__1::basic_string<char>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct msgpack_object {
    int _field1;
    union {
        _Bool _field1;
        unsigned long long _field2;
        long long _field3;
        double _field4;
        struct {
            unsigned int _field1;
            struct msgpack_object *_field2;
        } _field5;
        struct {
            unsigned int _field1;
            struct msgpack_object_kv *_field2;
        } _field6;
        struct {
            unsigned int _field1;
            char *_field2;
        } _field7;
    } _field2;
};

struct msgpack_object_kv;

struct msgpack_packer {
    void *_field1;
    CDUnknownFunctionPointerType _field2;
};

struct mtjCpuType {
    char *_field1;
    _Bool _field2;
};

struct mutex {
    struct _opaque_pthread_mutex_t __m_;
};

struct objc_method_description {
    SEL _field1;
    char *_field2;
};

struct plcrash_exception_handler_state {
    unsigned int _field1;
    unsigned int _field2[14];
    unsigned int _field3[14];
    int _field4[14];
    int _field5[14];
};

struct plcrash_mach_exception_port_set {
    unsigned int count;
    unsigned int masks[14];
    unsigned int ports[14];
    int behaviors[14];
    int flavors[14];
};

struct rt_metrics {
    unsigned int rmx_locks;
    unsigned int rmx_mtu;
    unsigned int rmx_hopcount;
    int rmx_expire;
    unsigned int rmx_recvpipe;
    unsigned int rmx_sendpipe;
    unsigned int rmx_ssthresh;
    unsigned int rmx_rtt;
    unsigned int rmx_rttvar;
    unsigned int rmx_pksent;
    unsigned int rmx_filler[4];
};

struct rt_msghdr2 {
    unsigned short rtm_msglen;
    unsigned char rtm_version;
    unsigned char rtm_type;
    unsigned short rtm_index;
    int rtm_flags;
    int rtm_addrs;
    int rtm_refcnt;
    int rtm_parentflags;
    int rtm_reserved;
    int rtm_use;
    unsigned int rtm_inits;
    struct rt_metrics rtm_rmx;
};

struct scoped_nsobject<CRWHTTPStreamDelegate> {
    id _field1;
};

struct scoped_nsobject<NSArray> {
    NSArray *object_;
};

struct scoped_nsobject<NSMutableArray> {
    NSMutableArray *object_;
};

struct scoped_nsobject<NSMutableURLRequest> {
    id _field1;
};

struct scoped_nsobject<NSString> {
    NSString *object_;
};

struct scoped_nsobject<Protocol> {
    Protocol *object_;
};

struct scoped_nsprotocol<Class> {
    Class object_;
};

struct scoped_nsprotocol<id<CRNHTTPProtocolHandlerProxy>> {
    id object_;
};

struct scoped_nsprotocol<id<CRNNetworkClientProtocol>> {
    id object_;
};

struct scoped_refptr<base::WeakContainer> {
    struct WeakContainer *ptr_;
};

struct scoped_refptr<base::internal::BindStateBase> {
    struct BindStateBase *_field1;
};

struct scoped_refptr<const base::internal::WeakReference::Flag> {
    struct Flag *_field1;
};

struct scoped_refptr<net::AuthChallengeInfo> {
    struct AuthChallengeInfo *_field1;
};

struct scoped_refptr<net::BdNetLogManager::LogEntryBase> {
    struct LogEntryBase *_field1;
};

struct scoped_refptr<net::HttpProtocolHandlerCore> {
    struct HttpProtocolHandlerCore *ptr_;
};

struct scoped_refptr<net::HttpResponseHeaders> {
    struct HttpResponseHeaders *_field1;
};

struct scoped_refptr<net::IOBuffer> {
    struct IOBuffer *_field1;
};

struct scoped_refptr<net::IOBufferWithSize> {
    struct IOBufferWithSize *_field1;
};

struct scoped_refptr<net::SSLCertRequestInfo> {
    struct SSLCertRequestInfo *_field1;
};

struct scoped_refptr<net::X509Certificate> {
    struct X509Certificate *_field1;
};

struct shared_ptr<ASDN::Mutex> {
    struct Mutex *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<ASDN::RecursiveMutex> {
    struct RecursiveMutex *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<ASDisplayNodeLayout> {
    struct ASDisplayNodeLayout *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct sigaction {
    union __sigaction_u {
        CDUnknownFunctionPointerType __sa_handler;
        CDUnknownFunctionPointerType __sa_sigaction;
    } __sigaction_u;
    unsigned int sa_mask;
    int sa_flags;
};

struct sockaddr {
    unsigned char sa_len;
    unsigned char sa_family;
    char sa_data[14];
};

struct sockaddr_in {
    unsigned char _field1;
    unsigned char _field2;
    unsigned short _field3;
    struct in_addr _field4;
    char _field5[8];
};

struct sockaddr_in6 {
    unsigned char _field1;
    unsigned char _field2;
    unsigned short _field3;
    unsigned int _field4;
    struct in6_addr _field5;
    unsigned int _field6;
};

struct sockaddr_inarp {
    unsigned char _field1;
    unsigned char _field2;
    unsigned short _field3;
    struct in_addr _field4;
    struct in_addr _field5;
    unsigned short _field6;
    unsigned short _field7;
};

struct sockaddr_un {
    unsigned char _field1;
    unsigned char _field2;
    char _field3[104];
};

struct tagVTime {
    union {
        struct {
            unsigned long long _field1;
            unsigned int :4;
            unsigned int :5;
            unsigned int :5;
            unsigned int :6;
            unsigned int :6;
            unsigned int :6;
        } _field1;
        unsigned long long _field2;
        unsigned long long _field3;
    } _field1;
};

struct tag_PaoPaoAttribute;

struct timeval {
    long long tv_sec;
    int tv_usec;
};

struct tm {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
    int _field5;
    int _field6;
    int _field7;
    int _field8;
    int _field9;
    long long _field10;
    char *_field11;
};

struct tvec4<float, glm::precision::packed_highp> {
    union {
        CDStruct_818bb265 _field1;
        CDStruct_818bb265 _field2;
        CDStruct_818bb265 _field3;
        struct type _field4;
    } _field1;
};

struct type {
    unsigned char _field1[24];
};

struct unique_ptr<GURL, std::__1::default_delete<GURL>> {
    struct __compressed_pair<GURL *, std::__1::default_delete<GURL>> {
        struct GURL *_field1;
    } _field1;
};

struct unique_ptr<net::URLRequestJob, std::__1::default_delete<net::URLRequestJob>> {
    struct __compressed_pair<net::URLRequestJob *, std::__1::default_delete<net::URLRequestJob>> {
        struct URLRequestJob *_field1;
    } _field1;
};

struct unique_ptr<net::UploadDataStream, std::__1::default_delete<net::UploadDataStream>> {
    struct __compressed_pair<net::UploadDataStream *, std::__1::default_delete<net::UploadDataStream>> {
        struct UploadDataStream *_field1;
    } _field1;
};

struct unique_ptr<net::UploadElementReader, std::__1::default_delete<net::UploadElementReader>>;

struct vector<ASRangeTuningParameters, std::__1::allocator<ASRangeTuningParameters>>;

struct vector<GURL, std::__1::allocator<GURL>> {
    struct GURL *_field1;
    struct GURL *_field2;
    struct __compressed_pair<GURL *, std::__1::allocator<GURL>> {
        struct GURL *_field1;
    } _field3;
};

struct vector<TrackedFaceInfo, std::__1::allocator<TrackedFaceInfo>> {
    struct TrackedFaceInfo *__begin_;
    struct TrackedFaceInfo *__end_;
    struct __compressed_pair<TrackedFaceInfo *, std::__1::allocator<TrackedFaceInfo>> {
        struct TrackedFaceInfo *__first_;
    } __end_cap_;
};

struct vector<_NSRange, std::__1::allocator<_NSRange>> {
    struct _NSRange *__begin_;
    struct _NSRange *__end_;
    struct __compressed_pair<_NSRange *, std::__1::allocator<_NSRange>> {
        struct _NSRange *__first_;
    } __end_cap_;
};

struct vector<id, std::__1::allocator<id>> {
    id *__begin_;
    id *__end_;
    struct __compressed_pair<id *, std::__1::allocator<id>> {
        id *__first_;
    } __end_cap_;
};

struct vector<int, std::__1::allocator<int>> {
    int *__begin_;
    int *__end_;
    struct __compressed_pair<int *, std::__1::allocator<int>> {
        int *__first_;
    } __end_cap_;
};

struct vector<long, std::__1::allocator<long>> {
    long long *__begin_;
    long long *__end_;
    struct __compressed_pair<long *, std::__1::allocator<long>> {
        long long *__first_;
    } __end_cap_;
};

struct vector<net::HashValue, std::__1::allocator<net::HashValue>> {
    struct HashValue *_field1;
    struct HashValue *_field2;
    struct __compressed_pair<net::HashValue *, std::__1::allocator<net::HashValue>> {
        struct HashValue *_field1;
    } _field3;
};

struct vector<net::HttpRequestHeaders::HeaderKeyValuePair, std::__1::allocator<net::HttpRequestHeaders::HeaderKeyValuePair>> {
    struct HeaderKeyValuePair *_field1;
    struct HeaderKeyValuePair *_field2;
    struct __compressed_pair<net::HttpRequestHeaders::HeaderKeyValuePair *, std::__1::allocator<net::HttpRequestHeaders::HeaderKeyValuePair>> {
        struct HeaderKeyValuePair *_field1;
    } _field3;
};

struct vector<net::IPEndPoint, std::__1::allocator<net::IPEndPoint>> {
    struct IPEndPoint *_field1;
    struct IPEndPoint *_field2;
    struct __compressed_pair<net::IPEndPoint *, std::__1::allocator<net::IPEndPoint>> {
        struct IPEndPoint *_field1;
    } _field3;
};

struct vector<net::SignedCertificateTimestampAndStatus, std::__1::allocator<net::SignedCertificateTimestampAndStatus>> {
    struct SignedCertificateTimestampAndStatus *_field1;
    struct SignedCertificateTimestampAndStatus *_field2;
    struct __compressed_pair<net::SignedCertificateTimestampAndStatus *, std::__1::allocator<net::SignedCertificateTimestampAndStatus>> {
        struct SignedCertificateTimestampAndStatus *_field1;
    } _field3;
};

struct vector<std::__1::unique_ptr<net::UploadElementReader, std::__1::default_delete<net::UploadElementReader>>, std::__1::allocator<std::__1::unique_ptr<net::UploadElementReader, std::__1::default_delete<net::UploadElementReader>>>> {
    struct unique_ptr<net::UploadElementReader, std::__1::default_delete<net::UploadElementReader>> *_field1;
    struct unique_ptr<net::UploadElementReader, std::__1::default_delete<net::UploadElementReader>> *_field2;
    struct __compressed_pair<std::__1::unique_ptr<net::UploadElementReader, std::__1::default_delete<net::UploadElementReader>>*, std::__1::allocator<std::__1::unique_ptr<net::UploadElementReader, std::__1::default_delete<net::UploadElementReader>>>> {
        struct unique_ptr<net::UploadElementReader, std::__1::default_delete<net::UploadElementReader>> *_field1;
    } _field3;
};

struct vector<std::__1::vector<ASRangeTuningParameters, std::__1::allocator<ASRangeTuningParameters>>, std::__1::allocator<std::__1::vector<ASRangeTuningParameters, std::__1::allocator<ASRangeTuningParameters>>>> {
    struct vector<ASRangeTuningParameters, std::__1::allocator<ASRangeTuningParameters>> *__begin_;
    struct vector<ASRangeTuningParameters, std::__1::allocator<ASRangeTuningParameters>> *__end_;
    struct __compressed_pair<std::__1::vector<ASRangeTuningParameters, std::__1::allocator<ASRangeTuningParameters>>*, std::__1::allocator<std::__1::vector<ASRangeTuningParameters, std::__1::allocator<ASRangeTuningParameters>>>> {
        struct vector<ASRangeTuningParameters, std::__1::allocator<ASRangeTuningParameters>> *__first_;
    } __end_cap_;
};

struct vector<unsigned long, std::__1::allocator<unsigned long>> {
    unsigned long long *__begin_;
    unsigned long long *__end_;
    struct __compressed_pair<unsigned long *, std::__1::allocator<unsigned long>> {
        unsigned long long *__first_;
    } __end_cap_;
};

struct z_stream_s {
    char *next_in;
    unsigned int avail_in;
    unsigned long long total_in;
    char *next_out;
    unsigned int avail_out;
    unsigned long long total_out;
    char *msg;
    struct internal_state *state;
    CDUnknownFunctionPointerType zalloc;
    CDUnknownFunctionPointerType zfree;
    void *opaque;
    int data_type;
    unsigned long long adler;
    unsigned long long reserved;
};

#pragma mark Typedef'd Structures

typedef struct {
    unsigned int major;
    unsigned int minor;
    unsigned int bugfix;
} CDStruct_e24ffa00;

typedef struct {
    unsigned long long _field1;
    id *_field2;
    unsigned long long *_field3;
    unsigned long long _field4[5];
} CDStruct_70511ce9;

typedef struct {
    char *_field1;
    char *_field2;
    unsigned int _field3;
    unsigned int _field4;
} CDStruct_4355734a;

typedef struct {
    char *_field1;
    void *_field2;
    _Bool _field3;
    void *_field4;
    char *_field5;
    char *_field6;
    char *_field7;
    char *_field8;
    char *_field9;
    unsigned int _field10;
    _Bool _field11;
    _Bool _field12;
    unsigned int _field13;
    unsigned int _field14;
    unsigned int _field15;
    unsigned int _field16;
} CDStruct_1e2a2a70;

typedef struct {
    void *_field1;
    unsigned long long _field2;
} CDStruct_6c7289c3;

typedef struct {
    double m11;
    double m12;
    double m13;
    double m21;
    double m22;
    double m23;
    double m31;
    double m32;
    double m33;
} CDStruct_2d7b3170;

typedef struct {
    double _field1;
    double _field2;
    double _field3;
} CDStruct_39925896;

typedef struct {
    double _field1;
    long long _field2;
    double _field3;
    long long _field4;
} CDStruct_264a827c;

typedef struct {
    float _field1;
    float _field2;
    float _field3;
    float _field4;
} CDStruct_818bb265;

typedef struct {
    int _field1;
    int _field2;
    char *_field3;
} CDStruct_3553761d;

typedef struct {
    long long version;
    void *info;
    CDUnknownFunctionPointerType retain;
    CDUnknownFunctionPointerType release;
    CDUnknownFunctionPointerType copyDescription;
} CDStruct_4210025a;

typedef struct {
    long long unit;
    double value;
} CDStruct_6eaa4494;

typedef struct {
    long long value;
    int timescale;
    unsigned int flags;
    long long epoch;
} CDStruct_1b6d18a9;

typedef struct {
    long long _field1;
    int _field2;
} CDStruct_87dc826d;

typedef struct {
    long long _field1;
    long long _field2;
} CDStruct_912cb5d2;

typedef struct CDStruct_183601bc;

typedef struct {
    char _field1[33];
    _Bool _field2;
    CDStruct_e24ffa00 _field3;
    CDStruct_e24ffa00 _field4;
    struct {
        void *_field1;
        unsigned long long _field2;
        void *_field3;
        void *_field4;
        void *_field5;
    } _field5;
    struct CLSMachOSlice _field6;
    long long _field7;
} CDStruct_762b38bc;

typedef struct {
    CDStruct_6eaa4494 width;
    CDStruct_6eaa4494 height;
    CDStruct_6eaa4494 minWidth;
    CDStruct_6eaa4494 maxWidth;
    CDStruct_6eaa4494 minHeight;
    CDStruct_6eaa4494 maxHeight;
} CDStruct_65226902;

typedef struct {
    CDStruct_6eaa4494 _field1;
    CDStruct_6eaa4494 _field2;
} CDStruct_16314adb;

typedef struct {
    CDStruct_1b6d18a9 start;
    CDStruct_1b6d18a9 duration;
} CDStruct_e83c9415;

typedef struct {
    struct CGSize min;
    struct CGSize max;
} CDStruct_42a63532;

typedef struct {
    struct CLLocationCoordinate2D _field1;
    struct {
        double _field1;
        double _field2;
    } _field2;
} CDStruct_26e8d939;

typedef struct {
    CDStruct_16314adb _field1;
    CDStruct_16314adb _field2;
} CDStruct_9326d452;

// Ambiguous groups
typedef struct {
    unsigned int textInputSupportsShouldChangeTextInRange:1;
    unsigned int delegateSupportsTextFieldShouldChangeCharactersInRange:1;
    unsigned int delegateSupportsTextViewShouldChangeTextInRange:1;
} CDStruct_1e9f471a;

typedef struct {
    double _field1;
    double _field2;
} CDStruct_c3b9c2ee;

typedef struct {
    double latitude;
    double longitude;
} CDStruct_2c43369c;

typedef struct {
    double x;
    double y;
} CDStruct_34734122;

typedef struct {
    struct {
        double _field1;
        double _field2;
    } _field1;
    struct {
        double _field1;
        double _field2;
    } _field2;
} CDStruct_90e2a262;

typedef struct {
    CDStruct_2c43369c northEast;
    CDStruct_2c43369c southWest;
} CDStruct_dafdc2cb;

typedef struct {
    CDStruct_34734122 origin;
    struct {
        double width;
        double height;
    } size;
} CDStruct_02837cd9;

typedef struct CVArray<_baidu_vi::CVBundle, _baidu_vi::CVBundle &> {
    CDUnknownFunctionPointerType *_field1;
    struct CVBundle *_field2;
    int _field3;
    int _field4;
    int _field5;
    int _field6;
} CVArray_4812fe32;

typedef struct CVArray<_baidu_vi::CVString, _baidu_vi::CVString &> {
    CDUnknownFunctionPointerType *_field1;
    struct CVString *_field2;
    int _field3;
    int _field4;
    int _field5;
    int _field6;
} CVArray_59d409db;

typedef struct Callback<void (bool, const std::__1::basic_string<base::char16, base::string16_char_traits>&, const std::__1::basic_string<base::char16, base::string16_char_traits>&), base::internal::CopyMode::Copyable> {
    struct scoped_refptr<base::internal::BindStateBase> _field1;
    CDUnknownFunctionPointerType _field2;
} Callback_4c13b5ed;

typedef struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
    struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
        struct __rep {
            union {
                struct __long {
                    char *_field1;
                    unsigned long long _field2;
                    unsigned long long _field3;
                } _field1;
                struct __short {
                    char _field1[23];
                    struct {
                        unsigned char _field1;
                    } _field2;
                } _field2;
                struct __raw _field3;
            } _field1;
        } _field1;
    } _field1;
} basic_string_7c0a1c0b;

typedef struct bds_shared_ptr<BDS_TTS::Message> {
    CDUnknownFunctionPointerType *_field1;
    struct bds_shared_ptr_control_object *_field2;
    CDUnknownFunctionPointerType _field3;
    _Bool _field4;
} bds_shared_ptr_000fd8e2;

typedef struct bds_shared_ptr<BDS_TTS::Networking::bds_HttpResponse> {
    CDUnknownFunctionPointerType *_field1;
    struct bds_shared_ptr_control_object *_field2;
    CDUnknownFunctionPointerType _field3;
    _Bool _field4;
} bds_shared_ptr_fc3b82c9;

typedef struct bds_shared_ptr<BDS_TTS::Threads::Synchronization::AppConditionMutex> {
    CDUnknownFunctionPointerType *_vptr$bds_shared_ptr_base;
    struct bds_shared_ptr_control_object *controlObject;
    CDUnknownFunctionPointerType objectDestructor;
    _Bool isStrong;
} bds_shared_ptr_e4371060;

typedef struct bds_shared_ptr<std::__1::map<std::__1::basic_string<char>, BDS_TTS::paramBase, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, BDS_TTS::paramBase>>>> {
    CDUnknownFunctionPointerType *_field1;
    struct bds_shared_ptr_control_object *_field2;
    CDUnknownFunctionPointerType _field3;
    _Bool _field4;
} bds_shared_ptr_d5758924;

typedef struct bds_shared_ptr<unsigned char> {
    CDUnknownFunctionPointerType *_field1;
    struct bds_shared_ptr_control_object *_field2;
    CDUnknownFunctionPointerType _field3;
    _Bool _field4;
} bds_shared_ptr_1584cfbf;

typedef struct bds_weak_ptr<BDS_TTS::Audio::AudioPlayer> {
    CDUnknownFunctionPointerType *_vptr$bds_shared_ptr_base;
    struct bds_shared_ptr_control_object *controlObject;
    CDUnknownFunctionPointerType objectDestructor;
    _Bool isStrong;
} bds_weak_ptr_8ba8035f;

typedef struct bds_weak_ptr<BDS_TTS::Networking::bds_HttpRequestMaker_iOS> {
    CDUnknownFunctionPointerType *_vptr$bds_shared_ptr_base;
    struct bds_shared_ptr_control_object *controlObject;
    CDUnknownFunctionPointerType objectDestructor;
    _Bool isStrong;
} bds_weak_ptr_7348b3b7;

typedef struct scoped_refptr<base::WeakContainer> {
    struct WeakContainer *ptr_;
} scoped_refptr_b6aac36b;

typedef struct scoped_refptr<net::HttpProtocolHandlerCore> {
    struct HttpProtocolHandlerCore *ptr_;
} scoped_refptr_81e0d7bb;

typedef struct shared_ptr<ASDisplayNodeLayout> {
    struct ASDisplayNodeLayout *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_8af51647;

typedef struct vector<_NSRange, std::__1::allocator<_NSRange>> {
    struct _NSRange *__begin_;
    struct _NSRange *__end_;
    struct __compressed_pair<_NSRange *, std::__1::allocator<_NSRange>> {
        struct _NSRange *__first_;
    } __end_cap_;
} vector_d5f79a51;

typedef struct vector<long, std::__1::allocator<long>> {
    long long *__begin_;
    long long *__end_;
    struct __compressed_pair<long *, std::__1::allocator<long>> {
        long long *__first_;
    } __end_cap_;
} vector_b5bccc4d;

#pragma mark Named Unions

union _GLKMatrix4 {
    struct {
        float m00;
        float m01;
        float m02;
        float m03;
        float m10;
        float m11;
        float m12;
        float m13;
        float m20;
        float m21;
        float m22;
        float m23;
        float m30;
        float m31;
        float m32;
        float m33;
    } ;
    float m[16];
};

union _GLKVector3 {
    struct {
        float x;
        float y;
        float z;
    } ;
    struct {
        float r;
        float g;
        float b;
    } ;
    struct {
        float s;
        float t;
        float p;
    } ;
    float v[3];
};

#pragma mark Typedef'd Unions

typedef union {
    char _field1[128];
    long long _field2;
} CDUnion_4426d289;

