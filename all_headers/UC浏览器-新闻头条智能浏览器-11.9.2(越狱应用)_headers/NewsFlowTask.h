//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

@class NSArray, NSDate, NSDictionary, NSError, NSMutableData, NSMutableDictionary, NSString, NSURLConnection, NetTrafficStatistics;
@protocol NewsFlowTaskDelegate;

@interface NewsFlowTask : NSObject
{
    _Bool _enableErrLog;
    _Bool _isResponseEncode;
    int _state;
    id <NewsFlowTaskDelegate> _delegate;
    NSString *_URL;
    NSString *_backupURL;
    NSString *_backupURL2;
    NSString *_httpMethod;
    NSDictionary *_requestParamDict;
    NSArray *_requestParamArray;
    long long _retryCount;
    NSDictionary *_userInfo;
    double _timeout;
    NSDate *_startTime;
    NSString *_channel;
    NSDictionary *_domainIPInfo;
    NSString *_protocolKey;
    NSMutableDictionary *_dictHeaderFields;
    long long _currentTryNum;
    long long _netErrbeatCount;
    NSURLConnection *_connection;
    NSMutableData *_responseData;
    NSError *_error;
    NetTrafficStatistics *_netStat;
}

+ (id)allProtocolClass;
+ (void)unregisterProtocolClass:(Class)arg1;
+ (void)registerProtocolClass:(Class)arg1;
+ (void)dispatchTaskEvent:(id)arg1 didFinishLoading:(unsigned long long)arg2 withRequest:(id)arg3;
+ (void)dispatchTaskEvent:(id)arg1 didFailWithError:(id)arg2 contentSize:(unsigned long long)arg3 withRequest:(id)arg4;
+ (void)dispatchTaskEvent:(id)arg1 didReceiveData:(id)arg2 withRequest:(id)arg3;
+ (void)dispatchTaskEvent:(id)arg1 didReceiveResponse:(id)arg2 withRequest:(id)arg3;
+ (void)dispatchTaskEvent:(id)arg1 didStartLoading:(id)arg2;
+ (void)dispatchTaskEvent:(id)arg1 willSendRequest:(id)arg2;
@property(retain, nonatomic) NetTrafficStatistics *netStat; // @synthesize netStat=_netStat;
@property(nonatomic) _Bool isResponseEncode; // @synthesize isResponseEncode=_isResponseEncode;
@property(retain, nonatomic) NSError *error; // @synthesize error=_error;
@property(nonatomic) int state; // @synthesize state=_state;
@property(retain, nonatomic) NSMutableData *responseData; // @synthesize responseData=_responseData;
@property(retain, nonatomic) NSURLConnection *connection; // @synthesize connection=_connection;
@property(nonatomic) long long netErrbeatCount; // @synthesize netErrbeatCount=_netErrbeatCount;
@property(nonatomic) long long currentTryNum; // @synthesize currentTryNum=_currentTryNum;
@property(retain, nonatomic) NSMutableDictionary *dictHeaderFields; // @synthesize dictHeaderFields=_dictHeaderFields;
@property(copy, nonatomic) NSString *protocolKey; // @synthesize protocolKey=_protocolKey;
@property(retain, nonatomic) NSDictionary *domainIPInfo; // @synthesize domainIPInfo=_domainIPInfo;
@property(retain, nonatomic) NSString *channel; // @synthesize channel=_channel;
@property(retain, nonatomic) NSDate *startTime; // @synthesize startTime=_startTime;
@property(nonatomic) double timeout; // @synthesize timeout=_timeout;
@property(nonatomic) _Bool enableErrLog; // @synthesize enableErrLog=_enableErrLog;
@property(retain, nonatomic) NSDictionary *userInfo; // @synthesize userInfo=_userInfo;
@property(nonatomic) long long retryCount; // @synthesize retryCount=_retryCount;
@property(retain, nonatomic) NSArray *requestParamArray; // @synthesize requestParamArray=_requestParamArray;
@property(retain, nonatomic) NSDictionary *requestParamDict; // @synthesize requestParamDict=_requestParamDict;
@property(copy, nonatomic) NSString *httpMethod; // @synthesize httpMethod=_httpMethod;
@property(copy, nonatomic) NSString *backupURL2; // @synthesize backupURL2=_backupURL2;
@property(copy, nonatomic) NSString *backupURL; // @synthesize backupURL=_backupURL;
@property(copy, nonatomic) NSString *URL; // @synthesize URL=_URL;
@property(nonatomic) id <NewsFlowTaskDelegate> delegate; // @synthesize delegate=_delegate;
- (id)description;
- (void)dispatchRequestFailedWithError:(id)arg1 data:(id)arg2;
- (void)notifyRequestFailedWithError:(id)arg1 data:(id)arg2;
- (void)notifyURLError;
- (void)dispatchRequestSucceedWithData:(id)arg1;
- (void)notifyRequestSucceedWithData:(id)arg1;
- (id)markErrorInfo:(id)arg1 withCode:(long long)arg2;
- (void)connectionDidFinishLoading:(id)arg1;
- (id)connection:(id)arg1 willCacheResponse:(id)arg2;
- (void)connection:(id)arg1 didReceiveResponse:(id)arg2;
- (void)connection:(id)arg1 didReceiveData:(id)arg2;
- (void)connection:(id)arg1 didFailWithError:(id)arg2;
- (void)connection:(id)arg1 willSendRequestForAuthenticationChallenge:(id)arg2;
- (id)httpHeaderWithField:(id)arg1;
- (void)setHttpHeader:(id)arg1 forHTTPHeaderField:(id)arg2;
- (id)requestData:(_Bool)arg1 isWSGEncoding:(_Bool)arg2;
- (id)backupRequestURL;
- (id)normalRequestURL;
- (void)makeRequest:(id)arg1;
- (void)makeConnectionWithRequest:(id)arg1;
- (id)requestForURL:(id)arg1;
- (_Bool)makeBackupRequest;
- (_Bool)makeNormalRequest;
- (_Bool)makeIpRequest;
- (void)cancelTask;
- (void)delayRetryTask;
- (void)retryUseBackup2URL;
- (void)retryTask;
- (void)startTask;
- (_Bool)isRunning;
- (id)initWithURL:(id)arg1 delegate:(id)arg2;
- (id)init;
- (void)dealloc;

@end

