//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

@class NSMutableArray;

@interface QMEmptyAudioQueue : NSObject
{
    struct _opaque_pthread_mutex_t _mutex;
    struct _opaque_pthread_cond_t _cond;
    double _playedTime;
    _Bool _isRunning;
    _Bool _started;
    unsigned int _bufferSize;
    struct OpaqueAudioQueue *_audioQueue;
    NSMutableArray *_buffers;
    NSMutableArray *_reusableBuffers;
    struct AudioStreamBasicDescription _audioDescription;
}

@property(retain, nonatomic) NSMutableArray *reusableBuffers; // @synthesize reusableBuffers=_reusableBuffers;
@property(retain, nonatomic) NSMutableArray *buffers; // @synthesize buffers=_buffers;
@property(nonatomic) _Bool started; // @synthesize started=_started;
@property(nonatomic) struct OpaqueAudioQueue *audioQueue; // @synthesize audioQueue=_audioQueue;
@property(nonatomic) struct AudioStreamBasicDescription audioDescription; // @synthesize audioDescription=_audioDescription;
@property(nonatomic) unsigned int bufferSize; // @synthesize bufferSize=_bufferSize;
@property(nonatomic) _Bool isRunning; // @synthesize isRunning=_isRunning;
- (void).cxx_destruct;
- (void)_mutexSignal;
- (void)_mutexWait;
- (void)_mutexDestory;
- (void)_mutexInit;
- (void)handleAudioQueuePropertyCallBack:(struct OpaqueAudioQueue *)arg1 property:(unsigned int)arg2;
- (void)handleAudioQueueOutputCallBack:(struct OpaqueAudioQueue *)arg1 buffer:(struct AudioQueueBuffer *)arg2;
- (_Bool)playData:(id)arg1 packetCount:(unsigned int)arg2 packetDescriptions:(struct AudioStreamPacketDescription *)arg3 isEof:(_Bool)arg4;
@property(readonly, nonatomic) double playedTime;
- (_Bool)stop:(_Bool)arg1;
- (_Bool)flush;
- (_Bool)reset;
- (_Bool)pause;
- (_Bool)resume;
- (_Bool)_start;
- (_Bool)createAudioQueue;
@property(readonly, nonatomic) _Bool isAvailable;
- (void)dealloc;
- (id)initWithFormat:(struct AudioStreamBasicDescription)arg1 bufferSize:(unsigned int)arg2;

@end

