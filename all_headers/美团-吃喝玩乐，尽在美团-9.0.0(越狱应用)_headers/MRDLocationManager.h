//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "CLLocationManagerDelegate-Protocol.h"
#import "MRDLocationReportServiceDelegate-Protocol.h"

@class CLLocation, CLLocationManager, MRDLocationConfigModel, MRDLocationReportService, MRDLocationResultModel, MTPlaceMark, NSArray, NSDate, NSDictionary, NSHashTable, NSMapTable, NSMutableArray, NSMutableSet, NSString, NSTimer;

@interface MRDLocationManager : NSObject <CLLocationManagerDelegate, MRDLocationReportServiceDelegate>
{
    _Bool _locating;
    _Bool _resovingGPSLocation;
    _Bool _moniSigLocChange;
    _Bool _continuousPositioningEnabled;
    _Bool _locationLogEnabled;
    _Bool _enableLastLocation;
    _Bool _needMRDLocationEncrypt;
    _Bool _isSimulatingLocation;
    _Bool _allowsBackgroundLocationUpdates;
    _Bool _pausesLocationUpdatesAutomatically;
    _Bool _retry;
    _Bool _isLocatingAutomatically;
    _Bool _hasBeganBeacon;
    int _locateCallBackCount;
    int _preAuthorStatus;
    CLLocation *_lastLocation;
    MTPlaceMark *_lastPlaceMark;
    double _distanceFilter;
    double _desiredAccuracy;
    CDUnknownBlockType _codeLevelCallback;
    CDUnknownBlockType _userLevelCallback;
    CDUnknownBlockType _catLevelCallback;
    CDUnknownBlockType _synthesizeCallback;
    CLLocation *_lastWMLocation;
    CLLocationManager *_locationManager;
    MRDLocationResultModel *_locationResultModel;
    NSHashTable *_delegates;
    NSMutableArray *_locationOnceBlocksArray;
    MRDLocationConfigModel *_configModel;
    NSTimer *_backGroundLocationTimer;
    NSMapTable *_regionsTable;
    NSMutableSet *_regionsSet;
    NSArray *_permissions;
    MRDLocationReportService *_reportService;
    CDUnknownBlockType _locationFailedCallback;
    NSDate *_lastReportDecodeErrDate;
    NSMutableSet *_monitoredBeaconRegions;
    NSMutableSet *_rangedBeaconRegions;
    NSMutableArray *_requestiBeaconInfos;
    NSDictionary *_serverLocationResponseDict;
}

+ (id)geohashStringWithLocation:(id)arg1 precision:(unsigned long long)arg2;
+ (id)defaultManager;
+ (int)authorizationStatus;
+ (void)initialize;
+ (id)getPlaceMarkUseLastLocation;
+ (id)getPlaceMarkUseLastLocation;
@property(retain) NSDictionary *serverLocationResponseDict; // @synthesize serverLocationResponseDict=_serverLocationResponseDict;
@property(nonatomic) _Bool hasBeganBeacon; // @synthesize hasBeganBeacon=_hasBeganBeacon;
@property(retain, nonatomic) NSMutableArray *requestiBeaconInfos; // @synthesize requestiBeaconInfos=_requestiBeaconInfos;
@property(retain, nonatomic) NSMutableSet *rangedBeaconRegions; // @synthesize rangedBeaconRegions=_rangedBeaconRegions;
@property(retain, nonatomic) NSMutableSet *monitoredBeaconRegions; // @synthesize monitoredBeaconRegions=_monitoredBeaconRegions;
@property(retain, nonatomic) NSDate *lastReportDecodeErrDate; // @synthesize lastReportDecodeErrDate=_lastReportDecodeErrDate;
@property(copy, nonatomic) CDUnknownBlockType locationFailedCallback; // @synthesize locationFailedCallback=_locationFailedCallback;
@property(retain, nonatomic) MRDLocationReportService *reportService; // @synthesize reportService=_reportService;
@property(retain, nonatomic) NSArray *permissions; // @synthesize permissions=_permissions;
@property(nonatomic) int preAuthorStatus; // @synthesize preAuthorStatus=_preAuthorStatus;
@property(retain, nonatomic) NSMutableSet *regionsSet; // @synthesize regionsSet=_regionsSet;
@property(retain, nonatomic) NSMapTable *regionsTable; // @synthesize regionsTable=_regionsTable;
@property(nonatomic) _Bool isLocatingAutomatically; // @synthesize isLocatingAutomatically=_isLocatingAutomatically;
@property(retain, nonatomic) NSTimer *backGroundLocationTimer; // @synthesize backGroundLocationTimer=_backGroundLocationTimer;
@property(retain, nonatomic) MRDLocationConfigModel *configModel; // @synthesize configModel=_configModel;
@property(nonatomic) _Bool retry; // @synthesize retry=_retry;
@property int locateCallBackCount; // @synthesize locateCallBackCount=_locateCallBackCount;
@property(retain, nonatomic) NSMutableArray *locationOnceBlocksArray; // @synthesize locationOnceBlocksArray=_locationOnceBlocksArray;
@property(retain, nonatomic) NSHashTable *delegates; // @synthesize delegates=_delegates;
@property(copy, nonatomic) MRDLocationResultModel *locationResultModel; // @synthesize locationResultModel=_locationResultModel;
@property(retain, nonatomic) CLLocationManager *locationManager; // @synthesize locationManager=_locationManager;
@property(retain, nonatomic) CLLocation *lastWMLocation; // @synthesize lastWMLocation=_lastWMLocation;
@property(copy, nonatomic) CDUnknownBlockType synthesizeCallback; // @synthesize synthesizeCallback=_synthesizeCallback;
@property(copy, nonatomic) CDUnknownBlockType catLevelCallback; // @synthesize catLevelCallback=_catLevelCallback;
@property(copy, nonatomic) CDUnknownBlockType userLevelCallback; // @synthesize userLevelCallback=_userLevelCallback;
@property(copy, nonatomic) CDUnknownBlockType codeLevelCallback; // @synthesize codeLevelCallback=_codeLevelCallback;
@property(nonatomic) _Bool pausesLocationUpdatesAutomatically; // @synthesize pausesLocationUpdatesAutomatically=_pausesLocationUpdatesAutomatically;
@property(nonatomic) _Bool allowsBackgroundLocationUpdates; // @synthesize allowsBackgroundLocationUpdates=_allowsBackgroundLocationUpdates;
@property(nonatomic) _Bool isSimulatingLocation; // @synthesize isSimulatingLocation=_isSimulatingLocation;
@property(getter=isNeedMRDLocationEncrypt) _Bool needMRDLocationEncrypt; // @synthesize needMRDLocationEncrypt=_needMRDLocationEncrypt;
@property(nonatomic) _Bool enableLastLocation; // @synthesize enableLastLocation=_enableLastLocation;
@property(nonatomic) _Bool locationLogEnabled; // @synthesize locationLogEnabled=_locationLogEnabled;
@property(nonatomic) _Bool continuousPositioningEnabled; // @synthesize continuousPositioningEnabled=_continuousPositioningEnabled;
@property(nonatomic) double desiredAccuracy; // @synthesize desiredAccuracy=_desiredAccuracy;
@property(nonatomic) double distanceFilter; // @synthesize distanceFilter=_distanceFilter;
@property(retain) MTPlaceMark *lastPlaceMark; // @synthesize lastPlaceMark=_lastPlaceMark;
@property(copy) CLLocation *lastLocation; // @synthesize lastLocation=_lastLocation;
@property(getter=isMoniSigLocChange) _Bool moniSigLocChange; // @synthesize moniSigLocChange=_moniSigLocChange;
@property(getter=isResolvingGPSLocation) _Bool resovingGPSLocation; // @synthesize resovingGPSLocation=_resovingGPSLocation;
@property(getter=isLocating) _Bool locating; // @synthesize locating=_locating;
- (void).cxx_destruct;
- (id)locationJson;
- (id)app_monitoredRegions;
- (id)selectLackPermissionsFromPermission:(int)arg1;
- (id)placeMarkWithLocation:(id)arg1;
- (_Bool)onCancelingReportToMars:(_Bool)arg1;
- (void)configLocationTask:(id)arg1 WithLocationInfo:(id)arg2 systemLocationFailed:(_Bool)arg3;
- (id)ibeaconInfoArrayFromBeacons:(id)arg1;
- (_Bool)shouldSendInfoToMarsServerWith:(id)arg1 oldLocation:(id)arg2 lastLocationRequestDate:(id)arg3 lastAutomaticllyLocationRequestDate:(id)arg4 locationInfo:(id)arg5 sysLocationFailed:(_Bool)arg6;
- (void)locationManager:(id)arg1 didChangeAuthorizationStatus:(int)arg2;
- (void)locationManager:(id)arg1 didFailWithError:(id)arg2;
- (void)locationManager:(id)arg1 didUpdateLocations:(id)arg2;
- (void)locationManager:(id)arg1 rangingBeaconsDidFailForRegion:(id)arg2 withError:(id)arg3;
- (void)locationManager:(id)arg1 didRangeBeacons:(id)arg2 inRegion:(id)arg3;
- (void)locationManager:(id)arg1 monitoringDidFailForRegion:(id)arg2 withError:(id)arg3;
- (void)locationManager:(id)arg1 didStartMonitoringForRegion:(id)arg2;
- (void)locationManager:(id)arg1 didEnterRegion:(id)arg2;
- (void)locationManager:(id)arg1 didExitRegion:(id)arg2;
- (id)addCircleRegionForMonitoringWithCenter:(struct CLLocationCoordinate2D)arg1 radius:(double)arg2 identifier:(id)arg3 delegate:(id)arg4;
- (void)stopMonitoringRegion:(id)arg1;
- (void)startMonitoringWithRegion:(id)arg1 delegate:(id)arg2;
- (id)releasedDelegatesAfterUpdate;
- (void)handleNetworkTask:(id)arg1;
- (void)startBackGroundLocation;
- (void)startLocatingAutomatically;
- (void)unregisteLocationDelegate:(id)arg1;
- (void)registeLocationDelegate:(id)arg1;
- (void)handleOnceWMLocation:(id)arg1;
- (void)handleOnceLocation:(id)arg1;
- (void)requestLocationWMValidTimeInterval:(double)arg1 finished:(CDUnknownBlockType)arg2;
- (void)resetLocationOnceBlocksArrayIfNeededWithStatus:(int)arg1;
- (void)handleLocationOnceBlocksWithLocation:(id)arg1 placemark:(id)arg2 error:(id)arg3 wm:(_Bool)arg4;
- (void)locateOnceWithValidTimeInterval:(double)arg1 finished:(CDUnknownBlockType)arg2;
- (void)clearLocateOnceArrayIfNeeded;
- (void)reverseGeoLocation:(id)arg1 timeout:(double)arg2 finished:(CDUnknownBlockType)arg3;
- (void)reverseGeoLocation:(id)arg1 rgsLevel:(long long)arg2 finished:(CDUnknownBlockType)arg3;
- (void)reverseGeoLocation:(id)arg1 finished:(CDUnknownBlockType)arg2;
- (void)stopMonitoringSignificantLocationChanges;
- (void)startMonitoringSignificantLocationChanges;
- (void)stopUpdatingLocation;
- (void)startUpdatingLocation;
- (void)startiBeaconService;
- (_Bool)initLocationServiceWithUUID:(id)arg1 userID:(id)arg2 clientID:(id)arg3 authKey:(id)arg4 networkServiceBlock:(CDUnknownBlockType)arg5;
- (void)requestWhenInUseAuthorization;
- (void)requestAlwaysAuthorization;
- (void)dealloc;
- (id)init;
- (void)htl_locatedCity:(CDUnknownBlockType)arg1;
- (void)isLocationInCity:(id)arg1 finished:(CDUnknownBlockType)arg2;
- (void)isLocationInCurrentCity:(CDUnknownBlockType)arg1;
- (void)locatedCity:(CDUnknownBlockType)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

