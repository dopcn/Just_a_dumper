//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "MLPublisher.h"

#import "EnterConfApiDelegate-Protocol.h"
#import "ExternalAudioModuleDelegate-Protocol.h"
#import "ExternalVideoModuleDelegate-Protocol.h"
#import "MLAudioEffectManagerDelegete-Protocol.h"
#import "MLAudioUnitDelegate-Protocol.h"
#import "MLPublisherRenderViewsLayoutDelegate-Protocol.h"
#import "MLPublisherStatisticAuxiliaryDataProvider-Protocol.h"
#import "MLSimpleMusicDecoderDelegate-Protocol.h"
#import "SimpleVideoPlayerDelegate-Protocol.h"

@class EnterConfApi, ExternalAudioModule, ExternalVideoModule, IJKAudioConvert, MLAudioProcess, MLAudioProcessCacher, MLMediaSampleBufferUtilty, MLSabineAudioEffect, MLSimpleMusicDecoder, NSDictionary, NSMutableArray, NSMutableData, NSMutableDictionary, NSString, NSTimer, UIView;

@interface MLWeilaPublisher : MLPublisher <MLPublisherStatisticAuxiliaryDataProvider, MLAudioEffectManagerDelegete, MLSimpleMusicDecoderDelegate, ExternalVideoModuleDelegate, ExternalAudioModuleDelegate, EnterConfApiDelegate, MLAudioUnitDelegate, SimpleVideoPlayerDelegate, MLPublisherRenderViewsLayoutDelegate>
{
    _Bool _isHost;
    long long _conferenceSessionId;
    _Bool _isPlaybackRemoteAudio;
    _Bool _isStartAudioCapture;
    long long _musicStartTsInMs;
    long long _musicPausedTsInMs;
    double _lastAudioPts;
    _Bool _enableReportAudioVolume;
    _Bool _muteAudioWhileEnterBackground;
    _Bool _isBeginAdjustBitrate;
    _Bool _isLocalFullScreen;
    _Bool _isFirstAudioFrame;
    _Bool _delayDisconnectPeriod;
    _Bool _isNeedToSwitchSubType;
    _Bool _isAudioUnitRetry;
    _Bool _isMusicLoopback;
    _Bool _isWeilaAudience;
    _Bool _isUseHighQualityAudio;
    _Bool _isSpeakphone;
    NSMutableDictionary *_smVideoPlayerDict;
    unsigned long long _totalAudioSendOutBytes;
    unsigned long long _totalVideoSendOutBytes;
    unsigned long long _totalSendOutBytes;
    unsigned long long _totalAudioRecvInBytes;
    unsigned long long _totalVideoRecvInBytes;
    unsigned long long _totalRecvInBytes;
    MLAudioProcess *_kAudioProcess;
    MLAudioProcessCacher *_audioProcessCacher;
    IJKAudioConvert *_audioConvert;
    IJKAudioConvert *_audioPlaybackConvert;
    NSMutableArray *_audioMusicPlaybackSampleBuffer;
    NSMutableArray *_audioMusicSendoutSampleBuffer;
    unsigned long long _maxPcmDataSampleBufSize;
    EnterConfApi *_confInstance;
    ExternalVideoModule *_videoModuleInstance;
    ExternalAudioModule *_audioModuleInstance;
    NSMutableDictionary *_audioVolumeDict;
    NSDictionary *_lastSeiDict;
    NSString *_securityId;
    unsigned long long _remoteUserId;
    unsigned long long _localUserId;
    NSString *_acceptRemoteUserId;
    NSString *_hostSdkID;
    long long _readyToAcceptRemoteUserId;
    NSString *_momoId;
    unsigned long long _connectedTimestampInMs;
    unsigned long long _retryAudioRenderTimes;
    long long _writeOutVideoFramesNumber;
    MLSimpleMusicDecoder *_smDecoder;
    UIView *_debugView;
    NSTimer *_disconnectTimer;
    NSMutableDictionary *_yuv420ToCVPixelBufferDict;
    MLMediaSampleBufferUtilty *_mediaSampleBufferUtilty;
    MLSabineAudioEffect *_sabineLookbackAudioEffect;
    NSMutableData *_loopbackData;
    NSString *_liveAppID;
    NSString *_sdkAppID;
    NSString *_channelKey;
    struct CGRect _standardFrameRatioInVideo;
}

+ (double)getCurrentAudioSampleRate;
@property(nonatomic) _Bool isSpeakphone; // @synthesize isSpeakphone=_isSpeakphone;
@property(nonatomic) _Bool isUseHighQualityAudio; // @synthesize isUseHighQualityAudio=_isUseHighQualityAudio;
@property(copy, nonatomic) NSString *channelKey; // @synthesize channelKey=_channelKey;
@property(copy, nonatomic) NSString *sdkAppID; // @synthesize sdkAppID=_sdkAppID;
@property(copy, nonatomic) NSString *liveAppID; // @synthesize liveAppID=_liveAppID;
@property(nonatomic) _Bool isWeilaAudience; // @synthesize isWeilaAudience=_isWeilaAudience;
@property(nonatomic) _Bool isMusicLoopback; // @synthesize isMusicLoopback=_isMusicLoopback;
@property(retain, nonatomic) NSMutableData *loopbackData; // @synthesize loopbackData=_loopbackData;
@property(retain, nonatomic) MLSabineAudioEffect *sabineLookbackAudioEffect; // @synthesize sabineLookbackAudioEffect=_sabineLookbackAudioEffect;
@property(retain, nonatomic) MLMediaSampleBufferUtilty *mediaSampleBufferUtilty; // @synthesize mediaSampleBufferUtilty=_mediaSampleBufferUtilty;
@property(retain, nonatomic) NSMutableDictionary *yuv420ToCVPixelBufferDict; // @synthesize yuv420ToCVPixelBufferDict=_yuv420ToCVPixelBufferDict;
@property _Bool isAudioUnitRetry; // @synthesize isAudioUnitRetry=_isAudioUnitRetry;
@property(nonatomic) _Bool isNeedToSwitchSubType; // @synthesize isNeedToSwitchSubType=_isNeedToSwitchSubType;
@property(nonatomic, getter=isDelayDisconnectPeriod) _Bool delayDisconnectPeriod; // @synthesize delayDisconnectPeriod=_delayDisconnectPeriod;
@property(retain, nonatomic) NSTimer *disconnectTimer; // @synthesize disconnectTimer=_disconnectTimer;
@property(nonatomic) __weak UIView *debugView; // @synthesize debugView=_debugView;
@property(retain, nonatomic) MLSimpleMusicDecoder *smDecoder; // @synthesize smDecoder=_smDecoder;
@property(nonatomic) _Bool isFirstAudioFrame; // @synthesize isFirstAudioFrame=_isFirstAudioFrame;
@property(nonatomic) long long writeOutVideoFramesNumber; // @synthesize writeOutVideoFramesNumber=_writeOutVideoFramesNumber;
@property(nonatomic) unsigned long long retryAudioRenderTimes; // @synthesize retryAudioRenderTimes=_retryAudioRenderTimes;
@property(nonatomic) unsigned long long connectedTimestampInMs; // @synthesize connectedTimestampInMs=_connectedTimestampInMs;
@property(nonatomic) struct CGRect standardFrameRatioInVideo; // @synthesize standardFrameRatioInVideo=_standardFrameRatioInVideo;
@property(nonatomic) _Bool isLocalFullScreen; // @synthesize isLocalFullScreen=_isLocalFullScreen;
@property(copy, nonatomic) NSString *momoId; // @synthesize momoId=_momoId;
@property(nonatomic) long long readyToAcceptRemoteUserId; // @synthesize readyToAcceptRemoteUserId=_readyToAcceptRemoteUserId;
@property(copy, nonatomic) NSString *hostSdkID; // @synthesize hostSdkID=_hostSdkID;
@property(copy, nonatomic) NSString *acceptRemoteUserId; // @synthesize acceptRemoteUserId=_acceptRemoteUserId;
@property(nonatomic) unsigned long long localUserId; // @synthesize localUserId=_localUserId;
@property(nonatomic) unsigned long long remoteUserId; // @synthesize remoteUserId=_remoteUserId;
@property(copy, nonatomic) NSString *securityId; // @synthesize securityId=_securityId;
@property(copy, nonatomic) NSDictionary *lastSeiDict; // @synthesize lastSeiDict=_lastSeiDict;
@property(retain, nonatomic) NSMutableDictionary *audioVolumeDict; // @synthesize audioVolumeDict=_audioVolumeDict;
@property(retain, nonatomic) ExternalAudioModule *audioModuleInstance; // @synthesize audioModuleInstance=_audioModuleInstance;
@property(retain, nonatomic) ExternalVideoModule *videoModuleInstance; // @synthesize videoModuleInstance=_videoModuleInstance;
@property(retain, nonatomic) EnterConfApi *confInstance; // @synthesize confInstance=_confInstance;
@property(nonatomic) unsigned long long maxPcmDataSampleBufSize; // @synthesize maxPcmDataSampleBufSize=_maxPcmDataSampleBufSize;
@property(retain, nonatomic) NSMutableArray *audioMusicSendoutSampleBuffer; // @synthesize audioMusicSendoutSampleBuffer=_audioMusicSendoutSampleBuffer;
@property(retain, nonatomic) NSMutableArray *audioMusicPlaybackSampleBuffer; // @synthesize audioMusicPlaybackSampleBuffer=_audioMusicPlaybackSampleBuffer;
@property(retain, nonatomic) IJKAudioConvert *audioPlaybackConvert; // @synthesize audioPlaybackConvert=_audioPlaybackConvert;
@property(retain, nonatomic) IJKAudioConvert *audioConvert; // @synthesize audioConvert=_audioConvert;
@property(retain, nonatomic) MLAudioProcessCacher *audioProcessCacher; // @synthesize audioProcessCacher=_audioProcessCacher;
@property(retain, nonatomic) MLAudioProcess *kAudioProcess; // @synthesize kAudioProcess=_kAudioProcess;
@property _Bool isBeginAdjustBitrate; // @synthesize isBeginAdjustBitrate=_isBeginAdjustBitrate;
@property(nonatomic) unsigned long long totalRecvInBytes; // @synthesize totalRecvInBytes=_totalRecvInBytes;
@property(nonatomic) unsigned long long totalVideoRecvInBytes; // @synthesize totalVideoRecvInBytes=_totalVideoRecvInBytes;
@property(nonatomic) unsigned long long totalAudioRecvInBytes; // @synthesize totalAudioRecvInBytes=_totalAudioRecvInBytes;
@property(nonatomic) unsigned long long totalSendOutBytes; // @synthesize totalSendOutBytes=_totalSendOutBytes;
@property(nonatomic) unsigned long long totalVideoSendOutBytes; // @synthesize totalVideoSendOutBytes=_totalVideoSendOutBytes;
@property(nonatomic) unsigned long long totalAudioSendOutBytes; // @synthesize totalAudioSendOutBytes=_totalAudioSendOutBytes;
@property(nonatomic) _Bool muteAudioWhileEnterBackground; // @synthesize muteAudioWhileEnterBackground=_muteAudioWhileEnterBackground;
@property(retain, nonatomic) NSMutableDictionary *smVideoPlayerDict; // @synthesize smVideoPlayerDict=_smVideoPlayerDict;
- (_Bool)enableReportAudioVolume;
- (void).cxx_destruct;
- (void)disconnectTimerAction:(id)arg1;
- (void)disconnectTimerInvalidate;
- (void)conferenceResume;
- (void)enterForeground;
- (void)enterBackground;
- (void)stopMonitorMPlayerTimer;
- (void)startMonitorMPlayerTimer;
- (void)gernerateMusicSampleData;
- (void)pushMusicSampleBuffer:(id)arg1 data:(id)arg2;
- (void)getVideoEncodeWidth:(int *)arg1 height:(int *)arg2;
- (int)getAudioDecodeFrameCount;
- (int)getAudioEncodeFrameCount;
- (int)getAudioEncodeDataSize;
- (int)getVideoRenderFrameCount;
- (int)getVideoDecodeFrameCount;
- (int)getVideoCaptureFrameCount;
- (int)getVideoEncodeFrameCount;
- (int)getVideoEncodeDataSize;
- (void)onLogMsg:(id)arg1;
- (void)onNativeLog:(id)arg1;
- (void)onConfChairmanChanged:(long long)arg1 userId:(long long)arg2;
- (void)onApplyConfChairman:(long long)arg1 userId:(long long)arg2 result:(_Bool)arg3;
- (void)onVideoaDualStreamEnabled:(_Bool)arg1 userId:(long long)arg2 devid:(id)arg3;
- (void)onAnchorUnlinkResponse:(long long)arg1 userId:(long long)arg2;
- (void)onAnchorLinkResponse:(long long)arg1 userId:(long long)arg2 devId:(id)arg3;
- (void)onAnchorExit:(long long)arg1 userId:(long long)arg2;
- (void)onAnchorEnter:(long long)arg1 userId:(long long)arg2 devId:(id)arg3 error:(int)arg4;
- (void)onGrantSpeakPermission:(long long)arg1 status:(int)arg2;
- (void)onApplySpeakPermission:(long long)arg1;
- (void)onUpdateRtmpStatus:(long long)arg1 rtmpUrl:(id)arg2 status:(_Bool)arg3;
- (void)onSetSei:(long long)arg1 sei:(id)arg2;
- (void)onSetSubVideoPosRation:(long long)arg1 userId:(long long)arg2 devId:(id)arg3 videoPosRation:(struct CGRect)arg4;
- (void)onKickedOut:(long long)arg1 operUserId:(long long)arg2 userId:(long long)arg3 reason:(int)arg4;
- (void)onExitRoom;
- (void)onDisconnected:(int)arg1;
- (void)processMemberExitOrPlayerFailedWithUserId:(unsigned long long)arg1 reason:(int)arg2;
- (void)onMemberExit:(long long)arg1 userId:(long long)arg2;
- (void)onRequestChannelKey;
- (void)onRecvCustomizedVideoMsg:(id)arg1;
- (void)onRecvCustomizedAudioMsg:(id)arg1;
- (void)onVideoMuted:(_Bool)arg1 userId:(long long)arg2;
- (void)onAudioMuted:(_Bool)arg1 userId:(long long)arg2;
- (void)onReportLocalVideoStats:(struct GSLocalVideoStats)arg1;
- (void)onReportAuidoLevel:(long long)arg1 audioLevel:(int)arg2 audioLevelFullRange:(int)arg3;
- (void)onSetMyVideoFullScreen:(long long)arg1 fullScreen:(_Bool)arg2;
- (void)enableMixGuessVideoWithUserId:(unsigned long long)arg1 videoPosRation:(struct CGRect)arg2;
- (void)onMemberEnter:(long long)arg1 userId:(long long)arg2 isHost:(_Bool)arg3 speaking:(_Bool)arg4 devid:(id)arg5;
- (void)enableWeilaReportAudioVolume:(_Bool)arg1;
- (void)setEnableReportAudioVolume:(_Bool)arg1;
- (_Bool)isAcceptRemoteUserId:(unsigned long long)arg1;
- (void)onEnterRoom:(int)arg1 isHost:(_Bool)arg2 deviceID:(id)arg3;
- (void)onAudioUnitRenderDataError:(int)arg1 instance:(void *)arg2;
- (void)onDeliverRecorderData:(unsigned int)arg1 ioData:(struct AudioBufferList *)arg2;
- (void)playbackAudioSampleData:(char *)arg1 byteSize:(unsigned int)arg2;
- (void)sendOutAudioSampleData:(const char *)arg1 byteSize:(unsigned int)arg2;
- (void)postAudioToScreenRecord:(id)arg1;
- (void)receiveVideoData:(void *)arg1 len:(int)arg2 devID:(id)arg3 timestamp:(long long)arg4 width:(int)arg5 height:(int)arg6 frameType:(int)arg7;
- (_Bool)stopVideoPlay:(long long)arg1;
- (_Bool)startVideoPlay:(long long)arg1;
- (_Bool)stopVideoCapture;
- (_Bool)startVideoCapture;
- (void)sendCustomizedVideoMsg:(id)arg1;
- (void)receiveAudioData:(void *)arg1 len:(int)arg2;
- (_Bool)stopAudioPlay;
- (_Bool)startAudioPlay;
- (_Bool)stopAudioCapture;
- (_Bool)startAudioCapture;
- (void)destroyAudioUnitController;
- (void)createAudioUnitControllerWithSubType:(unsigned int)arg1 isSpeakphone:(_Bool)arg2;
- (void)setSabineAudioEffectToDefault;
- (void)setSabineAudioEffect:(int)arg1 index:(int)arg2 value:(float)arg3;
- (void)updateSeiDataForConnectWithSeiDict:(id)arg1;
- (void)setSeiUserInfo:(id)arg1;
- (void)setVideoPosition:(id)arg1 userInfo:(id)arg2;
- (id)getWeilaSeiSettingWithRadio:(id)arg1 userInfo:(id)arg2;
- (void)setSubVideoPos:(double)arg1 y:(double)arg2 width:(double)arg3 height:(double)arg4 margin:(double)arg5;
- (_Bool)kickRemoteWithUserId:(id)arg1;
- (void)setAcceptRemoteUserId:(id)arg1 position:(struct CGRect)arg2;
- (void)destroyConference;
- (void)releaseConference;
- (void)startPublisherFailed;
- (void)startPublisherFailedServerEmpty;
- (void)setupConferenceWriter;
- (void)onMPlayerStoppedWithUserId:(unsigned long long)arg1 reason:(int)arg2;
- (void)onVideoFrameCallbackWithUserId:(unsigned long long)arg1 frame:(CDStruct_f083e419 *)arg2;
- (void)onStartRenderCallBackWithRemoteId:(unsigned long long)arg1 view:(id)arg2;
- (double)musicDuration;
- (double)musicCurrentPosition;
- (void)resumeMusic;
- (void)pauseMusic;
- (void)stopMusic;
- (void)createMusicPlayerWithUrl:(id)arg1;
- (void)playMusicWithUrl:(id)arg1 loopback:(_Bool)arg2;
- (void)playMusicWithUrl:(id)arg1;
- (void)simpleMusicDecoder:(id)arg1 didError:(id)arg2;
- (void)reportEncoderBitrateAdjust;
- (void)adjustBitrate;
- (unsigned long long)getEncodedVideoBufferDurationInMs;
- (void)sendStartLogInfo;
- (void)encoder:(id)arg1 encodedFrame:(id)arg2;
- (void)appendAudioSeiDataToH264StreamData:(id)arg1;
- (void)processAudioBuffer:(struct opaqueCMSampleBuffer *)arg1;
- (void)stopPublishingWithCompletionCode:(long long)arg1;
- (void)releasePublisher;
- (void)destroySimpleVideoPlayer:(id)arg1 reason:(int)arg2;
- (void)destroySimpleVideoPlayerDict;
- (void)destroySimpleVideoPlayerWithUserId:(unsigned long long)arg1 reason:(int)arg2;
- (void)createSimpleVideoPlayerWithUserId:(unsigned long long)arg1;
- (void)stopPublishing:(long long)arg1;
- (void)renewChannelKey:(id)arg1;
- (int)setConferencePlaybackSpeakerphone:(_Bool)arg1;
- (void)enableSoftAEC:(_Bool)arg1;
- (void)audioEffectManager:(id)arg1 didAudioEffectFinish:(int)arg2;
- (void)audioEffectManager:(id)arg1 didAudioEffectFailed:(int)arg2;
- (void)setSdkAppID:(id)arg1 withChannelKey:(id)arg2;
- (void)setAgoraSdkAppID:(id)arg1 withChannelKey:(id)arg2;
- (void)setClientAsAudience:(_Bool)arg1;
- (void)muteRemoteVideoStream:(unsigned long long)arg1 mute:(_Bool)arg2;
- (void)muteRemoteAudioStream:(unsigned long long)arg1 mute:(_Bool)arg2;
- (void)muteAllRemoteVideo:(_Bool)arg1;
- (void)muteAllRemoteAudio:(_Bool)arg1;
- (void)muteLocalVideo:(_Bool)arg1;
- (void)muteLocalAudio:(_Bool)arg1;
- (id)hostConferenceID;
- (unsigned long long)pushType;
- (void)startPublishingWithPublishPath:(id)arg1 videoBitrate:(unsigned long long)arg2 videoFramerate:(unsigned long long)arg3 audioBitrate:(unsigned long long)arg4 audioSamplerate:(unsigned long long)arg5 statisticReportCount:(long long)arg6 statisticSec:(long long)arg7 logEventEnable:(long long)arg8 userID:(id)arg9 roomID:(id)arg10 provider:(int)arg11 sessionTime:(unsigned long long)arg12 codecType:(long long)arg13 bitrateAdapter:(long long)arg14 adaptiveCachMax:(long long)arg15 adaptiveCachMin:(long long)arg16 confServer:(id)arg17 confSecurityId:(id)arg18 confSessionId:(id)arg19 confUserId:(id)arg20 maxBufferStartTimestampInMs:(unsigned long long)arg21 useHighQualityAudio:(_Bool)arg22;
- (void)startPublishingWithOptions:(id)arg1;
- (void)setPublisherOptions:(id)arg1;
- (id)publisherType;
- (void)setSlavesFrameRatioInVideo:(id)arg1;
- (void)layout:(id)arg1 updateConnectWaitViewsWithRemoteDisplays:(id)arg2;
- (void)layout:(id)arg1 updateSubviewFramesRatio:(id)arg2;
- (void)layout:(id)arg1 updateDisplayFrames:(id)arg2;
- (void)destroyRenderViewsLayout;
- (void)createRenderViewsLayout;
- (void)dealloc;
- (id)initWithContentView:(id)arg1 inputVideoSize:(struct CGSize)arg2 isHost:(_Bool)arg3;
- (int)getGOPDuration;
- (id)getLianmaiDetailData;
- (unsigned long long)writerSentVideoFrameRate;
- (unsigned long long)writerSentVideoBitrate;
- (unsigned long long)writerSentAudioBitrate;
- (unsigned long long)readerRecvVideoDataSize;
- (unsigned long long)readerRecvAudioDataSize;
- (unsigned long long)readerRecvDataSize;
- (long long)roomMode;
- (long long)roomType;
- (unsigned long long)writerCachedDataDuration;
- (unsigned long long)writerMuxDataSize;
- (unsigned long long)writerSentDataSize;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

