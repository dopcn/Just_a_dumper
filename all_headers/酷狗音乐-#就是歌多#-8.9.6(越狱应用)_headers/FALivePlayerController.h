//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "FAAPMDelegate-Protocol.h"

@class FAPlayer, NSDate, NSMutableArray, NSString, NSTimer, UIView;
@protocol FALivePlayerControllerDataSource, FALivePlayerControllerDelegate;

@interface FALivePlayerController : NSObject <FAAPMDelegate>
{
    _Bool _playerLock;
    _Bool _state;
    _Bool _isLiving;
    _Bool _hadUploadStatistics;
    _Bool _isForbidPlayLive;
    _Bool _isBlocking;
    _Bool _isVideoBlocking;
    _Bool _isFistLoadVideoSuc;
    _Bool _hadReportedPullFailed;
    _Bool _isGetLivePath;
    _Bool _isConnectFailed;
    _Bool _isReportedPullFailed;
    _Bool _isTimeout;
    _Bool _isInMiclink;
    _Bool _isDestory;
    _Bool _isHalfLayoutStreamTryFinish;
    float _streamBufferTotalTime;
    id <FALivePlayerControllerDelegate> _delegate;
    id <FALivePlayerControllerDataSource> _dataSource;
    FAPlayer *_player;
    long long _liveUrlIndex;
    NSMutableArray *_liveUrlList;
    long long _reconnectPlayTime;
    NSString *_effectiveLiveUrl;
    UIView *_playView;
    UIView *_playBgView;
    NSDate *_streamBufferBeginTime;
    long long _streamBufferCount;
    long long _streamBufferObviousCount;
    NSDate *_firstLoadTime;
    long long _firstLoadLivePathTime;
    long long _firstLoadDateTime;
    NSMutableArray *_apmVideoAvailableStartTimeMArr;
    NSMutableArray *_apmVideoAvailableEndTimeMArr;
    long long _getInfoStatusTime;
    NSTimer *_countInfoStatusTimer;
    NSTimer *_playerLoadingTimer;
    unsigned long long _playerCurrentLoadingTime;
    unsigned long long _greenLoadingDuration;
    unsigned long long _yellowLoadingDuration;
    unsigned long long _redLoadingDuration;
    unsigned long long _exitLoadingDuration;
    NSTimer *_pullFailedTimer;
    UIView *_miclinkPlayerView;
}

@property(nonatomic) _Bool isHalfLayoutStreamTryFinish; // @synthesize isHalfLayoutStreamTryFinish=_isHalfLayoutStreamTryFinish;
@property(nonatomic) _Bool isDestory; // @synthesize isDestory=_isDestory;
@property(nonatomic) _Bool isInMiclink; // @synthesize isInMiclink=_isInMiclink;
@property(retain, nonatomic) UIView *miclinkPlayerView; // @synthesize miclinkPlayerView=_miclinkPlayerView;
@property(nonatomic) _Bool isTimeout; // @synthesize isTimeout=_isTimeout;
@property(nonatomic) _Bool isReportedPullFailed; // @synthesize isReportedPullFailed=_isReportedPullFailed;
@property(nonatomic) _Bool isConnectFailed; // @synthesize isConnectFailed=_isConnectFailed;
@property(nonatomic) _Bool isGetLivePath; // @synthesize isGetLivePath=_isGetLivePath;
@property(nonatomic) _Bool hadReportedPullFailed; // @synthesize hadReportedPullFailed=_hadReportedPullFailed;
@property(retain, nonatomic) NSTimer *pullFailedTimer; // @synthesize pullFailedTimer=_pullFailedTimer;
@property(nonatomic) unsigned long long exitLoadingDuration; // @synthesize exitLoadingDuration=_exitLoadingDuration;
@property(nonatomic) unsigned long long redLoadingDuration; // @synthesize redLoadingDuration=_redLoadingDuration;
@property(nonatomic) unsigned long long yellowLoadingDuration; // @synthesize yellowLoadingDuration=_yellowLoadingDuration;
@property(nonatomic) unsigned long long greenLoadingDuration; // @synthesize greenLoadingDuration=_greenLoadingDuration;
@property(nonatomic) unsigned long long playerCurrentLoadingTime; // @synthesize playerCurrentLoadingTime=_playerCurrentLoadingTime;
@property(retain, nonatomic) NSTimer *playerLoadingTimer; // @synthesize playerLoadingTimer=_playerLoadingTimer;
@property(retain, nonatomic) NSTimer *countInfoStatusTimer; // @synthesize countInfoStatusTimer=_countInfoStatusTimer;
@property(nonatomic) long long getInfoStatusTime; // @synthesize getInfoStatusTime=_getInfoStatusTime;
@property(retain, nonatomic) NSMutableArray *apmVideoAvailableEndTimeMArr; // @synthesize apmVideoAvailableEndTimeMArr=_apmVideoAvailableEndTimeMArr;
@property(retain, nonatomic) NSMutableArray *apmVideoAvailableStartTimeMArr; // @synthesize apmVideoAvailableStartTimeMArr=_apmVideoAvailableStartTimeMArr;
@property(nonatomic) long long firstLoadDateTime; // @synthesize firstLoadDateTime=_firstLoadDateTime;
@property(nonatomic) long long firstLoadLivePathTime; // @synthesize firstLoadLivePathTime=_firstLoadLivePathTime;
@property(retain, nonatomic) NSDate *firstLoadTime; // @synthesize firstLoadTime=_firstLoadTime;
@property(nonatomic) _Bool isFistLoadVideoSuc; // @synthesize isFistLoadVideoSuc=_isFistLoadVideoSuc;
@property(nonatomic) long long streamBufferObviousCount; // @synthesize streamBufferObviousCount=_streamBufferObviousCount;
@property(nonatomic) long long streamBufferCount; // @synthesize streamBufferCount=_streamBufferCount;
@property(retain, nonatomic) NSDate *streamBufferBeginTime; // @synthesize streamBufferBeginTime=_streamBufferBeginTime;
@property(nonatomic) float streamBufferTotalTime; // @synthesize streamBufferTotalTime=_streamBufferTotalTime;
@property(nonatomic) _Bool isVideoBlocking; // @synthesize isVideoBlocking=_isVideoBlocking;
@property(nonatomic) _Bool isBlocking; // @synthesize isBlocking=_isBlocking;
@property(nonatomic) _Bool isForbidPlayLive; // @synthesize isForbidPlayLive=_isForbidPlayLive;
@property(nonatomic) _Bool hadUploadStatistics; // @synthesize hadUploadStatistics=_hadUploadStatistics;
@property(retain, nonatomic) UIView *playBgView; // @synthesize playBgView=_playBgView;
@property(retain, nonatomic) UIView *playView; // @synthesize playView=_playView;
@property(retain, nonatomic) NSString *effectiveLiveUrl; // @synthesize effectiveLiveUrl=_effectiveLiveUrl;
@property(nonatomic) _Bool isLiving; // @synthesize isLiving=_isLiving;
@property(nonatomic) long long reconnectPlayTime; // @synthesize reconnectPlayTime=_reconnectPlayTime;
@property(retain, nonatomic) NSMutableArray *liveUrlList; // @synthesize liveUrlList=_liveUrlList;
@property(nonatomic) _Bool state; // @synthesize state=_state;
@property(nonatomic) long long liveUrlIndex; // @synthesize liveUrlIndex=_liveUrlIndex;
@property(nonatomic) _Bool playerLock; // @synthesize playerLock=_playerLock;
@property(retain, nonatomic) FAPlayer *player; // @synthesize player=_player;
@property(nonatomic) __weak id <FALivePlayerControllerDataSource> dataSource; // @synthesize dataSource=_dataSource;
@property(nonatomic) __weak id <FALivePlayerControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)tryGetOtherLayoutStream:(CDUnknownBlockType)arg1 fail:(CDUnknownBlockType)arg2;
- (int)getSingScore;
- (_Bool)checkCurrentHeadsetStatus;
- (float)currentPlayingTime;
- (_Bool)isPlayingExtendAudioTrackEnabled;
- (void)enablePlayingExtendAudioTrack:(_Bool)arg1;
- (int)playingAudioTrackCount;
- (void)actionPullStreamTimer:(id)arg1;
- (void)endPullStreamTimer;
- (void)beginPullStreamTimerWithReason:(_Bool)arg1;
- (void)appDidEnterBg:(id)arg1;
- (void)reportLivePullFailed:(int)arg1 tab:(int)arg2 state:(int)arg3 livePath:(id)arg4;
- (void)beginEnterRoom;
- (void)dealExitRemindStatusWhenGetInfo;
- (void)dealCountGetInfoStatus;
- (void)dealEnterRemindStatusWhenGetInfo;
- (id)getAPMTypeMFXMobileLiveVideoAvailableRateInfo;
- (id)getAPMTypeLiveVideoBufferFeelRateInfo;
- (id)getAPMTypeMFXMobileLiveVideoBufferRateInfo;
- (void)playerStuckReportWithInfo:(id)arg1;
- (void)destroy;
- (void)buildMiclinkPlayerIfNeededWithSignKey:(id)arg1 appId:(long long)arg2;
- (void)rebuildPlayerViewIfNeed;
- (_Bool)getPlayerIsLiving;
- (void)allowLivePlay;
- (void)forbidLivePlay;
- (_Bool)isAllowLivePlay;
- (void)dealRetryPlay;
- (void)stopPlayer;
- (void)removeVideoManager;
- (void)addVideoManager;
- (void)showPlayerInView:(id)arg1 frame:(struct CGRect)arg2;
- (void)setPlayerIsLiving:(_Bool)arg1;
- (void)setPlayLiveList:(id)arg1;
- (void)setIsActive:(_Bool)arg1;
- (void)dealHaveNotLive;
- (void)dealPlayChangeStateMsgType:(long long)arg1 error:(long long)arg2 para:(int)arg3;
- (void)dismissLiveTipRetry;
- (void)dismissStatus;
- (void)setErrorTip:(id)arg1;
- (void)setLoadingTip:(id)arg1 withImage:(id)arg2;
- (void)endLoadingTimerWithIsRptAPM:(_Bool)arg1;
- (void)endLoadingTimer;
- (void)loadingTimerAction:(id)arg1;
- (void)beginLoadingTimer:(id)arg1;
- (void)setupLoadingConfig;
- (void)playChangeStateMsgType:(long long)arg1 error:(long long)arg2 para:(int)arg3;
- (void)saveEffectiveUrl;
- (void)playerDealEndInterupt;
- (void)stopPlayCurrentSong;
- (void)playSongWithPath:(id)arg1 playTimeRange:(struct CGPoint)arg2;
- (void)playWithPauseState;
- (void)playNextUrl;
- (void)reconnectPlay;
- (void)retryPlay;
- (struct CGRect)getPlayerViewFrame;
- (void)playMiclinkLiveWithChannelId:(id)arg1 publishStream:(id)arg2 cameraEnable:(_Bool)arg3 signKey:(id)arg4 appId:(long long)arg5;
- (void)setMiclinkCustomAppID:(unsigned int)arg1 sign:(id)arg2;
- (void)playerPlayWithUrl:(id)arg1;
- (void)startPlay;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

