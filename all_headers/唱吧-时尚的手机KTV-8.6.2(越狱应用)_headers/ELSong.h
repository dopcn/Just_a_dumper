//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "ELBaseModel.h"

@class NSString;

@interface ELSong : ELBaseModel
{
    _Bool _hasHighQuality;
    _Bool _isHighQuality;
    _Bool _scoreEnabled;
    _Bool _invalid;
    _Bool _isLocal;
    _Bool _isBGM;
    _Bool _isFrequent;
    _Bool _needHiddenPhoto;
    NSString *_artist;
    double _hotValue;
    NSString *_mel;
    NSString *_melp;
    NSString *_mp3;
    NSString *_music;
    NSString *_name;
    NSString *_pinyin;
    NSString *_recommend;
    long long _scoreCount;
    long long _count;
    long long _singCount;
    NSString *_size;
    long long _songID;
    NSString *_tag;
    NSString *_uploader;
    NSString *_uploaderName;
    NSString *_uploadPhotoURLString;
    NSString *_zbd;
    NSString *_zrc;
    NSString *_icon;
    NSString *_original_mp3;
    double _accompanyMax;
    NSString *_singTime;
    NSString *_type;
    NSString *_songIcon;
}

+ (id)invalidJSONTransformer;
+ (id)singCountJSONTransformer;
+ (id)countJSONTransformer;
+ (id)scoreCountJSONTransformer;
+ (id)songIDJSONTransformer;
+ (id)JSONKeyPathsByPropertyKey;
+ (void)songGiftInfoWithCompletion:(CDUnknownBlockType)arg1;
+ (void)orderSongStatistic:(long long)arg1;
+ (void)anchorSingReceivedSong:(id)arg1 sessionID:(id)arg2;
+ (void)audienceOrderedSong:(id)arg1;
+ (void)anchorOrderedSong:(id)arg1;
+ (void)getBGMSongListWithBGMType:(long long)arg1 start:(long long)arg2 count:(long long)arg3 completion:(CDUnknownBlockType)arg4;
+ (void)getReceivedSongListWithSessionId:(id)arg1 completion:(CDUnknownBlockType)arg2;
+ (void)getSongListByArtist:(id)arg1 userId:(id)arg2 start:(long long)arg3 count:(long long)arg4 completion:(CDUnknownBlockType)arg5;
+ (void)searchSongsByKeyword:(id)arg1 start:(long long)arg2 num:(long long)arg3 completion:(CDUnknownBlockType)arg4;
+ (void)getFrequentSongListWithUserID:(id)arg1 completion:(CDUnknownBlockType)arg2;
+ (void)getRecommendedSongListWithUserId:(id)arg1 start:(long long)arg2 count:(long long)arg3 completion:(CDUnknownBlockType)arg4;
+ (void)getArtistsListWithTag:(id)arg1 completion:(CDUnknownBlockType)arg2;
+ (void)getArtistCategoryWithCompletion:(CDUnknownBlockType)arg1;
@property(copy, nonatomic) NSString *songIcon; // @synthesize songIcon=_songIcon;
@property(nonatomic) _Bool needHiddenPhoto; // @synthesize needHiddenPhoto=_needHiddenPhoto;
@property(nonatomic) _Bool isFrequent; // @synthesize isFrequent=_isFrequent;
@property(copy, nonatomic) NSString *type; // @synthesize type=_type;
@property(nonatomic) _Bool isBGM; // @synthesize isBGM=_isBGM;
@property(nonatomic) _Bool isLocal; // @synthesize isLocal=_isLocal;
@property(retain, nonatomic) NSString *singTime; // @synthesize singTime=_singTime;
@property(nonatomic) _Bool invalid; // @synthesize invalid=_invalid;
@property(nonatomic) double accompanyMax; // @synthesize accompanyMax=_accompanyMax;
@property(retain, nonatomic) NSString *original_mp3; // @synthesize original_mp3=_original_mp3;
@property(retain, nonatomic) NSString *icon; // @synthesize icon=_icon;
@property(retain, nonatomic) NSString *zrc; // @synthesize zrc=_zrc;
@property(retain, nonatomic) NSString *zbd; // @synthesize zbd=_zbd;
@property(retain, nonatomic) NSString *uploadPhotoURLString; // @synthesize uploadPhotoURLString=_uploadPhotoURLString;
@property(retain, nonatomic) NSString *uploaderName; // @synthesize uploaderName=_uploaderName;
@property(retain, nonatomic) NSString *uploader; // @synthesize uploader=_uploader;
@property(retain, nonatomic) NSString *tag; // @synthesize tag=_tag;
@property(nonatomic) long long songID; // @synthesize songID=_songID;
@property(retain, nonatomic) NSString *size; // @synthesize size=_size;
@property(nonatomic) long long singCount; // @synthesize singCount=_singCount;
@property(nonatomic) _Bool scoreEnabled; // @synthesize scoreEnabled=_scoreEnabled;
@property(nonatomic) long long count; // @synthesize count=_count;
@property(nonatomic) long long scoreCount; // @synthesize scoreCount=_scoreCount;
@property(retain, nonatomic) NSString *recommend; // @synthesize recommend=_recommend;
@property(retain, nonatomic) NSString *pinyin; // @synthesize pinyin=_pinyin;
@property(retain, nonatomic) NSString *name; // @synthesize name=_name;
@property(retain, nonatomic) NSString *music; // @synthesize music=_music;
@property(retain, nonatomic) NSString *mp3; // @synthesize mp3=_mp3;
@property(retain, nonatomic) NSString *melp; // @synthesize melp=_melp;
@property(retain, nonatomic) NSString *mel; // @synthesize mel=_mel;
@property(nonatomic) _Bool isHighQuality; // @synthesize isHighQuality=_isHighQuality;
@property(nonatomic) double hotValue; // @synthesize hotValue=_hotValue;
@property(nonatomic) _Bool hasHighQuality; // @synthesize hasHighQuality=_hasHighQuality;
@property(retain, nonatomic) NSString *artist; // @synthesize artist=_artist;
- (void).cxx_destruct;
- (id)songIconUrl;
- (id)zrceURLString;
- (_Bool)hasMelp;
- (_Bool)hasMel;
- (_Bool)hasLyrics;

@end

