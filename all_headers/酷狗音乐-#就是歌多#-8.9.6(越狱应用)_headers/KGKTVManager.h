//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "KGCorePlayerManager.h"

@class NSObject;
@protocol OS_dispatch_queue, RecordManagerDelegate;

@interface KGKTVManager : KGCorePlayerManager
{
    struct MergerListener *_mergerListener;
    _Bool _isBackground;
    _Bool _isRecord;
    _Bool _hasSendNotify;
    struct AudioEffect *reverbEffect;
    struct AudioEffect *reverbThird;
    struct AudioEffect *_reverbEarBackEffect;
    struct AudioEffect *p_eqEffect;
    struct AudioEffect *eqThirdEffect;
    struct AudioEffect *eqEarBackEffect;
    struct AudioEffect *p_reverbEffect;
    struct SoundTouchEffect *_transposerEffect;
    struct SoundTouchEffect *transposerVocalEffect;
    struct SoundTouchEffect *p_transposer_vocalEffect;
    struct SoundTouchEffect *p_transposerEffect;
    struct SoundTouchEffect *p_transposerThirdEffect;
    struct AudioEffect *p_Acappella;
    struct AudioEffect *p_AcappellaThird;
    struct AudioEffect *p_Shift;
    struct AudioEffect *p_ShiftThird;
    struct AudioEffect *p_Electric;
    struct AudioEffect *p_ElectricThird;
    struct AudioEffect *p_Stage;
    struct AudioEffect *p_denoiser;
    struct MergerSegment *_segment;
    int mRecordContextType;
    _Bool _isInterupted;
    _Bool isRecording;
    struct Merger *_merger;
    _Bool _isConverting;
    _Bool _isExtendTrack;
    CDUnknownBlockType playMessageHandleBlock;
    CDUnknownBlockType playMessageHandleBlock2;
    CDUnknownBlockType newPlayerMessageHandleBlock;
    CDUnknownBlockType recordMessageHandleBlock;
    CDUnknownBlockType mergeSegmentMessageHandleBlock;
    _Bool _renderLoop;
    NSObject<OS_dispatch_queue> *renderQueue;
    struct _opaque_pthread_t *_renderThreadId;
    _Bool isPartRecordStop;
    _Bool _mobile_live;
    _Bool _justAudio;
    _Bool _isRepeat;
    _Bool _willAutoPlay;
    _Bool _isPlayingRecord;
    int _ctrtype;
    float _playVolume;
    float _recordVolume;
    float _convertCurrentTime;
    float _convertDuration;
    id <RecordManagerDelegate> _delegate;
    long long _recordStatus;
    long long _sourceType;
}

+ (_Bool)isHeadphone;
+ (void)resumeAllButffers:(id)arg1;
+ (void)stopAllBuffers;
+ (void)resumeAllButffers:(id)arg1;
+ (void)stopAllBuffers;
@property _Bool renderLoop; // @synthesize renderLoop=_renderLoop;
@property(nonatomic) long long sourceType; // @synthesize sourceType=_sourceType;
@property(nonatomic) _Bool isPlayingRecord; // @synthesize isPlayingRecord=_isPlayingRecord;
@property(nonatomic) _Bool willAutoPlay; // @synthesize willAutoPlay=_willAutoPlay;
@property(nonatomic) _Bool isRepeat; // @synthesize isRepeat=_isRepeat;
@property _Bool justAudio; // @synthesize justAudio=_justAudio;
@property(nonatomic) _Bool mobile_live; // @synthesize mobile_live=_mobile_live;
@property(readonly, nonatomic) float convertDuration; // @synthesize convertDuration=_convertDuration;
@property(readonly, nonatomic) float convertCurrentTime; // @synthesize convertCurrentTime=_convertCurrentTime;
@property(nonatomic) float recordVolume; // @synthesize recordVolume=_recordVolume;
@property(nonatomic) float playVolume; // @synthesize playVolume=_playVolume;
@property(nonatomic) int ctrtype; // @synthesize ctrtype=_ctrtype;
@property(nonatomic) long long recordStatus; // @synthesize recordStatus=_recordStatus;
@property(nonatomic) __weak id <RecordManagerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (id)initWithPath:(id)arg1 accompanyPath:(id)arg2 startPosition:(long long)arg3 endPosition:(long long)arg4;
- (id)initWithPath:(id)arg1;
- (void)routeChangedNotifyCallback:(id)arg1;
- (void)interruptionNotifyCallback:(id)arg1;
- (void)appDidBecomeActive:(id)arg1;
- (void)appWillResignActive:(id)arg1;
- (void)unRegisterNotification;
- (void)setupNotification;
- (void)startConvert:(id)arg1 destPath:(id)arg2 accompanyPath:(id)arg3 recordfile:(id)arg4 format:(int)arg5 startPosition:(int)arg6 endPosition:(int)arg7;
- (void)startConvert:(id)arg1 destPath:(id)arg2 accompanyPath:(id)arg3 sourceSound:(id)arg4 format:(int)arg5 startPosition:(long long)arg6 endPosition:(long long)arg7 unSourcePlayStarts:(id)arg8 unSourcePlayends:(id)arg9 startsRecord:(id)arg10 endsRecord:(id)arg11;
- (void)playRecordWithPath:(id)arg1 accompanyPath:(id)arg2 sourceSound:(id)arg3 startPosition:(long long)arg4 endPosition:(long long)arg5 unSourcePlayStarts:(id)arg6 unSourcePlayends:(id)arg7 startsRecord:(id)arg8 endsRecord:(id)arg9;
- (id)initWithPath:(id)arg1 accompanyPath:(id)arg2 sourceSound:(id)arg3 startPosition:(long long)arg4 endPosition:(long long)arg5 unSourcePlayStarts:(id)arg6 unSourcePlayends:(id)arg7 startsRecord:(id)arg8 endsRecord:(id)arg9;
- (void)startConvert:(id)arg1 destPath:(id)arg2 recordfile:(id)arg3 format:(int)arg4;
- (void)setRecordContextType:(int)arg1;
- (void)startRecordWithPath:(id)arg1 formatType:(long long)arg2 accompanyStream:(void *)arg3 sourceSoundStream:(void *)arg4 unSourcePlayStarts:(id)arg5 unSourcePlayends:(id)arg6 startsRecord:(id)arg7 endsRecord:(id)arg8;
- (void)startRecordWithPath:(id)arg1 formatType:(long long)arg2 accomPath:(id)arg3 sourceSoundPath:(id)arg4 unSourcePlayStarts:(id)arg5 unSourcePlayends:(id)arg6 startsRecord:(id)arg7 endsRecord:(id)arg8;
- (void)handleMergeSegmentStatus:(int)arg1 ext1:(int)arg2 ext2:(int)arg3;
- (void)addMergeSegmentStatusHandle:(CDUnknownBlockType)arg1;
- (void)handleRecordStatus:(int)arg1 ext1:(int)arg2 ext2:(int)arg3;
- (_Bool)isHeadsetPluggedIn;
- (void)addRecordStatusHandle:(CDUnknownBlockType)arg1;
- (void)handlePlayStatus2:(int)arg1 ext1:(int)arg2 ext2:(int)arg3 extra:(const char *)arg4 extraLength:(int)arg5;
- (void)handlePlayStatus:(int)arg1 ext1:(int)arg2 ext2:(int)arg3;
- (void)addNewPlayerStatusHandle:(CDUnknownBlockType)arg1;
- (void)addPlayerStatusHandle2:(CDUnknownBlockType)arg1;
- (void)addPlayerStatusHandle:(CDUnknownBlockType)arg1;
- (void)playAudioLiveWithPath:(id)arg1;
- (void)playLiveWithPath:(id)arg1;
- (void)playFMWithPath:(id)arg1;
- (void)playPraSingWithStream:(void *)arg1 start:(long long)arg2 end:(long long)arg3;
- (void)playPraSingWithPath:(id)arg1;
- (_Bool)isAccPlaying;
- (_Bool)isPlaying;
- (void)resume;
- (void)setUpAudioSession:(id)arg1;
- (void)playWithPath:(id)arg1;
- (void)playRecordWithPath:(id)arg1 accompanyPath:(id)arg2 startPosition:(long long)arg3 endPosition:(long long)arg4;
- (void)playRecordWithPath:(id)arg1 accompanyPath:(id)arg2;
- (void)playRecordWithPath:(id)arg1;
- (void)stopConvert;
- (void)startConvertForBeautifyVoice:(id)arg1 destPath:(id)arg2 format:(int)arg3;
- (void)startConvert:(id)arg1 destPath:(id)arg2 format:(int)arg3;
- (void)stopMerge;
- (void)startConvert:(id)arg1 destPath:(id)arg2 accompanyPath:(id)arg3 format:(int)arg4 startPosition:(int)arg5 endPosition:(int)arg6;
- (void)startConvert:(id)arg1 destPath:(id)arg2 accompanyPath:(id)arg3 format:(int)arg4;
- (int)startMerge:(id)arg1 wholeInfo:(id)arg2 partsInfo:(id)arg3;
- (void)startMerge:(id)arg1 preRecordPath:(id)arg2 mainRecordPath:(id)arg3 accompanyPath:(id)arg4 accStartMs:(int)arg5 accEndMs:(int)arg6;
- (_Bool)isPartRecordStop;
@property(nonatomic) _Bool isRecording;
- (void)setnoscore;
- (void)setscoreplay;
- (int)getStage;
- (int)getScore;
- (void)createScoreWithIngroup:(unsigned int *)arg1 length:(int)arg2;
- (void)setRecordVolumeRate:(float)arg1 playrate:(float)arg2;
- (void)setLowDevice;
- (void)setStageEnabled:(_Bool)arg1;
- (void)setStageIngroup:(id)arg1;
- (void)initGetScore:(id)arg1;
- (void)setElectricEnabled:(_Bool)arg1;
- (void)setAccapellaEnable:(_Bool)arg1;
- (void)setShiftEffect:(long long)arg1;
- (_Bool)extraAudioEffectEnabled;
- (void)setMixPitchSemiTones:(int)arg1;
- (float)getVolumeCoff;
- (void)destroy;
- (void)setPlayVolumeForMixer:(int)arg1;
- (void)setVolume:(float)arg1 andTrackIndex:(int)arg2;
- (void)setEQGainAndFc:(int)arg1;
- (void)setVocalPitchSemiTones:(int)arg1;
- (void)setOriginEffect;
- (void)setFunnySoundEffect:(int)arg1;
- (void)setThirdElectricEnabled:(_Bool)arg1;
- (void)setThirdAccapellaEnable:(_Bool)arg1;
- (void)setThirdShiftEffect:(long long)arg1;
- (void)setThirdOriginEffect;
- (void)setThirdEQGainAndFc:(int)arg1;
- (void)setThirdPitchSemiTones:(int)arg1;
- (void)setThirdEffectType:(long long)arg1;
- (void)setAudioEffectType:(long long)arg1;
- (void)setThirdAudioReverb:(long long)arg1;
- (void)setAudioReverb:(long long)arg1;
- (void)setThirdVoiceReverbCustomParam:(long long)arg1 ldry:(int)arg2 lwet:(int)arg3 ldelay:(int)arg4;
- (void)setVoiceReverbCustomParam:(long long)arg1 ldry:(int)arg2 lwet:(int)arg3 ldelay:(int)arg4;
- (void)setPitchSemiTones:(int)arg1;
- (void)setPlayPitch:(int)arg1;
- (void)setThirdPitch:(int)arg1;
- (void)createPlayEffect;
- (void)createASoundEffect;
- (void)addRecordAudioEffect:(struct AudioEffect *)arg1 trackIndex:(int)arg2;
- (void)creatEffects;
- (_Bool)isPauseRecord;
- (_Bool)isStop;
- (void)enableAccompanyExtendAudioTrack:(_Bool)arg1;
- (void)removelistener;
- (void)setHeadMode:(_Bool)arg1;
- (int)audioTrackCount;
- (void)setVolumeRatio:(double)arg1;
- (double)getVolumeRatio;
- (float)getPlayVolumeRate;
- (float)getRecordVolumeRate;
- (float)Recordposition;
- (long long)Recordduration;
- (void)interRuptStop;
- (unsigned long long)getPlayerStatus;
- (unsigned long long)getStatus;
- (void)stopRecord;
- (void)startRecord;
- (void)partRecordStop;
- (void)partRecordStartWithPath:(id)arg1 formatType:(long long)arg2 startPosition:(int)arg3 endPosition:(int)arg4;
- (void)setSmartAccompany:(_Bool)arg1;
- (void)setVoiceMoveStep:(int)arg1 track:(int)arg2;
- (void)setEarBack:(_Bool)arg1;
- (void)setEarBackVolume:(float)arg1;
- (void)playEffectFile:(id)arg1;
- (long long)accDuration;
- (long long)accPosition;
- (void)stopAccPlay;
- (void)resumeAccPlay;
- (void)puaseAccPlay;
- (void)startAccPlay;
- (void)prepareAccAsyncPlay;
- (void)setDataSourceForRecordWithStream:(void *)arg1 startMs:(long long)arg2 endMs:(long long)arg3;
- (void)sendMetaDataForRtmp:(id)arg1;
- (void)startRecordWithPath:(id)arg1 formatType:(long long)arg2 accompanyStream:(void *)arg3 startMs:(long long)arg4 endMs:(long long)arg5;
- (void)startRecordWithPath:(id)arg1 formatType:(long long)arg2 accompanyStream:(void *)arg3;
- (void)startRecordWithPath:(id)arg1 formatType:(long long)arg2 accompanyPath:(id)arg3 startMs:(long long)arg4 endMs:(long long)arg5;
- (void)startRecordWithPath:(id)arg1 formatType:(long long)arg2 accomPath:(id)arg3;
- (void)startRecordWithPath:(id)arg1 formatType:(long long)arg2;
- (const char *)MyUTF8String:(id)arg1;
- (void)stopTranscode;
- (void)transcodeFromSource:(id)arg1 toDest:(id)arg2 completionHandle:(CDUnknownBlockType)arg3;
- (_Bool)lowdevice;
- (void)recordMessageChange:(long long)arg1 extOne:(int)arg2 extTwo:(int)arg3 extra:(const char *)arg4 extraLength:(int)arg5;
- (void)playerMessageChange:(unsigned long long)arg1 extOne:(int)arg2 extTwo:(int)arg3 extra:(const char *)arg4 extraLength:(int)arg5 userInfo:(id)arg6;
- (id)init;
- (void)dealloc;
- (double)rtmpAccompanyPosition;
- (void)writeAudioLiveMessage:(id)arg1;
- (void)startrecordAudioStreamWithPath:(id)arg1;
- (void)setAudioPipe:(void *)arg1;
- (void)setLivingAudioEffect;
- (void)setAudioLiveRecordVolume:(int)arg1;
- (int)getAudioLiveAccompanyTrackCount;
- (_Bool)isAudioLiveAccompanyExtendAudioTrackEnabled;
- (void)enableAudioLiveAccompanyExtendAudioTrack:(_Bool)arg1;
- (void)setAudioLiveAccompanyAudioPipe:(void *)arg1;
- (void)zegoRecordCallback:(char *)arg1 andSize:(int)arg2 andSamplerate:(int)arg3 andChannels:(int)arg4;
- (void)playAudioLiveAccompanyWithStream:(void *)arg1 start:(long long)arg2 end:(long long)arg3;
- (void)startRecordByZEGOwithSamplerate:(int)arg1 andChannels:(int)arg2;

@end

