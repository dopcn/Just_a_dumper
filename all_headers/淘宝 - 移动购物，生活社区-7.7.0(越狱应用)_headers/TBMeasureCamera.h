//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

#import "AVCaptureVideoDataOutputSampleBufferDelegate-Protocol.h"

@class AVCaptureDevice, AVCaptureDeviceInput, AVCaptureSession, AVCaptureVideoDataOutput, AVCaptureVideoPreviewLayer, NSString, UITapGestureRecognizer, UIView;
@protocol OS_dispatch_queue;

@interface TBMeasureCamera : NSObject <AVCaptureVideoDataOutputSampleBufferDelegate>
{
    _Bool _isTakePicture;
    _Bool _initSuccess;
    _Bool _cameraRunning;
    CDUnknownBlockType _imageOutputCallback;
    CDUnknownBlockType _failureCallback;
    CDUnknownBlockType _focusBlock;
    CDUnknownBlockType _successBlock;
    unsigned long long _type;
    long long _frameNum;
    AVCaptureDeviceInput *_deviceInput;
    AVCaptureVideoDataOutput *_deviceOutput;
    AVCaptureSession *_session;
    AVCaptureDevice *_device;
    AVCaptureVideoPreviewLayer *_videoPreviewLayer;
    UIView *_cameraView;
    UITapGestureRecognizer *_tapGesture;
    NSObject<OS_dispatch_queue> *_measureQueue;
    NSObject<OS_dispatch_queue> *_sessionQueue;
}

@property(nonatomic) _Bool cameraRunning; // @synthesize cameraRunning=_cameraRunning;
@property(nonatomic) _Bool initSuccess; // @synthesize initSuccess=_initSuccess;
@property(nonatomic) _Bool isTakePicture; // @synthesize isTakePicture=_isTakePicture;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *sessionQueue; // @synthesize sessionQueue=_sessionQueue;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *measureQueue; // @synthesize measureQueue=_measureQueue;
@property(retain, nonatomic) UITapGestureRecognizer *tapGesture; // @synthesize tapGesture=_tapGesture;
@property(nonatomic) __weak UIView *cameraView; // @synthesize cameraView=_cameraView;
@property(retain, nonatomic) AVCaptureVideoPreviewLayer *videoPreviewLayer; // @synthesize videoPreviewLayer=_videoPreviewLayer;
@property(retain, nonatomic) AVCaptureDevice *device; // @synthesize device=_device;
@property(retain, nonatomic) AVCaptureSession *session; // @synthesize session=_session;
@property(retain, nonatomic) AVCaptureVideoDataOutput *deviceOutput; // @synthesize deviceOutput=_deviceOutput;
@property(retain, nonatomic) AVCaptureDeviceInput *deviceInput; // @synthesize deviceInput=_deviceInput;
@property(nonatomic) long long frameNum; // @synthesize frameNum=_frameNum;
@property(nonatomic) unsigned long long type; // @synthesize type=_type;
@property(copy, nonatomic) CDUnknownBlockType successBlock; // @synthesize successBlock=_successBlock;
@property(copy, nonatomic) CDUnknownBlockType focusBlock; // @synthesize focusBlock=_focusBlock;
@property(copy, nonatomic) CDUnknownBlockType failureCallback; // @synthesize failureCallback=_failureCallback;
@property(copy, nonatomic) CDUnknownBlockType imageOutputCallback; // @synthesize imageOutputCallback=_imageOutputCallback;
- (void).cxx_destruct;
- (void)setupPreviewLayer;
- (id)createError:(unsigned long long)arg1;
- (_Bool)checkIfAuthorization;
- (id)normalizedImage:(id)arg1;
- (id)imageFromSampleBuffer:(struct opaqueCMSampleBuffer **)arg1;
- (void)captureOutput:(id)arg1 didOutputSampleBuffer:(struct opaqueCMSampleBuffer *)arg2 fromConnection:(id)arg3;
- (void)removeObservers;
- (void)addObservers;
- (void)focusWithMode:(long long)arg1 exposeWithMode:(long long)arg2 atDevicePoint:(struct CGPoint)arg3 monitorSubjectAreaChange:(_Bool)arg4;
- (void)subjectAreaDidChange:(id)arg1;
- (void)continuousFocusAtPoint:(struct CGPoint)arg1;
- (void)focusAtPoint:(struct CGPoint)arg1;
- (void)tapToFocus:(id)arg1;
- (_Bool)destroy;
- (_Bool)setup;
- (void)takePicture;
- (void)stopCamera;
- (void)startCamera;
- (void)embedCameraLayerTo:(id)arg1;
- (id)initWithType:(unsigned long long)arg1;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

