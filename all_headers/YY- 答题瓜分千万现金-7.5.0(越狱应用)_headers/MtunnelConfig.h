//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

@class NSArray, NSString;

@interface MtunnelConfig : NSObject
{
    _Bool useWSG_;
    long long protocol_;
    long long compressionType_;
    long long compressBody_;
    long long httpReadTimeout_;
    long long wspInitWindow_;
    _Bool isBypassRemoteProxy_;
    _Bool forceGzip_;
    _Bool useAsyncTranscoding_;
    _Bool useAsyncDnsResolver_;
    _Bool useUdp_;
    NSString *proxyHost_;
    long long proxyPort_;
    NSArray *filteredHostNames_;
    NSArray *filteredHttpHeaders_;
    NSArray *customHttpHeaders_;
    NSString *imei_;
    NSString *appName_;
    NSString *accessLogPath_;
    NSString *filteredUrlRegex_;
    NSString *allowedUrlRegex_;
    NSString *specialTunnelRegex_;
    long long debugLogSeverityLevel_;
    NSString *debugLogPath_;
    NSString *authKey_;
    long long doWebHtmlAction_;
    long long udpDestPort_;
    NSString *udpDestAddr_;
    long long useTmHost_;
    long long recvTimeOut_;
    long long bypassGzip_;
    NSArray *tcpIgnoredPorts_;
    NSArray *udpIgnoredPorts_;
    long long udpDataInterval_;
    NSArray *udpIngoredPorts_;
    NSArray *tcpIngoredPorts_;
}

@property(nonatomic) long long udpDataInterval; // @synthesize udpDataInterval=udpDataInterval_;
@property(retain, nonatomic) NSArray *tcpIngoredPorts; // @synthesize tcpIngoredPorts=tcpIngoredPorts_;
@property(retain, nonatomic) NSArray *udpIngoredPorts; // @synthesize udpIngoredPorts=udpIngoredPorts_;
@property(nonatomic) long long bypassGzip; // @synthesize bypassGzip=bypassGzip_;
@property(nonatomic) long long recvTimeOut; // @synthesize recvTimeOut=recvTimeOut_;
@property(nonatomic) long long useTmHost; // @synthesize useTmHost=useTmHost_;
@property(copy, nonatomic) NSString *udpDestAddr; // @synthesize udpDestAddr=udpDestAddr_;
@property(nonatomic) long long udpDestPort; // @synthesize udpDestPort=udpDestPort_;
@property(nonatomic) long long doWebHtmlAction; // @synthesize doWebHtmlAction=doWebHtmlAction_;
@property(copy, nonatomic) NSString *authKey; // @synthesize authKey=authKey_;
@property(copy, nonatomic) NSString *debugLogPath; // @synthesize debugLogPath=debugLogPath_;
@property(nonatomic) long long debugLogSeverityLevel; // @synthesize debugLogSeverityLevel=debugLogSeverityLevel_;
@property(retain, nonatomic) NSArray *filteredHttpHeaders; // @synthesize filteredHttpHeaders=filteredHttpHeaders_;
@property(copy, nonatomic) NSString *specialTunnelRegex; // @synthesize specialTunnelRegex=specialTunnelRegex_;
@property(copy, nonatomic) NSString *allowedUrlRegex; // @synthesize allowedUrlRegex=allowedUrlRegex_;
@property(copy, nonatomic) NSString *filteredUrlRegex; // @synthesize filteredUrlRegex=filteredUrlRegex_;
@property(copy, nonatomic) NSString *accessLogPath; // @synthesize accessLogPath=accessLogPath_;
@property(retain, nonatomic) NSArray *customHttpHeaders; // @synthesize customHttpHeaders=customHttpHeaders_;
@property(copy, nonatomic) NSString *appName; // @synthesize appName=appName_;
@property(copy, nonatomic) NSString *imei; // @synthesize imei=imei_;
@property(retain, nonatomic) NSArray *filteredHostNames; // @synthesize filteredHostNames=filteredHostNames_;
@property(nonatomic) long long proxyPort; // @synthesize proxyPort=proxyPort_;
@property(copy, nonatomic) NSString *proxyHost; // @synthesize proxyHost=proxyHost_;
@property(nonatomic) _Bool useUdp; // @synthesize useUdp=useUdp_;
@property(nonatomic) _Bool useAsyncDnsResolver; // @synthesize useAsyncDnsResolver=useAsyncDnsResolver_;
@property(nonatomic) _Bool useAsyncTranscoding; // @synthesize useAsyncTranscoding=useAsyncTranscoding_;
@property(nonatomic) _Bool forceGzip; // @synthesize forceGzip=forceGzip_;
@property(nonatomic) _Bool isBypassRemoteProxy; // @synthesize isBypassRemoteProxy=isBypassRemoteProxy_;
@property(nonatomic) long long wspInitWindow; // @synthesize wspInitWindow=wspInitWindow_;
@property(nonatomic) long long httpReadTimeout; // @synthesize httpReadTimeout=httpReadTimeout_;
@property(nonatomic) long long compressBody; // @synthesize compressBody=compressBody_;
@property(nonatomic) long long compressionType; // @synthesize compressionType=compressionType_;
@property(nonatomic) long long protocol; // @synthesize protocol=protocol_;
@property(nonatomic) _Bool useWSG; // @synthesize useWSG=useWSG_;
- (void).cxx_destruct;

@end

