//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class NSArray, NSString, WDSCustomLogNetworkManager, WDSCustomLogger, WDSObjectBalanceLogger;
@protocol OS_dispatch_queue;

@interface WDSCustomLogsManager : NSObject
{
    WDSObjectBalanceLogger *_objectBalance;
    WDSCustomLogger *_customLogger;
    NSObject<OS_dispatch_queue> *_syncQueue;
    NSObject<OS_dispatch_queue> *_logQueue;
    NSString *_baseFilePath;
    NSString *_uploadEFilePath;
    WDSCustomLogNetworkManager *_networkMgr;
    NSArray *_filters;
}

+ (id)sharedInstance;
@property(retain, nonatomic) NSArray *filters; // @synthesize filters=_filters;
@property(retain, nonatomic) WDSCustomLogNetworkManager *networkMgr; // @synthesize networkMgr=_networkMgr;
@property(copy, nonatomic) NSString *uploadEFilePath; // @synthesize uploadEFilePath=_uploadEFilePath;
@property(copy, nonatomic) NSString *baseFilePath; // @synthesize baseFilePath=_baseFilePath;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *logQueue; // @synthesize logQueue=_logQueue;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *syncQueue; // @synthesize syncQueue=_syncQueue;
@property(retain, nonatomic) WDSCustomLogger *customLogger; // @synthesize customLogger=_customLogger;
@property(retain, nonatomic) WDSObjectBalanceLogger *objectBalance; // @synthesize objectBalance=_objectBalance;
- (void).cxx_destruct;
- (void)dimissVCNameLabel:(id)arg1;
- (void)dimissVCNameLabelGes:(id)arg1;
- (void)showViewControllerName;
- (void)showCUIDInView:(id)arg1;
- (id)getTextFieldsFromView:(id)arg1;
- (void)autoEnterAccount;
- (void)longPressAccountView:(id)arg1;
- (void)addLongPressToAccountView;
- (void)preparePressAccount;
- (_Bool)checkIsToday:(double)arg1;
- (void)checkUidsAndSynchronize:(id)arg1 data:(id)arg2;
- (_Bool)hasUploadedWebPTimeLog:(id)arg1;
- (void)removeExpiredFiles;
- (void)cleanELogsData;
- (id)getLogsFilesFromDirectoryPath:(id)arg1;
- (id)getLogsDataFromDirectoryPath:(id)arg1;
- (id)files:(id)arg1;
- (void)checkAndUpload;
- (void)check;
- (long long)countForLog:(id)arg1;
- (long long)countForLog:(id)arg1 event:(id)arg2;
- (void)cleanLog:(id)arg1 event:(id)arg2;
- (void)cleanLogs:(id)arg1;
- (void)log:(id)arg1 event:(id)arg2 onlyUpload:(_Bool)arg3 uploadImmediately:(_Bool)arg4;
- (void)log:(id)arg1 event:(id)arg2 onlyUpload:(_Bool)arg3;
- (void)observeObject:(id)arg1 name:(id)arg2 onlyUpload:(_Bool)arg3;
- (void)initDirectory:(id)arg1;
- (id)init;

@end

