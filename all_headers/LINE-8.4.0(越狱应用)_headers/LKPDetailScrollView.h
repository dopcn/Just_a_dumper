//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <UIKit/UIScrollView.h>

#import "LKPDetailTextViewDelegate-Protocol.h"
#import "LKPPhotoViewDelegate-Protocol.h"
#import "UIScrollViewDelegate-Protocol.h"

@class NSMutableSet, NSString;
@protocol LKPAudioActionDelegate, LKPDetailScrollViewDelegate, LKPDetailTextViewDelegate, LKPFileViewDelegate, LKPTagTextViewDelegate, LKPVideoViewDelegate;

@interface LKPDetailScrollView : UIScrollView <UIScrollViewDelegate, LKPDetailTextViewDelegate, LKPPhotoViewDelegate>
{
    NSMutableSet *mRecycledPages;
    NSMutableSet *mVisiblePages;
    long long firstPageIndex;
    long long mPageIndex;
    long long mPageCount;
    long long mOldPageIndex;
    _Bool shouldAutoDownload;
    _Bool isSwiping;
    id <LKPDetailScrollViewDelegate> mScrollViewDelegate;
    double _topLayoutHeightForNotSupportFullScreenView;
    _Bool _fullScreen;
    _Bool _peekMode;
    id <LKPDetailTextViewDelegate> _textViewDelegate;
    id <LKPVideoViewDelegate> _videoViewDelegate;
    id <LKPAudioActionDelegate> _audioActionDelegate;
    id <LKPFileViewDelegate> _fileViewDelegate;
    id <LKPTagTextViewDelegate> _tagTextViewDelegate;
    double _topLayoutHeight;
}

@property(nonatomic, setter=setPeekMode:) _Bool peekMode; // @synthesize peekMode=_peekMode;
@property(nonatomic, getter=isFullScreen, setter=setFullScreen:) _Bool fullScreen; // @synthesize fullScreen=_fullScreen;
@property(nonatomic) double topLayoutHeight; // @synthesize topLayoutHeight=_topLayoutHeight;
@property(nonatomic) __weak id <LKPTagTextViewDelegate> tagTextViewDelegate; // @synthesize tagTextViewDelegate=_tagTextViewDelegate;
@property(nonatomic) __weak id <LKPFileViewDelegate> fileViewDelegate; // @synthesize fileViewDelegate=_fileViewDelegate;
@property(nonatomic) __weak id <LKPAudioActionDelegate> audioActionDelegate; // @synthesize audioActionDelegate=_audioActionDelegate;
@property(nonatomic) __weak id <LKPVideoViewDelegate> videoViewDelegate; // @synthesize videoViewDelegate=_videoViewDelegate;
@property(nonatomic) __weak id <LKPDetailTextViewDelegate> textViewDelegate; // @synthesize textViewDelegate=_textViewDelegate;
@property(nonatomic) __weak id <LKPDetailScrollViewDelegate> scrollViewDelegate; // @synthesize scrollViewDelegate=mScrollViewDelegate;
@property(readonly, nonatomic) long long pageIndex; // @synthesize pageIndex=mPageIndex;
- (void).cxx_destruct;
- (void)setTagViewMode:(long long)arg1;
- (id)textView;
- (void)textViewWithKeyboardInfo:(id)arg1 show:(_Bool)arg2;
- (void)willHideKeyboard:(id)arg1;
- (void)willShowKeyboard:(id)arg1;
- (_Bool)isChanged;
- (id)revision;
- (id)text;
- (void)editableTextView:(_Bool)arg1;
- (void)hideKeyboard;
- (void)showKeyboard;
- (_Bool)textViewShouldChangeText:(id)arg1 shouldChangeTextInRange:(struct _NSRange)arg2 replacementText:(id)arg3;
- (void)textViewDidChange:(id)arg1;
- (void)textViewDidTapURLLink:(id)arg1;
- (void)textViewDidTapTextView:(id)arg1 recognizer:(id)arg2;
- (void)photoViewClose;
- (void)photoViewReload:(id)arg1;
- (void)photoViewPinchZooming:(id)arg1;
- (void)photoViewDidDoubleTapZoomOut:(id)arg1;
- (void)photoViewDidDoubleTapZoomIn:(id)arg1;
- (void)photoViewDidTap:(id)arg1;
- (void)photoScrollViewDidAvailableDownload:(id)arg1 available:(_Bool)arg2;
- (void)photoScrollViewDidEndScrolling:(id)arg1;
- (void)photoScrollViewDidScroll:(id)arg1;
- (void)scrollToTop;
- (void)scrollViewDidEndDragging:(id)arg1 willDecelerate:(_Bool)arg2;
- (void)scrollViewWillBeginDragging:(id)arg1;
- (void)scrollViewDidEndDecelerating:(id)arg1;
- (void)scrollViewWillEndDragging:(id)arg1 withVelocity:(struct CGPoint)arg2 targetContentOffset:(inout struct CGPoint *)arg3;
- (void)scrollViewDidScroll:(id)arg1;
- (void)resetNotCurrentPages:(_Bool)arg1;
- (void)resetCurrentPage;
- (_Bool)isDisplayingSubViewForIndex:(long long)arg1;
- (id)dequeueRecycledSubView:(long long)arg1;
- (void)sendScreenName:(long long)arg1;
- (void)tilePages;
- (id)getView:(long long)arg1;
- (void)refreshPage:(long long)arg1;
- (id)currentPageView;
- (void)updatePage:(id)arg1 atIndex:(long long)arg2;
- (id)getTags:(id)arg1;
- (id)contentItemObjectForIndex:(long long)arg1;
- (id)createViewForIndex:(long long)arg1;
- (void)updateView:(id)arg1 forIndex:(long long)arg2;
- (void)updateView:(id)arg1 forIndex:(long long)arg2 contentItem:(id)arg3;
- (long long)viewTypeForIndex:(long long)arg1;
- (_Bool)isBottomBarShowing;
- (void)setTopAndBottomLayoutHeight:(id)arg1 topLayoutHeight:(double)arg2 bottomLayoutHeight:(double)arg3;
- (void)resetTopAndBottomConstraint:(id)arg1 rotate:(_Bool)arg2;
- (void)refreshOnlyTags:(id)arg1 tags:(id)arg2;
- (id)getItemID:(id)arg1;
- (long long)getViewType:(id)arg1;
- (void)setIndex:(id)arg1 index:(long long)arg2;
- (long long)getIndex:(id)arg1;
- (void)startAnimation:(id)arg1;
- (void)resetLayout:(id)arg1 rotate:(_Bool)arg2;
- (_Bool)isDownloadAvailable;
- (void)setFullScreen:(id)arg1 fullScreen:(_Bool)arg2;
- (void)layoutPageScrollView:(_Bool)arg1 topHeight:(double)arg2;
- (void)reset:(long long)arg1 totalCount:(long long)arg2;
- (void)removePageAndMove:(long long)arg1 moveIndex:(long long)arg2 totalCount:(long long)arg3;
- (void)refreshContents:(id)arg1;
- (void)refreshTextViewRevision;
- (void)reload:(long long)arg1 totalCount:(long long)arg2;
- (void)closeByDeleted;
- (struct CGRect)frameForPageAtIndex:(long long)arg1;
- (struct CGRect)frameForPagingScrollView;
- (void)moveForPageAtIndex:(long long)arg1;
- (void)moveForPageAtIndex:(long long)arg1 animated:(_Bool)arg2;
- (_Bool)checkTopHeightConstraint:(id)arg1;
- (void)initViews;
- (void)refreshContentSize;
- (void)configureSubView:(id)arg1 forIndex:(long long)arg2;
- (id)getAvailableView:(long long)arg1;
- (void)setup;
- (_Bool)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
- (void)layoutSubviews;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1 pageCount:(long long)arg2 pageIndex:(long long)arg3 topHeight:(long long)arg4 delegate:(id)arg5;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

