//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class CBCharacteristic, SShareCarBTCommandQueue, SShareCarBTDiscovery, SShareCarBluetoothInfoModel;

@interface SShareCarBTManager : NSObject
{
    _Bool _isConnecting;
    _Bool _isCommandExcuting;
    long long _state;
    SShareCarBTDiscovery *_discovry;
    CBCharacteristic *_readCharacteristic;
    CBCharacteristic *_writeCharacteristic;
    long long _commandID;
    SShareCarBTCommandQueue *_commandQueue;
    SShareCarBluetoothInfoModel *_bluetoothInfo;
}

+ (id)sharedInstance;
@property(nonatomic) _Bool isCommandExcuting; // @synthesize isCommandExcuting=_isCommandExcuting;
@property(nonatomic) _Bool isConnecting; // @synthesize isConnecting=_isConnecting;
@property(retain, nonatomic) SShareCarBluetoothInfoModel *bluetoothInfo; // @synthesize bluetoothInfo=_bluetoothInfo;
@property(retain, nonatomic) SShareCarBTCommandQueue *commandQueue; // @synthesize commandQueue=_commandQueue;
@property(nonatomic) long long commandID; // @synthesize commandID=_commandID;
@property(retain, nonatomic) CBCharacteristic *writeCharacteristic; // @synthesize writeCharacteristic=_writeCharacteristic;
@property(retain, nonatomic) CBCharacteristic *readCharacteristic; // @synthesize readCharacteristic=_readCharacteristic;
@property(retain, nonatomic) SShareCarBTDiscovery *discovry; // @synthesize discovry=_discovry;
@property(nonatomic) long long state; // @synthesize state=_state;
- (void).cxx_destruct;
- (_Bool)isDiscovryValidate;
- (id)commandInfoWithType:(long long)arg1;
- (id)errorWithString:(id)arg1;
- (void)handleAuth:(CDUnknownBlockType)arg1;
- (void)handlePripheralDiscovery:(CDUnknownBlockType)arg1;
- (void)handleDidDiscover:(CDUnknownBlockType)arg1;
- (void)observeExcuteCommandCallback:(id)arg1 characteristic:(id)arg2 data:(id)arg3 error:(id)arg4;
- (void)scan:(CDUnknownBlockType)arg1;
- (void)startScan:(CDUnknownBlockType)arg1;
- (void)startProcess:(CDUnknownBlockType)arg1;
- (void)excuteCommandCallback:(id)arg1;
- (void)handleExcueCommand:(id)arg1;
- (void)excuteNextCommandIfNeed;
- (_Bool)isConnected;
- (void)purgeCommandQueueWithError:(id)arg1;
- (long long)enqueueCommandWithCommandType:(long long)arg1 completion:(CDUnknownBlockType)arg2;
- (void)disconnectAll;
- (void)handleStartProgress:(CDUnknownBlockType)arg1;
- (long long)excuteCommandWithType:(long long)arg1 completion:(CDUnknownBlockType)arg2;
- (void)updateBluetoothInfo:(id)arg1;
- (id)init;

@end

