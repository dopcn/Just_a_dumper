//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "ConnectManagerDelegate-Protocol.h"

@class ConnectEngine, DeviceUserModel, HHTimer, NSMutableDictionary, NSString;

@interface ConnectManager : NSObject <ConnectManagerDelegate>
{
    _Bool _hasGroupedWithUser;
    _Bool _isPositiveStop;
    _Bool _isConnectingWaitForGroupInfoStatus;
    ConnectEngine *_connectEngine;
    HHTimer *_inviteToJoinGroupTimer;
    HHTimer *_connectToServerTimer;
    HHTimer *_makeConnectToDeviceUserTimer;
    HHTimer *_heartBeatTimer;
    HHTimer *_connectedUserRefreshTimer;
    DeviceUserModel *_connectingToDeviceUser;
    NSMutableDictionary *_didConnectUsers;
    NSString *_groupOwnerIP;
    unsigned long long _connectingRetryCount;
}

+ (id)sharedInstance;
@property(nonatomic) _Bool isConnectingWaitForGroupInfoStatus; // @synthesize isConnectingWaitForGroupInfoStatus=_isConnectingWaitForGroupInfoStatus;
@property(nonatomic) _Bool isPositiveStop; // @synthesize isPositiveStop=_isPositiveStop;
@property(nonatomic) unsigned long long connectingRetryCount; // @synthesize connectingRetryCount=_connectingRetryCount;
@property(retain, nonatomic) NSString *groupOwnerIP; // @synthesize groupOwnerIP=_groupOwnerIP;
@property(nonatomic) _Bool hasGroupedWithUser; // @synthesize hasGroupedWithUser=_hasGroupedWithUser;
@property(retain, nonatomic) NSMutableDictionary *didConnectUsers; // @synthesize didConnectUsers=_didConnectUsers;
@property(retain, nonatomic) DeviceUserModel *connectingToDeviceUser; // @synthesize connectingToDeviceUser=_connectingToDeviceUser;
@property(retain, nonatomic) HHTimer *connectedUserRefreshTimer; // @synthesize connectedUserRefreshTimer=_connectedUserRefreshTimer;
@property(retain, nonatomic) HHTimer *heartBeatTimer; // @synthesize heartBeatTimer=_heartBeatTimer;
@property(retain, nonatomic) HHTimer *makeConnectToDeviceUserTimer; // @synthesize makeConnectToDeviceUserTimer=_makeConnectToDeviceUserTimer;
@property(retain, nonatomic) HHTimer *connectToServerTimer; // @synthesize connectToServerTimer=_connectToServerTimer;
@property(retain, nonatomic) HHTimer *inviteToJoinGroupTimer; // @synthesize inviteToJoinGroupTimer=_inviteToJoinGroupTimer;
@property(retain, nonatomic) ConnectEngine *connectEngine; // @synthesize connectEngine=_connectEngine;
- (void).cxx_destruct;
- (void)handleNetworkReachabilityChangeNotification:(id)arg1;
- (void)removeNotification;
- (void)setupNotification;
- (void)processChangeTCPSocketPort:(unsigned short)arg1;
- (void)didReceiveResponsePacket:(id)arg1 sequenceID:(unsigned int)arg2 host:(id)arg3;
- (void)didReceiveFileCtrlStatusPacket:(id)arg1 host:(id)arg2;
- (void)didReceiveDeviceControlPacket:(id)arg1 host:(id)arg2;
- (void)didReceiveDeviceStatusPacket:(id)arg1 host:(id)arg2;
- (void)didReceiveHeartBeatPacket:(id)arg1 host:(id)arg2;
- (void)didReceiveGroupInfoPacket:(id)arg1 host:(id)arg2;
- (void)didReceiveFilePacket:(id)arg1 host:(id)arg2;
- (void)didReceiveCommandPacket:(id)arg1 host:(id)arg2;
- (void)didFailConnectToHost:(id)arg1;
- (void)didCloseSocketWithHost:(id)arg1;
- (void)didAcceptNewSocketOnTCPBeforeAppHandShakeWithHost:(id)arg1;
- (void)didConnectOnTCPBeforeAppHandShakeToHost:(id)arg1;
- (void)didAcceptNewSocketWithHost:(id)arg1;
- (void)didConnectToHost:(id)arg1;
- (unsigned long long)fetchConnectType;
- (id)fetchDidConnectDeviceUserFromID:(id)arg1;
- (id)fetchDidConnectDeviceUserFromIP:(id)arg1;
- (id)fetchGroupOwnerIP;
- (id)fetchDidConnectUsers;
- (void)sendFiles:(id)arg1 toDevices:(id)arg2 sessionID:(id)arg3 port:(int)arg4;
- (void)vibrateDeviceUser:(id)arg1;
- (void)kickoutDeviceUser:(id)arg1;
- (void)sendFileCtrlStatusPacket:(id)arg1;
- (void)sendDeviceControlPacket:(id)arg1;
- (void)stopConnectSocket;
- (void)makeConnectWithDeviceUser:(id)arg1;
- (void)resetAllToInitialState;
- (void)resetRelatedStateWithoutStopSocket;
- (void)resetAllToCloseState;
- (void)resetCurrentLayerRelatedStateToClose;
- (void)resetRelatedStateAfterNegativeStop;
- (void)resetRelatedStateAfterPositiveStop;
- (void)resetRelatedStateAfterServerLost;
- (void)resetRelatedStateAfterMakeConnectFail;
- (void)changeRelatedStateAfterDidAcceptSuccess;
- (void)changeRelatedStateAfterConnectSuccess;
- (void)resetRelatedStateAfterConnectFail;
- (void)resetRelatedStateAfterInviteSuccess;
- (void)resetRelatedStateAfterInviteFail;
- (void)resetRelatedStateForMakeConnectToDevice;
- (void)resetRelatedStateForConnectToDevice;
- (void)resetRelatedStateForInviteDeviceToJoin;
- (_Bool)fetchIsWaitForGroupInfoStatus;
- (void)markIsConnectingWaitForGroupInfoStatus:(_Bool)arg1;
- (_Bool)fetchIsPositiveStopConnect;
- (void)markIsPositiveStopConnect:(_Bool)arg1;
- (void)clearConnectingRetryCount;
- (unsigned long long)fetchConnectingRetryCount;
- (void)increaseConnectingRetryCount;
- (void)clearCurrentConnectingToDeviceUser;
- (id)fetchCurrentConnectingToDeviceUser;
- (void)storeCurrentConnectingToDeviceUser:(id)arg1;
- (_Bool)fetchHasGroupedWithInviteUserMark;
- (void)markHasGroupedWithInviteUser:(_Bool)arg1;
- (void)clearDidConnectUsers;
- (void)removeDidConnectUserForHosts:(id)arg1;
- (void)refreshDidConnectUser:(id)arg1 forHost:(id)arg2;
- (void)addDidConnnectUser:(id)arg1 forHost:(id)arg2;
- (void)changeGroupOwnerIP:(id)arg1;
- (void)stopRefreshConnectedUsers;
- (void)startRefreshConnectedUsers;
- (void)refreshConnectedUsers;
- (void)clientRefreshConnectedServer;
- (void)serverRefereshConnectedClients;
- (void)stopConnectedHeartBeat;
- (void)startConnectedHeartBeat;
- (void)stopCheckConnectToServerWithFail:(id)arg1;
- (void)startCheckConnectToServer:(id)arg1;
- (void)stopCheckConnectToServerTimer;
- (void)checkConnectToServer:(id)arg1;
- (void)stopCheckInviteToJoinGroup;
- (void)startCheckInviteToJoinGroup:(id)arg1 timeInterval:(float)arg2;
- (void)checkInviteToJoinGroup:(id)arg1;
- (void)stopTryNextMakeConnect;
- (void)startTryNextMakeConnectWithDeviceUser:(id)arg1 timeInterval:(double)arg2;
- (void)tryNextMakeConnectWithDeviceUser:(id)arg1;
- (void)retryMakeConnectWithDeviceUser:(id)arg1;
- (void)didConnectAndReceiveGroupInfoFromHost:(id)arg1;
- (void)makeConnectWithDeviceUserInternal:(id)arg1;
- (void)connectToDevice:(id)arg1;
- (void)inviteDeviceToJoin:(id)arg1;
- (void)sendGroupFullStatusPacket:(id)arg1;
- (void)sendHeartBeatToConnectedUsers;
- (void)sendGroupInfoPacket;
- (id)buildHeartBeatPacket;
- (id)buildDeviceControlPacket:(id)arg1 event:(int)arg2;
- (id)buildDeviceStatusPacket:(id)arg1 status:(int)arg2;
- (id)buildGroupInfoPacket;
- (id)buildSendFileTCPPacket:(id)arg1 toID:(id)arg2 sessionID:(id)arg3 port:(int)arg4;
- (void)notifyChangeTCPSocketPort:(unsigned short)arg1;
- (void)notifyVibrate:(id)arg1;
- (void)notifyGroupFull:(id)arg1;
- (void)notifyGroupDisband:(id)arg1;
- (void)notifyUserKickout:(id)arg1;
- (void)notifyUsersRemove:(id)arg1;
- (void)notifyUsersAdd:(id)arg1;
- (void)notifyClientDisconnect:(id)arg1;
- (void)notifyServerDisconnect:(id)arg1;
- (void)notifyMakeConnectFail:(id)arg1;
- (void)notifyInviteFail:(id)arg1;
- (void)notifyInviteSuccess:(id)arg1;
- (void)notifyConnectFail:(id)arg1;
- (void)notifyConnectSuccess:(id)arg1;
- (void)wrapRunDispatchBlock:(CDUnknownBlockType)arg1;
- (id)fetchConnectDispatchQueue;
- (void)setupData;
- (void)dealloc;
- (id)init;
- (void)notifyUserKickoutForLog:(id)arg1;
- (void)notifyMakeConnectFailForLog:(id)arg1;
- (void)notifyInviteFailForLog:(id)arg1;
- (void)notifyInviteSuccessForLog:(id)arg1;
- (void)notifyConnectFailForLog:(id)arg1;
- (void)notifyConnectSuccessForLog:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

