//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <UIKit/UIView.h>

@class AVPlayer, NSTimer, NSURL, YKUPlayHelper;
@protocol YKUPlayViewDelegate;

@interface YKUPlayView : UIView
{
    _Bool _autoPlay;
    _Bool _autoPauseAndPlayWhenApplicationActiveStateChanged;
    _Bool _pauseByResignActive;
    _Bool _needAutoPlay;
    _Bool _isPlayingInternal;
    NSURL *_url;
    id <YKUPlayViewDelegate> _delegate;
    double _currentTime;
    double _timeOutInterval;
    AVPlayer *_player;
    id _periodicTimeObserver;
    YKUPlayHelper *_playHelper;
    double _duration;
    NSTimer *_loadTimeOutTimer;
}

+ (Class)layerClass;
@property(nonatomic) _Bool isPlayingInternal; // @synthesize isPlayingInternal=_isPlayingInternal;
@property(retain, nonatomic) NSTimer *loadTimeOutTimer; // @synthesize loadTimeOutTimer=_loadTimeOutTimer;
@property(nonatomic) _Bool needAutoPlay; // @synthesize needAutoPlay=_needAutoPlay;
@property(nonatomic) _Bool pauseByResignActive; // @synthesize pauseByResignActive=_pauseByResignActive;
@property(nonatomic) double duration; // @synthesize duration=_duration;
@property(retain, nonatomic) YKUPlayHelper *playHelper; // @synthesize playHelper=_playHelper;
@property(retain, nonatomic) id periodicTimeObserver; // @synthesize periodicTimeObserver=_periodicTimeObserver;
@property(retain, nonatomic) AVPlayer *player; // @synthesize player=_player;
@property(nonatomic) _Bool autoPauseAndPlayWhenApplicationActiveStateChanged; // @synthesize autoPauseAndPlayWhenApplicationActiveStateChanged=_autoPauseAndPlayWhenApplicationActiveStateChanged;
@property(nonatomic) _Bool autoPlay; // @synthesize autoPlay=_autoPlay;
@property(nonatomic) double timeOutInterval; // @synthesize timeOutInterval=_timeOutInterval;
@property(nonatomic) double currentTime; // @synthesize currentTime=_currentTime;
@property(nonatomic) __weak id <YKUPlayViewDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) NSURL *url; // @synthesize url=_url;
- (void).cxx_destruct;
- (void)stop;
- (void)pause;
- (void)play;
- (void)timeoutIntervalForPlay:(id)arg1;
- (void)startTimeOutTimer;
@property(readonly, nonatomic) _Bool isPlaying;
- (void)syncCurrentTime:(double)arg1;
- (_Bool)playError;
- (void)headsetChanged:(id)arg1;
- (void)playerItemFailedToPlayToEndTime:(id)arg1;
- (void)playerItemDidPlayToEndTime:(id)arg1;
- (void)applicationDidBecomeActive:(id)arg1;
- (void)applicationWillResignActive:(id)arg1;
- (void)addNotifications;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)tearDownPlayer;
- (_Bool)timeControlStatusAviliable;
- (void)prepareToPlayerItemWithURL:(id)arg1;
- (void)setup;
- (id)initWithURL:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithCoder:(id)arg1;
- (void)dealloc;

@end

