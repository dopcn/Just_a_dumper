//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class KFileDownloadView, KWAuthorityManange, KWOATransferManager, KWOnlineTemplateModel, KWProgressView, NSDictionary, NSString, UIActivityIndicatorView, UIViewController;

@interface DocumentFileManager : NSObject
{
    _Bool bCancelSecretBox;
    _Bool isSecretFile;
    NSString *userInputFileSecret;
    NSString *cloudLastOpendFilePath;
    UIActivityIndicatorView *openFileActivityView;
    long long retDispIndex;
    int openFileGotoMark;
    _Bool bFirstEnterDispView;
    _Bool bFirstEnterPresView;
    _Bool _bOpenedPPT;
    _Bool _bOpenFileByCloudPage;
    _Bool _isReadOnlyByFile;
    _Bool _bOpenfileInJoinShare;
    _Bool _isAnimating;
    _Bool _bOpenFileBreaked;
    _Bool _isNewFile;
    _Bool _isSuccessOpenFile;
    _Bool _bMovingInboxFiles;
    int _KWApiStatus;
    KWOnlineTemplateModel *_templateModel;
    NSString *_urlFilePath;
    NSString *_joinShareFilePath;
    NSString *_joinShareFilePwd;
    long long _pageNumber;
    long long _animationNumber;
    KWProgressView *_openFileProgressView;
    long long _openFileProgressOrientation;
    NSString *_joinShareFileName;
    long long _joinShareFileSize;
    KWOATransferManager *_KWApiService;
    long long _openTarget;
    NSString *_userTemplateFilePath;
    KFileDownloadView *_syncProgressView;
    UIViewController *_syncProgressViewCtl;
    NSString *_uploadQingFilePath;
}

+ (id)getFileIcon:(int)arg1;
+ (id)changePathSeperator:(id)arg1;
+ (id)getDocumentFileManager;
+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (id)defaultDocumentFileManager;
@property(retain, nonatomic) NSString *uploadQingFilePath; // @synthesize uploadQingFilePath=_uploadQingFilePath;
@property(retain, nonatomic) UIViewController *syncProgressViewCtl; // @synthesize syncProgressViewCtl=_syncProgressViewCtl;
@property(retain, nonatomic) KFileDownloadView *syncProgressView; // @synthesize syncProgressView=_syncProgressView;
@property(copy, nonatomic) NSString *userTemplateFilePath; // @synthesize userTemplateFilePath=_userTemplateFilePath;
@property(nonatomic) long long openTarget; // @synthesize openTarget=_openTarget;
@property(retain, nonatomic) KWOATransferManager *KWApiService; // @synthesize KWApiService=_KWApiService;
@property(nonatomic, setter=setKWApiStatus:) int KWApiStatus; // @synthesize KWApiStatus=_KWApiStatus;
@property(nonatomic) long long joinShareFileSize; // @synthesize joinShareFileSize=_joinShareFileSize;
@property(retain, nonatomic) NSString *joinShareFileName; // @synthesize joinShareFileName=_joinShareFileName;
@property(nonatomic) _Bool bMovingInboxFiles; // @synthesize bMovingInboxFiles=_bMovingInboxFiles;
@property(nonatomic) long long openFileProgressOrientation; // @synthesize openFileProgressOrientation=_openFileProgressOrientation;
@property(retain, nonatomic) KWProgressView *openFileProgressView; // @synthesize openFileProgressView=_openFileProgressView;
@property(nonatomic) _Bool isSuccessOpenFile; // @synthesize isSuccessOpenFile=_isSuccessOpenFile;
@property(nonatomic) _Bool isNewFile; // @synthesize isNewFile=_isNewFile;
@property(nonatomic) _Bool bOpenFileBreaked; // @synthesize bOpenFileBreaked=_bOpenFileBreaked;
@property(nonatomic) _Bool isAnimating; // @synthesize isAnimating=_isAnimating;
@property(nonatomic) long long animationNumber; // @synthesize animationNumber=_animationNumber;
@property(nonatomic) long long pageNumber; // @synthesize pageNumber=_pageNumber;
@property(retain, nonatomic) NSString *joinShareFilePwd; // @synthesize joinShareFilePwd=_joinShareFilePwd;
@property(retain, nonatomic) NSString *joinShareFilePath; // @synthesize joinShareFilePath=_joinShareFilePath;
@property(nonatomic) _Bool bOpenfileInJoinShare; // @synthesize bOpenfileInJoinShare=_bOpenfileInJoinShare;
@property(nonatomic) _Bool isReadOnlyByFile; // @synthesize isReadOnlyByFile=_isReadOnlyByFile;
@property(retain, nonatomic) NSString *urlFilePath; // @synthesize urlFilePath=_urlFilePath;
@property(nonatomic) _Bool bOpenFileByCloudPage; // @synthesize bOpenFileByCloudPage=_bOpenFileByCloudPage;
@property(retain, nonatomic) KWOnlineTemplateModel *templateModel; // @synthesize templateModel=_templateModel;
@property(nonatomic) _Bool bFirstEnterPresView; // @synthesize bFirstEnterPresView;
@property(nonatomic) _Bool bFirstEnterDispView; // @synthesize bFirstEnterDispView;
@property(nonatomic) int openFileGotoMark; // @synthesize openFileGotoMark;
@property(nonatomic) long long retDispIndex; // @synthesize retDispIndex;
@property(retain, nonatomic) UIActivityIndicatorView *openFileActivityView; // @synthesize openFileActivityView;
@property(retain, nonatomic) NSString *cloudLastOpendFilePath; // @synthesize cloudLastOpendFilePath;
@property(retain, nonatomic) NSString *userInputFileSecret; // @synthesize userInputFileSecret;
@property(nonatomic) _Bool isSecretFile; // @synthesize isSecretFile;
@property(nonatomic) _Bool bCancelSecretBox; // @synthesize bCancelSecretBox;
- (id)directoryFor3rdFile;
- (id)openFileByComKeyForMobEvent:(id)arg1;
- (id)fileTypeForMobEvent:(id)arg1;
- (void)sendTryOpenFileInfoWithFileName:(id)arg1;
- (id)autorelease;
- (oneway void)release;
- (unsigned long long)retainCount;
- (id)retain;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)processCurrentFileQingInfo:(_Bool)arg1;
- (void)openFileProcessQingInfo;
- (void)setInterfaceOrientationForciblyTo:(long long)arg1;
- (_Bool)isCloudUploadFile:(id)arg1;
- (_Bool)isQingUploadFile:(id)arg1;
- (_Bool)isCloudUploading;
- (void)cancelUpdateIploadView;
- (id)createQingUploadViewForPath:(id)arg1 inViewController:(id)arg2;
- (void)touchCancelUploadQingFile;
- (id)createUpdateUploadView:(id)arg1 modifyTimeStr:(id)arg2 fileSize:(id)arg3 inViewController:(id)arg4;
- (void)boxRemoveFromSuperView:(id)arg1;
- (void)showOpenFileErrorBox:(id)arg1;
- (id)getFileOpendFailedMsg:(int)arg1;
- (_Bool)thumbnailfileIsExisted:(id)arg1;
- (void)deleteThumbnailImageCache:(id)arg1;
- (void)deleteImageFromIndex:(long long)arg1;
- (id)loadSlideImage:(id)arg1;
- (void)saveSlideImage:(id)arg1 image:(id)arg2;
- (_Bool)saveToFilePath:(id)arg1;
- (id)savePngPicture:(id)arg1 saveFilePath:(id)arg2 saveFileName:(id)arg3;
- (_Bool)isSecretFile:(id)arg1;
- (_Bool)renameFileNameOfThumbnail:(long long)arg1 changeIndex:(long long)arg2 count:(long long)arg3 thumbnailFileFormat:(id)arg4;
- (double)getCurrentMilliseconds;
- (id)getCurrentMSecond;
- (id)getMiddleEllipsisStr:(id)arg1 AllowStrLength:(long long)arg2;
- (id)getDuplicateFileName:(id)arg1 destFilePath:(id)arg2;
- (int)filePathByInboxOrCloudfile:(id)arg1;
- (_Bool)isCloudFile:(id)arg1;
- (id)getDriveNameWithFilePath:(id)arg1;
- (long long)getLinesByLabelText:(id)arg1;
- (_Bool)isOpenFileByCloudPage:(int)arg1;
- (_Bool)isFirstOpenCloudFileByPhotoWall;
- (_Bool)isFirstRun;
- (id)getFileTypeStr:(id)arg1;
- (_Bool)isFormatBySupported:(id)arg1 format:(id)arg2;
- (int)getFileType:(id)arg1;
- (id)getSystemDocumentPath;
- (id)getCurrentDirPathLastNameNoSuffix:(id)arg1;
- (id)getCurrentDirPathLastName:(id)arg1;
- (id)getFileAbsolutePath:(id)arg1;
- (id)getRelativeFileName:(id)arg1;
- (_Bool)fileExisted:(id)arg1;
- (_Bool)deleteSingleFileCaches:(id)arg1;
- (_Bool)deleteFileAndCaches:(id)arg1;
- (_Bool)deleteSingleFile:(id)arg1;
- (id)copyFileWithFilePath:(id)arg1 destFileDir:(id)arg2 removeOldFile:(_Bool)arg3;
- (id)moveFile:(id)arg1 toDestFileDir:(id)arg2;
- (id)copyFileWithFilePath:(id)arg1 destFileDir:(id)arg2;
- (void)moveFilesWithFileDir:(id)arg1 destFileDir:(id)arg2;
- (_Bool)isOpenedPPTFile;
- (void)setCurrentFileName:(id)arg1;
- (void)closePPTDocument;
- (void)shouldClosePPTDocument;
- (long long)saveCurrentFileAsFileName:(id)arg1;
- (int)openSelectPPTFile:(id)arg1;
- (int)OpenPPTFile:(id)arg1;
- (int)createNewPPTFile;
- (int)createNewPPTFile:(id)arg1;
- (void)createNewFile:(int)arg1;
- (void)creatNewDocFile;
- (void)createNewFileInNewThread:(int)arg1;
- (void)clearArgumentForDocDocument;
- (void)closeDocDocument;
- (void)checkNetworkFile:(id)arg1;
- (void)deleteBakFolderFile:(id)arg1;
- (void)closeEtDocument;
- (void)createNewEtFile;
- (void)OpenEtFile:(id)arg1;
- (void)sendOpenFileInfo:(id)arg1 openFileTypeKey:(id)arg2 successTag:(int)arg3 durations:(unsigned long long)arg4;
- (_Bool)dealCrash:(id)arg1 fileType:(int)arg2;
- (_Bool)newOpenFile:(id)arg1;
- (void)setCompanyName:(struct IWpsApplication *)arg1;
- (int)initWpsCoreData:(id)arg1 isSupportOpt:(_Bool)arg2;
- (void)initOfWordInput;
- (void)setFlagWhenOpenFailed:(int)arg1 setDocInfo:(id)arg2;
- (_Bool)createNewDocFile:(id)arg1;
- (void)initOfCreateNewFile;
- (void)openFileWithoutUserInteraction:(id)arg1;
- (void)openDocFile:(id)arg1;
- (void)openFileInNewThread:(id)arg1;
- (long long)getFileSize:(id)arg1;
- (_Bool)unzipFile:(id)arg1 to:(id)arg2;
- (_Bool)unzipFile:(id)arg1 to:(id)arg2 withPassword:(id)arg3;
- (int)unzipOneFile:(id)arg1 to:(id)arg2 password:(id)arg3;
- (void)releaseFontAbout;
- (void)initFontAbout;
- (void)termFileManager;
- (void)dealloc;
- (id)init;
- (_Bool)isOfficeApiDocumentShareOrSendMail;
- (_Bool)isOfficeApiDocumentSendMail;
- (_Bool)isOfficeApiDocumentShare;
- (_Bool)isOfficeApiDocumentLocalization;
- (_Bool)removeOAFile:(_Bool)arg1;
- (void)autoSaveWithOA:(id)arg1 filePath:(id)arg2;
- (void)dealWithOA:(id)arg1 filePath:(id)arg2;
- (id)checkDecry:(id)arg1;
- (void)sendSharePlayDictionaryToOA:(id)arg1;
@property(retain, nonatomic) KWAuthorityManange *authorityManage;
@property(retain, nonatomic) NSDictionary *KWApiConfigAttribute;
@property(retain, nonatomic) NSDictionary *KWApiSecureInfo;
@property(retain, nonatomic) NSDictionary *KWApiWatermark;
@property(retain, nonatomic) NSString *KWApiSaveAsFile;
@property(retain, nonatomic) NSString *KWApiSourceFile;
@property(retain, nonatomic) NSString *KWApiAppointAvailableVer;
@property(nonatomic, setter=setKWApiEnterBackgroundNotCloseDocument:) _Bool KWApiEnterBackgroundNotCloseDocument;
@property(nonatomic, setter=setKWApiForceCloseDocument:) _Bool KWApiIsForceCloseDocument;
@property(nonatomic, setter=setKWApiRepeatOpenFile:) _Bool KWApiIsRepeatOpenFile;
@property(nonatomic, setter=setKWApiBackgroundMode:) _Bool KWApiIsBackgroundMode;

@end

