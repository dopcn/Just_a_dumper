//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

@class NSOperationQueue, NSSet, NSThread;

@interface YKFTaskQueue : NSObject
{
    _Bool _needRunLoop;
    int _maxConcurrentTaskCount;
    int _priority;
    int _stackSize;
    NSOperationQueue *_operationQueue;
    NSThread *_thread;
    NSSet *_runloopModes;
    long long _aliveTime;
}

+ (void)networkRequestThreadEntryPoint:(id)arg1;
@property(nonatomic) long long aliveTime; // @synthesize aliveTime=_aliveTime;
@property(retain, nonatomic) NSSet *runloopModes; // @synthesize runloopModes=_runloopModes;
@property(retain, nonatomic) NSThread *thread; // @synthesize thread=_thread;
@property(nonatomic) int stackSize; // @synthesize stackSize=_stackSize;
@property(nonatomic) int priority; // @synthesize priority=_priority;
@property(retain, nonatomic) NSOperationQueue *operationQueue; // @synthesize operationQueue=_operationQueue;
@property(nonatomic) int maxConcurrentTaskCount; // @synthesize maxConcurrentTaskCount=_maxConcurrentTaskCount;
@property(nonatomic) _Bool needRunLoop; // @synthesize needRunLoop=_needRunLoop;
- (void).cxx_destruct;
- (void)resume;
- (void)pause;
- (id)dequeue;
- (void)cancelAll;
- (void)cancelTaskForKey:(id)arg1;
- (id)allTaskForKey:(id)arg1;
- (id)taskForKey:(id)arg1;
- (id)allTaskList;
- (void)enqueue:(id)arg1;
- (void)checkThread;
- (void)releaseThread;
- (id)queueName;
- (id)initWithPriority:(int)arg1 stackSize:(int)arg2 threadKeepAliveTime:(long long)arg3 name:(id)arg4;

@end

