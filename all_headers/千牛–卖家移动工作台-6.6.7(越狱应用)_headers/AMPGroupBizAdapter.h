//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "MKTMsgBusHelp.h"

@class AMPUserContext, JDYIMService, JDYWeakRefThreadSafeArray, NSDate, NSLock, NSMutableArray, NSMutableDictionary;
@protocol AMPGroupBiz, AMPSessionBiz;

@interface AMPGroupBizAdapter : MKTMsgBusHelp
{
    _Bool _hasGetGroupListSuccess;
    _Bool _hasRequest;
    NSDate *_lastLoginSuccessDate;
    AMPUserContext *_context;
    id <AMPGroupBiz> _groupBiz;
    id <AMPSessionBiz> _sessionBiz;
    NSMutableArray *_groupArray;
    JDYIMService *_imService;
    NSLock *_groupArrayLock;
    JDYWeakRefThreadSafeArray *_delegateArray;
    NSMutableDictionary *_lastRequestDateDict;
}

@property(retain, nonatomic) NSMutableDictionary *lastRequestDateDict; // @synthesize lastRequestDateDict=_lastRequestDateDict;
@property(retain, nonatomic) JDYWeakRefThreadSafeArray *delegateArray; // @synthesize delegateArray=_delegateArray;
@property(nonatomic) _Bool hasRequest; // @synthesize hasRequest=_hasRequest;
@property(retain, nonatomic) NSLock *groupArrayLock; // @synthesize groupArrayLock=_groupArrayLock;
@property(nonatomic) __weak JDYIMService *imService; // @synthesize imService=_imService;
@property(retain, nonatomic) NSMutableArray *groupArray; // @synthesize groupArray=_groupArray;
@property(nonatomic) __weak id <AMPSessionBiz> sessionBiz; // @synthesize sessionBiz=_sessionBiz;
@property(nonatomic) __weak id <AMPGroupBiz> groupBiz; // @synthesize groupBiz=_groupBiz;
@property(nonatomic) __weak AMPUserContext *context; // @synthesize context=_context;
@property(retain, nonatomic) NSDate *lastLoginSuccessDate; // @synthesize lastLoginSuccessDate=_lastLoginSuccessDate;
@property(nonatomic) _Bool hasGetGroupListSuccess; // @synthesize hasGetGroupListSuccess=_hasGetGroupListSuccess;
- (void).cxx_destruct;
- (void)dissolveGroupWithGroupId:(id)arg1;
- (void)quitGroupWithGroupId:(id)arg1;
- (id)userContext;
- (void)updateGroup:(id)arg1 property:(id)arg2 value:(id)arg3;
- (_Bool)isVGroup:(id)arg1;
- (_Bool)filterEventByGroup:(id)arg1;
- (void)removeGroup:(id)arg1 reason:(unsigned long long)arg2;
- (void)addGroup:(id)arg1;
- (void)ampGroupInfoUpdateFail:(id)arg1 flag:(id)arg2 error:(id)arg3;
- (void)ampGroupUserInfoUpdatedList:(id)arg1;
- (void)ampGroupInfoUpdated:(id)arg1 changeFlag:(id)arg2;
- (void)ampGroupUserListDeleteFail:(id)arg1 groupId:(id)arg2;
- (void)ampGroupUserListDeleted:(id)arg1 groupId:(id)arg2;
- (void)ampGroupInfoDelete:(id)arg1;
- (void)ampExitGroupFail:(id)arg1 error:(id)arg2;
- (void)ampExitGroupSuccess:(id)arg1;
- (void)ampCreateGroupFail:(id)arg1;
- (void)ampCreateGroupSuccess:(id)arg1;
- (void)ampJoinedGroupInfoRequestFail:(id)arg1;
- (void)ampJoinedGroupInfoRequestFinish:(id)arg1;
- (void)registerEvents;
- (id)getProfileItemForPerson:(id)arg1 inGroup:(id)arg2;
- (id)getProfileItemForGroup:(id)arg1;
- (id)setMemberInBlacklist:(_Bool)arg1 forUserId:(id)arg2 groupId:(id)arg3;
- (void)setMembersToSuperManager:(id)arg1 groupId:(id)arg2;
- (id)setMemberIdentity:(unsigned long long)arg1 userId:(id)arg2 groupId:(id)arg3;
- (id)getGroupInfoWithGroupId:(id)arg1;
- (id)getGroupUsers:(id)arg1 forGroup:(id)arg2;
- (unsigned long long)getGroupType:(id)arg1;
- (_Bool)isGroup:(id)arg1 validForType:(unsigned long long)arg2;
- (id)getGroupListForVGroup:(id)arg1;
- (void)removeSubGroup:(id)arg1 inGroupList:(id)arg2;
- (id)_getGroupListWithType:(unsigned long long)arg1;
- (void)requestIFNeed;
- (void)showError:(id)arg1 string:(id)arg2;
- (void)didRequestNetworkForKey:(id)arg1;
- (_Bool)shouldRequestNetworkForKey:(id)arg1;
- (void)notifyProfileReady;
- (void)syncGroupListFromServer;
- (void)cacheUserForGroup:(id)arg1;
- (id)getGroupListWithType:(unsigned long long)arg1;
- (_Bool)containsDelegate:(id)arg1;
- (void)removeDelegate:(id)arg1;
- (void)addDelegate:(id)arg1;
- (id)initWithContext:(id)arg1 imService:(id)arg2;

@end

