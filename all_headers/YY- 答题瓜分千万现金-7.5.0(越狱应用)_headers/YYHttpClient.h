//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

@class AFHTTPRequestSerializer, AFHTTPResponseSerializer, AFHTTPSessionManager, NSURL, NSURLSessionConfiguration;
@protocol AFURLRequestSerialization, AFURLResponseSerialization;

@interface YYHttpClient : NSObject
{
    _Bool _runOnUI;
    _Bool _didAppLaunched;
    NSURL *_baseURL;
    AFHTTPSessionManager *_httpSessionManager;
    CDUnknownBlockType _basicParameterConstructor;
    AFHTTPResponseSerializer<AFURLResponseSerialization> *_responseSerializer;
    NSURLSessionConfiguration *_sessionConfiguration;
}

+ (id)instantiateHttpClient;
+ (id)sharedClient;
+ (void)enableSrvRspSwitch:(_Bool)arg1;
@property(retain, nonatomic) NSURLSessionConfiguration *sessionConfiguration; // @synthesize sessionConfiguration=_sessionConfiguration;
@property(nonatomic) _Bool didAppLaunched; // @synthesize didAppLaunched=_didAppLaunched;
@property(nonatomic) _Bool runOnUI; // @synthesize runOnUI=_runOnUI;
@property(retain, nonatomic) AFHTTPResponseSerializer<AFURLResponseSerialization> *responseSerializer; // @synthesize responseSerializer=_responseSerializer;
@property(copy, nonatomic) CDUnknownBlockType basicParameterConstructor; // @synthesize basicParameterConstructor=_basicParameterConstructor;
@property(readonly, nonatomic) NSURL *baseURL; // @synthesize baseURL=_baseURL;
- (void).cxx_destruct;
- (void)handleHttpsFailureWithTask:(id)arg1 error:(id)arg2;
- (void)executeFailureBlock:(CDUnknownBlockType)arg1 url:(id)arg2 context:(unsigned long long)arg3 runOnUI:(_Bool)arg4 task:(id)arg5 error:(id)arg6;
- (CDUnknownBlockType)wrappedFaileBlockWithFailBlock:(CDUnknownBlockType)arg1 reqURL:(id)arg2 context:(long long)arg3 callbackOnUI:(_Bool)arg4 retryable:(_Bool)arg5 retryBlock:(CDUnknownBlockType)arg6;
- (void)invalidateHttpClient;
- (unsigned int)getHttpClientContext;
- (void)setRequestTimeout:(unsigned long long)arg1;
- (CDUnknownBlockType)_httpsFailureHandleWrapperWithFailure:(CDUnknownBlockType)arg1;
- (void)resetHeader;
- (id)refinedParameters:(id)arg1 withURLString:(id)arg2;
- (id)_processedURL:(id)arg1;
- (id)_processedURLStr:(id)arg1;
- (id)_allParametersWithParameters:(id)arg1;
- (void)setBaseURL:(id)arg1;
- (id)PUT:(id)arg1 parameters:(id)arg2 success:(CDUnknownBlockType)arg3 failure:(CDUnknownBlockType)arg4 runOnUI:(_Bool)arg5;
- (id)PUT:(id)arg1 parameters:(id)arg2 success:(CDUnknownBlockType)arg3 failure:(CDUnknownBlockType)arg4;
- (id)POST:(id)arg1 parameters:(id)arg2 constructingBodyWithBlock:(CDUnknownBlockType)arg3 success:(CDUnknownBlockType)arg4 failure:(CDUnknownBlockType)arg5 runOnUI:(_Bool)arg6;
- (id)POST:(id)arg1 parameters:(id)arg2 constructingBodyWithBlock:(CDUnknownBlockType)arg3 success:(CDUnknownBlockType)arg4 failure:(CDUnknownBlockType)arg5;
- (id)POST:(id)arg1 recommendData:(id)arg2 success:(CDUnknownBlockType)arg3 failure:(CDUnknownBlockType)arg4 runOnUI:(_Bool)arg5;
- (id)POST:(id)arg1 recommendData:(id)arg2 success:(CDUnknownBlockType)arg3 failure:(CDUnknownBlockType)arg4;
- (id)POST:(id)arg1 parameters:(id)arg2 success:(CDUnknownBlockType)arg3 failure:(CDUnknownBlockType)arg4 runOnUI:(_Bool)arg5;
- (id)POST:(id)arg1 parameters:(id)arg2 success:(CDUnknownBlockType)arg3 failure:(CDUnknownBlockType)arg4;
- (id)GET:(id)arg1 parameters:(id)arg2 success:(CDUnknownBlockType)arg3 failure:(CDUnknownBlockType)arg4 runOnUI:(_Bool)arg5;
- (id)GET:(id)arg1 parameters:(id)arg2 success:(CDUnknownBlockType)arg3 failure:(CDUnknownBlockType)arg4;
- (CDUnknownBlockType)failureBlock:(CDUnknownBlockType)arg1 httpsFailRetryBlock:(CDUnknownBlockType)arg2;
- (CDUnknownBlockType)failureBlock:(CDUnknownBlockType)arg1 url:(id)arg2 context:(unsigned long long)arg3 runOnUI:(_Bool)arg4;
- (CDUnknownBlockType)successBlock:(CDUnknownBlockType)arg1 url:(id)arg2 context:(unsigned long long)arg3 runOnUI:(_Bool)arg4;
- (_Bool)shouldReportServerQuality;
- (CDUnknownBlockType)defaultBasicParameterConstructor;
@property(retain, nonatomic) AFHTTPRequestSerializer<AFURLRequestSerialization> *requestSerializer;
@property(readonly, nonatomic) AFHTTPSessionManager *httpSessionManager; // @synthesize httpSessionManager=_httpSessionManager;
- (void)dealloc;
- (id)initWithBaseURL:(id)arg1;

@end

