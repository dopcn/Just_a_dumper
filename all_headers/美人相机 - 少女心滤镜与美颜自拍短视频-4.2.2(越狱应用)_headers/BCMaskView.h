//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <UIKit/UIView.h>

#import "ClipMoveViewDelegate-Protocol.h"

@class ClipMoveView, NSString, UIPanGestureRecognizer;
@protocol ClipMaskViewDelegate;

@interface BCMaskView : UIView <ClipMoveViewDelegate>
{
    struct CGPoint _touchBeginPoint;
    struct CGPoint _moveViewBeginPoint;
    UIPanGestureRecognizer *_panGR;
    _Bool _showInsideLine;
    _Bool _showAssistLine;
    id <ClipMaskViewDelegate> _delegate;
    ClipMoveView *_leftUpView;
    ClipMoveView *_rightUpView;
    ClipMoveView *_leftDownView;
    ClipMoveView *_rightDownView;
    ClipMoveView *_upView;
    ClipMoveView *_downView;
    ClipMoveView *_leftView;
    ClipMoveView *_rightView;
    ClipMoveView *_currentMoveView;
    UIView *_insideView;
    double _proportion;
    long long _type;
    double _minInsideInterval;
    struct CGRect _insideRect;
    struct CGRect _outsideRect;
    struct CGRect _limitRect;
}

@property(nonatomic, getter=isShowAssistLine) _Bool showAssistLine; // @synthesize showAssistLine=_showAssistLine;
@property(nonatomic, getter=isShowInsideLine) _Bool showInsideLine; // @synthesize showInsideLine=_showInsideLine;
@property(nonatomic) double minInsideInterval; // @synthesize minInsideInterval=_minInsideInterval;
@property(nonatomic) long long type; // @synthesize type=_type;
@property(nonatomic) double proportion; // @synthesize proportion=_proportion;
@property(nonatomic) struct CGRect limitRect; // @synthesize limitRect=_limitRect;
@property(nonatomic) struct CGRect outsideRect; // @synthesize outsideRect=_outsideRect;
@property(nonatomic) struct CGRect insideRect; // @synthesize insideRect=_insideRect;
@property(retain, nonatomic) UIView *insideView; // @synthesize insideView=_insideView;
@property(retain, nonatomic) ClipMoveView *currentMoveView; // @synthesize currentMoveView=_currentMoveView;
@property(retain, nonatomic) ClipMoveView *rightView; // @synthesize rightView=_rightView;
@property(retain, nonatomic) ClipMoveView *leftView; // @synthesize leftView=_leftView;
@property(retain, nonatomic) ClipMoveView *downView; // @synthesize downView=_downView;
@property(retain, nonatomic) ClipMoveView *upView; // @synthesize upView=_upView;
@property(retain, nonatomic) ClipMoveView *rightDownView; // @synthesize rightDownView=_rightDownView;
@property(retain, nonatomic) ClipMoveView *leftDownView; // @synthesize leftDownView=_leftDownView;
@property(retain, nonatomic) ClipMoveView *rightUpView; // @synthesize rightUpView=_rightUpView;
@property(retain, nonatomic) ClipMoveView *leftUpView; // @synthesize leftUpView=_leftUpView;
@property(nonatomic) __weak id <ClipMaskViewDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)hasMovedWithMoveView:(id)arg1;
- (_Bool)noFreeClipMoveView:(id)arg1 containsPoint:(struct CGPoint)arg2;
- (void)updateMoveView:(id)arg1;
- (void)updateCornerAndInside:(id)arg1;
- (void)isMovingWithMoveView:(id)arg1 AndChangePoint:(struct CGPoint)arg2;
- (void)isMovingWithMoveViewSize:(id)arg1 AndChangePoint:(struct CGPoint)arg2;
- (void)setCurrentMoveViewWithTouch:(id)arg1;
- (void)willMoveWithMoveView:(id)arg1;
- (void)touchesCancelled:(id)arg1 withEvent:(id)arg2;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (void)touchesMoved:(id)arg1 withEvent:(id)arg2;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (void)panInsideView:(id)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (void)resetInsideRectWithType:(long long)arg1;
- (void)limitInsideIntervalWithCorner:(id)arg1;
- (void)updateCorner:(id)arg1;
- (void)updateByInsideView;
- (void)updateInsideRect;
- (void)updateOtherCornerWithOneCorner:(id)arg1;
- (void)updateAllCorner;
- (id)addCornerViewWithType:(long long)arg1;
- (void)initInsideView;
- (void)initCornerViews;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

