//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "CFBaseFilter.h"

@class CFFaceFeature, CrazyFacePatchInfo, GPUImageFramebuffer, UIImage;

@interface CFFaceOffFilter : CFBaseFilter
{
    int nTriangles;
    float *vertexCoord;
    float *modelFragmentCoord;
    float *userFragmentCoord;
    float *maskFragmentCoord;
    char *triangleArray;
    int outWidth;
    int outHeight;
    int filterTextureCoordinateAttribute2;
    int filterTextureCoordinateAttribute3;
    char *vertexSamplingCoordinates;
    unsigned int uniformDrawTypeFragment;
    GPUImageFramebuffer *outputFramebuffer2;
    unsigned int uniformUserColor1;
    unsigned int uniformUserColor2;
    unsigned int uniformModelColor1;
    unsigned int uniformModelColor2;
    unsigned int _modelTexture;
    unsigned int _maskTexture;
    float _modelY;
    float _modelU;
    float _modelV;
    float _modelY2;
    float _modelU2;
    float _modelV2;
    CrazyFacePatchInfo *_patchInfo;
    CFFaceFeature *_modelFeature;
    CFFaceFeature *_maskFeature;
    long long _maskID;
    long long _triangleID;
    double _alphaBlend;
    double _alphaPosition;
    UIImage *_image;
}

@property(nonatomic) float modelV2; // @synthesize modelV2=_modelV2;
@property(nonatomic) float modelU2; // @synthesize modelU2=_modelU2;
@property(nonatomic) float modelY2; // @synthesize modelY2=_modelY2;
@property(nonatomic) float modelV; // @synthesize modelV=_modelV;
@property(nonatomic) float modelU; // @synthesize modelU=_modelU;
@property(nonatomic) float modelY; // @synthesize modelY=_modelY;
@property(retain, nonatomic) UIImage *image; // @synthesize image=_image;
@property(nonatomic) double alphaPosition; // @synthesize alphaPosition=_alphaPosition;
@property(nonatomic) double alphaBlend; // @synthesize alphaBlend=_alphaBlend;
@property(nonatomic) long long triangleID; // @synthesize triangleID=_triangleID;
@property(nonatomic) long long maskID; // @synthesize maskID=_maskID;
@property(nonatomic) unsigned int maskTexture; // @synthesize maskTexture=_maskTexture;
@property(nonatomic) unsigned int modelTexture; // @synthesize modelTexture=_modelTexture;
@property(retain, nonatomic) CFFaceFeature *maskFeature; // @synthesize maskFeature=_maskFeature;
@property(retain, nonatomic) CFFaceFeature *modelFeature; // @synthesize modelFeature=_modelFeature;
@property(nonatomic) __weak CrazyFacePatchInfo *patchInfo; // @synthesize patchInfo=_patchInfo;
- (void).cxx_destruct;
- (void)step2Vertices:(const float *)arg1 textureCoordinates:(const float *)arg2 patchItem:(id)arg3 faceImageLayer:(id)arg4;
- (void)skin:(id)arg1;
- (void)renderToTextureWithVertices:(const float *)arg1 textureCoordinates:(const float *)arg2;
- (void)renderFromTexture:(unsigned int)arg1 toBuffer:(id)arg2 vertices:(const float *)arg3 textureCoordinates:(const float *)arg4 needEnable:(_Bool)arg5;
- (_Bool)isSkinR:(unsigned char)arg1 G:(unsigned char)arg2 B:(unsigned char)arg3;
- (void)setVertex:(float [131][2])arg1 imageSize:(struct CGSize)arg2;
- (void)setFragment:(float [131][2])arg1 imageSize:(struct CGSize)arg2 fragCoord:(float *)arg3;
- (struct CGSize)outputFrameSize;
- (struct CGSize)sizeOfFBO;
- (void)step1;
- (void)setupWithModel:(id)arg1;
- (void)dealloc;
- (id)init;

@end

