//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "SGIAudioSourceDelegate-Protocol.h"
#import "SGISpeechCorrectingDelegate-Protocol.h"
#import "SGISpeechRecognitionDelegate-Protocol.h"

@class NSMutableData, NSString;
@protocol OS_dispatch_queue, SGIAudioSource, SGICompression, SGISpeechCorrecting, SGISpeechRecognition, SGIVoiceActivityDetector, SogouDefaultSpeechRecognizerDelegate, SogouSpeechAudioSessionSetterDelegate;

@interface SogouDefaultSpeechRecognizer : NSObject <SGIAudioSourceDelegate, SGISpeechRecognitionDelegate, SGISpeechCorrectingDelegate>
{
    _Bool _voiceActive;
    _Bool _enableCorrecting;
    long long _currentReceivedIndexWhenCorrecting;
    _Bool _isSentenceBegin;
    _Bool _isSentenceEnd;
    _Bool _firstFlag;
    unsigned long long _speechStatus;
    id <SogouDefaultSpeechRecognizerDelegate> _delegate;
    id <SogouSpeechAudioSessionSetterDelegate> _audioSessionSetterDelegate;
    unsigned long long _requestCount;
    unsigned long long _requestRetryCount;
    unsigned long long _responseCount;
    id <SGIAudioSource> _audioSource;
    id <SGICompression> _compression;
    id <SGIVoiceActivityDetector> _vad;
    id <SGISpeechRecognition> _recognizer;
    id <SGISpeechCorrecting> _corrector;
    NSObject<OS_dispatch_queue> *_speexQueue;
    NSMutableData *_vadData;
    NSMutableData *_encodeData;
    long long _sentenceID;
    long long _partSequence;
    long long _flag;
    long long _sentenceLengthInSamples;
    long long _timeStamp;
    long long _sendingPacketCounter;
    long long _finishPacketCounter;
    long long _maxVoiceLength;
    long long _currentVoiceLength;
    NSString *_correctString;
    NSString *_testWaveDataPath;
}

@property(retain, nonatomic) NSString *testWaveDataPath; // @synthesize testWaveDataPath=_testWaveDataPath;
@property(nonatomic) _Bool firstFlag; // @synthesize firstFlag=_firstFlag;
@property(retain, nonatomic) NSString *correctString; // @synthesize correctString=_correctString;
@property(nonatomic) long long currentVoiceLength; // @synthesize currentVoiceLength=_currentVoiceLength;
@property(nonatomic) long long maxVoiceLength; // @synthesize maxVoiceLength=_maxVoiceLength;
@property(nonatomic) long long finishPacketCounter; // @synthesize finishPacketCounter=_finishPacketCounter;
@property(nonatomic) long long sendingPacketCounter; // @synthesize sendingPacketCounter=_sendingPacketCounter;
@property(nonatomic) long long timeStamp; // @synthesize timeStamp=_timeStamp;
@property _Bool isSentenceEnd; // @synthesize isSentenceEnd=_isSentenceEnd;
@property(nonatomic) _Bool isSentenceBegin; // @synthesize isSentenceBegin=_isSentenceBegin;
@property(nonatomic) long long sentenceLengthInSamples; // @synthesize sentenceLengthInSamples=_sentenceLengthInSamples;
@property(nonatomic) long long flag; // @synthesize flag=_flag;
@property(nonatomic) long long partSequence; // @synthesize partSequence=_partSequence;
@property(nonatomic) long long sentenceID; // @synthesize sentenceID=_sentenceID;
@property(retain, nonatomic) NSMutableData *encodeData; // @synthesize encodeData=_encodeData;
@property(retain, nonatomic) NSMutableData *vadData; // @synthesize vadData=_vadData;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *speexQueue; // @synthesize speexQueue=_speexQueue;
@property(retain, nonatomic) id <SGISpeechCorrecting> corrector; // @synthesize corrector=_corrector;
@property(retain, nonatomic) id <SGISpeechRecognition> recognizer; // @synthesize recognizer=_recognizer;
@property(retain, nonatomic) id <SGIVoiceActivityDetector> vad; // @synthesize vad=_vad;
@property(retain, nonatomic) id <SGICompression> compression; // @synthesize compression=_compression;
@property(retain, nonatomic) id <SGIAudioSource> audioSource; // @synthesize audioSource=_audioSource;
@property(nonatomic) unsigned long long responseCount; // @synthesize responseCount=_responseCount;
@property(nonatomic) unsigned long long requestRetryCount; // @synthesize requestRetryCount=_requestRetryCount;
@property(nonatomic) unsigned long long requestCount; // @synthesize requestCount=_requestCount;
@property(nonatomic) __weak id <SogouSpeechAudioSessionSetterDelegate> audioSessionSetterDelegate; // @synthesize audioSessionSetterDelegate=_audioSessionSetterDelegate;
@property(nonatomic) __weak id <SogouDefaultSpeechRecognizerDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) unsigned long long speechStatus; // @synthesize speechStatus=_speechStatus;
- (void).cxx_destruct;
- (id)classifyError:(id)arg1;
- (void)agcInfoHandle:(_Bool)arg1;
- (void)onCorrectingResults:(id)arg1 sentence:(id)arg2 text:(id)arg3 error:(id)arg4;
- (_Bool)customAudioSessionWhenRecordEnd;
- (_Bool)customAudioSessionWhenPrepare;
- (void)onError:(id)arg1 error:(id)arg2 status:(int)arg3;
- (void)onSuccess:(id)arg1 resultDictionary:(id)arg2 status:(int)arg3;
- (void)audioQueueFailed:(id)arg1 error:(id)arg2;
- (void)audioSourceDidPause:(id)arg1;
- (void)audioSourceDidStop:(id)arg1;
- (void)audioSourceDidStart:(id)arg1;
- (void)audioSource:(id)arg1 onData:(id)arg2 packIndex:(long long)arg3 sampleIndex:(long long)arg4 flag:(int)arg5;
- (void)postEndSingal;
- (void)longModeVadDetect:(id)arg1 onData:(id)arg2 packIndex:(long long)arg3 sampleIndex:(long long)arg4 flag:(int)arg5;
- (void)shortModeVadDetect:(id)arg1 onData:(id)arg2 packIndex:(long long)arg3 sampleIndex:(long long)arg4 flag:(int)arg5;
- (void)genSentenceParams:(id)arg1;
- (void)appendEncodedData:(id)arg1 status:(int)arg2 beginSampleOffset:(long long)arg3 endSampleOffset:(long long)arg4;
- (void)vadData2SpeexData:(id)arg1 status:(int)arg2 beginSampleOffset:(long long)arg3 endSampleOffset:(long long)arg4;
- (float)updateVolume;
- (void)resumeRecorder;
- (void)pauseRecorder;
- (void)stopListening;
- (_Bool)startCorrectingWithOriginalString:(id)arg1;
- (int)startListening;
- (void)destroyRecognizer;
- (void)prepareRecognizer;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

