//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "BaseViewController.h"

#import "EGORefreshTableHeaderDelegate-Protocol.h"
#import "FileTableViewCellDelegate-Protocol.h"
#import "PhotoBrowserViewControllerDelegate-Protocol.h"
#import "UITableViewDelegate-Protocol.h"

@class BDScrollSlider, BaseFileListDataSource, EGORefreshTableHeaderView, NSArray, NSMutableArray, NSString, NSTimer, UITableView;

@interface BaseFileListViewController : BaseViewController <UITableViewDelegate, EGORefreshTableHeaderDelegate, FileTableViewCellDelegate, PhotoBrowserViewControllerDelegate>
{
    UITableView *_tableFileList;
    NSString *_serverPath;
    NSString *_dirName;
    _Bool _isSelectAll;
    NSMutableArray *_photos;
    EGORefreshTableHeaderView *_refreshHeaderView;
    _Bool _reloading;
    NSTimer *_sliderVisibilityTimer;
    _Bool _editing;
    _Bool _enterFromUnzipFileList;
    _Bool _enterWithNoShowTabBar;
    int _listMode;
    BaseFileListDataSource *_fileDataSource;
    BDScrollSlider *_sliderView;
}

@property(nonatomic) _Bool enterWithNoShowTabBar; // @synthesize enterWithNoShowTabBar=_enterWithNoShowTabBar;
@property(nonatomic) _Bool isSelectAll; // @synthesize isSelectAll=_isSelectAll;
@property(nonatomic) _Bool enterFromUnzipFileList; // @synthesize enterFromUnzipFileList=_enterFromUnzipFileList;
@property(nonatomic) _Bool editing; // @synthesize editing=_editing;
@property(retain, nonatomic) BDScrollSlider *sliderView; // @synthesize sliderView=_sliderView;
@property(copy, nonatomic) NSString *dirName; // @synthesize dirName=_dirName;
@property(copy, nonatomic) NSString *serverPath; // @synthesize serverPath=_serverPath;
@property(retain, nonatomic) UITableView *tableFileList; // @synthesize tableFileList=_tableFileList;
@property(retain, nonatomic) BaseFileListDataSource *fileDataSource; // @synthesize fileDataSource=_fileDataSource;
@property(nonatomic) int listMode; // @synthesize listMode=_listMode;
- (void).cxx_destruct;
- (void)cancleAlertAction;
- (void)handleTableViewCellAccaccsoryClicked:(id)arg1;
- (_Bool)isTableViewInScrolling;
- (void)closeExpandedCell;
- (void)setSliderHidden:(_Bool)arg1;
- (void)hideSlider;
- (void)cancelSliderHiding;
- (void)setupContentSliderView;
- (void)adjustcontentSliderValue:(_Bool)arg1;
- (void)handleContentChangeSliderAction:(id)arg1;
- (void)handleContentChangeSliderTouchUp:(id)arg1;
- (void)resetSliderThumb;
- (int)photoSourceType;
- (void)photoBrowserPathChangedPhotos:(id)arg1;
- (void)photoBrowserDeletePhotos:(id)arg1;
- (id)photoBrowser:(id)arg1 photoAtIndex:(unsigned long long)arg2;
- (unsigned long long)numberOfPhotosInPhotoBrowser:(id)arg1;
- (_Bool)egoRefreshTableHeaderDataSourceIsLoading:(id)arg1;
- (void)egoRefreshTableHeaderDidTriggerRefresh:(id)arg1;
- (void)scrollViewDidEndDecelerating:(id)arg1;
- (void)scrollViewDidEndDragging:(id)arg1 willDecelerate:(_Bool)arg2;
- (void)scrollViewDidScroll:(id)arg1;
- (void)loadImagesForOnscreenRows;
- (void)doneLoadingTableViewData;
- (void)reloadTableViewDataSource;
- (void)previewMeidaFile:(id)arg1 openType:(int)arg2 panelType:(int)arg3;
- (void)previewFileExceptImage:(id)arg1 openType:(int)arg2;
- (void)goFileDetail:(id)arg1 openType:(int)arg2;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 willSelectRowAtIndexPath:(id)arg2;
- (void)scrollToItem:(id)arg1 animated:(_Bool)arg2;
- (id)getSelectFileArray;
- (double)commonInitCellHeight:(id)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (void)setupTableView;
- (void)setLeftItemTextForSelectAll;
- (_Bool)isSliderDragging;
- (void)handlePinch:(id)arg1;
- (void)selectBtnClick:(id)arg1;
- (void)fileCacheDidCleand;
- (void)showFootLoading;
@property(readonly, nonatomic) NSArray *fileListArray;
- (void)refreshListData;
- (void)setupListDataSource;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (id)init;
- (void)didReceiveMemoryWarning;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

