//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class NSMutableDictionary, NSString;

@interface STMURLCacheModel : NSObject
{
    _Bool _isDownloadMode;
    _Bool _isSavedOnDisk;
    _Bool _isUsingURLProtocol;
    unsigned long long _memoryCapacity;
    unsigned long long _diskCapacity;
    unsigned long long _cacheTime;
    NSString *_subDirectory;
    NSString *_diskPath;
    NSMutableDictionary *_responseDic;
    NSString *_cacheFolder;
    NSMutableDictionary *_whiteListsHost;
    NSMutableDictionary *_whiteListsRequestUrl;
    NSString *_whiteUserAgent;
}

+ (id)md5Hash:(id)arg1;
+ (id)shareInstance;
@property(nonatomic) _Bool isUsingURLProtocol; // @synthesize isUsingURLProtocol=_isUsingURLProtocol;
@property(retain, nonatomic) NSString *whiteUserAgent; // @synthesize whiteUserAgent=_whiteUserAgent;
@property(retain, nonatomic) NSMutableDictionary *whiteListsRequestUrl; // @synthesize whiteListsRequestUrl=_whiteListsRequestUrl;
@property(retain, nonatomic) NSMutableDictionary *whiteListsHost; // @synthesize whiteListsHost=_whiteListsHost;
@property(copy, nonatomic) NSString *cacheFolder; // @synthesize cacheFolder=_cacheFolder;
@property(retain, nonatomic) NSMutableDictionary *responseDic; // @synthesize responseDic=_responseDic;
@property(copy, nonatomic) NSString *diskPath; // @synthesize diskPath=_diskPath;
@property(nonatomic) _Bool isSavedOnDisk; // @synthesize isSavedOnDisk=_isSavedOnDisk;
@property(nonatomic) _Bool isDownloadMode; // @synthesize isDownloadMode=_isDownloadMode;
@property(copy, nonatomic) NSString *subDirectory; // @synthesize subDirectory=_subDirectory;
@property(nonatomic) unsigned long long cacheTime; // @synthesize cacheTime=_cacheTime;
@property(nonatomic) unsigned long long diskCapacity; // @synthesize diskCapacity=_diskCapacity;
@property(nonatomic) unsigned long long memoryCapacity; // @synthesize memoryCapacity=_memoryCapacity;
- (void).cxx_destruct;
- (id)cacheFolderPath;
- (unsigned long long)folderSize;
- (void)deleteCacheFolder;
- (void)checkCapacity;
- (id)cacheFilePath:(id)arg1;
- (id)cacheRequestOtherInfoFileName:(id)arg1;
- (id)cacheRequestFileName:(id)arg1;
- (id)filePathFromRequest:(id)arg1 isInfo:(_Bool)arg2;
- (void)removeCacheFileWithRequest:(id)arg1;
- (id)localCacheResponeWithRequest:(id)arg1;

@end

