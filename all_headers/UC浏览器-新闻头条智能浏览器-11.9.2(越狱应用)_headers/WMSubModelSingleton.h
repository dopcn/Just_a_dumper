//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

#import "NFWeexJSBridgeWemediaObserver-Protocol.h"
#import "WMDataModelObserver-Protocol.h"
#import "WMDataModelProtocol-Protocol.h"
#import "WMSubscribeObserver-Protocol.h"

@class NSArray, NSString, ObserverContainer, WMSubscriptionDataItem, WMSubscriptionModel;

@interface WMSubModelSingleton : NSObject <WMDataModelProtocol, WMDataModelObserver, WMSubscribeObserver, NFWeexJSBridgeWemediaObserver>
{
    _Bool _usingLocalDefaultItems;
    _Bool _fetchingUpdateOnNotify;
    _Bool _fetchingUpdate;
    _Bool _everFetchedFullyUpdate;
    _Bool _usingSpeedReadingItem;
    NSString *_lastSubscribeId;
    WMSubscriptionModel *_subscriptionModel;
    ObserverContainer *_observerContainer;
    NSArray *_localDefaultItems;
    long long _usingSpeedReadMinItemCount;
    WMSubscriptionDataItem *_speedReadingItem;
}

+ (id)sharedInstance;
@property(retain, nonatomic) WMSubscriptionDataItem *speedReadingItem; // @synthesize speedReadingItem=_speedReadingItem;
@property(nonatomic) long long usingSpeedReadMinItemCount; // @synthesize usingSpeedReadMinItemCount=_usingSpeedReadMinItemCount;
@property(nonatomic) _Bool usingSpeedReadingItem; // @synthesize usingSpeedReadingItem=_usingSpeedReadingItem;
@property(retain, nonatomic) NSArray *localDefaultItems; // @synthesize localDefaultItems=_localDefaultItems;
@property(nonatomic) _Bool everFetchedFullyUpdate; // @synthesize everFetchedFullyUpdate=_everFetchedFullyUpdate;
@property(nonatomic) _Bool fetchingUpdate; // @synthesize fetchingUpdate=_fetchingUpdate;
@property(nonatomic) _Bool fetchingUpdateOnNotify; // @synthesize fetchingUpdateOnNotify=_fetchingUpdateOnNotify;
@property(retain, nonatomic) ObserverContainer *observerContainer; // @synthesize observerContainer=_observerContainer;
@property(retain, nonatomic) WMSubscriptionModel *subscriptionModel; // @synthesize subscriptionModel=_subscriptionModel;
@property(nonatomic) _Bool usingLocalDefaultItems; // @synthesize usingLocalDefaultItems=_usingLocalDefaultItems;
@property(copy, nonatomic) NSString *lastSubscribeId; // @synthesize lastSubscribeId=_lastSubscribeId;
- (void)fetchFullLatestItems;
- (void)fetchIncrementLatestItems;
- (void)fetchDataWhenItemLessThan:(long long)arg1;
- (void)unsubscribe:(id)arg1 from:(id)arg2 didSuccessWithUserId:(id)arg3;
- (void)subscribe:(id)arg1 from:(id)arg2 didSuccessWithUserId:(id)arg3;
- (void)subscribeItem:(id)arg1 didChangeFollowed:(_Bool)arg2;
- (void)onDataUpdate;
- (_Bool)updateUsingItems;
- (void)onMode:(id)arg1 itemsDidChange:(id)arg2;
- (void)onMode:(id)arg1 didFetchData:(unsigned long long)arg2 withError:(id)arg3;
- (void)onModeAllDataChanged:(id)arg1;
- (void)onMode:(id)arg1 didAddHistoryDataWithCount:(long long)arg2 allServerDataFetched:(_Bool)arg3;
- (void)onMode:(id)arg1 didAddLatestDataWithCount:(long long)arg2 allServerDataFetched:(_Bool)arg3 shouldUpdateAll:(_Bool)arg4;
- (_Bool)insertLatestDataItem:(id)arg1;
- (void)clearSubUpdateRedPoint;
- (_Bool)shouldShowSubUpdateRedPoint;
- (_Bool)commonSubIsMoreThanCount:(long long)arg1;
- (void)setItemCommonTypeOfAccount:(id)arg1;
- (void)removeItemWithWMId:(id)arg1;
- (void)removeObserver:(id)arg1;
- (void)addObserver:(id)arg1;
- (void)clearUnreadLetterTips:(id)arg1;
- (void)clearUnreadMessageTips:(id)arg1;
- (void)cancelRequestWithId:(id)arg1;
- (void)cancelAllFetchRequest;
- (void)removeAllItems;
- (long long)getCommonFollowedCount;
- (id)previewLastSubscriptionModelWithoutDefaultFollowed;
- (id)previewLastSubscriptionModel;
- (id)itemAtIndex:(long long)arg1;
- (long long)itemCount;
- (id)fetchDataWithType:(unsigned long long)arg1 limitCount:(long long)arg2;
- (_Bool)isUsingSpeedReadingItem;
- (void)fetchHistoryDataWithlimitCount:(long long)arg1;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

