//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "QNRootViewController.h"

#import "CQQHouseDataLoaderDelegate-Protocol.h"
#import "UITableViewDataSource-Protocol.h"
#import "UITableViewDelegate-Protocol.h"

@class CHouseListData, CQQHouseDataLoader, NSString, UITableView;

@interface CHouseListControllerBase : QNRootViewController <UITableViewDelegate, UITableViewDataSource, CQQHouseDataLoaderDelegate>
{
    _Bool isFailed;
    _Bool needFirstRowCut;
    _Bool _bUseEgoRerefresh;
    _Bool _bShowMore;
    _Bool _removeTopShadow;
    _Bool _isLoading;
    _Bool _isLoadingMore;
    int _listType;
    long long _maxListShowCount;
    long long _updateInterval;
    CQQHouseDataLoader *_dataLoader;
    CHouseListData *_listData;
    long long _currPage;
    UITableView *_tableView;
    NSString *_listTitle;
    struct CGRect _rootFrame;
}

@property(copy, nonatomic) NSString *listTitle; // @synthesize listTitle=_listTitle;
@property(nonatomic) _Bool isLoadingMore; // @synthesize isLoadingMore=_isLoadingMore;
@property(nonatomic) _Bool isLoading; // @synthesize isLoading=_isLoading;
@property(retain, nonatomic) UITableView *tableView; // @synthesize tableView=_tableView;
@property(nonatomic) long long currPage; // @synthesize currPage=_currPage;
@property(retain, nonatomic) CHouseListData *listData; // @synthesize listData=_listData;
@property(nonatomic) int listType; // @synthesize listType=_listType;
@property(retain, nonatomic) CQQHouseDataLoader *dataLoader; // @synthesize dataLoader=_dataLoader;
@property(nonatomic) _Bool removeTopShadow; // @synthesize removeTopShadow=_removeTopShadow;
@property(nonatomic) struct CGRect rootFrame; // @synthesize rootFrame=_rootFrame;
@property(nonatomic) _Bool bShowMore; // @synthesize bShowMore=_bShowMore;
@property(nonatomic) _Bool bUseEgoRerefresh; // @synthesize bUseEgoRerefresh=_bUseEgoRerefresh;
@property(nonatomic) long long updateInterval; // @synthesize updateInterval=_updateInterval;
@property(nonatomic) long long maxListShowCount; // @synthesize maxListShowCount=_maxListShowCount;
- (void).cxx_destruct;
- (void)onHouseReadFlagChanged:(id)arg1;
- (void)handleErrorViewTap:(id)arg1;
- (double)loadLastRefreshTimeFromDisk;
- (_Bool)writeRefreshTimeToDisk:(double)arg1;
- (void)cancelPreDownload;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (double)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (void)scrollViewDidEndDragging:(id)arg1 willDecelerate:(_Bool)arg2;
- (void)scrollViewDidScroll:(id)arg1;
- (void)scrollViewDidEndScrollingAnimation:(id)arg1;
- (void)scrollViewDidEndDecelerating:(id)arg1;
- (void)scrollViewWillBeginDragging:(id)arg1;
- (id)getRequestURL;
- (id)parseResponse:(id)arg1;
- (void)dataLoaderDownLoadDataFailed:(id)arg1;
- (void)dataLoaderDownLoadDataComplete:(id)arg1;
- (void)mergeNewData:(id)arg1;
- (void)scroll2Top:(_Bool)arg1;
- (void)refresh:(_Bool)arg1;
- (void)cancelAndCreateLoader;
- (_Bool)shouldNeedRefreshData;
- (_Bool)isLastUpdateInvalidated;
- (void)dismissWaitingView;
- (void)showWaitingView;
- (void)doneLoadingTableViewData:(_Bool)arg1;
- (void)doneLoadingTableViewDataWithoutUpate;
- (_Bool)isReachEnd;
- (void)_impDownLoad:(id)arg1;
- (void)getMore;
- (void)updateData;
- (_Bool)shouldAutorotateToInterfaceOrientation:(long long)arg1;
- (void)viewDidUnload;
- (void)controllerContentDidShowSucess:(id)arg1;
- (void)viewDidLoad;
- (void)viewWillAppear:(_Bool)arg1;
- (struct CGRect)preferredViewBounds;
- (void)loadView;
- (void)themeChanged:(long long)arg1;
- (void)dealloc;
- (id)initWithType:(int)arg1 frame:(struct CGRect)arg2;
- (id)initWithType:(int)arg1;
- (id)initWithInfo:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

