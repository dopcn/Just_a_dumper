//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

#import "IJKMediaPlayback-Protocol.h"

@class IJKAudioKit, IJKFFMoviePlayerMessagePool, IJKFFMrl, IJKSDLGLView, NSDate, NSDictionary, NSMutableArray, NSOperationQueue, NSString, UIView;
@protocol IJKMediaSegmentResolver;

@interface IJKFFMoviePlayerController : NSObject <IJKMediaPlayback>
{
    IJKFFMrl *_ffMrl;
    id <IJKMediaSegmentResolver> _segmentResolver;
    struct IjkMediaPlayer *_mediaPlayer;
    IJKSDLGLView *_glView;
    IJKFFMoviePlayerMessagePool *_msgPool;
    long long _videoWidth;
    long long _videoHeight;
    long long _sampleAspectRatioNumerator;
    long long _sampleAspectRatioDenominator;
    NSDate *_audioInterruptBeginTS;
    NSDate *_audioInterruptEndTS;
    _Bool _seeking;
    long long _bufferingTime;
    long long _bufferingPosition;
    _Bool _keepScreenOnWhilePlaying;
    _Bool _pauseInBackground;
    _Bool _isVideoToolboxOpen;
    NSMutableArray *_registeredNotifications;
    NSDictionary *_audioCodecContext;
    _Bool _isPreparedToPlay;
    _Bool _shouldAutoplay;
    _Bool _allowsMediaAirPlay;
    _Bool _airPlayMediaActive;
    _Bool _isDanmakuMediaAirPlay;
    _Bool _isShutdown;
    _Bool _notManageAudioSession;
    _Bool _notManageIdleTimer;
    UIView *_view;
    double currentPlaybackTime;
    double duration;
    double playableDuration;
    long long _bufferingProgress;
    long long _numberOfBytesTransferred;
    long long _playbackState;
    unsigned long long _loadState;
    long long _controlStyle;
    long long _scalingMode;
    NSDictionary *_mediaMeta;
    NSDictionary *_videoMeta;
    NSDictionary *_audioMeta;
    double _fpsInMeta;
    IJKAudioKit *_audioKit;
    NSOperationQueue *_queue;
}

+ (void)setLogLevel:(int)arg1;
+ (void)setLogReport:(_Bool)arg1;
@property(nonatomic) _Bool notManageIdleTimer; // @synthesize notManageIdleTimer=_notManageIdleTimer;
@property(nonatomic) _Bool notManageAudioSession; // @synthesize notManageAudioSession=_notManageAudioSession;
@property(retain, nonatomic) NSOperationQueue *queue; // @synthesize queue=_queue;
@property(nonatomic) _Bool isShutdown; // @synthesize isShutdown=_isShutdown;
@property(retain, nonatomic) IJKAudioKit *audioKit; // @synthesize audioKit=_audioKit;
@property(readonly, nonatomic) double fpsInMeta; // @synthesize fpsInMeta=_fpsInMeta;
@property(readonly, nonatomic) NSDictionary *audioMeta; // @synthesize audioMeta=_audioMeta;
@property(readonly, nonatomic) NSDictionary *videoMeta; // @synthesize videoMeta=_videoMeta;
@property(readonly, nonatomic) NSDictionary *mediaMeta; // @synthesize mediaMeta=_mediaMeta;
@property(nonatomic) long long scalingMode; // @synthesize scalingMode=_scalingMode;
@property(nonatomic) long long controlStyle; // @synthesize controlStyle=_controlStyle;
@property(readonly, nonatomic) unsigned long long loadState; // @synthesize loadState=_loadState;
@property(readonly, nonatomic) _Bool isPreparedToPlay; // @synthesize isPreparedToPlay=_isPreparedToPlay;
@property(readonly, nonatomic) long long numberOfBytesTransferred; // @synthesize numberOfBytesTransferred=_numberOfBytesTransferred;
@property(readonly, nonatomic) long long bufferingProgress; // @synthesize bufferingProgress=_bufferingProgress;
@property(readonly, nonatomic) UIView *view; // @synthesize view=_view;
- (void).cxx_destruct;
- (void)applicationWillTerminate;
- (void)applicationDidEnterBackground;
- (void)applicationWillResignActive;
- (void)applicationDidBecomeActive;
- (void)applicationWillEnterForeground;
- (void)audioSessionInterrupt:(id)arg1;
- (void)unregisterApplicationObserverAll;
- (void)unregisterApplicationObservers;
- (void)registerApplicationObservers;
- (void)setMaxBufferSize:(int)arg1;
- (void)setPlayerDisableVideo;
- (void)setPlayerOptionIntValue:(long long)arg1 forKey:(id)arg2;
- (void)setSwsOptionIntValue:(long long)arg1 forKey:(id)arg2;
- (void)setCodecOptionIntValue:(long long)arg1 forKey:(id)arg2;
- (void)setFormatOptionIntValue:(long long)arg1 forKey:(id)arg2;
- (void)setPlayerOptionValue:(id)arg1 forKey:(id)arg2;
- (void)setSwsOptionValue:(id)arg1 forKey:(id)arg2;
- (void)setCodecOptionValue:(id)arg1 forKey:(id)arg2;
- (void)setFormatOptionValue:(id)arg1 forKey:(id)arg2;
@property(nonatomic) _Bool isDanmakuMediaAirPlay; // @synthesize isDanmakuMediaAirPlay=_isDanmakuMediaAirPlay;
@property(readonly, nonatomic) _Bool airPlayMediaActive; // @synthesize airPlayMediaActive=_airPlayMediaActive;
@property(nonatomic) _Bool allowsMediaAirPlay; // @synthesize allowsMediaAirPlay=_allowsMediaAirPlay;
- (id)obtainMessage;
- (void)postEvent:(id)arg1;
@property(readonly, nonatomic) double fpsAtOutput;
- (id)thumbnailImageAtCurrentTime;
- (id)thumbnailImageAtTime:(double)arg1 timeOption:(long long)arg2;
@property(readonly, nonatomic) double playableDuration; // @synthesize playableDuration;
@property(readonly, nonatomic) double duration; // @synthesize duration;
@property(nonatomic) double currentPlaybackTime; // @synthesize currentPlaybackTime;
@property(readonly, nonatomic) long long playbackState; // @synthesize playbackState=_playbackState;
- (void)shutdownClose:(id)arg1;
- (void)shutdownWaitStop:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;
- (void)shutdownWaitStop:(id)arg1 withDetectCompletion:(CDUnknownBlockType)arg2;
- (void)shutdownWithDetectCompletion:(CDUnknownBlockType)arg1;
- (void)shutdownWithCompletion:(CDUnknownBlockType)arg1;
- (void)shutdown;
- (void)setOptionIntValue:(long long)arg1 forKey:(id)arg2 ofCategory:(int)arg3;
- (void)setOptionValue:(id)arg1 forKey:(id)arg2 ofCategory:(int)arg3;
- (_Bool)isVideoToolboxOpen;
- (void)setPauseInBackground:(_Bool)arg1;
- (_Bool)isPlaying;
- (void)stop;
- (void)pause;
- (void)playFromAudioInterrupt;
- (void)play;
- (void)prepareToPlay;
@property(nonatomic) _Bool shouldAutoplay; // @synthesize shouldAutoplay=_shouldAutoplay;
- (void)dealloc;
- (float)playerSpeedRate;
- (void)setDumpFilename:(id)arg1;
- (void)setIgnoreVTDErr:(_Bool)arg1;
- (void)setDelayDestroy:(_Bool)arg1;
- (void)setIJKPlayOption:(int)arg1 nextWater:(int)arg2 checkTick:(int)arg3;
- (void)setLoop:(int)arg1;
- (void)setPlaybackOnly:(_Bool)arg1;
- (void)mlSetLowerLatency:(unsigned char)arg1 withBase:(int)arg2 withSpeedTrigger:(int)arg3 withDropTrigger:(int)arg4 withSpeedRate:(double)arg5;
- (void)setSpeedControl:(int)arg1 fastDur:(int)arg2 fastRate:(float)arg3 veryfastDur:(int)arg4 veryfastRate:(float)arg5;
- (void)setPlayerSpeedRate:(float)arg1;
- (unsigned long long)currentPlaybackPts;
- (void)setAudioPlaybackVolume:(float)arg1;
- (void)switchAudioCallback:(_Bool)arg1;
- (void)recordAudio:(_Bool)arg1;
- (double)getVideoBufferDurationInSec;
- (struct CGSize)getVideoSize;
- (id)getH264SEI;
- (unsigned int)getStreamCount;
- (unsigned long long)getFirstAudioRenderTime;
- (unsigned long long)getFirstVideoRenderTime;
- (unsigned long long)getFirstAudioDecodeTime;
- (unsigned long long)getFirstVideoDecodeTime;
- (unsigned long long)getFirstAudioReceiveTime;
- (unsigned long long)getFirstVideoReceiveTime;
- (unsigned long long)getStreamMetaTime;
- (int)getHttpDetectInfoWithHttpDetecter:(struct HttpDetecter *)arg1;
- (unsigned long long)getTcpConnectTime;
- (unsigned long long)getMetaTime;
- (long long)getVideoRenderCount;
- (long long)getAudioRenderSize;
- (long long)getVideoDecodeCount;
- (long long)getAudioDecodeSize;
- (long long)getVideoCacheDuration;
- (long long)getAudioCacheDuration;
- (long long)getVideoReceiveSize;
- (long long)getAudioReceiveSize;
- (long long)getStreamReceiveSize;
- (id)getServerIpAddr;
- (void)setMute:(_Bool)arg1;
- (void)setScreenOn:(_Bool)arg1;
@property(readonly, nonatomic) NSDictionary *mediaMetadata;
- (id)initWithContentURLString:(id)arg1 withConfigs:(int)arg2 withSegmentResolver:(id)arg3 withView:(id)arg4;
- (id)initWithContentURLString:(id)arg1 withOptions:(id)arg2 withSegmentResolver:(id)arg3;
- (id)initWithContentURL:(id)arg1 withOptions:(id)arg2 withSegmentResolver:(id)arg3;
- (id)initWithContentURL:(id)arg1 withOptions:(id)arg2;
- (id)resourceLoader;
- (void)setResourceLoader:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

