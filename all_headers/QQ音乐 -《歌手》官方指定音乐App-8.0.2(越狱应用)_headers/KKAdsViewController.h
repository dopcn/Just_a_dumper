//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <UIKit/UIViewController.h>

#import "KKAdsBottomViewDelegate-Protocol.h"
#import "TADContainerViewDelegate-Protocol.h"
#import "TADMediaConnectionDelegate-Protocol.h"
#import "TADMediaViewControllerDelegate-Protocol.h"
#import "UIAlertViewDelegate-Protocol.h"
#import "UIGestureRecognizerDelegate-Protocol.h"

@class KKAdsBottomView, KKMediaRootViewController, NSArray, NSString, NSTimer, QLSImageView, QQMediaPlayerController, TADContainerView, TADMediaConnection, TADMediaViewController, UIAlertView, UIButton, UIImageView;
@protocol KKAdsDelegate;

@interface KKAdsViewController : UIViewController <UIAlertViewDelegate, TADMediaConnectionDelegate, TADMediaViewControllerDelegate, TADContainerViewDelegate, UIGestureRecognizerDelegate, KKAdsBottomViewDelegate>
{
    UIButton *_backButton;
    UIButton *_btnShare;
    KKAdsBottomView *_adsBottomView;
    TADMediaConnection *_tadMediaConnection;
    TADMediaViewController *_mediaViewController;
    UIImageView *_imgViewLogo;
    QLSImageView *_holdingView;
    TADContainerView *_pauseAdView;
    NSArray *_mediaItems;
    NSTimer *_waitingTimer;
    NSTimer *_playerProgressTimer;
    double _lastPlaybackTime;
    double _cacheWaitingTime;
    _Bool _isAdsNeedToClean;
    _Bool _isAdVideoPaused;
    _Bool _isInCacheMode;
    _Bool _isInFullscreen;
    _Bool _isAdLandingViewPresented;
    _Bool _shouldNotPlay;
    _Bool _hasNotifyLoadFinish;
    QQMediaPlayerController *_player;
    double _origineVolume;
    double _previousVolume;
    double _totalPlayDuration;
    UIAlertView *_notPermitSkipAdsAlert;
    _Bool _palyerDidChange;
    _Bool _isAdDataAvailable;
    _Bool _isLoadingData;
    _Bool _isAdPlaying;
    _Bool _isPauseAdShowing;
    _Bool _forHotspotReport;
    _Bool _shouldAutoPlay;
    _Bool _isShowPauseAdsWhenReplay;
    int _playAdMode;
    int _adsType;
    id <KKAdsDelegate> _delegate;
    long long _closeAdAction;
    NSArray *_adURLs;
    NSArray *_adDurations;
    NSString *_previewPosterImageUrl;
    KKMediaRootViewController *_mainCtrl;
}

@property(nonatomic) _Bool isShowPauseAdsWhenReplay; // @synthesize isShowPauseAdsWhenReplay=_isShowPauseAdsWhenReplay;
@property(nonatomic) _Bool shouldAutoPlay; // @synthesize shouldAutoPlay=_shouldAutoPlay;
@property(nonatomic) KKMediaRootViewController *mainCtrl; // @synthesize mainCtrl=_mainCtrl;
@property(retain, nonatomic) NSString *previewPosterImageUrl; // @synthesize previewPosterImageUrl=_previewPosterImageUrl;
@property(nonatomic) int adsType; // @synthesize adsType=_adsType;
@property(nonatomic) _Bool forHotspotReport; // @synthesize forHotspotReport=_forHotspotReport;
@property(retain, nonatomic) NSArray *adDurations; // @synthesize adDurations=_adDurations;
@property(retain, nonatomic) NSArray *adURLs; // @synthesize adURLs=_adURLs;
@property(readonly, nonatomic) _Bool isInCacheMode; // @synthesize isInCacheMode=_isInCacheMode;
@property(nonatomic) int playAdMode; // @synthesize playAdMode=_playAdMode;
@property(retain, nonatomic) UIButton *backButton; // @synthesize backButton=_backButton;
@property(nonatomic) long long closeAdAction; // @synthesize closeAdAction=_closeAdAction;
@property(readonly, nonatomic) _Bool isAdLandingViewPresented; // @synthesize isAdLandingViewPresented=_isAdLandingViewPresented;
@property(readonly, nonatomic) _Bool isPauseAdShowing; // @synthesize isPauseAdShowing=_isPauseAdShowing;
@property(readonly, nonatomic) _Bool isAdVideoPaused; // @synthesize isAdVideoPaused=_isAdVideoPaused;
@property(readonly, nonatomic) _Bool isAdPlaying; // @synthesize isAdPlaying=_isAdPlaying;
@property(readonly, nonatomic) _Bool isLoadingData; // @synthesize isLoadingData=_isLoadingData;
@property(readonly, nonatomic) _Bool isAdDataAvailable; // @synthesize isAdDataAvailable=_isAdDataAvailable;
@property(nonatomic) id <KKAdsDelegate> delegate; // @synthesize delegate=_delegate;
- (id)pageDescription;
- (void)shareClicked:(id)arg1;
- (void)onAppDidBecomeActive:(id)arg1;
- (void)onAppWillResignActive:(id)arg1;
- (void)fullscreenClicked:(id)arg1;
- (void)playBtnClicked:(id)arg1;
- (void)rePlayCurrentVideoUsingPlayerType:(int)arg1;
- (id)getChangeAvplayerToSelfPlayerInfo;
- (void)sendSwitchPlayerEventMsg:(id)arg1 eventid:(int)arg2 currenttime:(CDStruct_1b6d18a9)arg3;
- (void)sendMediaPlayerLog:(int)arg1 withLogInfo:(id)arg2;
- (void)mediaPlayerDidExitFullscreen:(id)arg1;
- (void)mediaPlayerDidEnterFullscreen:(id)arg1;
- (void)mediaPlayerCheckMediaUrlError:(id)arg1 withError:(id)arg2 withFileCacheOrder:(long long)arg3 withIsCurrentFile:(_Bool)arg4;
- (void)mediaPlayerRequestStateChange:(id)arg1 withError:(id)arg2 withFileCacheOrder:(long long)arg3 withIsCurrentFile:(_Bool)arg4;
- (void)mediaPlayerPlaybackDidFinish:(id)arg1;
- (void)mediaPlayerPlayedItem:(long long)arg1;
- (void)mediaPlayerPlaybackStateDidChange:(id)arg1 withError:(id)arg2 withFileCacheOrder:(long long)arg3 withIsCurrentFile:(_Bool)arg4;
- (void)mediaPlayerLoadStateDidChange:(id)arg1 withError:(id)arg2 withFileCacheOrder:(long long)arg3 withIsCurrentFile:(_Bool)arg4;
- (void)mediaPlayerNaturalSizeAvailable:(id)arg1;
- (void)containerView:(id)arg1 didFailToReceiveAdWithError:(id)arg2;
- (void)containerViewDidLoadAd:(id)arg1;
- (void)containerLandingViewDidDismiss;
- (void)containerLandingViewWillDismiss;
- (void)containerLandingViewDidPresent;
- (void)containerLandingViewWillPresent;
- (_Bool)containerView:(id)arg1 shouldOpenURL:(id)arg2;
- (void)containerViewCloseButtonPressed:(id)arg1;
- (void)skipAdPlay;
- (void)continueAdPlay;
- (void)pauseAdPlay;
- (void)adLandingViewDidDismiss;
- (void)adLandingViewWillDismiss;
- (void)adLandingViewDidPresent;
- (void)adLandingViewWillPresent:(_Bool)arg1;
- (void)adLandingViewWillPresent;
- (_Bool)adLandingViewShouldPresent;
- (void)setAdMediaViewNoMuted:(_Bool)arg1;
- (void)adMediaViewWillTurnVolume:(_Bool)arg1;
- (void)adMediaViewWillExpand;
- (void)didPresentAlertView:(id)arg1;
- (void)willPresentAlertView:(id)arg1;
- (void)adPlaybackDidSkip:(id)arg1;
- (void)setAdPlayerMuted:(_Bool)arg1;
- (void)updateClientViewController;
- (id)getCurrentVideoScreenShot;
- (void)updateMiniViewUI;
- (void)updateWeakenAdMode;
- (_Bool)isShowingAdsNotPermitSkippedView;
- (void)alertView:(id)arg1 clickedButtonAtIndex:(long long)arg2;
- (void)hollywoodBtnClicked;
- (void)adMediaViewWillSkipAd;
- (void)adMediaViewDidPresent;
- (void)connetionDidFailedWithError:(id)arg1;
- (void)connetionDidReceiveMedias:(id)arg1;
- (void)didSingleTap:(id)arg1;
- (void)didDoubleTap:(id)arg1;
- (_Bool)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;
- (void)backBtnClicked:(id)arg1;
@property(readonly, nonatomic) NSString *currentAdOrderID;
- (void)onAdsStateNotify:(int)arg1;
- (void)cleanAdInternal;
- (void)cleanAdWithTADErrorCode:(long long)arg1;
- (void)cleanAd;
- (void)adjustAdView:(id)arg1 fullscreenMode:(_Bool)arg2;
- (void)showPauseAd:(id)arg1;
- (void)flushPlayerProgress:(id)arg1;
- (void)onAdsPlayResult:(long long)arg1;
- (void)restorePlayerVolume;
- (void)minusPlayerVolume;
- (void)closeAdMediaPlayer;
- (void)stopPlayAd;
- (void)playAdIfInCacheMode:(_Bool)arg1;
- (void)setAdsTitle:(id)arg1;
- (void)updateVideoDuration:(double)arg1;
- (void)viewWillLayoutSubviews;
- (_Bool)showAndPlayAd:(id)arg1 fullscreenMode:(_Bool)arg2 cacheMode:(_Bool)arg3;
- (void)onWaitingTimeOut;
- (void)stopWaitingTimer;
- (void)startWaitingTimer;
- (void)requestPauseAdWithVid:(id)arg1 cid:(id)arg2 videoType:(long long)arg3 typeID:(long long)arg4 playAdMode:(int)arg5;
- (_Bool)requestAdWithVid:(id)arg1 cid:(id)arg2 videoType:(long long)arg3 format:(id)arg4 typeID:(long long)arg5 playAdMode:(int)arg6;
- (void)didClosedAdsPromptView:(id)arg1;
- (void)didReceiveMemoryWarning;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (void)loadView;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

