//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "LeoCoreOutput.h"

#import "LeoCoreInput-Protocol.h"

@class LeoCoreOpenGLESProgram;

@interface LeoCoreFilter : LeoCoreOutput <LeoCoreInput>
{
    int filterPositionAttribute;
    int filterInputTextureCoordinateAttribute;
    int filterInputTextureUniform;
    int filterInputTextureUniform2;
    unsigned int filterFrameBuffer;
    unsigned int _filterSourceTexture;
    unsigned int _filterSourceTexture2;
    unsigned int _filterSourceTexture3;
    LeoCoreOpenGLESProgram *_program;
    struct CGSize _currentFilterSize;
}

@property(nonatomic) struct CGSize currentFilterSize; // @synthesize currentFilterSize=_currentFilterSize;
@property(retain, nonatomic) LeoCoreOpenGLESProgram *program; // @synthesize program=_program;
@property(nonatomic) unsigned int filterSourceTexture3; // @synthesize filterSourceTexture3=_filterSourceTexture3;
@property(nonatomic) unsigned int filterSourceTexture2; // @synthesize filterSourceTexture2=_filterSourceTexture2;
@property(nonatomic) unsigned int filterSourceTexture; // @synthesize filterSourceTexture=_filterSourceTexture;
- (void).cxx_destruct;
- (struct CGSize)maximumOutputSize;
- (void)setInputSize:(struct CGSize)arg1;
- (long long)nextAvailableTextureIndex;
- (void)setInputTexture:(unsigned int)arg1 atIndex:(long long)arg2;
- (void)newFrameReady;
- (void)renderToTextureWithVertices:(const float *)arg1 textureCoordinates:(const float *)arg2;
- (void)setFilterFBO;
- (void)destroyFilterFBO;
- (void)createFilterFBO;
- (struct CGSize)sizeOfFBO;
- (void)setFloatVector4:(float *)arg1 forUniform:(id)arg2;
- (void)setFloatVector3:(float *)arg1 forUniform:(id)arg2;
- (void)setPoint:(struct CGPoint)arg1 forUniform:(id)arg2;
- (void)setSize:(struct CGSize)arg1 forUniform:(id)arg2;
- (void)setFloat:(float)arg1 forUniform:(id)arg2;
- (void)setInteger:(int)arg1 forUniform:(id)arg2;
- (id)imageByFilteringImage:(id)arg1;
- (id)imageFromCurrentlyProcessOutput;
- (void)dealloc;
- (id)initWithFragmentShaderFile:(id)arg1;
- (id)initWithFragmentShader:(id)arg1;

@end

