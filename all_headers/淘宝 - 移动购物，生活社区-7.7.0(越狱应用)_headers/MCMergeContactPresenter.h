//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "MCBasePresenter.h"

#import "MCMergeContactCustomInterface-Protocol.h"
#import "MCMergeContactModelDelegate-Protocol.h"
#import "MCMergeContactViewDelegate-Protocol.h"
#import "MCRunLoopObserverDelegate-Protocol.h"

@class MCRunLoopObserver, NSMutableArray, NSString, UIView;
@protocol MCMergeContactModelProtocol, MCMergeContactViewProtocol;

@interface MCMergeContactPresenter : MCBasePresenter <MCRunLoopObserverDelegate, MCMergeContactCustomInterface, MCMergeContactViewDelegate, MCMergeContactModelDelegate>
{
    _Bool _needRefreshDataAndUI;
    UIView<MCMergeContactViewProtocol> *_mergeContactView;
    id <MCMergeContactModelProtocol> _mergeContactModel;
    NSString *_pageName;
    NSString *_moduleSPM_A;
    NSString *_moduleSPM_B;
    CDUnknownBlockType _clickHandler;
    CDUnknownBlockType _clickTraceHandler;
    NSMutableArray *_cellObjectArray;
    UIView *_headerView;
    UIView *_emptyView;
    unsigned long long _lastDeleteTime;
    MCRunLoopObserver *_runLoopObserver;
    NSString *_filterKey;
}

@property(copy, nonatomic) NSString *filterKey; // @synthesize filterKey=_filterKey;
@property(nonatomic) _Bool needRefreshDataAndUI; // @synthesize needRefreshDataAndUI=_needRefreshDataAndUI;
@property(retain, nonatomic) MCRunLoopObserver *runLoopObserver; // @synthesize runLoopObserver=_runLoopObserver;
@property(nonatomic) unsigned long long lastDeleteTime; // @synthesize lastDeleteTime=_lastDeleteTime;
@property(retain, nonatomic) UIView *emptyView; // @synthesize emptyView=_emptyView;
@property(retain, nonatomic) UIView *headerView; // @synthesize headerView=_headerView;
@property(retain, nonatomic) NSMutableArray *cellObjectArray; // @synthesize cellObjectArray=_cellObjectArray;
@property(copy, nonatomic) CDUnknownBlockType clickTraceHandler; // @synthesize clickTraceHandler=_clickTraceHandler;
@property(copy, nonatomic) CDUnknownBlockType clickHandler; // @synthesize clickHandler=_clickHandler;
@property(retain, nonatomic) NSString *moduleSPM_B; // @synthesize moduleSPM_B=_moduleSPM_B;
@property(retain, nonatomic) NSString *moduleSPM_A; // @synthesize moduleSPM_A=_moduleSPM_A;
@property(retain, nonatomic) NSString *pageName; // @synthesize pageName=_pageName;
@property(retain, nonatomic) id <MCMergeContactModelProtocol> mergeContactModel; // @synthesize mergeContactModel=_mergeContactModel;
@property(retain, nonatomic) UIView<MCMergeContactViewProtocol> *mergeContactView; // @synthesize mergeContactView=_mergeContactView;
- (void).cxx_destruct;
- (id)args1WithPageName:(id)arg1 actionName:(id)arg2;
- (id)argsWithCellObject:(id)arg1;
- (void)markCell:(id)arg1 withCellObject:(id)arg2 tableView:(id)arg3 indexPath:(id)arg4;
- (void)deleteCell:(id)arg1 withCellObject:(id)arg2 tableView:(id)arg3 indexPath:(id)arg4;
- (void)sortCellModels:(id)arg1;
- (id)recentListCellModelFromSessionAdapters:(id)arg1;
- (void)refreshDataAndUI;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (id)getView;
- (void)runloopBeforeWaitingWithObserver:(id)arg1;
- (void)merageSession:(id)arg1 fetchResult:(id)arg2;
- (void)sessionChange;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 editActionsForRowAtIndexPath:(id)arg2;
- (double)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;
- (_Bool)tableView:(id)arg1 canEditRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (id)tableFooterViewForTableView:(id)arg1;
- (id)tableHeaderViewForTableView:(id)arg1;
- (void)addDataFilter:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1 baseVC:(id)arg2 bizKey:(id)arg3 pageName:(id)arg4 moduleSPM_A:(id)arg5 moduleSPM_B:(id)arg6 filterKey:(id)arg7;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

