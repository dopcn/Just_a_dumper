//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class ArtistBIgPictureParam, ArtistBigPictureCachedFileManager, ArtistBigPictureDBManager, ArtistBigPictureDownloadTask, ArtistBigPictureHttpRequest, BigPicEntity, CustomClock;

@interface ArtistBIgPictureSource : NSObject
{
    int _urlIndex;
    ArtistBigPictureDownloadTask *_curTask;
    ArtistBigPictureDownloadTask *_waitingTask;
    ArtistBigPictureHttpRequest *_httpRequest;
    ArtistBIgPictureParam *_callbackParam;
    ArtistBigPictureCachedFileManager *_cachedPictureMgr;
    ArtistBigPictureDBManager *_dbManager;
    BigPicEntity *_artistPictureInfo;
    long long _start_time_info;
    long long _start_time_resource;
    CustomClock *_customClock;
}

+ (id)instance;
@property(retain, nonatomic) CustomClock *customClock; // @synthesize customClock=_customClock;
@property(nonatomic) long long start_time_resource; // @synthesize start_time_resource=_start_time_resource;
@property(nonatomic) long long start_time_info; // @synthesize start_time_info=_start_time_info;
@property(nonatomic) int urlIndex; // @synthesize urlIndex=_urlIndex;
@property(retain, nonatomic) BigPicEntity *artistPictureInfo; // @synthesize artistPictureInfo=_artistPictureInfo;
@property(retain, nonatomic) ArtistBigPictureDBManager *dbManager; // @synthesize dbManager=_dbManager;
@property(retain, nonatomic) ArtistBigPictureCachedFileManager *cachedPictureMgr; // @synthesize cachedPictureMgr=_cachedPictureMgr;
@property(retain, nonatomic) ArtistBIgPictureParam *callbackParam; // @synthesize callbackParam=_callbackParam;
@property(retain, nonatomic) ArtistBigPictureHttpRequest *httpRequest; // @synthesize httpRequest=_httpRequest;
@property(retain, nonatomic) ArtistBigPictureDownloadTask *waitingTask; // @synthesize waitingTask=_waitingTask;
@property(retain, nonatomic) ArtistBigPictureDownloadTask *curTask; // @synthesize curTask=_curTask;
- (void)onPictureComplete:(id)arg1;
- (void)onInfoComplete:(id)arg1;
- (id)fullBigPicPathWithFile:(id)arg1;
- (void)checkAndStartWaitingTaskConfirmUserCellular:(_Bool)arg1;
- (void)checkAndStartWaitingTask;
- (void)startCurTaskConfirmUserCellular:(_Bool)arg1;
- (int)getNextPictureIndexNeedDownload:(int)arg1;
- (void)performActionOnDelegateWithCode:(int)arg1 onComplete:(id)arg2 fileName:(id)arg3;
- (id)MD5FileName:(id)arg1;
- (_Bool)artistInfoExpired:(id)arg1;
- (id)loadBigPicEntityWithKeyword:(id)arg1 forMediaItem:(id)arg2;
- (id)searchFirstPicture:(id)arg1 forMediaItem:(id)arg2 tagSource:(int)arg3;
- (void)cancelPictureRequest:(id)arg1;
- (int)requestPicture:(id)arg1 forMediaItem:(id)arg2 ridPreferred:(_Bool)arg3 isAuto:(_Bool)arg4 tagSource:(int)arg5 target:(id)arg6 action:(SEL)arg7 confirmUseCellular:(_Bool)arg8;
- (int)requestPicture:(id)arg1 forMediaItem:(id)arg2 ridPreferred:(_Bool)arg3 isAuto:(_Bool)arg4 tagSource:(int)arg5 target:(id)arg6 action:(SEL)arg7;
- (id)init;
- (void)dealloc;

@end

