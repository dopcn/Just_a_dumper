//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "KSResumableFileDownloadItem-Protocol.h"
#import "NSCoding-Protocol.h"

@class KSKRCxLyrics, KSLocalMusicDynamicPath, KSMusicBeatsDetail, KSResumableDownloadProgress, NSArray, NSData, NSError, NSNumber, NSString, UIImage;

@interface KSMusicItem : NSObject <KSResumableFileDownloadItem, NSCoding>
{
    _Bool _expectFreeTraffic;
    _Bool _hasBeat;
    _Bool _ks_isOffline;
    int _duration;
    NSData *_downloadResumeData;
    KSResumableDownloadProgress *_downloadProgress;
    unsigned long long _downloadStatus;
    NSError *_downloadError;
    unsigned long long _type;
    NSString *_id;
    NSString *_name;
    NSString *_image;
    NSArray *_imageUrls;
    NSString *_lrc;
    NSArray *_lrcUrls;
    NSString *_url;
    NSArray *_audioUrls;
    NSString *_fileType;
    NSString *_fileName;
    NSString *_localFileType;
    KSKRCxLyrics *_lyrics;
    KSMusicBeatsDetail *_beat;
    NSString *_artist;
    NSString *_avatarUrl;
    NSArray *_avatarUrls;
    NSString *_auditionUrl;
    long long _chorus;
    id _artistId;
    NSString *_remix;
    NSArray *_remixUrls;
    NSString *_mixFileType;
    long long _begin;
    long long _end;
    long long _adjust;
    NSString *_desc;
    UIImage *_localMusicImage;
    NSNumber *_lastModifyTimeStamp;
    unsigned long long _musicRecordType;
    NSString *_channelID;
    NSString *_musicName;
    NSNumber *_instrumental;
    NSString *_expTag;
    unsigned long long _ks_state;
    NSString *_ks_llsid;
    NSString *_ks_keyword;
    NSString *_ks_ussid;
    KSLocalMusicDynamicPath *_localFilePathInfo;
    CDStruct_e83c9415 _playRange;
}

+ (Class)mj_realClassWithKeyValues:(id)arg1;
+ (id)mj_ignoredPropertyNames;
+ (id)mj_ignoredCodingPropertyNames;
+ (id)keyPathsForValuesAffectingArtistUser;
+ (id)musicItemFromMPMediaItem:(id)arg1;
+ (id)musicItemFromAVURLAsset:(id)arg1;
+ (id)musicItemWithMovieInfo:(id)arg1;
@property(retain, nonatomic) KSLocalMusicDynamicPath *localFilePathInfo; // @synthesize localFilePathInfo=_localFilePathInfo;
@property(copy, nonatomic) NSString *ks_ussid; // @synthesize ks_ussid=_ks_ussid;
@property(copy, nonatomic) NSString *ks_keyword; // @synthesize ks_keyword=_ks_keyword;
@property(copy, nonatomic) NSString *ks_llsid; // @synthesize ks_llsid=_ks_llsid;
@property(nonatomic) unsigned long long ks_state; // @synthesize ks_state=_ks_state;
@property(nonatomic) _Bool ks_isOffline; // @synthesize ks_isOffline=_ks_isOffline;
@property(retain, nonatomic) NSString *expTag; // @synthesize expTag=_expTag;
@property(retain, nonatomic) NSNumber *instrumental; // @synthesize instrumental=_instrumental;
@property(retain, nonatomic) NSString *musicName; // @synthesize musicName=_musicName;
@property(retain, nonatomic) NSString *channelID; // @synthesize channelID=_channelID;
@property(nonatomic) unsigned long long musicRecordType; // @synthesize musicRecordType=_musicRecordType;
@property(retain, nonatomic) NSNumber *lastModifyTimeStamp; // @synthesize lastModifyTimeStamp=_lastModifyTimeStamp;
@property(retain, nonatomic) UIImage *localMusicImage; // @synthesize localMusicImage=_localMusicImage;
@property(retain, nonatomic) NSString *desc; // @synthesize desc=_desc;
@property(nonatomic) long long adjust; // @synthesize adjust=_adjust;
@property(nonatomic) long long end; // @synthesize end=_end;
@property(nonatomic) long long begin; // @synthesize begin=_begin;
@property(retain, nonatomic) NSString *mixFileType; // @synthesize mixFileType=_mixFileType;
@property(retain, nonatomic) NSArray *remixUrls; // @synthesize remixUrls=_remixUrls;
@property(retain, nonatomic) NSString *remix; // @synthesize remix=_remix;
@property(retain, nonatomic) id artistId; // @synthesize artistId=_artistId;
@property(nonatomic) long long chorus; // @synthesize chorus=_chorus;
@property(retain, nonatomic) NSString *auditionUrl; // @synthesize auditionUrl=_auditionUrl;
@property(retain, nonatomic) NSArray *avatarUrls; // @synthesize avatarUrls=_avatarUrls;
@property(retain, nonatomic) NSString *avatarUrl; // @synthesize avatarUrl=_avatarUrl;
@property(retain, nonatomic) NSString *artist; // @synthesize artist=_artist;
@property(retain, nonatomic) KSMusicBeatsDetail *beat; // @synthesize beat=_beat;
@property(nonatomic) _Bool hasBeat; // @synthesize hasBeat=_hasBeat;
@property(retain, nonatomic) KSKRCxLyrics *lyrics; // @synthesize lyrics=_lyrics;
@property(nonatomic) CDStruct_e83c9415 playRange; // @synthesize playRange=_playRange;
@property(retain, nonatomic) NSString *localFileType; // @synthesize localFileType=_localFileType;
@property(retain, nonatomic) NSString *fileName; // @synthesize fileName=_fileName;
@property(retain, nonatomic) NSString *fileType; // @synthesize fileType=_fileType;
@property(nonatomic) _Bool expectFreeTraffic; // @synthesize expectFreeTraffic=_expectFreeTraffic;
@property(retain, nonatomic) NSArray *audioUrls; // @synthesize audioUrls=_audioUrls;
@property(retain, nonatomic) NSString *url; // @synthesize url=_url;
@property(retain, nonatomic) NSArray *lrcUrls; // @synthesize lrcUrls=_lrcUrls;
@property(retain, nonatomic) NSString *lrc; // @synthesize lrc=_lrc;
@property(nonatomic) int duration; // @synthesize duration=_duration;
@property(retain, nonatomic) NSArray *imageUrls; // @synthesize imageUrls=_imageUrls;
@property(retain, nonatomic) NSString *image; // @synthesize image=_image;
@property(retain, nonatomic) NSString *name; // @synthesize name=_name;
@property(retain, nonatomic) NSString *id; // @synthesize id=_id;
@property(nonatomic) unsigned long long type; // @synthesize type=_type;
@property(retain, nonatomic) NSError *downloadError; // @synthesize downloadError=_downloadError;
@property unsigned long long downloadStatus; // @synthesize downloadStatus=_downloadStatus;
@property(retain, nonatomic) KSResumableDownloadProgress *downloadProgress; // @synthesize downloadProgress=_downloadProgress;
@property(retain, nonatomic) NSData *downloadResumeData; // @synthesize downloadResumeData=_downloadResumeData;
- (void).cxx_destruct;
- (id)_anyUrlFromCDNs:(id)arg1 oldUrl:(id)arg2;
- (id)anyAvatarUrl;
- (id)anyImageUrl;
- (id)anyBeatsUrl;
- (id)anyLrcUrl;
- (id)anyRemixUrl;
- (id)anyUrl;
- (id)_audioCacheNameWithURL:(id)arg1;
- (id)mixCacheKey;
- (id)cacheKey;
- (void)ensureMusicURL:(CDUnknownBlockType)arg1 onError:(CDUnknownBlockType)arg2;
- (id)downloadRemoteUrl;
- (id)init;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)setResource:(id)arg1;
- (id)resource;
- (id)artistUser;
- (_Bool)ks_isUnavailableLocal;
- (id)movieInfo;
- (id)oldTrimmedMixMusicCachedKey;
- (id)oldMixMusicCachedKey;
- (id)oldTrimmedMusicCachedKey;
- (id)oldMusicCachedKey;
- (id)oldLyricsCachedKey;
- (id)_md5FileNameFromUrl:(id)arg1 withExtension:(id)arg2;
- (id)trimmedMixMusicCacheName;
- (id)mixMusicCacheName;
- (id)trimmedMusicCacheFileName;
- (id)musicCacheFileName;
- (id)beatsCacheFileName;
- (id)lyricsCacheFileName;
- (id)trimmedMixMusicCachedKey;
- (id)mixMusicCachedKey;
- (id)trimmedMusicCachedKey;
- (id)musicCachedKey;
- (id)beatsCachedKey;
- (id)lyricsCachedKey;
- (id)itemCachedKey;
- (id)cachedDirectory;
- (id)cachedDirectoryName;
- (void)loadAuthorInfosWithCompleteBlock:(CDUnknownBlockType)arg1;

@end

