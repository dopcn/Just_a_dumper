//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <CFNetwork/NSURLConnection.h>

#import "NSStreamDelegate-Protocol.h"
#import "NSURLAuthenticationChallengeSender-Protocol.h"

@class ALCFDataDecompressor, ALHTTPAuthenticationChallenge, NSError, NSHTTPURLResponse, NSOperationQueue, NSRecursiveLock, NSRunLoop, NSString, NSThread, NSTimer, NSURLRequest;

@interface ALCFURLConnection : NSURLConnection <NSStreamDelegate, NSURLAuthenticationChallengeSender>
{
    struct __CFHTTPMessage *cfReqeust;
    struct __CFReadStream *cfReadStream;
    _Bool _connectionCancel;
    _Bool _connectionFinished;
    _Bool _hasPassSendRequestDelegate;
    _Bool _shouldUseCredentialStorage;
    _Bool _needRedirect;
    _Bool _needPostData;
    int _redirectCount;
    NSURLRequest *_originalRequest;
    NSURLRequest *_currentRequest;
    NSError *_error;
    long long _failedAuthAttempts;
    ALHTTPAuthenticationChallenge *_authChallenge;
    NSThread *_thread;
    NSRunLoop *_scheduleRunLoop;
    NSString *_scheduleRunLoopMode;
    NSRecursiveLock *_lock;
    id _delegate;
    NSOperationQueue *_delegateOperationQueue;
    long long _contentLength;
    unsigned long long _currentTotalReceivedData;
    unsigned long long _totalBytesSend;
    double _requestBeginTimeInterval;
    NSTimer *_statusUpdateTimer;
    ALCFDataDecompressor *_decompressor;
    NSHTTPURLResponse *_response;
    long long _totalBytesExpectedToWrite;
}

+ (void)sendAsynchronousRequest:(id)arg1 queue:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
+ (id)sharedOperationQueue;
+ (id)sendSynchronousRequest:(id)arg1 returningResponse:(id *)arg2 error:(id *)arg3;
@property long long totalBytesExpectedToWrite; // @synthesize totalBytesExpectedToWrite=_totalBytesExpectedToWrite;
@property(retain) NSHTTPURLResponse *response; // @synthesize response=_response;
@property(retain) ALCFDataDecompressor *decompressor; // @synthesize decompressor=_decompressor;
@property(retain) NSTimer *statusUpdateTimer; // @synthesize statusUpdateTimer=_statusUpdateTimer;
@property double requestBeginTimeInterval; // @synthesize requestBeginTimeInterval=_requestBeginTimeInterval;
@property unsigned long long totalBytesSend; // @synthesize totalBytesSend=_totalBytesSend;
@property unsigned long long currentTotalReceivedData; // @synthesize currentTotalReceivedData=_currentTotalReceivedData;
@property long long contentLength; // @synthesize contentLength=_contentLength;
@property(retain) NSOperationQueue *delegateOperationQueue; // @synthesize delegateOperationQueue=_delegateOperationQueue;
@property id delegate; // @synthesize delegate=_delegate;
@property(retain) NSRecursiveLock *lock; // @synthesize lock=_lock;
@property(retain) NSString *scheduleRunLoopMode; // @synthesize scheduleRunLoopMode=_scheduleRunLoopMode;
@property(retain) NSRunLoop *scheduleRunLoop; // @synthesize scheduleRunLoop=_scheduleRunLoop;
@property(retain) NSThread *thread; // @synthesize thread=_thread;
@property _Bool needPostData; // @synthesize needPostData=_needPostData;
@property _Bool needRedirect; // @synthesize needRedirect=_needRedirect;
@property int redirectCount; // @synthesize redirectCount=_redirectCount;
@property(retain) ALHTTPAuthenticationChallenge *authChallenge; // @synthesize authChallenge=_authChallenge;
@property long long failedAuthAttempts; // @synthesize failedAuthAttempts=_failedAuthAttempts;
@property _Bool shouldUseCredentialStorage; // @synthesize shouldUseCredentialStorage=_shouldUseCredentialStorage;
@property _Bool hasPassSendRequestDelegate; // @synthesize hasPassSendRequestDelegate=_hasPassSendRequestDelegate;
@property(retain) NSError *error; // @synthesize error=_error;
@property _Bool connectionFinished; // @synthesize connectionFinished=_connectionFinished;
@property _Bool connectionCancel; // @synthesize connectionCancel=_connectionCancel;
- (id)currentRequest;
- (id)originalRequest;
- (void).cxx_destruct;
- (void)rejectProtectionSpaceAndContinueWithChallenge:(id)arg1;
- (void)performDefaultHandlingForAuthenticationChallenge:(id)arg1;
- (void)useCredential:(id)arg1 forAuthenticationChallenge:(id)arg2;
- (void)continueWithoutCredentialForAuthenticationChallenge:(id)arg1;
- (void)cancelAuthenticationChallenge:(id)arg1;
- (void)setDelegateQueue:(id)arg1;
- (void)unscheduleFromRunLoop:(id)arg1 forMode:(id)arg2;
- (void)scheduleInRunLoop:(id)arg1 forMode:(id)arg2;
- (void)_cancel:(id)arg1;
- (void)cancel;
- (void)start;
- (id)initWithRequest:(id)arg1 delegate:(id)arg2;
- (id)initWithRequest:(id)arg1 delegate:(id)arg2 startImmediately:(_Bool)arg3;
- (id)_runSync:(id *)arg1 error:(id *)arg2;
- (void)_handleStreamError;
- (void)_handleStreamComplete:(id)arg1;
- (void)_handleBytesAvailable:(id)arg1;
- (id)dataForBuffer:(char *)arg1 size:(int)arg2 error:(id *)arg3;
- (id)_readResponseHeaders;
- (id)_buildRedierctURLRequest:(id)arg1 code:(long long)arg2;
- (void)_performRedirect;
- (void)stream:(id)arg1 handleEvent:(unsigned long long)arg2;
- (void)_runAsync;
- (id)errorForHTTPCode:(int)arg1;
- (id)_buildCFStream:(_Bool)arg1;
- (void)_configureProxies;
- (void)_buildCFRequestHeader;
- (id)_buildCFRequest;
- (void)dealloc;
- (void)_finishWithError:(id)arg1;
- (void)_updateStatus:(id)arg1;
- (void)_passWillSendRequest:(id)arg1;
- (void)_passFinished;
- (void)_passReceiveResponse:(id)arg1;
- (void)_passDataRead:(id)arg1;
- (void)_passAuthChallenge;
- (void)_passSendDataWithBytes:(long long)arg1;
- (void)_passErrorDelegateWithError:(id)arg1;
- (void)_destroyReadStream;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

