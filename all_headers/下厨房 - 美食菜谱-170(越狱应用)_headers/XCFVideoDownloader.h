//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

@class NSMutableArray, NSMutableDictionary;
@protocol OS_dispatch_queue, XCFVideoCache;

@interface XCFVideoDownloader : NSObject
{
    id <XCFVideoCache> _videoCache;
    long long _maximumConcurrentDownloads;
    NSObject<OS_dispatch_queue> *_synchronizationQueue;
    NSObject<OS_dispatch_queue> *_responseQueue;
    long long _activeRequestCount;
    NSMutableArray *_queuedMergedTasks;
    NSMutableDictionary *_mergedTasks;
}

@property(retain, nonatomic) NSMutableDictionary *mergedTasks; // @synthesize mergedTasks=_mergedTasks;
@property(retain, nonatomic) NSMutableArray *queuedMergedTasks; // @synthesize queuedMergedTasks=_queuedMergedTasks;
@property(nonatomic) long long activeRequestCount; // @synthesize activeRequestCount=_activeRequestCount;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *responseQueue; // @synthesize responseQueue=_responseQueue;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *synchronizationQueue; // @synthesize synchronizationQueue=_synchronizationQueue;
@property(nonatomic) long long maximumConcurrentDownloads; // @synthesize maximumConcurrentDownloads=_maximumConcurrentDownloads;
@property(retain, nonatomic) id <XCFVideoCache> videoCache; // @synthesize videoCache=_videoCache;
- (void).cxx_destruct;
- (_Bool)isActiveRequestCountBelowMaximumLimit;
- (id)dequeueMergedTask;
- (void)enqueueMergedTask:(id)arg1;
- (void)startMergedTask:(id)arg1;
- (void)safelyStartNextTaskIfNecessary;
- (void)safelyDecrementActiveTaskCount;
- (id)safelyGetProgressBlocksFromMergedTaskByIdentifier:(id)arg1;
- (id)safelyRemoveMergedTaskWithIdentifier:(id)arg1;
- (void)cancelTaskForVideoDownloadReceipt:(id)arg1;
- (id)downloadVideoForURL:(id)arg1 receiptID:(id)arg2 progress:(CDUnknownBlockType)arg3 success:(CDUnknownBlockType)arg4 failure:(CDUnknownBlockType)arg5;
- (id)downloadVideoForURL:(id)arg1 progress:(CDUnknownBlockType)arg2 success:(CDUnknownBlockType)arg3 failure:(CDUnknownBlockType)arg4;
- (id)init;
- (id)initWithMaximumConcurrentDownloads:(long long)arg1 videoCache:(id)arg2;
- (void)dealloc;

@end

