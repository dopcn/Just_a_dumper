//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <UIKit/UIView.h>

#import "CLLocationManagerDelegate-Protocol.h"
#import "DMLocationDelegate-Protocol.h"
#import "HawaiiGridDownloadOperationDelegate-Protocol.h"
#import "UIGestureRecognizerDelegate-Protocol.h"

@class CAMetalLayer, DMCalloutView, DMLogo, DMScaleView, DMUserLocation, DMUserLocationView, DiMapDynamicConfig, DiMapView, DiRouteNavigationManager, EAGLContext, EAMetalContext, HWNaviCurrentRBMarker, HWNaviRouteBubbleGroup, HWUserLocationOverlay, HawaiiBaseMapResourceHandler, HawaiiGridDownloadManager, HawaiiTrafficManager, NSArray, NSMutableArray, NSMutableDictionary, NSObject, NSOperationQueue, NSString;
@protocol HWBaseMapDelegate;

@interface HWBaseMap : UIView <HawaiiGridDownloadOperationDelegate, DMLocationDelegate, CLLocationManagerDelegate, UIGestureRecognizerDelegate>
{
    float lastScale_;
    NSOperationQueue *operationUpdateQueue_;
    NSMutableArray *overlays_;
    HWUserLocationOverlay *locationOverlay_;
    _Bool showsUserLocation_;
    _Bool manualLocating_;
    DMUserLocation *userLocation_;
    long long userTrackingMode_;
    long long _previousTrackingMode;
    DMScaleView *scaleView_;
    DMLogo *logoView_;
    void *pWorld;
    long long scale_;
    int backingWidth;
    int backingHeight;
    unsigned int viewRenderbuffer;
    unsigned int viewFramebuffer;
    unsigned int depthRenderbuffer;
    float m_fWidth;
    float m_fHeight;
    EAGLContext *_context;
    _Bool isLayoutView_;
    _Bool _dirty;
    _Bool animating;
    int _markerLayerID;
    _Bool alwaysAnimation_;
    double fAngleOfHeading_;
    _Bool _isGPSHeadingBelievable;
    _Bool _isSupportES2;
    _Bool _bAddObserver;
    struct _opaque_pthread_t *_tid;
    _Bool _exitNow;
    _Bool _disable3DBuildingEffect;
    int _nNextPointIndexForNavigation;
    int _nOffsetForNavigation;
    int _genTexRecNum;
    NSMutableDictionary *_currentCalloutExDic;
    UIView *_renderView;
    EAMetalContext *_mtlContext;
    CAMetalLayer *_metalLayer;
    NSMutableArray *_naviRouteBubbleTempDatas;
    HWNaviRouteBubbleGroup *_naviRouteBubbleGroup;
    HWNaviCurrentRBMarker *_naviCurrentRouteBubbleMarker;
    NSString *_currentRoadName;
    _Bool _currentRBHidden;
    _Bool _routeBubbleHidden;
    NSMutableArray *_naviCameraGroups;
    NSMutableArray *_naviCameraTempDatas;
    _Bool _showsCompass;
    _Bool _zoomEnabled;
    _Bool _scrollEnabled;
    _Bool _userLocationValid;
    _Bool _showTraffic;
    _Bool _firstDrawing;
    _Bool _lockDrawing;
    _Bool _isInforeGround;
    _Bool _pitchEnabled;
    _Bool _stayCenteredDuringZoom;
    _Bool _isCloseGestureStatistic;
    _Bool _isCheckedExit;
    _Bool _beginEndLineHidden;
    _Bool _manualLocating;
    _Bool _clickAnnotationEnabled;
    _Bool _followUserLocationEnabled;
    _Bool _isDidiChengke;
    _Bool _bHideArrow;
    _Bool _keepCallout;
    _Bool _keepBubble;
    _Bool _bNeedDelayMapZoomForNavigation;
    _Bool _isTo2DAnimating;
    _Bool _isTo3DAnimating;
    _Bool _hideAccuracyCircle;
    _Bool _gray_hasData;
    _Bool _isSamedispPassenger;
    _Bool _isSamedispDriver;
    _Bool _isWaitingRefresh;
    _Bool _UseDiscardForFrameBuffer;
    _Bool _isRendering;
    _Bool _UseForceFlush;
    _Bool _bNeedContinueNavigation;
    _Bool _internalEnableELDSSystem;
    _Bool _isSkewAnimationBegin;
    _Bool _isSkewAnimating;
    _Bool _isDelaySetVisibleMapRectAnimation;
    _Bool _isVisibleMapRectChanged;
    _Bool _isSetHiddenColor;
    _Bool _isSetRedColor;
    _Bool _debugEdgePadding;
    _Bool _needCrashOnNextUpdate;
    int _maxAutoScale;
    int _minAutoScale;
    int _gray_pointIndex;
    int _gray_Distance;
    int _gray_Offset;
    int _gray_Type;
    int _maxRecalculateRouteCount;
    float _recalculateRouteDelayTime;
    int _animationTypeFlag;
    int _mapMode;
    int _preDistance;
    id <HWBaseMapDelegate> delegate_;
    long long _nLanguageType;
    EAGLContext *_threadGLContext;
    DMCalloutView *_currentCallout;
    unsigned long long _createTime;
    DiRouteNavigationManager *_routeNavigationManager;
    double _scaleOnPinchGestureBegan;
    DiMapView *_containerView;
    HawaiiTrafficManager *_trafficDataManager;
    long long _mapNaviShowMode;
    long long _previousMapNaviShowMode;
    double _distanceFilter;
    double _desiredAccuracy;
    NSObject *_searchParameter;
    CDUnknownBlockType _setCenterOffsetYFinishedCompletion;
    long long _naviStyle;
    CDUnknownBlockType _annotationFinishBlock;
    void *_blockItem;
    struct _DDMapPoint _gray_CurrentPoint;
    struct _DDMapPoint _gray_NextPoint;
    unsigned long long _lastRenderTime;
    double _firstDrawingTimestamp;
    NSMutableArray *_polyOverlayViews;
    NSMutableArray *_polyOverlayIds;
    NSMutableDictionary *_routeArrays;
    long long _ELDSCoordinateType;
    HawaiiBaseMapResourceHandler *_graphicsImpl;
    HawaiiGridDownloadManager *_tileDownloader;
    NSMutableArray *_tileOverlays;
    NSMutableArray *_tileOverlayIds;
    long long _selectedRouteIndex;
    NSMutableDictionary *_baseRouteInfoDic;
    NSMutableDictionary *_modifiedRouteInfoDic;
    UIView *_laneInfoView;
    DiMapDynamicConfig *_dynamicConfig;
    NSArray *_bubbleMarkers;
    NSArray *_dynamicBubbles;
    double _skewAngleFor3D;
    double _skewStartTimeStamp;
    double _startSkew;
    double _endSkew;
    double _startScale;
    double _endScale;
    UIView *_edgePaddingTopView;
    UIView *_edgePaddingRightView;
    UIView *_edgePaddingBottomView;
    UIView *_edgePaddingLeftView;
    struct CGPoint _anchorPointOfScale;
    struct DMRect _endVisibleRect;
    struct UIEdgeInsets _edgePaddingFor2DNorthOverView;
    struct UIEdgeInsets _endVisibleEdgeInsets;
    struct _MapRouteInfo {
        int type;
        struct _DDMapPoint *points;
        int pointCount;
        struct _OverlayLineInfo *sections;
        int sectionCount;
        float width;
        char imageName[512];
        _Bool bTurnArrow;
        _Bool bForceLoad;
        int routeID;
        _Bool is3DArrow;
    } _beginEndLineInfo;
}

+ (struct CLLocationCoordinate2D)coordinateOffset:(struct CLLocationCoordinate2D)arg1;
+ (Class)layerClass;
+ (id)mapViewWithIndex:(long long)arg1;
+ (long long)mapViewCount;
+ (id)defaultMapView;
+ (_Bool)isBelowIPhone6;
+ (_Bool)isIOS11;
@property(nonatomic) _Bool needCrashOnNextUpdate; // @synthesize needCrashOnNextUpdate=_needCrashOnNextUpdate;
@property(retain, nonatomic) UIView *edgePaddingLeftView; // @synthesize edgePaddingLeftView=_edgePaddingLeftView;
@property(retain, nonatomic) UIView *edgePaddingBottomView; // @synthesize edgePaddingBottomView=_edgePaddingBottomView;
@property(retain, nonatomic) UIView *edgePaddingRightView; // @synthesize edgePaddingRightView=_edgePaddingRightView;
@property(retain, nonatomic) UIView *edgePaddingTopView; // @synthesize edgePaddingTopView=_edgePaddingTopView;
@property(nonatomic) _Bool debugEdgePadding; // @synthesize debugEdgePadding=_debugEdgePadding;
@property(nonatomic) _Bool isSetRedColor; // @synthesize isSetRedColor=_isSetRedColor;
@property(nonatomic) _Bool isSetHiddenColor; // @synthesize isSetHiddenColor=_isSetHiddenColor;
@property(nonatomic) _MapRouteInfo_0899f49e beginEndLineInfo; // @synthesize beginEndLineInfo=_beginEndLineInfo;
@property(nonatomic) struct UIEdgeInsets endVisibleEdgeInsets; // @synthesize endVisibleEdgeInsets=_endVisibleEdgeInsets;
@property(nonatomic) struct DMRect endVisibleRect; // @synthesize endVisibleRect=_endVisibleRect;
@property(nonatomic) _Bool isVisibleMapRectChanged; // @synthesize isVisibleMapRectChanged=_isVisibleMapRectChanged;
@property(nonatomic) _Bool isDelaySetVisibleMapRectAnimation; // @synthesize isDelaySetVisibleMapRectAnimation=_isDelaySetVisibleMapRectAnimation;
@property(nonatomic) double endScale; // @synthesize endScale=_endScale;
@property(nonatomic) double startScale; // @synthesize startScale=_startScale;
@property(nonatomic) int preDistance; // @synthesize preDistance=_preDistance;
@property(nonatomic) _Bool isSkewAnimating; // @synthesize isSkewAnimating=_isSkewAnimating;
@property(nonatomic) _Bool isSkewAnimationBegin; // @synthesize isSkewAnimationBegin=_isSkewAnimationBegin;
@property(nonatomic) double endSkew; // @synthesize endSkew=_endSkew;
@property(nonatomic) double startSkew; // @synthesize startSkew=_startSkew;
@property(nonatomic) double skewStartTimeStamp; // @synthesize skewStartTimeStamp=_skewStartTimeStamp;
@property(nonatomic) double skewAngleFor3D; // @synthesize skewAngleFor3D=_skewAngleFor3D;
@property(copy, nonatomic) NSArray *dynamicBubbles; // @synthesize dynamicBubbles=_dynamicBubbles;
@property(copy, nonatomic) NSArray *bubbleMarkers; // @synthesize bubbleMarkers=_bubbleMarkers;
@property(nonatomic) int mapMode; // @synthesize mapMode=_mapMode;
@property(retain, nonatomic) DiMapDynamicConfig *dynamicConfig; // @synthesize dynamicConfig=_dynamicConfig;
@property(retain, nonatomic) UIView *laneInfoView; // @synthesize laneInfoView=_laneInfoView;
@property(retain, nonatomic) NSMutableDictionary *modifiedRouteInfoDic; // @synthesize modifiedRouteInfoDic=_modifiedRouteInfoDic;
@property(retain, nonatomic) NSMutableDictionary *baseRouteInfoDic; // @synthesize baseRouteInfoDic=_baseRouteInfoDic;
@property(nonatomic) long long selectedRouteIndex; // @synthesize selectedRouteIndex=_selectedRouteIndex;
@property(retain, nonatomic) NSMutableArray *tileOverlayIds; // @synthesize tileOverlayIds=_tileOverlayIds;
@property(retain, nonatomic) NSMutableArray *tileOverlays; // @synthesize tileOverlays=_tileOverlays;
@property(retain, nonatomic) HawaiiGridDownloadManager *tileDownloader; // @synthesize tileDownloader=_tileDownloader;
@property(retain, nonatomic) HawaiiBaseMapResourceHandler *graphicsImpl; // @synthesize graphicsImpl=_graphicsImpl;
@property(nonatomic) long long ELDSCoordinateType; // @synthesize ELDSCoordinateType=_ELDSCoordinateType;
@property(nonatomic) _Bool internalEnableELDSSystem; // @synthesize internalEnableELDSSystem=_internalEnableELDSSystem;
@property(retain, nonatomic) NSMutableDictionary *routeArrays; // @synthesize routeArrays=_routeArrays;
@property(retain, nonatomic) NSMutableArray *polyOverlayIds; // @synthesize polyOverlayIds=_polyOverlayIds;
@property(retain, nonatomic) NSMutableArray *polyOverlayViews; // @synthesize polyOverlayViews=_polyOverlayViews;
@property(nonatomic) _Bool bNeedContinueNavigation; // @synthesize bNeedContinueNavigation=_bNeedContinueNavigation;
@property(nonatomic) double firstDrawingTimestamp; // @synthesize firstDrawingTimestamp=_firstDrawingTimestamp;
@property(nonatomic) unsigned long long lastRenderTime; // @synthesize lastRenderTime=_lastRenderTime;
@property(nonatomic) _Bool UseForceFlush; // @synthesize UseForceFlush=_UseForceFlush;
@property(nonatomic) _Bool isRendering; // @synthesize isRendering=_isRendering;
@property(nonatomic) _Bool UseDiscardForFrameBuffer; // @synthesize UseDiscardForFrameBuffer=_UseDiscardForFrameBuffer;
@property(readonly, nonatomic) NSMutableArray *naviCameraTempDatas; // @synthesize naviCameraTempDatas=_naviCameraTempDatas;
@property(readonly, nonatomic) NSMutableArray *naviCameraGroups; // @synthesize naviCameraGroups=_naviCameraGroups;
@property(readonly, nonatomic) NSString *currentRoadName; // @synthesize currentRoadName=_currentRoadName;
@property(readonly, nonatomic) NSMutableArray *naviRouteBubbleTempDatas; // @synthesize naviRouteBubbleTempDatas=_naviRouteBubbleTempDatas;
@property(readonly, nonatomic) HWNaviCurrentRBMarker *naviCurrentRouteBubbleMarker; // @synthesize naviCurrentRouteBubbleMarker=_naviCurrentRouteBubbleMarker;
@property(readonly, nonatomic) HWNaviRouteBubbleGroup *naviRouteBubbleGroup; // @synthesize naviRouteBubbleGroup=_naviRouteBubbleGroup;
@property(readonly, nonatomic) _Bool isWaitingRefresh; // @synthesize isWaitingRefresh=_isWaitingRefresh;
@property(nonatomic) int animationTypeFlag; // @synthesize animationTypeFlag=_animationTypeFlag;
@property(nonatomic) _Bool isSamedispDriver; // @synthesize isSamedispDriver=_isSamedispDriver;
@property(nonatomic) _Bool isSamedispPassenger; // @synthesize isSamedispPassenger=_isSamedispPassenger;
@property(nonatomic) float recalculateRouteDelayTime; // @synthesize recalculateRouteDelayTime=_recalculateRouteDelayTime;
@property(nonatomic) int maxRecalculateRouteCount; // @synthesize maxRecalculateRouteCount=_maxRecalculateRouteCount;
@property(nonatomic) _Bool gray_hasData; // @synthesize gray_hasData=_gray_hasData;
@property(nonatomic) int gray_Type; // @synthesize gray_Type=_gray_Type;
@property(nonatomic) int gray_Offset; // @synthesize gray_Offset=_gray_Offset;
@property(nonatomic) int gray_Distance; // @synthesize gray_Distance=_gray_Distance;
@property(nonatomic) struct _DDMapPoint gray_NextPoint; // @synthesize gray_NextPoint=_gray_NextPoint;
@property(nonatomic) int gray_pointIndex; // @synthesize gray_pointIndex=_gray_pointIndex;
@property(nonatomic) struct _DDMapPoint gray_CurrentPoint; // @synthesize gray_CurrentPoint=_gray_CurrentPoint;
@property(nonatomic) void *blockItem; // @synthesize blockItem=_blockItem;
@property(copy, nonatomic) CDUnknownBlockType annotationFinishBlock; // @synthesize annotationFinishBlock=_annotationFinishBlock;
@property(nonatomic) _Bool hideAccuracyCircle; // @synthesize hideAccuracyCircle=_hideAccuracyCircle;
@property(nonatomic) _Bool isTo3DAnimating; // @synthesize isTo3DAnimating=_isTo3DAnimating;
@property(nonatomic) _Bool isTo2DAnimating; // @synthesize isTo2DAnimating=_isTo2DAnimating;
@property(nonatomic) long long naviStyle; // @synthesize naviStyle=_naviStyle;
@property(nonatomic) int minAutoScale; // @synthesize minAutoScale=_minAutoScale;
@property(nonatomic) int maxAutoScale; // @synthesize maxAutoScale=_maxAutoScale;
@property(copy, nonatomic) CDUnknownBlockType setCenterOffsetYFinishedCompletion; // @synthesize setCenterOffsetYFinishedCompletion=_setCenterOffsetYFinishedCompletion;
@property(retain, nonatomic) NSObject *searchParameter; // @synthesize searchParameter=_searchParameter;
@property(nonatomic) _Bool bNeedDelayMapZoomForNavigation; // @synthesize bNeedDelayMapZoomForNavigation=_bNeedDelayMapZoomForNavigation;
@property(nonatomic) _Bool keepBubble; // @synthesize keepBubble=_keepBubble;
@property(nonatomic) _Bool keepCallout; // @synthesize keepCallout=_keepCallout;
@property(nonatomic) double desiredAccuracy; // @synthesize desiredAccuracy=_desiredAccuracy;
@property(nonatomic) double distanceFilter; // @synthesize distanceFilter=_distanceFilter;
@property(nonatomic) struct UIEdgeInsets edgePaddingFor2DNorthOverView; // @synthesize edgePaddingFor2DNorthOverView=_edgePaddingFor2DNorthOverView;
@property(nonatomic) long long previousMapNaviShowMode; // @synthesize previousMapNaviShowMode=_previousMapNaviShowMode;
@property(nonatomic) long long mapNaviShowMode; // @synthesize mapNaviShowMode=_mapNaviShowMode;
@property(nonatomic) _Bool bHideArrow; // @synthesize bHideArrow=_bHideArrow;
@property(retain, nonatomic) HawaiiTrafficManager *trafficDataManager; // @synthesize trafficDataManager=_trafficDataManager;
@property(nonatomic) _Bool isDidiChengke; // @synthesize isDidiChengke=_isDidiChengke;
@property(nonatomic) _Bool followUserLocationEnabled; // @synthesize followUserLocationEnabled=_followUserLocationEnabled;
@property(nonatomic) _Bool clickAnnotationEnabled; // @synthesize clickAnnotationEnabled=_clickAnnotationEnabled;
@property(nonatomic) __weak DiMapView *containerView; // @synthesize containerView=_containerView;
@property(nonatomic) double scaleOnPinchGestureBegan; // @synthesize scaleOnPinchGestureBegan=_scaleOnPinchGestureBegan;
@property(nonatomic) __weak DiRouteNavigationManager *routeNavigationManager; // @synthesize routeNavigationManager=_routeNavigationManager;
@property(nonatomic) _Bool manualLocating; // @synthesize manualLocating=_manualLocating;
@property(nonatomic) _Bool beginEndLineHidden; // @synthesize beginEndLineHidden=_beginEndLineHidden;
@property(nonatomic) _Bool isCheckedExit; // @synthesize isCheckedExit=_isCheckedExit;
@property(nonatomic) unsigned long long createTime; // @synthesize createTime=_createTime;
@property(nonatomic) _Bool isCloseGestureStatistic; // @synthesize isCloseGestureStatistic=_isCloseGestureStatistic;
@property(nonatomic) struct CGPoint anchorPointOfScale; // @synthesize anchorPointOfScale=_anchorPointOfScale;
@property(nonatomic, getter=isStayCenteredDuringZoom) _Bool stayCenteredDuringZoom; // @synthesize stayCenteredDuringZoom=_stayCenteredDuringZoom;
@property(nonatomic, getter=isPitchEnabled) _Bool pitchEnabled; // @synthesize pitchEnabled=_pitchEnabled;
@property(retain, nonatomic) DMCalloutView *currentCallout; // @synthesize currentCallout=_currentCallout;
@property(retain, nonatomic) EAGLContext *threadGLContext; // @synthesize threadGLContext=_threadGLContext;
@property(nonatomic) long long nLanguageType; // @synthesize nLanguageType=_nLanguageType;
@property(nonatomic) _Bool isInforeGround; // @synthesize isInforeGround=_isInforeGround;
@property(nonatomic) long long previousTrackingMode; // @synthesize previousTrackingMode=_previousTrackingMode;
@property(nonatomic) _Bool lockDrawing; // @synthesize lockDrawing=_lockDrawing;
@property(nonatomic) _Bool firstDrawing; // @synthesize firstDrawing=_firstDrawing;
@property(nonatomic) _Bool showTraffic; // @synthesize showTraffic=_showTraffic;
@property(readonly, nonatomic, getter=isAnimating) _Bool animating; // @synthesize animating;
@property(nonatomic) long long userTrackingMode; // @synthesize userTrackingMode=userTrackingMode_;
@property(retain, nonatomic) DMUserLocation *userLocation; // @synthesize userLocation=userLocation_;
@property(nonatomic, getter=isScrollEnabled) _Bool scrollEnabled; // @synthesize scrollEnabled=_scrollEnabled;
@property(nonatomic) _Bool showsUserLocation; // @synthesize showsUserLocation=showsUserLocation_;
@property(retain, nonatomic) NSMutableArray *overlays; // @synthesize overlays=overlays_;
@property(nonatomic) id <HWBaseMapDelegate> delegate; // @synthesize delegate=delegate_;
- (void).cxx_destruct;
- (void)logDisplayParams:(struct DMMapDisplayParams)arg1;
- (void)applyDisplayParams:(struct DMMapDisplayParams)arg1 animated:(_Bool)arg2;
- (struct DMMapDisplayParams)currentDisplayParams;
- (void)checkRouteBubbleAndLightStatus;
- (id)loadResPackImageWithName:(id)arg1;
@property(readonly, nonatomic) DMUserLocationView *userLocationView;
- (void)setUserLocationCustomCalloutViewAnchoPoint:(struct CGPoint)arg1;
@property(nonatomic) _Bool userLocationViewCanShowCallout;
@property(nonatomic) int userLocationViewDispLevel;
@property(nonatomic) _Bool userLocationCustomCalloutViewSelected;
- (void)setUserLocationCustomCalloutViewOffset:(struct CGPoint)arg1;
- (void)setUserLocationCustomCalloutView:(id)arg1;
- (void)switchLanguage:(int)arg1;
- (void)addHWParsedRouteToNameSegments:(id)arg1;
- (void)addRouteNameSegments:(struct DMapRouteSectionWithName *)arg1 sectionsCount:(int)arg2 points:(struct _DDMapPoint *)arg3 pointsCount:(int)arg4;
- (void)clearRouteNameSegments;
- (void)setRouteNameClipBounds:(union DMapVector4f)arg1;
- (void)setBNeedDelayMapZoomForNavigationNo;
- (_Bool)isEraseRouteMode;
- (_Bool)isCurrent3D;
- (float)topPaddingOffsetForNextEventPointDisplay;
- (void)setFlagOfZoomToSpanForLocation:(int)arg1 edgeInsets:(struct UIEdgeInsets)arg2 maxAutoScale:(int)arg3 minAutoScale:(int)arg4;
- (void)setFlagOfZoomToSpanForLocation:(int)arg1 edgeInsets:(struct UIEdgeInsets)arg2;
- (void)setFlagOfZoomToSpanForLocation:(int)arg1;
- (void)setNextPointIndexForNavigation:(int)arg1 offset:(int)arg2;
- (int)getNextPointIndexForNavigation;
- (int)matchSegmentIndex:(int)arg1 curMapPoint:(struct _DDMapPoint)arg2 routeid:(id)arg3;
- (void)setRouteClearPointIndex:(int)arg1 coordinates:(union DMapVector2d)arg2 type:(int)arg3 routeIndex:(int)arg4;
- (void)setRoutePassedPointIndex:(int)arg1 coordinates:(union DMapVector2d)arg2 type:(int)arg3 routeIndex:(int)arg4;
- (void)setRouteClearPointIndex:(int)arg1 coordinates:(union DMapVector2d)arg2 routeIdM:(int)arg3;
- (void)setRoutePassedPointIndex:(int)arg1 coordinates:(union DMapVector2d)arg2 routeIdM:(int)arg3;
- (void)setRouteNamePassedOrClearIndex:(int)arg1;
- (void)setRoutePassedPointIndex:(int)arg1 coordinates:(union DMapVector2d)arg2;
- (void)removeImage:(id)arg1;
- (void)addImage:(id)arg1 image:(id)arg2;
- (void)freeRouteInfo:(_MapRouteInfo_0899f49e *)arg1;
- (_MapRouteInfo_0899f49e *)deepCopyRouteInfo:(_MapRouteInfo_0899f49e *)arg1;
- (void)updateRouteGroupType:(int)arg1 footPrintSpacing:(double)arg2;
- (void)updateRouteGroupType:(int)arg1 arrowSpacing:(double)arg2;
- (void)updateRouteGroupType:(int)arg1 dispLevel:(int)arg2;
- (void)clearRouteGroup:(int)arg1;
- (void)removeRoutes:(id)arg1;
- (void)removeRoute:(int)arg1;
- (int)routeIDWithType:(int)arg1 Index:(int)arg2;
- (int)getSelectedRouteIndexWithType:(int)arg1;
- (int)routeIndexByID:(int)arg1;
- (id)routeGroupIDs:(int)arg1;
- (void)setHighLightRoute:(_Bool)arg1 routeIndex:(int)arg2 routeGroupIndex:(long long)arg3;
- (void)deleteMaskLayer;
- (void)setMapMaskColor:(double)arg1 green:(double)arg2 blue:(double)arg3 alpha:(double)arg4 layer:(long long)arg5 curveType:(long long)arg6 animateSecond:(double)arg7;
- (struct _DDMapPoint)getScreenBottomRightPoint;
- (struct _DDMapPoint)getScreenTopLeftPoint;
- (int)setTrafficData:(id)arg1 length:(int)arg2 arrFlag:(void *)arg3 blockNum:(int)arg4;
- (void)checkTrafficBlockCache_Replay:(int)arg1 rect:(struct _DDMapRect)arg2;
- (void)checkTrafficBlockCache:(int)arg1 rect:(struct _DDMapRect)arg2;
- (int)fetchLackedTrafficBlocksByArr:(int)arg1 otherArr:(void *)arg2;
- (void)generateText;
- (void)operationDidCancel:(id)arg1;
- (void)operation:(id)arg1 didFinishWithData:(id)arg2;
- (struct CGRect)DGLMapGetItemScreenRect:(void *)arg1;
- (struct _DDMapPoint)DGLMapGetItemMapPoint:(void *)arg1;
- (void)updateTrafficColor;
- (void)setTrafficColor:(unsigned int)arg1 yellow:(unsigned int)arg2 green:(unsigned int)arg3 brown:(unsigned int)arg4;
- (void)setCurrentRouteRectForOverView:(_Bool)arg1;
- (id)routeBoundaryPoints;
- (void)updateLocatorAndCompass;
- (void)delayHandleFinish3DHeadingBestView;
- (void)handleShowMode3DHeadingBestView:(float)arg1 animated:(_Bool)arg2;
- (void)delayHandleShowMode3DHeadingBestView;
- (float)userLocationCourse;
- (void)delayHandleFinish2DNorthOverView;
- (void)handleShow2DNorthOverView;
- (struct _DDMapPoint)userLocationCoord;
- (void)setMapNaviShowMode:(long long)arg1 animated:(_Bool)arg2;
- (void)cancelAnimationDelay;
- (void)setCurrentRouteRectFor3DHeadingBestView;
- (void)setCenterOffsetY:(double)arg1 curveType:(long long)arg2 duration:(double)arg3 completion:(CDUnknownBlockType)arg4;
- (void)setCenterOffsetY:(double)arg1 curveType:(long long)arg2 second:(float)arg3;
- (void)zoomOutOnPoint:(double)arg1 y:(double)arg2;
- (void)zoomInOnPoint:(double)arg1 y:(double)arg2;
@property(nonatomic, getter=isTileRenderEnabled) _Bool tileRenderEnabled;
- (void)setIsShowPillarIn3D:(_Bool)arg1;
- (_Bool)isShowPillarIn3D;
@property(nonatomic, getter=isDisable3DBuildingEffect) _Bool disable3DBuildingEffect;
- (void)didDeleteCityData;
- (CDStruct_02837cd9)getRouteLineLeftVisibleRect:(int)arg1;
- (struct _DDMapRect)getRouteLineVisibleRectWithRouteid:(id)arg1;
- (struct _DDMapRect)getRouteLineVisibleRect:(int)arg1;
- (void)setRouteDrawTexture:(id)arg1 param2:(double)arg2 routeIndex:(long long)arg3 routeDrawType:(int)arg4 overlayType:(int)arg5;
- (void)setRouteDrawCap:(_Bool)arg1 routeIndex:(long long)arg2 routeGroupIndex:(long long)arg3;
- (void)setRouteTextureWithIndex:(int)arg1 texture:(id)arg2;
- (void)setRouteTexture:(long long)arg1 texture:(id)arg2;
- (void)setRouteDrawArrow:(long long)arg1 drawArrow:(_Bool)arg2;
- (void)setRouteDrawCap:(long long)arg1 drawCap:(_Bool)arg2;
- (void)changeRouteDrawType:(int)arg1 routeDrawType:(unsigned long long)arg2 routeGroupIndex:(long long)arg3;
- (int)getDataVersionByCityName:(id)arg1;
- (int)getDataVersion;
- (void)handleTouchesEndedEvent;
- (void)handleTouchesStartedEvent;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (_Bool)gestureRecognizerShouldBegin:(id)arg1;
- (_Bool)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
- (void)gestureStatistic:(id)arg1;
- (void)handleSwipeDown:(id)arg1;
- (void)handleSwipeUp:(id)arg1;
- (void)handleRotation:(id)arg1;
- (void)handlePinch:(id)arg1;
- (void)handleLongPress:(id)arg1;
- (void)handleTwoFingersDoubleTap:(id)arg1;
- (void)handleTwoFingersSingleTap:(id)arg1;
- (void)handleDoubleTap:(id)arg1;
- (void)handleSingleTap:(id)arg1;
- (void)handlePan:(id)arg1;
- (void)handleAutoDelayMapZoomForNavigation:(id)arg1;
- (void)initGestureRecognizer;
- (void)stopTrackingLocation;
- (void)updateAnnotation:(void *)arg1 animatesDrop:(_Bool)arg2;
- (void)updateDispLevel:(void *)arg1 dispLevel:(int)arg2 type:(long long)arg3;
- (void)updateAnnotation:(void *)arg1 imageStr:(id)arg2 anchorPointX:(float)arg3 anchorPointY:(float)arg4;
- (void)updateAnnotation:(void *)arg1 image:(id)arg2 anchorPointX:(int)arg3 anchorPointY:(int)arg4;
- (void)updateAnnotation:(void *)arg1 alpha:(double)arg2 duration:(double)arg3 animated:(_Bool)arg4;
- (void)updateAnnotation:(void *)arg1 coordinate:(struct _DDMapPoint)arg2 angle:(float)arg3 duration:(double)arg4 animated:(_Bool)arg5;
- (void)updateAnnotation:(void *)arg1 coordinate:(struct _DDMapPoint)arg2 angle:(float)arg3 duration:(double)arg4 animated:(_Bool)arg5 Completed:(CDUnknownBlockType)arg6;
- (double)metersPerPointForCurrentZoomLevel;
- (void)insertPolyOverlayView:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)circleMapPoints:(union DMapVector2d)arg1 radius:(float)arg2 mapPoints:(union DMapVector2d *)arg3 mapPointsCount:(int)arg4;
- (void)removePolyOverlayView:(id)arg1;
- (void)addPolyOverlayView:(id)arg1;
- (void)userLocationErr:(id)arg1;
- (void)updateDynamicBubbleOverlayWithMarkers:(id)arg1;
- (void)updateBubbleOverlayWithMarkers:(id)arg1;
- (void)setBubbleMarkersHidden:(_Bool)arg1;
- (void)switchRoute:(int)arg1;
- (void)setScaleViewOffset:(struct CGPoint)arg1;
- (void)setScaleViewHidden:(_Bool)arg1;
- (_Bool)isScaleViewHidden;
- (void)setCenterMoveDownFlag:(_Bool)arg1 animation:(_Bool)arg2;
- (void)addScaleViewToView:(id)arg1;
- (int)getMapMode;
- (void)backFromOtherOpenGLView;
- (id)mapGetCityByPos:(struct _DDMapPoint)arg1;
- (_Bool)isCityHasTrafficData:(id)arg1;
- (void)clearTrafficData;
- (void)setExtraHeaderHeight:(int)arg1;
- (void)glFlush;
- (void)glFinish;
- (void)waitGLLoaderExit;
- (void)hibernate:(_Bool)arg1;
- (void)resetRotateAndSkew;
- (void)setLocationCompassHidden:(_Bool)arg1;
- (void)setLocationFollow:(_Bool)arg1 headingNorth:(_Bool)arg2;
- (void)setLocationInfo:(int)arg1 y:(int)arg2 course:(float)arg3 accuracy:(float)arg4 animated:(_Bool)arg5;
- (void)updateLocationInfo;
- (id)snapshotCenterAtSize:(struct CGSize)arg1;
- (void)setIsNavigation:(_Bool)arg1;
- (void)setRouteNameVisible:(_Bool)arg1;
- (void)handleGrayStyle;
- (double)mapScale;
- (int)scaleLevel;
- (void)setSkew:(_Bool)arg1 animated:(_Bool)arg2;
- (float)skew;
- (void)setRouteArrowSegmentIndex:(int)arg1 actionLength:(int)arg2;
- (long long)routeCreate:(struct _DDMapPoint *)arg1 count:(unsigned long long)arg2 segments:(struct _OverlayLineInfo *)arg3 count:(unsigned long long)arg4 lineWidth:(float)arg5 texture:(const char *)arg6 routeType:(int)arg7 groupType:(int)arg8;
- (void)routeModify:(struct _DDMapPoint *)arg1 count:(unsigned long long)arg2 segments:(unsigned long long)arg3 info:(struct _OverlayLineInfo *)arg4 type:(int)arg5;
- (void)setDrawRouteArrow:(_Bool)arg1 routeIndex:(int)arg2 type:(int)arg3;
- (_Bool)routeModifyData:(int)arg1 points:(struct _DDMapPoint *)arg2 count:(unsigned long long)arg3 segments:(struct _OverlayLineInfo *)arg4 count:(unsigned long long)arg5;
- (int)routeCreate:(_MapRouteInfo_0899f49e *)arg1 groupType:(int)arg2;
- (void)setRouteAlpha:(int)arg1 type:(int)arg2 alpha:(float)arg3;
- (void)setSelectedRouteWithType:(int)arg1;
- (void)setSelectedRoute:(int)arg1 type:(int)arg2;
@property(nonatomic) _Bool sateliteMode;
- (void)updateScaleView;
- (void)skewAngleChanged;
- (void)mapPositionChanged:(_Bool)arg1;
- (void)startDropDownAnimation:(int)arg1 callbackObject:(id)arg2;
- (_Bool)handleAnnotationViewTouchEvent:(void *)arg1;
- (void)setMapRotateAndSkew:(float)arg1 skew:(float)arg2 animation:(_Bool)arg3;
- (void)handleHeadingDirection:(double)arg1;
- (void)hwlocationManager:(id)arg1 didUpdateHeading:(id)arg2;
- (void)hwlocationManagerDidStopUpdatingHeading:(id)arg1;
- (void)hwlocationManagerDidStartUpdatingHeading:(id)arg1;
- (void)hwlocationManager:(id)arg1 didFailWithError:(id)arg2;
- (void)hwlocationManager:(id)arg1 didUpdateToLocation:(id)arg2;
- (void)mapUpdateMapResourceSafe:(id)arg1;
- (id)nameForUpdatePWorld:(id)arg1;
- (void)handleMapConfigDidUpdate:(id)arg1;
- (void)releaseRouteInfoMemory;
- (void)ajustBeginEndLineLevel;
- (void)setBeginEndLineColor;
- (void)createBeginEndLineWithUserLocation:(union DMapVector2d)arg1 endLocation:(struct CLLocationCoordinate2D)arg2;
- (void)modifyBeginEndLineWithUserLocation:(union DMapVector2d)arg1 endLocation:(struct CLLocationCoordinate2D)arg2;
- (void)renderBeginEndLine;
- (void)refreshGrayLocationWithCoordinate:(union DMapVector2d)arg1 pointIndex:(int)arg2 routeIdM:(int)arg3;
- (void)refreshLocationForNavigation;
- (void)resetGrayParameters:(struct _DDMapPoint)arg1;
- (void)skewAndScaleAnimation:(double)arg1;
- (void)calculateSkewAndScaleWithEndSkew:(double)arg1;
- (void)checkIfSkewAnimationBegin:(int)arg1;
- (void)setLocationForNavigation:(struct _DDMapPoint *)arg1 nPointIndex:(int)arg2 pNextPoint:(struct _DDMapPoint *)arg3 nDistance:(int)arg4 nOffset:(int)arg5 nType:(int)arg6 nRouteIndex:(int)arg7;
- (void)updateUserLocation:(id)arg1;
@property(readonly, nonatomic, getter=isUserLocationVisible) _Bool userLocationVisible;
- (void)continueNavigation;
- (void)setUserTrackingMode:(long long)arg1 animated:(_Bool)arg2;
- (void)updateCompassImage;
- (void)updateLocationImage;
@property(nonatomic) _Bool userLocationValid; // @synthesize userLocationValid=_userLocationValid;
- (void)setLocationOverlayHidden:(_Bool)arg1;
@property(nonatomic, getter=isZoomEnabled) _Bool zoomEnabled; // @synthesize zoomEnabled=_zoomEnabled;
@property(nonatomic) _Bool showsCompass; // @synthesize showsCompass=_showsCompass;
- (id)overlayForAnnotation:(id)arg1;
- (void)bringUpOverlayItem:(void *)arg1;
- (void)selectAnnotation:(id)arg1 centered:(_Bool)arg2 animated:(_Bool)arg3;
- (id)viewForAnnotation:(id)arg1;
- (void)removeOverlay:(id)arg1;
- (void)addOverlay:(id)arg1;
- (void)moveByOffset:(struct CGPoint)arg1 animated:(_Bool)arg2;
- (void)scrollRectToVisible:(struct CGRect)arg1 animated:(_Bool)arg2;
- (id)currentCity;
- (struct DMRect)visibleMapRect:(struct UIEdgeInsets)arg1;
- (struct DMRect)visibleMapRect;
- (struct CGRect)visibleRect;
- (void)setAnnotationPoint:(id)arg1 mapPoint:(struct _DDMapPoint)arg2;
- (void)setVisibleMapRect:(struct DMRect)arg1 animated:(_Bool)arg2;
- (void)setVisibleMapRect:(struct DMRect)arg1 edgePadding:(struct UIEdgeInsets)arg2 animated:(_Bool)arg3 duration:(float)arg4 on2d:(_Bool)arg5;
- (void)setVisibleMapRect:(struct DMRect)arg1 edgePadding:(struct UIEdgeInsets)arg2 animated:(_Bool)arg3 on2d:(_Bool)arg4;
- (_Bool)isAvailableOfVisibleMapRect:(struct DMRect)arg1 edgePadding:(struct UIEdgeInsets)arg2 on2d:(_Bool)arg3;
- (void)setVisibleMapRectAnimation:(struct DMRect)arg1 edgePadding:(struct UIEdgeInsets)arg2 animated:(_Bool)arg3 on2d:(_Bool)arg4;
- (double)mapScaleFitsMapRect:(struct DMRect)arg1 edgePadding:(struct UIEdgeInsets)arg2;
- (int)zoomLevelFitsMapRect:(struct DMRect)arg1 edgePadding:(struct UIEdgeInsets)arg2;
- (void)setCenterCoordinate:(struct _DDMapPoint)arg1 anchorPoint:(struct CGPoint)arg2 atScale:(int)arg3 animated:(_Bool)arg4 curveType:(long long)arg5 second:(float)arg6;
- (void)setCenterCoordinate:(struct _DDMapPoint)arg1 atScale:(int)arg2 animated:(_Bool)arg3;
- (void)setCenterCoordinate:(struct _DDMapPoint)arg1 atScale:(int)arg2 animated:(_Bool)arg3 dontStopTrack:(_Bool)arg4 curveType:(long long)arg5 second:(float)arg6;
- (void)setCenterCoordinate:(struct _DDMapPoint)arg1 duration:(double)arg2 animated:(_Bool)arg3;
- (void)setCenterCoordinate:(struct _DDMapPoint)arg1 animated:(_Bool)arg2;
- (_Bool)mapCanZoomout;
- (_Bool)mapCanZoomin;
- (void)setScale:(int)arg1;
- (struct _DDMapPoint)centerCoordinate;
- (id)currentCalloutExWithKey:(id)arg1;
- (void)removeObservers;
- (void)addObservers;
- (id)initWithFrame:(struct CGRect)arg1 containerView:(id)arg2 delegate:(id)arg3 mapLanguage:(int)arg4;
- (void)handleMemoryWarning:(id)arg1;
- (void)resignActive;
- (void)enterBackground;
- (void)adjustViewWhenEnterForeground;
- (void)enterForeground;
- (void)reLayoutView:(_Bool)arg1;
- (void)setNeedsDisplayGL;
- (void)clickTextAnnotation:(struct _DGLMapTappedElement *)arg1;
- (void)layoutOpenGLViewWidth:(double)arg1 Height:(double)arg2;
- (void)layoutOpenGLViewPort:(double)arg1 Height:(double)arg2;
- (void)updateMap:(_Bool)arg1 withLayer:(_Bool)arg2;
- (void)forceFlush;
- (unsigned long long)currentTimeMillis;
- (_Bool)EndRender;
- (void)BeginRender;
- (void)restartAfterCrash;
- (_Bool)EndRender2;
- (_Bool)EndRender1;
- (void)BeginRender1;
- (void)discardFrameBuffer;
- (void)bindRenderBuffer:(unsigned int)arg1;
- (void)bindFrameBuffer:(unsigned int)arg1;
- (void)handleScreenUpdate:(double)arg1 shouldDraw:(_Bool)arg2;
- (void)stopAnimation;
- (void)startAnimation;
- (void)startAlwaysAnimation;
- (void)setMapViewPort:(int)arg1 height:(int)arg2;
- (void)setSetCenterOffsetYFinishedCompletionNil;
- (void)setAnnotationFinishBlockNil;
- (void)setGLViewPort;
- (void)glFbDestroy;
- (_Bool)glFbCreate;
- (void)layoutSubviews;
- (id)glContext;
- (void)initGLES;
- (void)destroyTileOverlays;
- (void)destroyTileDownloader;
- (void)destroyMapWorld;
- (void)dealloc;
- (void)releaseOutlets;
- (void)setApolloArgs:(id)arg1;
- (void)updateEdgePaddingDebugViews;
- (id)generateEdgePaddingDebugView;
- (void)createMapWorld;
- (void)innerInit:(struct CGRect)arg1 withDelegate:(id)arg2 mapLanguage:(int)arg3;
- (void)removeTileOverlay:(id)arg1;
- (int)addTileOverlay:(id)arg1;
@property(nonatomic) _Bool enableELDSSystem;
- (void)ulCenterXUpdateWithTimestamp:(double)arg1;
- (_Bool)resPackEnable;
- (int)naviCameraAnimationType;
- (float)skewAngleDefaultValue;
- (_Bool)isTargetUserForHandleCrash;
- (_Bool)isTargetDeviceTypeForHandleCrash;
- (_Bool)isNeedSpecialHandleForCrash;
- (void)tellEngineIsOpenSpecialHandleForCrash;
- (_Bool)checkAnimationState;
- (_Bool)isHiddenRedGuideLine;
- (_Bool)canRequestTrafficData;
- (_Bool)apolloValueByKey:(id)arg1 defaultValue:(_Bool)arg2;
- (_Bool)isHiddenLocatorAccuracyArea;
- (_Bool)isOpenSkewChangeTo3D;
- (_Bool)canRefresRainbow;
- (int)ercCatchTypeMetalErrorMask;
- (_Bool)ercCatchTypeFeatureLogDetail;
- (long long)ercCatchType;
- (_Bool)canShowRouteBubblesForTest;
- (_Bool)isUseBitmapTile;
- (_Bool)isUseSingleThread;
- (_Bool)canCreateThreadGLContext;
- (_Bool)openGL3Enabled;
- (_Bool)canShowRouteBubbles;
- (_Bool)useForceFlush;
- (_Bool)useDiscardForFrameBuffer;
@property(nonatomic) _Bool routeBubbleHidden;
@property(nonatomic) _Bool currentRBHidden;
- (struct CGRect)calRouteMarkerRect:(id)arg1;
- (struct CGRect)calLocatorRect;
- (struct CGRect)calMarkerRect:(id)arg1;
- (unsigned long long)getRouteBubbleType:(struct _DDMapPoint)arg1;
- (void)showRouteBubbleGroupAfterAvoid:(_Bool)arg1;
- (_Bool)checkRouteBubbleMarkerAvoid:(struct CGRect)arg1;
- (void)checkRouteBubbleKnocked;
- (void)checkRouteMarkersAvoid;
- (void)updateLocationRouteOverlayWithMarker:(id)arg1;
- (void)updateTypeRouteOverlayWithMarker:(id)arg1;
- (void)removeRouteOverlayWithMarker:(id)arg1;
- (void)updateRouteBubblesArr:(id)arg1;
- (void)addRouteOverlayWithMarker:(id)arg1;
- (void)naviRouteBubbleMarkerRemoveAll;
- (void)naviRouteBubbleCheckWithRoutes:(struct DMapAnnotationTextOnRoute *)arg1 andCount:(long long)arg2;
- (void)checkShowCurrentRouteBubble;
- (void)removeCurrentRoadName;
- (void)updateCurrentRouteBubble;
- (void)setCurrentRoadName:(id)arg1;
- (void)naviRouteBubbleInit;
- (id)redMarkerGroups;
- (struct _DDMapPoint)markerLocationWithGroup:(id)arg1;
- (void)updateMarkerGroup:(id)arg1 isHidden:(_Bool)arg2;
- (void)refreshOverlayMarkers;
- (void)naviCameraMarkerUpdate;
- (_Bool)naviCameraMarkerNeedHidden;
- (void)naviCameraMarkerRemoveAll;
- (void)naviCameraMarkerRemoveWithIndex:(int)arg1 type:(int)arg2 speed:(int)arg3;
- (void)setNaviCameraMarkPriorityWithId:(void *)arg1;
- (void)naviCameraMarkerAdd:(id)arg1;
- (void)naviCameraInit;
- (_Bool)isOpenGLOverlayHiddenWithId:(void *)arg1;
- (void)setOpenGLOverlayWithId:(void *)arg1 hidden:(_Bool)arg2;
- (_Bool)isOpenGLOverlayHidden:(int)arg1;
- (void)setOpenGLOverlay:(int)arg1 hidden:(_Bool)arg2;
- (void)removeOpenGLOverlayType:(int)arg1;
- (void)removeOpenGLOverlayWithId:(void *)arg1;
- (void)removeOpenGLOverlay:(void *)arg1 count:(int)arg2;
- (void)addOpenGLOverlay:(int)arg1 items:(struct DMapIconInfo *)arg2 count:(int)arg3 animated:(_Bool)arg4;
- (long long)buttonPositionType:(struct CGRect)arg1;
- (id)annotationFramesFromAnnotations:(id)arg1;
- (id)routeBoundaryPointRects;
- (struct CGRect)userLocationFrame;
- (id)checkRectsValid:(id)arg1;
- (struct CGRect)devVisibleRect:(id)arg1;
- (struct UIEdgeInsets)handleButtonOverlayAnnotation:(struct UIEdgeInsets)arg1 buttonRects:(id)arg2 mapItemRects:(id)arg3;
- (void)adjustBestViewWithEdgePadding:(struct UIEdgeInsets)arg1 annotationViews:(id)arg2 buttonRects:(id)arg3 animated:(_Bool)arg4;
- (struct CLLocationCoordinate2D)devToGeoGlobal:(struct CGPoint)arg1;
- (struct CGPoint)geoToDev:(struct _DDMapPoint)arg1;
- (struct _DDMapPoint)devToGeo:(struct CGPoint)arg1;
- (struct CGRect)devRectFromGeoRect:(CDStruct_02837cd9)arg1;
- (struct DMRect)geoRectFromDevRect:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

