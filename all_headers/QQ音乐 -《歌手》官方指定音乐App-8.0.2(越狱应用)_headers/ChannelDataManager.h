//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

#import "ProcessDownloadDelegate-Protocol.h"
#import "ProtocolHostDelegate-Protocol.h"
#import "UniteCgiHostDelegate-Protocol.h"

@class AlbumIntroductionProtocol, ChannelItem, ChannelV4Category, MusicListCategory, NSArray, NSDictionary, NSMutableArray, NSMutableDictionary, NSString, NSTimer, SongListItem, TodaySongReplaceCgi;
@protocol DownloadProgressDelegate;

@interface ChannelDataManager : NSObject <ProcessDownloadDelegate, ProtocolHostDelegate, UniteCgiHostDelegate>
{
    NSMutableDictionary *_memoryCache;
    NSMutableDictionary *_FMmemoryCache;
    AlbumIntroductionProtocol *_albumIntroProtocol;
    double _refreshInterval;
    NSMutableDictionary *_categoryClusterCache;
    _Bool _fecthRadioData;
    _Bool _hadUpdataRecommendData;
    _Bool _isFocusDataShown;
    _Bool _needUpdateMusicHallHotFold;
    _Bool _isDaySongsCgiRunning;
    int _waitingSomeDataCount;
    NSMutableArray *_guessYouLikeSongRecords;
    MusicListCategory *_selectedCategory;
    long long _recordingRadioId;
    NSDictionary *_radioTjReportDic;
    NSMutableArray *_folderSongs;
    ChannelV4Category *_curSelectedCategory;
    unsigned long long _qqUinByFetchFocusItem;
    unsigned long long _qqUinByFetchRecommendData;
    SongListItem *_eachDayRecommendSongs;
    NSMutableArray *_musicHallreFreshArray;
    ChannelItem *_requestPlayingChannelItem;
    NSMutableArray *_recentLitenRadio;
    NSDictionary *_tjReportInfo;
    long long _lastPlayCategoryId;
    NSMutableArray *_recentPlayCategoryList;
    NSTimer *_channelHomeDataRefreshTimer;
    NSTimer *_rankingRefreshTimer;
    NSTimer *_radioRefreshTimer;
    NSTimer *_squareRefreshTimer;
    NSTimer *_firstTimeDelayFetchRadioTimer;
    long long _recommendFreshTime;
    NSMutableDictionary *_dicType2ChannelListProtocol;
    NSMutableArray *_fmRadioIdList;
    NSMutableDictionary *_recommendLazyCache;
    NSMutableDictionary *_recommendLazyTimer;
    NSMutableDictionary *_recommendUniteData;
    NSMutableDictionary *_recommendPersonalRcmmData;
    NSMutableDictionary *_recommendUniteTimer;
    NSMutableDictionary *_recommendRunningDic;
    id <DownloadProgressDelegate> _downloadProgressDelegate;
    NSArray *_categoryData;
    TodaySongReplaceCgi *_todaySongsReplaceAllCgi;
}

+ (void)resetChannelRootVCToLastestVersionIfNewUser;
+ (id)getCacheKey:(id)arg1 channelItem:(id)arg2;
+ (id)sharedManager;
@property(nonatomic) _Bool isDaySongsCgiRunning; // @synthesize isDaySongsCgiRunning=_isDaySongsCgiRunning;
@property(retain, nonatomic) TodaySongReplaceCgi *todaySongsReplaceAllCgi; // @synthesize todaySongsReplaceAllCgi=_todaySongsReplaceAllCgi;
@property(retain, nonatomic) NSArray *categoryData; // @synthesize categoryData=_categoryData;
@property(nonatomic) __weak id <DownloadProgressDelegate> downloadProgressDelegate; // @synthesize downloadProgressDelegate=_downloadProgressDelegate;
@property(retain, nonatomic) NSMutableDictionary *recommendRunningDic; // @synthesize recommendRunningDic=_recommendRunningDic;
@property(retain, nonatomic) NSMutableDictionary *recommendUniteTimer; // @synthesize recommendUniteTimer=_recommendUniteTimer;
@property(retain, nonatomic) NSMutableDictionary *recommendPersonalRcmmData; // @synthesize recommendPersonalRcmmData=_recommendPersonalRcmmData;
@property(retain, nonatomic) NSMutableDictionary *recommendUniteData; // @synthesize recommendUniteData=_recommendUniteData;
@property(retain, nonatomic) NSMutableDictionary *recommendLazyTimer; // @synthesize recommendLazyTimer=_recommendLazyTimer;
@property(retain, nonatomic) NSMutableDictionary *recommendLazyCache; // @synthesize recommendLazyCache=_recommendLazyCache;
@property(retain, nonatomic) NSMutableArray *fmRadioIdList; // @synthesize fmRadioIdList=_fmRadioIdList;
@property(retain, nonatomic) NSMutableDictionary *dicType2ChannelListProtocol; // @synthesize dicType2ChannelListProtocol=_dicType2ChannelListProtocol;
@property(nonatomic) long long recommendFreshTime; // @synthesize recommendFreshTime=_recommendFreshTime;
@property(retain, nonatomic) NSTimer *firstTimeDelayFetchRadioTimer; // @synthesize firstTimeDelayFetchRadioTimer=_firstTimeDelayFetchRadioTimer;
@property(retain, nonatomic) NSTimer *squareRefreshTimer; // @synthesize squareRefreshTimer=_squareRefreshTimer;
@property(retain, nonatomic) NSTimer *radioRefreshTimer; // @synthesize radioRefreshTimer=_radioRefreshTimer;
@property(retain, nonatomic) NSTimer *rankingRefreshTimer; // @synthesize rankingRefreshTimer=_rankingRefreshTimer;
@property(retain, nonatomic) NSTimer *channelHomeDataRefreshTimer; // @synthesize channelHomeDataRefreshTimer=_channelHomeDataRefreshTimer;
@property(retain, nonatomic) NSMutableArray *recentPlayCategoryList; // @synthesize recentPlayCategoryList=_recentPlayCategoryList;
@property(nonatomic) long long lastPlayCategoryId; // @synthesize lastPlayCategoryId=_lastPlayCategoryId;
@property(retain, nonatomic) NSDictionary *tjReportInfo; // @synthesize tjReportInfo=_tjReportInfo;
@property(retain, nonatomic) NSMutableArray *recentLitenRadio; // @synthesize recentLitenRadio=_recentLitenRadio;
@property(retain) ChannelItem *requestPlayingChannelItem; // @synthesize requestPlayingChannelItem=_requestPlayingChannelItem;
@property(nonatomic) _Bool needUpdateMusicHallHotFold; // @synthesize needUpdateMusicHallHotFold=_needUpdateMusicHallHotFold;
@property(retain, nonatomic) NSMutableArray *musicHallreFreshArray; // @synthesize musicHallreFreshArray=_musicHallreFreshArray;
@property(nonatomic) _Bool isFocusDataShown; // @synthesize isFocusDataShown=_isFocusDataShown;
@property(nonatomic) int waitingSomeDataCount; // @synthesize waitingSomeDataCount=_waitingSomeDataCount;
@property(readonly, nonatomic) SongListItem *eachDayRecommendSongs; // @synthesize eachDayRecommendSongs=_eachDayRecommendSongs;
@property(nonatomic) _Bool hadUpdataRecommendData; // @synthesize hadUpdataRecommendData=_hadUpdataRecommendData;
@property(nonatomic) unsigned long long qqUinByFetchRecommendData; // @synthesize qqUinByFetchRecommendData=_qqUinByFetchRecommendData;
@property(nonatomic) unsigned long long qqUinByFetchFocusItem; // @synthesize qqUinByFetchFocusItem=_qqUinByFetchFocusItem;
@property(retain) ChannelV4Category *curSelectedCategory; // @synthesize curSelectedCategory=_curSelectedCategory;
@property(retain) NSMutableArray *folderSongs; // @synthesize folderSongs=_folderSongs;
@property(retain, nonatomic) NSDictionary *radioTjReportDic; // @synthesize radioTjReportDic=_radioTjReportDic;
@property long long recordingRadioId; // @synthesize recordingRadioId=_recordingRadioId;
@property(retain) MusicListCategory *selectedCategory; // @synthesize selectedCategory=_selectedCategory;
@property(retain) NSMutableArray *guessYouLikeSongRecords; // @synthesize guessYouLikeSongRecords=_guessYouLikeSongRecords;
- (void).cxx_destruct;
- (void)cacheEachDayRecDataWithData:(id)arg1;
- (id)queryJumpUrlCateGoryID:(long long)arg1 categoryName:(id)arg2;
- (void)setNewCategoryData:(id)arg1;
- (id)todayDateByFormatYYYYMMDD;
- (void)saveRecentPlayCategoryList;
- (void)uploadRecentPlayCategory:(id)arg1;
- (void)loadRecentPlayCategoryList;
- (void)addRecentPlayCategory:(id)arg1;
- (void)addRecentListenRadioCome:(id)arg1;
- (void)uploadRecentListenRadio;
- (void)saveRecentListenRadio;
- (void)loadRecentListenRadio;
- (void)cleanCachedData;
- (void)hostCallBackWithWorkProtocol:(id)arg1 protocolError:(id)arg2;
- (void)hostCallBackWithUniteCgi:(id)arg1 protocolError:(id)arg2;
- (void)storeTodaySongsListItem:(id)arg1;
- (void)storeRadioMusicListData:(id)arg1;
- (_Bool)isFocusArraySameAsCurrent:(id)arg1;
- (void)checkShowSelectTasteAlertWithBlock:(CDUnknownBlockType)arg1;
- (void)postNoInterestChannelWithOrignl:(id)arg1 replace:(id)arg2 withErr:(long long)arg3;
- (void)saveRecommendData;
- (void)replaceNoInterestChannelItem:(id)arg1 orignal:(id)arg2 replace:(id)arg3;
- (void)replaceTodaySongsWith:(id)arg1 needRemoveDuplicate:(_Bool)arg2;
- (void)noInterestingItemCallBack:(id)arg1 replaceItem:(id)arg2;
- (void)cancelFetchingTodaySongs;
- (void)fetchTodaySongs:(_Bool)arg1;
- (void)fetchChannelNoInterestSong:(id)arg1;
- (void)fetchChannelNoInterestItem:(id)arg1;
- (void)_onNotifyTaogeDarenFollowListNeedChange:(id)arg1;
- (void)_logout;
- (void)_loginSuccess;
- (id)_filePathForSongRecordOfGuessYouLikeRadio;
- (void)_saveGuessYouLikeSongRecordsToFile;
- (void)_restorGuessYouLikeSongRecordsFromFile;
- (void)_recordGuessYouLikeSongList:(id)arg1;
- (void)_playListIndexChanged:(id)arg1;
- (void)changRadioSongList;
- (id)_memCacheKeyForRadio:(long long)arg1;
- (void)safeStopRankingRefreshTimer;
- (void)safeStopRadioRefreshTimer;
- (void)safeStopSquareRefreshTimer;
- (void)restartRankingRefreshTimer:(double)arg1;
- (void)restartRadioRefreshTimer:(double)arg1;
- (void)restartRefreshTimer:(double)arg1 requestType:(unsigned long long)arg2;
- (void)restartSquareRefreshTimer:(double)arg1;
- (void)_safeStopChannelHomeRefreshTimer;
- (void)_restartChannelHomeRefreshTimer:(SEL)arg1;
- (void)_postNotification:(id)arg1 data:(id)arg2;
- (void)_postChannelHomeDataDidUpdateNotification;
- (void)_postFocusItemsDidUpdateNotification;
- (void)_postAlbumIntroductionDidUpdateNotification:(id)arg1;
- (void)_postTopicChannelListDidUpdateNotification:(id)arg1;
- (void)_postRadioSongListDidUpdateNotification:(id)arg1;
- (void)postUpdateNotificationForSongList:(id)arg1 netProtocol:(id)arg2;
- (void)_postSongListDidUpdateNotification:(id)arg1 netProtocol:(id)arg2;
- (id)_generateErrorWithErrorMsg:(id)arg1 eProtocolError:(long long)arg2;
- (void)_postNotification:(id)arg1 withErrorMsg:(id)arg2 eProtocolError:(long long)arg3;
- (void)_postNotification:(id)arg1 withErrorMsg:(id)arg2 eProtocolError:(long long)arg3 raidoId:(int)arg4;
- (void)saveRadioDataToFMCache:(id)arg1 withKey:(id)arg2;
- (void)_saveDataToMemCache:(id)arg1 withKey:(id)arg2;
- (id)_fetchDataFromMemCache:(id)arg1;
- (id)getCategoryClusterCacheByCategoryId:(long long)arg1;
- (void)addCategoryClusterCache:(id)arg1 withCategoryId:(long long)arg2;
- (_Bool)getCategoryDetailList:(id)arg1 ByCluster:(id)arg2 QueryType:(int)arg3 ForceRefresh:(_Bool)arg4;
- (void)doFetchV4CategoryPageData:(_Bool)arg1;
- (void)delayFetchV4CategoryData:(id)arg1;
- (void)fetchV4CategoryPageData:(_Bool)arg1;
- (void)reFetchRadioData;
- (void)reFetchRankingData;
- (void)reFetchCurCategorySquareData;
- (void)delayFetchSquareDataWithObject:(id)arg1;
- (void)fetchChannelSqureData:(id)arg1 andForceRefresh:(_Bool)arg2;
- (void)reportSongListPlayAction:(id)arg1;
- (void)postReadyToPlayChannelItemNotification:(id)arg1;
- (id)cacheKeyForRequestingChannelItem;
- (void)requestPlayingSongListForChannelItem:(id)arg1;
- (void)requestFirstReleaseSongDataForIndex:(long long)arg1 withTypes:(id)arg2;
- (id)getTaogeDarenFollowActionKey:(unsigned long long)arg1 encryptedUin:(id)arg2;
- (void)followTaogeDaren:(unsigned long long)arg1 encryptedUin:(id)arg2 andIsFollow:(_Bool)arg3;
- (id)getTaogeDarenListKey:(unsigned long long)arg1;
- (void)fetchFollowedTaogeDarenListForUser:(unsigned long long)arg1;
- (void)clearGuessYouLikeCacheData;
- (void)didReceiveMemoryWarning;
- (id)cacheKeyForRadioListOfCategory:(int)arg1;
- (void)delayFetchRadioListByCategoryId:(id)arg1;
- (void)fetchRadioListByCategoryId:(int)arg1;
- (void)delayFetchDetailChannelListByTypeData:(unsigned long long)arg1 useCache:(_Bool)arg2;
- (void)fetchDetailChannelListByType:(unsigned long long)arg1;
- (id)removeRadioOutDateData:(id)arg1;
- (void)delayFetchRadioPageData;
- (void)fetchRadioPageData;
- (_Bool)fetchCategoricalSongFolderList:(id)arg1 loadMore:(_Bool)arg2 from:(int)arg3;
- (void)delayFetchRadioCategories;
- (void)fetchRadioCategories;
- (void)getCategoriesDataWhenLogin;
- (void)fetchSquareCategories;
- (void)fetchMusicListCategories;
- (id)generateChannelHomeData;
- (void)delayFetchFocusData:(id)arg1;
- (_Bool)hasCacheDataForFocusItems;
- (void)fetchFocusItems:(_Bool)arg1;
- (void)fetchFocusItems;
- (_Bool)hasCacheDataForAlbumIntroduction:(id)arg1;
- (void)fetchAlbumIntroduction:(id)arg1;
- (void)tryToRefreshMusicHallWithGroupIdArray:(id)arg1;
- (void)fetchMusicHallGroupChange:(long long)arg1;
- (void)fetchMusicHallPersonalRecmm;
- (void)fetchMusicHallPersonalRadio;
- (void)musichallCallBack;
- (void)delayToPostBackCallMusicHall;
- (void)postBackCallMusicHallWithNoDelay;
- (id)fetchRecommendUniteWithGroupId:(long long)arg1;
- (void)doFetchV4RecommendUniteData:(_Bool)arg1 withModules:(id)arg2;
- (void)doFetchV4RecommendUniteWithModuleArray:(id)arg1 forceRefresh:(_Bool)arg2;
- (void)doFetchV4RecommendUniteWithModule:(long long)arg1 forceRefresh:(_Bool)arg2;
- (void)doFetchV4RecommendUniteWithAll:(_Bool)arg1;
- (id)removeRecommendOutDateData:(id)arg1;
- (void)fetchV4RecommendDataUseCache:(_Bool)arg1 refreshType:(long long)arg2;
- (void)tryToTransformEachDayCache:(id)arg1;
- (id)getEachDayRecCacheData;
- (void)refreshRecommendLocolLazyData:(_Bool)arg1;
- (id)getLasyDataByGroupId:(unsigned long long)arg1;
- (_Bool)hasNextPageForTopicChannelList:(id)arg1;
- (_Bool)hasCacheDataForTopicChannelList:(id)arg1;
- (void)fetchTopicChannelList:(id)arg1 loadMore:(_Bool)arg2 channelItem:(id)arg3;
- (_Bool)hasCacheDataForRadioSongList:(int)arg1;
- (_Bool)removeSongFromHistory:(id)arg1;
- (void)radioCategoriesDataDidUpdate:(id)arg1;
- (_Bool)isFMRadio:(int)arg1;
- (id)getGuessyouNotificationKey;
- (id)getILikeRadioSongArray;
- (void)fetchRadioSongList:(int)arg1 refresh:(_Bool)arg2;
- (void)fetchRadioSongListInternal:(int)arg1 refresh:(_Bool)arg2 callBack:(CDUnknownBlockType)arg3;
- (void)fetchRadioSongList:(int)arg1 refresh:(_Bool)arg2 callBack:(CDUnknownBlockType)arg3;
- (void)handleRadioProtocolFinish:(id)arg1 protocolError:(id)arg2;
- (_Bool)hasNextPageForSongList:(id)arg1;
- (_Bool)hasCacheDataForSongList:(id)arg1;
- (void)fetchSongList:(id)arg1 loadMore:(_Bool)arg2 channelItemKey:(id)arg3 from:(int)arg4 forceRefresh:(_Bool)arg5;
- (void)setDownLoadProgressValue:(float)arg1;
- (void)fetchSongListWithloadMore:(_Bool)arg1 channelItemKey:(id)arg2 from:(int)arg3 forceRefresh:(_Bool)arg4 downloadPercentDelegate:(id)arg5;
- (void)fetchFolderContributionStatus:(id)arg1;
- (void)fetchSongList:(id)arg1 loadMore:(_Bool)arg2 channelItemKey:(id)arg3 from:(int)arg4 forceRefresh:(_Bool)arg5 requestType:(long long)arg6;
- (void)fetchTodaySongList:(id)arg1 forceRefresh:(_Bool)arg2 requestType:(long long)arg3 playOnly:(_Bool)arg4 playItem:(id)arg5;
- (void)fetchFolderInfo:(id)arg1 channelItemKey:(id)arg2 from:(int)arg3;
- (void)removeSongListCache:(id)arg1;
- (Class)_getTopicChannelProtocolClass:(id)arg1;
- (Class)_getChannelInfoProtocolClass:(id)arg1;
- (void)awake;
- (id)getSonglistFromFolderInfo:(id)arg1;
- (void)removeLatestFavBySelf:(id)arg1;
- (void)onNotifyVipPurchaseSuccess:(id)arg1;
- (id)init;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

