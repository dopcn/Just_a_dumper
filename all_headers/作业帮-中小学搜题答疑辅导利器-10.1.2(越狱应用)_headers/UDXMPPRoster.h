//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "UDXMPPModule.h"

@class NSMutableArray, UDList, UDXMPPIDTracker;
@protocol UDXMPPRosterStorage;

@interface UDXMPPRoster : UDXMPPModule
{
    id <UDXMPPRosterStorage> xmppRosterStorage;
    UDXMPPIDTracker *xmppIDTracker;
    unsigned char config;
    unsigned char flags;
    NSMutableArray *earlyPresenceElements;
    UDList *mucModules;
}

- (void).cxx_destruct;
- (void)xmppStreamDidDisconnect:(id)arg1 withError:(id)arg2;
- (void)xmppStream:(id)arg1 didSendPresence:(id)arg2;
- (void)xmppStream:(id)arg1 didReceivePresence:(id)arg2;
- (_Bool)xmppStream:(id)arg1 didReceiveIQ:(id)arg2;
- (void)xmppStreamDidAuthenticate:(id)arg1;
- (void)handleFetchRosterQueryIQ:(id)arg1 withInfo:(id)arg2;
- (void)fetchRoster;
- (void)rejectPresenceSubscriptionRequestFrom:(id)arg1;
- (void)acceptPresenceSubscriptionRequestFrom:(id)arg1 andAddToRoster:(_Bool)arg2;
- (void)removeUser:(id)arg1;
- (void)revokePresencePermissionFromUser:(id)arg1;
- (void)unsubscribePresenceFromUser:(id)arg1;
- (void)subscribePresenceToUser:(id)arg1;
- (void)setNickname:(id)arg1 forUser:(id)arg2;
- (void)addUser:(id)arg1 withNickname:(id)arg2 groups:(id)arg3 subscribeToPresence:(_Bool)arg4;
- (void)addUser:(id)arg1 withNickname:(id)arg2 groups:(id)arg3;
- (void)addUser:(id)arg1 withNickname:(id)arg2;
- (_Bool)isRosterItem:(id)arg1;
- (void)_addRosterItems:(id)arg1;
- (void)_setPopulatingRoster:(_Bool)arg1;
- (_Bool)_populatingRoster;
- (void)_setHasRoster:(_Bool)arg1;
- (void)_setRequestedRoster:(_Bool)arg1;
- (_Bool)_requestedRoster;
@property(readonly) _Bool hasRoster;
@property(readonly, getter=isPopulating) _Bool populating;
@property(readonly, getter=hasRequestedRoster) _Bool requestedRoster;
@property _Bool allowRosterlessOperation;
@property _Bool autoAcceptKnownPresenceSubscriptionRequests;
@property _Bool autoClearAllUsersAndResources;
@property _Bool autoFetchRoster;
@property(readonly) id <UDXMPPRosterStorage> xmppRosterStorage;
- (id)multicastDelegate;
- (void)deactivate;
- (_Bool)activate:(id)arg1;
- (id)initWithRosterDispatchQueue:(id)arg1;
- (id)init;

@end

