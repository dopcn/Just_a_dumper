//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

#import "PlayerFilePoolDelegate-Protocol.h"
#import "SVInspectorVideoSource-Protocol.h"
#import "SVPlayingVideoSource-Protocol.h"

@class ASIHTTPRequest, ASINetworkQueue, NSArray, NSLock, NSMutableArray, NSMutableDictionary, NSString, PlayerFilePool, TSDownloadTask, VideoDownloadStrategy;

@interface CDNDataLoadingTaskMgr : NSObject <SVPlayingVideoSource, SVInspectorVideoSource, PlayerFilePoolDelegate>
{
    _Bool allowsRouterCache;
    _Bool allowsRouterSwitchQuality;
    _Bool routerCacheError;
    _Bool _isLiveVideo;
    _Bool _m3u8RequestIsCanceled;
    long long routerCacheVideoQuality;
    NSArray *_requestUrls;
    long long _videoId;
    long long _videoQuality;
    ASINetworkQueue *_taskQueue;
    NSArray *_taskList;
    NSMutableArray *_waitQueue;
    NSString *_wifiM3U8FilePath;
    NSString *_localM3U8FilePath;
    NSString *_m3u8NetPath;
    NSString *_localVideoFilePath;
    TSDownloadTask *_tsLoadingTask;
    long long _tsCurrentIndex;
    NSString *_m3u8URL;
    NSString *_m3u8RedirectURL;
    ASIHTTPRequest *_m3u8URLRequest;
    long long _m3u8RequestCount;
    long long _m3u8RequestStatusCode;
    PlayerFilePool *_tsPool;
    NSLock *_queueLock;
    VideoDownloadStrategy *_downloadStrategy;
    CDUnknownBlockType _prepareCallback;
    CDUnknownBlockType _loadTSFileCallback;
    CDUnknownBlockType _loadTSFileErrorCallback;
    CDUnknownBlockType _requestFinishedCallBack;
    NSMutableArray *_backupDispatchAddrs;
}

@property(retain, nonatomic) NSMutableArray *backupDispatchAddrs; // @synthesize backupDispatchAddrs=_backupDispatchAddrs;
@property(copy, nonatomic) CDUnknownBlockType requestFinishedCallBack; // @synthesize requestFinishedCallBack=_requestFinishedCallBack;
@property(copy, nonatomic, setter=_setLoadTSFileErrorCallback:) CDUnknownBlockType loadTSFileErrorCallback; // @synthesize loadTSFileErrorCallback=_loadTSFileErrorCallback;
@property(copy, nonatomic) CDUnknownBlockType loadTSFileCallback; // @synthesize loadTSFileCallback=_loadTSFileCallback;
@property(copy, nonatomic) CDUnknownBlockType prepareCallback; // @synthesize prepareCallback=_prepareCallback;
@property(retain) VideoDownloadStrategy *downloadStrategy; // @synthesize downloadStrategy=_downloadStrategy;
@property(retain) NSLock *queueLock; // @synthesize queueLock=_queueLock;
@property(retain, nonatomic) PlayerFilePool *tsPool; // @synthesize tsPool=_tsPool;
@property(nonatomic) _Bool m3u8RequestIsCanceled; // @synthesize m3u8RequestIsCanceled=_m3u8RequestIsCanceled;
@property(nonatomic) long long m3u8RequestStatusCode; // @synthesize m3u8RequestStatusCode=_m3u8RequestStatusCode;
@property(nonatomic) long long m3u8RequestCount; // @synthesize m3u8RequestCount=_m3u8RequestCount;
@property(retain, nonatomic) ASIHTTPRequest *m3u8URLRequest; // @synthesize m3u8URLRequest=_m3u8URLRequest;
@property(copy, nonatomic) NSString *m3u8RedirectURL; // @synthesize m3u8RedirectURL=_m3u8RedirectURL;
@property(copy, nonatomic) NSString *m3u8URL; // @synthesize m3u8URL=_m3u8URL;
@property(nonatomic) _Bool isLiveVideo; // @synthesize isLiveVideo=_isLiveVideo;
@property(nonatomic) long long tsCurrentIndex; // @synthesize tsCurrentIndex=_tsCurrentIndex;
@property(retain, nonatomic) TSDownloadTask *tsLoadingTask; // @synthesize tsLoadingTask=_tsLoadingTask;
@property(retain, nonatomic) NSString *localVideoFilePath; // @synthesize localVideoFilePath=_localVideoFilePath;
@property(copy, nonatomic) NSString *m3u8NetPath; // @synthesize m3u8NetPath=_m3u8NetPath;
@property(copy, nonatomic) NSString *localM3U8FilePath; // @synthesize localM3U8FilePath=_localM3U8FilePath;
@property(copy, nonatomic) NSString *wifiM3U8FilePath; // @synthesize wifiM3U8FilePath=_wifiM3U8FilePath;
@property(retain, nonatomic) NSMutableArray *waitQueue; // @synthesize waitQueue=_waitQueue;
@property(retain, nonatomic) NSArray *taskList; // @synthesize taskList=_taskList;
@property(retain, nonatomic) ASINetworkQueue *taskQueue; // @synthesize taskQueue=_taskQueue;
@property(nonatomic) long long videoQuality; // @synthesize videoQuality=_videoQuality;
@property(nonatomic) long long videoId; // @synthesize videoId=_videoId;
@property(retain, nonatomic) NSArray *requestUrls; // @synthesize requestUrls=_requestUrls;
@property(nonatomic) long long routerCacheVideoQuality; // @synthesize routerCacheVideoQuality;
@property(nonatomic) _Bool routerCacheError; // @synthesize routerCacheError;
@property(nonatomic) _Bool allowsRouterSwitchQuality; // @synthesize allowsRouterSwitchQuality;
@property(nonatomic) _Bool allowsRouterCache; // @synthesize allowsRouterCache;
- (void)dealloc;
- (void)loadLocalTSFiles;
- (void)updateWaitQueue;
- (_Bool)isLocalVideo;
- (id)getBaseURL:(id)arg1;
- (void)reportTSFileDownloadError:(id)arg1;
- (_Bool)judgeLiveVideo:(id)arg1;
- (id)getVideoFilePathViaVideoId:(long long)arg1 cachePath:(id)arg2;
- (_Bool)verifyM3U8File:(id)arg1 callback:(CDUnknownBlockType)arg2;
- (void)createLocalM3U8FileViaM3U8URL:(id)arg1 videoId:(long long)arg2 tsPrefix:(id)arg3 callback:(CDUnknownBlockType)arg4;
- (id)cloneTSDownLoadTaskFrom:(id)arg1 index:(long long)arg2;
- (id)getLoadingTaskVia:(long long)arg1;
- (id)getPreloadArrayBeginIndex:(long long)arg1 length:(long long)arg2;
- (long long)getTaskIndexVia:(id)arg1;
- (void)poolLimitExceeded:(id)arg1;
- (void)tsDownloadTaskQueueFinished:(id)arg1;
- (void)tsDownloadTaskFailed:(id)arg1;
- (void)tsDownloadTaskFinished:(id)arg1;
- (void)tsDownloadTaskRequest:(id)arg1 didRecieveResponseHeaders:(id)arg2;
- (void)tsDownloadTaskStarted:(id)arg1;
- (id)rawTSDownloadTask:(id)arg1;
- (void)configLoadM3U8FinishedCallback:(CDUnknownBlockType)arg1;
- (void)configFileRequestFinishedCallback:(CDUnknownBlockType)arg1;
- (unsigned long long)currentTSDownloadSpeed;
- (double)cacheProgressFrom:(double)arg1;
- (void)stopForPlaying;
- (double)timestampForTsIndex:(long long)arg1;
- (void)updateCurrentTSName:(id)arg1;
- (void)currentTSFileStatusWithCallback:(CDUnknownBlockType)arg1;
- (id)currentTSFileStatus;
- (void)setLoadTSFileErrorCallback:(CDUnknownBlockType)arg1;
- (void)loadTSFileForPlayingWithName:(id)arg1 callback:(CDUnknownBlockType)arg2;
- (id)tsFilePathForPlayingWithName:(id)arg1;
- (void)deleteLocalM3U8FileForPlaying;
- (void)createLocalM3U8FileForPlayingWithLocalHost:(id)arg1;
- (id)m3u8FilePathForPlayingWithLocalTS;
- (void)loadM3U8FileForPlayingWithTSPrefix:(id)arg1 isAirPlay:(_Bool)arg2 callback:(CDUnknownBlockType)arg3;
- (id)m3u8FilePathForPlaying;
- (double)requestTimeout;
- (void)startForPlaying;
@property(readonly, nonatomic) long long vid;
@property(readonly, nonatomic) _Bool usingRouterCache; // @dynamic usingRouterCache;
- (int)getStreamingType;
- (long long)getVideoId;
- (void)setVideoDownloadStrategy:(id)arg1;
- (_Bool)isReportingTimeForTheLastTsloaded;
- (void)retainAndAutoreleaseAfterDelay;
- (void)removeSelfFromDisk;
- (id)initWithVideoId:(long long)arg1 videoQuality:(long long)arg2 m3u8URL:(id)arg3 savePath:(id)arg4 VideoStreamingType:(int)arg5;
@property(nonatomic) long long lastRespondedPlayerTSTaskIndex;
@property(retain, nonatomic) NSMutableDictionary *haveRequestedTSTaskList;
- (void)removeRequesedTSTaskForIndex:(long long)arg1;
- (id)lastRespondedToPlayerTSTask;
- (id)requestedTSTaskForIndex:(long long)arg1;
- (void)appendNewRequestedTSTask:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

