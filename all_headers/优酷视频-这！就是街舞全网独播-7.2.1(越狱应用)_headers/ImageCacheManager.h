//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "CacheManager.h"

@class ImageMemoryCache, NSMutableDictionary, NSTimer, YKFTaskQueue;

@interface ImageCacheManager : CacheManager
{
    _Bool _isUpdateCacheInfo;
    int _maxImageCacheAge;
    YKFTaskQueue *_taskQueue;
    NSMutableDictionary *_cacheStoreMaps;
    ImageMemoryCache *_memoryCache;
    NSTimer *_updateCacheTimer;
}

@property(nonatomic) _Bool isUpdateCacheInfo; // @synthesize isUpdateCacheInfo=_isUpdateCacheInfo;
@property(retain, nonatomic) NSTimer *updateCacheTimer; // @synthesize updateCacheTimer=_updateCacheTimer;
@property(retain, nonatomic) ImageMemoryCache *memoryCache; // @synthesize memoryCache=_memoryCache;
@property(retain, nonatomic) NSMutableDictionary *cacheStoreMaps; // @synthesize cacheStoreMaps=_cacheStoreMaps;
@property(nonatomic) int maxImageCacheAge; // @synthesize maxImageCacheAge=_maxImageCacheAge;
@property(retain, nonatomic) YKFTaskQueue *taskQueue; // @synthesize taskQueue=_taskQueue;
- (void).cxx_destruct;
- (id)getMemoryCache;
- (long long)getAllCacheSize;
- (id)getCacheStore:(id)arg1;
- (void)clearAllCacheStore;
- (void)clearCacheStore:(id)arg1;
- (void)remove:(id)arg1;
- (id)query:(id)arg1 cacheStore:(id)arg2 block:(CDUnknownBlockType)arg3;
- (id)get:(id)arg1 isExpire:(_Bool *)arg2 cacheStore:(id)arg3;
- (_Bool)diskImageExistsWithKey:(id)arg1;
- (_Bool)diskImageExistsWithKey:(id)arg1 cacheStore:(id)arg2;
- (void)clearMemory;
- (id)getImageKeyListWithPrefix:(id)arg1 cacheStore:(id)arg2;
- (id)getImageKeyListWithPrefix:(id)arg1;
- (void)removeImageForKey:(id)arg1 fromDisk:(_Bool)arg2 cacheStore:(id)arg3;
- (void)removeWithPrefix:(id)arg1 cacheStore:(id)arg2;
- (void)remove:(id)arg1 cacheStore:(id)arg2;
- (void)removeImageForKey:(id)arg1 cacheStore:(id)arg2;
- (void)removeImageForKey:(id)arg1;
- (id)getImageFromMemoryForKey:(id)arg1;
- (id)buildQueryTaskWithDataKey:(id)arg1;
- (id)buildQueryTaskWithDataKey:(id)arg1 cacheStore:(id)arg2;
- (id)queryImage:(id)arg1 block:(CDUnknownBlockType)arg2;
- (id)queryImage:(id)arg1 cacheStore:(id)arg2 block:(CDUnknownBlockType)arg3;
- (id)getImage:(id)arg1 isExpire:(_Bool *)arg2;
- (id)getImage:(id)arg1 isExpire:(_Bool *)arg2 fromDisk:(_Bool *)arg3 cacheStore:(id)arg4;
- (id)getLocalImageFromURL:(id)arg1;
- (id)getWebImageData:(id)arg1 cacheStore:(id)arg2;
- (void)putWebImageToMemory:(id)arg1 image:(id)arg2 imageData:(id)arg3;
- (void)putWebImage:(id)arg1 image:(id)arg2 imageData:(id)arg3 cacheStore:(id)arg4;
- (void)put:(id)arg1 data:(id)arg2 expire:(double)arg3 cacheStore:(id)arg4;
- (void)put:(id)arg1 image:(id)arg2 imageData:(id)arg3;
- (void)put:(id)arg1 image:(id)arg2 imageData:(id)arg3 cacheStore:(id)arg4;
- (void)putMemory:(id)arg1 image:(id)arg2 imageData:(id)arg3 cacheStore:(id)arg4;
- (void)appWillTerminate:(id)arg1;
- (void)didReceiveMemoryWarning:(id)arg1;
- (id)init;
- (void)updateCacheStoreInfo;
- (void)setCachePolicyForStore:(id)arg1 diskLimitSize:(long long)arg2 diskLimitCount:(int)arg3 maxCacheAge:(double)arg4 allowAutoClean:(_Bool)arg5;
- (id)cacheStoreForKey:(id)arg1;

@end

