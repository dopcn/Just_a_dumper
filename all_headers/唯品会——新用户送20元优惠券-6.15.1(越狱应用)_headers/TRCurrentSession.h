//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class NSMutableDictionary, NSMutableSet, NSOperationQueue, NSString, TRAnalyticsReporterOperation, TRObservedEntity, TRRulesOperation, TRTranslationsMapping, TRUserSession;
@protocol OS_dispatch_queue, TapReasonActionRuleTriggerListener;

@interface TRCurrentSession : NSObject
{
    _Bool isInitialized;
    _Bool errorHappenedInInit;
    _Bool indRulesLoaded;
    _Bool isSessionActive;
    NSMutableDictionary *pages;
    NSString *appId;
    NSString *appKey;
    TRUserSession *currentInternalUserSession;
    NSOperationQueue *lifecycleEventsQueue;
    TRObservedEntity *currentObservedEntity;
    NSObject<OS_dispatch_queue> *workerQueue;
    TRRulesOperation *rulesOperation;
    TRAnalyticsReporterOperation *analyticsReporterOperation;
    unsigned long long analyticsReporterBackgroundTaskID;
    NSObject<OS_dispatch_queue> *backgroundTaskIsolationQueue;
    NSMutableSet *backgroundTaskIds;
    long long analyticsReportToSendMask;
    id <TapReasonActionRuleTriggerListener> actionRuleTriggerListener;
    TRTranslationsMapping *translationMappings;
}

+ (id)instance;
@property(retain, nonatomic) TRTranslationsMapping *translationMappings; // @synthesize translationMappings;
@property(retain) id <TapReasonActionRuleTriggerListener> actionRuleTriggerListener; // @synthesize actionRuleTriggerListener;
@property(nonatomic) long long analyticsReportToSendMask; // @synthesize analyticsReportToSendMask;
@property(retain) NSMutableSet *backgroundTaskIds; // @synthesize backgroundTaskIds;
@property(retain) NSObject<OS_dispatch_queue> *backgroundTaskIsolationQueue; // @synthesize backgroundTaskIsolationQueue;
@property unsigned long long analyticsReporterBackgroundTaskID; // @synthesize analyticsReporterBackgroundTaskID;
@property(retain) TRAnalyticsReporterOperation *analyticsReporterOperation; // @synthesize analyticsReporterOperation;
@property(retain) TRRulesOperation *rulesOperation; // @synthesize rulesOperation;
@property(nonatomic) _Bool isSessionActive; // @synthesize isSessionActive;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *workerQueue; // @synthesize workerQueue;
@property _Bool indRulesLoaded; // @synthesize indRulesLoaded;
@property(retain, nonatomic) TRObservedEntity *currentObservedEntity; // @synthesize currentObservedEntity;
@property(retain) NSOperationQueue *lifecycleEventsQueue; // @synthesize lifecycleEventsQueue;
@property(retain, nonatomic) TRUserSession *currentInternalUserSession; // @synthesize currentInternalUserSession;
@property(retain, nonatomic) NSString *appKey; // @synthesize appKey;
@property(retain, nonatomic) NSString *appId; // @synthesize appId;
@property(retain, nonatomic) NSMutableDictionary *pages; // @synthesize pages;
@property _Bool errorHappenedInInit; // @synthesize errorHappenedInInit;
@property _Bool isInitialized; // @synthesize isInitialized;
- (void).cxx_destruct;
- (id)innerGetSessionId;
- (void)innerPageDidDisappear:(id)arg1 uniquePageKey:(id)arg2;
- (void)innerPageDidAppear:(id)arg1 uniquePageKey:(id)arg2;
- (id)generateUniqueKeyForController:(id)arg1;
- (void)applicationGotMemoryWarning;
- (void)applicationWillTerminate;
- (void)applicationMovedToBackground;
- (void)applicationBecomeActive;
- (void)removeAnalyticsOperation:(id)arg1;
- (void)finishAnalyticsBackgroundTask;
- (void)finishAnalyticsBackgroundTask:(_Bool)arg1;
- (void)innerFinishAnalyticsBackgroundOperation;
- (void)submitAnalyticsReporterOperationWithMode:(long long)arg1;
- (void)removeAnalyticsReporterOperation;
- (void)removeRulesRequestOperation:(id)arg1;
- (void)removeLoadRulesOperation;
- (void)customEventWithName:(id)arg1 inController:(id)arg2 eventResult:(long long)arg3;
- (void)customEventWithName:(id)arg1 eventResult:(long long)arg2;
- (id)currentUserToken;
- (id)currentUserId;
- (_Bool)isActiveSession;
- (id)currentRegisteredPage;
- (void)updateCurrentSessionIndex:(long long)arg1;
- (id)currentSession;
- (id)currentSessionId;
- (void)setActionRuleTriggerListenerDelegate:(id)arg1;
- (void)reportResultOnAction:(long long)arg1 state:(id)arg2 type:(long long)arg3;
- (void)pageDidDisappear:(id)arg1;
- (void)pageDidAppear:(id)arg1;
- (void)initWithApp:(id)arg1 appKey:(id)arg2;
- (id)init;

@end

