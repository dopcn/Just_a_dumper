//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

#import "NBSPlayerCoreDelegate-Protocol.h"
#import "NBSVPSFetchObserver-Protocol.h"

@class NBSPlayerMonitor, NBSVPSFetchQueue, NSHashTable, NSString, NSTimer;
@protocol NBSPlayerCore, NBSPlayerDataSource;

@interface NBSPlayer : NSObject <NBSPlayerCoreDelegate, NBSVPSFetchObserver>
{
    _Bool _isCachedEndOfFile;
    _Bool _headPhonePlugined;
    _Bool _wasPlaying;
    id <NBSPlayerDataSource> _dataSource;
    unsigned long long _activeState;
    double _timeCountingValue;
    double _timeCounting;
    long long _clockingType;
    id _playlistHolder;
    id <NBSPlayerCore> _corePlayer;
    NSHashTable *_observerList;
    NBSVPSFetchQueue *_vpsFetchQueue;
    NSTimer *_playerClockingTimer;
    NSTimer *_playerCurrentTimer;
    double _currentManualTime;
    NBSPlayerMonitor *_playerMonitor;
}

+ (void)endReceivingRemoteControlEvents;
+ (void)beginReceivingRemoteControlEvents;
+ (id)sharedPlayer;
+ (id)coreFactory;
@property(retain, nonatomic) NBSPlayerMonitor *playerMonitor; // @synthesize playerMonitor=_playerMonitor;
@property(nonatomic) double currentManualTime; // @synthesize currentManualTime=_currentManualTime;
@property(retain, nonatomic) NSTimer *playerCurrentTimer; // @synthesize playerCurrentTimer=_playerCurrentTimer;
@property(retain, nonatomic) NSTimer *playerClockingTimer; // @synthesize playerClockingTimer=_playerClockingTimer;
@property(retain, nonatomic) NBSVPSFetchQueue *vpsFetchQueue; // @synthesize vpsFetchQueue=_vpsFetchQueue;
@property(nonatomic) _Bool wasPlaying; // @synthesize wasPlaying=_wasPlaying;
@property(retain, nonatomic) NSHashTable *observerList; // @synthesize observerList=_observerList;
@property(retain, nonatomic) id <NBSPlayerCore> corePlayer; // @synthesize corePlayer=_corePlayer;
@property(nonatomic) __weak id playlistHolder; // @synthesize playlistHolder=_playlistHolder;
@property(readonly, nonatomic, getter=isHeadPhonePlugined) _Bool headPhonePlugined; // @synthesize headPhonePlugined=_headPhonePlugined;
@property(nonatomic) long long clockingType; // @synthesize clockingType=_clockingType;
@property(nonatomic) double timeCounting; // @synthesize timeCounting=_timeCounting;
@property(nonatomic) double timeCountingValue; // @synthesize timeCountingValue=_timeCountingValue;
@property(nonatomic) _Bool isCachedEndOfFile; // @synthesize isCachedEndOfFile=_isCachedEndOfFile;
@property(nonatomic) unsigned long long activeState; // @synthesize activeState=_activeState;
@property(nonatomic) __weak id <NBSPlayerDataSource> dataSource; // @synthesize dataSource=_dataSource;
- (void).cxx_destruct;
- (id)getCurrentAudioId;
- (void)checkIfHeadPhonePlugined;
- (void)didReceiveAudioSessionRouteChangeNotification:(id)arg1;
- (void)updateNowPlayingInfoWithDefaultInfo;
- (void)remoteTogglePlayPause:(id)arg1;
- (void)remotePlayPrevious:(id)arg1;
- (void)remotePlayNext:(id)arg1;
- (void)remotePlay:(id)arg1;
- (void)remotePause:(id)arg1;
- (void)remoteStop:(id)arg1;
- (void)unregisterRemoteControlEvents;
- (void)registerRemoteControlEvents;
- (void)vpsFailedResponseWith:(long long)arg1 itemId:(id)arg2;
- (void)vpsSuccessResponseWith:(id)arg1 itemId:(id)arg2;
- (void)playerCore:(id)arg1 readyToPlayWithItem:(id)arg2;
- (void)playerCore:(id)arg1 stateChanged:(unsigned long long)arg2 withItem:(id)arg3;
- (void)audioPlayerStateChanged:(unsigned long long)arg1 withPlaylistItem:(id)arg2;
- (void)_enumerateObserverOnMainThreadUsingBlock:(CDUnknownBlockType)arg1;
- (void)enumerateObserverOnMainThreadUsingBlock:(CDUnknownBlockType)arg1;
- (_Bool)removeObserver:(id)arg1;
- (_Bool)addObserver:(id)arg1;
- (void)headPhoneStateChanged:(_Bool)arg1;
- (void)setHeadPhonePlugined:(_Bool)arg1;
- (void)setAudioSessionActive:(_Bool)arg1;
- (void)playPreAudio;
- (void)playNextAudio;
- (unsigned long long)activeAudioTotalData;
- (double)activeAudioCachedProgress;
- (double)duration;
- (double)currentTime;
- (void)seekToTime:(double)arg1;
- (_Bool)isPlaying;
- (void)stop;
- (void)pause;
- (void)playFromOffset;
- (void)play;
- (void)playWithItem:(id)arg1;
- (void)fetchPlayingUrlWith:(id)arg1;
- (id)currentPlayItem;
- (id)currentSeekByteOffset;
- (void)updatePlayTime;
- (void)startClockingimerWithType:(long long)arg1 time:(double)arg2;
- (void)invalidateClockingTimer;
- (void)updateCurrentTime;
- (void)invalidateCurrentTimer;
- (void)startCurrentTimer;
- (void)initializePlayCore;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

