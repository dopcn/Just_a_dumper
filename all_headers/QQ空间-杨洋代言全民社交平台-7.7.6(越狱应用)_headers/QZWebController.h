//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "QzoneBaseViewController.h"

#import "QZWebViewDelegate-Protocol.h"
#import "UIActionSheetDelegate-Protocol.h"
#import "UIScrollViewDelegate-Protocol.h"
#import "UIWebViewDelegate-Protocol.h"
#import "WKNavigationDelegate-Protocol.h"
#import "WKScriptMessageHandler-Protocol.h"
#import "WKUIDelegate-Protocol.h"

@class NSMutableArray, NSMutableDictionary, NSString, NSURL, NSURLRequest, UIBarButtonItem, UIImageView, UILabel, UIToolbar, UIView, WKLeakAvoider, WKUserContentController, WKWebViewConfiguration, WebViewProgressView;
@protocol QZWebViewProvider;

@interface QZWebController : QzoneBaseViewController <UIWebViewDelegate, UIActionSheetDelegate, UIScrollViewDelegate, WKNavigationDelegate, WKUIDelegate, WKScriptMessageHandler, QZWebViewDelegate>
{
    UIView<QZWebViewProvider> *_webView;
    UIImageView *_backImageView;
    UIToolbar *_toolbar;
    UIView *_headerView;
    UIBarButtonItem *_backButton;
    UIBarButtonItem *_forwardButton;
    UIBarButtonItem *_refreshButton;
    UIBarButtonItem *_stopButton;
    UIBarButtonItem *_activityItem;
    UIView *bgWebView;
    UILabel *bgTipLabel;
    NSString *_tmpTitle;
    NSURLRequest *urlRequest;
    WebViewProgressView *_progressView;
    WKUserContentController *_controller;
    WKWebViewConfiguration *_configuration;
    int requestType;
    WKLeakAvoider *_wkL;
    NSString *_beginUrl;
    NSURLRequest *_previousRequest;
    long long _processDidTerminateCount;
    _Bool refreshButtonAndActionButtonHidden;
    _Bool toolbarHidden;
    _Bool actionButtonHidden;
    _Bool enterFullScreenMode;
    _Bool _isNotSecurityPage_light;
    _Bool _isNotSecurityPage_high;
    _Bool _enableNavigationBarTransition;
    _Bool _enableNavigationBarTransparent;
    _Bool _isWebViewLoaded;
    _Bool _showFloatButtonWhenEnterFullScreenMode;
    _Bool _titleCanChange;
    _Bool _disableAutorotate;
    _Bool _useWKWebView;
    _Bool _forbidUniversalLink;
    _Bool _useQWKWebView;
    _Bool _loadFinished;
    _Bool _loadFailLoad;
    _Bool _haveDisappear;
    _Bool _isFromDynamicAlbum;
    _Bool _enableWKOffline;
    _Bool _forceUseWKWebView;
    _Bool _fullScreenIgnoringSafeArea;
    long long _showSecurityPromptTimer;
    NSMutableDictionary *_extraData;
    NSMutableArray *_useWkList;
    NSString *_sceneName;
    NSString *_publicKeyForHtmlHiJack;
    long long _reloadCount;
    NSMutableArray *_pullDownRecord;
}

@property(nonatomic) _Bool fullScreenIgnoringSafeArea; // @synthesize fullScreenIgnoringSafeArea=_fullScreenIgnoringSafeArea;
@property(nonatomic) _Bool forceUseWKWebView; // @synthesize forceUseWKWebView=_forceUseWKWebView;
@property(nonatomic) _Bool enableWKOffline; // @synthesize enableWKOffline=_enableWKOffline;
@property(retain, nonatomic) NSMutableArray *pullDownRecord; // @synthesize pullDownRecord=_pullDownRecord;
@property(nonatomic) long long reloadCount; // @synthesize reloadCount=_reloadCount;
@property(nonatomic) _Bool isFromDynamicAlbum; // @synthesize isFromDynamicAlbum=_isFromDynamicAlbum;
@property(retain, nonatomic) NSString *publicKeyForHtmlHiJack; // @synthesize publicKeyForHtmlHiJack=_publicKeyForHtmlHiJack;
@property(nonatomic) _Bool haveDisappear; // @synthesize haveDisappear=_haveDisappear;
@property(nonatomic) _Bool loadFailLoad; // @synthesize loadFailLoad=_loadFailLoad;
@property(nonatomic) _Bool loadFinished; // @synthesize loadFinished=_loadFinished;
@property(copy, nonatomic) NSString *sceneName; // @synthesize sceneName=_sceneName;
@property(readonly, nonatomic) NSMutableArray *useWkList; // @synthesize useWkList=_useWkList;
@property(retain, nonatomic) NSMutableDictionary *extraData; // @synthesize extraData=_extraData;
@property(nonatomic) _Bool useQWKWebView; // @synthesize useQWKWebView=_useQWKWebView;
@property(nonatomic) _Bool forbidUniversalLink; // @synthesize forbidUniversalLink=_forbidUniversalLink;
@property(nonatomic) _Bool useWKWebView; // @synthesize useWKWebView=_useWKWebView;
@property(nonatomic) _Bool disableAutorotate; // @synthesize disableAutorotate=_disableAutorotate;
@property(nonatomic) _Bool titleCanChange; // @synthesize titleCanChange=_titleCanChange;
@property(nonatomic) _Bool showFloatButtonWhenEnterFullScreenMode; // @synthesize showFloatButtonWhenEnterFullScreenMode=_showFloatButtonWhenEnterFullScreenMode;
@property(nonatomic) _Bool isWebViewLoaded; // @synthesize isWebViewLoaded=_isWebViewLoaded;
@property(nonatomic) _Bool enableNavigationBarTransparent; // @synthesize enableNavigationBarTransparent=_enableNavigationBarTransparent;
@property(nonatomic) _Bool enableNavigationBarTransition; // @synthesize enableNavigationBarTransition=_enableNavigationBarTransition;
@property(nonatomic) long long showSecurityPromptTimer; // @synthesize showSecurityPromptTimer=_showSecurityPromptTimer;
@property(nonatomic) _Bool isNotSecurityPage_high; // @synthesize isNotSecurityPage_high=_isNotSecurityPage_high;
@property(nonatomic) _Bool isNotSecurityPage_light; // @synthesize isNotSecurityPage_light=_isNotSecurityPage_light;
@property(retain, nonatomic) UIView *headerView; // @synthesize headerView=_headerView;
@property(nonatomic) _Bool enterFullScreenMode; // @synthesize enterFullScreenMode;
@property(retain, nonatomic) NSURLRequest *urlRequest; // @synthesize urlRequest;
@property(nonatomic) _Bool actionButtonHidden; // @synthesize actionButtonHidden;
@property(nonatomic) _Bool toolbarHidden; // @synthesize toolbarHidden;
@property(nonatomic) _Bool refreshButtonAndActionButtonHidden; // @synthesize refreshButtonAndActionButtonHidden;
- (void).cxx_destruct;
- (_Bool)allowWKWNSHTML:(id)arg1;
- (_Bool)checkIs302:(id)arg1;
- (_Bool)isNeedfilterJsBridge:(id)arg1;
- (void)clearAlertHandler;
@property(readonly, copy) NSString *description;
- (void)excuteLoadRequest:(id)arg1;
- (void)webView:(id)arg1 runJavaScriptTextInputPanelWithPrompt:(id)arg2 defaultText:(id)arg3 initiatedByFrame:(id)arg4 completionHandler:(CDUnknownBlockType)arg5;
- (void)webView:(id)arg1 runJavaScriptConfirmPanelWithMessage:(id)arg2 initiatedByFrame:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)webView:(id)arg1 runJavaScriptAlertPanelWithMessage:(id)arg2 initiatedByFrame:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (id)injectWKCookies:(id)arg1;
- (void)userContentController:(id)arg1 didReceiveScriptMessage:(id)arg2;
- (void)finishLoad:(id)arg1;
- (void)failLoad:(id)arg1 withError:(id)arg2;
- (void)didStartLoad;
- (_Bool)shouldStartLoad:(id)arg1;
- (void)webViewWebContentProcessDidTerminate:(id)arg1;
- (void)webView:(id)arg1 didFinishNavigation:(id)arg2;
- (_Bool)checkIfWebContentProcessHasCrashed:(id)arg1 withError:(id)arg2;
- (void)webView:(id)arg1 didFailNavigation:(id)arg2 withError:(id)arg3;
- (void)webView:(id)arg1 didCommitNavigation:(id)arg2;
- (void)webView:(id)arg1 didFailProvisionalNavigation:(id)arg2 withError:(id)arg3;
- (void)webView:(id)arg1 didStartProvisionalNavigation:(id)arg2;
- (void)webView:(id)arg1 decidePolicyForNavigationResponse:(id)arg2 decisionHandler:(CDUnknownBlockType)arg3;
- (_Bool)shouldQWebViewWKReloadForCookie:(id)arg1;
- (void)webView:(id)arg1 decidePolicyForNavigationAction:(id)arg2 decisionHandler:(CDUnknownBlockType)arg3;
- (id)webView:(id)arg1 createWebViewWithConfiguration:(id)arg2 forNavigationAction:(id)arg3 windowFeatures:(id)arg4;
- (void)webViewDidFinishLoad:(id)arg1;
- (void)webView:(id)arg1 didFailLoadWithError:(id)arg2;
- (void)webViewDidStartLoad:(id)arg1;
- (_Bool)webView:(id)arg1 shouldStartLoadWithRequest:(id)arg2 navigationType:(long long)arg3;
- (void)dealloc;
- (void)removeBackImage;
- (void)setBackImage:(id)arg1;
- (void)willAnimateRotationToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (long long)preferredInterfaceOrientationForPresentation;
- (unsigned long long)supportedInterfaceOrientations;
- (_Bool)shouldAutorotate;
- (struct CGRect)adjustWebViewFrame:(struct CGRect)arg1 orientation:(long long)arg2;
- (void)reLayoutSubviews;
- (void)openURL:(id)arg1;
@property(readonly, nonatomic) NSURL *url;
- (void)actionSheet:(id)arg1 clickedButtonAtIndex:(long long)arg2;
- (void)viewWillTransitionToSize:(struct CGSize)arg1 withTransitionCoordinator:(id)arg2;
- (void)refreshTheLayoutOfPage:(long long)arg1;
- (void)refreshTheLayoutOfPage;
- (void)scrollViewDidScroll:(id)arg1;
- (_Bool)supportUseNavigationBarTransitionOrTransparent;
- (_Bool)supportUseNavigationBarTransparent;
- (_Bool)prefersUseNavigationBarTransparent;
- (_Bool)prefersUseNavigationBarTransition;
- (int)prefersQzoneNavigationBarStyle;
- (void)hideToolBar;
- (void)hideToolBar:(_Bool)arg1;
- (void)toolbar:(id)arg1 replaceItemWithTag:(long long)arg2 withItem:(id)arg3;
- (void)unloadView;
- (void)setRefreshButtonAndActionButtonHidden;
- (void)setTitle:(id)arg1;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)reportData:(_Bool)arg1;
- (void)viewDidLoad;
- (void)ensureQWKProxyState:(_Bool)arg1;
- (_Bool)canUseQWKWebView;
- (_Bool)isInRateRang:(long long)arg1;
- (id)init;
- (void)loadRequest:(id)arg1;
- (void)refreshWebView;
- (void)shareAction;
- (void)stopAction;
- (void)layoutPageFromTheBottomOfNavBar:(double)arg1;
- (void)layoutPageFromTheTopOfStatusBar:(double)arg1;
- (void)viewWillLayoutSubviews;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)refreshAction;
- (void)forwardAction;
- (void)backAction;
- (_Bool)isCurrentPage;
- (void)forcePromptIsNotSecurity:(long long)arg1;
- (void)cancelSecurityControllerDelayTimer;
- (void)automicShowPrompt;
- (void)onCloseQZoneRedirectWarningNotice:(id)arg1;
- (void)showQZoneRedirectWarningNotice:(_Bool)arg1;
- (void)keyboardShow:(id)arg1;
- (void)removeKeyboardObsever;
- (void)addKeyboardObsever;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

