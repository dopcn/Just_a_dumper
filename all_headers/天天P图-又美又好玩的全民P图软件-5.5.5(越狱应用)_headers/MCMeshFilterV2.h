//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "MCBaseFilter.h"

@class MCMeshSingleItem, NSMutableArray;
@protocol TTRealTimeFaceEditProtocol;

@interface MCMeshFilterV2 : MCBaseFilter
{
    unsigned int uniformInfo;
    unsigned int uniformScreenRatio;
    unsigned int uniformFaceRatio;
    unsigned int uniformRoll;
    unsigned int uniformYaw;
    unsigned int uniformPitch;
    unsigned int vertexBuffer;
    unsigned int vao;
    unsigned int indexBuffer;
    unsigned long long _meshGlobalOpt;
    NSMutableArray *_meshGlobalItems;
    MCMeshSingleItem *_singleItem;
    id <TTRealTimeFaceEditProtocol> _faceEditDelegate;
}

+ (struct CGPoint)pointToVertexHW:(struct CGPoint)arg1 imageSize:(struct CGSize)arg2;
+ (double)distanceOfPoint:(struct CGPoint)arg1 andPoint:(struct CGPoint)arg2;
+ (void)addPoint:(long long)arg1 and:(long long)arg2 idx:(long long)arg3;
+ (float)getFragmentY:(long long)arg1;
+ (float)getFragmentX:(long long)arg1;
+ (float)getVertexY:(long long)arg1;
+ (float)getVertexX:(long long)arg1;
@property(nonatomic) __weak id <TTRealTimeFaceEditProtocol> faceEditDelegate; // @synthesize faceEditDelegate=_faceEditDelegate;
@property(nonatomic) MCMeshSingleItem *singleItem; // @synthesize singleItem=_singleItem;
@property(nonatomic) NSMutableArray *meshGlobalItems; // @synthesize meshGlobalItems=_meshGlobalItems;
@property(nonatomic) unsigned long long meshGlobalOpt; // @synthesize meshGlobalOpt=_meshGlobalOpt;
- (void).cxx_destruct;
- (void)setupEnviroment;
- (void)convertFeaturePoints:(float [95][2])arg1 faceDetectImageSize:(struct CGSize)arg2 toPoints:(float [95][2])arg3 yaw:(double)arg4 pitch:(double)arg5;
- (float)my_smoothstepEdge0:(float)arg1 edge1:(float)arg2 x:(float)arg3;
- (void)renderToTextureWithVertices:(const float *)arg1 textureCoordinates:(const float *)arg2;
- (void)prepareVBO;
- (id)mergeMeshItems:(id)arg1;
- (id)globalMeshItemsArray;
- (id)initWithVertexShaderFromFile:(id)arg1 fragmentShaderFromFile:(id)arg2;

@end

