//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <UIKit/UIView.h>

@class NSString, TouchPeekView, UIColor, UIImage;
@protocol SNPopupViewModalDelegate;

@interface SNPopupView : UIView
{
    struct CGGradient *gradient;
    struct CGGradient *gradient2;
    struct CGRect contentRect;
    struct CGRect contentBounds;
    struct CGRect popupRect;
    struct CGRect popupBounds;
    struct CGRect viewRect;
    struct CGRect viewBounds;
    struct CGPoint pointToBeShown;
    NSString *title;
    UIImage *image;
    float fontSize;
    UIView *contentView;
    UIColor *bgColor;
    float horizontalOffset;
    float verticalOffset;
    int direction;
    int forceDirection;
    id target;
    SEL action;
    TouchPeekView *peekView;
    id <SNPopupViewModalDelegate> delegate;
    _Bool animatedWhenAppering;
    _Bool background;
    struct CGSize contentOffset;
    _Bool _hasArrow;
    _Bool _hasShadow;
    long long _cornerRadius;
    double _borderWidth;
    UIColor *_borderColor;
    UIColor *_maskColor;
    double _shadowAlpha;
    struct CGSize _arrowSize;
    struct CGSize _borderSpace;
    struct CGSize _shadowOffset;
}

+ (id)balloon_img:(id)arg1 direction:(int)arg2;
+ (id)balloon_text:(id)arg1 arrow:(_Bool)arg2 direction:(int)arg3;
@property(nonatomic) struct CGSize shadowOffset; // @synthesize shadowOffset=_shadowOffset;
@property(nonatomic) double shadowAlpha; // @synthesize shadowAlpha=_shadowAlpha;
@property(retain, nonatomic) UIColor *maskColor; // @synthesize maskColor=_maskColor;
@property(nonatomic) struct CGSize borderSpace; // @synthesize borderSpace=_borderSpace;
@property(retain, nonatomic) UIColor *borderColor; // @synthesize borderColor=_borderColor;
@property(nonatomic) double borderWidth; // @synthesize borderWidth=_borderWidth;
@property(nonatomic) long long cornerRadius; // @synthesize cornerRadius=_cornerRadius;
@property(nonatomic) _Bool hasShadow; // @synthesize hasShadow=_hasShadow;
@property(nonatomic) struct CGSize arrowSize; // @synthesize arrowSize=_arrowSize;
@property(nonatomic) _Bool hasArrow; // @synthesize hasArrow=_hasArrow;
@property(nonatomic) struct CGRect contentBounds; // @synthesize contentBounds;
@property(nonatomic) struct CGSize contentOffset; // @synthesize contentOffset;
@property(retain, nonatomic) UIColor *bgColor; // @synthesize bgColor;
@property(nonatomic) _Bool background; // @synthesize background;
@property(nonatomic) int forceDirection; // @synthesize forceDirection;
@property(nonatomic) id <SNPopupViewModalDelegate> delegate; // @synthesize delegate;
@property(readonly, nonatomic) UIView *contentView; // @synthesize contentView;
@property(readonly, nonatomic) UIImage *image; // @synthesize image;
@property(readonly, nonatomic) NSString *title; // @synthesize title;
- (void)dealloc;
- (void)drawRect:(struct CGRect)arg1;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (void)makeGrowingPathCircleCornerRect:(struct CGRect)arg1 radius:(float)arg2;
- (void)makePathCircleCornerRect:(struct CGRect)arg1 radius:(float)arg2 popPoint:(struct CGPoint)arg3;
- (void)didDismiss;
- (void)dismiss;
- (void)dismiss:(_Bool)arg1;
- (void)dismissModal:(_Bool)arg1;
- (void)dismissModal;
- (_Bool)shouldBeDismissedFor:(id)arg1 withEvent:(id)arg2;
- (_Bool)isPopup;
- (void)popup;
- (id)getPositionAnimationForPopup;
- (id)getAlphaAnimationForPopup;
- (void)animationDidStop:(id)arg1 finished:(_Bool)arg2;
- (void)showAtPoint:(struct CGPoint)arg1 inView:(id)arg2 animated:(_Bool)arg3;
- (void)showAtPoint:(struct CGPoint)arg1 inView:(id)arg2;
- (void)layoutForDirectionRight:(struct CGPoint)arg1 inView:(id)arg2;
- (void)layoutForDirectionLeft:(struct CGPoint)arg1 inView:(id)arg2;
- (void)layoutForDirectionDown:(struct CGPoint)arg1 inView:(id)arg2;
- (void)layoutForDirectionUp:(struct CGPoint)arg1 inView:(id)arg2;
- (void)presentModalAtPoint:(struct CGPoint)arg1 inView:(id)arg2 animated:(_Bool)arg3;
- (void)presentModalAtPoint:(struct CGPoint)arg1 inView:(id)arg2;
- (void)createAndAttachTouchPeekView;
- (void)addTarget:(id)arg1 action:(SEL)arg2;
- (void)setContentView:(id)arg1;
- (id)initWithContentView:(id)arg1 contentSize:(struct CGSize)arg2;
- (id)initWithImage:(id)arg1;
- (id)initWithString:(id)arg1 withFontOfSize:(float)arg2;
- (id)initWithString:(id)arg1;
- (void)setupGradientColors;

@end

