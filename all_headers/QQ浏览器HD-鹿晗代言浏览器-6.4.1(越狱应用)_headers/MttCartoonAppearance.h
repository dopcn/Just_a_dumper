//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

@interface MttCartoonAppearance : NSObject
{
    double _homepageSectionHeaderLeftMargin;
    double _horizentalMargin;
    double _horizentalGap;
    double _verticalGap;
    double _titleFontSize;
    double _briefFontSize;
    double _latestFontSize;
    double _coverCornerRadius;
    double _textCornerRadius;
    double _heightOfImage2Title;
    double _heightOfTitle2Brief;
    double _exclusiveBottomMargin;
    double _exclusiveVerticalMargin;
    double _heightOfExclusive;
    double _exclusiveHorizentalGap;
    double _heightOfWebCartoon;
    double _webcartoonVerticalGap;
    double _recommendationWideBottomMargin;
    double _heightOfRecommendationWide;
    double _everyoneLikeHorizontalGap;
    double _heightOfEveryoneLike;
    double _categoryTopMargin;
    double _categoryBottomMargin;
    double _categoryHorizentalGap;
    double _categoryFontSize;
    double _categoryCornerRadius;
    double _heightOfCategory;
    double _heightOfTiaoman;
    double _heightOfUpdate;
    double _updateVerticalMargin;
    double _heightOfEveryDayRecommend;
    double _everyDayRecommendVerticalMargin;
    double _heightOfUpdateToday;
    double _heightOfRanking;
    double _heightOfAnimation;
    double _animateVerticalMargin;
    double _heightOfRankingListHeader;
    double _rankFontSize;
    double _rankHorizontalMargin;
    double _rankHorizontalGap;
    double _heightOfOthersHeaderView;
    double _heightOfRankingHorizontal;
    double _rankingHoriCellGap;
    double _marginOfOthersHeaderView;
    double _headerFontSize;
    double _heightOfFloatBar;
    double _widthOfFloatBar;
    double _widthOfFloatBarButton;
    double _rankingListVerticalMargin;
    double _topThreeHorizentalMargin;
    double _topThreeHorizentalGap;
    double _topThreeTopMargin;
    double _topThreeBottomMargin;
    double _topThreeHeader2Cell;
    double _topThreeImage2title;
    double _topthreeTitle2brief;
    double _topthreeTitleFontSize;
    double _topthreeBriefFontSize;
    double _heightOfTopThreeCover;
    double _rankTopMargin;
    double _rankLeftMargin;
    double _heightOfThirdGroupCover;
    double _segmentFontSize;
    double _segmentTopMargin;
    double _segmentBottomMargin;
    double _heightOfSegmentView;
    double _heightOfLeaderBoard;
    double _heightOfLeaderBoardBigCover;
    double _heightOfLeaderBoardSmallCover;
    double _leaderBoardImage2Title;
    double _leaderBoardTitleFontSize;
    double _leaderBoardTitle2Brief;
    double _leaderBoardBriefFontSize;
    double _leaderBoardHorizentalMargin;
    double _leaderBoardHorizentalGap;
    double _heightOfLeaderBoardHeader;
    struct CGSize _exclusiveUnitImageSize;
    struct CGSize _webCartoonUnitCellSize;
    struct CGSize _recommendationWideUnitImageSize;
    struct CGSize _everyoneLikeUnitImageSize;
    struct CGSize _unitCellSizeOfEveryoneLike;
    struct CGSize _categoryUnitSize;
    struct CGSize _tiaomanUnitImageSize;
    struct CGSize _unitCellSizeOfTiaoman;
    struct CGSize _updateUnitImageSize;
    struct CGSize _updateTodayUnitCellSize;
    struct CGSize _rankingUnitCellSize;
    struct CGSize _animationUnitImageSize;
    struct CGSize _animationCellSize;
    struct CGSize _rankingHorizontalImageSize;
    struct CGSize _rankingSmallImageSize;
    struct CGSize _topThreeUnitImageSize;
    struct CGSize _topThreeCornerImageSize;
    struct CGVector _topThreeCornerOffset;
    struct CGSize _thirdGroupUnitImageSize;
    struct CGSize _segmentSize;
    struct CGSize _leaderBoardBigUnitImageSize;
    struct CGSize _leaderBoardSmallUnitImageSize;
}

+ (id)appearance;
@property(nonatomic) double heightOfLeaderBoardHeader; // @synthesize heightOfLeaderBoardHeader=_heightOfLeaderBoardHeader;
@property(nonatomic) double leaderBoardHorizentalGap; // @synthesize leaderBoardHorizentalGap=_leaderBoardHorizentalGap;
@property(nonatomic) double leaderBoardHorizentalMargin; // @synthesize leaderBoardHorizentalMargin=_leaderBoardHorizentalMargin;
@property(nonatomic) double leaderBoardBriefFontSize; // @synthesize leaderBoardBriefFontSize=_leaderBoardBriefFontSize;
@property(nonatomic) double leaderBoardTitle2Brief; // @synthesize leaderBoardTitle2Brief=_leaderBoardTitle2Brief;
@property(nonatomic) double leaderBoardTitleFontSize; // @synthesize leaderBoardTitleFontSize=_leaderBoardTitleFontSize;
@property(nonatomic) double leaderBoardImage2Title; // @synthesize leaderBoardImage2Title=_leaderBoardImage2Title;
@property(nonatomic) double heightOfLeaderBoardSmallCover; // @synthesize heightOfLeaderBoardSmallCover=_heightOfLeaderBoardSmallCover;
@property(nonatomic) struct CGSize leaderBoardSmallUnitImageSize; // @synthesize leaderBoardSmallUnitImageSize=_leaderBoardSmallUnitImageSize;
@property(nonatomic) double heightOfLeaderBoardBigCover; // @synthesize heightOfLeaderBoardBigCover=_heightOfLeaderBoardBigCover;
@property(nonatomic) struct CGSize leaderBoardBigUnitImageSize; // @synthesize leaderBoardBigUnitImageSize=_leaderBoardBigUnitImageSize;
@property(nonatomic) double heightOfLeaderBoard; // @synthesize heightOfLeaderBoard=_heightOfLeaderBoard;
@property(nonatomic) double heightOfSegmentView; // @synthesize heightOfSegmentView=_heightOfSegmentView;
@property(nonatomic) double segmentBottomMargin; // @synthesize segmentBottomMargin=_segmentBottomMargin;
@property(nonatomic) double segmentTopMargin; // @synthesize segmentTopMargin=_segmentTopMargin;
@property(nonatomic) double segmentFontSize; // @synthesize segmentFontSize=_segmentFontSize;
@property(nonatomic) struct CGSize segmentSize; // @synthesize segmentSize=_segmentSize;
@property(nonatomic) double heightOfThirdGroupCover; // @synthesize heightOfThirdGroupCover=_heightOfThirdGroupCover;
@property(nonatomic) struct CGSize thirdGroupUnitImageSize; // @synthesize thirdGroupUnitImageSize=_thirdGroupUnitImageSize;
@property(nonatomic) double rankLeftMargin; // @synthesize rankLeftMargin=_rankLeftMargin;
@property(nonatomic) double rankTopMargin; // @synthesize rankTopMargin=_rankTopMargin;
@property(nonatomic) double heightOfTopThreeCover; // @synthesize heightOfTopThreeCover=_heightOfTopThreeCover;
@property(nonatomic) double topthreeBriefFontSize; // @synthesize topthreeBriefFontSize=_topthreeBriefFontSize;
@property(nonatomic) double topthreeTitleFontSize; // @synthesize topthreeTitleFontSize=_topthreeTitleFontSize;
@property(nonatomic) double topthreeTitle2brief; // @synthesize topthreeTitle2brief=_topthreeTitle2brief;
@property(nonatomic) double topThreeImage2title; // @synthesize topThreeImage2title=_topThreeImage2title;
@property(nonatomic) double topThreeHeader2Cell; // @synthesize topThreeHeader2Cell=_topThreeHeader2Cell;
@property(nonatomic) double topThreeBottomMargin; // @synthesize topThreeBottomMargin=_topThreeBottomMargin;
@property(nonatomic) double topThreeTopMargin; // @synthesize topThreeTopMargin=_topThreeTopMargin;
@property(nonatomic) double topThreeHorizentalGap; // @synthesize topThreeHorizentalGap=_topThreeHorizentalGap;
@property(nonatomic) double topThreeHorizentalMargin; // @synthesize topThreeHorizentalMargin=_topThreeHorizentalMargin;
@property(nonatomic) struct CGVector topThreeCornerOffset; // @synthesize topThreeCornerOffset=_topThreeCornerOffset;
@property(nonatomic) struct CGSize topThreeCornerImageSize; // @synthesize topThreeCornerImageSize=_topThreeCornerImageSize;
@property(nonatomic) struct CGSize topThreeUnitImageSize; // @synthesize topThreeUnitImageSize=_topThreeUnitImageSize;
@property(nonatomic) double rankingListVerticalMargin; // @synthesize rankingListVerticalMargin=_rankingListVerticalMargin;
@property(nonatomic) double widthOfFloatBarButton; // @synthesize widthOfFloatBarButton=_widthOfFloatBarButton;
@property(nonatomic) double widthOfFloatBar; // @synthesize widthOfFloatBar=_widthOfFloatBar;
@property(nonatomic) double heightOfFloatBar; // @synthesize heightOfFloatBar=_heightOfFloatBar;
@property(nonatomic) double headerFontSize; // @synthesize headerFontSize=_headerFontSize;
@property(nonatomic) struct CGSize rankingSmallImageSize; // @synthesize rankingSmallImageSize=_rankingSmallImageSize;
@property(nonatomic) struct CGSize rankingHorizontalImageSize; // @synthesize rankingHorizontalImageSize=_rankingHorizontalImageSize;
@property(nonatomic) double marginOfOthersHeaderView; // @synthesize marginOfOthersHeaderView=_marginOfOthersHeaderView;
@property(nonatomic) double rankingHoriCellGap; // @synthesize rankingHoriCellGap=_rankingHoriCellGap;
@property(nonatomic) double heightOfRankingHorizontal; // @synthesize heightOfRankingHorizontal=_heightOfRankingHorizontal;
@property(nonatomic) double heightOfOthersHeaderView; // @synthesize heightOfOthersHeaderView=_heightOfOthersHeaderView;
@property(nonatomic) double rankHorizontalGap; // @synthesize rankHorizontalGap=_rankHorizontalGap;
@property(nonatomic) double rankHorizontalMargin; // @synthesize rankHorizontalMargin=_rankHorizontalMargin;
@property(nonatomic) double rankFontSize; // @synthesize rankFontSize=_rankFontSize;
@property(nonatomic) double heightOfRankingListHeader; // @synthesize heightOfRankingListHeader=_heightOfRankingListHeader;
@property(nonatomic) struct CGSize animationCellSize; // @synthesize animationCellSize=_animationCellSize;
@property(nonatomic) struct CGSize animationUnitImageSize; // @synthesize animationUnitImageSize=_animationUnitImageSize;
@property(nonatomic) double animateVerticalMargin; // @synthesize animateVerticalMargin=_animateVerticalMargin;
@property(nonatomic) double heightOfAnimation; // @synthesize heightOfAnimation=_heightOfAnimation;
@property(nonatomic) double heightOfRanking; // @synthesize heightOfRanking=_heightOfRanking;
@property(nonatomic) struct CGSize rankingUnitCellSize; // @synthesize rankingUnitCellSize=_rankingUnitCellSize;
@property(nonatomic) double heightOfUpdateToday; // @synthesize heightOfUpdateToday=_heightOfUpdateToday;
@property(nonatomic) struct CGSize updateTodayUnitCellSize; // @synthesize updateTodayUnitCellSize=_updateTodayUnitCellSize;
@property(nonatomic) double everyDayRecommendVerticalMargin; // @synthesize everyDayRecommendVerticalMargin=_everyDayRecommendVerticalMargin;
@property(nonatomic) double heightOfEveryDayRecommend; // @synthesize heightOfEveryDayRecommend=_heightOfEveryDayRecommend;
@property(nonatomic) double updateVerticalMargin; // @synthesize updateVerticalMargin=_updateVerticalMargin;
@property(nonatomic) double heightOfUpdate; // @synthesize heightOfUpdate=_heightOfUpdate;
@property(nonatomic) struct CGSize updateUnitImageSize; // @synthesize updateUnitImageSize=_updateUnitImageSize;
@property(nonatomic) struct CGSize unitCellSizeOfTiaoman; // @synthesize unitCellSizeOfTiaoman=_unitCellSizeOfTiaoman;
@property(nonatomic) double heightOfTiaoman; // @synthesize heightOfTiaoman=_heightOfTiaoman;
@property(nonatomic) struct CGSize tiaomanUnitImageSize; // @synthesize tiaomanUnitImageSize=_tiaomanUnitImageSize;
@property(nonatomic) double heightOfCategory; // @synthesize heightOfCategory=_heightOfCategory;
@property(nonatomic) struct CGSize categoryUnitSize; // @synthesize categoryUnitSize=_categoryUnitSize;
@property(nonatomic) double categoryCornerRadius; // @synthesize categoryCornerRadius=_categoryCornerRadius;
@property(nonatomic) double categoryFontSize; // @synthesize categoryFontSize=_categoryFontSize;
@property(nonatomic) double categoryHorizentalGap; // @synthesize categoryHorizentalGap=_categoryHorizentalGap;
@property(nonatomic) double categoryBottomMargin; // @synthesize categoryBottomMargin=_categoryBottomMargin;
@property(nonatomic) double categoryTopMargin; // @synthesize categoryTopMargin=_categoryTopMargin;
@property(nonatomic) struct CGSize unitCellSizeOfEveryoneLike; // @synthesize unitCellSizeOfEveryoneLike=_unitCellSizeOfEveryoneLike;
@property(nonatomic) double heightOfEveryoneLike; // @synthesize heightOfEveryoneLike=_heightOfEveryoneLike;
@property(nonatomic) double everyoneLikeHorizontalGap; // @synthesize everyoneLikeHorizontalGap=_everyoneLikeHorizontalGap;
@property(nonatomic) struct CGSize everyoneLikeUnitImageSize; // @synthesize everyoneLikeUnitImageSize=_everyoneLikeUnitImageSize;
@property(nonatomic) double heightOfRecommendationWide; // @synthesize heightOfRecommendationWide=_heightOfRecommendationWide;
@property(nonatomic) double recommendationWideBottomMargin; // @synthesize recommendationWideBottomMargin=_recommendationWideBottomMargin;
@property(nonatomic) struct CGSize recommendationWideUnitImageSize; // @synthesize recommendationWideUnitImageSize=_recommendationWideUnitImageSize;
@property(nonatomic) double webcartoonVerticalGap; // @synthesize webcartoonVerticalGap=_webcartoonVerticalGap;
@property(nonatomic) double heightOfWebCartoon; // @synthesize heightOfWebCartoon=_heightOfWebCartoon;
@property(nonatomic) struct CGSize webCartoonUnitCellSize; // @synthesize webCartoonUnitCellSize=_webCartoonUnitCellSize;
@property(nonatomic) double exclusiveHorizentalGap; // @synthesize exclusiveHorizentalGap=_exclusiveHorizentalGap;
@property(nonatomic) double heightOfExclusive; // @synthesize heightOfExclusive=_heightOfExclusive;
@property(nonatomic) double exclusiveVerticalMargin; // @synthesize exclusiveVerticalMargin=_exclusiveVerticalMargin;
@property(nonatomic) double exclusiveBottomMargin; // @synthesize exclusiveBottomMargin=_exclusiveBottomMargin;
@property(nonatomic) struct CGSize exclusiveUnitImageSize; // @synthesize exclusiveUnitImageSize=_exclusiveUnitImageSize;
@property(nonatomic) double heightOfTitle2Brief; // @synthesize heightOfTitle2Brief=_heightOfTitle2Brief;
@property(nonatomic) double heightOfImage2Title; // @synthesize heightOfImage2Title=_heightOfImage2Title;
@property(nonatomic) double textCornerRadius; // @synthesize textCornerRadius=_textCornerRadius;
@property(nonatomic) double coverCornerRadius; // @synthesize coverCornerRadius=_coverCornerRadius;
@property(nonatomic) double latestFontSize; // @synthesize latestFontSize=_latestFontSize;
@property(nonatomic) double briefFontSize; // @synthesize briefFontSize=_briefFontSize;
@property(nonatomic) double titleFontSize; // @synthesize titleFontSize=_titleFontSize;
@property(nonatomic) double verticalGap; // @synthesize verticalGap=_verticalGap;
@property(nonatomic) double horizentalGap; // @synthesize horizentalGap=_horizentalGap;
@property(nonatomic) double horizentalMargin; // @synthesize horizentalMargin=_horizentalMargin;
@property(nonatomic) double homepageSectionHeaderLeftMargin; // @synthesize homepageSectionHeaderLeftMargin=_homepageSectionHeaderLeftMargin;
- (double)heightOfHomepageHeaderInGroup:(long long)arg1;
- (struct CGSize)animateUnitImageSize;
- (void)setup;
- (id)init;

@end

