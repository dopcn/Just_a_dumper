//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

@interface ALWrapper : NSObject
{
}

+ (_Bool)removeNotification:(unsigned int)arg1 onSource:(unsigned int)arg2 callback:(CDUnknownFunctionPointerType)arg3 userData:(void *)arg4;
+ (_Bool)addNotification:(unsigned int)arg1 onSource:(unsigned int)arg2 callback:(CDUnknownFunctionPointerType)arg3 userData:(void *)arg4;
+ (int)getRenderingQuality;
+ (_Bool)setRenderingQuality:(int)arg1;
+ (float)getSourceObstruction:(unsigned int)arg1;
+ (_Bool)setObstruction:(float)arg1 onSource:(unsigned int)arg2;
+ (float)getSourceOcclusion:(unsigned int)arg1;
+ (_Bool)setOcclusion:(float)arg1 onSource:(unsigned int)arg2;
+ (float)getSourceReverbSendLevel:(unsigned int)arg1;
+ (_Bool)setReverbSendLevel:(float)arg1 onSource:(unsigned int)arg2;
+ (_Bool)asaSourcef:(unsigned int)arg1 property:(unsigned int)arg2 value:(float)arg3;
+ (_Bool)asaSourcei:(unsigned int)arg1 property:(unsigned int)arg2 value:(int)arg3;
+ (_Bool)asaSourceb:(unsigned int)arg1 property:(unsigned int)arg2 value:(_Bool)arg3;
+ (float)asaGetSourcef:(unsigned int)arg1 property:(unsigned int)arg2;
+ (int)asaGetSourcei:(unsigned int)arg1 property:(unsigned int)arg2;
+ (_Bool)asaGetSourceb:(unsigned int)arg1 property:(unsigned int)arg2;
+ (_Bool)asaListenerf:(unsigned int)arg1 value:(float)arg2;
+ (_Bool)asaListeneri:(unsigned int)arg1 value:(int)arg2;
+ (_Bool)asaListenerb:(unsigned int)arg1 value:(_Bool)arg2;
+ (float)asaGetListenerf:(unsigned int)arg1;
+ (int)asaGetListeneri:(unsigned int)arg1;
+ (_Bool)asaGetListenerb:(unsigned int)arg1;
+ (_Bool)bufferDataStatic:(unsigned int)arg1 format:(int)arg2 data:(const void *)arg3 size:(int)arg4 frequency:(int)arg5;
+ (_Bool)setMixerOutputDataRate:(double)arg1;
+ (double)getMixerOutputDataRate;
+ (void)initialize;
+ (_Bool)getBufferiv:(unsigned int)arg1 parameter:(int)arg2 values:(int *)arg3;
+ (_Bool)getBuffer3i:(unsigned int)arg1 parameter:(int)arg2 v1:(int *)arg3 v2:(int *)arg4 v3:(int *)arg5;
+ (int)getBufferi:(unsigned int)arg1 parameter:(int)arg2;
+ (_Bool)getBufferfv:(unsigned int)arg1 parameter:(int)arg2 values:(float *)arg3;
+ (_Bool)getBuffer3f:(unsigned int)arg1 parameter:(int)arg2 v1:(float *)arg3 v2:(float *)arg4 v3:(float *)arg5;
+ (float)getBufferf:(unsigned int)arg1 parameter:(int)arg2;
+ (_Bool)bufferiv:(unsigned int)arg1 parameter:(int)arg2 values:(int *)arg3;
+ (_Bool)buffer3i:(unsigned int)arg1 parameter:(int)arg2 v1:(int)arg3 v2:(int)arg4 v3:(int)arg5;
+ (_Bool)bufferi:(unsigned int)arg1 parameter:(int)arg2 value:(int)arg3;
+ (_Bool)bufferfv:(unsigned int)arg1 parameter:(int)arg2 values:(float *)arg3;
+ (_Bool)buffer3f:(unsigned int)arg1 parameter:(int)arg2 v1:(float)arg3 v2:(float)arg4 v3:(float)arg5;
+ (_Bool)bufferf:(unsigned int)arg1 parameter:(int)arg2 value:(float)arg3;
+ (_Bool)bufferData:(unsigned int)arg1 format:(int)arg2 data:(const void *)arg3 size:(int)arg4 frequency:(int)arg5;
+ (_Bool)isBuffer:(unsigned int)arg1;
+ (_Bool)deleteBuffer:(unsigned int)arg1;
+ (_Bool)deleteBuffers:(unsigned int *)arg1 numBuffers:(int)arg2;
+ (unsigned int)genBuffer;
+ (_Bool)genBuffers:(unsigned int *)arg1 numBuffers:(int)arg2;
+ (_Bool)sourceUnqueueBuffers:(unsigned int)arg1 numBuffers:(int)arg2 bufferIds:(unsigned int *)arg3;
+ (_Bool)sourceQueueBuffers:(unsigned int)arg1 numBuffers:(int)arg2 bufferIds:(unsigned int *)arg3;
+ (_Bool)sourceRewindv:(unsigned int *)arg1 numSources:(int)arg2;
+ (_Bool)sourceRewind:(unsigned int)arg1;
+ (_Bool)sourceStopv:(unsigned int *)arg1 numSources:(int)arg2;
+ (_Bool)sourceStop:(unsigned int)arg1;
+ (_Bool)sourcePausev:(unsigned int *)arg1 numSources:(int)arg2;
+ (_Bool)sourcePause:(unsigned int)arg1;
+ (_Bool)sourcePlayv:(unsigned int *)arg1 numSources:(int)arg2;
+ (_Bool)sourcePlay:(unsigned int)arg1;
+ (_Bool)getSourceiv:(unsigned int)arg1 parameter:(int)arg2 values:(int *)arg3;
+ (_Bool)getSource3i:(unsigned int)arg1 parameter:(int)arg2 v1:(int *)arg3 v2:(int *)arg4 v3:(int *)arg5;
+ (int)getSourcei:(unsigned int)arg1 parameter:(int)arg2;
+ (_Bool)getSourcefv:(unsigned int)arg1 parameter:(int)arg2 values:(float *)arg3;
+ (_Bool)getSource3f:(unsigned int)arg1 parameter:(int)arg2 v1:(float *)arg3 v2:(float *)arg4 v3:(float *)arg5;
+ (float)getSourcef:(unsigned int)arg1 parameter:(int)arg2;
+ (_Bool)sourceiv:(unsigned int)arg1 parameter:(int)arg2 values:(int *)arg3;
+ (_Bool)source3i:(unsigned int)arg1 parameter:(int)arg2 v1:(int)arg3 v2:(int)arg4 v3:(int)arg5;
+ (_Bool)sourcei:(unsigned int)arg1 parameter:(int)arg2 value:(int)arg3;
+ (_Bool)sourcefv:(unsigned int)arg1 parameter:(int)arg2 values:(float *)arg3;
+ (_Bool)source3f:(unsigned int)arg1 parameter:(int)arg2 v1:(float)arg3 v2:(float)arg4 v3:(float)arg5;
+ (_Bool)sourcef:(unsigned int)arg1 parameter:(int)arg2 value:(float)arg3;
+ (_Bool)isSource:(unsigned int)arg1;
+ (_Bool)deleteSource:(unsigned int)arg1;
+ (_Bool)deleteSources:(unsigned int *)arg1 numSources:(int)arg2;
+ (unsigned int)genSource;
+ (_Bool)genSources:(unsigned int *)arg1 numSources:(int)arg2;
+ (_Bool)getListeneriv:(int)arg1 values:(int *)arg2;
+ (_Bool)getListener3i:(int)arg1 v1:(int *)arg2 v2:(int *)arg3 v3:(int *)arg4;
+ (int)getListeneri:(int)arg1;
+ (_Bool)getListenerfv:(int)arg1 values:(float *)arg2;
+ (_Bool)getListener3f:(int)arg1 v1:(float *)arg2 v2:(float *)arg3 v3:(float *)arg4;
+ (float)getListenerf:(int)arg1;
+ (_Bool)listeneriv:(int)arg1 values:(int *)arg2;
+ (_Bool)listener3i:(int)arg1 v1:(int)arg2 v2:(int)arg3 v3:(int)arg4;
+ (_Bool)listeneri:(int)arg1 value:(int)arg2;
+ (_Bool)listenerfv:(int)arg1 values:(float *)arg2;
+ (_Bool)listener3f:(int)arg1 v1:(float)arg2 v2:(float)arg3 v3:(float)arg4;
+ (_Bool)listenerf:(int)arg1 value:(float)arg2;
+ (_Bool)speedOfSound:(float)arg1;
+ (_Bool)dopplerFactor:(float)arg1;
+ (_Bool)distanceModel:(int)arg1;
+ (_Bool)getIntegerv:(int)arg1 values:(int *)arg2;
+ (_Bool)getFloatv:(int)arg1 values:(float *)arg2;
+ (_Bool)getDoublev:(int)arg1 values:(double *)arg2;
+ (_Bool)getBooleanv:(int)arg1 values:(char *)arg2;
+ (id)getSpaceSeparatedStringList:(int)arg1;
+ (id)getNullSeparatedStringList:(int)arg1;
+ (id)getString:(int)arg1;
+ (int)getInteger:(int)arg1;
+ (float)getFloat:(int)arg1;
+ (double)getDouble:(int)arg1;
+ (_Bool)getBoolean:(int)arg1;
+ (struct ALCdevice_struct *)getContextsDevice:(struct ALCcontext_struct *)arg1 deviceReference:(struct ALCdevice_struct *)arg2;
+ (struct ALCdevice_struct *)getContextsDevice:(struct ALCcontext_struct *)arg1;
+ (struct ALCcontext_struct *)getCurrentContext;
+ (void)destroyContext:(struct ALCcontext_struct *)arg1;
+ (void)suspendContext:(struct ALCcontext_struct *)arg1;
+ (void)processContext:(struct ALCcontext_struct *)arg1;
+ (_Bool)makeContextCurrent:(struct ALCcontext_struct *)arg1 deviceReference:(struct ALCdevice_struct *)arg2;
+ (_Bool)makeContextCurrent:(struct ALCcontext_struct *)arg1;
+ (struct ALCcontext_struct *)createContext:(struct ALCdevice_struct *)arg1 attributes:(int *)arg2;
+ (_Bool)captureSamples:(struct ALCdevice_struct *)arg1 buffer:(void *)arg2 numSamples:(int)arg3;
+ (_Bool)stopCapture:(struct ALCdevice_struct *)arg1;
+ (_Bool)startCapture:(struct ALCdevice_struct *)arg1;
+ (_Bool)closeCaptureDevice:(struct ALCdevice_struct *)arg1;
+ (struct ALCdevice_struct *)openCaptureDevice:(id)arg1 frequency:(unsigned int)arg2 format:(int)arg3 bufferSize:(int)arg4;
+ (_Bool)getIntegerv:(struct ALCdevice_struct *)arg1 attribute:(int)arg2 size:(int)arg3 data:(int *)arg4;
+ (int)getInteger:(struct ALCdevice_struct *)arg1 attribute:(int)arg2;
+ (id)getSpaceSeparatedStringList:(struct ALCdevice_struct *)arg1 attribute:(int)arg2;
+ (id)getNullSeparatedStringList:(struct ALCdevice_struct *)arg1 attribute:(int)arg2;
+ (id)getString:(struct ALCdevice_struct *)arg1 attribute:(int)arg2;
+ (int)getEnumValue:(struct ALCdevice_struct *)arg1 name:(id)arg2;
+ (void *)getProcAddress:(struct ALCdevice_struct *)arg1 name:(id)arg2;
+ (_Bool)isExtensionPresent:(struct ALCdevice_struct *)arg1 name:(id)arg2;
+ (_Bool)closeDevice:(struct ALCdevice_struct *)arg1;
+ (struct ALCdevice_struct *)openDevice:(id)arg1;
+ (int)getEnumValue:(id)arg1;
+ (void *)getProcAddress:(id)arg1;
+ (_Bool)isExtensionPresent:(id)arg1;
+ (_Bool)isEnabled:(int)arg1;
+ (_Bool)disable:(int)arg1;
+ (_Bool)enable:(int)arg1;
+ (id)decodeSpaceSeparatedStringList:(const char *)arg1;
+ (id)decodeNullSeparatedStringList:(const char *)arg1;

@end

