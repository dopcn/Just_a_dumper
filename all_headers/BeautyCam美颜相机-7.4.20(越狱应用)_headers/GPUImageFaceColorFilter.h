//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "GPUImageFilter.h"

#import "MTFilterProtocol-Protocol.h"

@class GLProgram, NSString;

@interface GPUImageFaceColorFilter : GPUImageFilter <MTFilterProtocol>
{
    int levelRangeInvUniform;
    int levelBlackUniform;
    int AlphaUniform;
    int lookUpGrayTextureUniform;
    int lookUpTextureUniform;
    int lookUpOriginTextureUniform;
    int needProcessLookUpGrayUniform;
    int lookUpSkinUniform;
    unsigned int lookUpGrayTexture;
    unsigned int lookUpGrayTextureFilter;
    unsigned int lookUpGrayTextureFunny;
    unsigned int lookUpGrayTextureMakeup;
    unsigned int lookUpTexture;
    unsigned int lookUpOriginTexture;
    unsigned int lookUpSkinTexture;
    unsigned int lookUpMakeupTexture;
    unsigned int lookUpOriginMakeupTexture;
    float _alpha;
    double _levelRangeInv;
    double _levelBlack;
    int hasFaceUnfirom;
    int faceMaskTextureUniform;
    unsigned int faceMaskTexture;
    NSString *gauss_vs;
    NSString *gauss_fs;
    GLProgram *gaussFilterProgram;
    int gaussFilterPositionAttribute;
    int gaussFilterTextureCoordinateAttribute;
    int gaussFilterInputTextureUniform;
    float gaussFilterTexelWidthOffsetUniform;
    float gaussFilterTexelHeightOffsetUniform;
    float _widthOffset;
    float _heightOffset;
    float _maskWidth;
    float _maskHeight;
    float _maskSize;
    unsigned int srcTexture;
    unsigned int vGausFrameBuffer;
    unsigned int vGausFrameBufferTexture;
    unsigned int hGausFrameBuffer;
    unsigned int hGausFrameBufferTexture;
    char *faceMask;
    _Bool _hasFace;
    int _filterType;
}

+ (id)mtfilter_imageWithARGBData:(char *)arg1 withWidth:(int)arg2 withHeight:(int)arg3;
@property(nonatomic) int filterType; // @synthesize filterType=_filterType;
@property(nonatomic) double levelRangeInv; // @synthesize levelRangeInv=_levelRangeInv;
@property(nonatomic) double levelBlack; // @synthesize levelBlack=_levelBlack;
@property(nonatomic) float alpha; // @synthesize alpha=_alpha;
- (void).cxx_destruct;
- (_Bool)createFramebuffer:(unsigned int *)arg1 texture:(unsigned int *)arg2 width:(int)arg3 heigth:(int)arg4;
- (void)gaussProgramFromVertexShaderFromString:(id)arg1 fragmentShaderFromString:(id)arg2;
- (void)setFaceInfo:(id)arg1 deviceOrientation:(long long)arg2 cameraPosition:(long long)arg3;
- (void)renderToTextureWithVertices:(const float *)arg1 textureCoordinates:(const float *)arg2;
- (void)loadTexture:(unsigned int *)arg1 fromGrayByte:(char *)arg2 width:(int)arg3 height:(int)arg4;
- (void)loadTexture:(unsigned int *)arg1 fromImage:(id)arg2;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

