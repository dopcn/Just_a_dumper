//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class NMAuditionPlayerController, NMDjPlayerController, NMEffector, NMPlayerController, NMRadioPlayerController, NMSong, NMSonglistPlayerController, NSArray, NSMutableDictionary, NSString, NSTimer, UIImage;
@protocol NMPlayUIProtocol, SDWebImageOperation;

@interface NMPlayerManager : NSObject
{
    NSObject<NMPlayUIProtocol> *_playUIController;
    long long _playSource;
    _Bool _pausedBecauseOfAudition;
    _Bool _pauseWhenFinishPlayCurrentSong;
    NMEffector *_effector;
    NMDjPlayerController *_djPlayerController;
    NMAuditionPlayerController *_auditionPlayerController;
    NMRadioPlayerController *_radioPlayerController;
    NMSonglistPlayerController *_songlistPlayerController;
    NMPlayerController *_currentPlayerController;
    NSTimer *_qulitySwitchTimer;
    long long _autoPlayQuality;
    UIImage *_albumImage;
    NSArray *_lyricsArray;
    long long _highlightedLyricIndex;
    long long _lastDrawedLyricIndex;
    NMSong *_nowPlayingCenterSong;
    NSMutableDictionary *_nowPlayingInfo;
    id <SDWebImageOperation> _downloadOperation;
    double _startPlayTime;
    _Bool _maybeConnectedToCar;
    NSString *_currentBluetoothName;
    double _currentBluetoothOnTime;
}

+ (_Bool)isCurrentPlayingDjProgram:(id)arg1;
+ (id)currentPlayerControlCenter;
+ (id)currentSongControlCenter;
+ (id)currentPlayer;
+ (id)currentSong;
+ (id)currentListedModePlayerController;
+ (id)currentPlayerController;
+ (id)songlistPlayerController;
+ (id)radioPlayerController;
+ (id)auditionPlayerController;
+ (id)djPlayerController;
+ (_Bool)airplayActived;
+ (_Bool)initialized;
+ (void)startWithUI:(id)arg1 loadHistory:(_Bool)arg2;
+ (id)defaultManager;
@property(nonatomic) double currentBluetoothOnTime; // @synthesize currentBluetoothOnTime=_currentBluetoothOnTime;
@property(nonatomic) _Bool maybeConnectedToCar; // @synthesize maybeConnectedToCar=_maybeConnectedToCar;
@property(retain, nonatomic) NSString *currentBluetoothName; // @synthesize currentBluetoothName=_currentBluetoothName;
@property(nonatomic) long long highlightedLyricIndex; // @synthesize highlightedLyricIndex=_highlightedLyricIndex;
@property(retain, nonatomic) NSArray *lyricsArray; // @synthesize lyricsArray=_lyricsArray;
@property(readonly, nonatomic) long long playSource; // @synthesize playSource=_playSource;
@property(readonly, nonatomic) NMEffector *effector; // @synthesize effector=_effector;
@property(readonly, nonatomic) _Bool pauseWhenFinishPlayCurrentSong; // @synthesize pauseWhenFinishPlayCurrentSong=_pauseWhenFinishPlayCurrentSong;
@property(retain, nonatomic) UIImage *albumImage; // @synthesize albumImage=_albumImage;
@property(readonly, nonatomic) long long autoPlayQuality; // @synthesize autoPlayQuality=_autoPlayQuality;
@property(retain, nonatomic) NMPlayerController *currentPlayerController; // @synthesize currentPlayerController=_currentPlayerController;
@property(readonly, nonatomic) NMSonglistPlayerController *songlistPlayerController; // @synthesize songlistPlayerController=_songlistPlayerController;
@property(readonly, nonatomic) NMRadioPlayerController *radioPlayerController; // @synthesize radioPlayerController=_radioPlayerController;
@property(readonly, nonatomic) NMAuditionPlayerController *auditionPlayerController; // @synthesize auditionPlayerController=_auditionPlayerController;
@property(readonly, nonatomic) NMDjPlayerController *djPlayerController; // @synthesize djPlayerController=_djPlayerController;
@property(nonatomic) __weak NSObject<NMPlayUIProtocol> *playUIController; // @synthesize playUIController=_playUIController;
- (void).cxx_destruct;
- (id)_createArtworkForPadOS6:(id)arg1;
- (void)configNowPlayingInfo:(_Bool)arg1;
- (void)_configNowPlayingInfoCenterForAudition;
- (void)setNowPlayingCenter;
- (void)_setNowPlayingCenter;
- (void)_refreshNowPlayingInfoCenter;
- (void)_refreshPlayingState;
- (void)refreshPlayingCenterState;
- (void)_setTitleForceUpdateNowPlayingCenter;
- (void)_cleanNowPlayingCenter;
- (void)_configNowPlayingInfoCenter:(id)arg1;
- (void)refreshControlCenterLyric;
- (void)applicationWillResignActive:(id)arg1;
- (void)_radioSubscribeChanged:(id)arg1;
- (void)_anonymousChanged:(id)arg1;
- (void)_afterLogin:(id)arg1;
- (void)_playlistSubscribed:(id)arg1;
- (void)_playlistDeleted:(id)arg1;
- (void)switchCurrentSongToQuality:(long long)arg1;
- (void)switchQuality;
- (void)_stopQulitySwitchTimer;
- (void)_startQulitySwitchTimer;
- (void)_qulitySwitchTimerInvoke;
- (void)_streamerSeekingChanged:(id)arg1;
- (void)_streamerStatusChanged:(id)arg1;
- (void)_songDidPause:(id)arg1;
- (void)_remoteProviderResponseFailed:(id)arg1;
- (void)_remoteProviderDownloadFailed:(id)arg1;
- (void)_remoteProviderBlockDownloadComplete:(id)arg1;
- (void)_remoteProviderDownloadWillStart:(id)arg1;
- (void)savePlayLog:(_Bool)arg1;
- (void)doSavePlayLog:(id)arg1 streamerStatus:(long long)arg2 errorCode:(long long)arg3 time:(double)arg4 collection:(id)arg5 changeCollection:(_Bool)arg6 fileType:(unsigned long long)arg7;
- (id)basicJsonForPlayLog:(id)arg1 collection:(id)arg2;
- (void)saveStartPlayLog;
- (void)doSaveStartPlayLog:(id)arg1 collection:(id)arg2;
- (void)_songDidChanged:(id)arg1;
- (void)_songWillChanged:(id)arg1;
- (void)_recoverRemoteProvder;
- (void)_reachablityChanged:(id)arg1;
- (void)setMaybeConnectedToCar;
- (void)_outputDeviceChanged:(id)arg1;
- (void)_autoPauseFinished;
- (void)_resetAutoPauseMark;
- (void)_autoPauseAfterSongEnd;
- (void)_autoPauseInternal;
- (void)setAutoPauseAfterFinishEnable:(_Bool)arg1;
- (void)autoPause:(double)arg1;
- (void)showPlayUI;
- (void)resetPausedByInterrupt;
- (void)stopCarModeProgram;
- (void)playCarModeProgram:(id)arg1;
- (void)stopSportFm;
- (void)playSportFm:(id)arg1;
- (void)resetPausedByAudition;
- (void)_unpauseAfterStopAudition;
- (void)stopAuditionMusic:(_Bool)arg1 shouldContinuePlay:(_Bool)arg2 shouldSendNotification:(_Bool)arg3;
- (void)stopAuditionMusic:(_Bool)arg1 shouldContinuePlay:(_Bool)arg2;
- (void)playAuditionMusicWithSong:(id)arg1 check2G3GIfNeeded:(_Bool)arg2;
- (void)playAuditionMusicWithSong:(id)arg1;
- (void)playAuditionMusicWithUrl:(id)arg1;
- (void)_playAuditionMusicWithSource:(id)arg1 useEffector:(_Bool)arg2 useCrossFade:(_Bool)arg3;
- (void)_doPlayAuditionMusicWithSource:(id)arg1 useEffector:(_Bool)arg2 useCrossFade:(_Bool)arg3;
- (void)removeSongs:(id)arg1 play:(_Bool)arg2 fromPlayingList:(_Bool)arg3;
- (void)removeSongs:(id)arg1 fromPlayingList:(_Bool)arg2;
- (void)appendSongs:(id)arg1 play:(_Bool)arg2 updateSongPlayed:(_Bool)arg3 collection:(id)arg4 showUI:(_Bool)arg5;
- (void)addSongsAfterCurrentSong:(id)arg1 play:(_Bool)arg2 collection:(id)arg3 showUI:(_Bool)arg4;
- (void)addSongsAfterCurrentSong:(id)arg1 play:(_Bool)arg2 collection:(id)arg3;
- (void)tryToAddSongsAfterCurrentSong:(id)arg1 play:(_Bool)arg2 collection:(id)arg3;
- (void)addSongsAfterCurrentSong:(id)arg1 play:(_Bool)arg2 showUI:(_Bool)arg3;
- (void)addSongsAfterCurrentSong:(id)arg1 play:(_Bool)arg2;
- (void)playRadio;
- (void)_loadRadioAndSaveHistory:(_Bool)arg1;
- (void)_loadRadioAndPlay:(_Bool)arg1 showUI:(_Bool)arg2 saveHistory:(_Bool)arg3;
- (void)playSong:(id)arg1;
- (void)playSongs:(id)arg1 atIndex:(long long)arg2 collection:(id)arg3 showUI:(_Bool)arg4 isCarPlay:(_Bool)arg5;
- (void)playSongs:(id)arg1 atIndex:(long long)arg2 collection:(id)arg3 showUI:(_Bool)arg4;
- (void)playSongs:(id)arg1 atIndex:(long long)arg2 collection:(id)arg3;
- (void)_loadSongs:(id)arg1 atIndex:(long long)arg2 collection:(id)arg3 saveHistory:(_Bool)arg4 loadFromHistory:(_Bool)arg5;
- (void)_loadSongs:(id)arg1 atIndex:(long long)arg2 collection:(id)arg3 play:(_Bool)arg4 showUI:(_Bool)arg5 saveHistory:(_Bool)arg6 loadFromHistory:(_Bool)arg7 isCarPlay:(_Bool)arg8;
- (void)_loadSongs:(id)arg1 atIndex:(long long)arg2 collection:(id)arg3 play:(_Bool)arg4 showUI:(_Bool)arg5 saveHistory:(_Bool)arg6 loadFromHistory:(_Bool)arg7;
- (void)_addDjProgramsAfterCurrentDjProgram:(id)arg1 play:(_Bool)arg2 collection:(id)arg3 showUI:(_Bool)arg4;
- (void)_addDjProgramAfterCurrentDjProgram:(id)arg1 play:(_Bool)arg2 collection:(id)arg3 showUI:(_Bool)arg4;
- (void)addDjProgramsAfterCurrentDjProgram:(id)arg1 play:(_Bool)arg2 collection:(id)arg3 showUI:(_Bool)arg4;
- (void)addDjProgramsAfterCurrentDjProgram:(id)arg1 play:(_Bool)arg2 collection:(id)arg3;
- (void)tryToDjProgramsAfterCurrentDjProgram:(id)arg1 play:(_Bool)arg2 collection:(id)arg3;
- (void)addDjProgramsAfterCurrentDjProgram:(id)arg1 play:(_Bool)arg2;
- (void)playDjProgram:(id)arg1 collection:(id)arg2;
- (void)playDjProgram:(id)arg1 collection:(id)arg2 showUI:(_Bool)arg3;
- (void)playDjProgram:(id)arg1 showUI:(_Bool)arg2;
- (void)playDjProgram:(id)arg1;
- (void)playDjPrograms:(id)arg1 atIndex:(long long)arg2 collection:(id)arg3 showUI:(_Bool)arg4 isCarPlay:(_Bool)arg5;
- (void)playDjPrograms:(id)arg1 atIndex:(long long)arg2 collection:(id)arg3 showUI:(_Bool)arg4;
- (void)playDjPrograms:(id)arg1 atIndex:(long long)arg2 collection:(id)arg3;
- (void)_loadDjPrograms:(id)arg1 atIndex:(long long)arg2 collection:(id)arg3 play:(_Bool)arg4 showUI:(_Bool)arg5 loadFromHistory:(_Bool)arg6 isCarPlay:(_Bool)arg7;
- (void)_loadDjPrograms:(id)arg1 atIndex:(long long)arg2 collection:(id)arg3 play:(_Bool)arg4 showUI:(_Bool)arg5 loadFromHistory:(_Bool)arg6;
- (void)_loadDjProgramSongs:(id)arg1 atIndex:(long long)arg2 collection:(id)arg3 saveHistory:(_Bool)arg4 loadFromHistory:(_Bool)arg5;
- (void)playDjProgramSong:(id)arg1 collection:(id)arg2;
- (void)_loadDjProgramSongs:(id)arg1 atIndex:(long long)arg2 collection:(id)arg3 play:(_Bool)arg4 showUI:(_Bool)arg5 saveHistory:(_Bool)arg6 loadFromHistory:(_Bool)arg7 isCarPlay:(_Bool)arg8;
- (void)_loadDjProgramSongs:(id)arg1 atIndex:(long long)arg2 collection:(id)arg3 play:(_Bool)arg4 showUI:(_Bool)arg5 saveHistory:(_Bool)arg6 loadFromHistory:(_Bool)arg7;
@property(readonly, nonatomic) _Bool isCarModeProgram;
@property(readonly, nonatomic) _Bool isSportFm;
- (_Bool)playUsingAudition;
@property(readonly, nonatomic) _Bool isAudition; // @dynamic isAudition;
@property(readonly, nonatomic) _Bool isWaitingState; // @dynamic isWaitingState;
@property(readonly, nonatomic) _Bool isPlayingStateControlCenter;
@property(readonly, nonatomic) _Bool isPlayingState; // @dynamic isPlayingState;
@property(readonly, nonatomic) _Bool isPlayed; // @dynamic isPlayed;
- (void)setSource:(id)arg1 songs:(id)arg2;
- (void)setupPlayerController:(id)arg1;
- (void)resetDjPlayerControllerURLInfoIfNeeded;
- (void)refreshCurrentListPrivileges;
- (void)refreshUMGAfterVipStatusUpdated;
- (void)refreshUMG;
- (void)_refreshDjProgramInfoIfNeeded:(id)arg1;
- (void)refreshPrivilege:(id)arg1;
- (void)stop:(_Bool)arg1;
- (void)dealloc;
- (id)init;

@end

