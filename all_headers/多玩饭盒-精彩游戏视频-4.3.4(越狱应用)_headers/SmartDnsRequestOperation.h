//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

#import "SDGCDAsyncUdpSocketDelegate-Protocol.h"

@class NSCondition, NSMutableDictionary, NSString, SDGCDAsyncUdpSocket;
@protocol OS_dispatch_source;

@interface SmartDnsRequestOperation : NSObject <SDGCDAsyncUdpSocketDelegate>
{
    _Bool _isInitalize;
    _Bool _isRequestTCP;
    unsigned int mRid;
    NSString *mHttpSrv;
    NSString *mHost;
    NSMutableDictionary *mjStats;
    NSMutableDictionary *mcdnStats;
    SDGCDAsyncUdpSocket *_gcdUdpSocket;
    NSCondition *_condition;
    NSObject<OS_dispatch_source> *_retryTimer;
}

+ (id)requestOperationWithHttpSrv:(id)arg1 rid:(unsigned int)arg2 host:(id)arg3;
@property(nonatomic) _Bool isRequestTCP; // @synthesize isRequestTCP=_isRequestTCP;
@property(copy, nonatomic) NSObject<OS_dispatch_source> *retryTimer; // @synthesize retryTimer=_retryTimer;
@property(retain, nonatomic) NSCondition *condition; // @synthesize condition=_condition;
@property(retain, nonatomic) SDGCDAsyncUdpSocket *gcdUdpSocket; // @synthesize gcdUdpSocket=_gcdUdpSocket;
@property(nonatomic) _Bool isInitalize; // @synthesize isInitalize=_isInitalize;
@property(copy, nonatomic) NSMutableDictionary *mcdnStats; // @synthesize mcdnStats;
@property(copy, nonatomic) NSMutableDictionary *mjStats; // @synthesize mjStats;
@property(copy, nonatomic) NSString *mHost; // @synthesize mHost;
@property(nonatomic) unsigned int mRid; // @synthesize mRid;
@property(copy, nonatomic) NSString *mHttpSrv; // @synthesize mHttpSrv;
- (void).cxx_destruct;
- (void)udpSocketDidClose:(id)arg1 withError:(id)arg2;
- (void)udpSocket:(id)arg1 didReceiveData:(id)arg2 fromAddress:(id)arg3 withFilterContext:(id)arg4;
- (void)udpSocket:(id)arg1 didNotSendDataWithTag:(long long)arg2 dueToError:(id)arg3;
- (void)udpSocket:(id)arg1 didSendDataWithTag:(long long)arg2;
- (void)udpSocket:(id)arg1 didNotConnect:(id)arg2;
- (void)udpSocket:(id)arg1 didConnectToAddress:(id)arg2;
- (void)requestGetHostByName:(id)arg1;
- (void)request:(_Bool)arg1 condition:(id)arg2;
- (void)requestTCP:(_Bool)arg1;
- (void)requestTCP:(id)arg1 dnsName:(id)arg2 isFirst:(_Bool)arg3;
- (void)requestUDP:(id)arg1 dnsName:(id)arg2;
- (id)getIpAddressFromUrl:(id)arg1;
- (void)parseResultData:(id)arg1 fromSrvIp:(id)arg2 host:(id)arg3;
- (void)parseResultDict:(id)arg1 fromSrvIp:(id)arg2 host:(id)arg3;
- (void)setCacheIsp:(id)arg1;
- (id)init;

@end

