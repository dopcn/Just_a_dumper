//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <UIKit/UIViewController.h>

@class AVPlayer, AVPlayerItem, AVPlayerLayer, IfAVPlayerControlView, NSArray, NSDictionary, NSMutableDictionary, NSString, NSURL, UITouch, UIView;

@interface IfAVPlayerViewController : UIViewController
{
    NSMutableDictionary *_url2Item;
    double _loadedTimeEnd;
    _Bool _isStatusBarHiddenInline;
    AVPlayerLayer *_playerLayer;
    id _playerTimer;
    UIView *_contentView;
    unsigned char _panGestureMoveType;
    struct CGPoint _previousTouchPosition;
    UITouch *_trackTouch;
    _Bool _touchMoved;
    IfAVPlayerControlView *_controlView;
    _Bool _isGlobalBrightness;
    AVPlayer *_backLoadPlayer;
    NSURL *_backLoadUrl;
    _Bool _fullscreen;
    _Bool _autoPauseWhenExitApp;
    _Bool _autoFullscreenWhenLandscape;
    _Bool _autoInlineWhenPortrait;
    _Bool _previewWhenSeeking;
    _Bool _playWhenTap;
    _Bool _recognizedTouchWhenInline;
    _Bool _canSeek;
    _Bool _canPause;
    NSURL *_contentURL;
    NSDictionary *_contentURLDict;
    NSString *_currentQualityName;
    NSArray *_contentURLQueue;
    unsigned long long _queueIndex;
    AVPlayer *_player;
    double _currentPlaybackTime;
    double _playingtime;
    double _backBrightness;
    long long _sourceType;
    long long _playbackState;
    unsigned long long _supportedInterfaceOrientations;
    double _bufferSeconds;
    UIView *_backgroundView;
    UIView *_inlineView;
    CDUnknownBlockType _muteCheckCallBack;
    CDUnknownBlockType _willPlayCallBack;
    AVPlayerItem *_item;
    UIView *_helpView;
}

+ (_Bool)automaticallyNotifiesObserversOfFullscreen;
+ (id)getLastPlayPlayer;
@property(retain, nonatomic) UIView *helpView; // @synthesize helpView=_helpView;
@property(retain, nonatomic) AVPlayerItem *item; // @synthesize item=_item;
@property(copy, nonatomic) CDUnknownBlockType willPlayCallBack; // @synthesize willPlayCallBack=_willPlayCallBack;
@property(copy, nonatomic) CDUnknownBlockType muteCheckCallBack; // @synthesize muteCheckCallBack=_muteCheckCallBack;
@property(readonly, nonatomic) UIView *inlineView; // @synthesize inlineView=_inlineView;
@property(readonly, nonatomic) UIView *controlView; // @synthesize controlView=_controlView;
@property(readonly, nonatomic) UIView *backgroundView; // @synthesize backgroundView=_backgroundView;
@property(nonatomic) _Bool canPause; // @synthesize canPause=_canPause;
@property(nonatomic) _Bool canSeek; // @synthesize canSeek=_canSeek;
@property(nonatomic) _Bool recognizedTouchWhenInline; // @synthesize recognizedTouchWhenInline=_recognizedTouchWhenInline;
@property(nonatomic) _Bool playWhenTap; // @synthesize playWhenTap=_playWhenTap;
@property(nonatomic) double bufferSeconds; // @synthesize bufferSeconds=_bufferSeconds;
@property(nonatomic, getter=isPreviewWhenSeeking) _Bool previewWhenSeeking; // @synthesize previewWhenSeeking=_previewWhenSeeking;
@property(nonatomic) unsigned long long supportedInterfaceOrientations; // @synthesize supportedInterfaceOrientations=_supportedInterfaceOrientations;
@property(nonatomic, getter=isAutoInlineWhenPortrait) _Bool autoInlineWhenPortrait; // @synthesize autoInlineWhenPortrait=_autoInlineWhenPortrait;
@property(nonatomic, getter=isAutoFullscreenWhenLandscape) _Bool autoFullscreenWhenLandscape; // @synthesize autoFullscreenWhenLandscape=_autoFullscreenWhenLandscape;
@property(nonatomic, getter=isAutoPauseWhenExitApp) _Bool autoPauseWhenExitApp; // @synthesize autoPauseWhenExitApp=_autoPauseWhenExitApp;
@property(readonly, nonatomic) long long playbackState; // @synthesize playbackState=_playbackState;
@property(nonatomic) long long sourceType; // @synthesize sourceType=_sourceType;
@property(nonatomic) double backBrightness; // @synthesize backBrightness=_backBrightness;
@property(nonatomic, getter=isFullscreen) _Bool fullscreen; // @synthesize fullscreen=_fullscreen;
@property(nonatomic) double playingtime; // @synthesize playingtime=_playingtime;
@property(nonatomic) double currentPlaybackTime; // @synthesize currentPlaybackTime=_currentPlaybackTime;
@property(retain, nonatomic) AVPlayer *player; // @synthesize player=_player;
@property(nonatomic) unsigned long long queueIndex; // @synthesize queueIndex=_queueIndex;
@property(copy, nonatomic) NSArray *contentURLQueue; // @synthesize contentURLQueue=_contentURLQueue;
@property(retain, nonatomic) NSString *currentQualityName; // @synthesize currentQualityName=_currentQualityName;
@property(copy, nonatomic) NSDictionary *contentURLDict; // @synthesize contentURLDict=_contentURLDict;
@property(copy, nonatomic) NSURL *contentURL; // @synthesize contentURL=_contentURL;
- (void).cxx_destruct;
- (void)verticalTouchMove:(struct CGPoint)arg1 andState:(long long)arg2;
- (void)horizontalTouchMove:(struct CGPoint)arg1 andState:(long long)arg2;
- (void)touchesCancelled:(id)arg1 withEvent:(id)arg2;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (void)handleMoveTouch:(_Bool)arg1;
- (void)touchesMoved:(id)arg1 withEvent:(id)arg2;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (void)progressScrollEnd;
- (void)progressScrollChange;
- (void)progressScrollBegin;
- (void)toggleQuality:(id)arg1;
- (void)toggleFullscreen:(id)arg1;
- (void)togglePlayOrPause:(id)arg1;
- (void)hideHelperView;
- (void)showHelperView;
- (void)advanceToNextItem:(_Bool)arg1;
- (void)prepareToPlay;
- (void)stop;
- (void)play;
- (void)pause;
- (void)showControl:(_Bool)arg1;
- (void)hideControl:(_Bool)arg1;
- (void)setControlVisibility:(_Bool)arg1 animated:(_Bool)arg2;
- (_Bool)isControlViewVisible;
- (void)fullscreenOverlay:(long long)arg1 forView:(id)arg2 OnView:(id)arg3;
- (void)setFullscreen:(_Bool)arg1 animated:(_Bool)arg2;
- (void)setPlaybackState:(long long)arg1;
- (void)_setCurrentPlaybackTime:(double)arg1;
@property(readonly, nonatomic) double playableDuration;
@property(readonly, nonatomic) double duration;
- (void)loadItemError:(id)arg1;
- (void)replaceSource:(id)arg1;
- (void)exchangeBrightness:(_Bool)arg1;
- (void)setGlobalBrightness:(_Bool)arg1;
- (void)setLocalBrightness:(_Bool)arg1;
- (void)changeToInlineEnd;
- (void)changeToInline:(_Bool)arg1;
- (void)changeToFullscreen:(_Bool)arg1;
- (void)updateLoadedTime:(id)arg1;
- (void)playIfBufferEnoughWhenInterrupted;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (long long)preferredInterfaceOrientationForPresentation;
- (long long)preferredStatusBarUpdateAnimation;
- (_Bool)prefersStatusBarHidden;
- (_Bool)shouldAutorotate;
- (void)resignApp:(id)arg1;
- (void)activeApp:(id)arg1;
- (void)playbackStalledNotification:(id)arg1;
- (void)playToEndNotification:(id)arg1;
- (void)checkMuteResultNotification:(id)arg1;
- (void)deviceChangeOrientationNotification:(id)arg1;
- (void)didReceiveMemoryWarning;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)createAVPlayerWithURL:(id)arg1;
- (id)createAVPlayerView;
- (void)createControlView;
- (void)initialize;
- (void)loadView;
- (id)initWithContentURL:(id)arg1;
- (id)init;
- (void)dealloc;

@end

