//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <UIKit/UIViewController.h>

#import "BDbubbleViewDelegate-Protocol.h"
#import "BMKGeoCodeSearchDelegate-Protocol.h"
#import "BMKLocationServiceDelegate-Protocol.h"
#import "BMKMapViewDelegate-Protocol.h"
#import "BMKRouteSearchDelegate-Protocol.h"
#import "MapHttpRequestToServerDelegate-Protocol.h"
#import "ToolbarForMapInterfaceDelegate-Protocol.h"
#import "UIPickerViewDataSource-Protocol.h"
#import "UIPickerViewDelegate-Protocol.h"
#import "keySearchViewDelegate-Protocol.h"

@class BMKLocationService, BMKMapView, BMKPlanNode, BMKRouteSearch, CityPickerView, MapHttpRequestToServer, NSArray, NSDictionary, NSMutableArray, NSString, ToolbarForMapInterface, UIPickerView, UIView, keySearchView;

@interface ViewController : UIViewController <BMKMapViewDelegate, MapHttpRequestToServerDelegate, BDbubbleViewDelegate, ToolbarForMapInterfaceDelegate, UIPickerViewDelegate, UIPickerViewDataSource, keySearchViewDelegate, BMKLocationServiceDelegate, BMKGeoCodeSearchDelegate, BMKRouteSearchDelegate>
{
    BMKLocationService *_locService;
    BMKRouteSearch *_routeSearch;
    MapHttpRequestToServer *httpRequest;
    struct CLLocationCoordinate2D myuserLocation;
    ToolbarForMapInterface *_toolbarView;
    BMKMapView *_mapView;
    NSArray *_annotationDataArray;
    NSArray *_allArray;
    long long _index;
    NSArray *_pickArray;
    NSArray *_pickerDataArray;
    UIPickerView *_distancePickerView;
    long long _annIndex;
    keySearchView *_keySearchView;
    CityPickerView *_cityPickerView;
    NSString *_selectedProvince;
    NSString *_selectedCity;
    NSMutableArray *_ProvinceArray;
    NSDictionary *_cityDic;
    NSString *_codeString;
    NSMutableArray *_busLineArray;
    BMKPlanNode *_endnode;
    BMKPlanNode *_startnode;
    UIView *_viewForPickerView;
    UIView *_viewForPickerView2;
    NSString *_distanceForpickerView;
    NSArray *_busTitleArray;
    NSDictionary *_dic;
    _Bool _locSerRequest;
}

- (void).cxx_destruct;
- (void)searchButtonClicken;
- (void)cancelButtonClicked;
- (void)determineBtn:(id)arg1;
- (void)cityButtonClicked;
- (void)onFuzzySearch;
- (void)focusMyLocation;
- (void)onLineQuery;
- (void)pickerView:(id)arg1 didSelectRow:(long long)arg2 inComponent:(long long)arg3;
- (id)pickerView:(id)arg1 titleForRow:(long long)arg2 forComponent:(long long)arg3;
- (long long)pickerView:(id)arg1 numberOfRowsInComponent:(long long)arg2;
- (long long)numberOfComponentsInPickerView:(id)arg1;
- (void)cancelBtnForDistance:(id)arg1;
- (void)determineBtnForDistance:(id)arg1;
- (void)showpickerView;
- (void)ToolbarItemForMapInterfaceBeClicked:(long long)arg1;
- (void)creatToolbarViewForDistance;
- (void)creatToolbarView;
- (id)getMyBundlePath1:(id)arg1;
- (id)getRouteAnnotationView:(id)arg1 viewForAnnotation:(id)arg2;
- (id)mapView:(id)arg1 viewForAnnotation:(id)arg2;
- (void)mapView:(id)arg1 didSelectAnnotationView:(id)arg2;
- (void)mapView:(id)arg1 didDeselectAnnotationView:(id)arg2;
- (void)bubbleClicked:(id)arg1;
- (void)MapHttpRequestToServerSuccess:(id)arg1;
- (void)MapHttpRequestToServerfail;
- (id)mapView:(id)arg1 viewForOverlay:(id)arg2;
- (void)onGetDrivingRouteResult:(id)arg1 result:(id)arg2 errorCode:(int)arg3;
- (void)onGetTransitRouteResult:(id)arg1 result:(id)arg2 errorCode:(int)arg3;
- (void)driveMap:(id)arg1;
- (void)findBusLineMap:(id)arg1;
- (void)BusinessHallToMapView:(id)arg1;
- (void)updateScopeOfMap:(id)arg1;
- (void)onGetReverseGeoCodeResult:(id)arg1 result:(id)arg2 errorCode:(int)arg3;
- (void)didUpdateBMKUserLocation:(id)arg1;
- (void)rightBarButtonItemClick:(id)arg1;
- (void)backToMenu;
- (void)backBtnClick;
- (void)didReceiveMemoryWarning;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)dealloc;
- (void)viewDidLoad;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

