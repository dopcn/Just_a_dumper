//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "QzoneModel.h"

@class NSDictionary, NSMutableDictionary, NSString, QZVideoTADMetaData, QzoneFeedSVideoRemark, QzoneFeedVideoPlayCtrl;

@interface QzoneFeedVideo : QzoneModel
{
    _Bool _isAdapted;
    unsigned char _playType;
    _Bool _streamingPlay;
    _Bool _useVideoURL;
    _Bool _isRecommenedVideo;
    _Bool _isShowLimitedVideoTips;
    _Bool _switchToFeedPage;
    _Bool _premovieAdvValid;
    _Bool _advShowed;
    _Bool _isOnWifiPlay;
    _Bool _isSetPlayOnWifi;
    _Bool _needReportPlayOnWifi;
    unsigned int _videoTime;
    NSString *_clientKey;
    NSString *_videoID;
    NSString *_videoURL;
    NSString *_originalURL;
    NSString *_bigURL;
    NSString *_currentURL;
    long long _bWidth;
    long long _bHeight;
    long long _hWidth;
    long long _hHeight;
    double _oEnlargeRate;
    double _bEnlargeRate;
    long long _width;
    long long _height;
    double _cEnlargeRate;
    long long _actiontype;
    NSString *_actionURL;
    long long _adaptedType;
    NSString *_adaptedData;
    NSString *_adaptedOrgUrl;
    long long _filetype;
    long long _videotype;
    long long _videoSource;
    NSDictionary *_videoUrlDict;
    NSString *_videoOriginURL;
    unsigned long long _videoOriginSize;
    long long _status;
    NSString *_toast;
    long long _playState;
    NSDictionary *_extendInfo;
    QzoneFeedSVideoRemark *_videoRemark;
    NSMutableDictionary *_extraPlayInfo;
    double _lastPlayTime;
    long long _stateMask;
    NSString *_errorTips;
    long long _videoShowType;
    QzoneFeedVideoPlayCtrl *_videoPlayCtrl;
    long long _advDelayTime;
    NSString *_videoWebviewURL;
    long long _advPriority;
    long long _reportVideoFeedsType;
    NSDictionary *_cookie;
    QzoneFeedVideo *_premovieAdvVideo;
    QZVideoTADMetaData *_tadReportData;
    long long _premovieFeedIndex;
    double _lastPlayTimestamp;
    long long _videoPlayCnt;
    struct CGSize _videoLayoutSize;
}

+ (id)excludedPropertyKeys;
@property(nonatomic) long long videoPlayCnt; // @synthesize videoPlayCnt=_videoPlayCnt;
@property(nonatomic) _Bool needReportPlayOnWifi; // @synthesize needReportPlayOnWifi=_needReportPlayOnWifi;
@property(nonatomic) _Bool isSetPlayOnWifi; // @synthesize isSetPlayOnWifi=_isSetPlayOnWifi;
@property(nonatomic) _Bool isOnWifiPlay; // @synthesize isOnWifiPlay=_isOnWifiPlay;
@property(nonatomic) double lastPlayTimestamp; // @synthesize lastPlayTimestamp=_lastPlayTimestamp;
@property(nonatomic) _Bool advShowed; // @synthesize advShowed=_advShowed;
@property(nonatomic) long long premovieFeedIndex; // @synthesize premovieFeedIndex=_premovieFeedIndex;
@property(retain, nonatomic) QZVideoTADMetaData *tadReportData; // @synthesize tadReportData=_tadReportData;
@property(nonatomic) QzoneFeedVideo *premovieAdvVideo; // @synthesize premovieAdvVideo=_premovieAdvVideo;
@property(retain, nonatomic) NSDictionary *cookie; // @synthesize cookie=_cookie;
@property(nonatomic) _Bool premovieAdvValid; // @synthesize premovieAdvValid=_premovieAdvValid;
@property(nonatomic) long long reportVideoFeedsType; // @synthesize reportVideoFeedsType=_reportVideoFeedsType;
@property(nonatomic) long long advPriority; // @synthesize advPriority=_advPriority;
@property(retain, nonatomic) NSString *videoWebviewURL; // @synthesize videoWebviewURL=_videoWebviewURL;
@property(nonatomic) long long advDelayTime; // @synthesize advDelayTime=_advDelayTime;
@property(nonatomic) struct CGSize videoLayoutSize; // @synthesize videoLayoutSize=_videoLayoutSize;
@property(retain, nonatomic) QzoneFeedVideoPlayCtrl *videoPlayCtrl; // @synthesize videoPlayCtrl=_videoPlayCtrl;
@property(nonatomic) long long videoShowType; // @synthesize videoShowType=_videoShowType;
@property(nonatomic) _Bool switchToFeedPage; // @synthesize switchToFeedPage=_switchToFeedPage;
@property(nonatomic) _Bool isShowLimitedVideoTips; // @synthesize isShowLimitedVideoTips=_isShowLimitedVideoTips;
@property(nonatomic) _Bool isRecommenedVideo; // @synthesize isRecommenedVideo=_isRecommenedVideo;
@property(retain, nonatomic) NSString *errorTips; // @synthesize errorTips=_errorTips;
@property(nonatomic) long long stateMask; // @synthesize stateMask=_stateMask;
@property(nonatomic) double lastPlayTime; // @synthesize lastPlayTime=_lastPlayTime;
@property(nonatomic) _Bool useVideoURL; // @synthesize useVideoURL=_useVideoURL;
@property(retain, nonatomic) NSMutableDictionary *extraPlayInfo; // @synthesize extraPlayInfo=_extraPlayInfo;
@property(retain, nonatomic) QzoneFeedSVideoRemark *videoRemark; // @synthesize videoRemark=_videoRemark;
@property(retain, nonatomic) NSDictionary *extendInfo; // @synthesize extendInfo=_extendInfo;
@property(nonatomic) long long playState; // @synthesize playState=_playState;
@property(copy, nonatomic) NSString *toast; // @synthesize toast=_toast;
@property(nonatomic) long long status; // @synthesize status=_status;
@property(nonatomic) unsigned long long videoOriginSize; // @synthesize videoOriginSize=_videoOriginSize;
@property(copy, nonatomic) NSString *videoOriginURL; // @synthesize videoOriginURL=_videoOriginURL;
@property(nonatomic) _Bool streamingPlay; // @synthesize streamingPlay=_streamingPlay;
@property(nonatomic) unsigned char playType; // @synthesize playType=_playType;
@property(retain, nonatomic) NSDictionary *videoUrlDict; // @synthesize videoUrlDict=_videoUrlDict;
@property(nonatomic) long long videoSource; // @synthesize videoSource=_videoSource;
@property(nonatomic) unsigned int videoTime; // @synthesize videoTime=_videoTime;
@property(nonatomic) long long videotype; // @synthesize videotype=_videotype;
@property(nonatomic) long long filetype; // @synthesize filetype=_filetype;
@property(retain, nonatomic) NSString *adaptedOrgUrl; // @synthesize adaptedOrgUrl=_adaptedOrgUrl;
@property(retain, nonatomic) NSString *adaptedData; // @synthesize adaptedData=_adaptedData;
@property(nonatomic) long long adaptedType; // @synthesize adaptedType=_adaptedType;
@property(nonatomic) _Bool isAdapted; // @synthesize isAdapted=_isAdapted;
@property(retain, nonatomic) NSString *actionURL; // @synthesize actionURL=_actionURL;
@property(nonatomic) long long actiontype; // @synthesize actiontype=_actiontype;
@property(nonatomic) double cEnlargeRate; // @synthesize cEnlargeRate=_cEnlargeRate;
@property(nonatomic) long long height; // @synthesize height=_height;
@property(nonatomic) long long width; // @synthesize width=_width;
@property(nonatomic) double bEnlargeRate; // @synthesize bEnlargeRate=_bEnlargeRate;
@property(nonatomic) double oEnlargeRate; // @synthesize oEnlargeRate=_oEnlargeRate;
@property(nonatomic) long long hHeight; // @synthesize hHeight=_hHeight;
@property(nonatomic) long long hWidth; // @synthesize hWidth=_hWidth;
@property(nonatomic) long long bHeight; // @synthesize bHeight=_bHeight;
@property(nonatomic) long long bWidth; // @synthesize bWidth=_bWidth;
@property(retain, nonatomic) NSString *currentURL; // @synthesize currentURL=_currentURL;
@property(retain, nonatomic) NSString *bigURL; // @synthesize bigURL=_bigURL;
@property(retain, nonatomic) NSString *originalURL; // @synthesize originalURL=_originalURL;
@property(retain, nonatomic) NSString *videoURL; // @synthesize videoURL=_videoURL;
@property(retain, nonatomic) NSString *videoID; // @synthesize videoID=_videoID;
@property(retain, nonatomic) NSString *clientKey; // @synthesize clientKey=_clientKey;
- (void).cxx_destruct;
- (_Bool)isPgcVideo;
- (id)keyLogInfo;
- (_Bool)isTopicShareVideo;
- (_Bool)isTXShareVideo;
- (_Bool)isTransDoneOrReviewPass;
- (_Bool)isTranscodeFinished;
- (_Bool)isThirdShareVideo;
- (id)validOriginURL;
- (long long)canPlayDuration;
- (_Bool)isAutoPlayVideo;
- (_Bool)cyclePlay;
- (void)setCyclePlay:(_Bool)arg1;
- (_Bool)autoPlay;
- (void)setAutoPlay:(_Bool)arg1;
- (id)h265VideoUrl;
- (id)lowBitRateVideoUrl;
- (id)highBitRateVideoUrl;
- (id)normalVideoUrl;
- (id)writeFrom;
- (_Bool)disableUIOperation;
- (_Bool)isVod;
- (_Bool)isOnlyVoice;
- (_Bool)hasRealVideoUrl;
- (void)setNormalVideoUrl:(id)arg1;

@end

