//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

@class NSMutableArray, NSMutableDictionary, NSOperationQueue, NSString;
@protocol TFEHttpDNSStrategy, TFENetMonitorServiceProtocol;

@interface TFEHttpDNSService : NSObject
{
    id <TFEHttpDNSStrategy> _strategy;
    id <TFENetMonitorServiceProtocol> _netMonitorService;
    NSMutableDictionary *_dnsCache;
    NSOperationQueue *_operationQueue;
    NSMutableDictionary *_runningTasks;
    NSString *_serverIP;
    NSString *_acountID;
    unsigned long long _resolveCount;
    NSMutableArray *_preResolveHosts;
}

+ (id)sharedInstance;
@property(retain) NSMutableArray *preResolveHosts; // @synthesize preResolveHosts=_preResolveHosts;
@property unsigned long long resolveCount; // @synthesize resolveCount=_resolveCount;
@property(retain, nonatomic) NSString *acountID; // @synthesize acountID=_acountID;
@property(retain, nonatomic) NSString *serverIP; // @synthesize serverIP=_serverIP;
@property(retain, nonatomic) NSMutableDictionary *runningTasks; // @synthesize runningTasks=_runningTasks;
@property(retain, nonatomic) NSOperationQueue *operationQueue; // @synthesize operationQueue=_operationQueue;
@property(retain) NSMutableDictionary *dnsCache; // @synthesize dnsCache=_dnsCache;
@property(retain) id <TFENetMonitorServiceProtocol> netMonitorService; // @synthesize netMonitorService=_netMonitorService;
@property(retain) id <TFEHttpDNSStrategy> strategy; // @synthesize strategy=_strategy;
- (void).cxx_destruct;
- (void)removePreResolveHost:(id)arg1;
- (void)addPreResolveHost:(id)arg1;
- (void)removeCache:(id)arg1 networkType:(unsigned long long)arg2 wifiSSID:(id)arg3;
- (void)removeCache:(id)arg1;
- (void)addCache:(id)arg1 networkType:(unsigned long long)arg2 wifiSSID:(id)arg3;
- (void)addCache:(id)arg1;
- (id)readCache:(id)arg1 networkType:(unsigned long long)arg2 wifiSSID:(id)arg3;
- (id)readCache:(id)arg1;
- (unsigned long long)convertNetworkType:(unsigned long long)arg1;
- (id)currentWifiSSID;
- (unsigned long long)currentNetworkType;
- (id)toURL:(id)arg1;
- (id)getCurTaskKey:(id)arg1;
- (id)toURLString:(id)arg1;
- (id)asyncResolve:(id)arg1;
- (id)resolve:(id)arg1;
- (id)fetch:(id)arg1;
- (id)query:(id)arg1;
- (id)init;

@end

