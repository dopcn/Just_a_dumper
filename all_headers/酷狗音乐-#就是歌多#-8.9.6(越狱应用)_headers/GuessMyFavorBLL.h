//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class GuessFavorRadioNotRecommendDBDao, GuessMyFavorDBDao, GuessMyFavorDao, NSArray, NSDate, NSMutableArray, NSMutableSet, NSOperationQueue, NSString, RadioInfo;

@interface GuessMyFavorBLL : NSObject
{
    _Bool _isRequestingLoginServiceFlag;
    _Bool _uploadingHistoryDataFlag;
    _Bool _fadingOutFlag;
    _Bool _hasShowTransferViewFlag;
    int _uploadHistoryFailTimes;
    RadioInfo *_radioInfo;
    NSMutableArray *_cacheSongs;
    NSArray *_remainingUploadData;
    NSMutableSet *_uploadHistoryHashes;
    NSString *_loginLastHistoryHash;
    NSDate *_uploadingAccessDate;
    GuessMyFavorDao *_serviceDao;
    GuessMyFavorDBDao *_dbDao;
    GuessFavorRadioNotRecommendDBDao *_notRecommendDBDao;
    long long _isRequestingLoginServiceCount;
    NSOperationQueue *_guessFavorOperationQueue;
    NSOperationQueue *_loginUploadQueue;
    NSOperationQueue *_reportDuplicateQueue;
    NSOperationQueue *_fadeOutOperationQueue;
}

+ (_Bool)isModeMatching:(id)arg1;
+ (_Bool)isGuessFavorRadioMode;
+ (id)sharedInstance;
@property(retain, nonatomic) NSOperationQueue *fadeOutOperationQueue; // @synthesize fadeOutOperationQueue=_fadeOutOperationQueue;
@property(nonatomic) int uploadHistoryFailTimes; // @synthesize uploadHistoryFailTimes=_uploadHistoryFailTimes;
@property(retain, nonatomic) NSOperationQueue *reportDuplicateQueue; // @synthesize reportDuplicateQueue=_reportDuplicateQueue;
@property(retain, nonatomic) NSOperationQueue *loginUploadQueue; // @synthesize loginUploadQueue=_loginUploadQueue;
@property(retain, nonatomic) NSOperationQueue *guessFavorOperationQueue; // @synthesize guessFavorOperationQueue=_guessFavorOperationQueue;
@property(nonatomic) long long isRequestingLoginServiceCount; // @synthesize isRequestingLoginServiceCount=_isRequestingLoginServiceCount;
@property(retain, nonatomic) GuessFavorRadioNotRecommendDBDao *notRecommendDBDao; // @synthesize notRecommendDBDao=_notRecommendDBDao;
@property(retain, nonatomic) GuessMyFavorDBDao *dbDao; // @synthesize dbDao=_dbDao;
@property(retain, nonatomic) GuessMyFavorDao *serviceDao; // @synthesize serviceDao=_serviceDao;
@property(nonatomic) _Bool hasShowTransferViewFlag; // @synthesize hasShowTransferViewFlag=_hasShowTransferViewFlag;
@property(nonatomic) _Bool fadingOutFlag; // @synthesize fadingOutFlag=_fadingOutFlag;
@property(retain, nonatomic) NSDate *uploadingAccessDate; // @synthesize uploadingAccessDate=_uploadingAccessDate;
@property(retain, nonatomic) NSString *loginLastHistoryHash; // @synthesize loginLastHistoryHash=_loginLastHistoryHash;
@property(retain, nonatomic) NSMutableSet *uploadHistoryHashes; // @synthesize uploadHistoryHashes=_uploadHistoryHashes;
@property(retain, nonatomic) NSArray *remainingUploadData; // @synthesize remainingUploadData=_remainingUploadData;
@property(nonatomic) _Bool uploadingHistoryDataFlag; // @synthesize uploadingHistoryDataFlag=_uploadingHistoryDataFlag;
@property(retain) NSMutableArray *cacheSongs; // @synthesize cacheSongs=_cacheSongs;
@property(retain, nonatomic) RadioInfo *radioInfo; // @synthesize radioInfo=_radioInfo;
@property(nonatomic) _Bool isRequestingLoginServiceFlag; // @synthesize isRequestingLoginServiceFlag=_isRequestingLoginServiceFlag;
- (void).cxx_destruct;
- (id)selectNotRecommendListWithUserId:(id)arg1;
- (_Bool)deleteRecommendSourceSinger:(id)arg1;
- (id)selectNotRecommendSingerWithUserId:(id)arg1;
- (_Bool)updateNotRecommendSinger:(id)arg1 withSingerInfo:(id)arg2;
- (_Bool)deleteAllRecommendSourceMusicWithUserId:(id)arg1;
- (_Bool)deleteRecommendSourceMusic:(id)arg1;
- (_Bool)updateRecommendSourceMusic:(id)arg1;
- (id)querySongsForRecommendSource:(id)arg1 andTime:(double)arg2;
- (void)resetFadeOutParam;
- (void)startFadeOutEffect:(unsigned long long)arg1 completeBlock:(CDUnknownBlockType)arg2;
- (void)startFadeOutEffect:(unsigned long long)arg1;
- (void)clearGuessYourFavorPlayList;
- (void)UserDidLogout:(id)arg1;
- (void)UserDidLogIn:(id)arg1;
- (void)endLoadingPrivateFMAPMWithIndex:(long long)arg1 sequence:(id)arg2;
- (void)middleLoadingPrivateFMAPMWithError:(id)arg1 nodeIndex:(long long)arg2 sequence:(id)arg3 timDic:(id)arg4;
- (id)startLoadingPrivateFMAPMWithSequence;
- (void)generateCacheSongs:(id)arg1;
- (void)handleRadioSongResponseInOtherMode:(id)arg1 andSequence:(id)arg2;
- (void)loadDataFromNetWith:(unsigned long long)arg1;
- (id)obtNeedSongsHashListWithCount:(int)arg1;
- (id)songsWithHash:(id)arg1;
- (void)yuekuStartGuessYouFavorFrom:(unsigned long long)arg1;
- (id)shuffle:(id)arg1;
- (id)makeCustomRadioWithSubPath:(unsigned long long)arg1;
- (id)selectSongsWithHash;
- (void)reportGuessYourFavorActionWithActionType:(unsigned long long)arg1 markList:(id)arg2 userID:(id)arg3 currentSong:(id)arg4 remainUnPlayCount:(long long)arg5 currentSongPlayDuration:(double)arg6 recommendSourceList:(id)arg7 singerId:(id)arg8 andCallBack:(CDUnknownBlockType)arg9;
- (id)reportGuessYourFavorPlayActionWithSongInfo:(id)arg1 hashList:(id)arg2 markList:(id)arg3 userID:(id)arg4 remainUnPlayCount:(long long)arg5 currentSongPlayDuration:(double)arg6 isOverPlay:(_Bool)arg7 error:(id *)arg8;
- (void)reportAndHandleDuplicateSongs:(id)arg1 withUnPlayCount:(long long)arg2;
- (void)reportHistory:(int)arg1;
- (void)startAsyncUploadRemainingHistoryData;
- (id)obtainMyFavorSongsSyn:(id)arg1 andIsAsk:(_Bool)arg2 andIsRestart:(_Bool)arg3 error:(id *)arg4 apmTimeParam:(id *)arg5;
- (void)registerNotifications;
- (void)dealloc;
- (id)init;

@end

