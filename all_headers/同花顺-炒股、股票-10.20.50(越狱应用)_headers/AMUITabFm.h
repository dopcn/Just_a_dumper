//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "AMUIFrameWork.h"

#import "RotateLockViewDelegate-Protocol.h"
#import "UINavigationControllerDelegate-Protocol.h"

@class IndexComptTemplate, NSDate, NSMutableDictionary, NSString, NavigationControllEx, PopDialog, RotateLockView, TabBarControllerEx, UIButton;

@interface AMUITabFm : AMUIFrameWork <UINavigationControllerDelegate, RotateLockViewDelegate>
{
    TabBarControllerEx *_mainTabBar;
    PopDialog *_hqDialog;
    NSMutableDictionary *_multiTitlesModelCache;
    long long _toInterfaceOrientation;
    UIButton *_btnMenu;
    IndexComptTemplate *_indexCompt;
    NSMutableDictionary *_multiTitlesSaveHistory;
    NSDate *_dateForOpenApplication;
    int _queryInternal;
    _Bool _isAllowLand;
    RotateLockView *_rotateLockView;
}

+ (id)shareingUIFramework;
@property(readonly, nonatomic) TabBarControllerEx *mainTabBar; // @synthesize mainTabBar=_mainTabBar;
- (void)refreshSid;
- (void)unionPayResult:(id)arg1 data:(id)arg2;
- (void)startUnionPayResultQuery;
- (void)performQueryUnionPayResult;
- (_Bool)canOpenApplicationWithAppIDAndScheme:(id)arg1 urlScheme:(id)arg2;
- (void)openApplicationWithAppIDAndScheme:(id)arg1 urlScheme:(id)arg2;
- (void)openApplicationWithAppIDAndScheme:(id)arg1 urlScheme:(id)arg2 downUrl:(id)arg3;
- (void)gotoDefPageInNavIndex:(int)arg1 withParams:(id)arg2;
- (void)ClearTipOnTabBar;
- (void)ShowAddSelfStockTipOnTabBar;
- (int)getCurSelectedTabIndex;
- (void)closeMenu;
- (void)doSomethingForMemoryWarning;
- (void)setCurNaviTitleView:(id)arg1;
- (id)getCurNaviLeftBtn;
- (void)setCurNaviRightBtn:(id)arg1;
- (void)setCurNaviLeftBtns:(id)arg1 CurPageId:(int)arg2;
- (void)setCurNaviCustomBackBtn;
- (void)setCurNaviLeftBtns:(id)arg1;
- (void)setCurNaviLeftBtn:(id)arg1 CurPageId:(int)arg2;
- (void)setCurNaviLeftBtn:(id)arg1;
- (void)navigationController:(id)arg1 didShowViewController:(id)arg2 animated:(_Bool)arg3;
- (void)navigationController:(id)arg1 willShowViewController:(id)arg2 animated:(_Bool)arg3;
- (void)closePopPagesWithAnimation:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;
- (void)closePopPagesWithAnimation:(_Bool)arg1;
- (void)closePopPages;
- (void)goBack;
- (void)clickRotateLockBtn;
- (void)dismissNaviLandscapeWithCompletion:(CDUnknownBlockType)arg1;
- (void)changeToLandscapeShow:(_Bool)arg1;
- (void)setAllowLand:(_Bool)arg1;
- (long long)getPagesOrientation;
- (void)changePagesOrientation:(long long)arg1;
- (id)getCurPageScrollableTitlesModel:(int)arg1;
- (void)setCurTitle:(id)arg1 subTitle:(id)arg2;
- (void)setScrollableTitlesWithFocus:(int)arg1 titles:(id)arg2 codes:(id)arg3;
- (int)getCurStackId;
- (void)refreshIndexPage;
- (_Bool)isModalViewController;
- (id)getCurHXBaseViewController;
- (id)getCurPageViewWithoutCreate;
- (id)getCurPage;
- (id)getCurPageView;
- (id)getCurPageInTabBar;
- (id)getPageWithId:(int)arg1 groupId:(int)arg2 pageData:(id)arg3;
- (id)getPageWithId:(int)arg1 groupId:(int)arg2;
- (id)getLockView;
- (id)getIndexCompt;
- (id)getBtnMenu;
- (id)createIndexCompt;
- (_Bool)updateCurPageTitle;
- (void)CloseHqDlg;
- (void)showDlg:(id)arg1 code:(id)arg2;
- (void)showHqDlg:(int)arg1 code:(id)arg2 pageData:(id)arg3;
- (void)showHqDlg:(int)arg1 code:(id)arg2;
- (_Bool)goToPageWithId:(int)arg1 param:(id)arg2 needPop:(_Bool)arg3 needDelete:(_Bool)arg4;
- (void)showLoginDlg;
- (id)getCurStackController;
- (id)getMainView;
@property(readonly, nonatomic) _Bool popIsShowLandscape; // @dynamic popIsShowLandscape;
@property(readonly, nonatomic) _Bool popIsShow; // @dynamic popIsShow;
- (void)dealloc;
- (id)init;
- (void)_createBaseUi;
@property(readonly, nonatomic) NavigationControllEx *popNaviLandscape;
@property(readonly, nonatomic) NavigationControllEx *popNavi;
@property(readonly, retain, nonatomic) RotateLockView *rotateLockView;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

