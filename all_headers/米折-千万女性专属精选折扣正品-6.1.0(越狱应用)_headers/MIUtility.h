//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

@interface MIUtility : NSObject
{
}

+ (id)stringForTimeRelativeForFeed:(id)arg1;
+ (id)timeStringForRefresh:(id)arg1;
+ (id)timeStringForActivity:(id)arg1;
+ (long long)compareWithToday2:(id)arg1;
+ (long long)compareWithToday:(id)arg1;
+ (struct CGSize)attributedStringRect:(id)arg1 contentSize:(struct CGSize)arg2;
+ (id)getAttributedString:(id)arg1 lineSpace:(double)arg2 font:(id)arg3;
+ (id)priceFormatWithSourceContent:(id)arg1 smallFont:(double)arg2 bigFont:(double)arg3 kernSize:(id)arg4;
+ (id)priceValueFormatWithSourceContent:(id)arg1 smallFont:(double)arg2 bigFont:(double)arg3 kernSize:(id)arg4;
+ (void)drawWithString:(id)arg1 inRect:(struct CGRect)arg2 withFont:(id)arg3;
+ (void)drawWithString:(id)arg1 atPoint:(struct CGPoint)arg2 forWidth:(double)arg3 withFont:(id)arg4 lineBreakMode:(long long)arg5;
+ (struct CGSize)sizeOfString:(id)arg1 withFont:(id)arg2 constrainedToSize:(struct CGSize)arg3 lineBreakMode:(long long)arg4;
+ (struct CGSize)sizeOfString:(id)arg1 withFont:(id)arg2 constrainedToSize:(struct CGSize)arg3 lineBreakMode:(long long)arg4 options:(long long)arg5;
+ (struct CGSize)sizeOfString:(id)arg1 withFont:(id)arg2 constrainedToSize:(struct CGSize)arg3;
+ (struct CGSize)sizeOfString:(id)arg1 withFont:(id)arg2;
+ (id)phoneNumWithBlankToNormalNum:(id)arg1;
+ (id)phoneNumFormat:(id)arg1;
+ (id)stringByTrimmingAllWhiteCharacters:(id)arg1;
+ (void)showSimpleHUD:(id)arg1 afterDelay:(double)arg2 view:(id)arg3;
+ (void)showHUD:(id)arg1;
+ (id)imageByScalingAndCroppingForSize:(struct CGSize)arg1 image:(id)arg2 origin:(struct CGPoint)arg3;
+ (long long)commitTranslation:(struct CGPoint)arg1;
+ (id)nativeConvertObjc:(id)arg1 toDict:(id)arg2;
+ (id)convertNativeData2Object:(id)arg1 className:(id)arg2;
+ (void)showPopupTip:(id)arg1;
+ (void)processSimpleCheckCode:(id)arg1 forRequest:(id)arg2;
+ (void)processCheckCode:(id)arg1 forRequest:(id)arg2;
+ (id)sha1:(id)arg1;
+ (_Bool)validatorAlipayAccount:(id)arg1;
+ (_Bool)canWeixinPay;
+ (id)imageByScalingAndCroppingForSize:(struct CGSize)arg1 image:(id)arg2;
+ (_Bool)isOversea:(id)arg1;
+ (void)setLocalNotificationForPay:(unsigned long long)arg1;
+ (id)transformIntToString:(long long)arg1;
+ (void)insertTransparentGradient:(id)arg1 beginColor:(id)arg2 alpha:(double)arg3 rect:(struct CGRect)arg4;
+ (void)insertTransparentGradient:(id)arg1 beginColor:(id)arg2 alpha:(double)arg3 rect:(struct CGRect)arg4 direction:(int)arg5;
+ (void)checkForEmail:(id)arg1 message:(id)arg2 label:(id)arg3;
+ (id)nativeConvertDictionary:(id)arg1 toObject:(id)arg2;
+ (id)nativeConvertDictionary2Object:(id)arg1 className:(id)arg2;
+ (_Bool)isCameraEnable;
+ (void)setPushTag:(id)arg1;
+ (void)setMuyingTag:(id)arg1 key:(id)arg2;
+ (void)setApplicationIconBadgeNumber:(long long)arg1;
+ (_Bool)isNotificationTypeBadgeEnable;
+ (_Bool)isNotificationEnable;
+ (void)checkForEmail:(id)arg1 message:(id)arg2;
+ (long long)calcIntervalWithEndTime:(long long)arg1 andNowTime:(long long)arg2;
+ (long long)getRandomNumber:(long long)arg1 to:(long long)arg2;
+ (void)hideTmallSmartAd:(id)arg1;
+ (void)hideTaobaoSmartAd:(id)arg1;
+ (void)delLocalNotificationByType:(long long)arg1;
+ (void)setLocalNotificationWithType:(long long)arg1 alertBody:(id)arg2 after:(long long)arg3;
+ (void)setLocalNotificationWithType:(long long)arg1 alertBody:(id)arg2 at:(double)arg3;
+ (void)handleBeibeiUrl:(id)arg1;
+ (_Bool)isBeibeiAppExist;
+ (id)trustLoginWithUrl:(id)arg1;
+ (void)clickEventWithLog:(id)arg1 cid:(id)arg2 s:(id)arg3;
+ (_Bool)validatorRange:(struct _NSRange)arg1 text:(id)arg2;
+ (_Bool)validatorTwoFloat:(id)arg1;
+ (_Bool)validatorNumeric:(id)arg1;
+ (_Bool)validatorEmail:(id)arg1;
+ (_Bool)isTbkSclickUrl:(id)arg1;
+ (_Bool)isJhsRebate:(id)arg1;
+ (id)colorWithHexString:(id)arg1;
+ (id)colorWithHex:(long long)arg1 alpha:(double)arg2;
+ (id)colorWithHex:(long long)arg1;
+ (id)numDeRounding:(float)arg1 afterPoint:(long long)arg2;
+ (id)base64StringFromText:(id)arg1;
+ (id)decryptUseDES:(id)arg1;
+ (id)encryptUseDES:(id)arg1;
+ (id)convertDisctionary2Object:(id)arg1 className:(id)arg2;
+ (id)getSignWithDictionary:(id)arg1;
+ (id)queryStringWithSignature:(id)arg1 opSecretKey:(id)arg2 valueLenLimit:(long long)arg3;
+ (id)getNetwork;
+ (id)getCarrier;
+ (id)getIdfvString;
+ (id)getIdfaString;
+ (id)getMacAddress;
+ (void)deleteCookies:(id)arg1;
+ (id)parseURLParams:(id)arg1;
+ (id)getParamValueFromUrl:(id)arg1 paramName:(id)arg2;
+ (id)getNumiidFromUrl:(id)arg1;
+ (id)serializeURL:(id)arg1 params:(id)arg2 httpMethod:(id)arg3;
+ (_Bool)isDeviceIPad;
+ (_Bool)isScannableURLString:(id)arg1;
+ (_Bool)isWebURL:(id)arg1;
+ (_Bool)isAppURL:(id)arg1;
+ (_Bool)isExternalURL:(id)arg1;

@end

