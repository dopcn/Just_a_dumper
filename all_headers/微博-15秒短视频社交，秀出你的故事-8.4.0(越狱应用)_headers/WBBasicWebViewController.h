//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "WBViewController.h"

#import "MKMapViewDelegate-Protocol.h"
#import "WBJSBridgeDebugDelegate-Protocol.h"
#import "WBWBDownloadURLSessionDelegate-Protocol.h"
#import "WBWebViewDelegate-Protocol.h"

@class MKMapView, NSArray, NSMutableArray, NSMutableDictionary, NSString, NSURL, NSURLRequest, UIBarButtonItem, WBAlipayWebViewJavascriptBridge, WBCustomActionSheet, WBCustomActionSheetItem, WBWebDocumentSession, WBWebView, WBWebViewConsole, WBWebViewJSBridge, WBWebViewObjectHeaderView, WBWebViewURLActionManager, WBWebViewUserSettings;

@interface WBBasicWebViewController : WBViewController <WBWBDownloadURLSessionDelegate, WBJSBridgeDebugDelegate, MKMapViewDelegate, WBWebViewDelegate>
{
    struct {
        unsigned int firstRequestHasFinished:1;
        unsigned int needsUpdateControls:1;
    } _flags;
    _Bool _supportsPortraitOnly;
    _Bool _needDefaultSkin;
    _Bool _needHideBar;
    _Bool _disableInterception;
    _Bool _inputElementDismissFlag;
    WBWebViewObjectHeaderView *_objectHeaderView;
    unsigned long long _browserMode;
    WBWebView *_webView;
    NSURLRequest *_requestLoadsWhenViewDidAppear;
    unsigned long long _LandscapeLockingIndex;
    NSURL *_originalRequestURL;
    NSString *_fixedNavigationItemTitle;
    WBWebViewUserSettings *_settings;
    NSString *_HTMLString;
    NSURL *_HTMLBaseURL;
    NSURLRequest *_request;
    NSMutableDictionary *_parameters;
    NSMutableDictionary *_extraOriginalURLParameters;
    NSMutableDictionary *_extraSinaURLParameters;
    WBWebViewJSBridge *_JSBridge;
    WBWebViewURLActionManager *_urlActionManager;
    NSString *_titleForViewDidAppear;
    NSMutableArray *_viewDidAppearCallbacks;
    WBAlipayWebViewJavascriptBridge *_alipayJSBridge;
    MKMapView *_mapView;
    NSArray *_disabledGestureRecognizersDuringPan;
    NSMutableDictionary *_logs;
    NSMutableDictionary *_timeStampLogs;
    WBWebDocumentSession *_documentSession;
    WBWebViewConsole *_debugConsole;
}

+ (unsigned long long)aliveBrowserCount;
+ (void)browserDidClose;
+ (void)browserDidOpen;
+ (id)updatingURLs;
+ (_Bool)_hasUpdateServerGraphObjectThisSessionForURL:(id)arg1;
+ (void)_enqueueUpdatedServerGraphObjectURL:(id)arg1;
+ (id)classNameWillCreateWithOpenUrlLink:(id)arg1 inAppParas:(id)arg2;
+ (Class)openurlBrowserClassWithURL:(id)arg1 inAppParas:(id)arg2;
+ (void)setObjectReaderDebugingEnabled:(_Bool)arg1;
+ (_Bool)objectReaderDebugingEnabled;
+ (void)setWebDebugingEnabled:(_Bool)arg1;
+ (_Bool)webDebugingEnabled;
@property(retain, nonatomic) WBWebViewConsole *debugConsole; // @synthesize debugConsole=_debugConsole;
@property(retain, nonatomic) WBWebDocumentSession *documentSession; // @synthesize documentSession=_documentSession;
@property(nonatomic) _Bool inputElementDismissFlag; // @synthesize inputElementDismissFlag=_inputElementDismissFlag;
@property(retain, nonatomic) NSMutableDictionary *timeStampLogs; // @synthesize timeStampLogs=_timeStampLogs;
@property(retain, nonatomic) NSMutableDictionary *logs; // @synthesize logs=_logs;
@property(retain, nonatomic) NSArray *disabledGestureRecognizersDuringPan; // @synthesize disabledGestureRecognizersDuringPan=_disabledGestureRecognizersDuringPan;
@property(retain, nonatomic) MKMapView *mapView; // @synthesize mapView=_mapView;
@property(retain, nonatomic) WBAlipayWebViewJavascriptBridge *alipayJSBridge; // @synthesize alipayJSBridge=_alipayJSBridge;
@property(retain, nonatomic) NSMutableArray *viewDidAppearCallbacks; // @synthesize viewDidAppearCallbacks=_viewDidAppearCallbacks;
@property(retain, nonatomic) NSString *titleForViewDidAppear; // @synthesize titleForViewDidAppear=_titleForViewDidAppear;
@property(retain, nonatomic) WBWebViewURLActionManager *urlActionManager; // @synthesize urlActionManager=_urlActionManager;
@property(retain, nonatomic) WBWebViewJSBridge *JSBridge; // @synthesize JSBridge=_JSBridge;
@property(retain, nonatomic) NSMutableDictionary *extraSinaURLParameters; // @synthesize extraSinaURLParameters=_extraSinaURLParameters;
@property(retain, nonatomic) NSMutableDictionary *extraOriginalURLParameters; // @synthesize extraOriginalURLParameters=_extraOriginalURLParameters;
@property(retain, nonatomic) NSMutableDictionary *parameters; // @synthesize parameters=_parameters;
@property(retain, nonatomic) NSURLRequest *request; // @synthesize request=_request;
@property(retain, nonatomic) NSURL *HTMLBaseURL; // @synthesize HTMLBaseURL=_HTMLBaseURL;
@property(retain, nonatomic) NSString *HTMLString; // @synthesize HTMLString=_HTMLString;
@property(retain, nonatomic) WBWebViewUserSettings *settings; // @synthesize settings=_settings;
@property(nonatomic) _Bool disableInterception; // @synthesize disableInterception=_disableInterception;
@property(nonatomic) _Bool needHideBar; // @synthesize needHideBar=_needHideBar;
@property(retain, nonatomic) NSString *fixedNavigationItemTitle; // @synthesize fixedNavigationItemTitle=_fixedNavigationItemTitle;
@property(nonatomic) _Bool needDefaultSkin; // @synthesize needDefaultSkin=_needDefaultSkin;
@property(retain, nonatomic) NSURL *originalRequestURL; // @synthesize originalRequestURL=_originalRequestURL;
@property(nonatomic) unsigned long long LandscapeLockingIndex; // @synthesize LandscapeLockingIndex=_LandscapeLockingIndex;
@property(nonatomic) _Bool supportsPortraitOnly; // @synthesize supportsPortraitOnly=_supportsPortraitOnly;
@property(retain, nonatomic) NSURLRequest *requestLoadsWhenViewDidAppear; // @synthesize requestLoadsWhenViewDidAppear=_requestLoadsWhenViewDidAppear;
@property(retain, nonatomic) WBWebView *webView; // @synthesize webView=_webView;
@property(nonatomic) unsigned long long browserMode; // @synthesize browserMode=_browserMode;
@property(retain, nonatomic) WBWebViewObjectHeaderView *objectHeaderView; // @synthesize objectHeaderView=_objectHeaderView;
- (void).cxx_destruct;
- (void)historyItemChangedNotification:(id)arg1;
- (_Bool)needsTitleBarWhenPeeking;
- (void)addExtraLogs:(id)arg1;
- (void)addTimeStampsLogsIfAbsent:(id)arg1;
- (void)addTimeStampsLogs:(id)arg1;
- (void)addTimeStampsLogForAction:(id)arg1;
- (_Bool)logEnabled;
- (id)logType;
- (void)saveLogsIfNeed;
- (void)setupDocumentSessionBindings;
- (void)beginNewDocumentSession;
- (_Bool)backForwardNavigationGesturesEnabled;
@property(readonly, nonatomic) _Bool allowsBackForwardNavigationGestures;
- (void)panNavigationDidFinish:(id)arg1 willPop:(_Bool)arg2;
- (void)panNavigationDidBegin:(id)arg1;
- (_Bool)panNavigationShouldBegin:(id)arg1;
- (_Bool)panNavigationSimultaneouslyWithGestureRecognizer:(id)arg1;
- (_Bool)panToNavigation;
- (id)mapView:(id)arg1 viewForAnnotation:(id)arg2;
- (id)type;
- (void)hideMapView;
- (void)showMapViewWithCoordinate:(struct CLLocationCoordinate2D)arg1;
@property(readonly, nonatomic) _Bool showingMapView;
- (void)applicationDidChangeStatusBarOrientationNotification:(id)arg1;
- (void)applicationWillChangeStatusBarFrameNotification:(id)arg1;
- (void)wb_webView:(id)arg1 didCreateDocumentElementForFrame:(id)arg2;
- (void)wb_webView:(id)arg1 didReceiveTitle:(id)arg2;
- (void)wb_webView:(id)arg1 didFailLoadWithError:(id)arg2;
- (void)wb_webViewDidFinishLoad:(id)arg1;
- (void)wb_webViewDidStartLoad:(id)arg1;
- (_Bool)wb_webView:(id)arg1 shouldStartLoadWithRequest:(id)arg2 navigationType:(long long)arg3;
- (void)wb_webView:(id)arg1 didPressErrorViewReloadButton:(id)arg2;
- (void)layoutViews;
- (void)updateNavigationBarBackground;
- (void)didRotateFromInterfaceOrientation:(long long)arg1;
- (unsigned long long)supportedInterfaceOrientations;
- (_Bool)shouldAutorotateToInterfaceOrientation:(long long)arg1;
- (void)forceToOrientation:(long long)arg1;
- (id)_actionSheetForMoreMenu;
- (_Bool)_shouldShowMoreMenu;
- (void)dismiss;
- (void)_dismissAnimated:(_Bool)arg1;
- (void)dismissAnimated:(_Bool)arg1;
- (_Bool)shouldDismissWithCallerController:(id)arg1;
- (void)replaceRequestWithURLString:(id)arg1;
- (void)replaceRequest:(id)arg1;
- (void)_replaceRequest:(id)arg1;
- (id)makeRequestWithURL:(id)arg1 redirectsThroughSinaURL:(_Bool)arg2 extraSinaURLParams:(id)arg3;
- (id)makeRequest;
- (void)startWebViewRequest;
@property(readonly, nonatomic) _Bool loading;
- (void)reload;
- (void)goForward;
- (void)goBack;
- (void)updateControls;
- (void)setNeedsUpdateControls;
@property(readonly, nonatomic) _Bool canReload;
@property(readonly, nonatomic) _Bool canGoForward;
@property(readonly, nonatomic) _Bool canGoBack;
- (void)updateNavigationBar;
- (void)updateRightBarButtonItems;
- (void)updateLeftBarButtonItems;
- (id)navigationItemTitle;
- (void)setNavigationItemTitle:(id)arg1;
- (void)updateNavigationItemTitle;
- (void)onViewDidAppear:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) _Bool disablesSinaURL;
@property(readonly, nonatomic) _Bool displaysLoadingProgressBar;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (id)initWithFileURL:(id)arg1;
- (id)initWithHTMLString:(id)arg1 baseURL:(id)arg2;
- (id)initWithURL:(id)arg1 parameters:(id)arg2;
- (id)initWithURL:(id)arg1;
- (id)initWithURLString:(id)arg1;
- (id)init;
- (void)dealloc;
- (void)analysisForWebViewDidFinishedLoading:(id)arg1;
- (void)analysisForWebViewDidStartLoading:(id)arg1;
- (void)updateServerGraphObject:(id)arg1 expectedURL:(id)arg2;
- (void)updateGraphObjectWithExpectedURL:(id)arg1;
- (void)shareActionCallBack;
- (void)showMenuWithSelectionCallback:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) WBCustomActionSheet *internalPageMenuActionSheet;
@property(readonly, nonatomic) WBCustomActionSheet *answerMenuActionSheet;
@property(readonly, nonatomic) WBCustomActionSheet *defaultMenuActionSheet;
- (void)textSizeHeaderViewDidChangeValue:(id)arg1;
- (void)showTextSizeSettingsActionSheet;
@property(readonly, nonatomic) WBCustomActionSheetItem *moreMenuTextSizeSettingsItem;
@property(readonly, nonatomic) _Bool moreMenuActionSheetItemNeedsIcon;
@property(readonly, nonatomic) WBCustomActionSheet *currentPageSpecificActionSheet;
- (id)generateWithOpenUrlLink:(id)arg1 inAppParas:(struct NSMutableDictionary *)arg2;
- (id)openurlParameterForKey:(id)arg1;
- (id)forceEjectMeType:(id)arg1;
@property(readonly, nonatomic) NSString *openurlExtractFinalURL;
- (id)derivedSinaURLTypeWithURL:(id)arg1;
- (id)invalidSinaURLParameters;
- (id)invalidOriginalURLParameters;
- (id)derivedSinaURLParameters;
- (id)derivedOriginalURLParameters;
@property(readonly, nonatomic) NSString *shareableURL;
@property(readonly, nonatomic) NSString *shortURL;
- (void)ajaxRequestWithURL:(id)arg1;
- (id)replaceStringInString:(id)arg1 boundaryString:(id)arg2 replace:(id)arg3;
- (id)getMiddleStringInString:(id)arg1 boundaryString:(id)arg2;
- (id)diposeAjaxURL:(id)arg1 andHtmlURL:(id)arg2;
- (id)ajaxURL;
- (void)setAjaxURL:(id)arg1;
- (id)htmlURL;
- (void)setHtmlURL:(id)arg1;
- (id)bizID;
- (void)setBizID:(id)arg1;
- (void)refreshSpeedUPInfo;
- (void)removeDownloadSession;
- (void)wb_wbDownloadURLSession:(id)arg1 didCompleteWithError:(id)arg2;
- (void)wb_wbDownloadURLSession:(id)arg1 didFinishDownloadingToURL:(id)arg2;
- (_Bool)wb_wbDownloadURLSession:(id)arg1 shouldStartDownloadingWithReceivedResponse:(id)arg2;
- (void)speedUpWithURL:(id)arg1;
- (void)jsbridge:(id)arg1 didTriggerObserver:(id)arg2 params:(id)arg3;
- (void)jsbridge:(id)arg1 didFinishUnregisteringObserver:(id)arg2 status:(long long)arg3;
- (void)jsbridge:(id)arg1 willFinishRegisteringObserver:(id)arg2 status:(long long)arg3;
- (void)jsbridge:(id)arg1 didFinishAction:(id)arg2 withResult:(id)arg3 status:(long long)arg4;
- (void)jsbridge:(id)arg1 willStartAction:(id)arg2;
- (id)jsbridge_statusNameForStatus:(long long)arg1;
- (void)debugConsoleDidAddMessage:(id)arg1;
- (void)webDebugInspectCurrentSelectedElement:(id)arg1;
- (void)webDebugRemoveContextMenuItems;
- (void)webDebugAddContextMenuItems;
- (void)webDebugScriptErrorButtonItemPressed:(id)arg1;
@property(readonly, nonatomic) UIBarButtonItem *webDebugScriptErrorButtonItem;
- (id)webDebugActionSheetItem;
- (void)presentDebugConsoleWithInitialCommand:(id)arg1;
- (void)webDebugLogLoadFailedWithError:(id)arg1;
- (void)webDebugLogInfo:(id)arg1;
- (void)webDebugLogOpenURLGenerating:(id)arg1;
- (void)webDebugLogProvisionalNavigation:(id)arg1 navigationType:(long long)arg2 result:(_Bool)arg3;
- (id)callerWithNavigationType:(long long)arg1;
- (void)webDebugLogWithJSBridgeMessage:(id)arg1;
- (void)setupWebDebuging;
- (void)initWebDebuging;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

