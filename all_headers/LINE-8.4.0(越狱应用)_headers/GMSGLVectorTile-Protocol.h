//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "GMSGLTile-Protocol.h"

@class NSArray;

@protocol GMSGLVectorTile <GMSGLTile>
@property(readonly, nonatomic) const struct IndoorID *indoorID;
@property(readonly, nonatomic) _Bool hasPendingDiffTiles;
@property(readonly, nonatomic) NSArray *indoorBounds;
@property(nonatomic) float verticalOffset;
- (void)setFadeState:(int)arg1;
- (float)worldUnitsFromMeters:(float)arg1;
-     // Error parsing type: v60@0:8^{EntityRenderer=^^?{vector<gmscore::base::reffed_ptr<gmscore::renderer::BaseEntity>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::renderer::BaseEntity> > >=^{reffed_ptr<gmscore::renderer::BaseEntity>}^{reffed_ptr<gmscore::renderer::BaseEntity>}{__compressed_pair<gmscore::base::reffed_ptr<gmscore::renderer::BaseEntity> *, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::renderer::BaseEntity> > >=^{reffed_ptr<gmscore::renderer::BaseEntity>}}}{GMSx_Mutex={_opaque_pthread_mutex_t=q[56c]}BB}{vector<gmscore::renderer::EntityRenderer::PendingOp, std::__1::allocator<gmscore::renderer::EntityRenderer::PendingOp> >=^{PendingOp}^{PendingOp}{__compressed_pair<gmscore::renderer::EntityRenderer::PendingOp *, std::__1::allocator<gmscore::renderer::EntityRenderer::PendingOp> >=^{PendingOp}}}{list<gmscore::base::reffed_ptr<gmscore::renderer::Behavior>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::renderer::Behavior> > >={__list_node_base<gmscore::base::reffed_ptr<gmscore::renderer::Behavior>, void *>=^{__list_node_base<gmscore::base::reffed_ptr<gmscore::renderer::Behavior>, void *>}^{__list_node_base<gmscore::base::reffed_ptr<gmscore::renderer::Behavior>, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<gmscore::base::reffed_ptr<gmscore::renderer::Behavior>, void *> > >=Q}}{set<gmscore::base::reffed_ptr<gmscore::renderer::RenderTarget>, std::__1::less<gmscore::base::reffed_ptr<gmscore::renderer::RenderTarget> >, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::renderer::RenderTarget> > >={__tree<gmscore::base::reffed_ptr<gmscore::renderer::RenderTarget>, std::__1::less<gmscore::base::reffed_ptr<gmscore::renderer::RenderTarget> >, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::renderer::RenderTarget> > >=^{__tree_node<gmscore::base::reffed_ptr<gmscore::renderer::RenderTarget>, void *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<gmscore::base::reffed_ptr<gmscore::renderer::RenderTarget>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<gmscore::base::reffed_ptr<gmscore::renderer::RenderTarget> > >=Q}}}{set<gmscore::base::reffed_ptr<gmscore::renderer::Camera3D>, std::__1::less<gmscore::base::reffed_ptr<gmscore::renderer::Camera3D> >, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::renderer::Camera3D> > >={__tree<gmscore::base::reffed_ptr<gmscore::renderer::Camera3D>, std::__1::less<gmscore::base::reffed_ptr<gmscore::renderer::Camera3D> >, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::renderer::Camera3D> > >=^{__tree_node<gmscore::base::reffed_ptr<gmscore::renderer::Camera3D>, void *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<gmscore::base::reffed_ptr<gmscore::renderer::Camera3D>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<gmscore::base::reffed_ptr<gmscore::renderer::Camera3D> > >=Q}}}{map<const char *, gmscore::renderer::RenderBin *, std::__1::less<const char *>, std::__1::allocator<std::__1::pair<const char *const, gmscore::renderer::RenderBin *> > >={__tree<std::__1::__value_type<const char *, gmscore::renderer::RenderBin *>, std::__1::__map_value_compare<const char *, std::__1::__value_type<const char *, gmscore::renderer::RenderBin *>, std::__1::less<const char *>, true>, std::__1::allocator<std::__1::__value_type<const char *, gmscore::renderer::RenderBin *> > >=^{__tree_node<std::__1::__value_type<const char *, gmscore::renderer::RenderBin *>, void *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<const char *, gmscore::renderer::RenderBin *>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<const char *, std::__1::__value_type<const char *, gmscore::renderer::RenderBin *>, std::__1::less<const char *>, true> >=Q}}}{vector<gmscore::renderer::RenderBin *, std::__1::allocator<gmscore::renderer::RenderBin *> >=^^{RenderBin}^^{RenderBin}{__compressed_pair<gmscore::renderer::RenderBin **, std::__1::allocator<gmscore::renderer::RenderBin *> >=^^{RenderBin}}}[13{reffed_ptr<gmscore::renderer::EntityState>=^{EntityState}}]^{GMSx_Time}BB{FPSCounter=ddi}I{reffed_ptr<gmscore::renderer::Behavior>=^{Behavior}}{vector<gmscore::renderer::EntityRenderer::PendingOp, std::__1::allocator<gmscore::renderer::EntityRenderer::PendingOp> >=^{PendingOp}^{PendingOp}{__compressed_pair<gmscore::renderer::EntityRenderer::PendingOp *, std::__1::allocator<gmscore::renderer::EntityRenderer::PendingOp> >=^{PendingOp}}}}16^{Behavior=^^?{atomic<int>=Ai}*iI}24@"GMSGLTileResources"32f40I44r^{IndoorID=QQQB}48B56, name: updateRenderer:behavior:tileResources:cameraZoom:performanceMode:focusedIndoorLevelID:navigating:
@end

