//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "CDZDelegatesObject.h"

#import "CDZRequestPoolDelegate-Protocol.h"

@class CDZRequestPool, NSArray, NSMutableArray, NSMutableDictionary, NSNumber, NSString, NSTimer, VBVBox, VBVBoxState;
@protocol LingLongSDKBaseInfoDelegate;

@interface VBVBoxManager : CDZDelegatesObject <CDZRequestPoolDelegate>
{
    NSMutableDictionary *_configDic;
    double _totalTime;
    double _leftTime;
    double _setLeftTimeTime;
    NSTimer *_timingTimer;
    struct _opaque_pthread_mutex_t _syncLock;
    _Bool _forbidUpdateState;
    NSMutableArray *_powerArr;
    CDZRequestPool *_requestPool;
    VBVBox *_vbox;
    VBVBoxState *_vboxState;
    _Bool _isVBoxOnline;
    _Bool _isTFCardInserted;
    _Bool _forbiddenMobileVolumeSync;
    _Bool _ignoreNextVolumeChange;
    id <LingLongSDKBaseInfoDelegate> _baseInfo;
    NSNumber *_isBindMedi;
    NSArray *_miBandArray;
    long long _TFCardSongsCount;
    double _batteryRate;
}

@property(nonatomic) _Bool ignoreNextVolumeChange; // @synthesize ignoreNextVolumeChange=_ignoreNextVolumeChange;
@property(nonatomic) _Bool forbiddenMobileVolumeSync; // @synthesize forbiddenMobileVolumeSync=_forbiddenMobileVolumeSync;
@property(readonly, nonatomic) double batteryRate; // @synthesize batteryRate=_batteryRate;
@property(readonly, nonatomic) long long TFCardSongsCount; // @synthesize TFCardSongsCount=_TFCardSongsCount;
@property(retain, nonatomic) NSArray *miBandArray; // @synthesize miBandArray=_miBandArray;
@property(retain, nonatomic) NSNumber *isBindMedi; // @synthesize isBindMedi=_isBindMedi;
@property(readonly, nonatomic) _Bool isTFCardInserted; // @synthesize isTFCardInserted=_isTFCardInserted;
@property(readonly, nonatomic) _Bool isVBoxOnline; // @synthesize isVBoxOnline=_isVBoxOnline;
@property(nonatomic) __weak id <LingLongSDKBaseInfoDelegate> baseInfo; // @synthesize baseInfo=_baseInfo;
- (void).cxx_destruct;
- (void)setVboxState:(id)arg1;
@property(readonly) VBVBoxState *vboxState;
- (void)setVbox:(id)arg1;
@property(readonly) VBVBox *vbox;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)resetVboxInfo;
- (void)getVboxInitInfo;
- (long long)convertedPowerPercent:(long long)arg1;
- (void)handleBindSuccessMsgOfBox:(id)arg1 userId:(id)arg2;
- (void)handleVBoxResponse:(id)arg1 fromVbox:(id)arg2 toUser:(id)arg3;
- (void)requestPool:(id)arg1 timoutWithRequest:(id)arg2;
- (void)socketVBoxGetOffline:(id)arg1;
- (void)socketVBoxGetOnline:(id)arg1;
- (void)socketReceiveLocalData:(id)arg1 fromVbox:(id)arg2 toUser:(id)arg3;
- (void)socketReceiveCloudData:(id)arg1 fromVbox:(id)arg2 toUser:(id)arg3;
- (void)socketReceiveLocalBindSuceessOfBox:(id)arg1;
- (void)socketDisconnect;
- (void)socketConnectIp:(id)arg1 port:(unsigned short)arg2 error:(id)arg3;
- (void)getBindedVBoxStatus;
- (void)getVBoxsOnline:(id)arg1;
- (void)getVBoxOnline:(id)arg1;
- (void)setBoxStateSleep:(_Bool)arg1;
- (void)setIsVBoxOnline:(id)arg1 isVboxOnline:(_Bool)arg2;
- (void)setBoxVolume:(long long)arg1;
- (void)beginUPdateState;
- (void)forbidUpdateStateWithTime:(double)arg1;
- (void)updateVboxCache;
- (void)autoBind;
- (void)resetVbox:(id)arg1;
- (void)unbindVbox:(_Bool)arg1;
- (void)bindVbox:(id)arg1;
- (void)sendRequest:(id)arg1;
- (id)isBindMiBand;
- (void)dealloc;
- (id)init;
- (void)connectWifi:(id)arg1 password:(id)arg2;
- (void)clearData;
- (void)checkTFCardWithCompletion:(CDUnknownBlockType)arg1;
- (void)volumeSet:(long long)arg1;
- (void)queryDstConnState:(id)arg1;
- (void)stopGetVBoxState;
- (void)startGetVBoxState;
- (void)setBoxSetting:(id)arg1 value:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)getBoxSettings:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)getWakeWords;
- (void)getVboxInfoWithCompletion:(CDUnknownBlockType)arg1;
- (void)getVboxInfo;
- (void)setSleep:(_Bool)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

