//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <UIKit/UIView.h>

#import "UIScrollViewDelegate-Protocol.h"

@class KWPPDisplayExitSlideView, KWPPDisplayInkTraceDisplayControlView, KWPPDisplaySlideView, NSString, PromptLineView, UIPinchGestureRecognizer, UIScrollView, WPSWatermarkView;
@protocol KWPPDisplayViewControllerDelegate;

@interface KWPPDisplaySlideShowView : UIView <UIScrollViewDelegate>
{
    _Bool _isPinchFromMin;
    _Bool _isPinchToMin;
    double _velocityXAtPanGestureRecognizer;
    double _velocityYAtPanGestureRecognizer;
    struct CGRect _mediaRelationRect;
    PromptLineView *_promptLineView;
    KWPPDisplaySlideView *_slideView;
    KWPPDisplayExitSlideView *_exitSlideView;
    KWPPDisplayInkTraceDisplayControlView *_inkTraceDisplayControlView;
    UIScrollView *_scrollView;
    UIView *_slideShowView;
    id <KWPPDisplayViewControllerDelegate> _delegate;
    UIPinchGestureRecognizer *_pinchGestureRecognizer;
    UIView *_mediaShowView;
    UIView *_mediaView;
    WPSWatermarkView *_watermarkView;
}

@property(retain, nonatomic) WPSWatermarkView *watermarkView; // @synthesize watermarkView=_watermarkView;
@property(nonatomic) __weak UIView *mediaView; // @synthesize mediaView=_mediaView;
@property(retain, nonatomic) UIView *mediaShowView; // @synthesize mediaShowView=_mediaShowView;
@property(retain, nonatomic) UIPinchGestureRecognizer *pinchGestureRecognizer; // @synthesize pinchGestureRecognizer=_pinchGestureRecognizer;
@property(nonatomic) __weak id <KWPPDisplayViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) UIView *slideShowView; // @synthesize slideShowView=_slideShowView;
@property(retain, nonatomic) UIScrollView *scrollView; // @synthesize scrollView=_scrollView;
@property(retain, nonatomic) KWPPDisplayInkTraceDisplayControlView *inkTraceDisplayControlView; // @synthesize inkTraceDisplayControlView=_inkTraceDisplayControlView;
@property(retain, nonatomic) KWPPDisplayExitSlideView *exitSlideView; // @synthesize exitSlideView=_exitSlideView;
@property(retain, nonatomic) KWPPDisplaySlideView *slideView; // @synthesize slideView=_slideView;
- (void).cxx_destruct;
- (void)showRequestErrorViewWithWarning:(id)arg1;
- (void)hideUnsupportedBackgroundSoundMedia:(id)arg1;
- (void)showUnsupportedBackgroundSoundMedia:(id)arg1;
- (void)removeInkTraceDisplayControlView;
- (void)showInkTraceDisplayControlView;
- (void)removeMediaShowView;
- (struct CGRect)mediaShowViewFrame;
- (void)mediaStartRun;
- (void)showMediaWithMediaView:(id)arg1 withRelativeFrame:(struct CGRect)arg2;
- (void)swipeRightGestureEvent:(id)arg1;
- (void)swipeLeftGestureEvent:(id)arg1;
- (void)swipeDownGestureEvent:(id)arg1;
- (void)swipeUpGestureEvent:(id)arg1;
- (void)panGestureEvent:(id)arg1;
- (void)pinchGestureEvent:(id)arg1;
- (void)oneFingerOneTapGestureEvent:(id)arg1;
- (void)removePinchGestureRecognizer;
- (void)addPinchGestureRecognizer;
- (void)removeGestureRecognizers;
- (void)addGestureRecognizers;
- (id)viewForZoomingInScrollView:(id)arg1;
- (void)scrollViewDidEndZooming:(id)arg1 withView:(id)arg2 atScale:(double)arg3;
- (void)scrollViewWillBeginZooming:(id)arg1 withView:(id)arg2;
- (void)scrollViewDidZoom:(id)arg1;
- (void)scrollViewDidScroll:(id)arg1;
- (id)slideImage;
- (id)exitSlideImage;
- (void)hideExitSlideView;
- (void)showExitSlideView;
- (struct CGRect)exitSlideViewFrame;
- (void)initExitSliseView;
- (struct CGRect)displaySlideViewFrame;
- (_Bool)isWatermarkNeedToShow;
- (void)initSlideView;
- (void)initSlideShowView;
- (void)setScrollViewEnabled:(_Bool)arg1;
- (void)resetScrollView;
- (void)setScrollViewMaxZoomScale:(double)arg1;
- (void)initScrollView;
- (void)setFrame:(struct CGRect)arg1;
- (void)clear;
- (id)initWithFrame:(struct CGRect)arg1 withDelegate:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

