//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <UIKit/UIViewController.h>

#import "UCBarrageViewControllerDelegate-Protocol.h"
#import "UCMoviePlayerControllerDelegate-Protocol.h"
#import "UCMoviePlayerSource-Protocol.h"
#import "UCMoviePlayerToolControllerDelegate-Protocol.h"
#import "UCMovieTopTipsViewDelegate-Protocol.h"

@class MPVolumeView, NSError, NSString, NSURL, UCBarrageViewController, UCMoviePlayerGestureController, UCMoviePlayerToolController, UCMovieTopTipsView, UCVideoDurationCountDownView, UIImage, UIView;
@protocol UCMoviePlayerControllerInterface, UCMoviePlayerViewControllerDelegate;

@interface UCMoviePlayerViewController : UIViewController <UCMoviePlayerControllerDelegate, UCMoviePlayerToolControllerDelegate, UCMovieTopTipsViewDelegate, UCMoviePlayerSource, UCBarrageViewControllerDelegate>
{
    UCMoviePlayerToolController *m_moviePlayerToolCtrl;
    UCMoviePlayerGestureController *m_gestureController;
    UCBarrageViewController *m_barrageViewController;
    _Bool m_statusbarHidden;
    long long m_statusbarStyle;
    _Bool m_autoPlay;
    double m_startPlayTime;
    _Bool m_isFirstLoading;
    double m_firstLoadTime;
    double m_loadingTime;
    _Bool m_isSecondLoading;
    _Bool m_isPlayingExist;
    _Bool m_isArrivedT0;
    _Bool m_isShowDefinitionTips;
    _Bool m_canShowDefinitionTips;
    _Bool m_checkingSecondLodingTime;
    double m_lastSecondLoadingLimitTime;
    double m_maxSecondLoadingInterval;
    NSString *m_lastPlayingPageURL;
    NSString *m_lastPlayingTitle;
    NSString *m_lastPlayingVideoURL;
    MPVolumeView *m_volumeView;
    _Bool m_isT2;
    _Bool m_offlineBarrageSwitch;
    _Bool m_onlineBarrageSwitch;
    double m_timestampOfLastTimeupdateMsg;
    unsigned long long m_T2Times;
    double m_cachePlayTime;
    _Bool m_hideSystemVolumePopup;
    _Bool _isShowPosterImage;
    _Bool _hideTool;
    _Bool _isMute;
    _Bool _isShowCountDown;
    _Bool _enableBackStyle;
    _Bool _hidePlayButtonForPlugin;
    _Bool _isShowingAlertView;
    _Bool _statusBarHidden;
    UIViewController<UCMoviePlayerControllerInterface> *m_moviePlayer;
    id <UCMoviePlayerViewControllerDelegate> _delegate;
    NSString *_posterUrl;
    long long _statusBarStyle;
    long long _statusBarAnimation;
    NSURL *_interruptedURL;
    UCMovieTopTipsView *_topTipsView;
    UCVideoDurationCountDownView *_countDownView;
    NSURL *_stalledNetContentURL;
    double _actualStartTime;
    double _actualPlayTime;
}

@property(nonatomic) double actualPlayTime; // @synthesize actualPlayTime=_actualPlayTime;
@property(nonatomic) double actualStartTime; // @synthesize actualStartTime=_actualStartTime;
@property(retain, nonatomic) NSURL *stalledNetContentURL; // @synthesize stalledNetContentURL=_stalledNetContentURL;
@property(retain, nonatomic) UCVideoDurationCountDownView *countDownView; // @synthesize countDownView=_countDownView;
@property(retain, nonatomic) UCMovieTopTipsView *topTipsView; // @synthesize topTipsView=_topTipsView;
@property(retain, nonatomic) NSURL *interruptedURL; // @synthesize interruptedURL=_interruptedURL;
@property(nonatomic) long long statusBarAnimation; // @synthesize statusBarAnimation=_statusBarAnimation;
@property(nonatomic) long long statusBarStyle; // @synthesize statusBarStyle=_statusBarStyle;
@property(nonatomic) _Bool statusBarHidden; // @synthesize statusBarHidden=_statusBarHidden;
@property(nonatomic) _Bool isShowingAlertView; // @synthesize isShowingAlertView=_isShowingAlertView;
@property(nonatomic) _Bool hidePlayButtonForPlugin; // @synthesize hidePlayButtonForPlugin=_hidePlayButtonForPlugin;
@property(nonatomic) _Bool enableBackStyle; // @synthesize enableBackStyle=_enableBackStyle;
@property(copy, nonatomic) NSString *posterUrl; // @synthesize posterUrl=_posterUrl;
@property(nonatomic) _Bool isShowCountDown; // @synthesize isShowCountDown=_isShowCountDown;
@property(nonatomic) _Bool isMute; // @synthesize isMute=_isMute;
@property(nonatomic) _Bool hideTool; // @synthesize hideTool=_hideTool;
@property(nonatomic) _Bool isShowPosterImage; // @synthesize isShowPosterImage=_isShowPosterImage;
@property(nonatomic) id <UCMoviePlayerViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, nonatomic) _Bool isPlayingExist; // @synthesize isPlayingExist=m_isPlayingExist;
- (_Bool)canRequestPhotoTao:(id)arg1;
- (void)shareRequestPhotoTao;
- (void)resetActualStartTime;
- (void)updateActualPlayTime;
- (void)applicationWillTerminate:(id)arg1;
- (void)applicationDidEnterBackground:(id)arg1;
- (void)showPlayButton:(_Bool)arg1;
- (void)showTools:(_Bool)arg1;
- (void)cacheVideoPlayTime;
- (void)resetVideoStartTime;
- (void)sendVideoFeedBackWithCurrentData:(id)arg1;
- (long long)queryNetworkSpeed;
- (int)switchVideoPath:(id)arg1;
- (void)moviePlayerLikeToKeepUpWithLoadedTime:(double)arg1;
- (void)moviePlayerDidMetaDataLoaded;
- (void)moviePlayerWillPrepareToPlay;
- (_Bool)isShowingAdvisoryCallVideoAppView;
- (_Bool)isAdHoldingPlayer;
- (void)stopSimpleLoadingAnimation;
- (void)startSimpleLoadingAnimation;
- (void)barrageViewController:(id)arg1 didBarrageCanShow:(_Bool)arg2;
- (void)pluginVideoInfoFetched;
- (void)postVideoPlaybackEvent:(id)arg1 withInfo:(id)arg2;
- (void)updateLastURLFinishedState:(int)arg1;
- (void)addToVideoBoxHistoryWithFinishReason:(int)arg1;
- (void)showMoviePlayerWillPlayNextVideo;
- (void)willPresendHighLevelController:(CDUnknownBlockType)arg1;
- (void)showMoviePlayerExtendView:(id)arg1;
- (void)showMoviePlayerError:(id)arg1;
- (void)movieTopTipsViewDidAppear:(id)arg1;
- (void)movieTopTipsViewDidDisappear:(id)arg1 isUserClose:(_Bool)arg2;
- (void)movieTopTipsViewActionDidClick:(id)arg1;
- (void)finishCheckLoadingTime;
- (void)startCheckDefinitionTips;
- (_Bool)isBarrageBlackList:(id)arg1;
- (_Bool)canHasBarrage;
- (void)onLoadStatePlaythroughOK;
- (void)onSwitchDon:(int)arg1;
- (void)moviePlayerRequestThumbnailImageCompleted:(id)arg1;
- (void)moviePlayerDurationAvailable;
- (void)moviePlayerReadyForDisplayDidChanged:(_Bool)arg1;
- (void)moviePlayerRenderStarting;
- (void)moviePlayerLoadStateChanged:(unsigned long long)arg1;
- (void)moviePlayerPlaybackStateChanged:(int)arg1;
- (void)moviePlayerDidFinishWithPlaybackInfo:(id)arg1 stoppedContentURL:(id)arg2;
- (void)toolController:(id)arg1 didExtendViewHideStateChange:(id)arg2;
- (void)toolController:(id)arg1 didClickExtendViewBtn:(unsigned long long)arg2;
- (_Bool)toolControllerAdBannerEnable:(id)arg1;
- (void)toolControllerDidClickAdBtn;
- (_Bool)toolControllerNeedPlayWhenAlowPlayInWWAN;
- (void)toolControllerPlayWillReachEnd;
- (_Bool)toolControllerShouldShowToolPanelOnPlayWillReachEnd;
- (_Bool)toolControllerShouldShowTipsForNextPlay;
- (_Bool)hasBarragesShowingInToolController:(id)arg1;
- (void)toolController:(id)arg1 syncCurrentPlaybackTime:(double)arg2 playableDuration:(double)arg3;
- (void)toolController:(id)arg1 barrageInputPanelShow:(_Bool)arg2;
- (void)toolController:(id)arg1 barrageEnable:(_Bool)arg2;
- (void)toolController:(id)arg1 needToShowTip:(id)arg2;
- (void)toolController:(id)arg1 needToRestartContentURL:(id)arg2;
- (void)toolController:(id)arg1 didUserChangePlayOrPause:(long long)arg2;
- (void)toolController:(id)arg1 needToContinueWithContentURL:(id)arg2;
- (id)playerCoreName;
- (_Bool)isUsingApolloPlayer;
- (void)stopPlayerForLoadingTimeout:(_Bool)arg1;
@property(readonly, nonatomic) UIView *toolTopBar;
@property(readonly, nonatomic) UIView *toolView;
@property(readonly, nonatomic) NSError *playbackLastError;
- (void)replayForContentURL:(id)arg1;
- (void)refreshStartPlayingTime;
- (void)reloadCurrentContentURLForCachingPlay;
- (void)reloadCurrentContentURLWithAutoPlay:(_Bool)arg1;
- (void)pauseAndShowToolPanel;
- (void)pause;
- (void)stop;
- (void)playContentURL:(id)arg1 forcePlayerCore:(unsigned long long)arg2;
- (void)play;
- (void)resumePlay;
- (void)setContentURL:(id)arg1 autoPlay:(_Bool)arg2 forcePlayerCore:(unsigned long long)arg3 shouldCareNet:(_Bool)arg4;
- (void)moviePlayerDidDurationChangeException:(id)arg1;
- (void)moviePlayerStartShare:(id)arg1;
- (void)moviePlayerWillChangeAnim;
- (void)moviePlayerDidChangeAnim;
- (void)moviePlayerShowChanged:(id)arg1;
- (void)dealloc;
- (void)fixNewMoviePlayer;
- (void)cleanMoviePlayer;
- (void)creatNewSuitMoviePlayerControllerIfNeeded:(id)arg1 forcePlayerCore:(unsigned long long)arg2;
- (void)initVolumeView;
- (void)initBaseData;
- (void)resetToolCtrlWithMovieInfo:(id)arg1 showType:(long long)arg2;
@property(nonatomic) long long posterImageContentMode; // @dynamic posterImageContentMode;
- (void)setSeekingEnabled:(_Bool)arg1 hideProgressTipView:(_Bool)arg2;
- (void)setSeekingEnabled:(_Bool)arg1;
- (struct CGSize)natrualSize;
@property(retain, nonatomic) UIImage *posterImage; // @dynamic posterImage;
- (void)viewDidLayoutSubviews;
- (id)initWithBounds:(struct CGRect)arg1 hideTool:(_Bool)arg2 disableBarrage:(_Bool)arg3 forcePlayerCore:(unsigned long long)arg4;
@property(readonly, nonatomic) UIViewController<UCMoviePlayerControllerInterface> *moviePlayer; // @synthesize moviePlayer=m_moviePlayer;
- (unsigned long long)currentVideoPlayerCore;
- (void)applicationDidBecomeActive:(id)arg1;
- (void)applicationWillEnterBackground:(id)arg1;
- (void)nofityMoviePlayerPresented;
@property(nonatomic) _Bool hideSystemVolumePopup; // @synthesize hideSystemVolumePopup=m_hideSystemVolumePopup;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (long long)preferredStatusBarUpdateAnimation;
- (_Bool)prefersStatusBarHidden;
- (long long)preferredStatusBarStyle;
- (_Bool)shouldAutorotateToInterfaceOrientation:(long long)arg1;
- (_Bool)shouldAutorotate;
- (unsigned long long)supportedInterfaceOrientations;
- (void)didReceiveMemoryWarning;
- (void)viewDidLoad;
- (void)addFinishErrorEventWithReason:(int)arg1 videoURL:(id)arg2 totalPlayTime:(double)arg3;
- (void)addCurrentDefinitionEvent:(id)arg1;
- (void)doPlayerDidFinishStatisticsWithPlaybackInfo:(id)arg1 videoURL:(id)arg2;
- (void)firstJumpStatistics:(double)arg1 playerReason:(int)arg2;
- (id)videoJumpReasonWithFinishReason:(int)arg1;
- (void)buildStatisticsEndReason:(id)arg1 reason:(int)arg2;
- (void)buildStatisticsPlayPercent:(id)arg1 reason:(int)arg2;
- (void)processStatisticsMiniPublicInfo:(id)arg1;
- (void)processStatisticsPublicInfo:(id)arg1;
- (id)hostForCurrentPlayURL;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

