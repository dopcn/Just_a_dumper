//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@interface WBUtils : NSObject
{
}

+ (void)DebugAlertWithTitle:(id)arg1 andMessage:(id)arg2;
+ (void)showTip:(id)arg1;
+ (id)createUIBarButtonItemWithTitle:(id)arg1 style:(long long)arg2 target:(id)arg3 action:(SEL)arg4;
+ (void)showSingleBtnAlertWithTitle:(id)arg1 message:(id)arg2 delegate:(id)arg3 btnTitle:(id)arg4;
+ (id)file_md5:(id)arg1;
+ (_Bool)removeFileWithPath:(id)arg1;
+ (_Bool)removeFileInDocWithFileName:(id)arg1;
+ (void)addFeedBack:(id)arg1;
+ (_Bool)isFeedBack:(id)arg1;
+ (_Bool)isWBStartOptimize;
+ (id)getTotalDiskSize;
+ (id)serviceProviderCode;
+ (id)userAgentForHeader;
+ (id)getWWW58COM;
+ (void)addCookiesWithLoginInfo;
+ (void)addThirdPlatformCookiesWithLoginInfo:(id)arg1;
+ (void)addThirdPlatformCookiesWithDomainName:(id)arg1;
+ (void)addCookiesWithKVDic:(id)arg1;
+ (id)httpCookiesForName:(id)arg1;
+ (id)httpCookieForName:(id)arg1;
+ (void)debugCookies;
+ (void)addHttpCookies:(id)arg1;
+ (void)reInitialHttpCookieStorerage;
+ (void)initHttpCookieStorerage;
+ (id)createOnceIDForUserLog;
+ (id)analysisHeader;
+ (id)commonHeaderForWeb;
+ (id)commonMutableHeader;
+ (id)commonTodayWidgetHeader;
+ (id)commonImutableHeader;
+ (id)commonHeader;
+ (id)commonInfoForCrashlytics;
+ (_Bool)isValidCoor:(struct CLLocationCoordinate2D)arg1;
+ (_Bool)isThreeLineCity;
+ (_Bool)isShowHomeADAtCurCity:(id)arg1;
+ (_Bool)isShowIcon:(id)arg1;
+ (_Bool)isShowPhoneBook:(id)arg1;
+ (_Bool)isCurrentDay:(id)arg1;
+ (id)convertDateForm:(id)arg1;
+ (id)getNowTick;
+ (id)getNowVisualDate;
+ (id)getNowRandomString;
+ (id)getUniqueString;
+ (id)getCurrentTimeStamp;
+ (id)getNowTimeStamp;
+ (_Bool)validTime:(double)arg1 withKey:(id)arg2;
+ (_Bool)validDay:(long long)arg1 withKey:(id)arg2;
+ (id)getTime:(id)arg1;
+ (void)clearTimes:(id)arg1;
+ (void)setTimes:(id)arg1;
+ (id)getCrashString;
+ (id)URLStringEncodeAndOS:(id)arg1;
+ (id)getUUID;
+ (id)getNumbersOfString:(id)arg1;
+ (_Bool)checkBasisString:(id)arg1 containString:(id)arg2;
+ (_Bool)valueTypeIsEqualTo:(const char *)arg1 withCompareValue:(id)arg2;
+ (id)check400telNum:(id)arg1;
+ (id)urlInString:(id)arg1;
+ (struct CGSize)getTextWidthWithFontSize:(double)arg1 withText:(id)arg2 withConstrainedToSize:(struct CGSize)arg3 isBold:(_Bool)arg4;
+ (_Bool)isPasswordNotRepeatedORContinuous:(id)arg1;
+ (_Bool)isUserNameAvaliable:(id)arg1;
+ (_Bool)isAllOrAnyThing:(id)arg1;
+ (id)packageNearbyUrlWithSubway:(id)arg1 listUrlStr:(id)arg2;
+ (id)packageListUrlWithSubway:(id)arg1 nearByUrlStr:(id)arg2;
+ (id)getSubwayFilterField:(id)arg1;
+ (id)packageListUrl:(id)arg1;
+ (id)packageNearbyUrl:(id)arg1 withFilterCondition:(_Bool)arg2;
+ (id)urlforCharacterEncode:(id)arg1;
+ (id)urlParserToSrc:(id)arg1;
+ (id)removeCoordinate:(id)arg1;
+ (id)getShowPicString:(id)arg1;
+ (_Bool)checkStringIsExist:(id)arg1 checkString:(id)arg2;
+ (id)returnValueFromString:(id)arg1 byKeyWord:(id)arg2;
+ (id)removeKeyWord:(id)arg1 withKey:(id)arg2;
+ (id)checkString:(id)arg1 checkString:(id)arg2 isAdd:(_Bool)arg3;
+ (id)removerParameterWithUrlString:(id)arg1 absParameter:(id)arg2;
+ (id)creatFullUrl:(id)arg1 priceRangeString:(id)arg2 urlType:(int)arg3;
+ (id)urlStrURLEncode:(id)arg1;

@end

