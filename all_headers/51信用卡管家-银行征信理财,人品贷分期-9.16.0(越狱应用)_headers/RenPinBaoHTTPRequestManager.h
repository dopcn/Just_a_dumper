//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "ENAuthIgnoredHTTPRequestManager.h"

@interface RenPinBaoHTTPRequestManager : ENAuthIgnoredHTTPRequestManager
{
}

+ (void)buyRegularAdvance:(id)arg1 completion:(CDUnknownBlockType)arg2;
+ (void)buyRegular:(id)arg1 completion:(CDUnknownBlockType)arg2;
+ (void)rpPlanBuyAdvance:(id)arg1 completion:(CDUnknownBlockType)arg2;
+ (void)rpPlanBuy:(id)arg1 completion:(CDUnknownBlockType)arg2;
+ (void)rpbAdvertisement:(CDUnknownBlockType)arg1;
+ (void)rpbConfigCompletion:(CDUnknownBlockType)arg1;
+ (void)freezeAsset:(id)arg1 completion:(CDUnknownBlockType)arg2;
+ (void)myPageCompletion:(CDUnknownBlockType)arg1;
+ (void)cashOutTipCompletion:(CDUnknownBlockType)arg1;
+ (void)aseetTransferCompletion:(CDUnknownBlockType)arg1;
+ (void)rpbPopupView:(id)arg1 completion:(CDUnknownBlockType)arg2;
+ (void)rpbHomeInvestmentLoginCompletion:(CDUnknownBlockType)arg1;
+ (void)rpbHomeNoviceLoginUnopenCompletion:(CDUnknownBlockType)arg1;
+ (void)rpbHomeNoviceLoginCompletion:(CDUnknownBlockType)arg1;
+ (void)rpbHomeUnLoginCompletion:(CDUnknownBlockType)arg1;
+ (void)rpbHomeExperienceLoginCompletion:(CDUnknownBlockType)arg1;
+ (void)rpbInvestPageCompletion:(CDUnknownBlockType)arg1;
+ (void)rpbHomePageCompletion:(CDUnknownBlockType)arg1;
+ (void)manualTransferConfirm:(id)arg1 completion:(CDUnknownBlockType)arg2;
+ (void)manualTransferBefore:(id)arg1 completion:(CDUnknownBlockType)arg2;
+ (void)loanUserListUntokenNewCompletion:(CDUnknownBlockType)arg1;
+ (void)loanUserListNotLogin:(id)arg1 completion:(CDUnknownBlockType)arg2;
+ (void)loanUserListNewCompletion:(CDUnknownBlockType)arg1;
+ (void)loanUserList:(id)arg1 completion:(CDUnknownBlockType)arg2;
+ (void)investUserList:(id)arg1 completion:(CDUnknownBlockType)arg2;
+ (void)tenderId:(id)arg1 data:(id)arg2 completion:(CDUnknownBlockType)arg3;
+ (void)tenderOrder:(id)arg1 completion:(CDUnknownBlockType)arg2;
+ (void)tenderCellAssetList:(id)arg1 completion:(CDUnknownBlockType)arg2;
+ (void)tenderAssetList:(id)arg1 completion:(CDUnknownBlockType)arg2;
+ (void)filtersUserBalances:(id)arg1 completion:(CDUnknownBlockType)arg2;
+ (void)userBalances:(id)arg1 completion:(CDUnknownBlockType)arg2;
+ (void)filtersWithCompletion:(CDUnknownBlockType)arg1;
+ (void)incomeList2:(id)arg1 completion:(CDUnknownBlockType)arg2;
+ (void)incomeList:(id)arg1 completion:(CDUnknownBlockType)arg2;
+ (void)serviceMaintainCompletion:(CDUnknownBlockType)arg1;
+ (void)assetChange:(id)arg1 completion:(CDUnknownBlockType)arg2;
+ (void)encashmentOrder:(id)arg1 completion:(CDUnknownBlockType)arg2;
+ (void)rechargeOrder:(id)arg1 completion:(CDUnknownBlockType)arg2;
+ (void)aseetFlow:(id)arg1 completion:(CDUnknownBlockType)arg2;
+ (void)changeAutoTenderStatus:(id)arg1 completion:(CDUnknownBlockType)arg2;
+ (void)shutdowmMultiCardWithdraw:(id)arg1 completion:(CDUnknownBlockType)arg2;
+ (void)multiCardWithdrawVerifySMS:(id)arg1 completion:(CDUnknownBlockType)arg2;
+ (void)multiCardWithdrawSMS:(id)arg1 completion:(CDUnknownBlockType)arg2;
+ (void)createSMSEncashment:(id)arg1 completion:(CDUnknownBlockType)arg2;
+ (void)createEncashment:(id)arg1 completion:(CDUnknownBlockType)arg2;
+ (void)encashmentChecking:(id)arg1 completion:(CDUnknownBlockType)arg2;
+ (void)encashmentInfo:(id)arg1 completion:(CDUnknownBlockType)arg2;
+ (void)cardSignAdvance:(id)arg1 completion:(CDUnknownBlockType)arg2;
+ (void)cardSignSMS:(id)arg1 completion:(CDUnknownBlockType)arg2;
+ (void)rechargePrecheckNoRisk:(id)arg1 completion:(CDUnknownBlockType)arg2;
+ (void)rechargePrecheckRisk:(id)arg1 completion:(CDUnknownBlockType)arg2;
+ (void)rechargePreChecking:(id)arg1 completion:(CDUnknownBlockType)arg2;
+ (void)createOrderRecharge:(id)arg1 completion:(CDUnknownBlockType)arg2;
+ (void)rechargeAdvance:(id)arg1 completion:(CDUnknownBlockType)arg2;
+ (void)rechargeDepositoryResult:(id)arg1 completion:(CDUnknownBlockType)arg2;
+ (void)createRecharge:(id)arg1 completion:(CDUnknownBlockType)arg2;
+ (void)rechargeChecking:(id)arg1 completion:(CDUnknownBlockType)arg2;
+ (void)postRequestDomain:(id)arg1 URLString:(id)arg2 parameters:(id)arg3 login:(_Bool)arg4 completion:(CDUnknownBlockType)arg5;
+ (void)getRequestDomain:(id)arg1 URLString:(id)arg2 parameters:(id)arg3 login:(_Bool)arg4 completion:(CDUnknownBlockType)arg5;
- (Class)responseClassForTask:(id)arg1;

@end

