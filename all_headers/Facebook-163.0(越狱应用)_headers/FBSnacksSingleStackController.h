//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <UIKit/UIViewController.h>

#import "FBAudienceComposerViewDelegate-Protocol.h"
#import "FBAudienceDataUploadOptimisticProgressTimerDelegate-Protocol.h"
#import "FBAudienceHeaderComponentDelegate-Protocol.h"
#import "FBAudienceMediaViewDelegate-Protocol.h"
#import "FBAudienceMultiThreadNuxControllerDelegate-Protocol.h"
#import "FBAudienceTranslationViewDelegate-Protocol.h"
#import "FBExpandingDrawerViewControllerDelegate-Protocol.h"
#import "FBInspirationAppliedEffectViewDelegate-Protocol.h"
#import "FBKeyboardObserverDelegate-Protocol.h"
#import "FBNuxStepChainControllerDelegate-Protocol.h"
#import "FBPopoverControllerDelegate-Protocol.h"
#import "FBSnacksContainerDelegate-Protocol.h"
#import "FBSnacksDataControllerListener-Protocol.h"
#import "FBSnacksFooterViewDelegate-Protocol.h"
#import "FBSnacksGroupStoryViewerNuxManagerDelegate-Protocol.h"
#import "FBSnacksInteractiveFeedbackDataControllerListener-Protocol.h"
#import "FBSnacksMentionPopoverContentViewControllerDelegate-Protocol.h"
#import "FBSnacksMoreOptionsActionSheetControllerDelegate-Protocol.h"
#import "FBSnacksOverlayViewDelegate-Protocol.h"
#import "FBSnacksProgressViewDelegate-Protocol.h"
#import "FBSnacksStoryCoordinatorDelegate-Protocol.h"
#import "FBSnacksStoryViewerMediaViewControllerCoordinatorDelegate-Protocol.h"
#import "FBSnacksStoryViewerViewControllerDelegate-Protocol.h"
#import "FBSnacksViewReceiptsDrawerDelegate-Protocol.h"
#import "FBSnacksWasLiveButtonViewDelegate-Protocol.h"
#import "UIAlertViewDelegate-Protocol.h"
#import "UICollectionViewDataSource-Protocol.h"
#import "UICollectionViewDelegate-Protocol.h"
#import "UIPopoverPresentationControllerDelegate-Protocol.h"

@class CKComponentHostingView, FB360TapToExploreButtonView, FBAudienceComposerView, FBAudienceDataUploadOptimisticProgressTimer, FBAudienceMultiThreadNuxController, FBAudienceTranslationView, FBAudienceViewerToolbox, FBBackstagePublishingTask, FBExpandingDrawerViewController, FBGradientView, FBInspirationAppliedEffectView, FBKeyboardObserver, FBMemTranslation, FBNuxController, FBPopoverController, FBSnacksBucket, FBSnacksFooterView, FBSnacksGroupStoryViewerNuxManager, FBSnacksInlineCommentsViewController, FBSnacksMediaPlayerManager, FBSnacksMoreOptionsActionSheetController, FBSnacksOverlayView, FBSnacksProgressView, FBSnacksStoryCoordinator, FBSnacksStoryViewerViewController, FBSnacksThreadTrackingListenerAnnouncer, FBSnacksViewReceiptsDrawerController, FBSnacksWasLiveButtonView, NSMutableDictionary, NSMutableSet, NSString, UICollectionView, UICollectionViewFlowLayout, UIView;
@protocol FBIntentHandler, FBSimpleDownloaderProtocol, FBSnacksSingleStackControllerDelegate;

@interface FBSnacksSingleStackController : UIViewController <FBAudienceHeaderComponentDelegate, FBAudienceMediaViewDelegate, FBSnacksFooterViewDelegate, FBSnacksOverlayViewDelegate, FBPopoverControllerDelegate, UIAlertViewDelegate, FBSnacksDataControllerListener, FBSnacksStoryCoordinatorDelegate, UICollectionViewDelegate, UICollectionViewDataSource, FBKeyboardObserverDelegate, FBSnacksProgressViewDelegate, FBAudienceComposerViewDelegate, FBInspirationAppliedEffectViewDelegate, FBAudienceDataUploadOptimisticProgressTimerDelegate, FBSnacksContainerDelegate, FBExpandingDrawerViewControllerDelegate, FBSnacksViewReceiptsDrawerDelegate, FBNuxStepChainControllerDelegate, FBAudienceMultiThreadNuxControllerDelegate, UIPopoverPresentationControllerDelegate, FBSnacksMentionPopoverContentViewControllerDelegate, FBSnacksMoreOptionsActionSheetControllerDelegate, FBSnacksWasLiveButtonViewDelegate, FBAudienceTranslationViewDelegate, FBSnacksInteractiveFeedbackDataControllerListener, FBSnacksGroupStoryViewerNuxManagerDelegate, FBSnacksStoryViewerViewControllerDelegate, FBSnacksStoryViewerMediaViewControllerCoordinatorDelegate>
{
    FBAudienceViewerToolbox *_toolbox;
    id <FBSnacksSingleStackControllerDelegate> _delegate;
    id <FBIntentHandler> _intentHandler;
    unsigned long long _currentIndex;
    NSMutableSet *_threadIDsWithSeenViews;
    NSMutableSet *_threadIDsMarkedAsSeen;
    _Bool _hasLoggedCurrentThreadAsSeen;
    FBPopoverController *_popoverController;
    NSMutableDictionary *_cachedReplyBarTextDictionary;
    FBSnacksMoreOptionsActionSheetController *_actionSheetController;
    id <FBSimpleDownloaderProtocol> _downloader;
    FBSnacksThreadTrackingListenerAnnouncer *_threadTrackingAnnouncer;
    UICollectionView *_collectionView;
    UICollectionViewFlowLayout *_collectionViewLayout;
    FBAudienceComposerView *_composerView;
    FBInspirationAppliedEffectView *_appliedEffectView;
    FBAudienceTranslationView *_translationMessageView;
    FBMemTranslation *_translationText;
    FBKeyboardObserver *_keyboardObserver;
    FBSnacksFooterView *_footerView;
    FB360TapToExploreButtonView *_three60TapToExploreButtonView;
    FBGradientView *_bottomGradientView;
    FBSnacksOverlayView *_overlayView;
    UIView *_optionalThreadOverlayView;
    FBSnacksProgressView *_progressView;
    CKComponentHostingView *_headerView;
    FBSnacksStoryCoordinator *_storyCoordinator;
    FBAudienceDataUploadOptimisticProgressTimer *_uploadProgressOptimisticTimer;
    FBBackstagePublishingTask *_uploadingTask;
    FBExpandingDrawerViewController *_expandingDrawerViewController;
    FBSnacksViewReceiptsDrawerController *_viewReceiptDrawerController;
    FBSnacksMediaPlayerManager *_mediaPlayerManager;
    FBNuxController *_replyNuxController;
    FBAudienceMultiThreadNuxController *_tapNuxController;
    UIView *_replyNuxOverlayView;
    FBSnacksWasLiveButtonView *_liveButtonView;
    FBSnacksInlineCommentsViewController *_inlineCommentsViewController;
    CKComponentHostingView *_interactiveFeedbackView;
    FBSnacksGroupStoryViewerNuxManager *_groupStoryViewerNuxManager;
    struct CGPoint _rotatedMentionHitboxMidpoint;
    NSString *_tappedMentionGraphQLID;
    NSString *_tappedMentionGraphQLTypeName;
    FBSnacksStoryViewerViewController *_storyViewerViewController;
    _Bool _useStoryViewerViewController;
    FBSnacksBucket *_bucket;
}

@property(readonly, nonatomic) FBSnacksBucket *bucket; // @synthesize bucket=_bucket;
- (void).cxx_destruct;
- (long long)adaptivePresentationStyleForPresentationController:(id)arg1;
- (void)viewReceiptsDrawerDidTapStorySettings;
- (void)viewReceiptsDrawerDidSelectProfile:(id)arg1;
- (void)viewReceiptsDrawerDidFinishMoreButton;
- (void)viewReceiptsDrawerDidTapMoreButton;
- (void)viewReceiptsDrawerDidTapClose;
- (id)_createLiveViewControllerForBucket:(id)arg1;
- (id)snacksStoryViewerCustomViewControllerForType:(unsigned long long)arg1 bucket:(id)arg2 thread:(id)arg3;
- (_Bool)expandingDrawerViewControllerCanShowStatusBar;
- (void)expandingDrawerViewControllerDidClose:(id)arg1;
- (void)expandingDrawerViewControllerWillOpen:(id)arg1;
- (void)multiThreadNuxControllerDidEndNux:(id)arg1;
- (void)multiThreadNuxControllerWillStartNux:(id)arg1;
- (void)stepChainControllerDidEnd:(id)arg1;
- (void)stepChainController:(id)arg1 willShowFirstStep:(id)arg2;
- (void)_didEndNux;
- (void)_willStartNux;
- (void)_dimReplyNuxOverlay:(_Bool)arg1 animated:(_Bool)arg2;
- (void)_cleanupNUXs;
- (void)_setupGroupStoryViewerNUX;
- (_Bool)_shouldShowGroupStoryViewerNUX;
- (void)_setupTapNUX;
- (void)_setupReplyNUX;
- (_Bool)_shouldShowTapNUX;
- (_Bool)_shouldShowReplyNUX;
- (void)_logOpenMediaForCurrentThread;
- (void)_markThreadAsSeen:(id)arg1;
- (void)_markCurrentThreadAsSeen;
- (void)_markThreadsAndViewReceiptsAsSeen:(id)arg1;
- (void)_navigateToProfileWithBucketOwner:(id)arg1;
- (void)_didSelectProfile:(id)arg1;
- (void)accessibilityRewindToPreviousItem;
- (void)accessibilityAdvanceToNextItem;
- (_Bool)_shouldEnableReply;
- (_Bool)_canBucketOwnerHaveReplyAbility;
- (_Bool)_canSeeMultiAuthorBucketCameraButton;
- (_Bool)_canBucketOwnerOpenViewReceipts;
- (_Bool)_shouldHideWasLiveInlineComments;
- (_Bool)_shouldHideLiveButtonView;
- (_Bool)_shouldHideFooterView;
- (_Bool)_shouldHideComposerView;
- (_Bool)_shouldShowAppliedEffectView;
- (_Bool)_isPlayingThreadOwnedByViewer;
- (void)_resumePlayerFromMoreAction;
- (void)_logSaveMedia;
- (void)_logReport;
- (void)_logDeletion;
- (void)_deleteCurrentItem;
- (void)_reportCurrentItemToAdmin;
- (void)_presentReportFlowUI;
- (id)_imageFromEmoji:(id)arg1 withSize:(struct CGSize)arg2;
- (void)_showReplySentConfirmationView;
- (void)_showOneTapEmojiConfirmationViewCompletionHelper;
- (void)_showOneTapBurstConfirmationViewWithEmojiInnerBlockHelper:(id)arg1;
- (void)_showOneTapEmojiBurstConfirmationViewWithEmoji:(id)arg1;
- (void)_showMuteConfirmationAlertView;
- (void)_muteAction;
- (void)_showDeleteConfirmationAlertView;
- (void)_showReportToAdminView;
- (void)_showGroupSettings;
- (void)_showReviewAdminToolView;
- (void)_handleSaveAction;
- (void)_handleUnhideAction;
- (void)_showSettingsUpdatedToast;
- (void)_handleReportToAdmin;
- (void)_handleGroupSettings;
- (void)_handleReviewAction;
- (void)_handleStorySettings;
- (void)_handleCancelAction;
- (void)_handleDeleteAction;
- (void)_handleReportAction;
- (void)_handleMuteAction;
- (void)_logOpenMentionedObjectWithFBID:(id)arg1;
- (void)_logOpenStoryCamera;
- (void)_logOpenReplyKeyboard;
- (void)_logReplyToThread:(id)arg1 isEmoji:(_Bool)arg2 emojiIndex:(long long)arg3 emojiString:(id)arg4;
- (void)_showPopoverWithViewController:(id)arg1 contentSize:(struct CGSize)arg2 fromView:(id)arg3;
- (id)_uploadingTaskOfCurrentThread;
- (_Bool)_shouldShowDataUploadingView;
- (_Bool)_threadHasUnseenViews:(id)arg1;
- (void)_logOpenSeenSummary;
- (void)_rewindToPreviousItemWithNavigationAction:(unsigned long long)arg1;
- (void)_advanceToNextItemWithNavigationAction:(unsigned long long)arg1;
- (void)_handleNavigationForDeletion;
- (void)_resetUnseenProgressSegments;
- (void)_configureProgressView;
- (void)_configure360TapButtonViewWithMedia:(id)arg1;
- (void)_dismissComposer;
- (void)_presentComposer;
- (void)_toggleComposerView;
- (void)_updateHeaderModelForMedia:(id)arg1;
- (void)_updateComposerRecipientNameForMedia:(id)arg1;
- (_Bool)_shouldShowMoreActionInHeaderView:(id)arg1;
- (void)_updateContext;
- (void)_configureExpandingDrawerViewControllerForThread:(id)arg1;
- (void)_configureOverlayViewForItem:(id)arg1;
- (void)_setChromeHidden:(_Bool)arg1 animated:(_Bool)arg2;
- (void)_updateInteractiveFeedbackViewParent:(_Bool)arg1;
- (void)_configureCellWithUpdateType:(unsigned long long)arg1;
- (void)_animateFooterViewHint;
- (void)_performAutomaticForwardIfNecessary;
- (void)_pauseWithModalCameraPresentingEffectIDCompletionHelper;
- (void)_pauseWithModalCameraPresentingEffectID:(id)arg1 isCardEffect:(_Bool)arg2;
- (void)_pauseWithModalCameraForSourceCompletionHelper:(unsigned long long)arg1 cancelled:(_Bool)arg2;
- (void)_pauseWithModalCameraForSource:(unsigned long long)arg1;
- (void)_startAtAppropriateIndex;
- (void)_configureUploadingProgressIfNecessary;
- (void)_configureFooterViewWithThread:(id)arg1;
- (void)_showThreadAtIndex:(unsigned long long)arg1;
- (void)_setCurrentThreadCachedReplyBarText:(id)arg1;
- (id)_currentThreadCachedReplyBarText;
- (id)_currentMedia;
- (id)_getSourceType;
- (struct UIEdgeInsets)_safeAreaInsets;
- (_Bool)_shouldHideTranslationView;
- (void)_resumePlayBarWithTranslationText:(id)arg1;
- (void)groupStoryViewerNuxManagerDidTapViewSettings;
- (void)didUpdatePollModel:(id)arg1;
- (void)audienceTranslationViewShouldFetchTranslationText;
- (void)audienceTranslationViewShouldHideTranslationText;
- (void)didUpdateUploadProgress:(double)arg1;
- (void)alertView:(id)arg1 didDismissWithButtonIndex:(long long)arg2;
- (void)fb_popoverControllerDidDismissPopover:(id)arg1 withInteraction:(unsigned long long)arg2;
- (void)composerViewDidFinishWithText:(id)arg1 isLightweightReply:(_Bool)arg2 emojiIndex:(long long)arg3;
- (void)composerViewDidChangeToHeight:(double)arg1;
- (void)composerViewDidResignFirstResponderWithText:(id)arg1;
- (void)composerViewDidBecomeFirstResponder;
- (void)_unfocusComposerViewAnimated:(_Bool)arg1;
- (void)_focusComposerView;
- (void)composerViewDidFocus;
- (void)composerViewDidEndEditing;
- (void)composerViewDidBeginEditing;
- (void)composerViewDidTapCamera;
- (void)composerViewDidTapComposer;
- (void)appliedEffectViewDidTapEffectID:(id)arg1 isCardEffect:(_Bool)arg2;
- (_Bool)_shouldHide360TapToExploreButtonViewForMedia:(id)arg1;
- (_Bool)_shouldHide360TapToExploreButtonView;
- (void)tapToExploreButtonTapped;
- (void)stackFooterView:(id)arg1 buttonReceivedTouch:(unsigned long long)arg2 withTouchType:(unsigned long long)arg3;
- (void)didTapProfileButton:(id)arg1;
- (void)_didTapMentionWithHitbox;
- (_Bool)stackOverlayView:(id)arg1 shouldRecognizeTapGestureAsMentionTap:(id)arg2;
- (_Bool)stackOverlayView:(id)arg1 shouldReceiveGesture:(unsigned long long)arg2;
- (void)stackOverlayView:(id)arg1 didReceiveGesture:(unsigned long long)arg2;
- (void)mediaViewDidPause:(id)arg1;
- (void)mediaViewDidStartPlaying:(id)arg1;
- (void)mediaView:(id)arg1 didUpdateProgress:(double)arg2;
- (void)mediaViewDidPlayToEnd:(id)arg1;
- (void)mediaViewDidLoad:(id)arg1;
- (void)audienceHeaderActionComponentDidTapCloseButton;
- (void)audienceHeaderActionComponentDidTapMoreButton;
- (void)audienceHeaderComponentDidTapAvatarWithBucketOwner:(id)arg1;
- (void)audienceHeaderComponentDidTapTitleWithBucketOwner:(id)arg1;
- (void)actionSheetController:(id)arg1 didDismissWithOption:(unsigned long long)arg2;
- (void)snacksContainerDidSelectOpenCamera;
- (void)snacksDataController:(id)arg1 didUpdateBuckets:(id)arg2;
- (void)snacksDataController:(id)arg1 didUpdateStoryBucketData:(id)arg2 updateType:(unsigned long long)arg3;
- (void)snacksDataControllerDidFailToLoad:(id)arg1;
- (void)snacksDataController:(id)arg1 didUpdateBucket:(id)arg2;
- (void)prepareForDisplay;
- (void)setCurrentIndex:(unsigned long long)arg1;
- (unsigned long long)_initialIndexWithInitialThreadID:(id)arg1 bucket:(id)arg2;
- (void)_handleDidPresentMediaViewController:(id)arg1;
- (void)_handleWillPresentMediaViewController:(id)arg1;
- (void)setOverlayViewsHidden:(_Bool)arg1 animated:(_Bool)arg2;
- (void)resetSubviews;
- (void)_updateViewFrameToDefault:(id)arg1;
- (void)_updateComposeViewFrameToDefault;
- (void)_updateComposeViewFrameWithEndFrame:(struct CGRect)arg1 duration:(double)arg2;
- (void)keyboardObserver:(id)arg1 keyboardWillHideWithBeginFrame:(struct CGRect)arg2 endFrame:(struct CGRect)arg3 duration:(double)arg4 curve:(long long)arg5;
- (void)keyboardObserver:(id)arg1 keyboardFrameWillChangeWithBeginFrame:(struct CGRect)arg2 endFrame:(struct CGRect)arg3 duration:(double)arg4 curve:(long long)arg5;
- (void)keyboardObserver:(id)arg1 keyboardWillShowWithBeginFrame:(struct CGRect)arg2 endFrame:(struct CGRect)arg3 duration:(double)arg4 curve:(long long)arg5;
- (void)storyViewerViewController:(id)arg1 didPresentViewController:(id)arg2;
- (void)storyViewerViewController:(id)arg1 willPresentViewController:(id)arg2;
- (void)snacksProgressView:(id)arg1 didTapSegmentAtIndex:(long long)arg2;
- (void)snacksStoryCoordinatorDidRequestDismissal:(id)arg1;
- (void)didTapLiveButton:(id)arg1;
- (void)pauseMediaPlayer;
- (void)resumeMediaPlayer;
- (void)startMediaPlayer;
- (id)currentThread;
- (_Bool)isReplying;
- (_Bool)isPopoverVisible;
- (id)_displayedViewController;
- (void)collectionView:(id)arg1 didEndDisplayingCell:(id)arg2 forItemAtIndexPath:(id)arg3;
- (void)collectionView:(id)arg1 willDisplayCell:(id)arg2 forItemAtIndexPath:(id)arg3;
- (id)collectionView:(id)arg1 cellForItemAtIndexPath:(id)arg2;
- (long long)collectionView:(id)arg1 numberOfItemsInSection:(long long)arg2;
- (void)markThreadAndViewReceiptsAsSeen;
- (id)transitionPhotoView;
- (id)displayedMedia;
- (id)transitionImageSpecifier;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)_layoutInteractiveFeedbackView;
- (void)viewWillLayoutSubviews;
- (void)viewDidLoad;
- (unsigned long long)supportedInterfaceOrientations;
- (_Bool)shouldAutorotate;
- (void)dealloc;
- (id)initWithBucket:(id)arg1 initialThreadID:(id)arg2 toolbox:(id)arg3 delegate:(id)arg4 threadTrackingAnnouncer:(id)arg5 intentHandler:(id)arg6 mediaplayerManager:(id)arg7;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

