//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

@class ApplicationSessionHook, CTDataUpload, CTSocketData, CrashHook, NSMutableArray, NSMutableDictionary, NSTimer, Sa_Pf_ApplicationSessionInfo, SamplingSetting, URLConnectionHookAgent, URLSessionHookAgent, WebViewHook;
@protocol OS_dispatch_queue;

@interface saPfWatchManager : NSObject
{
    _Bool _allowOpenWebviewWatch;
    _Bool _allowOpenCrashWatch;
    _Bool _allowOpenKadunWatch;
    _Bool _isFirstActive;
    SamplingSetting *_configSetting;
    CTDataUpload *_dataUpload;
    URLConnectionHookAgent *_urlConnectionHookAgent;
    URLSessionHookAgent *_urlSessionHookAgent;
    CrashHook *_crashHookAgent;
    ApplicationSessionHook *_appSessionHookAgent;
    WebViewHook *_webViewHook;
    NSTimer *_uploadTimer;
    NSObject<OS_dispatch_queue> *_backgroundQueue;
    Sa_Pf_ApplicationSessionInfo *_ctRunInfo;
    NSMutableArray *_ctHttpInfoArray;
    NSMutableArray *_ctPerfInfoArray;
    NSMutableArray *_ctCustomInfoArray;
    NSMutableArray *_ctJSErrorArray;
    NSMutableDictionary *_ctWebviewDic;
    NSMutableArray *_ctCodePerfArray;
    CTSocketData *_ctSocketData;
    NSMutableArray *_ctCarltonArray;
    NSMutableArray *_ctSlowInteractionArray;
    NSMutableArray *_coldStartArray;
    NSMutableArray *_moduleLoadArray;
}

+ (id)shareInstance;
@property(nonatomic) _Bool isFirstActive; // @synthesize isFirstActive=_isFirstActive;
@property(retain, nonatomic) NSMutableArray *moduleLoadArray; // @synthesize moduleLoadArray=_moduleLoadArray;
@property(retain, nonatomic) NSMutableArray *coldStartArray; // @synthesize coldStartArray=_coldStartArray;
@property(retain, nonatomic) NSMutableArray *ctSlowInteractionArray; // @synthesize ctSlowInteractionArray=_ctSlowInteractionArray;
@property(retain, nonatomic) NSMutableArray *ctCarltonArray; // @synthesize ctCarltonArray=_ctCarltonArray;
@property(retain, nonatomic) CTSocketData *ctSocketData; // @synthesize ctSocketData=_ctSocketData;
@property(retain, nonatomic) NSMutableArray *ctCodePerfArray; // @synthesize ctCodePerfArray=_ctCodePerfArray;
@property(retain, nonatomic) NSMutableDictionary *ctWebviewDic; // @synthesize ctWebviewDic=_ctWebviewDic;
@property(retain, nonatomic) NSMutableArray *ctJSErrorArray; // @synthesize ctJSErrorArray=_ctJSErrorArray;
@property(retain, nonatomic) NSMutableArray *ctCustomInfoArray; // @synthesize ctCustomInfoArray=_ctCustomInfoArray;
@property(retain, nonatomic) NSMutableArray *ctPerfInfoArray; // @synthesize ctPerfInfoArray=_ctPerfInfoArray;
@property(retain, nonatomic) NSMutableArray *ctHttpInfoArray; // @synthesize ctHttpInfoArray=_ctHttpInfoArray;
@property(retain, nonatomic) Sa_Pf_ApplicationSessionInfo *ctRunInfo; // @synthesize ctRunInfo=_ctRunInfo;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *backgroundQueue; // @synthesize backgroundQueue=_backgroundQueue;
@property(retain, nonatomic) NSTimer *uploadTimer; // @synthesize uploadTimer=_uploadTimer;
@property(retain, nonatomic) WebViewHook *webViewHook; // @synthesize webViewHook=_webViewHook;
@property(retain, nonatomic) ApplicationSessionHook *appSessionHookAgent; // @synthesize appSessionHookAgent=_appSessionHookAgent;
@property(retain, nonatomic) CrashHook *crashHookAgent; // @synthesize crashHookAgent=_crashHookAgent;
@property(retain, nonatomic) URLSessionHookAgent *urlSessionHookAgent; // @synthesize urlSessionHookAgent=_urlSessionHookAgent;
@property(retain, nonatomic) URLConnectionHookAgent *urlConnectionHookAgent; // @synthesize urlConnectionHookAgent=_urlConnectionHookAgent;
@property(retain, nonatomic) CTDataUpload *dataUpload; // @synthesize dataUpload=_dataUpload;
@property(nonatomic) _Bool allowOpenKadunWatch; // @synthesize allowOpenKadunWatch=_allowOpenKadunWatch;
@property(nonatomic) _Bool allowOpenCrashWatch; // @synthesize allowOpenCrashWatch=_allowOpenCrashWatch;
@property(nonatomic) _Bool allowOpenWebviewWatch; // @synthesize allowOpenWebviewWatch=_allowOpenWebviewWatch;
@property(retain, nonatomic) SamplingSetting *configSetting; // @synthesize configSetting=_configSetting;
- (void).cxx_destruct;
- (void)networkMonitor;
- (_Bool)samplingControl:(id)arg1;
- (_Bool)isImmediatelyUpload;
- (void)sendData:(int)arg1;
- (void)sendCrashData:(id)arg1 andSysData:(id)arg2;
- (id)getWebViewDataStr;
- (void)addWebViewData:(id)arg1 withWebViewKey:(id)arg2;
- (void)addCollectionData:(id)arg1 immediatelyUpload:(_Bool)arg2;
- (void)addCollectionData:(id)arg1;
- (void)stopUploadTimmer;
- (void)onUploadTimer:(id)arg1;
- (void)startUploadTimmer;
- (void)refreshSampling;
- (void)didEnterBackgroundCallBack:(id)arg1;
- (void)didBecomeActiveCallBack:(id)arg1;
- (void)stopPfWatch;
- (void)startPfWatch;
- (void)setCTServer:(int)arg1;
- (id)init;

@end

