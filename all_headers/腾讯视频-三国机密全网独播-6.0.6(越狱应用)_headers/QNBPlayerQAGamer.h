//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

@class NSTimer, QLGetQAGameUserInfoModle, QLPostQAGameUserOptionModle, QNBPlayerQAGameInfo, QNBPlayerQAGameState;
@protocol QNBPlayerQAGamerDelegate;

@interface QNBPlayerQAGamer : NSObject
{
    QNBPlayerQAGameState *_gameState;
    id <QNBPlayerQAGamerDelegate> _gamerListener;
    QNBPlayerQAGameInfo *_gameInfo;
    NSTimer *_questionTimer;
    QLPostQAGameUserOptionModle *_postOptionModel;
    QLGetQAGameUserInfoModle *_qaGameStateModel;
}

+ (id)qaGameStateTransferMatrix;
+ (id)Invalid;
@property(retain, nonatomic) QLGetQAGameUserInfoModle *qaGameStateModel; // @synthesize qaGameStateModel=_qaGameStateModel;
@property(retain, nonatomic) QLPostQAGameUserOptionModle *postOptionModel; // @synthesize postOptionModel=_postOptionModel;
@property(retain, nonatomic) NSTimer *questionTimer; // @synthesize questionTimer=_questionTimer;
@property(retain, nonatomic) QNBPlayerQAGameInfo *gameInfo; // @synthesize gameInfo=_gameInfo;
@property(nonatomic) __weak id <QNBPlayerQAGamerDelegate> gamerListener; // @synthesize gamerListener=_gamerListener;
@property(retain, nonatomic) QNBPlayerQAGameState *gameState; // @synthesize gameState=_gameState;
- (void).cxx_destruct;
- (_Bool)isAudienceAfterJudgeQuestionJumpFromSurvival:(_Bool)arg1 fromQuestion:(long long)arg2 toQuestion:(long long)arg3 needUpdate:(_Bool)arg4 forTag:(id)arg5;
- (_Bool)isServerOptionPostError:(long long)arg1;
- (void)onQuestionTimeOut;
- (void)startQuestionTimer:(double)arg1;
- (void)clearQuestionTimer;
- (void)updateAboutReviveChances;
- (void)updateClosingQuestionIndex:(long long)arg1 maxUsableReviveCountFromParams:(long long)arg2 maxUsableReviveCountFromLive:(long long)arg3 reviveCount:(long long)arg4;
- (unsigned long long)judgeAnswer:(long long)arg1 withRightAnswer:(long long)arg2;
- (void)triggerSettementChangeByState:(id)arg1 byAction:(id)arg2;
- (id)doAction:(id)arg1;
- (void)updateFromUserParams:(id)arg1;
- (void)notifyGameStateChanged:(id)arg1;
- (_Bool)receiveGameOptionResopnes:(id)arg1 atQuestionIdx:(long long)arg2 paramEnable:(_Bool)arg3;
- (void)receiveEnd:(id)arg1;
- (void)receiveAnswer:(id)arg1;
- (void)showQuestion:(id)arg1 withSessionKey:(id)arg2;
- (void)onGameStateLoad:(id)arg1 paramEnable:(_Bool)arg2 needRetry:(_Bool)arg3 errCode:(long long)arg4;
- (void)changeToStateErr:(long long)arg1 needRetry:(_Bool)arg2;
- (void)changeToEnd:(id)arg1 action:(id)arg2 paramEnable:(_Bool)arg3;
- (void)changeToDead:(id)arg1 paramEnable:(_Bool)arg2;
- (void)changeToSurvival:(id)arg1 action:(id)arg2 paramEnable:(_Bool)arg3;
- (void)doPostQAGameUserOption:(long long)arg1;
- (void)sendGetQAGameUserInfoRequest;
- (_Bool)isLocalNoAttend;
- (void)forceSetGameUserState:(long long)arg1;
- (void)recevieQAGameEndAndCanRequestSever:(_Bool)arg1;
- (void)receivePlayerQAInfo:(id)arg1;
- (void)postAnswer:(long long)arg1;
- (void)reloadGameUserInfo;
- (void)retry;
- (void)start;
- (id)initWithWithPid:(id)arg1 withGameLiveInfo:(id)arg2 configInfo:(id)arg3;
- (void)dealloc;
- (id)init;

@end

