//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class DYCType, NSString;

@interface DYCValue : NSObject
{
    DYCType *_type;
    void *_storage;
}

+ (id)alloc;
@property(readonly, nonatomic) void *storage; // @synthesize storage=_storage;
@property(readonly, nonatomic) DYCType *type; // @synthesize type=_type;
- (void).cxx_destruct;
- (id)description;
- (void)copyIntoBuffer:(void *)arg1;
- (void)updateFromBuffer:(const void *)arg1;
- (_Bool)isEqual:(id)arg1;
- (const char *)objCType;
- (id)initWithStorage:(void *)arg1 type:(id)arg2;
- (id)init;
@property(nonatomic) Class targetSuperclass;
- (id)toJSValueInContext:(id)arg1;
@property(copy, nonatomic) NSString *functionName;
@property(copy, nonatomic) NSString *functionSignature;
- (void *)toPointer;
- (SEL)toSelector;
- (id)toNumber;
- (id)toAnyObject;
@property(readonly, nonatomic) _Bool isZeroFilled;
- (id)postDecrease;
- (id)postIncrease;
- (id)dereferenceOf;
- (id)addressOf;
- (id)logicalNot;
- (id)bitNot;
- (id)minus;
- (id)plus;
- (id)preDecrease;
- (id)preIncrease;
- (id)postUnaryOperator:(id)arg1;
- (id)prefixUnaryOperator:(id)arg1;
- (id)cast:(const char *)arg1;
- (id)bitXorAssign:(id)arg1;
- (id)bitOrAssign:(id)arg1;
- (id)bitAndAssign:(id)arg1;
- (id)rightShiftAssign:(id)arg1;
- (id)leftShiftAssign:(id)arg1;
- (id)modAssign:(id)arg1;
- (id)divideAssign:(id)arg1;
- (id)multiplyAssign:(id)arg1;
- (id)subtractAssign:(id)arg1;
- (id)addAssign:(id)arg1;
- (id)compoundAssignOperator:(id)arg1 rhsValue:(id)arg2;
- (id)logicalOr:(id)arg1;
- (id)logicalAnd:(id)arg1;
- (id)notEqualTo:(id)arg1;
- (id)equalTo:(id)arg1;
- (id)lessThanOrEqualTo:(id)arg1;
- (id)greaterThanOrEqualTo:(id)arg1;
- (id)lessThan:(id)arg1;
- (id)greaterThan:(id)arg1;
- (id)bitXor:(id)arg1;
- (id)bitOr:(id)arg1;
- (id)bitAnd:(id)arg1;
- (id)rightShift:(id)arg1;
- (id)leftShift:(id)arg1;
- (id)mod:(id)arg1;
- (id)divide:(id)arg1;
- (id)multiply:(id)arg1;
- (id)subtract:(id)arg1;
- (id)add:(id)arg1;
- (id)assign:(id)arg1;
- (id)binaryOperator:(id)arg1 rhsValue:(id)arg2;

@end

