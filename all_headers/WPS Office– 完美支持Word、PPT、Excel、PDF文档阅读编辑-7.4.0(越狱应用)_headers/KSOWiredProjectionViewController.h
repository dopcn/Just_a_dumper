//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <UIKit/UIViewController.h>

#import "KSOMultiScreenControllerDelegate-Protocol.h"
#import "KSOWiredProjectionDrawInkControllerDelegate-Protocol.h"
#import "KSOWiredProjectionInkViewDelegate-Protocol.h"
#import "KWBrowserViewControllerDelegate-Protocol.h"
#import "UIGestureRecognizerDelegate-Protocol.h"
#import "WPSInkGuideViewDelegate-Protocol.h"

@class KSOMultiScreenController, KSOWiredProjectionDrawInkController, KWBrowserViewController, KWProjectionGuideViewController, NSMutableSet, NSString, UIButton, UITapGestureRecognizer, UIView, WPSInkGuideView;
@protocol KSOWiredProjectionViewControllerDelegate;

@interface KSOWiredProjectionViewController : UIViewController <KSOMultiScreenControllerDelegate, KSOWiredProjectionDrawInkControllerDelegate, KWBrowserViewControllerDelegate, KSOWiredProjectionInkViewDelegate, WPSInkGuideViewDelegate, UIGestureRecognizerDelegate>
{
    _Bool _isContentViewAutoLayout;
    _Bool _isHaveShowInkGuideView;
    _Bool _isTwoFingerMove;
    _Bool _isOpenInk;
    _Bool _isNeedShowWireGuideView;
    long long _openInkTimes;
    long long _closeInkTimes;
    struct CGRect _contentMapRect;
    _Bool _isFirstOpen;
    _Bool _isConnectScreen;
    id <KSOWiredProjectionViewControllerDelegate> _delegate;
    NSMutableSet *_subButtons;
    KSOMultiScreenController *_multiScreenController;
    UIView *_contentView;
    UIButton *_closeButton;
    UIButton *_inkButton;
    UIButton *_stateButton;
    WPSInkGuideView *_inkGuideView;
    KSOWiredProjectionDrawInkController *_drawInkController;
    KWProjectionGuideViewController *_wireProjectionGuideVC;
    KWBrowserViewController *_browserViewController;
    UITapGestureRecognizer *_oneTapOneTouchGestureRecognizer;
    struct CGRect _drawInkViewFrame;
}

@property(nonatomic) struct CGRect drawInkViewFrame; // @synthesize drawInkViewFrame=_drawInkViewFrame;
@property(retain, nonatomic) UITapGestureRecognizer *oneTapOneTouchGestureRecognizer; // @synthesize oneTapOneTouchGestureRecognizer=_oneTapOneTouchGestureRecognizer;
@property(retain, nonatomic) KWBrowserViewController *browserViewController; // @synthesize browserViewController=_browserViewController;
@property(retain, nonatomic) KWProjectionGuideViewController *wireProjectionGuideVC; // @synthesize wireProjectionGuideVC=_wireProjectionGuideVC;
@property(retain, nonatomic) KSOWiredProjectionDrawInkController *drawInkController; // @synthesize drawInkController=_drawInkController;
@property(retain, nonatomic) WPSInkGuideView *inkGuideView; // @synthesize inkGuideView=_inkGuideView;
@property(retain, nonatomic) UIButton *stateButton; // @synthesize stateButton=_stateButton;
@property(retain, nonatomic) UIButton *inkButton; // @synthesize inkButton=_inkButton;
@property(retain, nonatomic) UIButton *closeButton; // @synthesize closeButton=_closeButton;
@property(retain, nonatomic) UIView *contentView; // @synthesize contentView=_contentView;
@property(retain, nonatomic) KSOMultiScreenController *multiScreenController; // @synthesize multiScreenController=_multiScreenController;
@property(nonatomic) _Bool isConnectScreen; // @synthesize isConnectScreen=_isConnectScreen;
@property(retain, nonatomic) NSMutableSet *subButtons; // @synthesize subButtons=_subButtons;
@property(nonatomic) _Bool isFirstOpen; // @synthesize isFirstOpen=_isFirstOpen;
@property(nonatomic) __weak id <KSOWiredProjectionViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (_Bool)gestureRecognizer:(id)arg1 shouldBeRequiredToFailByGestureRecognizer:(id)arg2;
- (void)browserViewControllerDidClose:(id)arg1;
- (void)resetContentViewConstraints;
- (void)multiScreenDidChange;
- (id)currentMultiScreen;
- (void)removeInkGuideView;
- (void)wiredProjectionInkViewInkDrawMoving;
- (void)wiredProjectionInkViewInkNeedUpdate;
- (void)inkDrawMoving;
- (void)inkNeedUpdate;
- (void)screenModeChange:(id)arg1;
- (void)disconnectionScreen:(id)arg1;
- (void)automaticallyOpenMultiDisplay:(id)arg1;
- (void)resetContentViewSnapshotMapRect:(struct CGRect)arg1;
- (void)addContentView:(id)arg1 autoLayout:(_Bool)arg2 mapRect:(struct CGRect)arg3;
- (void)addContentView:(id)arg1;
- (void)contentDidScroll;
- (void)clearAllInk;
- (id)contentSuperview;
- (double)multiScreenAspectRatio;
- (struct CGRect)multiScreenBounds;
- (void)updateProjectionContentUntil:(double)arg1;
- (void)updateProjectionContent;
- (void)oneTapOneTouchGestureRecognizerAction:(id)arg1;
- (void)stateButtonEvent:(id)arg1;
- (void)inkButtonEvent:(id)arg1;
- (void)closeButtonEvent:(id)arg1;
- (void)resetAllGestureEnabled:(_Bool)arg1;
- (void)addGestureRecognizers;
- (void)hiddenSubButtons;
- (void)addDrawInkView;
- (void)showInkGuideView;
- (void)hideWireProjectionGuideView;
- (void)showWireProjectionGuideView;
- (void)screenNotificationDidAccept;
- (void)loadStateButton;
- (void)loadInkButton;
- (void)loadCloseButton;
- (void)loadSubviews;
- (void)dismissWithAnimated:(_Bool)arg1;
- (void)closeButtonDownOutSizeEvent:(id)arg1;
- (void)closeButtonDownInSizeEvent:(id)arg1;
- (void)forceClose;
- (void)storeRecord:(id)arg1 fileType:(long long)arg2;
- (void)viewWillTransitionToSize:(struct CGSize)arg1 withTransitionCoordinator:(id)arg2;
- (void)viewDidLayoutSubviews;
- (unsigned long long)supportedInterfaceOrientations;
- (_Bool)shouldAutorotate;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)didReceiveMemoryWarning;
- (void)dealloc;
- (void)viewDidLoad;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

