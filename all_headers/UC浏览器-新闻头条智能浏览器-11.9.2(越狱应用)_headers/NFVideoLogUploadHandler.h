//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

@class NFVideoLogUploadItem, NSNumber, NewsFlowStatisticsItem;
@protocol NFVideoLogUploadHandlerDataSource;

@interface NFVideoLogUploadHandler : NSObject
{
    _Bool _isInWeMediaSubListMode;
    _Bool _isVideoStartPlayInNewsFlow;
    _Bool _isContentVideo;
    _Bool _hasUploadPauseState;
    _Bool _isPauseByUser;
    NSNumber *_indexNum;
    id <NFVideoLogUploadHandlerDataSource> _dataSource;
    double _totalPlayTime;
    double _startPlayTime;
    NFVideoLogUploadItem *_currentVideoLogItem;
    NewsFlowStatisticsItem *_currentStatisticsItem;
    long long _continuePlayType;
    long long _landingFrom;
}

+ (void)__uc_stat__nfVideo_markChangeTabInMiniWindow;
+ (void)__uc_stat__nfVideo_statisticsChangeTabInMiniWindow;
+ (id)sharedInstance;
@property(nonatomic) long long landingFrom; // @synthesize landingFrom=_landingFrom;
@property(nonatomic) long long continuePlayType; // @synthesize continuePlayType=_continuePlayType;
@property(nonatomic) _Bool isPauseByUser; // @synthesize isPauseByUser=_isPauseByUser;
@property(nonatomic) _Bool hasUploadPauseState; // @synthesize hasUploadPauseState=_hasUploadPauseState;
@property(nonatomic) _Bool isContentVideo; // @synthesize isContentVideo=_isContentVideo;
@property(nonatomic) _Bool isVideoStartPlayInNewsFlow; // @synthesize isVideoStartPlayInNewsFlow=_isVideoStartPlayInNewsFlow;
@property(nonatomic) _Bool isInWeMediaSubListMode; // @synthesize isInWeMediaSubListMode=_isInWeMediaSubListMode;
@property(retain, nonatomic) NewsFlowStatisticsItem *currentStatisticsItem; // @synthesize currentStatisticsItem=_currentStatisticsItem;
@property(retain, nonatomic) NFVideoLogUploadItem *currentVideoLogItem; // @synthesize currentVideoLogItem=_currentVideoLogItem;
@property(nonatomic) double startPlayTime; // @synthesize startPlayTime=_startPlayTime;
@property(nonatomic) double totalPlayTime; // @synthesize totalPlayTime=_totalPlayTime;
@property(nonatomic) id <NFVideoLogUploadHandlerDataSource> dataSource; // @synthesize dataSource=_dataSource;
@property(retain, nonatomic) NSNumber *indexNum; // @synthesize indexNum=_indexNum;
- (_Bool)currentVideoInWeex;
- (_Bool)currentVideoInNewsFlowMode;
- (_Bool)useNewConditionToUploadT3;
- (_Bool)isPlayingInNewsFlow:(unsigned long long)arg1;
- (_Bool)isPlayingInWeex:(unsigned long long)arg1;
- (void)applicationDidBecomeActive:(id)arg1;
- (void)applicationWillTerminate:(id)arg1;
- (void)applicationDidEnterBackground:(id)arg1;
- (void)logPlayEventWithLandingFromInVideoChannel:(long long)arg1;
- (void)logStartEventWithoutXSSMode;
- (void)logBehaveState:(long long)arg1;
- (void)moviePlayerToolPanelBehaveState:(id)arg1;
- (void)forciblyLogBehaveState:(long long)arg1 isGifEnter:(id)arg2;
- (void)forciblyLogBehaveState:(long long)arg1;
- (void)logPauseState:(int)arg1;
- (struct CGSize)videoSizeForItem:(id)arg1;
- (void)resetStartTime;
- (void)setCurrentItemScene:(id)arg1;
- (void)setCurrentItemAid:(id)arg1;
- (void)setCutrentItemImmerseAutoPlayType:(long long)arg1;
- (void)setCurrentItemAutoPlay:(_Bool)arg1;
- (void)setCurrentItemLandingFromType:(long long)arg1;
- (void)setCurrentItemPlayType:(long long)arg1;
- (void)setCurrentItem:(id)arg1;
- (void)didAutoSelectedDefinitionAt:(id)arg1;
- (void)didSelectedDefinitionAt:(id)arg1;
- (void)didPlayerShowDefinitionPanel:(id)arg1;
- (void)didVideoFirstLikelyToKeepUp:(id)arg1;
- (void)didVideoVpsResult:(id)arg1;
- (void)didVideoVPSLinkAuqireFailed:(id)arg1;
- (void)didVideoStop:(id)arg1;
- (void)didClickFollowBtn:(id)arg1;
- (void)didVideoShare:(id)arg1;
- (void)didVideoAutoPlay:(id)arg1;
- (void)didVideoPauseByUser:(id)arg1;
- (long long)changeToScreenChangeLogString:(id)arg1;
- (void)didVideoScreenChange:(id)arg1;
- (void)didWebSiteVideoPlay:(id)arg1;
- (void)didQuitWeMediaSubList;
- (void)didEnterWeMediaSubList;
- (void)didQuitNewsFlowMode:(id)arg1;
- (id)currentAID;
- (id)currentWMID;
- (void)didVideoFinishWithStatData:(id)arg1;
- (void)didVideoPlayFinished:(id)arg1;
- (double)currentTotalPlayTime;
- (void)updateTotalPlayTime;
- (void)didVideoPlayStateChangeTo:(id)arg1;
- (void)didVideoStartPlay:(id)arg1;
- (void)didVideoPlayedT2Times:(id)arg1;
- (void)didVideoPlayedErrorReason:(id)arg1;
- (void)clearData;
- (void)uploadLogImmediately;
- (void)releaseCurrentStatisticsItem;
- (void)releaseCurrentVideoLogItem;
- (void)dealloc;
- (id)init;

@end

