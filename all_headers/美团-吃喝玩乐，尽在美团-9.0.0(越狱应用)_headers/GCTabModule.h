//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "GCBaseModule.h"

#import "GCTabSegmentedControlDataSource-Protocol.h"
#import "GCTabSegmentedControlDelegate-Protocol.h"

@class GCTabModuleViewControllerMappingDelegate, GCTabModuleViewModel, GCTabSegmentedControl, NSArray, NSString, RACCommand, UITableViewCell;

@interface GCTabModule : GCBaseModule <GCTabSegmentedControlDelegate, GCTabSegmentedControlDataSource>
{
    _Bool _isAnimatingForSelectTab;
    GCTabModuleViewControllerMappingDelegate *_tab_mappingDelegate;
    UITableViewCell *_cellForTab;
    GCTabSegmentedControl *_tabSegmentedControl;
    NSArray *_tabInfos;
    long long _sectionForTabCell;
    RACCommand *_commandForUpdateTabInfos;
    struct CGRect _rectForTabCell;
    struct CGRect _rectForTabModule;
}

+ (Class)mappingDelegateClass;
@property(nonatomic) _Bool isAnimatingForSelectTab; // @synthesize isAnimatingForSelectTab=_isAnimatingForSelectTab;
@property(retain, nonatomic) RACCommand *commandForUpdateTabInfos; // @synthesize commandForUpdateTabInfos=_commandForUpdateTabInfos;
@property(nonatomic) struct CGRect rectForTabModule; // @synthesize rectForTabModule=_rectForTabModule;
@property(nonatomic) struct CGRect rectForTabCell; // @synthesize rectForTabCell=_rectForTabCell;
@property(nonatomic) long long sectionForTabCell; // @synthesize sectionForTabCell=_sectionForTabCell;
@property(retain, nonatomic) NSArray *tabInfos; // @synthesize tabInfos=_tabInfos;
@property(retain, nonatomic) GCTabSegmentedControl *tabSegmentedControl; // @synthesize tabSegmentedControl=_tabSegmentedControl;
@property(retain, nonatomic) UITableViewCell *cellForTab; // @synthesize cellForTab=_cellForTab;
@property(retain, nonatomic) GCTabModuleViewControllerMappingDelegate *tab_mappingDelegate; // @synthesize tab_mappingDelegate=_tab_mappingDelegate;
- (void).cxx_destruct;
- (double)tabSegmentedControl:(id)arg1 tabWidthForIndex:(long long)arg2 selected:(_Bool)arg3;
- (id)tabSegmentedControl:(id)arg1 tabButtonForIndex:(long long)arg2;
- (void)tabSegmentedControl:(id)arg1 didUpdateTabButtons:(id)arg2;
- (void)tabSegmentedControl:(id)arg1 clickedSelectedTabIndex:(long long)arg2;
- (void)tabSegmentedControl:(id)arg1 selectedTabIndex:(long long)arg2;
- (void)scrollViewDidEndScrollingAnimation:(id)arg1;
- (void)scrollViewDidEndDragging:(id)arg1 willDecelerate:(_Bool)arg2;
- (void)scrollViewDidEndDecelerating:(id)arg1;
- (void)tableView:(id)arg1 performAction:(SEL)arg2 forRowAtIndexPath:(id)arg3 withSender:(id)arg4;
- (_Bool)tableView:(id)arg1 canPerformAction:(SEL)arg2 forRowAtIndexPath:(id)arg3 withSender:(id)arg4;
- (_Bool)tableView:(id)arg1 shouldShowMenuForRowAtIndexPath:(id)arg2;
- (_Bool)tableView:(id)arg1 canEditRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 didDeselectRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 willSelectRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 didEndDisplayingCell:(id)arg2 forRowAtIndexPath:(id)arg3;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forRowAtIndexPath:(id)arg3;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (double)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 didEndDisplayingFooterView:(id)arg2 forSection:(long long)arg3;
- (void)tableView:(id)arg1 willDisplayFooterView:(id)arg2 forSection:(long long)arg3;
- (id)tableView:(id)arg1 viewForFooterInSection:(long long)arg2;
- (double)tableView:(id)arg1 heightForFooterInSection:(long long)arg2;
- (void)tableView:(id)arg1 didEndDisplayingHeaderView:(id)arg2 forSection:(long long)arg3;
- (void)tableView:(id)arg1 willDisplayHeaderView:(id)arg2 forSection:(long long)arg3;
- (id)tableView:(id)arg1 viewForHeaderInSection:(long long)arg2;
- (double)tableView:(id)arg1 heightForHeaderInSection:(long long)arg2;
- (id)tableView:(id)arg1 titleForHeaderInSection:(long long)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (void)moduleDidDisappear:(_Bool)arg1;
- (void)moduleWillDisappear:(_Bool)arg1;
- (void)moduleDidAppear:(_Bool)arg1;
- (void)moduleWillAppear:(_Bool)arg1;
- (double)heightForHeaderCellForSection:(long long)arg1;
- (id)headerCellForSection:(long long)arg1;
- (_Bool)hasHeaderCellForSection:(long long)arg1;
- (void)selectTab:(long long)arg1;
- (void)updateTabSegmentedControlStatus:(struct CGPoint)arg1 animated:(_Bool)arg2;
- (void)updateTabContainViewPosition:(struct CGPoint)arg1 animated:(_Bool)arg2;
- (void)updateTabSegmentedControl;
- (_Bool)shouldShowTab;
- (void)setupTabCell;
- (id)createTabInfosWithTabModules:(id)arg1;
- (void)dealloc;
- (unsigned long long)linkTypeInSection:(long long)arg1;
- (void)didUpdateSections;
- (void)willUpdateSections;
- (void)updateTabModules;
- (void)updateTabModuleSections;
- (void)moduleFrameDidUpdate:(struct CGRect)arg1;
- (_Bool)needModuleFrameUpdateNotice;
- (id)moduleNeedRefresh;
- (void)setupModule;
@property(readonly, nonatomic) NSArray *currentTabInfos;
- (id)standardizedModulesGroups:(id)arg1;
- (id)tabModules;
- (void)ga_logAutoCellClick:(id)arg1;
- (void)ga_logAutoCellView:(id)arg1;
- (_Bool)needAutoModuleView;
- (id)ga_userinfo;
- (id)ga_label;
- (id)gc_mge_info;
- (_Bool)shouldShow;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@property(retain, nonatomic) GCTabModuleViewModel *viewModel; // @dynamic viewModel;

@end

