//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "WTDataEngineOberverInterface-Protocol.h"

@class NSMutableArray, NSMutableDictionary, NSString, NSTimer, TradeAccountList;

@interface GJLoginVerify : NSObject <WTDataEngineOberverInterface>
{
    _Bool _userRegister;
    _Bool _showAccountList;
    _Bool _isFIDOLogin;
    _Bool _memoryPwdOption;
    _Bool _isAutoLogin;
    long long _loginType;
    NSString *_mobileStr;
    NSString *_pwdStr;
    NSString *_tmpmobileStr;
    double _appLaunchTime;
    double _launchToResgisteTime;
    NSMutableArray *_phoneNumberInputInterval;
    NSMutableArray *_phoneNumberInputIntervalByCall;
    NSString *_firstRegisterNrng;
    NSMutableDictionary *_marginMatchDic;
    NSString *_popularizeCode;
    NSString *_qrPopularizeCode;
    long long _registerType;
    NSString *_accountTypeName;
    NSString *_memoryTmpPwd;
    NSMutableDictionary *_memoryPwdCache;
    unsigned long long _DReqTimeoutTimes;
    NSTimer *_timerOut;
    CDUnknownBlockType _powerCompletion;
    CDUnknownBlockType _autoRegisterCompletion;
    TradeAccountList *_tradeAccountList;
    CDUnknownBlockType _requestDSuccessBlock;
    CDUnknownBlockType _requestCloginSuccess;
    CDUnknownBlockType _requestCloginFailure;
    CDUnknownBlockType _loginCompletionBlock;
    CDUnknownBlockType _loginLevel2AuthorizeBlock;
    long long _failCount;
    CDUnknownBlockType _autoLoginCompletion;
}

+ (_Bool)getIsUpdateLocalAccountList;
+ (void)saveIsUpdateLocalAccountList:(_Bool)arg1;
+ (void)removeLastestAccountInfo;
+ (id)getLastestAccountInfo;
+ (void)saveLastestAccountInfo:(id)arg1;
+ (void)removeAllAccountListInfoPlist;
+ (void)saveAllAccountListInfoToPlist:(id)arg1;
+ (void)save13008ToPlist:(id)arg1;
+ (id)transferTradeAccountFromDictionary:(id)arg1;
+ (id)transferTradeAccountList:(id)arg1;
+ (void)readAllAccountListInfoFromPlist;
+ (void)saveAccount:(id)arg1;
+ (void)doSwitchToLoginWithType:(int)arg1 completion:(CDUnknownBlockType)arg2;
+ (void)loginWithAccount:(id)arg1 success:(CDUnknownBlockType)arg2 failure:(CDUnknownBlockType)arg3;
+ (void)requestPowerCompletion:(CDUnknownBlockType)arg1;
+ (void)requestMarginMatchAccount;
+ (void)removeMarginMatchDic;
+ (void)clearMemoryAccountInfoCache;
+ (void)clearMemoryAccountInfoSetting;
+ (void)logout;
+ (id)sharedLoginNavi;
+ (id)sharedInstance;
@property(copy, nonatomic) CDUnknownBlockType autoLoginCompletion; // @synthesize autoLoginCompletion=_autoLoginCompletion;
@property(nonatomic) _Bool isAutoLogin; // @synthesize isAutoLogin=_isAutoLogin;
@property(nonatomic) long long failCount; // @synthesize failCount=_failCount;
@property(copy, nonatomic) CDUnknownBlockType loginLevel2AuthorizeBlock; // @synthesize loginLevel2AuthorizeBlock=_loginLevel2AuthorizeBlock;
@property(copy, nonatomic) CDUnknownBlockType loginCompletionBlock; // @synthesize loginCompletionBlock=_loginCompletionBlock;
@property(copy, nonatomic) CDUnknownBlockType requestCloginFailure; // @synthesize requestCloginFailure=_requestCloginFailure;
@property(copy, nonatomic) CDUnknownBlockType requestCloginSuccess; // @synthesize requestCloginSuccess=_requestCloginSuccess;
@property(copy, nonatomic) CDUnknownBlockType requestDSuccessBlock; // @synthesize requestDSuccessBlock=_requestDSuccessBlock;
@property(retain, nonatomic) TradeAccountList *tradeAccountList; // @synthesize tradeAccountList=_tradeAccountList;
@property(copy, nonatomic) CDUnknownBlockType autoRegisterCompletion; // @synthesize autoRegisterCompletion=_autoRegisterCompletion;
@property(copy, nonatomic) CDUnknownBlockType powerCompletion; // @synthesize powerCompletion=_powerCompletion;
@property(retain, nonatomic) NSTimer *timerOut; // @synthesize timerOut=_timerOut;
@property(nonatomic) unsigned long long DReqTimeoutTimes; // @synthesize DReqTimeoutTimes=_DReqTimeoutTimes;
@property(nonatomic) _Bool memoryPwdOption; // @synthesize memoryPwdOption=_memoryPwdOption;
@property(retain, nonatomic) NSMutableDictionary *memoryPwdCache; // @synthesize memoryPwdCache=_memoryPwdCache;
@property(retain, nonatomic) NSString *memoryTmpPwd; // @synthesize memoryTmpPwd=_memoryTmpPwd;
@property(copy, nonatomic) NSString *accountTypeName; // @synthesize accountTypeName=_accountTypeName;
@property(nonatomic) _Bool isFIDOLogin; // @synthesize isFIDOLogin=_isFIDOLogin;
@property(nonatomic) long long registerType; // @synthesize registerType=_registerType;
@property(copy, nonatomic) NSString *qrPopularizeCode; // @synthesize qrPopularizeCode=_qrPopularizeCode;
@property(copy, nonatomic) NSString *popularizeCode; // @synthesize popularizeCode=_popularizeCode;
@property(retain, nonatomic) NSMutableDictionary *marginMatchDic; // @synthesize marginMatchDic=_marginMatchDic;
@property(nonatomic) _Bool showAccountList; // @synthesize showAccountList=_showAccountList;
@property(copy, nonatomic) NSString *firstRegisterNrng; // @synthesize firstRegisterNrng=_firstRegisterNrng;
@property(retain, nonatomic) NSMutableArray *phoneNumberInputIntervalByCall; // @synthesize phoneNumberInputIntervalByCall=_phoneNumberInputIntervalByCall;
@property(retain, nonatomic) NSMutableArray *phoneNumberInputInterval; // @synthesize phoneNumberInputInterval=_phoneNumberInputInterval;
@property(nonatomic) double launchToResgisteTime; // @synthesize launchToResgisteTime=_launchToResgisteTime;
@property(nonatomic) double appLaunchTime; // @synthesize appLaunchTime=_appLaunchTime;
@property(copy, nonatomic) NSString *tmpmobileStr; // @synthesize tmpmobileStr=_tmpmobileStr;
@property(copy, nonatomic) NSString *pwdStr; // @synthesize pwdStr=_pwdStr;
@property(copy, nonatomic) NSString *mobileStr; // @synthesize mobileStr=_mobileStr;
@property(nonatomic) _Bool userRegister; // @synthesize userRegister=_userRegister;
@property(nonatomic) long long loginType; // @synthesize loginType=_loginType;
- (void).cxx_destruct;
- (void)showDisclaimer;
- (void)showMarginAccountLoginTip;
- (_Bool)isNum:(id)arg1;
- (_Bool)checkNeedAlertOpenFIDO:(id)arg1;
- (void)totalLoginFailTime;
- (void)saveLoginSuccessTimeWithAccount:(id)arg1;
- (id)getIdentifyCode;
- (void)sendTalkingDataWithSuccess:(_Bool)arg1 registerType:(long long)arg2;
- (void)showFailTimeErrorWithAccount:(id)arg1;
- (_Bool)checkFailTimeWithAccount:(id)arg1;
- (void)saveFailTimeWithAccount:(id)arg1;
- (void)cleanFailTimeWithAccount:(id)arg1 all:(_Bool)arg2;
- (void)receiveTradeDDNoti;
- (void)showDataEngineMaxError;
- (void)responseC:(int)arg1 userobj:(void *)arg2;
- (void)requestNickNameAndOpenNrng:(id)arg1 requestBlock:(CDUnknownBlockType)arg2;
- (void)sendIsReqisterNickname:(CDUnknownBlockType)arg1;
- (void)setAnimationWithViewController:(id)arg1;
- (void)enterTradeMenuOfRZRQ;
- (void)enterTradeMenu;
- (void)autoVerifyMobile:(id)arg1 code:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)presentViewController:(id)arg1;
- (void)requestUserCodeAndNickName:(id)arg1;
- (void)requestLevel2AuthorityInfo;
- (void)jumpLoginPageOrNot;
- (void)bindAccountisunicheckFromRegisterPage:(_Bool)arg1;
- (void)handleSendDResponseErrorType:(long long)arg1;
- (void)handleSendDReponseSucess;
- (void)responseD:(int)arg1 userobj:(void *)arg2 judgekey:(int)arg3;
- (void)sendD;
- (void)sendDsuccess:(CDUnknownBlockType)arg1;
- (void)processTimeout:(id)arg1;
- (id)getRegisterJsonInfo:(_Bool)arg1;
- (void)verifyDoHideHud;
- (void)sendLoginSuccessNotification;
- (void)clearMemoryCache;
- (void)dissmissPresentNRNGLoginPage;
- (void)dismissPresentLoginPage;
- (void)backPresentLogin;
- (void)makeLoginRequest:(id)arg1 accountArr:(id)arg2 model:(id)arg3 pwd:(id)arg4;
- (void)loginRequestWithAccount:(id)arg1 model:(id)arg2 pwd:(id)arg3;
- (void)loginDZH:(id)arg1 pwd:(id)arg2 isYHT:(_Bool)arg3 model:(id)arg4;
- (void)loginYHTWithAccountListModel:(id)arg1 pwd:(id)arg2;
- (id)findAccountFromList:(id)arg1 account:(id)arg2;
- (void)loginWithAccountListModel:(id)arg1 pwd:(id)arg2 completeLogin:(CDUnknownBlockType)arg3;
- (void)presentNickNameRegisterVC;
- (void)presentLogin;
- (void)presentLoginAddAcountCompleteLogin:(CDUnknownBlockType)arg1;
- (void)presentRegisterPhoneNumberCompletion:(CDUnknownBlockType)arg1;
- (void)presentLoginCompleteLogin:(CDUnknownBlockType)arg1;
- (void)presentLoginWithGJLoginType:(long long)arg1 completeLogin:(CDUnknownBlockType)arg2;
- (void)presentLoginWithGJLoginType:(long long)arg1 completeLogin:(CDUnknownBlockType)arg2 level2AuthorizeCompletion:(CDUnknownBlockType)arg3;
- (id)init;
- (void)dealloc;

@end

