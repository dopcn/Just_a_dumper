//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class NSArray, NSError, NSInputStream, NSMutableArray, NSMutableData, NSOutputStream, NSString, NSURLRequest, VC_Delegate, VC_Frame, VC_OpCode, VC_UTF8, VC_WebSocketReadyState;
@protocol OS_dispatch_queue;

@interface VC_WebSocket : NSObject
{
    int defaultMaxWindowBits;
    int clientMaxWindowBits;
    int serverMaxWindowBits;
    int wsid;
    struct _opaque_pthread_mutex_t mutex;
    NSURLRequest *request;
    NSArray *subProtocols;
    NSMutableArray *frames;
    VC_Delegate *delegate;
    char *outputBytes;
    int outputBytesSize;
    int outputBytesStart;
    int outputBytesLength;
    char *inputBytes;
    int inputBytesSize;
    int inputBytesStart;
    int inputBytesLength;
    NSObject<OS_dispatch_queue> *_eventQueue;
    NSString *_subProtocol;
    CDStruct_7a9bb36e _compression;
    int _services;
    VC_WebSocketReadyState *_readyState;
    int stage;
    _Bool exit;
    NSInputStream *rd;
    NSOutputStream *wr;
    _Bool atEnd;
    unsigned short closeCode;
    NSString *closeReason;
    _Bool closeClean;
    _Bool closeFinal;
    NSError *finalError;
    _Bool readStateSaved;
    VC_Frame *readStateFrame;
    _Bool readStateFinished;
    VC_Frame *leaderFrame;
    _Bool fragStateSaved;
    int fragStatePosition;
    _Bool fragStateInflate;
    int fragStateLen;
    _Bool fragStateFin;
    VC_OpCode *fragStateCode;
    VC_OpCode *fragStateLeaderCode;
    VC_UTF8 *fragStateUTF8;
    NSMutableData *fragStatePayload;
    unsigned short fragStateStatusCode;
    int fragStateHeaderLen;
    NSMutableData *reusedPayload;
    CDUnknownBlockType _open;
    CDUnknownBlockType _close;
    CDUnknownBlockType _error;
    CDUnknownBlockType _message;
    CDUnknownBlockType _pong;
    CDUnknownBlockType _end;
}

@property(copy, nonatomic) CDUnknownBlockType end; // @synthesize end=_end;
@property(copy, nonatomic) CDUnknownBlockType pong; // @synthesize pong=_pong;
@property(copy, nonatomic) CDUnknownBlockType message; // @synthesize message=_message;
@property(copy, nonatomic) CDUnknownBlockType error; // @synthesize error=_error;
@property(copy, nonatomic) CDUnknownBlockType close; // @synthesize close=_close;
@property(copy, nonatomic) CDUnknownBlockType open; // @synthesize open=_open;
- (void).cxx_destruct;
- (_Bool)isEqual:(id)arg1;
- (void)ping;
- (void)sendZip:(id)arg1;
- (void)sendTxt:(id)arg1;
- (void)sendFrame:(id)arg1;
- (void)close:(id)arg1 reason:(id)arg2;
- (void)writeFrame:(id)arg1 error:(id *)arg2;
- (id)readFrameFragment:(id)arg1 error:(id *)arg2;
- (void)readResponse:(id *)arg1;
- (void)write:(char *)arg1 length:(int)arg2 error:(id *)arg3;
- (void)openConn:(id *)arg1;
- (void)createSocket:(id)arg1;
- (void)closeConn;
- (id)readFrame:(id *)arg1;
- (void)fire:(CDUnknownBlockType)arg1;
- (void)stepOutputFrames:(id *)arg1;
- (void)stepStreamErrors:(id *)arg1;
- (void)stepBuffers:(id *)arg1;
- (void)step;
- (_Bool)dirty;
- (void)unlock;
- (void)lock;
- (void)dealloc;
- (id)initWithRequest:(id)arg1 subProtocols:(id)arg2;
- (id)init;
- (id)initWithURL:(id)arg1 subProtocol:(id)arg2;
- (id)initWithURL:(id)arg1 subProtos:(id)arg2;
- (id)initWithURL:(id)arg1;
@property(readonly, nonatomic) int hashValue;
- (void)setPrivateReadyState:(id)arg1;
- (id)privateReadyState;
@property(readonly, copy, nonatomic) VC_WebSocketReadyState *readyState;
- (void)setEventQueue:(id)arg1;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *eventQueue;
@property(nonatomic) int services;
@property(nonatomic) CDStruct_7a9bb36e compression;
- (void)setPrivateSubProtocol:(id)arg1;
- (id)privateSubProtocol;
@property(readonly, copy, nonatomic) NSString *url;

@end

