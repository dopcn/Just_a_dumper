//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <UIKit/UICollectionViewCell.h>

#import "KWBasicDrawOperationDelegate-Protocol.h"
#import "KWDisplayImageViewDelegate-Protocol.h"
#import "WPPNotesPageViewDelegate-Protocol.h"

@class KWBasicDrawOperation, KWDisplayImageView, KWImageActivityIndicatorView, KWScrollView, NSString, UIImageView, UILabel, WPPReadModeNotesPageView, WPSWatermarkView;
@protocol KWBasicDrawOperationDelegate, KWReadModeCellDelegate;

@interface KWReadModeCell : UICollectionViewCell <WPPNotesPageViewDelegate, KWBasicDrawOperationDelegate, KWDisplayImageViewDelegate>
{
    struct ImageDataMng m_hitImgDataMng;
    _Bool _isSelected;
    _Bool _bShowRemark;
    KWDisplayImageView *_displayImageView;
    KWScrollView *_scrollView;
    UILabel *_indexLabel;
    long long _index;
    KWBasicDrawOperation *_operation;
    UIImageView *_selectedImageView;
    id <KWBasicDrawOperationDelegate> _slideDelegate;
    id <KWReadModeCellDelegate> _readModeCellDelegate;
    long long _slideId;
    WPPReadModeNotesPageView *_remarkView;
    UIImageView *_markImageView;
    KWImageActivityIndicatorView *_activityIndicatorView;
    WPSWatermarkView *_watermarkView;
    struct CGSize _displaySize;
    struct CGSize _drawSize;
    struct CGSize _cellSize;
}

@property(retain, nonatomic) WPSWatermarkView *watermarkView; // @synthesize watermarkView=_watermarkView;
@property(retain, nonatomic) KWImageActivityIndicatorView *activityIndicatorView; // @synthesize activityIndicatorView=_activityIndicatorView;
@property(retain, nonatomic) UIImageView *markImageView; // @synthesize markImageView=_markImageView;
@property(retain, nonatomic) WPPReadModeNotesPageView *remarkView; // @synthesize remarkView=_remarkView;
@property(nonatomic) _Bool bShowRemark; // @synthesize bShowRemark=_bShowRemark;
@property(nonatomic) long long slideId; // @synthesize slideId=_slideId;
@property(nonatomic) id <KWReadModeCellDelegate> readModeCellDelegate; // @synthesize readModeCellDelegate=_readModeCellDelegate;
@property(nonatomic) id <KWBasicDrawOperationDelegate> slideDelegate; // @synthesize slideDelegate=_slideDelegate;
@property(nonatomic) struct CGSize cellSize; // @synthesize cellSize=_cellSize;
@property(nonatomic) _Bool isSelected; // @synthesize isSelected=_isSelected;
@property(retain, nonatomic) UIImageView *selectedImageView; // @synthesize selectedImageView=_selectedImageView;
@property(retain, nonatomic) KWBasicDrawOperation *operation; // @synthesize operation=_operation;
@property(nonatomic) struct CGSize drawSize; // @synthesize drawSize=_drawSize;
@property(nonatomic) struct CGSize displaySize; // @synthesize displaySize=_displaySize;
@property(nonatomic) long long index; // @synthesize index=_index;
@property(retain, nonatomic) UILabel *indexLabel; // @synthesize indexLabel=_indexLabel;
@property(retain, nonatomic) KWScrollView *scrollView; // @synthesize scrollView=_scrollView;
@property(retain, nonatomic) KWDisplayImageView *displayImageView; // @synthesize displayImageView=_displayImageView;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)setupIndexLabel;
- (void)flashRemarkScrollIndicatorsIfNeed;
- (void)_resetNotesPageViewContentSize:(struct CGSize)arg1;
- (void)resetNotesPageViewContentSize:(struct CGSize)arg1;
- (void)KWBasicDrawOperation:(id)arg1 isFinished:(_Bool)arg2 finishedImage:(id)arg3;
- (void)loadingThumbnailFinished;
- (void)_loadingThumbnail;
- (void)loadingThumbnail;
- (id)getOperationName;
- (void)startOperationAndResetFrame:(id)arg1 needSetActived:(_Bool)arg2;
- (void)drawActionWithNeedSetActived:(_Bool)arg1;
- (id)getCacheName;
- (void)finishDrawing;
- (void)cancelLastDrawAction;
- (id)getCacheLowResolutionFileName;
- (struct ImageDataMng *)imageDataMng;
- (void)setFrame:(struct CGRect)arg1;
- (void)initView;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)releaseResource;
- (void)forceClose;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

