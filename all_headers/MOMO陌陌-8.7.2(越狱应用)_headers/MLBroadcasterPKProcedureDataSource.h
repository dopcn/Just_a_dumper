//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

@class MLPKPanelConfigure, NSArray, NSString, NSTimer;
@protocol MLBroadcasterPKProcedureDataSourceDelegate;

@interface MLBroadcasterPKProcedureDataSource : NSObject
{
    _Bool _linkScreenPkMode;
    unsigned char _isRadioRoom;
    int _pkProcessingDownCounter;
    NSString *_roomId;
    NSString *_starId;
    NSString *_nickName;
    NSString *_starAvatar;
    NSString *_pkRemoteNickName;
    NSString *_pkRemoteAvatarURL;
    NSString *_pkPromotedAction;
    NSString *_subtitle;
    long long _residueUserCount;
    NSArray *_avatarGUIDs;
    long long _survivorBeginRemainSeconds;
    MLPKPanelConfigure *_pkPanelConfigure;
    unsigned long long _initialPKType;
    unsigned long long _broadcasterPKType;
    unsigned long long _pkProcedureStatus;
    id <MLBroadcasterPKProcedureDataSourceDelegate> _delegate;
    CDUnknownBlockType _pkProcessingDownCounterEndHandler;
    CDUnknownBlockType _pkProcessingCountingDownHandler;
    CDUnknownBlockType _pkProcessingStartCountingDownHandler;
    CDUnknownBlockType _pkSuccessHandler;
    CDUnknownBlockType _pkEndHandler;
    CDUnknownBlockType _refusePKInviteSuccessHandler;
    CDUnknownBlockType _pkPromoteHandler;
    CDUnknownBlockType _survivorBeginHandler;
    CDUnknownBlockType _survivorQuitHandler;
    CDUnknownBlockType _survivorBeginRemainTimeUpdating;
    CDUnknownBlockType _pkPanelConfigureSuccessHandler;
    CDUnknownBlockType _pkPanelConfigureFailureHandler;
    CDUnknownBlockType _applyRandomPKSuccessHandler;
    CDUnknownBlockType _applyRandomPKFailureHandler;
    CDUnknownBlockType _cancelApplyRandomPKSuccessHandler;
    CDUnknownBlockType _cancelApplyRandomPKFailureHandler;
    CDUnknownBlockType _setAutoRandomPKSuccessHandler;
    CDUnknownBlockType _setAutoRandomPKFailureHandler;
    CDUnknownBlockType _getAvilableFriendsSuccessHandler;
    CDUnknownBlockType _getAvilableFriendsFailureHandler;
    CDUnknownBlockType _applyFriendPKSuccessHandler;
    CDUnknownBlockType _applyFriendPKFailureHandler;
    CDUnknownBlockType _cancelApplyFriendPKSuccessHandler;
    CDUnknownBlockType _cancelApplyFriendPKFailureHandler;
    CDUnknownBlockType _confirmFriendPKInvitationSuccessHandler;
    CDUnknownBlockType _confirmFriendPKInvitationFailureHandler;
    CDUnknownBlockType _refuseFriendPKInvitationSuccessHandler;
    CDUnknownBlockType _refuseFriendPKInvitationFailureHandler;
    CDUnknownBlockType _todayRefuseFriendPKInvitationSuccessHandler;
    CDUnknownBlockType _todayRefuseFriendPKInvitationFailureHandler;
    CDUnknownBlockType _setAgreePKSuccessHandler;
    CDUnknownBlockType _setAgreePKFailureHandler;
    CDUnknownBlockType _applyThumbPKSuccessHandler;
    CDUnknownBlockType _applyThumbPKFailureHandler;
    CDUnknownBlockType _setButtonStatusSuccessHandler;
    CDUnknownBlockType _setButtonStatusFailureHandler;
    CDUnknownBlockType _sendSurvivorJudgeRequestSuccess;
    CDUnknownBlockType _sendSurvivorJudgeRequestFailure;
    CDUnknownBlockType _sendSurvivorPKRequestSuccess;
    CDUnknownBlockType _sendSurvivorPKRequestFailure;
    CDUnknownBlockType _sendCancelSurvivorPKRequestSuccess;
    CDUnknownBlockType _sendCancelSurvivorPKRequestFailure;
    CDUnknownBlockType _sendGetSurvivorPKAvatarsSuccess;
    CDUnknownBlockType _sendGetSurvivorPKAvatarsFailure;
    CDUnknownBlockType _sendQuitSurvivorPKRequestSuccess;
    CDUnknownBlockType _sendQuitSurvivorPKRequestFailure;
    NSTimer *_pkProcessingCounterDownTimer;
    NSTimer *_pkSurvivorQueuingRemainTimer;
}

@property(retain, nonatomic) NSTimer *pkSurvivorQueuingRemainTimer; // @synthesize pkSurvivorQueuingRemainTimer=_pkSurvivorQueuingRemainTimer;
@property(nonatomic) int pkProcessingDownCounter; // @synthesize pkProcessingDownCounter=_pkProcessingDownCounter;
@property(retain, nonatomic) NSTimer *pkProcessingCounterDownTimer; // @synthesize pkProcessingCounterDownTimer=_pkProcessingCounterDownTimer;
@property(copy, nonatomic) CDUnknownBlockType sendQuitSurvivorPKRequestFailure; // @synthesize sendQuitSurvivorPKRequestFailure=_sendQuitSurvivorPKRequestFailure;
@property(copy, nonatomic) CDUnknownBlockType sendQuitSurvivorPKRequestSuccess; // @synthesize sendQuitSurvivorPKRequestSuccess=_sendQuitSurvivorPKRequestSuccess;
@property(copy, nonatomic) CDUnknownBlockType sendGetSurvivorPKAvatarsFailure; // @synthesize sendGetSurvivorPKAvatarsFailure=_sendGetSurvivorPKAvatarsFailure;
@property(copy, nonatomic) CDUnknownBlockType sendGetSurvivorPKAvatarsSuccess; // @synthesize sendGetSurvivorPKAvatarsSuccess=_sendGetSurvivorPKAvatarsSuccess;
@property(copy, nonatomic) CDUnknownBlockType sendCancelSurvivorPKRequestFailure; // @synthesize sendCancelSurvivorPKRequestFailure=_sendCancelSurvivorPKRequestFailure;
@property(copy, nonatomic) CDUnknownBlockType sendCancelSurvivorPKRequestSuccess; // @synthesize sendCancelSurvivorPKRequestSuccess=_sendCancelSurvivorPKRequestSuccess;
@property(copy, nonatomic) CDUnknownBlockType sendSurvivorPKRequestFailure; // @synthesize sendSurvivorPKRequestFailure=_sendSurvivorPKRequestFailure;
@property(copy, nonatomic) CDUnknownBlockType sendSurvivorPKRequestSuccess; // @synthesize sendSurvivorPKRequestSuccess=_sendSurvivorPKRequestSuccess;
@property(copy, nonatomic) CDUnknownBlockType sendSurvivorJudgeRequestFailure; // @synthesize sendSurvivorJudgeRequestFailure=_sendSurvivorJudgeRequestFailure;
@property(copy, nonatomic) CDUnknownBlockType sendSurvivorJudgeRequestSuccess; // @synthesize sendSurvivorJudgeRequestSuccess=_sendSurvivorJudgeRequestSuccess;
@property(copy, nonatomic) CDUnknownBlockType setButtonStatusFailureHandler; // @synthesize setButtonStatusFailureHandler=_setButtonStatusFailureHandler;
@property(copy, nonatomic) CDUnknownBlockType setButtonStatusSuccessHandler; // @synthesize setButtonStatusSuccessHandler=_setButtonStatusSuccessHandler;
@property(copy, nonatomic) CDUnknownBlockType applyThumbPKFailureHandler; // @synthesize applyThumbPKFailureHandler=_applyThumbPKFailureHandler;
@property(copy, nonatomic) CDUnknownBlockType applyThumbPKSuccessHandler; // @synthesize applyThumbPKSuccessHandler=_applyThumbPKSuccessHandler;
@property(copy, nonatomic) CDUnknownBlockType setAgreePKFailureHandler; // @synthesize setAgreePKFailureHandler=_setAgreePKFailureHandler;
@property(copy, nonatomic) CDUnknownBlockType setAgreePKSuccessHandler; // @synthesize setAgreePKSuccessHandler=_setAgreePKSuccessHandler;
@property(copy, nonatomic) CDUnknownBlockType todayRefuseFriendPKInvitationFailureHandler; // @synthesize todayRefuseFriendPKInvitationFailureHandler=_todayRefuseFriendPKInvitationFailureHandler;
@property(copy, nonatomic) CDUnknownBlockType todayRefuseFriendPKInvitationSuccessHandler; // @synthesize todayRefuseFriendPKInvitationSuccessHandler=_todayRefuseFriendPKInvitationSuccessHandler;
@property(copy, nonatomic) CDUnknownBlockType refuseFriendPKInvitationFailureHandler; // @synthesize refuseFriendPKInvitationFailureHandler=_refuseFriendPKInvitationFailureHandler;
@property(copy, nonatomic) CDUnknownBlockType refuseFriendPKInvitationSuccessHandler; // @synthesize refuseFriendPKInvitationSuccessHandler=_refuseFriendPKInvitationSuccessHandler;
@property(copy, nonatomic) CDUnknownBlockType confirmFriendPKInvitationFailureHandler; // @synthesize confirmFriendPKInvitationFailureHandler=_confirmFriendPKInvitationFailureHandler;
@property(copy, nonatomic) CDUnknownBlockType confirmFriendPKInvitationSuccessHandler; // @synthesize confirmFriendPKInvitationSuccessHandler=_confirmFriendPKInvitationSuccessHandler;
@property(copy, nonatomic) CDUnknownBlockType cancelApplyFriendPKFailureHandler; // @synthesize cancelApplyFriendPKFailureHandler=_cancelApplyFriendPKFailureHandler;
@property(copy, nonatomic) CDUnknownBlockType cancelApplyFriendPKSuccessHandler; // @synthesize cancelApplyFriendPKSuccessHandler=_cancelApplyFriendPKSuccessHandler;
@property(copy, nonatomic) CDUnknownBlockType applyFriendPKFailureHandler; // @synthesize applyFriendPKFailureHandler=_applyFriendPKFailureHandler;
@property(copy, nonatomic) CDUnknownBlockType applyFriendPKSuccessHandler; // @synthesize applyFriendPKSuccessHandler=_applyFriendPKSuccessHandler;
@property(copy, nonatomic) CDUnknownBlockType getAvilableFriendsFailureHandler; // @synthesize getAvilableFriendsFailureHandler=_getAvilableFriendsFailureHandler;
@property(copy, nonatomic) CDUnknownBlockType getAvilableFriendsSuccessHandler; // @synthesize getAvilableFriendsSuccessHandler=_getAvilableFriendsSuccessHandler;
@property(copy, nonatomic) CDUnknownBlockType setAutoRandomPKFailureHandler; // @synthesize setAutoRandomPKFailureHandler=_setAutoRandomPKFailureHandler;
@property(copy, nonatomic) CDUnknownBlockType setAutoRandomPKSuccessHandler; // @synthesize setAutoRandomPKSuccessHandler=_setAutoRandomPKSuccessHandler;
@property(copy, nonatomic) CDUnknownBlockType cancelApplyRandomPKFailureHandler; // @synthesize cancelApplyRandomPKFailureHandler=_cancelApplyRandomPKFailureHandler;
@property(copy, nonatomic) CDUnknownBlockType cancelApplyRandomPKSuccessHandler; // @synthesize cancelApplyRandomPKSuccessHandler=_cancelApplyRandomPKSuccessHandler;
@property(copy, nonatomic) CDUnknownBlockType applyRandomPKFailureHandler; // @synthesize applyRandomPKFailureHandler=_applyRandomPKFailureHandler;
@property(copy, nonatomic) CDUnknownBlockType applyRandomPKSuccessHandler; // @synthesize applyRandomPKSuccessHandler=_applyRandomPKSuccessHandler;
@property(copy, nonatomic) CDUnknownBlockType pkPanelConfigureFailureHandler; // @synthesize pkPanelConfigureFailureHandler=_pkPanelConfigureFailureHandler;
@property(copy, nonatomic) CDUnknownBlockType pkPanelConfigureSuccessHandler; // @synthesize pkPanelConfigureSuccessHandler=_pkPanelConfigureSuccessHandler;
@property(copy, nonatomic) CDUnknownBlockType survivorBeginRemainTimeUpdating; // @synthesize survivorBeginRemainTimeUpdating=_survivorBeginRemainTimeUpdating;
@property(copy, nonatomic) CDUnknownBlockType survivorQuitHandler; // @synthesize survivorQuitHandler=_survivorQuitHandler;
@property(copy, nonatomic) CDUnknownBlockType survivorBeginHandler; // @synthesize survivorBeginHandler=_survivorBeginHandler;
@property(copy, nonatomic) CDUnknownBlockType pkPromoteHandler; // @synthesize pkPromoteHandler=_pkPromoteHandler;
@property(copy, nonatomic) CDUnknownBlockType refusePKInviteSuccessHandler; // @synthesize refusePKInviteSuccessHandler=_refusePKInviteSuccessHandler;
@property(copy, nonatomic) CDUnknownBlockType pkEndHandler; // @synthesize pkEndHandler=_pkEndHandler;
@property(copy, nonatomic) CDUnknownBlockType pkSuccessHandler; // @synthesize pkSuccessHandler=_pkSuccessHandler;
@property(copy, nonatomic) CDUnknownBlockType pkProcessingStartCountingDownHandler; // @synthesize pkProcessingStartCountingDownHandler=_pkProcessingStartCountingDownHandler;
@property(copy, nonatomic) CDUnknownBlockType pkProcessingCountingDownHandler; // @synthesize pkProcessingCountingDownHandler=_pkProcessingCountingDownHandler;
@property(copy, nonatomic) CDUnknownBlockType pkProcessingDownCounterEndHandler; // @synthesize pkProcessingDownCounterEndHandler=_pkProcessingDownCounterEndHandler;
@property(nonatomic) __weak id <MLBroadcasterPKProcedureDataSourceDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) unsigned long long pkProcedureStatus; // @synthesize pkProcedureStatus=_pkProcedureStatus;
@property(nonatomic) unsigned long long broadcasterPKType; // @synthesize broadcasterPKType=_broadcasterPKType;
@property(nonatomic) unsigned long long initialPKType; // @synthesize initialPKType=_initialPKType;
@property(retain, nonatomic) MLPKPanelConfigure *pkPanelConfigure; // @synthesize pkPanelConfigure=_pkPanelConfigure;
@property(nonatomic) unsigned char isRadioRoom; // @synthesize isRadioRoom=_isRadioRoom;
@property(nonatomic) long long survivorBeginRemainSeconds; // @synthesize survivorBeginRemainSeconds=_survivorBeginRemainSeconds;
@property(retain, nonatomic) NSArray *avatarGUIDs; // @synthesize avatarGUIDs=_avatarGUIDs;
@property(nonatomic) long long residueUserCount; // @synthesize residueUserCount=_residueUserCount;
@property(nonatomic, getter=isLinkScreenPkMode) _Bool linkScreenPkMode; // @synthesize linkScreenPkMode=_linkScreenPkMode;
@property(copy, nonatomic) NSString *subtitle; // @synthesize subtitle=_subtitle;
@property(copy, nonatomic) NSString *pkPromotedAction; // @synthesize pkPromotedAction=_pkPromotedAction;
@property(copy, nonatomic) NSString *pkRemoteAvatarURL; // @synthesize pkRemoteAvatarURL=_pkRemoteAvatarURL;
@property(copy, nonatomic) NSString *pkRemoteNickName; // @synthesize pkRemoteNickName=_pkRemoteNickName;
@property(copy, nonatomic) NSString *starAvatar; // @synthesize starAvatar=_starAvatar;
@property(copy, nonatomic) NSString *nickName; // @synthesize nickName=_nickName;
@property(copy, nonatomic) NSString *starId; // @synthesize starId=_starId;
@property(copy, nonatomic) NSString *roomId; // @synthesize roomId=_roomId;
- (void).cxx_destruct;
- (void)didReceiveSurvivorPKEndedObject:(id)arg1 groupObject:(id)arg2;
- (void)didReceiveSurvivorPKKickedObject:(id)arg1 groupObject:(id)arg2;
- (void)didReceiveSurvivorPKPromoteObject:(id)arg1 groupObject:(id)arg2;
- (void)didReceiveSurvivorPKLinkSuccessObject:(id)arg1 groupObject:(id)arg2;
- (void)sendGetSurvivorPKAvatarsFailure:(id)arg1;
- (void)sendGetSurvivorPKAvatarsSuccess:(id)arg1;
- (void)sendGetSurvivorPKAvatarsSuccess:(CDUnknownBlockType)arg1 failure:(CDUnknownBlockType)arg2;
- (void)sendQuitSurvivorPKRequestFailed:(id)arg1;
- (void)sendQuitSurvivorPKRequestSuccess:(id)arg1;
- (void)sendQuitSurvivorPKRequestSuccess:(CDUnknownBlockType)arg1 failure:(CDUnknownBlockType)arg2;
- (void)sendCancelSurvivorPKRequestFailed:(id)arg1;
- (void)sendCancelSurvivorPKRequestSuccess:(id)arg1;
- (void)sendCancelSurvivorPKRequestSuccess:(CDUnknownBlockType)arg1 failure:(CDUnknownBlockType)arg2;
- (void)sendSurvivorPKRequestFailed:(id)arg1;
- (void)updateSurvivorBeginRemainSeconds;
- (void)sendSurvivorPKRequestSuccess:(id)arg1;
- (void)sendSurvivorPKRequestSuccess:(CDUnknownBlockType)arg1 failure:(CDUnknownBlockType)arg2;
- (void)sendSurvivorJudgeRequestFailed:(id)arg1;
- (void)sendSurvivorJudgeRequestSuccess:(id)arg1;
- (void)sendSurvivorJudgeRequestSuccess:(CDUnknownBlockType)arg1 failure:(CDUnknownBlockType)arg2;
- (void)didReceiveUpdatePKFriendInvitingNumber:(id)arg1;
- (void)pkLinkSuccess:(id)arg1;
- (void)pkArenaLinkSuccess:(id)arg1 withGroupInfo:(id)arg2;
- (void)pkLinkStop:(id)arg1 withGroupInfo:(id)arg2;
- (void)pkArenaLinkStop:(id)arg1 withGroupInfo:(id)arg2;
- (void)pkArenaLinkRefuse:(id)arg1 withGroupInfo:(id)arg2;
- (void)pkArenaLinkCancelApply:(id)arg1 withGroupInfo:(id)arg2;
- (void)pkArenaLinkApply:(id)arg1 withGroupInfo:(id)arg2;
- (void)inviteNumberDecrement;
- (void)inviteNumberIncrement;
- (void)setInviteNumber:(long long)arg1;
- (void)applyThumbPKError:(id)arg1;
- (void)applyThumbPKFail:(id)arg1;
- (void)applyThumbPKSuccess:(id)arg1;
- (void)applyThumbPKSuccess:(CDUnknownBlockType)arg1 failure:(CDUnknownBlockType)arg2;
- (void)setAgressPKError:(id)arg1;
- (void)setAgressPKFail:(id)arg1;
- (void)setAgressPKSuccess:(id)arg1;
- (void)setAgressPK:(_Bool)arg1 success:(CDUnknownBlockType)arg2 failure:(CDUnknownBlockType)arg3;
- (void)setPKButtonStatusError:(id)arg1;
- (void)setPKButtonStatusFail:(id)arg1;
- (void)setPKButtonStatusSuccess:(id)arg1;
- (void)setPKButtonStatus:(unsigned long long)arg1 success:(CDUnknownBlockType)arg2 failure:(CDUnknownBlockType)arg3;
- (void)todayRefusePKInvitationError:(id)arg1;
- (void)todayRefusePKInvitationFail:(id)arg1;
- (void)todayRefusePKInvitationSuccess:(id)arg1;
- (void)todayRefusePKInvitation:(id)arg1 listType:(id)arg2 success:(CDUnknownBlockType)arg3 failure:(CDUnknownBlockType)arg4;
- (void)refusePKInvitationError:(id)arg1;
- (void)refusePKInvitationFail:(id)arg1;
- (void)refusePKInvitationSuccess:(id)arg1;
- (void)refusePKInvitation:(id)arg1 toRoomId:(id)arg2 isPlayAgain:(_Bool)arg3 listType:(id)arg4 success:(CDUnknownBlockType)arg5 failure:(CDUnknownBlockType)arg6;
- (void)confirmPKInvitationError:(id)arg1;
- (void)confirmPKInvitationFail:(id)arg1;
- (void)confirmPKInvitationSuccess:(id)arg1;
- (void)confirmPKInvitation:(id)arg1 toRoomId:(id)arg2 isPlayAgain:(_Bool)arg3 listType:(id)arg4 success:(CDUnknownBlockType)arg5 failure:(CDUnknownBlockType)arg6;
- (void)cancelInviteFriendError:(id)arg1;
- (void)cancelInviteFriendFail:(id)arg1;
- (void)cancelInviteFriendSuccess:(id)arg1;
- (void)cancelInviteFriend:(id)arg1 toRoomId:(id)arg2 listType:(id)arg3 success:(CDUnknownBlockType)arg4 failure:(CDUnknownBlockType)arg5;
- (void)inviteFriendError:(id)arg1;
- (void)inviteFriendFail:(id)arg1;
- (void)inviteFriendSuccess:(id)arg1;
- (void)inviteFriend:(id)arg1 toRoomId:(id)arg2 isPlayAgain:(_Bool)arg3 listType:(id)arg4 success:(CDUnknownBlockType)arg5 failure:(CDUnknownBlockType)arg6;
- (void)getAvilableFriendsError:(id)arg1;
- (void)getAvilableFriendsFailure:(id)arg1;
- (void)getAvilableFriendsSuccess:(id)arg1;
- (void)getAvilableFriendsSuccess:(CDUnknownBlockType)arg1 failure:(CDUnknownBlockType)arg2;
- (void)endPK;
- (void)pkParingSuccess;
- (void)pkProcessingCountingDown;
- (void)startPKProcessingDownCounter:(int)arg1;
- (void)cancelApplyRandomPKError:(id)arg1;
- (void)cancelApplyRandomPKFail:(id)arg1;
- (void)cancelApplyRandomPKSuccess:(id)arg1;
- (void)cancelApplySuccess:(CDUnknownBlockType)arg1 failure:(CDUnknownBlockType)arg2;
- (void)setAutEnableError:(id)arg1;
- (void)setAutEnableFail:(id)arg1;
- (void)setAutEnableSuccess:(id)arg1;
- (void)setAutoMatchEnable:(_Bool)arg1 success:(CDUnknownBlockType)arg2 failure:(CDUnknownBlockType)arg3;
- (void)applyRandomPKError:(id)arg1;
- (void)applyRandomFail:(id)arg1;
- (void)applyRandomPKSuccess:(id)arg1;
- (void)applyRandomPKSuccess:(CDUnknownBlockType)arg1 failure:(CDUnknownBlockType)arg2;
- (void)getPKConfigureFail:(id)arg1;
- (void)getPKConfigureError:(id)arg1;
- (void)getPKConfigureSuccess:(id)arg1;
- (void)getPKConfigureSuccess:(CDUnknownBlockType)arg1 failure:(CDUnknownBlockType)arg2;
- (void)dealloc;
- (id)init;

@end

