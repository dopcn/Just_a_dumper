//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

#import "PlayerManagerDelegate-Protocol.h"
#import "SHAdvertPlayerDelegate-Protocol.h"
#import "STADManagerDelegate-Protocol.h"

@class CADisplayLink, NSArray, NSString, NSURL, SHAdvertPlayer, SHMedia, SHPlayerManager, SHVideoSourceManager, UIView, VideoItem;
@protocol SHMoviePlayerControllerDelegate;

@interface SHMoviePlayerController : NSObject <PlayerManagerDelegate, STADManagerDelegate, SHAdvertPlayerDelegate>
{
    SHPlayerManager *_playerManager;
    SHVideoSourceManager *_mediaSourceManager;
    _Bool _advPlayEnable;
    _Bool _advPlayerPlaying;
    int _advTimeoutCount;
    CADisplayLink *_advDurationTimer;
    _Bool fullscreen;
    _Bool allowsAirPlay;
    _Bool _isInAdvertMode;
    _Bool _isPreloadMovieWhenPlayAdvert;
    _Bool _isSupportDownload;
    _Bool _isAutoPlayNextVideo;
    _Bool _isFirstPlayVideo;
    _Bool _isLoadSohuAdvert;
    long long movieScaleMode;
    id <SHMoviePlayerControllerDelegate> _delegate;
    UIView *_view;
    SHMedia *_currentPlayMedia;
    VideoItem *_currentPlayVideoItem;
    SHAdvertPlayer *_advPlayer;
    NSArray *_qualityArray;
}

+ (void)openDownloadSohuVideoUrl;
+ (void)registerAppKey:(id)arg1;
@property(nonatomic) _Bool isLoadSohuAdvert; // @synthesize isLoadSohuAdvert=_isLoadSohuAdvert;
@property(retain, nonatomic) NSArray *qualityArray; // @synthesize qualityArray=_qualityArray;
@property(nonatomic) _Bool isFirstPlayVideo; // @synthesize isFirstPlayVideo=_isFirstPlayVideo;
@property(retain, nonatomic) SHAdvertPlayer *advPlayer; // @synthesize advPlayer=_advPlayer;
@property(retain, nonatomic) VideoItem *currentPlayVideoItem; // @synthesize currentPlayVideoItem=_currentPlayVideoItem;
@property(retain, nonatomic) SHMedia *currentPlayMedia; // @synthesize currentPlayMedia=_currentPlayMedia;
@property(nonatomic) _Bool isAutoPlayNextVideo; // @synthesize isAutoPlayNextVideo=_isAutoPlayNextVideo;
@property(nonatomic) _Bool isSupportDownload; // @synthesize isSupportDownload=_isSupportDownload;
@property(nonatomic) _Bool isPreloadMovieWhenPlayAdvert; // @synthesize isPreloadMovieWhenPlayAdvert=_isPreloadMovieWhenPlayAdvert;
@property(readonly, nonatomic) UIView *view; // @synthesize view=_view;
@property(nonatomic) id <SHMoviePlayerControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, nonatomic) _Bool isInAdvertMode; // @synthesize isInAdvertMode=_isInAdvertMode;
@property(nonatomic) _Bool allowsAirPlay; // @synthesize allowsAirPlay;
@property(nonatomic, getter=isFullscreen) _Bool fullscreen; // @synthesize fullscreen;
- (void).cxx_destruct;
- (void)playerSDKError:(long long)arg1;
- (void)destroyPlayer;
- (void)resetPlayerSource;
- (void)playerExit;
@property(readonly, nonatomic) NSURL *contentURL;
@property(readonly, nonatomic) double playableDuration;
@property(readonly, nonatomic) float currentPlaybackRate;
@property(readonly, nonatomic) double currentPlaybackTime;
@property(readonly, nonatomic) double duration;
@property(readonly, nonatomic) long long loadState;
@property(readonly, nonatomic) long long playbackState;
@property(readonly, nonatomic) double advertCurrentPlaybackRemainTime;
@property(readonly, nonatomic) double advertDuration;
@property(readonly, nonatomic, getter=movieQualityArray) NSArray *movieQualityArray;
@property(nonatomic) unsigned long long movieQualityType;
@property(nonatomic) long long movieScaleMode; // @synthesize movieScaleMode;
@property(nonatomic) _Bool shouldAutoplay;
@property(readonly, nonatomic, getter=isAirPlayVideoActive) _Bool airPlayVideoActive;
- (void)setFullscreen:(_Bool)arg1 animated:(_Bool)arg2;
- (void)seekTo:(double)arg1;
- (void)seekBackward:(double)arg1;
- (void)seekForward:(double)arg1;
- (void)pause;
- (void)stop;
- (void)play;
- (void)playerPlaybackFinish;
- (void)playerIsAirPlayVideoActiveDidChange:(id)arg1;
- (void)playerPlaybackDidFinish:(id)arg1 reason:(long long)arg2;
- (void)playerPlaybackStateDidChange:(id)arg1;
- (void)playbackStart:(id)arg1;
- (void)playbackPrepared:(id)arg1;
- (void)playbackStalling:(id)arg1;
- (void)playbackPreparing:(id)arg1;
- (void)playbackDurationAvailable:(id)arg1;
- (void)advertPlaybackFailedWithError:(id)arg1;
- (void)advertPlaybackDidReachComplate:(id)arg1;
- (void)advertPlaybackDidReachEnd:(id)arg1;
- (void)advertWasReadyToPlay:(id)arg1;
- (void)nowPlayingAdvertDidChange:(id)arg1;
- (void)stadOADError:(int)arg1;
- (void)stadOADTrackEvent:(int)arg1;
- (void)stadOADStateChanged:(int)arg1;
- (id)stadOadAssets:(id)arg1 oadIntervals:(id)arg2 andADType:(id)arg3;
- (void)resetADVVariable;
- (void)exitAdvPlayer;
- (void)invalidateAdvPlayer;
- (void)exitADVDurationTimer;
- (void)startADVDurationTimer;
- (void)advPlayerPlayFinish:(_Bool)arg1;
- (id)getCurrentOADAdvertInfo;
- (void)schedule:(id)arg1;
- (void)startLoadAdv:(id)arg1;
- (long long)checkIsShouldPlayerAdvert;
- (void)loadVideoItemDetailFailed:(id)arg1;
- (void)loadVideoItemDetailSuccess:(id)arg1;
- (void)playerLoadVideoItemDetailFailure;
- (void)playerLoadVideoItemDetailSuccess;
- (void)playPreloadCurrentVideoItem;
- (void)playPreloadCurrentMedia;
- (void)preloadVideoWhenPlayAdvert;
- (void)playCurrentVideoItem;
- (void)playCurrentMedia;
- (void)didPlayCurrentMedia;
- (void)willPlayCurrentMedia:(_Bool)arg1;
- (void)startPlayWithMedia:(id)arg1;
- (_Bool)isLiveMedia:(id)arg1;
- (_Bool)hasAdvertOfMedia:(id)arg1;
@property(readonly, nonatomic) long long advertCurrentPlayState;
- (_Bool)playMediaWithIndex:(int)arg1;
- (_Bool)playNextMedia;
- (_Bool)playPreviousMedia;
- (void)appendMediaArray:(id)arg1;
- (void)appendMedia:(id)arg1;
- (void)playWithMediaArray:(id)arg1 index:(int)arg2;
- (void)playWithMedia:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)registerNotification;
- (void)addMoviePlayerView;
- (id)init;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

