//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

@class NSArray, NSAttributedString, NSCharacterSet, UIColor;

#pragma mark Function Pointers and Blocks

typedef void (*CDUnknownFunctionPointerType)(void); // return type and parameters are unknown

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct ASDisplayNodeFlags {
    unsigned int viewEverHadAGestureRecognizerAttached:1;
    unsigned int layerBacked:1;
    unsigned int displaysAsynchronously:1;
    unsigned int rasterizesSubtree:1;
    unsigned int shouldBypassEnsureDisplay:1;
    unsigned int displaySuspended:1;
    unsigned int shouldAnimateSizeChanges:1;
    unsigned int canClearContentsOfLayer:1;
    unsigned int canCallSetNeedsDisplayOfLayer:1;
    unsigned int implementsDrawRect:1;
    unsigned int implementsImageDisplay:1;
    unsigned int implementsDrawParameters:1;
    unsigned int isEnteringHierarchy:1;
    unsigned int isExitingHierarchy:1;
    unsigned int isInHierarchy:1;
    unsigned int visibilityNotificationsDisabled:4;
    unsigned int isDeallocating:1;
};

struct ASDisplayNodeLayout;

struct ASLayoutElementStyleExtensions {
    _Bool boolExtensions[1];
    long long integerExtensions[4];
    struct UIEdgeInsets edgeInsetsExtensions[1];
};

struct ASPendingStateControllerFlags {
    unsigned int pendingFlush:1;
};

struct ASPrimitiveTraitCollection {
    double displayScale;
    long long horizontalSizeClass;
    long long userInterfaceIdiom;
    long long verticalSizeClass;
    long long forceTouchCapability;
    struct CGSize containerSize;
};

struct ASTextKitAttributes {
    NSAttributedString *attributedString;
    NSAttributedString *truncationAttributedString;
    NSCharacterSet *avoidTailTruncationSet;
    long long lineBreakMode;
    unsigned long long maximumNumberOfLines;
    NSArray *exclusionPaths;
    struct CGSize shadowOffset;
    UIColor *shadowColor;
    double shadowOpacity;
    double shadowRadius;
    NSArray *pointSizeScaleFactors;
};

struct Array;

struct AtomicSharedPtr<realm::_impl::CollectionNotifier, true> {
    struct shared_ptr<realm::_impl::CollectionNotifier> m_ptr;
};

struct BacklinkColumn;

struct BasicRow<const realm::Table> {
    struct BasicTableRef<realm::Table> m_table;
    unsigned long long m_row_ndx;
    struct RowBase *m_prev;
    struct RowBase *m_next;
};

struct BasicRow<realm::Table> {
    struct BasicTableRef<realm::Table> m_table;
    unsigned long long m_row_ndx;
    struct RowBase *m_prev;
    struct RowBase *m_next;
};

struct BasicTableRef<realm::Table> {
    struct Table *m_ptr;
};

struct BinaryData {
    char *m_data;
    unsigned long long m_size;
};

struct BpTree<long long> {
    struct unique_ptr<realm::Array, std::__1::default_delete<realm::Array>> m_root;
};

struct CATransform3D {
    double m11;
    double m12;
    double m13;
    double m14;
    double m21;
    double m22;
    double m23;
    double m24;
    double m31;
    double m32;
    double m33;
    double m34;
    double m41;
    double m42;
    double m43;
    double m44;
};

struct CGAffineTransform {
    double a;
    double b;
    double c;
    double d;
    double tx;
    double ty;
};

struct CGPoint {
    double x;
    double y;
};

struct CGRect {
    struct CGPoint origin;
    struct CGSize size;
};

struct CGSize {
    double width;
    double height;
};

struct CLLocationCoordinate2D {
    double _field1;
    double _field2;
};

struct CLSMachOFile {
    int fd;
    unsigned long long mappedSize;
    void *mappedFile;
};

struct CLSMachOSlice {
    void *startAddress;
    int cputype;
    int cpusubtype;
};

struct CNetworkEvent {
    CDUnknownFunctionPointerType *_field1;
    basic_string_a490aa4c _field2;
    struct CQQUin _field3;
    basic_string_a490aa4c _field4;
};

struct CNetworkRequestSO {
    CDUnknownFunctionPointerType *_field1;
    struct CNetworkEvent _field2;
    int _field3;
    int _field4;
    int _field5;
    int _field6;
    int _field7;
    _Bool _field8;
    char _field9;
    char _field10;
    char _field11;
    char _field12;
    basic_string_a490aa4c _field13;
    int _field14;
    int _field15;
    _Bool _field16;
    int _field17;
    long long _field18;
    long long _field19;
    _Bool _field20;
};

struct CNetworkResponseSO {
    CDUnknownFunctionPointerType *_field1;
    struct CNetworkEvent _field2;
    int _field3;
    int _field4;
    basic_string_a490aa4c _field5;
};

struct CQQUin {
    CDUnknownFunctionPointerType *_field1;
    char _field2;
    basic_string_a490aa4c _field3;
};

struct ChangesetCooker;

struct Chunk;

struct CollectionChangeSet {
    struct IndexSet deletions;
    struct IndexSet insertions;
    struct IndexSet modifications;
    struct IndexSet modifications_new;
    struct vector<realm::CollectionChangeSet::Move, std::__1::allocator<realm::CollectionChangeSet::Move>> moves;
    struct vector<realm::IndexSet, std::__1::allocator<realm::IndexSet>> columns;
};

struct CollectionNotifier;

struct Column<long long> {
    CDUnknownFunctionPointerType *_vptr$ColumnBase;
    unsigned long long m_column_ndx;
    struct unique_ptr<realm::StringIndex, std::__1::default_delete<realm::StringIndex>> m_search_index;
    struct BpTree<long long> m_tree;
};

struct Condition {
    int type;
    basic_string_a490aa4c user_id;
    struct pair<std::__1::basic_string<char>, std::__1::basic_string<char>> key_value;
};

struct Config {
    basic_string_a490aa4c path;
    struct BinaryData realm_data;
    struct vector<char, std::__1::allocator<char>> encryption_key;
    _Bool in_memory;
    unsigned char schema_mode;
    struct Optional<realm::Schema> schema;
    unsigned long long schema_version;
    struct function<void (std::__1::shared_ptr<realm::Realm>, std::__1::shared_ptr<realm::Realm>, realm::Schema &)> migration_function;
    struct function<bool (unsigned long long, unsigned long long)> should_compact_on_launch_function;
    _Bool cache;
    _Bool disable_format_upgrade;
    _Bool automatic_change_notifications;
    struct Optional<unsigned long> execution_context;
    struct shared_ptr<realm::SyncConfig> sync_config;
    _Bool force_sync_history;
};

struct CustomElem {
    basic_string_a490aa4c _field1;
    basic_string_a490aa4c _field2;
    basic_string_a490aa4c _field3;
    basic_string_a490aa4c _field4;
};

struct Descriptor;

struct Draft {
    struct vector<imcore::Elem, std::__1::allocator<imcore::Elem>> elems;
    basic_string_a490aa4c user_define;
    unsigned long long uint64_edit_time;
};

struct Elem {
    basic_string_a490aa4c _field1;
    int _field2;
    struct TextElem _field3;
    struct ImageElem _field4;
    struct SoundElem _field5;
    struct CustomElem _field6;
    struct FileElem _field7;
    struct GroupTipsElem _field8;
    struct FaceElem _field9;
    struct LocationElem _field10;
    struct GroupReportElem _field11;
    struct ProfileChangeElem _field12;
    struct FriendChangeElem _field13;
    struct VideoElem _field14;
    basic_string_a490aa4c _field15;
};

struct FaceElem {
    int _field1;
    basic_string_a490aa4c _field2;
};

struct FileElem {
    basic_string_a490aa4c _field1;
    basic_string_a490aa4c _field2;
    long long _field3;
    int _field4;
    basic_string_a490aa4c _field5;
    int _field6;
    int _field7;
    struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> _field8;
};

struct FriendChangeElem {
    unsigned int _field1;
    struct vector<imcore::FriendChangeUserInfo, std::__1::allocator<imcore::FriendChangeUserInfo>> _field2;
    unsigned long long _field3;
    unsigned long long _field4;
    unsigned long long _field5;
};

struct FriendChangeUserInfo;

struct FriendProfile {
    basic_string_a490aa4c _field1;
    basic_string_a490aa4c _field2;
    basic_string_a490aa4c _field3;
    basic_string_a490aa4c _field4;
    struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> _field5;
    basic_string_a490aa4c _field6;
    basic_string_a490aa4c _field7;
    unsigned int _field8;
    unsigned int _field9;
    int _field10;
    basic_string_a490aa4c _field11;
    basic_string_a490aa4c _field12;
    basic_string_a490aa4c _field13;
    basic_string_a490aa4c _field14;
    unsigned long long _field15;
    unsigned long long _field16;
    struct map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char>>>> _field17;
    unsigned long long _field18;
};

struct GPUByteColorVector {
    unsigned char _field1;
    unsigned char _field2;
    unsigned char _field3;
    unsigned char _field4;
};

struct GPUMatrix3x3 {
    struct GPUVector3 one;
    struct GPUVector3 two;
    struct GPUVector3 three;
};

struct GPUMatrix4x4 {
    struct GPUVector4 one;
    struct GPUVector4 two;
    struct GPUVector4 three;
    struct GPUVector4 four;
};

struct GPUTextureOptions {
    unsigned int minFilter;
    unsigned int magFilter;
    unsigned int wrapS;
    unsigned int wrapT;
    unsigned int internalFormat;
    unsigned int format;
    unsigned int type;
};

struct GPUVector3 {
    float one;
    float two;
    float three;
};

struct GPUVector4 {
    float one;
    float two;
    float three;
    float four;
};

struct GVCommOprHead {
    CDUnknownFunctionPointerType *_field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned long long _field6;
    unsigned int _field7;
    unsigned int _field8;
    struct RepeatedPtrField<changed::im::groupvideo::commonoperate::RelayInfo> _field9;
    basic_string_a490aa4c *_field10;
    basic_string_a490aa4c *_field11;
    struct RepeatedField<unsigned long long> _field12;
    unsigned int _field13;
    unsigned int _field14;
    basic_string_a490aa4c *_field15;
    struct RepeatedPtrField<std::__1::basic_string<char>> _field16;
    basic_string_a490aa4c *_field17;
    basic_string_a490aa4c *_field18;
    struct RepeatedField<unsigned long long> _field19;
    int _field20;
    unsigned int _field21[1];
};

struct GetProfileOption {
    unsigned long long _field1;
    struct map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char>>>> _field2;
};

struct Group {
    CDUnknownFunctionPointerType *_field1;
};

struct GroupCacheInfo {
    struct GroupDetailInfo _field1;
    struct GroupSelfInfo _field2;
};

struct GroupDetailInfo {
    basic_string_a490aa4c _field1;
    basic_string_a490aa4c _field2;
    basic_string_a490aa4c _field3;
    basic_string_a490aa4c _field4;
    basic_string_a490aa4c _field5;
    basic_string_a490aa4c _field6;
    basic_string_a490aa4c _field7;
    unsigned long long _field8;
    unsigned int _field9;
    unsigned int _field10;
    unsigned int _field11;
    unsigned int _field12;
    unsigned int _field13;
    unsigned int _field14;
    unsigned int _field15;
    unsigned int _field16;
    unsigned int _field17;
    unsigned int _field18;
    int _field19;
    int _field20;
    struct Msg _field21;
    struct map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char>>>> _field22;
};

struct GroupReportElem {
    unsigned int _field1;
    basic_string_a490aa4c _field2;
    basic_string_a490aa4c _field3;
    basic_string_a490aa4c _field4;
    unsigned long long _field5;
    basic_string_a490aa4c _field6;
    basic_string_a490aa4c _field7;
    basic_string_a490aa4c _field8;
    struct FriendProfile _field9;
    struct NewGroupMemberInfo _field10;
    basic_string_a490aa4c _field11;
};

struct GroupSelfInfo {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
};

struct GroupTipsElem {
    int _field1;
    basic_string_a490aa4c _field2;
    basic_string_a490aa4c _field3;
    basic_string_a490aa4c _field4;
    unsigned int _field5;
    struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> _field6;
    struct vector<imcore::GroupTipsElem_GroupInfo, std::__1::allocator<imcore::GroupTipsElem_GroupInfo>> _field7;
    struct vector<imcore::GroupTipsElem_MemberInfo, std::__1::allocator<imcore::GroupTipsElem_MemberInfo>> _field8;
    struct FriendProfile _field9;
    struct NewGroupMemberInfo _field10;
    struct map<std::__1::basic_string<char>, imcore::FriendProfile, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, imcore::FriendProfile>>> _field11;
    struct map<std::__1::basic_string<char>, imcore::NewGroupMemberInfo, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, imcore::NewGroupMemberInfo>>> _field12;
    unsigned int _field13;
    basic_string_a490aa4c _field14;
};

struct GroupTipsElem_GroupInfo;

struct GroupTipsElem_MemberInfo;

struct Handle<realm::_impl::ListNotifier> {
    struct ListNotifier *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct Handle<realm::_impl::ObjectNotifier> {
    struct ObjectNotifier *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct Handle<realm::_impl::ResultsNotifier> {
    struct ResultsNotifier *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct IGListSectionController {
    Class _field1;
};

struct IGListSectionEntry;

struct IMSFDataDelegate {
    CDUnknownFunctionPointerType *_field1;
};

struct IMSFHttpSysEngineImplEvent {
    CDUnknownFunctionPointerType *_field1;
};

struct IMSFNetEnvEvent {
    CDUnknownFunctionPointerType *_field1;
};

struct IMSFTcpEngineEvent {
    CDUnknownFunctionPointerType *_field1;
};

struct ImageElem {
    basic_string_a490aa4c _field1;
    int _field2;
    int _field3;
    int _field4;
    int _field5;
    int _field6;
    int _field7;
    int _field8;
    int _field9;
    int _field10;
    basic_string_a490aa4c _field11;
    basic_string_a490aa4c _field12;
    basic_string_a490aa4c _field13;
    int _field14;
    int _field15;
    int _field16;
};

struct IndexSet {
    struct vector<realm::_impl::ChunkedRangeVector::Chunk, std::__1::allocator<realm::_impl::ChunkedRangeVector::Chunk>> m_data;
};

struct JKConstBuffer {
    struct JKConstPtrRange _field1;
};

struct JKConstPtrRange {
    char *_field1;
    unsigned long long _field2;
};

struct JKEncodeCache {
    id _field1;
    unsigned long long _field2;
    unsigned long long _field3;
};

struct JKEncodeState {
    struct JKManagedBuffer _field1;
    struct JKManagedBuffer _field2;
    unsigned long long _field3;
    struct JKFastClassLookup _field4;
    struct JKEncodeCache _field5[1024];
    unsigned long long _field6;
    unsigned long long _field7;
    unsigned long long _field8;
    id _field9;
    id _field10;
    SEL _field11;
    CDUnknownFunctionPointerType _field12;
    CDUnknownBlockType _field13;
};

struct JKFastClassLookup {
    void *_field1;
    void *_field2;
    void *_field3;
    void *_field4;
    void *_field5;
};

struct JKHashTableEntry {
    unsigned long long _field1;
    id _field2;
    id _field3;
};

struct JKManagedBuffer {
    struct JKPtrRange _field1;
    unsigned long long _field2;
    unsigned long long _field3;
};

struct JKObjCImpCache {
    Class _field1;
    CDUnknownFunctionPointerType _field2;
    CDUnknownFunctionPointerType _field3;
};

struct JKObjectStack {
    void **_field1;
    void **_field2;
    unsigned long long *_field3;
    unsigned long long _field4;
    unsigned long long _field5;
    unsigned long long _field6;
    unsigned long long _field7;
};

struct JKParseState {
    unsigned long long _field1;
    struct JKConstBuffer _field2;
    unsigned long long _field3;
    unsigned long long _field4;
    unsigned long long _field5;
    unsigned long long _field6;
    unsigned long long _field7;
    unsigned long long _field8;
    struct JKParseToken _field9;
    struct JKObjectStack _field10;
    struct JKTokenCache _field11;
    struct JKObjCImpCache _field12;
    id _field13;
    int _field14;
    _Bool _field15;
};

struct JKParseToken {
    struct JKConstPtrRange _field1;
    unsigned long long _field2;
    struct JKTokenValue _field3;
    struct JKManagedBuffer _field4;
};

struct JKPtrRange {
    char *_field1;
    unsigned long long _field2;
};

struct JKTokenCache {
    struct JKTokenCacheItem *_field1;
    unsigned long long _field2;
    unsigned int _field3;
    unsigned char _field4[1024];
};

struct JKTokenCacheItem;

struct JKTokenValue {
    struct JKConstPtrRange _field1;
    unsigned long long _field2;
    unsigned long long _field3;
    CDUnion_abebb5d1 _field4;
    struct JKTokenCacheItem *_field5;
};

struct LOT_Subpath {
    int _field1;
    double _field2;
    struct CGPoint _field3;
    struct CGPoint _field4;
    struct CGPoint _field5;
    struct LOT_Subpath *_field6;
};

struct LinkView;

struct List {
    shared_ptr_130f66cc m_realm;
    struct ObjectSchema *m_object_schema;
    struct shared_ptr<realm::LinkView> m_link_view;
    struct Handle<realm::_impl::ListNotifier> m_notifier;
};

struct ListNotifier;

struct LocationElem {
    basic_string_a490aa4c _field1;
    double _field2;
    double _field3;
};

struct Move;

struct Msg {
    struct shared_ptr<imcore::MsgNode> msg_;
};

struct MsgNode;

struct Mutex {
    struct _opaque_pthread_mutex_t _m;
};

struct NSArray {
    Class _field1;
};

struct NSDictionary {
    Class _field1;
};

struct NSMapTable {
    Class _field1;
};

struct NSMutableArray {
    Class _field1;
};

struct NSMutableDictionary {
    Class _field1;
};

struct NewGroupMemberInfo {
    basic_string_a490aa4c _field1;
    int _field2;
    int _field3;
    basic_string_a490aa4c _field4;
    struct map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char>>>> _field5;
};

struct NotificationToken {
    struct AtomicSharedPtr<realm::_impl::CollectionNotifier, true> m_notifier;
    unsigned long long m_token;
};

struct Object {
    shared_ptr_130f66cc m_realm;
    struct ObjectSchema *m_object_schema;
    struct BasicRow<realm::Table> m_row;
    struct Handle<realm::_impl::ObjectNotifier> m_notifier;
};

struct ObjectNotifier;

struct ObjectSchema {
    basic_string_a490aa4c _field1;
    struct vector<realm::Property, std::__1::allocator<realm::Property>> _field2;
    struct vector<realm::Property, std::__1::allocator<realm::Property>> _field3;
    basic_string_a490aa4c _field4;
};

struct Optional<realm::Permission> {
    union {
        struct Permission m_value;
        char m_null_state;
    } ;
    _Bool m_engaged;
};

struct Optional<realm::Schema> {
    union {
        struct Schema m_value;
        char m_null_state;
    } ;
    _Bool m_engaged;
};

struct Optional<std::__1::array<char, 64>> {
    union {
        struct array<char, 64> _field1;
        char _field2;
    } _field1;
    _Bool _field2;
};

struct Optional<std::__1::basic_string<char>> {
    union {
        basic_string_a490aa4c _field1;
        char _field2;
    } _field1;
    _Bool _field2;
};

struct Optional<unsigned long long> {
    CDUnion_f76efdce ;
    _Bool m_engaged;
};

struct Optional<unsigned long> {
    CDUnion_f76efdce ;
    _Bool m_engaged;
};

struct POPAnimatorItem;

struct Permission {
    basic_string_a490aa4c path;
    int access;
    struct Condition condition;
    struct Timestamp updated_at;
};

struct PermissionResults;

struct ProfileChangeElem {
    unsigned int _field1;
    basic_string_a490aa4c _field2;
    basic_string_a490aa4c _field3;
};

struct Property {
    basic_string_a490aa4c _field1;
    unsigned char _field2;
    basic_string_a490aa4c _field3;
    basic_string_a490aa4c _field4;
    _Bool _field5;
    _Bool _field6;
    _Bool _field7;
    unsigned long long _field8;
};

struct Query {
    basic_string_a490aa4c error_code;
    struct vector<realm::QueryGroup, std::__1::allocator<realm::QueryGroup>> m_groups;
    struct vector<unsigned long, std::__1::allocator<unsigned long>> m_subtable_path;
    struct shared_ptr<const realm::Descriptor> m_current_descriptor;
    struct BasicTableRef<realm::Table> m_table;
    struct RowIndexes *m_view;
    struct shared_ptr<realm::LinkView> m_source_link_view;
    struct TableViewBase *m_source_table_view;
    struct unique_ptr<realm::TableViewBase, std::__1::default_delete<realm::TableViewBase>> m_owned_source_table_view;
};

struct QueryGroup;

struct RLMClassInfo {
    id _field1;
    id _field2;
    struct ObjectSchema *_field3;
    struct vector<RLMObservationInfo *, std::__1::allocator<RLMObservationInfo *>> _field4;
    struct Table *_field5;
    struct vector<RLMClassInfo *, std::__1::allocator<RLMClassInfo *>> _field6;
};

struct RLMObservationInfo {
    struct RLMObservationInfo *_field1;
    struct RLMObservationInfo *_field2;
    struct BasicRow<realm::Table> _field3;
    struct RLMClassInfo *_field4;
    id _field5;
    _Bool _field6;
    unsigned long long _field7;
    id _field8;
    id _field9;
    id _field10;
};

struct RLMSchemaInfo {
    struct unordered_map<NSString *, RLMClassInfo, std::__1::hash<NSString *>, std::__1::equal_to<NSString *>, std::__1::allocator<std::__1::pair<NSString *const, RLMClassInfo>>> m_objects;
};

struct Range {
    double max;
    double min;
};

struct Realm;

struct RecursiveMutex {
    struct _opaque_pthread_mutex_t _m;
};

struct RepeatedField<unsigned long long> {
    unsigned long long *_field1;
    int _field2;
    int _field3;
};

struct RepeatedPtrField<changed::im::groupvideo::commonoperate::RelayInfo> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<std::__1::basic_string<char>> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct ReqBody {
    CDUnknownFunctionPointerType *_field1;
    struct SubReq_0x1 *_field2;
    struct SubReq_0x2 *_field3;
    struct SubReq_0x3 *_field4;
    struct SubReq_0x4 *_field5;
    struct SubReq_0x5 *_field6;
    struct SubReq_0x6 *_field7;
    struct SubReq_0x7 *_field8;
    struct SpeedTestReq_0x8 *_field9;
    struct SpeedResultReportReq_0x9 *_field10;
    struct SubReq_0x101 *_field11;
    int _field12;
    unsigned int _field13[1];
};

struct Results {
    shared_ptr_130f66cc m_realm;
    struct ObjectSchema *m_object_schema;
    struct Query m_query;
    struct TableView m_table_view;
    struct shared_ptr<realm::LinkView> m_link_view;
    struct BasicTableRef<realm::Table> m_table;
    struct SortDescriptor m_sort;
    struct SortDescriptor m_distinct;
    struct Handle<realm::_impl::ResultsNotifier> m_notifier;
    int m_mode;
    int m_update_policy;
    _Bool m_has_used_table_view;
    _Bool m_wants_background_updates;
};

struct ResultsNotifier;

struct RowBase;

struct RowIndexes;

struct RspBody {
    CDUnknownFunctionPointerType *_field1;
    struct SubRsp_0x1 *_field2;
    struct SubRsp_0x2 *_field3;
    struct SubRsp_0x3 *_field4;
    struct SubRsp_0x4 *_field5;
    struct SubRsp_0x5 *_field6;
    struct SubRsp_0x6 *_field7;
    struct SubRsp_0x7 *_field8;
    struct SpeedTestRsp_0x8 *_field9;
    struct SpeedResultReportRsp_0x9 *_field10;
    struct SubRsp_0x101 *_field11;
    int _field12;
    unsigned int _field13[1];
};

struct SSState<POP::Vector4<double>> {
    struct Vector4<double> _field1;
    struct Vector4<double> _field2;
};

struct Schema {
    struct ObjectSchema *__begin_;
    struct ObjectSchema *__end_;
    struct __compressed_pair<realm::ObjectSchema *, std::__1::allocator<realm::ObjectSchema>> {
        struct ObjectSchema *__first_;
    } __end_cap_;
};

struct Session {
    struct shared_ptr<imcore::SessionNode> _field1;
};

struct SessionNode;

struct SidewayHttpNetworkModule {
    void *_field1[100];
    id _field2;
    _Bool _field3;
    struct {
        int _field1;
        int _field2;
        int _field3;
        int _field4;
        int _field5;
    } _field4;
    int _field5;
    int _field6;
    long long _field7;
    _Bool _field8;
    struct set<std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::basic_string<char>>> _field9;
};

struct SortDescriptor {
    struct vector<std::__1::vector<const realm::ColumnBase *, std::__1::allocator<const realm::ColumnBase *>>, std::__1::allocator<std::__1::vector<const realm::ColumnBase *, std::__1::allocator<const realm::ColumnBase *>>>> m_columns;
    struct vector<bool, std::__1::allocator<bool>> m_ascending;
};

struct SoundElem {
    basic_string_a490aa4c _field1;
    int _field2;
    int _field3;
    int _field4;
    basic_string_a490aa4c _field5;
    int _field6;
    int _field7;
    struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> _field8;
};

struct SpeedResultReportReq_0x9;

struct SpeedResultReportRsp_0x9;

struct SpeedTestReq_0x8;

struct SpeedTestRsp_0x8;

struct SpringSolver<POP::Vector4<double>> {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
    double _field5;
    double _field6;
    double _field7;
    struct SSState<POP::Vector4<double>> _field8;
    struct Vector4<double> _field9;
    _Bool _field10;
};

struct StringIndex;

struct SubReq_0x1;

struct SubReq_0x101;

struct SubReq_0x2;

struct SubReq_0x3;

struct SubReq_0x4;

struct SubReq_0x5;

struct SubReq_0x6;

struct SubReq_0x7;

struct SubRsp_0x1;

struct SubRsp_0x101;

struct SubRsp_0x2;

struct SubRsp_0x3;

struct SubRsp_0x4;

struct SubRsp_0x5;

struct SubRsp_0x6;

struct SubRsp_0x7;

struct SyncConfig {
    shared_ptr_324a0594 _field1;
    basic_string_a490aa4c _field2;
    int _field3;
    struct function<void (const std::__1::basic_string<char>&, const realm::SyncConfig &, std::__1::shared_ptr<realm::SyncSession>)> _field4;
    function_0cf83702 _field5;
    struct shared_ptr<realm::sync::ClientHistory::ChangesetCooker> _field6;
    struct Optional<std::__1::array<char, 64>> _field7;
    _Bool _field8;
    struct Optional<std::__1::basic_string<char>> _field9;
};

struct SyncSession;

struct SyncUser;

struct TTimerCallBack {
    CDUnknownFunctionPointerType _field1;
    void *_field2;
};

struct Table;

struct TableView {
    CDUnknownFunctionPointerType *_vptr$RowIndexes;
    struct Column<long long> m_row_indexes;
    unsigned long long m_debug_cookie;
    struct BasicTableRef<realm::Table> m_table;
    struct BacklinkColumn *m_linked_column;
    struct BasicRow<const realm::Table> m_linked_row;
    struct shared_ptr<const realm::LinkView> m_linkview_source;
    unsigned long long m_distinct_column_source;
    struct SortDescriptor m_distinct_predicate;
    struct SortDescriptor m_sorting_predicate;
    struct Query m_query;
    unsigned long long m_start;
    unsigned long long m_end;
    unsigned long long m_limit;
    struct Optional<unsigned long long> m_last_seen_version;
    unsigned long long m_num_detached_refs;
};

struct TableViewBase;

struct TextElem {
    basic_string_a490aa4c _field1;
};

struct ThreadSafeReferenceBase;

struct Timestamp {
    long long m_seconds;
    int m_nanoseconds;
    _Bool m_is_null;
};

struct UIEdgeInsets {
    double top;
    double left;
    double bottom;
    double right;
};

struct UIOffset {
    double _field1;
    double _field2;
};

struct UITextView {
    Class _field1;
};

struct UPAFileRef {
    int _field1;
};

struct Vector4<double> {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
};

struct VideoElem {
    basic_string_a490aa4c _field1;
    basic_string_a490aa4c _field2;
    unsigned int _field3;
    int _field4;
    basic_string_a490aa4c _field5;
    unsigned int _field6;
    unsigned int _field7;
    basic_string_a490aa4c _field8;
    int _field9;
    struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> _field10;
    basic_string_a490aa4c _field11;
    unsigned int _field12;
    unsigned int _field13;
    unsigned int _field14;
    basic_string_a490aa4c _field15;
    int _field16;
    struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> _field17;
};

struct WBSDKJKConstBuffer {
    struct WBSDKJKConstPtrRange _field1;
};

struct WBSDKJKConstPtrRange {
    char *_field1;
    unsigned long long _field2;
};

struct WBSDKJKEncodeCache {
    id _field1;
    unsigned long long _field2;
    unsigned long long _field3;
};

struct WBSDKJKEncodeState {
    struct WBSDKJKManagedBuffer _field1;
    struct WBSDKJKManagedBuffer _field2;
    unsigned long long _field3;
    struct WBSDKJKFastClassLookup _field4;
    struct WBSDKJKEncodeCache _field5[1024];
    unsigned long long _field6;
    unsigned long long _field7;
    unsigned long long _field8;
    id _field9;
    id _field10;
    SEL _field11;
    CDUnknownFunctionPointerType _field12;
    CDUnknownBlockType _field13;
};

struct WBSDKJKFastClassLookup {
    void *_field1;
    void *_field2;
    void *_field3;
    void *_field4;
    void *_field5;
};

struct WBSDKJKHashTableEntry {
    unsigned long long _field1;
    id _field2;
    id _field3;
};

struct WBSDKJKManagedBuffer {
    struct WBSDKJKPtrRange _field1;
    unsigned long long _field2;
    unsigned long long _field3;
};

struct WBSDKJKObjCImpCache {
    Class _field1;
    CDUnknownFunctionPointerType _field2;
    CDUnknownFunctionPointerType _field3;
};

struct WBSDKJKObjectStack {
    void **_field1;
    void **_field2;
    unsigned long long *_field3;
    unsigned long long _field4;
    unsigned long long _field5;
    unsigned long long _field6;
    unsigned long long _field7;
};

struct WBSDKJKParseState {
    unsigned long long _field1;
    struct WBSDKJKConstBuffer _field2;
    unsigned long long _field3;
    unsigned long long _field4;
    unsigned long long _field5;
    unsigned long long _field6;
    unsigned long long _field7;
    unsigned long long _field8;
    struct WBSDKJKParseToken _field9;
    struct WBSDKJKObjectStack _field10;
    struct WBSDKJKTokenCache _field11;
    struct WBSDKJKObjCImpCache _field12;
    id _field13;
    int _field14;
    _Bool _field15;
};

struct WBSDKJKParseToken {
    struct WBSDKJKConstPtrRange _field1;
    unsigned long long _field2;
    struct WBSDKJKTokenValue _field3;
    struct WBSDKJKManagedBuffer _field4;
};

struct WBSDKJKPtrRange {
    char *_field1;
    unsigned long long _field2;
};

struct WBSDKJKTokenCache {
    struct WBSDKJKTokenCacheItem *_field1;
    unsigned long long _field2;
    unsigned int _field3;
    unsigned char _field4[1024];
};

struct WBSDKJKTokenCacheItem;

struct WBSDKJKTokenValue {
    struct WBSDKJKConstPtrRange _field1;
    unsigned long long _field2;
    unsigned long long _field3;
    CDUnion_abebb5d1 _field4;
    struct WBSDKJKTokenCacheItem *_field5;
};

struct WXJSArrayExpression {
    CDUnknownFunctionPointerType *_field1;
    struct vector<WXJSExpression *, std::__1::allocator<WXJSExpression *>> _field2;
};

struct WXJSExceptionInfo {
    Class _field1;
};

struct WXJSExpression {
    CDUnknownFunctionPointerType *_field1;
};

struct WXJSLiteral {
    CDUnknownFunctionPointerType *_field1;
};

struct WXJSToken {
    unsigned long long _field1;
    basic_string_a490aa4c _field2;
    double _field3;
    _Bool _field4;
    int _field5;
    int _field6;
};

struct WebPData {
    char *_field1;
    unsigned long long _field2;
};

struct WebPIterator {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
    int _field5;
    int _field6;
    int _field7;
    int _field8;
    int _field9;
    struct WebPData _field10;
    int _field11;
    int _field12;
    unsigned int _field13[2];
    void *_field14;
};

struct XCFAPIKeyPairs {
    id _field1;
    id _field2;
};

struct XCFSalonConversationFoldContentState {
    long long index;
    double limitHeight;
};

struct XCFVideoRange {
    double location;
    double length;
};

struct _NSRange {
    unsigned long long location;
    unsigned long long length;
};

struct _POPAnimationState {
    CDUnknownFunctionPointerType *_field1;
    id _field2;
    int _field3;
    id _field4;
    unsigned long long _field5;
    double _field6;
    double _field7;
    double _field8;
    id _field9;
    CDUnknownBlockType _field10;
    CDUnknownBlockType _field11;
    CDUnknownBlockType _field12;
    CDUnknownBlockType _field13;
    id _field14;
    id _field15;
    double _field16;
    long long _field17;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
};

struct __hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerIndexPath, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerIndexPath, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerSectionControllerWrapper, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerSectionControllerWrapper, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, RLMClassInfo>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, RLMClassInfo>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, IGListMoveIndex *>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, IGListMoveIndex *>, void *>*> *_field1;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, long>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, long>, void *>*> *__next_;
};

struct __list_node_base<std::__1::shared_ptr<POPAnimatorItem>, void *> {
    struct __list_node_base<std::__1::shared_ptr<POPAnimatorItem>, void *> *__prev_;
    struct __list_node_base<std::__1::shared_ptr<POPAnimatorItem>, void *> *__next_;
};

struct __shared_weak_count;

struct __tree_end_node<std::__1::__tree_node_base<void *>*> {
    struct __tree_node_base<void *> *__left_;
};

struct _opaque_pthread_mutex_t {
    long long __sig;
    char __opaque[56];
};

struct _opaque_pthread_mutexattr_t {
    long long __sig;
    char __opaque[8];
};

struct _xmlAttr {
    void *_field1;
    int _field2;
    char *_field3;
    struct _xmlNode *_field4;
    struct _xmlNode *_field5;
    struct _xmlNode *_field6;
    struct _xmlAttr *_field7;
    struct _xmlAttr *_field8;
    struct _xmlDoc *_field9;
    struct _xmlNs *_field10;
    int _field11;
    void *_field12;
};

struct _xmlDict;

struct _xmlDoc {
    void *_field1;
    int _field2;
    char *_field3;
    struct _xmlNode *_field4;
    struct _xmlNode *_field5;
    struct _xmlNode *_field6;
    struct _xmlNode *_field7;
    struct _xmlNode *_field8;
    struct _xmlDoc *_field9;
    int _field10;
    int _field11;
    struct _xmlDtd *_field12;
    struct _xmlDtd *_field13;
    struct _xmlNs *_field14;
    char *_field15;
    char *_field16;
    void *_field17;
    void *_field18;
    char *_field19;
    int _field20;
    struct _xmlDict *_field21;
    void *_field22;
    int _field23;
    int _field24;
};

struct _xmlDtd;

struct _xmlHashTable;

struct _xmlNode {
    void *_field1;
    int _field2;
    char *_field3;
    struct _xmlNode *_field4;
    struct _xmlNode *_field5;
    struct _xmlNode *_field6;
    struct _xmlNode *_field7;
    struct _xmlNode *_field8;
    struct _xmlDoc *_field9;
    struct _xmlNs *_field10;
    char *_field11;
    struct _xmlAttr *_field12;
    struct _xmlNs *_field13;
    void *_field14;
    unsigned short _field15;
    unsigned short _field16;
};

struct _xmlNs {
    struct _xmlNs *_field1;
    int _field2;
    char *_field3;
    char *_field4;
    void *_field5;
    struct _xmlDoc *_field6;
};

struct _xmlParserInput;

struct _xmlParserNodeInfo;

struct _xmlSAXHandler {
    CDUnknownFunctionPointerType internalSubset;
    CDUnknownFunctionPointerType isStandalone;
    CDUnknownFunctionPointerType hasInternalSubset;
    CDUnknownFunctionPointerType hasExternalSubset;
    CDUnknownFunctionPointerType resolveEntity;
    CDUnknownFunctionPointerType getEntity;
    CDUnknownFunctionPointerType entityDecl;
    CDUnknownFunctionPointerType notationDecl;
    CDUnknownFunctionPointerType attributeDecl;
    CDUnknownFunctionPointerType elementDecl;
    CDUnknownFunctionPointerType unparsedEntityDecl;
    CDUnknownFunctionPointerType setDocumentLocator;
    CDUnknownFunctionPointerType startDocument;
    CDUnknownFunctionPointerType endDocument;
    CDUnknownFunctionPointerType startElement;
    CDUnknownFunctionPointerType endElement;
    CDUnknownFunctionPointerType reference;
    CDUnknownFunctionPointerType characters;
    CDUnknownFunctionPointerType ignorableWhitespace;
    CDUnknownFunctionPointerType processingInstruction;
    CDUnknownFunctionPointerType comment;
    CDUnknownFunctionPointerType warning;
    CDUnknownFunctionPointerType error;
    CDUnknownFunctionPointerType fatalError;
    CDUnknownFunctionPointerType getParameterEntity;
    CDUnknownFunctionPointerType cdataBlock;
    CDUnknownFunctionPointerType externalSubset;
    unsigned int initialized;
    void *_private;
    CDUnknownFunctionPointerType startElementNs;
    CDUnknownFunctionPointerType endElementNs;
    CDUnknownFunctionPointerType serror;
};

struct _xmlValidState;

struct array<char, 64> {
    char _field1[64];
};

struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
    struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
        struct __rep {
            union {
                struct __long {
                    char *__data_;
                    unsigned long long __size_;
                    unsigned long long __cap_;
                } __l;
                struct __short {
                    char __data_[23];
                    struct {
                        unsigned char __size_;
                    } ;
                } __s;
                struct __raw {
                    unsigned long long __words[3];
                } __r;
            } ;
        } __first_;
    } __r_;
};

struct deque<id, std::__1::allocator<id>> {
    struct __split_buffer<__strong id *, std::__1::allocator<__strong id *>> {
        id **__first_;
        id **__begin_;
        id **__end_;
        struct __compressed_pair<__strong id **, std::__1::allocator<__strong id *>> {
            id **__first_;
        } __end_cap_;
    } __map_;
    unsigned long long __start_;
    struct __compressed_pair<unsigned long, std::__1::allocator<id>> {
        unsigned long long __first_;
    } __size_;
};

struct deque<std::__1::tuple<CGSize, ASTextLayout *>, std::__1::allocator<std::__1::tuple<CGSize, ASTextLayout *>>> {
    struct __split_buffer<std::__1::tuple<CGSize, ASTextLayout *>*, std::__1::allocator<std::__1::tuple<CGSize, ASTextLayout *>*>> {
        struct tuple<CGSize, ASTextLayout *> **__first_;
        struct tuple<CGSize, ASTextLayout *> **__begin_;
        struct tuple<CGSize, ASTextLayout *> **__end_;
        struct __compressed_pair<std::__1::tuple<CGSize, ASTextLayout *>**, std::__1::allocator<std::__1::tuple<CGSize, ASTextLayout *>*>> {
            struct tuple<CGSize, ASTextLayout *> **__first_;
        } __end_cap_;
    } __map_;
    unsigned long long __start_;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::tuple<CGSize, ASTextLayout *>>> {
        unsigned long long __first_;
    } __size_;
};

struct function<bool (unsigned long long, unsigned long long)> {
    struct type __buf_;
    struct __base<bool (unsigned long long, unsigned long long)> *__f_;
};

struct function<realm::Realm::Config (std::__1::shared_ptr<realm::SyncUser>, std::__1::basic_string<char>)>;

struct function<void (const std::__1::basic_string<char>&, const realm::SyncConfig &, std::__1::shared_ptr<realm::SyncSession>)> {
    struct type _field1;
    struct __base<void (const std::__1::basic_string<char>&, const realm::SyncConfig &, std::__1::shared_ptr<realm::SyncSession>)> *_field2;
};

struct function<void (std::__1::shared_ptr<realm::Realm>, std::__1::shared_ptr<realm::Realm>, realm::Schema &)> {
    struct type __buf_;
    struct __base<void (std::__1::shared_ptr<realm::Realm>, std::__1::shared_ptr<realm::Realm>, realm::Schema &)> *__f_;
};

struct function<void (std::__1::shared_ptr<realm::SyncSession>, realm::SyncError)> {
    struct type _field1;
    struct __base<void (std::__1::shared_ptr<realm::SyncSession>, realm::SyncError)> *_field2;
};

struct gzFile_s {
    unsigned int _field1;
    char *_field2;
    long long _field3;
};

struct in6_addr {
    union {
        unsigned char _field1[16];
        unsigned short _field2[8];
        unsigned int _field3[4];
    } _field1;
};

struct in_addr {
    unsigned int _field1;
};

struct list<std::__1::shared_ptr<POPAnimatorItem>, std::__1::allocator<std::__1::shared_ptr<POPAnimatorItem>>> {
    struct __list_node_base<std::__1::shared_ptr<POPAnimatorItem>, void *> __end_;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<std::__1::shared_ptr<POPAnimatorItem>, void *>>> {
        unsigned long long __first_;
    } __size_alloc_;
};

struct map<std::__1::basic_string<char>, imcore::FriendProfile, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, imcore::FriendProfile>>> {
    struct __tree<std::__1::__value_type<std::__1::basic_string<char>, imcore::FriendProfile>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, imcore::FriendProfile>, std::__1::less<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, imcore::FriendProfile>>> {
        struct __tree_node<std::__1::__value_type<std::__1::basic_string<char>, imcore::FriendProfile>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, imcore::FriendProfile>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, imcore::FriendProfile>, std::__1::less<std::__1::basic_string<char>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::basic_string<char>, imcore::NewGroupMemberInfo, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, imcore::NewGroupMemberInfo>>> {
    struct __tree<std::__1::__value_type<std::__1::basic_string<char>, imcore::NewGroupMemberInfo>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, imcore::NewGroupMemberInfo>, std::__1::less<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, imcore::NewGroupMemberInfo>>> {
        struct __tree_node<std::__1::__value_type<std::__1::basic_string<char>, imcore::NewGroupMemberInfo>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, imcore::NewGroupMemberInfo>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, imcore::NewGroupMemberInfo>, std::__1::less<std::__1::basic_string<char>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::basic_string<char>, long, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, long>>> {
    struct __tree<std::__1::__value_type<std::__1::basic_string<char>, long>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, long>, std::__1::less<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, long>>> {
        struct __tree_node<std::__1::__value_type<std::__1::basic_string<char>, long>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, long>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, long>, std::__1::less<std::__1::basic_string<char>>, true>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char>>>> {
    struct __tree<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::less<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>>> {
        struct __tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::less<std::__1::basic_string<char>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct msgpack_object {
    int _field1;
    union {
        _Bool _field1;
        unsigned long long _field2;
        long long _field3;
        double _field4;
        struct {
            unsigned int _field1;
            struct msgpack_object *_field2;
        } _field5;
        struct {
            unsigned int _field1;
            struct msgpack_object_kv *_field2;
        } _field6;
        struct {
            unsigned int _field1;
            char *_field2;
        } _field7;
    } _field2;
};

struct msgpack_object_kv;

struct msgpack_packer {
    void *_field1;
    CDUnknownFunctionPointerType _field2;
};

struct mutex {
    struct _opaque_pthread_mutex_t __m_;
};

struct pair<std::__1::basic_string<char>, std::__1::basic_string<char>> {
    basic_string_a490aa4c first;
    basic_string_a490aa4c second;
};

struct set<std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::basic_string<char>>> {
    struct __tree<std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::basic_string<char>>> {
        struct __tree_node<std::__1::basic_string<char>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::basic_string<char>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::less<std::__1::basic_string<char>>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct shared_ptr<ASDN::Mutex> {
    struct Mutex *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<ASDN::RecursiveMutex> {
    struct RecursiveMutex *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<ASDisplayNodeLayout> {
    struct ASDisplayNodeLayout *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<POPAnimatorItem> {
    struct POPAnimatorItem *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<const realm::Descriptor> {
    struct Descriptor *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<const realm::LinkView> {
    struct LinkView *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<imcore::MsgNode> {
    struct MsgNode *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<imcore::SessionNode> {
    struct SessionNode *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<realm::LinkView> {
    struct LinkView *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<realm::Realm> {
    struct Realm *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<realm::SyncConfig> {
    struct SyncConfig *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<realm::SyncSession> {
    struct SyncSession *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<realm::SyncUser> {
    struct SyncUser *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<realm::_impl::CollectionNotifier> {
    struct CollectionNotifier *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<realm::sync::ClientHistory::ChangesetCooker> {
    struct ChangesetCooker *_field1;
    struct __shared_weak_count *_field2;
};

struct sockaddr {
    unsigned char _field1;
    unsigned char _field2;
    char _field3[14];
};

struct sockaddr_in {
    unsigned char _field1;
    unsigned char _field2;
    unsigned short _field3;
    struct in_addr _field4;
    char _field5[8];
};

struct sockaddr_in6 {
    unsigned char _field1;
    unsigned char _field2;
    unsigned short _field3;
    unsigned int _field4;
    struct in6_addr _field5;
    unsigned int _field6;
};

struct sockaddr_un {
    unsigned char _field1;
    unsigned char _field2;
    char _field3[104];
};

struct timeval {
    long long tv_sec;
    int tv_usec;
};

struct tm_zip_s {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned int _field6;
};

struct tuple<CGSize, ASTextLayout *>;

struct type {
    unsigned char __lx[24];
};

struct unique_ptr<RLMObservationInfo, std::__1::default_delete<RLMObservationInfo>> {
    struct __compressed_pair<RLMObservationInfo *, std::__1::default_delete<RLMObservationInfo>> {
        struct RLMObservationInfo *__first_;
    } __ptr_;
};

struct unique_ptr<id [], std::__1::default_delete<id []>> {
    struct __compressed_pair<__strong id *, std::__1::default_delete<id []>> {
        id *__first_;
    } __ptr_;
};

struct unique_ptr<realm::Array, std::__1::default_delete<realm::Array>> {
    struct __compressed_pair<realm::Array *, std::__1::default_delete<realm::Array>> {
        struct Array *__first_;
    } __ptr_;
};

struct unique_ptr<realm::PermissionResults, std::__1::default_delete<realm::PermissionResults>> {
    struct __compressed_pair<realm::PermissionResults *, std::__1::default_delete<realm::PermissionResults>> {
        struct PermissionResults *__first_;
    } __ptr_;
};

struct unique_ptr<realm::StringIndex, std::__1::default_delete<realm::StringIndex>> {
    struct __compressed_pair<realm::StringIndex *, std::__1::default_delete<realm::StringIndex>> {
        struct StringIndex *__first_;
    } __ptr_;
};

struct unique_ptr<realm::SyncConfig, std::__1::default_delete<realm::SyncConfig>> {
    struct __compressed_pair<realm::SyncConfig *, std::__1::default_delete<realm::SyncConfig>> {
        struct SyncConfig *__first_;
    } __ptr_;
};

struct unique_ptr<realm::TableViewBase, std::__1::default_delete<realm::TableViewBase>> {
    struct __compressed_pair<realm::TableViewBase *, std::__1::default_delete<realm::TableViewBase>> {
        struct TableViewBase *__first_;
    } __ptr_;
};

struct unique_ptr<realm::ThreadSafeReferenceBase, std::__1::default_delete<realm::ThreadSafeReferenceBase>> {
    struct __compressed_pair<realm::ThreadSafeReferenceBase *, std::__1::default_delete<realm::ThreadSafeReferenceBase>> {
        struct ThreadSafeReferenceBase *__first_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerIndexPath, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerIndexPath, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerIndexPath, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerIndexPath, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerIndexPath, void *>*> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerIndexPath, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerIndexPath, void *>*>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerSectionControllerWrapper, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerSectionControllerWrapper, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerSectionControllerWrapper, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerSectionControllerWrapper, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerSectionControllerWrapper, void *>*> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerSectionControllerWrapper, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerSectionControllerWrapper, void *>*>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, RLMClassInfo>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, RLMClassInfo>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, RLMClassInfo>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, RLMClassInfo>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, RLMClassInfo>, void *>*> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, RLMClassInfo>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, RLMClassInfo>, void *>*>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, IGListMoveIndex *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, IGListMoveIndex *>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, IGListMoveIndex *>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, IGListMoveIndex *>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, IGListMoveIndex *>, void *>*> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, IGListMoveIndex *>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, IGListMoveIndex *>, void *>*>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, long>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, long>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, long>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, long>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, long>, void *>*> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, long>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, long>, void *>*>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::function<realm::Realm::Config (std::__1::shared_ptr<realm::SyncUser>, std::__1::basic_string<char>)>, std::__1::default_delete<std::__1::function<realm::Realm::Config (std::__1::shared_ptr<realm::SyncUser>, std::__1::basic_string<char>)>>> {
    struct __compressed_pair<std::__1::function<realm::Realm::Config (std::__1::shared_ptr<realm::SyncUser>, std::__1::basic_string<char>)>*, std::__1::default_delete<std::__1::function<realm::Realm::Config (std::__1::shared_ptr<realm::SyncUser>, std::__1::basic_string<char>)>>> {
        struct function<realm::Realm::Config (std::__1::shared_ptr<realm::SyncUser>, std::__1::basic_string<char>)> *__first_;
    } __ptr_;
};

struct unordered_map<NSString *, RLMClassInfo, std::__1::hash<NSString *>, std::__1::equal_to<NSString *>, std::__1::allocator<std::__1::pair<NSString *const, RLMClassInfo>>> {
    struct __hash_table<std::__1::__hash_value_type<NSString *, RLMClassInfo>, std::__1::__unordered_map_hasher<NSString *, std::__1::__hash_value_type<NSString *, RLMClassInfo>, std::__1::hash<NSString *>, true>, std::__1::__unordered_map_equal<NSString *, std::__1::__hash_value_type<NSString *, RLMClassInfo>, std::__1::equal_to<NSString *>, true>, std::__1::allocator<std::__1::__hash_value_type<NSString *, RLMClassInfo>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, RLMClassInfo>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, RLMClassInfo>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, RLMClassInfo>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, RLMClassInfo>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, RLMClassInfo>, void *>*> __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<NSString *, std::__1::__hash_value_type<NSString *, RLMClassInfo>, std::__1::hash<NSString *>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<NSString *, std::__1::__hash_value_type<NSString *, RLMClassInfo>, std::__1::equal_to<NSString *>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<long, IGListMoveIndex *, std::__1::hash<long>, std::__1::equal_to<long>, std::__1::allocator<std::__1::pair<const long, IGListMoveIndex *>>> {
    struct __hash_table<std::__1::__hash_value_type<long, IGListMoveIndex *>, std::__1::__unordered_map_hasher<long, std::__1::__hash_value_type<long, IGListMoveIndex *>, std::__1::hash<long>, true>, std::__1::__unordered_map_equal<long, std::__1::__hash_value_type<long, IGListMoveIndex *>, std::__1::equal_to<long>, true>, std::__1::allocator<std::__1::__hash_value_type<long, IGListMoveIndex *>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, IGListMoveIndex *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, IGListMoveIndex *>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, IGListMoveIndex *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<long, IGListMoveIndex *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, IGListMoveIndex *>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<long, std::__1::__hash_value_type<long, IGListMoveIndex *>, std::__1::hash<long>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<long, std::__1::__hash_value_type<long, IGListMoveIndex *>, std::__1::equal_to<long>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<long, long, std::__1::hash<long>, std::__1::equal_to<long>, std::__1::allocator<std::__1::pair<const long, long>>> {
    struct __hash_table<std::__1::__hash_value_type<long, long>, std::__1::__unordered_map_hasher<long, std::__1::__hash_value_type<long, long>, std::__1::hash<long>, true>, std::__1::__unordered_map_equal<long, std::__1::__hash_value_type<long, long>, std::__1::equal_to<long>, true>, std::__1::allocator<std::__1::__hash_value_type<long, long>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, long>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, long>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, long>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<long, long>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, long>, void *>*> __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<long, std::__1::__hash_value_type<long, long>, std::__1::hash<long>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<long, std::__1::__hash_value_type<long, long>, std::__1::equal_to<long>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_set<_IGListWorkingRangeHandlerIndexPath, _IGListWorkingRangeHandlerIndexPathHash, std::__1::equal_to<_IGListWorkingRangeHandlerIndexPath>, std::__1::allocator<_IGListWorkingRangeHandlerIndexPath>> {
    struct __hash_table<_IGListWorkingRangeHandlerIndexPath, _IGListWorkingRangeHandlerIndexPathHash, std::__1::equal_to<_IGListWorkingRangeHandlerIndexPath>, std::__1::allocator<_IGListWorkingRangeHandlerIndexPath>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerIndexPath, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerIndexPath, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerIndexPath, void *>*>, std::__1::allocator<std::__1::__hash_node<_IGListWorkingRangeHandlerIndexPath, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerIndexPath, void *>*> __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, _IGListWorkingRangeHandlerIndexPathHash> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::equal_to<_IGListWorkingRangeHandlerIndexPath>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_set<_IGListWorkingRangeHandlerSectionControllerWrapper, _IGListWorkingRangeHashID, std::__1::equal_to<_IGListWorkingRangeHandlerSectionControllerWrapper>, std::__1::allocator<_IGListWorkingRangeHandlerSectionControllerWrapper>> {
    struct __hash_table<_IGListWorkingRangeHandlerSectionControllerWrapper, _IGListWorkingRangeHashID, std::__1::equal_to<_IGListWorkingRangeHandlerSectionControllerWrapper>, std::__1::allocator<_IGListWorkingRangeHandlerSectionControllerWrapper>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerSectionControllerWrapper, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerSectionControllerWrapper, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerSectionControllerWrapper, void *>*>, std::__1::allocator<std::__1::__hash_node<_IGListWorkingRangeHandlerSectionControllerWrapper, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerSectionControllerWrapper, void *>*> __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, _IGListWorkingRangeHashID> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::equal_to<_IGListWorkingRangeHandlerSectionControllerWrapper>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct vector<ASRangeTuningParameters, std::__1::allocator<ASRangeTuningParameters>>;

struct vector<IGListSectionEntry, std::__1::allocator<IGListSectionEntry>> {
    struct IGListSectionEntry *__begin_;
    struct IGListSectionEntry *__end_;
    struct __compressed_pair<IGListSectionEntry *, std::__1::allocator<IGListSectionEntry>> {
        struct IGListSectionEntry *__first_;
    } __end_cap_;
};

struct vector<RLMClassInfo *, std::__1::allocator<RLMClassInfo *>> {
    struct RLMClassInfo **_field1;
    struct RLMClassInfo **_field2;
    struct __compressed_pair<RLMClassInfo **, std::__1::allocator<RLMClassInfo *>> {
        struct RLMClassInfo **_field1;
    } _field3;
};

struct vector<RLMObservationInfo *, std::__1::allocator<RLMObservationInfo *>> {
    struct RLMObservationInfo **_field1;
    struct RLMObservationInfo **_field2;
    struct __compressed_pair<RLMObservationInfo **, std::__1::allocator<RLMObservationInfo *>> {
        struct RLMObservationInfo **_field1;
    } _field3;
};

struct vector<WXJSExpression *, std::__1::allocator<WXJSExpression *>> {
    struct WXJSExpression **_field1;
    struct WXJSExpression **_field2;
    struct __compressed_pair<WXJSExpression **, std::__1::allocator<WXJSExpression *>> {
        struct WXJSExpression **_field1;
    } _field3;
};

struct vector<WXJSToken *, std::__1::allocator<WXJSToken *>> {
    struct WXJSToken **__begin_;
    struct WXJSToken **__end_;
    struct __compressed_pair<WXJSToken **, std::__1::allocator<WXJSToken *>> {
        struct WXJSToken **__first_;
    } __end_cap_;
};

struct vector<_NSRange, std::__1::allocator<_NSRange>> {
    struct _NSRange *__begin_;
    struct _NSRange *__end_;
    struct __compressed_pair<_NSRange *, std::__1::allocator<_NSRange>> {
        struct _NSRange *__first_;
    } __end_cap_;
};

struct vector<bool, std::__1::allocator<bool>> {
    unsigned long long *__begin_;
    unsigned long long __size_;
    struct __compressed_pair<unsigned long, std::__1::allocator<unsigned long>> {
        unsigned long long __first_;
    } __cap_alloc_;
};

struct vector<char, std::__1::allocator<char>> {
    char *__begin_;
    char *__end_;
    struct __compressed_pair<char *, std::__1::allocator<char>> {
        char *__first_;
    } __end_cap_;
};

struct vector<const realm::ColumnBase *, std::__1::allocator<const realm::ColumnBase *>>;

struct vector<imcore::Elem, std::__1::allocator<imcore::Elem>> {
    struct Elem *__begin_;
    struct Elem *__end_;
    struct __compressed_pair<imcore::Elem *, std::__1::allocator<imcore::Elem>> {
        struct Elem *__first_;
    } __end_cap_;
};

struct vector<imcore::FriendChangeUserInfo, std::__1::allocator<imcore::FriendChangeUserInfo>> {
    struct FriendChangeUserInfo *_field1;
    struct FriendChangeUserInfo *_field2;
    struct __compressed_pair<imcore::FriendChangeUserInfo *, std::__1::allocator<imcore::FriendChangeUserInfo>> {
        struct FriendChangeUserInfo *_field1;
    } _field3;
};

struct vector<imcore::GroupTipsElem_GroupInfo, std::__1::allocator<imcore::GroupTipsElem_GroupInfo>> {
    struct GroupTipsElem_GroupInfo *_field1;
    struct GroupTipsElem_GroupInfo *_field2;
    struct __compressed_pair<imcore::GroupTipsElem_GroupInfo *, std::__1::allocator<imcore::GroupTipsElem_GroupInfo>> {
        struct GroupTipsElem_GroupInfo *_field1;
    } _field3;
};

struct vector<imcore::GroupTipsElem_MemberInfo, std::__1::allocator<imcore::GroupTipsElem_MemberInfo>> {
    struct GroupTipsElem_MemberInfo *_field1;
    struct GroupTipsElem_MemberInfo *_field2;
    struct __compressed_pair<imcore::GroupTipsElem_MemberInfo *, std::__1::allocator<imcore::GroupTipsElem_MemberInfo>> {
        struct GroupTipsElem_MemberInfo *_field1;
    } _field3;
};

struct vector<long, std::__1::allocator<long>> {
    long long *__begin_;
    long long *__end_;
    struct __compressed_pair<long *, std::__1::allocator<long>> {
        long long *__first_;
    } __end_cap_;
};

struct vector<realm::CollectionChangeSet::Move, std::__1::allocator<realm::CollectionChangeSet::Move>> {
    struct Move *__begin_;
    struct Move *__end_;
    struct __compressed_pair<realm::CollectionChangeSet::Move *, std::__1::allocator<realm::CollectionChangeSet::Move>> {
        struct Move *__first_;
    } __end_cap_;
};

struct vector<realm::IndexSet, std::__1::allocator<realm::IndexSet>> {
    struct IndexSet *__begin_;
    struct IndexSet *__end_;
    struct __compressed_pair<realm::IndexSet *, std::__1::allocator<realm::IndexSet>> {
        struct IndexSet *__first_;
    } __end_cap_;
};

struct vector<realm::Property, std::__1::allocator<realm::Property>> {
    struct Property *_field1;
    struct Property *_field2;
    struct __compressed_pair<realm::Property *, std::__1::allocator<realm::Property>> {
        struct Property *_field1;
    } _field3;
};

struct vector<realm::QueryGroup, std::__1::allocator<realm::QueryGroup>> {
    struct QueryGroup *__begin_;
    struct QueryGroup *__end_;
    struct __compressed_pair<realm::QueryGroup *, std::__1::allocator<realm::QueryGroup>> {
        struct QueryGroup *__first_;
    } __end_cap_;
};

struct vector<realm::_impl::ChunkedRangeVector::Chunk, std::__1::allocator<realm::_impl::ChunkedRangeVector::Chunk>> {
    struct Chunk *__begin_;
    struct Chunk *__end_;
    struct __compressed_pair<realm::_impl::ChunkedRangeVector::Chunk *, std::__1::allocator<realm::_impl::ChunkedRangeVector::Chunk>> {
        struct Chunk *__first_;
    } __end_cap_;
};

struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> {
    basic_string_a490aa4c *_field1;
    basic_string_a490aa4c *_field2;
    struct __compressed_pair<std::__1::basic_string<char>*, std::__1::allocator<std::__1::basic_string<char>>> {
        basic_string_a490aa4c *_field1;
    } _field3;
};

struct vector<std::__1::vector<ASRangeTuningParameters, std::__1::allocator<ASRangeTuningParameters>>, std::__1::allocator<std::__1::vector<ASRangeTuningParameters, std::__1::allocator<ASRangeTuningParameters>>>> {
    struct vector<ASRangeTuningParameters, std::__1::allocator<ASRangeTuningParameters>> *__begin_;
    struct vector<ASRangeTuningParameters, std::__1::allocator<ASRangeTuningParameters>> *__end_;
    struct __compressed_pair<std::__1::vector<ASRangeTuningParameters, std::__1::allocator<ASRangeTuningParameters>>*, std::__1::allocator<std::__1::vector<ASRangeTuningParameters, std::__1::allocator<ASRangeTuningParameters>>>> {
        struct vector<ASRangeTuningParameters, std::__1::allocator<ASRangeTuningParameters>> *__first_;
    } __end_cap_;
};

struct vector<std::__1::vector<const realm::ColumnBase *, std::__1::allocator<const realm::ColumnBase *>>, std::__1::allocator<std::__1::vector<const realm::ColumnBase *, std::__1::allocator<const realm::ColumnBase *>>>> {
    struct vector<const realm::ColumnBase *, std::__1::allocator<const realm::ColumnBase *>> *__begin_;
    struct vector<const realm::ColumnBase *, std::__1::allocator<const realm::ColumnBase *>> *__end_;
    struct __compressed_pair<std::__1::vector<const realm::ColumnBase *, std::__1::allocator<const realm::ColumnBase *>>*, std::__1::allocator<std::__1::vector<const realm::ColumnBase *, std::__1::allocator<const realm::ColumnBase *>>>> {
        struct vector<const realm::ColumnBase *, std::__1::allocator<const realm::ColumnBase *>> *__first_;
    } __end_cap_;
};

struct vector<unsigned long, std::__1::allocator<unsigned long>> {
    unsigned long long *__begin_;
    unsigned long long *__end_;
    struct __compressed_pair<unsigned long *, std::__1::allocator<unsigned long>> {
        unsigned long long *__first_;
    } __end_cap_;
};

struct weak_ptr<realm::SyncSession> {
    struct SyncSession *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct weak_ptr<realm::SyncUser> {
    struct SyncUser *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct wx_css_node {
    struct {
        int _field1;
        int _field2;
        int _field3;
        int _field4;
        int _field5;
        int _field6;
        int _field7;
        int _field8;
        float _field9;
        float _field10[6];
        float _field11[4];
        float _field12[6];
        float _field13[6];
        float _field14[2];
        float _field15[2];
        float _field16[2];
    } _field1;
    struct {
        float _field1[4];
        float _field2[2];
        int _field3;
        _Bool _field4;
        float _field5[2];
        float _field6;
        float _field7;
        float _field8[2];
        float _field9[2];
        int _field10;
    } _field2;
    int _field3;
    int _field4;
    struct wx_css_node *_field5;
    struct wx_css_node *_field6;
    CDUnknownFunctionPointerType _field7;
    CDUnknownFunctionPointerType _field8;
    CDUnknownFunctionPointerType _field9;
    CDUnknownFunctionPointerType _field10;
    void *_field11;
};

#pragma mark Typedef'd Structures

typedef struct {
    _Bool _field1;
    _Bool _field2;
    _Bool _field3;
} CDStruct_2a4d9400;

typedef struct {
    _Bool _field1;
    unsigned char _field2;
    _Bool _field3;
    unsigned long long _field4;
} CDStruct_6a6a01a4;

typedef struct {
    _Bool _field1;
} CDStruct_b31ca263;

typedef struct {
    unsigned int major;
    unsigned int minor;
    unsigned int bugfix;
} CDStruct_e24ffa00;

typedef struct {
    unsigned long long _field1;
    id *_field2;
    unsigned long long *_field3;
    unsigned long long _field4[5];
} CDStruct_70511ce9;

typedef struct {
    unsigned short wCmd;
    unsigned short wSubCmd;
    short wRst;
    unsigned int dwUsed;
    unsigned int dwCalUsed;
    unsigned short wTry;
    unsigned char acHostName[32];
    unsigned char acHostIp[32];
    unsigned short wPort;
    unsigned char cConn;
    unsigned char cNetType;
    unsigned char cNetwork;
    unsigned char acErrorStr[64];
    unsigned short wSendDataLen;
    unsigned short wResvDataLen;
} CDStruct_34f44c17;

typedef struct {
    char *_field1;
    char *_field2;
    unsigned int _field3;
    unsigned int _field4;
} CDStruct_4355734a;

typedef struct {
    char *_field1;
    void *_field2;
    _Bool _field3;
    void *_field4;
    char *_field5;
    char *_field6;
    char *_field7;
    char *_field8;
    char *_field9;
    unsigned int _field10;
    _Bool _field11;
    _Bool _field12;
    unsigned int _field13;
    unsigned int _field14;
    unsigned int _field15;
    unsigned int _field16;
} CDStruct_1e2a2a70;

typedef struct {
    double _field1;
    double _field2;
} CDStruct_c3b9c2ee;

typedef struct {
    double _field1;
    long long _field2;
    double _field3;
    long long _field4;
} CDStruct_264a827c;

typedef struct {
    long long version;
    void *info;
    CDUnknownFunctionPointerType retain;
    CDUnknownFunctionPointerType release;
    CDUnknownFunctionPointerType copyDescription;
} CDStruct_4210025a;

typedef struct {
    long long _field1;
    double _field2;
} CDStruct_7f320dbc;

typedef struct {
    long long value;
    int timescale;
    unsigned int flags;
    long long epoch;
} CDStruct_1b6d18a9;

typedef struct {
    long long _field1;
    int _field2;
} CDStruct_87dc826d;

typedef struct CDStruct_183601bc;

typedef struct {
    _Bool videoSupport;
    struct CGSize videoSize;
} CDStruct_3e9c2da3;

typedef struct {
    char _field1[33];
    _Bool _field2;
    CDStruct_e24ffa00 _field3;
    CDStruct_e24ffa00 _field4;
    struct {
        void *_field1;
        unsigned long long _field2;
        void *_field3;
        void *_field4;
        void *_field5;
    } _field5;
    struct CLSMachOSlice _field6;
    long long _field7;
} CDStruct_fad71a87;

typedef struct {
    CDStruct_7f320dbc _field1;
    CDStruct_7f320dbc _field2;
    CDStruct_7f320dbc _field3;
    CDStruct_7f320dbc _field4;
    CDStruct_7f320dbc _field5;
    CDStruct_7f320dbc _field6;
} CDStruct_99d2e400;

typedef struct {
    CDStruct_7f320dbc _field1;
    CDStruct_7f320dbc _field2;
} CDStruct_69654f45;

typedef struct {
    struct CGSize min;
    struct CGSize max;
} CDStruct_42a63532;

typedef struct {
    struct CLLocationCoordinate2D _field1;
    CDStruct_c3b9c2ee _field2;
} CDStruct_2b0c6e0b;

typedef struct {
    struct tm_zip_s _field1;
    unsigned long long _field2;
    unsigned long long _field3;
    unsigned long long _field4;
} CDStruct_192a48cb;

typedef struct {
    struct CGRect _field1;
    struct CGRect _field2;
} CDStruct_b7523c42;

typedef struct {
    CDStruct_b7523c42 _field1;
    struct CGRect _field2;
    struct CGRect _field3;
} CDStruct_ba5e0e3e;

typedef struct {
    long long _field1;
    union {
        struct {
            CDStruct_b7523c42 _field1;
            struct CGRect _field2;
        } _field1;
        CDStruct_b7523c42 _field2;
        CDStruct_ba5e0e3e _field3;
        struct {
            CDStruct_ba5e0e3e _field1;
            struct CGRect _field2;
        } _field4;
        CDStruct_ba5e0e3e _field5;
    } _field2;
} CDStruct_8ba7e530;

// Ambiguous groups
typedef struct {
    int page;
    int limit;
} CDStruct_69507789;

typedef struct {
    long long _field1;
    long long _field2;
} CDStruct_912cb5d2;

typedef struct {
    long long page;
    long long limit;
} CDStruct_3251c81c;

typedef struct SpringSolver<POP::Vector4<double>> {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
    double _field5;
    double _field6;
    double _field7;
    struct SSState<POP::Vector4<double>> _field8;
    struct Vector4<double> _field9;
    _Bool _field10;
} SpringSolver_fe820e75;

typedef struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
    struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
        struct __rep {
            union {
                struct __long {
                    char *__data_;
                    unsigned long long __size_;
                    unsigned long long __cap_;
                } __l;
                struct __short {
                    char __data_[23];
                    struct {
                        unsigned char __size_;
                    } ;
                } __s;
                struct __raw {
                    unsigned long long __words[3];
                } __r;
            } ;
        } __first_;
    } __r_;
} basic_string_a490aa4c;

typedef struct function<void (std::__1::shared_ptr<realm::SyncSession>, realm::SyncError)> {
    struct type _field1;
    struct __base<void (std::__1::shared_ptr<realm::SyncSession>, realm::SyncError)> *_field2;
} function_0cf83702;

typedef struct list<std::__1::shared_ptr<POPAnimatorItem>, std::__1::allocator<std::__1::shared_ptr<POPAnimatorItem>>> {
    struct __list_node_base<std::__1::shared_ptr<POPAnimatorItem>, void *> __end_;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<std::__1::shared_ptr<POPAnimatorItem>, void *>>> {
        unsigned long long __first_;
    } __size_alloc_;
} list_670f5810;

typedef struct shared_ptr<ASDisplayNodeLayout> {
    struct ASDisplayNodeLayout *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_8af51647;

typedef struct shared_ptr<POPAnimatorItem> {
    struct POPAnimatorItem *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_1553c9f8;

typedef struct shared_ptr<realm::Realm> {
    struct Realm *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_130f66cc;

typedef struct shared_ptr<realm::SyncSession> {
    struct SyncSession *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_3c92bca6;

typedef struct shared_ptr<realm::SyncUser> {
    struct SyncUser *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_324a0594;

typedef struct unique_ptr<realm::PermissionResults, std::__1::default_delete<realm::PermissionResults>> {
    struct __compressed_pair<realm::PermissionResults *, std::__1::default_delete<realm::PermissionResults>> {
        struct PermissionResults *__first_;
    } __ptr_;
} unique_ptr_48be5826;

typedef struct unique_ptr<realm::ThreadSafeReferenceBase, std::__1::default_delete<realm::ThreadSafeReferenceBase>> {
    struct __compressed_pair<realm::ThreadSafeReferenceBase *, std::__1::default_delete<realm::ThreadSafeReferenceBase>> {
        struct ThreadSafeReferenceBase *__first_;
    } __ptr_;
} unique_ptr_c83a4463;

typedef struct unordered_map<long, IGListMoveIndex *, std::__1::hash<long>, std::__1::equal_to<long>, std::__1::allocator<std::__1::pair<const long, IGListMoveIndex *>>> {
    struct __hash_table<std::__1::__hash_value_type<long, IGListMoveIndex *>, std::__1::__unordered_map_hasher<long, std::__1::__hash_value_type<long, IGListMoveIndex *>, std::__1::hash<long>, true>, std::__1::__unordered_map_equal<long, std::__1::__hash_value_type<long, IGListMoveIndex *>, std::__1::equal_to<long>, true>, std::__1::allocator<std::__1::__hash_value_type<long, IGListMoveIndex *>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, IGListMoveIndex *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, IGListMoveIndex *>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, IGListMoveIndex *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<long, IGListMoveIndex *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, IGListMoveIndex *>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<long, std::__1::__hash_value_type<long, IGListMoveIndex *>, std::__1::hash<long>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<long, std::__1::__hash_value_type<long, IGListMoveIndex *>, std::__1::equal_to<long>, true>> {
            float _field1;
        } _field4;
    } _field1;
} unordered_map_6fea4092;

typedef struct vector<_NSRange, std::__1::allocator<_NSRange>> {
    struct _NSRange *__begin_;
    struct _NSRange *__end_;
    struct __compressed_pair<_NSRange *, std::__1::allocator<_NSRange>> {
        struct _NSRange *__first_;
    } __end_cap_;
} vector_d5f79a51;

typedef struct vector<long, std::__1::allocator<long>> {
    long long *__begin_;
    long long *__end_;
    struct __compressed_pair<long *, std::__1::allocator<long>> {
        long long *__first_;
    } __end_cap_;
} vector_b5bccc4d;

#pragma mark Named Unions

union _GLKVector4 {
    struct {
        float x;
        float y;
        float z;
        float w;
    } ;
    struct {
        float r;
        float g;
        float b;
        float a;
    } ;
    struct {
        float s;
        float t;
        float p;
        float q;
    } ;
    float v[4];
};

#pragma mark Typedef'd Unions

typedef union {
    unsigned long long m_value;
    char m_null_state;
} CDUnion_f76efdce;

typedef union {
    long long _field1;
    unsigned long long _field2;
    double _field3;
} CDUnion_abebb5d1;

