//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class NSDateFormatter;

@interface DBManager : NSObject
{
    struct sqlite3 *_dbConn;
    struct CLock _lock;
    int _version;
    struct sqlite3 *_dbLyricMap;
    struct CLock _mapLock;
    NSDateFormatter *_dateFormatter;
}

- (id).cxx_construct;
- (void).cxx_destruct;
- (_Bool)saveConfigKey:(const char *)arg1 textValue:(const char *)arg2;
- (_Bool)saveConfigKey:(const char *)arg1 int64Value:(long long)arg2;
- (_Bool)saveConfigKey:(const char *)arg1 intValue:(int)arg2;
- (_Bool)loadConfigKey:(const char *)arg1 textValue:(id *)arg2;
- (_Bool)loadConfigKey:(const char *)arg1 int64Value:(long long *)arg2;
- (_Bool)loadConfigKey:(const char *)arg1 intValue:(int *)arg2;
- (int)readConfigFromDB:(id)arg1;
- (_Bool)upgradeSyncPlaylist:(struct sqlite3 *)arg1 version:(unsigned int)arg2;
- (_Bool)upgradeTableSetting:(struct sqlite3 *)arg1 version:(unsigned int)arg2;
- (_Bool)createTablesOfSetting:(struct sqlite3 *)arg1;
- (_Bool)loadPlaylistRecent:(id)arg1;
- (_Bool)removeAllRecentMediaItems;
- (_Bool)removeRecentMediaItems:(id)arg1;
- (_Bool)addRecentMediaItem:(id)arg1;
- (_Bool)loadPlaylistFavorites:(id)arg1;
- (_Bool)removeAllFavoriteMediaItems;
- (_Bool)removeFavoriteMediaItems:(id)arg1;
- (_Bool)isFavoriteMediaItemExists:(id)arg1;
- (_Bool)addFavoriteMediaItems:(id)arg1;
- (_Bool)loadFavoriteSongListMediaItems:(id)arg1 songListId:(unsigned long long)arg2;
- (_Bool)loadFavoriteSongLists:(id)arg1;
- (_Bool)removeAllFavoriteSongLists;
- (_Bool)removeFavoriteSongList:(unsigned long long)arg1;
- (_Bool)isFavoriteSongListExists:(unsigned long long)arg1;
- (_Bool)addFavoriteSongListMediaItems:(id)arg1 songListId:(unsigned long long)arg2;
- (_Bool)addFavoriteSongList:(id)arg1;
- (_Bool)clearTablesOfNetSongList;
- (_Bool)createTablesOfNetSongList:(struct sqlite3 *)arg1;
- (_Bool)loadDefaultPlaylist:(id)arg1;
- (_Bool)getPlaylistInfoOfType:(unsigned int)arg1 playlistId:(unsigned long long)arg2 playlistTitle:(id *)arg3 count:(unsigned int *)arg4;
- (_Bool)loadPlaylist:(unsigned long long)arg1 items:(id)arg2;
- (_Bool)loadPlaylistBySqliteStmt:(struct sqlite3_stmt *)arg1 items:(id)arg2;
- (_Bool)loadCustomPlaylists:(id)arg1;
- (_Bool)reorderMediaitem:(unsigned int)arg1 inPlaylist:(unsigned long long)arg2;
- (_Bool)removeAllMediaItemsInPlaylist:(unsigned long long)arg1;
- (_Bool)removeMediaItems:(unsigned int *)arg1 count:(unsigned int)arg2 inPlaylist:(unsigned long long)arg3;
- (_Bool)addMediaItems:(id)arg1 toPlaylist:(unsigned long long)arg2;
- (_Bool)renamePlaylist:(unsigned long long)arg1 newTitle:(id)arg2;
- (_Bool)removePlaylist:(unsigned long long)arg1;
- (unsigned long long)addPlaylist:(const char *)arg1 type:(int)arg2;
- (_Bool)isCustomPlaylistExists:(const char *)arg1;
- (_Bool)clearTablesOfPlaylist;
- (_Bool)createTablesOfPlaylist:(struct sqlite3 *)arg1;
- (_Bool)createTablesOfSyncPlaylist:(struct sqlite3 *)arg1;
- (id)GetSyncPlaylistTitle:(unsigned long long)arg1;
- (_Bool)isSyncPlaylistExists:(const char *)arg1;
- (_Bool)removeSyncPlayList;
- (_Bool)removeSyncMediaItems;
- (_Bool)removeSyncPlaylist:(unsigned long long)arg1;
- (_Bool)updateSyncPlaylistName:(unsigned long long)arg1 theNewName:(id)arg2;
- (unsigned long long)addSyncPlaylist:(const char *)arg1 type:(int)arg2 pid:(unsigned long long)arg3;
- (_Bool)addMediaItems:(id)arg1 toSyncPlaylist:(unsigned long long)arg2;
- (_Bool)loadSyncPlaylist:(id)arg1;
- (_Bool)loadSyncMediaItemInfo:(unsigned long long)arg1 outArray:(id)arg2;
- (_Bool)removeMediaItem:(unsigned long long)arg1 insyncPlaylist:(unsigned long long)arg2;
- (_Bool)GetRidsAndTitleFromSyncPlaylist:(unsigned long long)arg1 listTitle:(id)arg2 rids:(id)arg3;
- (_Bool)removeAllMediaItemsInSyncPlaylist:(unsigned long long)arg1;
- (_Bool)addSystemPlaylist:(struct sqlite3 *)arg1;
- (id)LocalDownloadGetFileWithRid:(id)arg1;
- (_Bool)LocalMusicLoadAlbums:(id)arg1;
- (_Bool)LocalMusicLoadArtists:(id)arg1;
- (_Bool)LocalMusicLoadMusicOfArtist:(id)arg1 album:(id)arg2 array:(id)arg3;
- (_Bool)LocalMusicRemoveItem:(unsigned long long)arg1;
- (unsigned long long)LocalMusicAddItem:(id)arg1;
- (_Bool)LocalMusicClearTables;
- (_Bool)LocalMusicUpgrade:(struct sqlite3 *)arg1 version:(unsigned int)arg2;
- (_Bool)LocalMusicCreateTables:(struct sqlite3 *)arg1;
- (_Bool)loadDownloadedItems:(id)arg1;
- (_Bool)loadDownloadItems:(id)arg1;
- (_Bool)loadDownloadedAndDownloadItems:(id)arg1;
- (_Bool)removeAllDownloadedItems;
- (_Bool)removeAllDownloadItems;
- (_Bool)removeDownloadItem:(unsigned long long)arg1;
- (_Bool)updateDownloadItemInfo:(id)arg1;
- (_Bool)setDownloadItem:(unsigned long long)arg1 progress:(unsigned int)arg2 total:(unsigned int)arg3;
- (_Bool)setDownloadItem:(unsigned long long)arg1 file:(const char *)arg2;
- (_Bool)setDownloadItem:(unsigned long long)arg1 state:(int)arg2;
- (_Bool)getDownloadItemState:(unsigned long long)arg1 state:(int *)arg2 file:(id *)arg3;
- (unsigned long long)addDownloadItem:(id)arg1;
- (_Bool)clearTablesOfDownload;
- (_Bool)upgradeTableDownload:(struct sqlite3 *)arg1 version:(unsigned int)arg2;
- (_Bool)upgradePlaylist:(struct sqlite3 *)arg1 version:(unsigned int)arg2;
- (_Bool)upgradeRecent:(struct sqlite3 *)arg1 version:(unsigned int)arg2;
- (_Bool)upgradeFavorites:(struct sqlite3 *)arg1 version:(unsigned int)arg2;
- (_Bool)createTablesOfDownload:(struct sqlite3 *)arg1;
- (id)loadPlaySourceWithRid:(unsigned long long)arg1;
- (_Bool)addPlaySourceWithMediaItems:(id)arg1 source:(id)arg2 date:(id)arg3;
- (_Bool)createTableOfPlaySource:(struct sqlite3 *)arg1;
- (int)rollbackTransaction:(struct sqlite3 *)arg1;
- (int)commitTransaction:(struct sqlite3 *)arg1;
- (int)beginTransaction:(struct sqlite3 *)arg1;
- (int)version;
- (unsigned int)readDBVersion:(struct sqlite3 *)arg1;
- (_Bool)createDBConfig:(struct sqlite3 *)arg1;
- (_Bool)updateDBConfig:(struct sqlite3 *)arg1 version:(unsigned int)arg2;
- (_Bool)closeConnection;
- (_Bool)createConnection:(id)arg1;
- (_Bool)createDatabase:(id)arg1;
- (void)dealloc;
- (id)init;
- (_Bool)isOverDueWithString:(const char *)arg1;
- (int)getCurTime:(char *)arg1 size:(int)arg2;
- (int)execWithSql:(const char *)arg1 errFormat:(const char *)arg2 db:(struct sqlite3 *)arg3;

@end

