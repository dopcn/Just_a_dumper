//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

#import "BBAAudioFullScreenPlayerDelegate-Protocol.h"
#import "BBAAudioMiniPlayerDelegate-Protocol.h"
#import "BBAAudioTargetAdapterDelegate-Protocol.h"
#import "UIAlertViewDelegate-Protocol.h"

@class BBAAudioFullScreenPlayer, BBAAudioMiniPlayer, BBAAudioPlayerDispatchManager, BBAUBCFlow, NSString;
@protocol BBATTSServiceDelegate;

@interface BBAAudioPlayerManager : NSObject <BBAAudioTargetAdapterDelegate, BBAAudioMiniPlayerDelegate, BBAAudioFullScreenPlayerDelegate, UIAlertViewDelegate>
{
    _Bool _isTTSPlaying;
    _Bool _isAladingPlaying;
    _Bool _isBackgroundState;
    _Bool _bMiniPlayerShowing;
    _Bool _isPullUpEnabled;
    _Bool _isPullDownEnabled;
    _Bool _bAllowWWANPlay;
    BBAAudioMiniPlayer *_miniPlayer;
    long long _currentPlayer;
    long long _pullUpPageNum;
    long long _pullDownPageNum;
    id <BBATTSServiceDelegate> _ttsDelegate;
    BBAAudioFullScreenPlayer *_fullscreenPlayer;
    double _audioSeekTime;
    long long _currentIntegerTime;
    BBAUBCFlow *_tts_foregroundFlow;
    BBAUBCFlow *_tts_backgroundFlow;
    BBAUBCFlow *_alading_foregroundFlow;
    BBAUBCFlow *_alading_backgroundFlow;
    BBAAudioPlayerDispatchManager *_dispatchManager;
}

+ (id)sharedInstance;
@property(retain, nonatomic) BBAAudioPlayerDispatchManager *dispatchManager; // @synthesize dispatchManager=_dispatchManager;
@property(retain, nonatomic) BBAUBCFlow *alading_backgroundFlow; // @synthesize alading_backgroundFlow=_alading_backgroundFlow;
@property(retain, nonatomic) BBAUBCFlow *alading_foregroundFlow; // @synthesize alading_foregroundFlow=_alading_foregroundFlow;
@property(retain, nonatomic) BBAUBCFlow *tts_backgroundFlow; // @synthesize tts_backgroundFlow=_tts_backgroundFlow;
@property(retain, nonatomic) BBAUBCFlow *tts_foregroundFlow; // @synthesize tts_foregroundFlow=_tts_foregroundFlow;
@property(nonatomic) long long currentIntegerTime; // @synthesize currentIntegerTime=_currentIntegerTime;
@property(nonatomic) double audioSeekTime; // @synthesize audioSeekTime=_audioSeekTime;
@property(retain, nonatomic) BBAAudioFullScreenPlayer *fullscreenPlayer; // @synthesize fullscreenPlayer=_fullscreenPlayer;
@property(nonatomic) _Bool bAllowWWANPlay; // @synthesize bAllowWWANPlay=_bAllowWWANPlay;
@property(nonatomic) __weak id <BBATTSServiceDelegate> ttsDelegate; // @synthesize ttsDelegate=_ttsDelegate;
@property(nonatomic) long long pullDownPageNum; // @synthesize pullDownPageNum=_pullDownPageNum;
@property(nonatomic) long long pullUpPageNum; // @synthesize pullUpPageNum=_pullUpPageNum;
@property(nonatomic) _Bool isPullDownEnabled; // @synthesize isPullDownEnabled=_isPullDownEnabled;
@property(nonatomic) _Bool isPullUpEnabled; // @synthesize isPullUpEnabled=_isPullUpEnabled;
@property(nonatomic) long long currentPlayer; // @synthesize currentPlayer=_currentPlayer;
@property(nonatomic) _Bool bMiniPlayerShowing; // @synthesize bMiniPlayerShowing=_bMiniPlayerShowing;
@property(retain, nonatomic) BBAAudioMiniPlayer *miniPlayer; // @synthesize miniPlayer=_miniPlayer;
- (void).cxx_destruct;
- (void)handleInterrupt:(id)arg1;
- (id)currentPlayingTTSID;
- (void)closeTTS;
- (_Bool)isTTSON;
- (void)playNextTTS:(_Bool)arg1;
- (void)appendTTSText:(id)arg1 identity:(id)arg2;
- (void)playTTS:(id)arg1 withTTSID:(id)arg2;
- (void)cancelPlayCurrentTTS;
- (void)ttsPause;
- (void)ttsPlay;
- (_Bool)isTTSPaused;
- (_Bool)isTTSPlaying;
- (id)aladingReportUBCInfoWithValue:(id)arg1;
- (void)alading_ubcEndBackgroundFlow;
- (void)alading_ubcStartBackgroundFlow;
- (void)alading_ubcEndForegroundFlow;
- (void)alading_ubcStartForegroundFlow;
- (void)startRemoteControl;
- (void)stopAndResetRemoteControl;
- (id)ttsReportUBCInfoWithValue:(id)arg1;
- (void)tts_ubcEndBackgroundFlow;
- (void)tts_ubcStartBackgroundFlow;
- (void)tts_ubcEndForegroundFlow;
- (void)tts_ubcStartForegroundFlow;
- (void)audioMiniPlayerDidClickDetailPageButton;
- (void)enterAppBackgroundNotification:(id)arg1;
- (void)becomeAppActivityNotification:(id)arg1;
- (void)addAppBackgroundNotifications;
- (void)closeAudioPlayers;
- (void)stopAudioPlaying;
- (float)getBMSDKCacheSize;
- (void)clearBMSDKCache;
- (void)p_handleDownloadStatusChanged:(id)arg1;
- (id)getCurrentAudioInfo;
- (long long)getBBAAudioSource;
- (long long)getBBAAudioPlayMode;
- (long long)getBBAAudioPlayerStatus;
- (void)changtingPluginHandleUserEvent:(long long)arg1;
- (void)changtingPluginHandleActionWithParameters:(id)arg1;
- (void)insertAudioList:(id)arg1 pageNum:(unsigned long long)arg2 audioList:(id)arg3;
- (void)appendAudioList:(id)arg1 pageNum:(unsigned long long)arg2 audioList:(id)arg3;
- (void)getPlayListNextPageWithUserInfo:(id)arg1 andCallback:(CDUnknownBlockType)arg2;
- (void)getPlayListLastPageWithUserInfo:(id)arg1 andCallback:(CDUnknownBlockType)arg2;
- (void)setPlayListPullUpEnable:(_Bool)arg1 PullDownEnable:(_Bool)arg2;
- (long long)p_remoteChangePlaybackPosition:(id)arg1;
- (long long)p_remotePlayplayOrPause:(id)arg1;
- (long long)p_remotePlayPreviousAudio:(id)arg1;
- (long long)p_remotePlayNextAudio:(id)arg1;
- (void)p_openRemoteCommand:(_Bool)arg1;
- (void)setMiniPlayerAlpha:(double)arg1;
- (void)setMiniPlayerOriginY:(double)arg1;
- (void)updateToTTSPlayerAudioSource;
- (void)previousNextButtonInPlayerIfEnable:(_Bool)arg1;
- (void)previousButtonInPlayerIfEnable:(_Bool)arg1;
- (void)updateTTSPlayerAudioItemInfo:(id)arg1;
- (long long)getCurrentTTSReadingContent;
- (long long)getCurrentTTSReadingTone;
- (void)setTTSReadingContentIfAutoPlay:(_Bool)arg1;
- (void)setTTSReadingToneIfAutoPlay:(_Bool)arg1;
- (void)fullScreenWillPassivityDismiss;
- (void)audioFullScreenPlayerDidClickSwichButton;
- (void)audioFullScreenPlayerDidClickCloseButton:(id)arg1;
- (void)audioMiniPlayerDidClickDetailPageButton:(id)arg1;
- (void)audioMiniPlayerDidClickTitleViewButton:(id)arg1;
- (void)audioMiniPlayerDidClickSwichButton:(id)arg1;
- (void)audioMiniPlayerDidClickCloseButton:(id)arg1;
- (void)playPreviousTTSWithCurrentTTSID:(id)arg1;
- (void)playNextTTSWithCurrentTTSID:(id)arg1 isAutoPlay:(_Bool)arg2;
- (void)ttsDidMeetError:(id)arg1 playingString:(id)arg2 playingTTSID:(id)arg3 canWork:(_Bool)arg4;
- (id)fetchNextTTSText:(id)arg1 withTTSID:(id)arg2;
- (void)trackStatisticsWithTTSPlayStatus:(unsigned long long)arg1;
- (void)ttsPlayStatusDidChange:(unsigned long long)arg1 currentTTSText:(id)arg2 currentTTSID:(id)arg3;
- (void)didCloseTTSEngine;
- (void)didOpenTTSEngine;
- (void)fetchBMAudioInfoFailed;
- (void)showWWANPlayAlertWithAllowBlock:(CDUnknownBlockType)arg1;
- (void)p_showNONetworkToast;
- (void)checkPlayAtIndex:(unsigned long long)arg1 allowBlock:(CDUnknownBlockType)arg2;
- (void)willPlayAtIndex:(unsigned long long)arg1;
- (void)updatePlayerStatus:(long long)arg1 withCurrent:(double)arg2;
- (void)updateAudioPlayProgress:(float)arg1 withDuration:(double)arg2 withCurrent:(double)arg3;
- (void)didPreparePlayAtIndex:(unsigned long long)arg1;
- (void)didFailedWithErrorInfo:(id)arg1;
- (void)updateAudioItemInfo:(id)arg1;
- (void)p_audioInterruptHandler:(id)arg1;
- (long long)p_getAudioSource:(id)arg1;
- (void)dismissFloatingPlayerWithAnimation:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;
- (void)p_setInfoToAudioCenter:(_Bool)arg1;
- (void)miniPlayerSwitchParentVC:(id)arg1 offset:(double)arg2 parentVCType:(long long)arg3;
- (void)p_showAllPlayers:(id)arg1 miniPlayerOffset:(double)arg2;
- (void)p_showMiniPlayer:(id)arg1 offset:(double)arg2 insertViewCompletion:(CDUnknownBlockType)arg3 completion:(CDUnknownBlockType)arg4;
- (void)p_showMiniPlayer:(id)arg1 offset:(double)arg2 completion:(CDUnknownBlockType)arg3;
- (void)p_closeTTSEngine;
- (void)p_initAudioPlayers;
- (void)invokeMiniPlayerByCTHeadset:(id)arg1 offset:(double)arg2;
- (void)dismissMiniPlayerByCTHeadset:(id)arg1 offset:(double)arg2;
- (void)trackStaticsWhenInvokeMiniPlayer;
- (void)invokeMiniPlayerByTTS:(id)arg1 insertViewCompletion:(CDUnknownBlockType)arg2 offset:(double)arg3;
- (void)invokeMiniPlayerByTTS:(id)arg1 offset:(double)arg2;
- (void)invokeMiniPlayer:(id)arg1 playList:(id)arg2 atIndex:(long long)arg3 forceReStart:(_Bool)arg4 souce:(id)arg5 currentProgress:(double)arg6 miniPlayerOffset:(double)arg7;
- (void)invokeFullScreenPlayer:(id)arg1 playList:(id)arg2 atIndex:(long long)arg3 forceReStart:(_Bool)arg4 source:(id)arg5 currentProgress:(double)arg6 miniPlayerOffset:(double)arg7;
- (void)p_dismissMiniPlayer:(_Bool)arg1 offset:(double)arg2;
- (void)showCloseAlertWithAnimation:(_Bool)arg1 offset:(double)arg2;
- (void)dismissMiniPlayerWithOffset:(double)arg1 animation:(_Bool)arg2;
- (void)switchToMiniPlayer;
@property(readonly, nonatomic) double miniPlayerHeight;
- (long long)getAudioPlayerDisPatchABStatus;
- (void)setMusicAudioTrafficFree:(_Bool)arg1;
- (void)dealloc;
- (void)p_addNotificationObserver;
- (_Bool)isShowFullScreenPlayer;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

