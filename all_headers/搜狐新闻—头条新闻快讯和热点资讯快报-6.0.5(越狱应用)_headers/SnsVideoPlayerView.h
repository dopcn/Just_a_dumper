//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "SNSBaseVideoPlayerView.h"

#import "SHMoviePlayerControllerDelegate-Protocol.h"
#import "SNSVideoPlayControlPanelDelegate-Protocol.h"
#import "UIGestureRecognizerDelegate-Protocol.h"

@class NSString, NSTimer, SHMedia, SHMoviePlayerController, SNSVideoBufferAnimationView, SNSVideoPlayControlPanel, UIButton, UIImageView, UILabel, UIPanGestureRecognizer, UIView, UIWindow;

@interface SnsVideoPlayerView : SNSBaseVideoPlayerView <SHMoviePlayerControllerDelegate, SNSVideoPlayControlPanelDelegate, UIGestureRecognizerDelegate>
{
    _Bool _isFirstLoadOnlineVideo;
    _Bool _isSnsVideoFullScreenMode;
    _Bool _isInVideoFeedEditVc;
    _Bool _isRequestingUrlAndPreparing;
    _Bool _isOnlineVideoShouldPlay;
    _Bool _isOnlineVideoInitLoad;
    _Bool _isFullCached;
    _Bool _isUserTapedToPlay;
    _Bool _isOnPanMoveStatus;
    _Bool _isControlPanelAndCloseBtnOnShow;
    _Bool _isFromProfileAlbumCell;
    CDUnknownBlockType _exitFullScreenModeBlock;
    CDUnknownBlockType _exitFullScreenModeCompletedBlock;
    CDUnknownBlockType _beginFullScreenModeBlock;
    SHMoviePlayerController *_playerController;
    SHMedia *_currentMedia;
    SNSVideoPlayControlPanel *_controlPanel;
    long long _selfIndexInSuperViewOfNonFullScreen;
    UIView *_parentView;
    UIView *_fullScreenContainerView;
    UIWindow *_tmpKeyWindow;
    UIView *_playbackActionView;
    UIButton *_playButton;
    UIImageView *_smallSizeIcon;
    SNSVideoBufferAnimationView *_centerLoadingView;
    UILabel *_requestFailedTipLabel;
    UILabel *_timeLineTimeLabel;
    UIImageView *_replicatorAnimationView;
    double _videoPrepareTimeStamp;
    double _videoPlayStartTimeStamp;
    long long _currentDeviceOrientation;
    double _videoUrlRequestStartTimeStamp;
    double _videoUrlRequestEndTimeStamp;
    double _videoCacheCheckStartTimeStamp;
    double _videoCacheCheckEndTimeStamp;
    UIPanGestureRecognizer *_panCloseGesture;
    double _panTranslationOffsetYOnLandscapeMode;
    UIImageView *_exitFullscreenGuideView;
    UIButton *_closeBtn;
    NSTimer *_controlPanelAndCloseBtnFadeTimer;
    double _viewHeightOnFullScreenMode;
    UIImageView *_overHeightVideoIcon;
    struct CGRect _nonFullScreenFrame;
}

@property(retain, nonatomic) UIImageView *overHeightVideoIcon; // @synthesize overHeightVideoIcon=_overHeightVideoIcon;
@property(nonatomic) _Bool isFromProfileAlbumCell; // @synthesize isFromProfileAlbumCell=_isFromProfileAlbumCell;
@property(nonatomic) double viewHeightOnFullScreenMode; // @synthesize viewHeightOnFullScreenMode=_viewHeightOnFullScreenMode;
@property(retain, nonatomic) NSTimer *controlPanelAndCloseBtnFadeTimer; // @synthesize controlPanelAndCloseBtnFadeTimer=_controlPanelAndCloseBtnFadeTimer;
@property(nonatomic) _Bool isControlPanelAndCloseBtnOnShow; // @synthesize isControlPanelAndCloseBtnOnShow=_isControlPanelAndCloseBtnOnShow;
@property(retain, nonatomic) UIButton *closeBtn; // @synthesize closeBtn=_closeBtn;
@property(retain, nonatomic) UIImageView *exitFullscreenGuideView; // @synthesize exitFullscreenGuideView=_exitFullscreenGuideView;
@property(nonatomic) double panTranslationOffsetYOnLandscapeMode; // @synthesize panTranslationOffsetYOnLandscapeMode=_panTranslationOffsetYOnLandscapeMode;
@property(nonatomic) _Bool isOnPanMoveStatus; // @synthesize isOnPanMoveStatus=_isOnPanMoveStatus;
@property(retain, nonatomic) UIPanGestureRecognizer *panCloseGesture; // @synthesize panCloseGesture=_panCloseGesture;
@property(nonatomic) double videoCacheCheckEndTimeStamp; // @synthesize videoCacheCheckEndTimeStamp=_videoCacheCheckEndTimeStamp;
@property(nonatomic) double videoCacheCheckStartTimeStamp; // @synthesize videoCacheCheckStartTimeStamp=_videoCacheCheckStartTimeStamp;
@property(nonatomic) double videoUrlRequestEndTimeStamp; // @synthesize videoUrlRequestEndTimeStamp=_videoUrlRequestEndTimeStamp;
@property(nonatomic) double videoUrlRequestStartTimeStamp; // @synthesize videoUrlRequestStartTimeStamp=_videoUrlRequestStartTimeStamp;
@property(nonatomic) _Bool isUserTapedToPlay; // @synthesize isUserTapedToPlay=_isUserTapedToPlay;
@property(nonatomic) _Bool isFullCached; // @synthesize isFullCached=_isFullCached;
@property(nonatomic) _Bool isOnlineVideoInitLoad; // @synthesize isOnlineVideoInitLoad=_isOnlineVideoInitLoad;
@property(nonatomic) long long currentDeviceOrientation; // @synthesize currentDeviceOrientation=_currentDeviceOrientation;
@property(nonatomic) _Bool isOnlineVideoShouldPlay; // @synthesize isOnlineVideoShouldPlay=_isOnlineVideoShouldPlay;
@property(nonatomic) double videoPlayStartTimeStamp; // @synthesize videoPlayStartTimeStamp=_videoPlayStartTimeStamp;
@property(nonatomic) double videoPrepareTimeStamp; // @synthesize videoPrepareTimeStamp=_videoPrepareTimeStamp;
@property(retain, nonatomic) UIImageView *replicatorAnimationView; // @synthesize replicatorAnimationView=_replicatorAnimationView;
@property(retain, nonatomic) UILabel *timeLineTimeLabel; // @synthesize timeLineTimeLabel=_timeLineTimeLabel;
@property(retain, nonatomic) UILabel *requestFailedTipLabel; // @synthesize requestFailedTipLabel=_requestFailedTipLabel;
@property(nonatomic) _Bool isRequestingUrlAndPreparing; // @synthesize isRequestingUrlAndPreparing=_isRequestingUrlAndPreparing;
@property(retain, nonatomic) SNSVideoBufferAnimationView *centerLoadingView; // @synthesize centerLoadingView=_centerLoadingView;
@property(retain, nonatomic) UIImageView *smallSizeIcon; // @synthesize smallSizeIcon=_smallSizeIcon;
@property(nonatomic) _Bool isInVideoFeedEditVc; // @synthesize isInVideoFeedEditVc=_isInVideoFeedEditVc;
@property(retain, nonatomic) UIButton *playButton; // @synthesize playButton=_playButton;
@property(retain, nonatomic) UIView *playbackActionView; // @synthesize playbackActionView=_playbackActionView;
@property(nonatomic) UIWindow *tmpKeyWindow; // @synthesize tmpKeyWindow=_tmpKeyWindow;
@property(retain, nonatomic) UIView *fullScreenContainerView; // @synthesize fullScreenContainerView=_fullScreenContainerView;
@property(nonatomic) struct CGRect nonFullScreenFrame; // @synthesize nonFullScreenFrame=_nonFullScreenFrame;
@property(retain, nonatomic) UIView *parentView; // @synthesize parentView=_parentView;
@property(nonatomic) long long selfIndexInSuperViewOfNonFullScreen; // @synthesize selfIndexInSuperViewOfNonFullScreen=_selfIndexInSuperViewOfNonFullScreen;
@property(retain, nonatomic) SNSVideoPlayControlPanel *controlPanel; // @synthesize controlPanel=_controlPanel;
@property(nonatomic) _Bool isSnsVideoFullScreenMode; // @synthesize isSnsVideoFullScreenMode=_isSnsVideoFullScreenMode;
@property(retain, nonatomic) SHMedia *currentMedia; // @synthesize currentMedia=_currentMedia;
@property(nonatomic) __weak SHMoviePlayerController *playerController; // @synthesize playerController=_playerController;
@property(nonatomic) _Bool isFirstLoadOnlineVideo; // @synthesize isFirstLoadOnlineVideo=_isFirstLoadOnlineVideo;
@property(copy, nonatomic) CDUnknownBlockType beginFullScreenModeBlock; // @synthesize beginFullScreenModeBlock=_beginFullScreenModeBlock;
@property(copy, nonatomic) CDUnknownBlockType exitFullScreenModeCompletedBlock; // @synthesize exitFullScreenModeCompletedBlock=_exitFullScreenModeCompletedBlock;
@property(copy, nonatomic) CDUnknownBlockType exitFullScreenModeBlock; // @synthesize exitFullScreenModeBlock=_exitFullScreenModeBlock;
- (void).cxx_destruct;
- (void)addSeekTimeLogWith:(double)arg1;
- (void)addTapedToFullScreenLog;
- (void)removeNightCoverWithTargetView:(id)arg1;
- (id)addNightCoverWithTargetView:(id)arg1;
- (void)countVideoLoadTime;
- (void)countPlayDuration;
- (void)countVideoPlayCompleted;
- (void)showStatusBar;
- (void)hideStatusBar;
- (void)setProgressViewSliderEnabled;
- (void)setProgressViewSliderDisabled;
- (void)updateFullScreenPlayerViewFrameForIPhoneXOnPortraitMode;
- (void)updateTimeLineAnimation;
- (void)hideReplicatorAnimationView;
- (void)showReplicatorAnimationView;
- (void)removeReplicatorAnimationView;
- (void)addReplicatorAnimationView;
- (void)removeTimeLineTimeLabel;
- (void)addTimeLineTimeLabel;
- (void)removeOverheightVideoIcon;
- (_Bool)isOverHeightVideoIconNeedShow;
- (void)addOverHeightVideoIcon;
- (void)destoryControlPanelAndCloseBtnFadeTimer;
- (void)controlPanelAndCloseBtnFadeByTimer:(id)arg1;
- (void)setControlPanelAndCloseBtnVisible:(_Bool)arg1 Animated:(_Bool)arg2;
- (void)showExitFullscreenGuideViewIfNeeded;
- (void)updateMovieScaleModeByCheckScreenMode;
- (void)showNetworkErrorCenterToast;
- (void)hideCenterLoading;
- (struct CGRect)getVideoBufferCircleProgressViewFrame;
- (void)showCenterLoadingView;
- (void)updatePlayButtonImage;
- (void)hidePlayButton;
- (void)showPlayButton;
- (void)hideCoverImageView;
- (void)showCoverImageView;
- (void)updateUI;
- (void)updatePlayButtonForFullScreen;
- (void)updatePlayButtonForNonFullScreen;
- (void)updateAudioSessionModeWith:(_Bool)arg1;
- (void)notifyOthersOnAudioSessionDeactivation;
- (void)handlePanCloseGestureEndedOrCanceldWithTranslationPoint:(struct CGPoint)arg1;
- (void)handlePanCloseGestureStateChangedWithTranslationPoint:(struct CGPoint)arg1;
- (void)handlePanCloseGesture:(id)arg1;
- (void)addPanCloseGestureRecognizer;
- (void)updateViewsInFullScreenMode;
- (void)hideSohuNewsNetworkErrorCenterToast;
- (void)resetOpenInSafariViewForSohuNews;
- (void)exitFullScreenForUrlActionIfNeeded;
- (void)exitFullScreenAnimationCompleted;
- (void)exitFullScreenAnimation;
- (void)prepareForExitFullScreen;
- (void)exitFullScreen;
- (void)updateDayAndNightImageInFullScreen;
- (void)updateVolumeForChangeMutedValue:(_Bool)arg1;
- (void)toFullScreenAnimationCompleted;
- (void)toFullScreenAnimation;
- (void)prepareForToFullScreen;
- (void)toFullScreen;
- (void)enterOrExitFullScreenMode;
- (void)updateViewsFrameForLandScapeInFullScreenMode;
- (void)orientationDidChange:(id)arg1;
- (double)updatePlayableTime;
- (double)updateCacheBufferTime;
- (double)updateCurrentPlaybackTime;
- (void)playerSeekedToTime:(double)arg1;
- (void)playerControlToPause;
- (void)playerControlToPlay;
- (void)updateCurrentMediaIfNeeded;
- (void)removeLocalOriginVideoFileIfTranscodedOrUploaded;
- (void)playerPlayError:(unsigned long long)arg1;
- (void)playerPlaybackComplete;
- (void)playerPlaybackFinish:(long long)arg1;
- (void)playbackSeekingBackward;
- (void)playbackSeekingForward;
- (void)playbackInterrupted;
- (void)playbackStop;
- (void)playbackPause;
- (void)playbackStart;
- (void)playerbackOnFirstFrame;
- (void)playbackPrepared;
- (void)playbackStalling;
- (void)playbackPreparing;
- (void)playbackDurationAvailable;
- (void)playerBufferingProgress:(long long)arg1;
- (void)onBufferingStart;
- (void)notReachableCheckVideoIntegrity;
- (void)replay;
- (void)playVideo;
- (void)destoryMoviePlayerController;
- (void)playMediaWithPlayButtonTaped;
- (void)playerViewDidTapped:(id)arg1;
- (void)tempBtnClick:(id)arg1 event:(id)arg2;
- (void)updateMoviePlayerController;
- (_Bool)isVideoInFullScreenMode;
- (void)autoPlayVideoInWifi;
- (void)stopVideo;
- (void)cancelVideoUrlRequest;
- (void)exitPlay;
- (void)loadWithFeedModel:(id)arg1;
- (void)loadWithMedia:(id)arg1;
- (void)updateMediaStartPos;
- (_Bool)isVideoFullCached;
- (void)stopVideoJustForCachedCheck;
- (_Bool)playFullCachedVideo;
- (void)showRequestFailedIcon;
- (void)playOnineVideoWithPlayInfoDic:(id)arg1;
- (void)requestVideoUrl;
- (void)dealloc;
- (_Bool)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;
- (void)addTapGestureRecognizer;
- (void)handleWillResignActive;
- (void)handleDidBecomeActive;
- (void)addNotification;
- (void)setupUI;
- (void)setupUIWithFrame:(struct CGRect)arg1 coverImage:(id)arg2;
- (id)initWithFrame:(struct CGRect)arg1 coverImage:(id)arg2;
- (id)initForFeedEditVcWithFrame:(struct CGRect)arg1 coverImage:(id)arg2;
- (id)initForProfileAlbumCellWithFrame:(struct CGRect)arg1 videoDuration:(double)arg2 sourceFeed:(id)arg3 media:(id)arg4;
- (void)generalInit;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

