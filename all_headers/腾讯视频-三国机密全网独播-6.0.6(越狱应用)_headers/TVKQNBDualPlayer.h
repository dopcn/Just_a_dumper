//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "TVKQNBAVPlayerBase.h"

#import "QQMediaPlaybackDelegate-Protocol.h"

@class NSObject, NSString, TVKQNBAVPlayerStateManager, TVKQNBAVVideo, TVKQNBPlayTimeHandler, TVKQQMediaPlayerController;
@protocol OS_dispatch_queue;

@interface TVKQNBDualPlayer : TVKQNBAVPlayerBase <QQMediaPlaybackDelegate>
{
    _Bool _airPlayState;
    _Bool _didSwithPlayerTimeBaseChange;
    _Bool _seekByUser;
    float _rate;
    TVKQNBAVVideo *_video;
    TVKQQMediaPlayerController *_avPlayer;
    TVKQNBAVPlayerStateManager *_playerStateManager;
    NSObject<OS_dispatch_queue> *_avPlayerQueue;
    NSObject<OS_dispatch_queue> *_avPlayerDelegateQueue;
    TVKQNBPlayTimeHandler *_playTimeHandler;
    long long _timeCounter;
    double _swithPlayerTimeBaseChangeInterval;
}

@property(nonatomic) _Bool seekByUser; // @synthesize seekByUser=_seekByUser;
@property(nonatomic) _Bool didSwithPlayerTimeBaseChange; // @synthesize didSwithPlayerTimeBaseChange=_didSwithPlayerTimeBaseChange;
@property(nonatomic) double swithPlayerTimeBaseChangeInterval; // @synthesize swithPlayerTimeBaseChangeInterval=_swithPlayerTimeBaseChangeInterval;
@property(nonatomic) long long timeCounter; // @synthesize timeCounter=_timeCounter;
@property(retain, nonatomic) TVKQNBPlayTimeHandler *playTimeHandler; // @synthesize playTimeHandler=_playTimeHandler;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *avPlayerDelegateQueue; // @synthesize avPlayerDelegateQueue=_avPlayerDelegateQueue;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *avPlayerQueue; // @synthesize avPlayerQueue=_avPlayerQueue;
@property(nonatomic) _Bool airPlayState; // @synthesize airPlayState=_airPlayState;
@property(retain, nonatomic) TVKQNBAVPlayerStateManager *playerStateManager; // @synthesize playerStateManager=_playerStateManager;
- (float)rate;
@property(retain, nonatomic) TVKQQMediaPlayerController *avPlayer; // @synthesize avPlayer=_avPlayer;
@property(retain, nonatomic) TVKQNBAVVideo *video; // @synthesize video=_video;
- (void).cxx_destruct;
- (unsigned long long)state;
- (unsigned long long)getTimeBaseReportValue:(double)arg1;
- (void)playbackDidFinish:(_Bool)arg1 currentTime:(double)arg2;
- (void)seekTimeByUser:(_Bool)arg1 time:(double)arg2;
- (void)player:(id)arg1 seekComplete:(_Bool)arg2;
- (void)player:(id)arg1 slicePlaybackComplete:(unsigned long long)arg2;
- (void)player:(id)arg1 sliceStartToPlay:(unsigned long long)arg2;
- (void)player:(id)arg1 sliceReadyToPlay:(unsigned long long)arg2;
- (void)player:(id)arg1 onVideoFrame:(struct __CVBuffer *)arg2;
- (id)player:(id)arg1 assembleAVAsset:(unsigned long long)arg2;
- (void)player:(id)arg1 reportEventIdentifier:(id)arg2 params:(id)arg3;
- (void)player:(id)arg1 airPlayModelChanged:(_Bool)arg2;
- (void)player:(id)arg1 currentLoadedTime:(double)arg2 didChangedWithDuration:(double)arg3 withVideo:(id)arg4;
- (void)player:(id)arg1 currentTime:(double)arg2 didChangedWithDuration:(double)arg3 withVideo:(id)arg4;
- (void)player:(id)arg1 video:(id)arg2 didGetSize:(struct CGSize)arg3;
- (void)player:(id)arg1 videoDidFinished:(id)arg2 isSeek:(_Bool)arg3;
- (void)player:(id)arg1 video:(id)arg2 didError:(id)arg3;
- (void)player:(id)arg1 stateDidChanged:(unsigned long long)arg2;
- (void)player:(id)arg1 videoDidReadyToPlay:(id)arg2;
- (void)player:(id)arg1 video:(id)arg2 didGetDuration:(double)arg3;
- (void)mediaPlayerKeyPath:(id)arg1 change:(id)arg2;
- (void)mediaPlayer:(id)arg1 startToPlayNextMediaFile:(double)arg2;
- (void)player:(id)arg1 videoDidBuffering:(_Bool)arg2;
- (void)sendMediaPlayerLog:(int)arg1 withLogInfo:(id)arg2;
- (void)mediaplayer:(id)arg1 seekComplete:(_Bool)arg2;
- (void)mediaPlayerPlayedItem:(long long)arg1;
- (void)mediaPlayerPrepareToPlay:(long long)arg1;
- (void)mediaplayer:(id)arg1 onVideoFrame:(struct __CVBuffer *)arg2;
- (id)mediaPlayer:(id)arg1 assembleAVAsset:(unsigned long long)arg2;
- (void)airPlayVideoDidActive:(_Bool)arg1;
- (void)mediaPlayerCurrentTimeChanged:(id)arg1 currentTime:(double)arg2;
- (void)mediaPlayer:(id)arg1 readyToPlay:(_Bool)arg2;
- (void)mediaPlayerCheckMediaUrlError:(id)arg1 withError:(id)arg2 withFileCacheOrder:(long long)arg3 withIsCurrentFile:(_Bool)arg4;
- (void)mediaPlayerRequestStateChange:(id)arg1 withError:(id)arg2 withFileCacheOrder:(long long)arg3 withIsCurrentFile:(_Bool)arg4;
- (void)mediaPlayerDidExitFullscreen:(id)arg1;
- (void)mediaPlayerDidEnterFullscreen:(id)arg1;
- (void)mediaPlayerPlaybackDidFinish:(id)arg1;
- (void)mediaPlayer:(id)arg1 timeBaseValueChange:(double)arg2;
- (void)mediaPlayerPlaybackStateDidChange:(id)arg1 withError:(id)arg2 withFileCacheOrder:(long long)arg3 withIsCurrentFile:(_Bool)arg4;
- (void)mediaPlayerLoadStateDidChange:(id)arg1 withError:(id)arg2 withFileCacheOrder:(long long)arg3 withIsCurrentFile:(_Bool)arg4;
- (void)mediaPlayerNaturalSizeAvailable:(id)arg1;
- (void)resumeOutputFrame;
- (void)pauseOutputFrame;
- (void)stopOutputFrame;
- (void)startOutputFrame:(double)arg1;
- (id)snapshot;
- (void)updateVideo:(id)arg1;
- (void)stop;
- (void)seekTime:(double)arg1;
- (void)pause;
- (void)play;
- (void)loadVideo:(id)arg1;
- (double)reportCurrentTime;
- (_Bool)airPlayModel;
- (double)currentLoadedTime;
- (double)duration;
- (double)currentTime;
- (void)setEnableVRMode:(_Bool)arg1;
- (void)setEnableResourceLoader:(_Bool)arg1;
- (float)getVolume;
- (void)setVolume:(float)arg1;
- (void)setRate:(float)arg1;
- (id)externalPlaybackVideoGravity;
- (void)setExternalPlaybackVideoGravity:(id)arg1;
- (_Bool)usesExternalPlaybackWhileExternalScreenIsActive;
- (void)setUsesExternalPlaybackWhileExternalScreenIsActive:(_Bool)arg1;
- (void)setAllowsExternalPlayback:(_Bool)arg1;
- (_Bool)allowsExternalPlayback;
- (id)playerView;
- (void)dealloc;
- (id)initWithCoreType:(unsigned long long)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

