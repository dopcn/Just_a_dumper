//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <UIKit/UIViewController.h>

#import "AVCaptureMetadataOutputObjectsDelegate-Protocol.h"
#import "NMInsightARManagerDelegate-Protocol.h"

@class ARProduct, AVCaptureDevice, AVCaptureDeviceInput, AVCaptureMetadataOutput, AVCaptureSession, NMBarButtonItem, NMScanLoadingStatusView, NMVerticalLayoutButton, NSObject, NSString, UIActivityIndicatorView, UIButton, UIImageView, UILabel, UIView;
@protocol NMScanProtocol, OS_dispatch_queue, OS_dispatch_semaphore;

@interface NMScanViewController : UIViewController <AVCaptureMetadataOutputObjectsDelegate, NMInsightARManagerDelegate>
{
    AVCaptureSession *_captureSession;
    AVCaptureDevice *_captureDevice;
    AVCaptureDeviceInput *_captureInput;
    AVCaptureMetadataOutput *_captureOutput;
    NSObject<OS_dispatch_queue> *_scan_queue;
    NSObject<OS_dispatch_semaphore> *_state_lock;
    _Bool _dismissSelf;
    _Bool _viewIsDisappearing;
    _Bool _cameraAccessiable;
    _Bool _arPrepareOK;
    _Bool _arDetectOK;
    ARProduct *_arProduct;
    _Bool _alertShown;
    id <NMScanProtocol> _rDelegate;
    unsigned long long _state;
    UIView *_captureView;
    UIView *_maskView;
    UIActivityIndicatorView *_initialView;
    NMScanLoadingStatusView *_loadingView;
    UIView *_notSupportedView;
    UIView *_progressView;
    UIImageView *_scanView;
    UIView *_baseView;
    UIButton *_myQRButton;
    UILabel *_hintLabel;
    UIView *_arView;
    NMBarButtonItem *_backButtonItem;
    NMVerticalLayoutButton *_qrButton;
    NMVerticalLayoutButton *_arButton;
    unsigned long long _scanMode;
    struct CGRect _rectOfInterest;
}

@property(nonatomic) _Bool alertShown; // @synthesize alertShown=_alertShown;
@property(nonatomic) unsigned long long scanMode; // @synthesize scanMode=_scanMode;
@property(retain, nonatomic) NMVerticalLayoutButton *arButton; // @synthesize arButton=_arButton;
@property(retain, nonatomic) NMVerticalLayoutButton *qrButton; // @synthesize qrButton=_qrButton;
@property(retain, nonatomic) NMBarButtonItem *backButtonItem; // @synthesize backButtonItem=_backButtonItem;
@property(retain, nonatomic) UIView *arView; // @synthesize arView=_arView;
@property(retain, nonatomic) UILabel *hintLabel; // @synthesize hintLabel=_hintLabel;
@property(retain, nonatomic) UIButton *myQRButton; // @synthesize myQRButton=_myQRButton;
@property(retain, nonatomic) UIView *baseView; // @synthesize baseView=_baseView;
@property(retain, nonatomic) UIImageView *scanView; // @synthesize scanView=_scanView;
@property(retain, nonatomic) UIView *progressView; // @synthesize progressView=_progressView;
@property(retain, nonatomic) UIView *notSupportedView; // @synthesize notSupportedView=_notSupportedView;
@property(retain, nonatomic) NMScanLoadingStatusView *loadingView; // @synthesize loadingView=_loadingView;
@property(retain, nonatomic) UIActivityIndicatorView *initialView; // @synthesize initialView=_initialView;
@property(retain, nonatomic) UIView *maskView; // @synthesize maskView=_maskView;
@property(retain, nonatomic) UIView *captureView; // @synthesize captureView=_captureView;
@property(nonatomic) unsigned long long state; // @synthesize state=_state;
@property(nonatomic) struct CGRect rectOfInterest; // @synthesize rectOfInterest=_rectOfInterest;
@property(nonatomic) __weak id <NMScanProtocol> rDelegate; // @synthesize rDelegate=_rDelegate;
- (void).cxx_destruct;
- (void)didReceiveMemoryWarning;
- (long long)preferredStatusBarStyle;
- (id)pageName;
- (void)runInScanThread:(CDUnknownBlockType)arg1;
- (void)runInMainThread:(CDUnknownBlockType)arg1;
- (void)needDismissSelf;
- (_Bool)isValideCode:(id)arg1;
- (void)networkStatusChange;
- (void)showNetworkDisconnected:(double)arg1 completeBlock:(CDUnknownBlockType)arg2;
- (void)showNetworkDisconnected;
- (void)showNotSupported;
- (void)stopScanning;
- (void)startScanning;
- (void)stopLoading;
- (void)startLoadingWithText:(id)arg1;
- (void)dismissInitialView;
- (void)showInitialView;
- (void)insightARManager:(id)arg1 arProduct:(id)arg2 didCompleteWithError:(id)arg3;
- (void)insightARManager:(id)arg1 arProduct:(id)arg2 didDownloadWithProgress:(double)arg3;
- (void)insightARManager:(id)arg1 algModel:(id)arg2 didCompleteWithError:(id)arg3;
- (void)insightARManager:(id)arg1 algModel:(id)arg2 didDownloadWithProgress:(double)arg3;
- (void)insightARManager:(id)arg1 didUpdateArState:(unsigned long long)arg2;
- (void)insightARManager:(id)arg1 arProduct:(id)arg2 didStartWithError:(id)arg3;
- (void)insightARManager:(id)arg1 didDetectProduct:(id)arg2;
- (void)insightARManager:(id)arg1 didStartWithError:(id)arg2;
- (void)downloadProductAndStart:(id)arg1;
- (void)prepareARProduct:(id)arg1;
- (void)dismissArView;
- (void)enterARProduct:(id)arg1 needUpdate:(_Bool)arg2;
- (void)stopARScan;
- (void)startARScan;
- (void)arDetectOK;
- (void)arPrepareOK;
- (void)arDownloadOK;
- (void)switchToARUI;
- (void)configARView;
- (void)stopQRCapturing;
- (void)startQRCapturing;
- (void)goToMyQRCodeAction:(id)arg1;
- (void)configQRView;
- (id)stringRecognized:(id)arg1;
- (void)captureOutput:(id)arg1 didOutputMetadataObjects:(id)arg2 fromConnection:(id)arg3;
- (void)setupCaptureLayerWithRect:(struct CGRect)arg1;
- (void)viewButtonClicked:(id)arg1;
- (void)resetUIState;
- (void)gestureDidPop:(id)arg1;
- (void)backAction:(id)arg1;
- (void)applicationDidEnterBackground:(id)arg1;
- (void)applicationWillResignActive:(id)arg1;
- (void)applicationDidBecomeActive:(id)arg1;
- (void)applicationWillEnterForeground:(id)arg1;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)removeNotification;
- (void)addNotification;
- (void)viewDidLoad;
- (void)viewDidLayoutSubviews;
- (id)_buttonForThisViewWithText:(id)arg1 normalImage:(id)arg2 highlightImage:(id)arg3 disableImage:(id)arg4;
- (void)loadView;
- (void)_initQueue;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

