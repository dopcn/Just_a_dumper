//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

@class NSMutableDictionary;
@protocol JDYJitterMonitorDelegate, OS_dispatch_queue;

@interface JDYJitterMonitor : NSObject
{
    struct __CFRunLoopObserver *_observerRef;
    NSObject<OS_dispatch_queue> *_monitorQ;
    _Bool _logEnabled;
    _Bool _isRunning;
    _Bool _doneOnMainFlag;
    id <JDYJitterMonitorDelegate> _delegate;
    unsigned long long _currentMonitorMethod;
    double _jitterTimeInterval;
    unsigned long long _lastJitterRunloopId;
    unsigned long long _runloopId;
    NSMutableDictionary *_timerDict;
}

+ (id)defaultMonitor;
@property(nonatomic) _Bool doneOnMainFlag; // @synthesize doneOnMainFlag=_doneOnMainFlag;
@property(retain, nonatomic) NSMutableDictionary *timerDict; // @synthesize timerDict=_timerDict;
@property(nonatomic) unsigned long long runloopId; // @synthesize runloopId=_runloopId;
@property(nonatomic) unsigned long long lastJitterRunloopId; // @synthesize lastJitterRunloopId=_lastJitterRunloopId;
@property(nonatomic) double jitterTimeInterval; // @synthesize jitterTimeInterval=_jitterTimeInterval;
@property(nonatomic) _Bool isRunning; // @synthesize isRunning=_isRunning;
@property(nonatomic) unsigned long long currentMonitorMethod; // @synthesize currentMonitorMethod=_currentMonitorMethod;
@property(nonatomic) _Bool logEnabled; // @synthesize logEnabled=_logEnabled;
@property(nonatomic) __weak id <JDYJitterMonitorDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)clearDir:(id)arg1 ifContainFilesMoreThan:(unsigned long long)arg2;
- (id)logDir;
- (id)captureCallstacks;
- (id)nameForMonitorMethod:(unsigned long long)arg1;
- (void)cancelDispatchSourceTimerWithName:(id)arg1;
- (void)scheduleDispatchSourceTimerWithName:(id)arg1 timeInterval:(double)arg2 targetQueue:(id)arg3 action:(CDUnknownBlockType)arg4 repeats:(_Bool)arg5;
- (void)monitorViaTinyTaskOnMain:(double)arg1;
- (void)setThresholdJitterTime:(float)arg1;
- (void)end;
- (void)start;
- (void)dealloc;
- (id)init;

@end

