//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

#import "ExploreMovieManagerDelegate-Protocol.h"
#import "TTAVMoviePlayerControllerDelegate-Protocol.h"
#import "TTLocalAssetMovieControlViewDelegate-Protocol.h"
#import "TTMovieFullscreenViewControllerDelegate-Protocol.h"
#import "UIViewControllerTransitioningDelegate-Protocol.h"

@class ExploreMovieManager, NSString, NSTimer, TTAVMoviePlayerController, TTLocalAssetMovieControlView, TTLocalAssetMoviePlayModel, TTLocalAssetMovieView, TTMovieFullscreenViewController, TTVideoRotateScreenController, UIView;

@interface TTLocalAssetMovieController : NSObject <TTAVMoviePlayerControllerDelegate, UIViewControllerTransitioningDelegate, TTLocalAssetMovieControlViewDelegate, ExploreMovieManagerDelegate, TTMovieFullscreenViewControllerDelegate>
{
    _Bool _isRefreshingSlider;
    _Bool _isNewRotate;
    TTLocalAssetMoviePlayModel *_playModel;
    CDUnknownBlockType _movieFinishBlock;
    TTAVMoviePlayerController *_moviePlayer;
    TTLocalAssetMovieControlView *_controlView;
    TTLocalAssetMovieView *_innerMovieView;
    TTMovieFullscreenViewController *_fullscreenVC;
    NSTimer *_playbackTimer;
    ExploreMovieManager *_movieManager;
    TTVideoRotateScreenController *_rotateController;
}

@property(nonatomic) _Bool isNewRotate; // @synthesize isNewRotate=_isNewRotate;
@property(retain, nonatomic) TTVideoRotateScreenController *rotateController; // @synthesize rotateController=_rotateController;
@property(retain, nonatomic) ExploreMovieManager *movieManager; // @synthesize movieManager=_movieManager;
@property(nonatomic) _Bool isRefreshingSlider; // @synthesize isRefreshingSlider=_isRefreshingSlider;
@property(retain, nonatomic) NSTimer *playbackTimer; // @synthesize playbackTimer=_playbackTimer;
@property(retain, nonatomic) TTMovieFullscreenViewController *fullscreenVC; // @synthesize fullscreenVC=_fullscreenVC;
@property(retain, nonatomic) TTLocalAssetMovieView *innerMovieView; // @synthesize innerMovieView=_innerMovieView;
@property(retain, nonatomic) TTLocalAssetMovieControlView *controlView; // @synthesize controlView=_controlView;
@property(retain, nonatomic) TTAVMoviePlayerController *moviePlayer; // @synthesize moviePlayer=_moviePlayer;
@property(copy, nonatomic) CDUnknownBlockType movieFinishBlock; // @synthesize movieFinishBlock=_movieFinishBlock;
@property(retain, nonatomic) TTLocalAssetMoviePlayModel *playModel; // @synthesize playModel=_playModel;
- (void).cxx_destruct;
@property(readonly, nonatomic) UIView *movieView;
- (void)manager:(id)arg1 errorDict:(id)arg2 videoModel:(id)arg3;
- (void)controlView:(id)arg1 didSeekToProgress:(double)arg2 totalTime:(double)arg3;
- (void)controlView:(id)arg1 isSeekingToProgress:(double)arg2 totalTime:(double)arg3;
- (void)controlViewDidPressPlayButton:(id)arg1;
- (void)controlViewWillExitFullScreen:(id)arg1;
- (void)playerControllerIsPrepareToPlay:(id)arg1;
- (void)playerController:(id)arg1 loadStateDidChange:(unsigned long long)arg2;
- (void)playerController:(id)arg1 playbackStateDidChange:(long long)arg2;
- (void)playerController:(id)arg1 playbackDidFinish:(id)arg2;
- (id)animationControllerForDismissedController:(id)arg1;
- (id)animationControllerForPresentedController:(id)arg1 presentingController:(id)arg2 sourceController:(id)arg3;
- (void)applicationDidBecomeActive:(id)arg1;
- (void)applicationWillResignActive:(id)arg1;
- (void)p_refreshWithPlaybackTime:(double)arg1 duration:(double)arg2;
- (void)p_refreshPlayState;
- (void)p_newExitFullscreen;
- (void)p_exitFullscreen;
- (void)p_newNeterFullscreenWithCompletion:(CDUnknownBlockType)arg1;
- (void)p_enterFullscreenWithCompletion:(CDUnknownBlockType)arg1;
- (void)p_updatePlaybackTime:(id)arg1;
- (void)p_resetPlayerTimer;
- (void)pause;
- (void)stop;
- (void)play;
- (id)init;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

