//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "CDDeviceHandleSpecificProtocol-Protocol.h"

@class CDDeviceBindData, CDDeviceCategorySource, CDPeripheralData, NSData;

@protocol CDDeviceHandleProtocol <CDDeviceHandleSpecificProtocol>
@property(readonly, nonatomic) long long operationState;
@property(readonly, nonatomic) long long deviceState;
- (_Bool)confirmBind:(CDDeviceBindData *)arg1;
- (void)cancelBind:(void (^)(id, NSError *))arg1;
- (void)deviceBind:(CDDeviceCategorySource *)arg1 discovered:(void (^)(id, NSError *))arg2 complete:(void (^)(id, NSError *))arg3;

@optional
@property(readonly, nonatomic) long long bluetoothState;
- (void)cancelDeviceBoot:(CDDeviceBindData *)arg1;
- (void)deviceBoot:(CDDeviceBindData *)arg1 data:(NSData *)arg2 complete:(void (^)(id, NSError *))arg3;
- (void)sendFriendRemind:(CDDeviceBindData *)arg1 complete:(void (^)(id, NSError *))arg2;
- (void)retriveDevice:(CDDeviceBindData *)arg1 untilConnected:(_Bool)arg2 complete:(void (^)(id, NSError *))arg3;
- (void)comfirmDeviceSync:(CDDeviceBindData *)arg1 complete:(void (^)(id, NSError *))arg2;
- (void)cancelDeviceSync:(CDDeviceBindData *)arg1;
- (void)deviceSync:(CDDeviceBindData *)arg1 complete:(void (^)(id, NSError *))arg2;
- (void)getUserDeviceSettingInfo:(CDDeviceBindData *)arg1 complete:(void (^)(id, NSError *))arg2;
- (void)setUserDeviceSettingInfo:(CDDeviceBindData *)arg1 complete:(void (^)(id, NSError *))arg2;
- (void)setUserInfo:(CDDeviceBindData *)arg1 complete:(void (^)(id, NSError *))arg2;
- (void)confirmCollected:(CDPeripheralData *)arg1;
- (void)stopCollecting;
- (void)startCollecting:(CDDeviceCategorySource *)arg1 callback:(void (^)(id))arg2;
- (void)removeBind:(CDDeviceBindData *)arg1;
- (void)disconnectDevice:(CDDeviceBindData *)arg1 complete:(void (^)(id, NSError *))arg2;
- (void)connectDevice:(CDDeviceBindData *)arg1 complete:(void (^)(id, NSError *))arg2;
- (void)deviceCheck:(_Bool)arg1 callback:(void (^)(id))arg2;
- (void)deviceBind:(CDDeviceCategorySource *)arg1 timeoutInterval:(double)arg2 discovered:(void (^)(id, NSError *))arg3 complete:(void (^)(id, NSError *))arg4;
@end

