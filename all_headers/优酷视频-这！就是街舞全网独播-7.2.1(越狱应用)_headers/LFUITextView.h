//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <UIKit/UITextView.h>

#import "LFUIExtensionBorderProtocol-Protocol.h"
#import "LFUIExtensionDebugProtocol-Protocol.h"
#import "LFUITextViewDelegate-Protocol.h"

@class CAShapeLayer, LFUIExtensionDelegate, NSArray, NSString, UIColor, UILabel;
@protocol LFUITextViewDelegate;

@interface LFUITextView : UITextView <LFUITextViewDelegate, LFUIExtensionDebugProtocol, LFUIExtensionBorderProtocol>
{
    _Bool _shouldResponseToProgrammaticallyTextChanges;
    _Bool _shouldCountingNonASCIICharacterAsTwo;
    _Bool _autoResizable;
    _Bool _debug;
    _Bool _shouldRejectSystemScroll;
    unsigned long long _maximumTextLength;
    NSString *_placeholder;
    UIColor *_placeholderColor;
    UILabel *_placeholderLabel;
    id <LFUITextViewDelegate> _originalDelegate;
    LFUIExtensionDelegate *_extensionDelegate;
    struct UIEdgeInsets _placeholderMargins;
}

@property(retain, nonatomic) LFUIExtensionDelegate *extensionDelegate; // @synthesize extensionDelegate=_extensionDelegate;
@property(nonatomic) __weak id <LFUITextViewDelegate> originalDelegate; // @synthesize originalDelegate=_originalDelegate;
@property(retain, nonatomic) UILabel *placeholderLabel; // @synthesize placeholderLabel=_placeholderLabel;
@property(nonatomic) _Bool shouldRejectSystemScroll; // @synthesize shouldRejectSystemScroll=_shouldRejectSystemScroll;
@property(nonatomic) _Bool debug; // @synthesize debug=_debug;
@property(nonatomic) _Bool autoResizable; // @synthesize autoResizable=_autoResizable;
@property(nonatomic) struct UIEdgeInsets placeholderMargins; // @synthesize placeholderMargins=_placeholderMargins;
@property(retain, nonatomic) UIColor *placeholderColor; // @synthesize placeholderColor=_placeholderColor;
@property(copy, nonatomic) NSString *placeholder; // @synthesize placeholder=_placeholder;
@property(nonatomic) _Bool shouldCountingNonASCIICharacterAsTwo; // @synthesize shouldCountingNonASCIICharacterAsTwo=_shouldCountingNonASCIICharacterAsTwo;
@property(nonatomic) unsigned long long maximumTextLength; // @synthesize maximumTextLength=_maximumTextLength;
@property(nonatomic) _Bool shouldResponseToProgrammaticallyTextChanges; // @synthesize shouldResponseToProgrammaticallyTextChanges=_shouldResponseToProgrammaticallyTextChanges;
- (void).cxx_destruct;
- (id)forwardingTargetForSelector:(SEL)arg1;
- (void)layoutSublayersOfLayer:(id)arg1;
- (void)scrollViewDidZoom:(id)arg1;
- (void)setContentOffset:(struct CGPoint)arg1;
- (void)setContentOffset:(struct CGPoint)arg1 animated:(_Bool)arg2;
- (void)scrollViewDidScroll:(id)arg1;
- (_Bool)respondsToSelector:(SEL)arg1;
- (void)forwardInvocation:(id)arg1;
- (id)methodSignatureForSelector:(SEL)arg1;
@property(nonatomic) __weak id <LFUITextViewDelegate> delegate; // @dynamic delegate;
- (void)textViewDidChange:(id)arg1;
- (_Bool)textView:(id)arg1 shouldChangeTextInRange:(struct _NSRange)arg2 replacementText:(id)arg3;
- (unsigned long long)lengthWithString:(id)arg1;
- (void)updatePlaceholderLabelHidden;
- (void)drawRect:(struct CGRect)arg1;
- (void)layoutSubviews;
- (void)handleTextChanged:(id)arg1;
- (void)updatePlaceholderStyle;
- (void)setTextAlignment:(long long)arg1;
- (void)setTextColor:(id)arg1;
- (void)setFont:(id)arg1;
- (void)setTypingAttributes:(id)arg1;
- (void)setAttributedText:(id)arg1;
- (void)setText:(id)arg1;
- (_Bool)isCurrentTextDifferentOfText:(id)arg1;
- (void)setContentInset:(struct UIEdgeInsets)arg1;
- (void)dealloc;
- (void)lf_didInitialized;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(retain, nonatomic) UIColor *lf_borderColor;
@property(retain, nonatomic) CAShapeLayer *lf_borderLayer;
@property(nonatomic) unsigned long long lf_borderPosition;
@property(nonatomic) double lf_borderWidth;
@property(copy, nonatomic) NSArray *lf_dashPattern;
@property(nonatomic) double lf_dashPhase;
@property(nonatomic) _Bool lf_hasDebugColor;
@property(nonatomic) _Bool lf_needsDifferentDebugColor;
@property(nonatomic) _Bool lf_shouldShowDebugColor;
@property(readonly) Class superclass;

@end

