//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <UIKit/UIView.h>

#import "UIAlertViewDelegate-Protocol.h"
#import "UIWebViewDelegate-Protocol.h"
#import "WKNavigationDelegate-Protocol.h"

@class NSString, NSTimer, NSURLRequest, UIAlertView, UIScrollView, UIWebView, WKWebView, WKWebViewConfiguration;
@protocol GJWebViewDelegate;

@interface GJWebView : UIView <UIWebViewDelegate, WKNavigationDelegate, UIAlertViewDelegate>
{
    _Bool _shareProcessPool;
    _Bool _forceUIWebView;
    UIWebView *_webView;
    WKWebView *_webViewWK;
    id <GJWebViewDelegate> _delegate;
    WKWebViewConfiguration *_webViewWKConfig;
    NSTimer *_guardTimer;
    UIAlertView *_callAlertView;
}

+ (_Bool)requiresConstraintBasedLayout;
+ (id)processPool;
@property(nonatomic) _Bool forceUIWebView; // @synthesize forceUIWebView=_forceUIWebView;
@property(retain, nonatomic) UIAlertView *callAlertView; // @synthesize callAlertView=_callAlertView;
@property(retain, nonatomic) NSTimer *guardTimer; // @synthesize guardTimer=_guardTimer;
@property(retain, nonatomic) WKWebViewConfiguration *webViewWKConfig; // @synthesize webViewWKConfig=_webViewWKConfig;
@property(nonatomic) _Bool shareProcessPool; // @synthesize shareProcessPool=_shareProcessPool;
@property(nonatomic) __weak id <GJWebViewDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) WKWebView *webViewWK; // @synthesize webViewWK=_webViewWK;
@property(retain, nonatomic) UIWebView *webView; // @synthesize webView=_webView;
- (void).cxx_destruct;
- (void)clearTempH5patch:(id)arg1;
- (id)fileURLForBuggyWKWebView8:(id)arg1;
- (void)alertView:(id)arg1 clickedButtonAtIndex:(long long)arg2;
- (void)showCantOpenURLAlert;
- (void)showCantCallAlert;
- (void)openTelUrl:(id)arg1;
- (_Bool)delegateAction:(id)arg1;
- (void)mailtoAction:(id)arg1;
- (void)telAction:(id)arg1;
- (void)webViewWebContentProcessDidTerminate:(id)arg1;
- (void)webView:(id)arg1 decidePolicyForNavigationAction:(id)arg2 decisionHandler:(CDUnknownBlockType)arg3;
- (void)webView:(id)arg1 didFailProvisionalNavigation:(id)arg2 withError:(id)arg3;
- (void)webView:(id)arg1 didFailNavigation:(id)arg2 withError:(id)arg3;
- (void)webView:(id)arg1 didFinishNavigation:(id)arg2;
- (void)webView:(id)arg1 didStartProvisionalNavigation:(id)arg2;
- (_Bool)webView:(id)arg1 shouldStartLoadWithRequest:(id)arg2 navigationType:(long long)arg3;
- (void)webView:(id)arg1 didFailLoadWithError:(id)arg2;
- (void)webViewDidFinishLoad:(id)arg1;
- (void)webViewDidStartLoad:(id)arg1;
- (void)setBackgroundColor:(id)arg1;
- (void)handleError:(id)arg1;
- (void)handleFinishLoad;
- (void)handleStartLoad;
- (id)stringByEvaluatingJavaScriptFromString:(id)arg1;
- (void)evaluateJavaScriptFromString:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)guardTimerExceeded:(id)arg1;
@property(readonly, retain, nonatomic) NSURLRequest *request;
@property(readonly, nonatomic) NSString *urlString;
@property(readonly, nonatomic) NSString *pageTitle;
@property(readonly, nonatomic, getter=isLoading) _Bool loading;
@property(readonly, nonatomic, getter=canGoForward) _Bool canGoForward;
@property(readonly, nonatomic, getter=canGoBack) _Bool canGoBack;
- (void)goForward;
- (void)goBack;
- (void)reload;
- (void)stopLoading;
- (void)loadHTMLString:(id)arg1 baseURL:(id)arg2 timeOut:(double)arg3;
- (void)loadHTMLString:(id)arg1 baseURL:(id)arg2;
- (void)loadRequest:(id)arg1 timeOut:(double)arg2;
- (void)loadLocalJSWebWithFileName:(id)arg1 h5PatchPath:(id)arg2 webParams:(id)arg3 isProductEnvironment:(_Bool)arg4;
- (void)loadRequest:(id)arg1;
@property(readonly, nonatomic) __weak UIScrollView *scrollView;
- (void)dealloc;
- (void)configureWKWebView;
- (void)doInit;
- (id)initWithFrame:(struct CGRect)arg1 forceUIWebView:(_Bool)arg2;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithCoder:(id)arg1;
- (void)layoutSubviews;
- (id)internalWebView;
- (id)documentElement:(id)arg1 name:(id)arg2;
- (id)currentTitle;
- (id)currentUrl;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

