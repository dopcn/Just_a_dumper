//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

#import "SVInspectorVideoSource-Protocol.h"
#import "SVPlayingVideoSource-Protocol.h"

@class NSArray, NSLock, NSString, P2PM3U8SectionList, P2PService;

@interface P2PDataLoadingTaskMgr : NSObject <SVPlayingVideoSource, SVInspectorVideoSource>
{
    _Bool allowsRouterCache;
    _Bool allowsRouterSwitchQuality;
    _Bool routerCacheError;
    _Bool _isUsingPIP;
    int _streamingType;
    long long vid;
    long long videoQuality;
    NSString *m3u8URL;
    long long routerCacheVideoQuality;
    NSArray *requestUrls;
    long long _loadingIndex;
    long long _site;
    long long _quality;
    long long _tsFileCount;
    P2PM3U8SectionList *_m3u8SectionList;
    NSString *_tsFilePrefix;
    long long _lastConvertedTsIndex;
    long long _lastLoadingIndex;
    NSLock *_clearLock;
    P2PService *_service;
    CDUnknownBlockType _loadM3U8Callback;
    CDUnknownBlockType _loadTsCallback;
    CDUnknownBlockType _loadM3U8FinishedCallback;
    CDUnknownBlockType _loadCurrentPlaybackTimeCallback;
    unsigned long long _backgroundTaskIdentifier;
}

@property(nonatomic) unsigned long long backgroundTaskIdentifier; // @synthesize backgroundTaskIdentifier=_backgroundTaskIdentifier;
@property(copy, nonatomic) CDUnknownBlockType loadCurrentPlaybackTimeCallback; // @synthesize loadCurrentPlaybackTimeCallback=_loadCurrentPlaybackTimeCallback;
@property(copy, nonatomic) CDUnknownBlockType loadM3U8FinishedCallback; // @synthesize loadM3U8FinishedCallback=_loadM3U8FinishedCallback;
@property(copy, nonatomic) CDUnknownBlockType loadTsCallback; // @synthesize loadTsCallback=_loadTsCallback;
@property(copy, nonatomic) CDUnknownBlockType loadM3U8Callback; // @synthesize loadM3U8Callback=_loadM3U8Callback;
@property(retain, nonatomic) P2PService *service; // @synthesize service=_service;
@property(retain) NSLock *clearLock; // @synthesize clearLock=_clearLock;
@property(nonatomic) long long lastLoadingIndex; // @synthesize lastLoadingIndex=_lastLoadingIndex;
@property(nonatomic) long long lastConvertedTsIndex; // @synthesize lastConvertedTsIndex=_lastConvertedTsIndex;
@property(retain, nonatomic) NSString *tsFilePrefix; // @synthesize tsFilePrefix=_tsFilePrefix;
@property(retain, nonatomic) P2PM3U8SectionList *m3u8SectionList; // @synthesize m3u8SectionList=_m3u8SectionList;
@property(nonatomic) long long tsFileCount; // @synthesize tsFileCount=_tsFileCount;
@property(nonatomic) _Bool isUsingPIP; // @synthesize isUsingPIP=_isUsingPIP;
@property(nonatomic) int streamingType; // @synthesize streamingType=_streamingType;
@property(nonatomic) long long quality; // @synthesize quality=_quality;
@property(nonatomic) long long site; // @synthesize site=_site;
@property(nonatomic) long long loadingIndex; // @synthesize loadingIndex=_loadingIndex;
@property(retain, nonatomic) NSArray *requestUrls; // @synthesize requestUrls;
@property(readonly, nonatomic) long long routerCacheVideoQuality; // @synthesize routerCacheVideoQuality;
@property(readonly, nonatomic) _Bool routerCacheError; // @synthesize routerCacheError;
@property(nonatomic) _Bool allowsRouterSwitchQuality; // @synthesize allowsRouterSwitchQuality;
@property(nonatomic) _Bool allowsRouterCache; // @synthesize allowsRouterCache;
@property(retain, nonatomic) NSString *m3u8URL; // @synthesize m3u8URL;
@property(readonly, nonatomic) long long videoQuality; // @synthesize videoQuality;
@property(nonatomic) long long vid; // @synthesize vid;
- (void)preloadSegmentsFromTsIndex:(long long)arg1;
- (void)didTsGenerateProgress:(long long)arg1 quality:(long long)arg2 tsIndex:(long long)arg3 tsFilePath:(id)arg4;
- (void)appsDidEnterBackground:(id)arg1;
- (double)requestTimeout;
- (void)stopForPlaying;
- (void)configLoadM3U8FinishedCallback:(CDUnknownBlockType)arg1;
- (void)configFileRequestFinishedCallback:(CDUnknownBlockType)arg1;
- (void)currentTSFileStatusWithCallback:(CDUnknownBlockType)arg1;
- (id)currentTSFileStatus;
- (unsigned long long)currentTSDownloadSpeed;
- (double)cacheProgressFrom:(double)arg1;
- (double)timestampForTsIndex:(long long)arg1;
- (void)updateCurrentTSName:(id)arg1;
- (id)tsFilePathForPlayingWithName:(id)arg1;
- (void)loadTSFileForPlayingWithName:(id)arg1 callback:(CDUnknownBlockType)arg2;
- (_Bool)shouldRequestVideoData:(long long)arg1;
- (void)deleteLocalM3U8FileForPlaying;
- (void)loadM3U8FileForPlayingWithTSPrefix:(id)arg1 isAirPlay:(_Bool)arg2 callback:(CDUnknownBlockType)arg3;
- (void)startForPlaying;
- (int)getStreamingType;
- (long long)getVideoId;
- (void)reset;
- (void)dealloc;
- (id)init;
@property(readonly, nonatomic) _Bool usingRouterCache; // @dynamic usingRouterCache;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

