//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#pragma mark Function Pointers and Blocks

typedef void (*CDUnknownFunctionPointerType)(void); // return type and parameters are unknown

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct AdSize {
    int _field1;
    int _field2;
};

struct CAMapSrvProj {
    CDUnknownFunctionPointerType *_field1;
    struct tagAMAPSRVPROJECTION _field2;
    int _field3;
};

struct CAMapSrvVectorOverLay {
    CDUnknownFunctionPointerType *_field1;
    void *_field2;
    void *_field3;
    int _field4;
    int _field5;
    int _field6;
    int _field7;
    int _field8;
    int _field9;
    int _field10;
    struct CAMapSrvView *_field11;
    long long _field12;
    int _field13;
    int _field14;
    struct CAMapSrvView *_field15;
    void *_field16;
    void *_field17;
    void *_field18;
    void *_field19;
    int _field20;
};

struct CAMapSrvView;

struct CAnAppInstance {
    CDUnknownFunctionPointerType *_field1;
    struct CAnServiceViewMgr *_field2;
    struct CAnResTmStmpRecord *_field3;
};

struct CAnResTmStmpRecord;

struct CAnServiceViewMgr;

struct CGAffineTransform {
    double a;
    double b;
    double c;
    double d;
    double tx;
    double ty;
};

struct CGPoint {
    double x;
    double y;
};

struct CGRect {
    struct CGPoint origin;
    struct CGSize size;
};

struct CGSize {
    double width;
    double height;
};

struct CLLocationCoordinate2D {
    double latitude;
    double longitude;
};

struct CLSMachOFile {
    int fd;
    unsigned long long mappedSize;
    void *mappedFile;
};

struct CLSMachOSlice {
    void *startAddress;
    int cputype;
    int cpusubtype;
};

struct JMergePoint {
    int _field1;
    int _field2;
};

struct MACoordinateBounds {
    struct CLLocationCoordinate2D northEast;
    struct CLLocationCoordinate2D southWest;
};

struct MACoordinateRegion {
    struct CLLocationCoordinate2D center;
    struct MACoordinateSpan span;
};

struct MACoordinateSpan {
    double latitudeDelta;
    double longitudeDelta;
};

struct MAMapEngineCallBack {
    CDUnknownFunctionPointerType *_field1;
    id _field2;
};

struct MAMapPoint {
    double x;
    double y;
};

struct MAMapRect {
    struct MAMapPoint origin;
    struct MAMapSize size;
};

struct MAMapSize {
    double width;
    double height;
};

struct MAPolygonClipper {
    vector_f60ea51c *_field1;
    unsigned long long _field2;
    struct Vector3<float> *_field3;
    struct Vector3<float> _field4[4];
    struct Vector3<float> _field5[4];
    vector_f60ea51c _field6;
    struct vector<MAClipper::IntersectState, std::__1::allocator<MAClipper::IntersectState>> _field7;
    struct vector<short, std::__1::allocator<short>> _field8;
    vector_195fe69b _field9;
    unsigned short _field10;
    unsigned short _field11;
    unsigned short _field12;
    unsigned short _field13;
    _Bool _field14;
    int _field15;
    vector_195fe69b _field16;
};

struct MAPolygonTriangulator {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    int _field3;
    int _field4;
    vector_f60ea51c *_field5;
    unsigned long long _field6;
    vector_195fe69b _field7;
    struct vector<short, std::__1::allocator<short>> _field8;
    vector_195fe69b _field9;
};

struct MAQuadTreeNode {
    struct MAQuadTreeNode *_field1;
    struct MAQuadTreeNode *_field2;
    struct MAQuadTreeNode *_field3;
    struct MAQuadTreeNode *_field4;
    struct MAMapRect _field5;
    int _field6;
    struct MAQuadTreeNodeData *_field7;
    int _field8;
    int _field9;
};

struct MAQuadTreeNodeData;

struct MATile {
    unsigned int x;
    unsigned int y;
    short zoom;
};

struct MATileOverlayPath {
    long long _field1;
    long long _field2;
    long long _field3;
    double _field4;
};

struct NSDictionary {
    Class _field1;
};

struct SWAudioProductIndexPath {
    int _field1;
    unsigned long long _field2;
};

struct UIEdgeInsets {
    double top;
    double left;
    double bottom;
    double right;
};

struct Vector3<float> {
    float _field1;
    float _field2;
    float _field3;
};

struct Vector4<float> {
    float _field1;
    float _field2;
    float _field3;
    float _field4;
};

struct Vertex;

struct WBSDKJKConstBuffer {
    struct WBSDKJKConstPtrRange _field1;
};

struct WBSDKJKConstPtrRange {
    char *_field1;
    unsigned long long _field2;
};

struct WBSDKJKEncodeCache {
    id _field1;
    unsigned long long _field2;
    unsigned long long _field3;
};

struct WBSDKJKEncodeState {
    struct WBSDKJKManagedBuffer _field1;
    struct WBSDKJKManagedBuffer _field2;
    unsigned long long _field3;
    struct WBSDKJKFastClassLookup _field4;
    struct WBSDKJKEncodeCache _field5[1024];
    unsigned long long _field6;
    unsigned long long _field7;
    unsigned long long _field8;
    id _field9;
    id _field10;
    SEL _field11;
    CDUnknownFunctionPointerType _field12;
    CDUnknownBlockType _field13;
};

struct WBSDKJKFastClassLookup {
    void *_field1;
    void *_field2;
    void *_field3;
    void *_field4;
    void *_field5;
};

struct WBSDKJKHashTableEntry {
    unsigned long long _field1;
    id _field2;
    id _field3;
};

struct WBSDKJKManagedBuffer {
    struct WBSDKJKPtrRange _field1;
    unsigned long long _field2;
    unsigned long long _field3;
};

struct WBSDKJKObjCImpCache {
    Class _field1;
    CDUnknownFunctionPointerType _field2;
    CDUnknownFunctionPointerType _field3;
};

struct WBSDKJKObjectStack {
    void **_field1;
    void **_field2;
    unsigned long long *_field3;
    unsigned long long _field4;
    unsigned long long _field5;
    unsigned long long _field6;
    unsigned long long _field7;
};

struct WBSDKJKParseState {
    unsigned long long _field1;
    struct WBSDKJKConstBuffer _field2;
    unsigned long long _field3;
    unsigned long long _field4;
    unsigned long long _field5;
    unsigned long long _field6;
    unsigned long long _field7;
    unsigned long long _field8;
    struct WBSDKJKParseToken _field9;
    struct WBSDKJKObjectStack _field10;
    struct WBSDKJKTokenCache _field11;
    struct WBSDKJKObjCImpCache _field12;
    id _field13;
    int _field14;
    _Bool _field15;
};

struct WBSDKJKParseToken {
    struct WBSDKJKConstPtrRange _field1;
    unsigned long long _field2;
    struct WBSDKJKTokenValue _field3;
    struct WBSDKJKManagedBuffer _field4;
};

struct WBSDKJKPtrRange {
    char *_field1;
    unsigned long long _field2;
};

struct WBSDKJKTokenCache {
    struct WBSDKJKTokenCacheItem *_field1;
    unsigned long long _field2;
    unsigned int _field3;
    unsigned char _field4[1024];
};

struct WBSDKJKTokenCacheItem;

struct WBSDKJKTokenValue {
    struct WBSDKJKConstPtrRange _field1;
    unsigned long long _field2;
    unsigned long long _field3;
    union {
        long long _field1;
        unsigned long long _field2;
        double _field3;
    } _field4;
    struct WBSDKJKTokenCacheItem *_field5;
};

struct _MAProjectionContext {
    float _field1;
    float _field2;
    float _field3;
    int _field4;
    int _field5;
};

struct _NSRange {
    unsigned long long location;
    unsigned long long length;
};

struct __CFString;

struct __tree_end_node<std::__1::__tree_node_base<void *>*> {
    struct __tree_node_base<void *> *_field1;
};

struct _opaque_pthread_mutex_t {
    long long __sig;
    char __opaque[56];
};

struct _xmlAttr {
    void *_field1;
    int _field2;
    char *_field3;
    struct _xmlNode *_field4;
    struct _xmlNode *_field5;
    struct _xmlNode *_field6;
    struct _xmlAttr *_field7;
    struct _xmlAttr *_field8;
    struct _xmlDoc *_field9;
    struct _xmlNs *_field10;
    int _field11;
    void *_field12;
};

struct _xmlDoc {
    void *_field1;
    int _field2;
    char *_field3;
    struct _xmlNode *_field4;
    struct _xmlNode *_field5;
    struct _xmlNode *_field6;
    struct _xmlNode *_field7;
    struct _xmlNode *_field8;
    struct _xmlDoc *_field9;
    int _field10;
    int _field11;
    struct _xmlDtd *_field12;
    struct _xmlDtd *_field13;
    struct _xmlNs *_field14;
    char *_field15;
    char *_field16;
    void *_field17;
    void *_field18;
    char *_field19;
    int _field20;
    struct _xmlDict *_field21;
    void *_field22;
    int _field23;
    int _field24;
};

struct _xmlDtd;

struct _xmlKind {
    void *_field1;
    int _field2;
};

struct _xmlNode {
    void *_field1;
    int _field2;
    char *_field3;
    struct _xmlNode *_field4;
    struct _xmlNode *_field5;
    struct _xmlNode *_field6;
    struct _xmlNode *_field7;
    struct _xmlNode *_field8;
    struct _xmlDoc *_field9;
    struct _xmlNs *_field10;
    char *_field11;
    struct _xmlAttr *_field12;
    struct _xmlNs *_field13;
    void *_field14;
    unsigned short _field15;
    unsigned short _field16;
};

struct _xmlNs {
    struct _xmlNs *_field1;
    int _field2;
    char *_field3;
    char *_field4;
    void *_field5;
    struct _xmlDoc *_field6;
};

struct am_indoor_struct {
    char _field1[64];
    char _field2[64];
    char _field3[8];
    int _field4;
    char _field5[20];
    char _field6[8];
    int _field7;
    int *_field8;
    char **_field9;
    char **_field10;
    int _field11;
    int *_field12;
    float _field13;
};

struct am_maptile_struct {
    char _field1[21];
    char _field2[20];
    short _field3;
    unsigned short _field4;
};

struct bignum_st;

struct bn_blinding_st;

struct bn_mont_ctx_st;

struct cameraEulerAngle {
    double yaw;
    double pitch;
    double roll;
};

struct cameraVec3 {
    double x;
    double y;
    double z;
};

struct crypto_ex_data_st {
    struct stack_st_void *_field1;
    int _field2;
};

struct engine_st;

struct hsv_color {
    double _field1;
    double _field2;
    double _field3;
};

struct in_addr {
    unsigned int _field1;
};

struct internal_state;

struct rgb_color {
    double _field1;
    double _field2;
    double _field3;
};

struct rsa_meth_st;

struct rsa_st {
    int _field1;
    long long _field2;
    struct rsa_meth_st *_field3;
    struct engine_st *_field4;
    struct bignum_st *_field5;
    struct bignum_st *_field6;
    struct bignum_st *_field7;
    struct bignum_st *_field8;
    struct bignum_st *_field9;
    struct bignum_st *_field10;
    struct bignum_st *_field11;
    struct bignum_st *_field12;
    struct crypto_ex_data_st _field13;
    int _field14;
    int _field15;
    struct bn_mont_ctx_st *_field16;
    struct bn_mont_ctx_st *_field17;
    struct bn_mont_ctx_st *_field18;
    char *_field19;
    struct bn_blinding_st *_field20;
    struct bn_blinding_st *_field21;
};

struct set<void *, std::__1::less<void *>, std::__1::allocator<void *>> {
    struct __tree<void *, std::__1::less<void *>, std::__1::allocator<void *>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<void *, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::less<void *>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct sockaddr {
    unsigned char _field1;
    unsigned char _field2;
    char _field3[14];
};

struct sockaddr_in {
    unsigned char _field1;
    unsigned char _field2;
    unsigned short _field3;
    struct in_addr _field4;
    char _field5[8];
};

struct stack_st_void;

struct tagAMAPSRVPROJECTION {
    void *_field1;
};

struct tm_zip_s {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned int _field6;
};

struct uregex;

struct vector<MAClipper::IntersectState, std::__1::allocator<MAClipper::IntersectState>> {
    int *_field1;
    int *_field2;
    struct __compressed_pair<MAClipper::IntersectState *, std::__1::allocator<MAClipper::IntersectState>> {
        int *_field1;
    } _field3;
};

struct vector<MAGradientColoredLine::Vertex, std::__1::allocator<MAGradientColoredLine::Vertex>> {
    struct Vertex *_field1;
    struct Vertex *_field2;
    struct __compressed_pair<MAGradientColoredLine::Vertex *, std::__1::allocator<MAGradientColoredLine::Vertex>> {
        struct Vertex *_field1;
    } _field3;
};

struct vector<MANormalLineBuilder::Vertex, std::__1::allocator<MANormalLineBuilder::Vertex>> {
    struct Vertex *_field1;
    struct Vertex *_field2;
    struct __compressed_pair<MANormalLineBuilder::Vertex *, std::__1::allocator<MANormalLineBuilder::Vertex>> {
        struct Vertex *_field1;
    } _field3;
};

struct vector<Vector3<float>, std::__1::allocator<Vector3<float>>> {
    struct Vector3<float> *_field1;
    struct Vector3<float> *_field2;
    struct __compressed_pair<Vector3<float>*, std::__1::allocator<Vector3<float>>> {
        struct Vector3<float> *_field1;
    } _field3;
};

struct vector<Vector4<float>, std::__1::allocator<Vector4<float>>> {
    struct Vector4<float> *_field1;
    struct Vector4<float> *_field2;
    struct __compressed_pair<Vector4<float>*, std::__1::allocator<Vector4<float>>> {
        struct Vector4<float> *_field1;
    } _field3;
};

struct vector<float, std::__1::allocator<float>> {
    float *_field1;
    float *_field2;
    struct __compressed_pair<float *, std::__1::allocator<float>> {
        float *_field1;
    } _field3;
};

struct vector<short, std::__1::allocator<short>> {
    short *_field1;
    short *_field2;
    struct __compressed_pair<short *, std::__1::allocator<short>> {
        short *_field1;
    } _field3;
};

struct vector<std::__1::vector<Vector3<float>, std::__1::allocator<Vector3<float>>>, std::__1::allocator<std::__1::vector<Vector3<float>, std::__1::allocator<Vector3<float>>>>> {
    vector_f60ea51c *_field1;
    vector_f60ea51c *_field2;
    struct __compressed_pair<std::__1::vector<Vector3<float>, std::__1::allocator<Vector3<float>>>*, std::__1::allocator<std::__1::vector<Vector3<float>, std::__1::allocator<Vector3<float>>>>> {
        vector_f60ea51c *_field1;
    } _field3;
};

struct vector<unsigned short, std::__1::allocator<unsigned short>> {
    unsigned short *_field1;
    unsigned short *_field2;
    struct __compressed_pair<unsigned short *, std::__1::allocator<unsigned short>> {
        unsigned short *_field1;
    } _field3;
};

struct z_stream_s {
    char *next_in;
    unsigned int avail_in;
    unsigned long long total_in;
    char *next_out;
    unsigned int avail_out;
    unsigned long long total_out;
    char *msg;
    struct internal_state *state;
    CDUnknownFunctionPointerType zalloc;
    CDUnknownFunctionPointerType zfree;
    void *opaque;
    int data_type;
    unsigned long long adler;
    unsigned long long reserved;
};

#if 0
// Names with conflicting types:
typedef struct {
    vector_195fe69b _field1;
    struct vector<MAGradientColoredLine::Vertex, std::__1::allocator<MAGradientColoredLine::Vertex>> _field2;
} Drawable_98991264;

typedef struct {
    vector_195fe69b _field1;
    struct vector<MANormalLineBuilder::Vertex, std::__1::allocator<MANormalLineBuilder::Vertex>> _field2;
    vector_195fe69b _field3;
    vector_195fe69b _field4;
} Drawable_97df83bd;

typedef struct {
    CDUnknownFunctionPointerType *_field1;
    float _field2;
    float _field3;
    struct Drawable {
        vector_195fe69b _field1;
        struct vector<MANormalLineBuilder::Vertex, std::__1::allocator<MANormalLineBuilder::Vertex>> _field2;
        vector_195fe69b _field3;
        vector_195fe69b _field4;
    } _field4;
    vector_f60ea51c _field5;
    struct vector<float, std::__1::allocator<float>> _field6;
} MALineBuilder_6dabcb35;

typedef struct {
    CDUnknownFunctionPointerType *_field1;
    float _field2;
    float _field3;
    struct Vector4<float> _field4;
    struct Drawable {
        vector_195fe69b _field1;
        struct vector<MAGradientColoredLine::Vertex, std::__1::allocator<MAGradientColoredLine::Vertex>> _field2;
    } _field5;
    vector_f60ea51c _field6;
    struct vector<float, std::__1::allocator<float>> _field7;
    struct vector<Vector4<float>, std::__1::allocator<Vector4<float>>> _field8;
} MALineBuilder_3b276b09;

#endif

#pragma mark Typedef'd Structures

typedef struct {
    id _field1;
    unsigned short _field2;
} CDStruct_6a59ab51;

typedef struct {
    unsigned int major;
    unsigned int minor;
    unsigned int bugfix;
} CDStruct_e24ffa00;

typedef struct {
    unsigned long long _field1;
    id *_field2;
    unsigned long long *_field3;
    unsigned long long _field4[5];
} CDStruct_70511ce9;

typedef struct {
    char *_field1;
    char *_field2;
    unsigned int _field3;
    unsigned int _field4;
} CDStruct_4355734a;

typedef struct {
    char *_field1;
    void *_field2;
    _Bool _field3;
    void *_field4;
    char *_field5;
    char *_field6;
    char *_field7;
    char *_field8;
    char *_field9;
    unsigned int _field10;
    _Bool _field11;
    _Bool _field12;
    unsigned int _field13;
    unsigned int _field14;
    unsigned int _field15;
    unsigned int _field16;
} CDStruct_1e2a2a70;

typedef struct {
    double latitude;
    double longitude;
} CDStruct_2c43369c;

typedef struct {
    long long _field1;
    void *_field2;
    CDUnknownFunctionPointerType _field3;
    CDUnknownFunctionPointerType _field4;
    CDUnknownFunctionPointerType _field5;
} CDStruct_e097db04;

typedef struct {
    char _field1[33];
    _Bool _field2;
    CDStruct_e24ffa00 _field3;
    CDStruct_e24ffa00 _field4;
    struct {
        void *_field1;
        unsigned long long _field2;
        void *_field3;
        void *_field4;
        void *_field5;
    } _field5;
    struct CLSMachOSlice _field6;
    long long _field7;
} CDStruct_fad71a87;

typedef struct {
    struct tm_zip_s _field1;
    unsigned long long _field2;
    unsigned long long _field3;
    unsigned long long _field4;
} CDStruct_192a48cb;

// Template types
typedef struct set<void *, std::__1::less<void *>, std::__1::allocator<void *>> {
    struct __tree<void *, std::__1::less<void *>, std::__1::allocator<void *>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<void *, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::less<void *>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
} set_b86e7d27;

typedef struct vector<Vector3<float>, std::__1::allocator<Vector3<float>>> {
    struct Vector3<float> *_field1;
    struct Vector3<float> *_field2;
    struct __compressed_pair<Vector3<float>*, std::__1::allocator<Vector3<float>>> {
        struct Vector3<float> *_field1;
    } _field3;
} vector_f60ea51c;

typedef struct vector<std::__1::vector<Vector3<float>, std::__1::allocator<Vector3<float>>>, std::__1::allocator<std::__1::vector<Vector3<float>, std::__1::allocator<Vector3<float>>>>> {
    vector_f60ea51c *_field1;
    vector_f60ea51c *_field2;
    struct __compressed_pair<std::__1::vector<Vector3<float>, std::__1::allocator<Vector3<float>>>*, std::__1::allocator<std::__1::vector<Vector3<float>, std::__1::allocator<Vector3<float>>>>> {
        vector_f60ea51c *_field1;
    } _field3;
} vector_aac46ba0;

typedef struct vector<unsigned short, std::__1::allocator<unsigned short>> {
    unsigned short *_field1;
    unsigned short *_field2;
    struct __compressed_pair<unsigned short *, std::__1::allocator<unsigned short>> {
        unsigned short *_field1;
    } _field3;
} vector_195fe69b;

