//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "NSObject-Protocol.h"

@class NSDictionary, NSString, NSURL, TTVideoEngineAVPlayerItemAccessLog, UIView;
@protocol AVAssetResourceLoaderDelegate, TTVideoPlayerStateProtocol;

@protocol TTVideoEnginePlayer <NSObject>
@property(nonatomic) double volume;
@property(nonatomic) _Bool isPauseWhenNotReady;
@property(nonatomic) __weak id <AVAssetResourceLoaderDelegate> resourceLoaderDelegate;
@property(readonly, copy, nonatomic) NSDictionary *mp4HeaderMetaComment;
@property(nonatomic) double startTime;
@property(nonatomic) long long smoothDelayedSeconds;
@property(nonatomic) _Bool ksyHevcDecode;
@property(nonatomic) _Bool hardwareDecode;
@property(nonatomic) _Bool looping;
@property(nonatomic) unsigned long long renderEngine;
@property(nonatomic) unsigned long long renderType;
@property(nonatomic) unsigned long long imageLayoutType;
@property(nonatomic) unsigned long long enhancementType;
@property(nonatomic) unsigned long long imageScaleType;
@property(readonly, nonatomic) TTVideoEngineAVPlayerItemAccessLog *accessLog;
@property(nonatomic) double playbackSpeed;
@property(nonatomic) _Bool muted;
@property(nonatomic) long long scalingMode;
@property(readonly, nonatomic) unsigned long long loadState;
@property(readonly, nonatomic) long long playbackState;
@property(readonly, nonatomic) long long bufferingProgress;
@property(readonly, nonatomic) long long mediaSize;
@property(readonly, nonatomic) double playableDuration;
@property(readonly, nonatomic) double duration;
@property(nonatomic) double currentPlaybackTime;
@property(nonatomic) int cacheFileMode;
@property(copy, nonatomic) NSString *hostname;
@property(copy, nonatomic) NSURL *contentURL;
@property(readonly, nonatomic) UIView *view;
@property(nonatomic) __weak id <TTVideoPlayerStateProtocol> delegate;
- (long long)downloadSpeed;
- (long long)numberOfBytesTransferred;
- (long long)numberOfBytesPlayed;
- (void)playNextWithURL:(NSURL *)arg1 complete:(void (^)(_Bool))arg2;
- (void)setCurrentPlaybackTime:(double)arg1 complete:(void (^)(_Bool))arg2;
- (void)setIgnoreAudioInterruption:(_Bool)arg1;
- (_Bool)isCustomPlayer;
- (_Bool)isPrerolling;
- (float)currentRate;
- (_Bool)isPlaying;
- (void)close;
- (void)stop;
- (void)pause;
- (void)play;
- (void)prepareToPlay;
@end

