//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

@class NSArray, NSString;

@interface MtunnelConfig : NSObject
{
    long long workMode_;
    _Bool useWSG_;
    long long compressionType_;
    long long compressBody_;
    long long httpReadTimeout_;
    long long wspInitWindow_;
    _Bool isBypassRemoteProxy_;
    _Bool forceGzip_;
    _Bool useAsyncTranscoding_;
    _Bool hijackHLS_;
    NSString *udpDestHost_;
    long long udpDestPort_;
    NSArray *filteredHttpHeaders_;
    NSArray *customHttpHeaders_;
    NSString *imei_;
    NSString *appName_;
    NSString *accessLogPath_;
    long long debugLogSeverityLevel_;
    NSString *debugLogPath_;
    NSArray *backendRegex_;
    NSArray *backendProtocol_;
    NSArray *backendHost_;
    NSArray *backendBackupHostIp_;
    NSArray *backendPort_;
    NSArray *backendGenericDomainPrefix_;
    NSArray *backendGenericDomainProto_;
    NSArray *backendRegexNegate_;
    NSArray *backendRegexMatchType_;
    NSArray *backendType_;
    NSArray *sourceHost_;
    NSArray *sourceIps_;
    NSArray *sourceIsCname_;
    NSString *appNameCrc32_;
    NSString *authKeyString_;
    NSString *mproxyUrlRegex_;
    NSString *resizeUrlRegex_;
    _Bool reserveExif_;
    long long resizeRate_;
    long long minSize_;
    long long p2spBlockSize_;
    long long p2spMinFileSize_;
    long long p2spMaxMemCacheBlock_;
    long long p2spNumHttpOneShotBlock_;
    long long p2spMaxP2pPendingBlock_;
    long long p2spMaxStorageUse_;
    NSString *p2spTrackerHost_;
    long long p2spTrackerPort_;
    NSString *p2spNatTraversalHost_;
    long long p2spNatTraversalPort_;
    long long p2spLocalPort_;
    long long p2spBufferTimeTriggerP2pOn_;
    long long p2spBufferTimeTriggerP2pOff_;
    NSString *p2spCachePath_;
    NSString *p2spUrlRegex_;
    NSString *p2spFilenameRegex_;
    long long p2spM3u8Enable_;
    long long p2spM3u8IdleTimeout_;
    long long p2spM3u8MaxPendingTS_;
    long long p2spM3u8MaxBufferTime_;
    long long maxAccesslogCount_;
    NSString *httpsOptRegex_;
    NSString *markKey_;
}

@property(retain, nonatomic) NSArray *sourceIsCname; // @synthesize sourceIsCname=sourceIsCname_;
@property(retain, nonatomic) NSArray *sourceIps; // @synthesize sourceIps=sourceIps_;
@property(retain, nonatomic) NSArray *sourceHost; // @synthesize sourceHost=sourceHost_;
@property(nonatomic) long long p2spM3u8MaxBufferTime; // @synthesize p2spM3u8MaxBufferTime=p2spM3u8MaxBufferTime_;
@property(nonatomic) long long p2spM3u8MaxPendingTS; // @synthesize p2spM3u8MaxPendingTS=p2spM3u8MaxPendingTS_;
@property(nonatomic) long long p2spM3u8IdleTimeout; // @synthesize p2spM3u8IdleTimeout=p2spM3u8IdleTimeout_;
@property(nonatomic) long long p2spM3u8Enable; // @synthesize p2spM3u8Enable=p2spM3u8Enable_;
@property(copy, nonatomic) NSString *p2spFilenameRegex; // @synthesize p2spFilenameRegex=p2spFilenameRegex_;
@property(copy, nonatomic) NSString *p2spUrlRegex; // @synthesize p2spUrlRegex=p2spUrlRegex_;
@property(copy, nonatomic) NSString *p2spCachePath; // @synthesize p2spCachePath=p2spCachePath_;
@property(nonatomic) long long p2spBufferTimeTriggerP2pOff; // @synthesize p2spBufferTimeTriggerP2pOff=p2spBufferTimeTriggerP2pOff_;
@property(nonatomic) long long p2spBufferTimeTriggerP2pOn; // @synthesize p2spBufferTimeTriggerP2pOn=p2spBufferTimeTriggerP2pOn_;
@property(nonatomic) long long p2spLocalPort; // @synthesize p2spLocalPort=p2spLocalPort_;
@property(nonatomic) long long p2spNatTraversalPort; // @synthesize p2spNatTraversalPort=p2spNatTraversalPort_;
@property(copy, nonatomic) NSString *p2spNatTraversalHost; // @synthesize p2spNatTraversalHost=p2spNatTraversalHost_;
@property(nonatomic) long long p2spTrackerPort; // @synthesize p2spTrackerPort=p2spTrackerPort_;
@property(copy, nonatomic) NSString *p2spTrackerHost; // @synthesize p2spTrackerHost=p2spTrackerHost_;
@property(nonatomic) long long p2spMaxStorageUse; // @synthesize p2spMaxStorageUse=p2spMaxStorageUse_;
@property(nonatomic) long long p2spMaxP2pPendingBlock; // @synthesize p2spMaxP2pPendingBlock=p2spMaxP2pPendingBlock_;
@property(nonatomic) long long p2spNumHttpOneShotBlock; // @synthesize p2spNumHttpOneShotBlock=p2spNumHttpOneShotBlock_;
@property(nonatomic) long long p2spMaxMemCacheBlock; // @synthesize p2spMaxMemCacheBlock=p2spMaxMemCacheBlock_;
@property(nonatomic) long long p2spMinFileSize; // @synthesize p2spMinFileSize=p2spMinFileSize_;
@property(nonatomic) long long p2spBlockSize; // @synthesize p2spBlockSize=p2spBlockSize_;
@property(copy, nonatomic) NSString *markKey; // @synthesize markKey=markKey_;
@property(copy, nonatomic) NSString *httpsOptRegex; // @synthesize httpsOptRegex=httpsOptRegex_;
@property(nonatomic) long long maxAccesslogCount; // @synthesize maxAccesslogCount=maxAccesslogCount_;
@property(nonatomic) long long minSize; // @synthesize minSize=minSize_;
@property(nonatomic) long long resizeRate; // @synthesize resizeRate=resizeRate_;
@property(nonatomic) _Bool reserveExif; // @synthesize reserveExif=reserveExif_;
@property(copy, nonatomic) NSString *resizeUrlRegex; // @synthesize resizeUrlRegex=resizeUrlRegex_;
@property(copy, nonatomic) NSString *mproxyUrlRegex; // @synthesize mproxyUrlRegex=mproxyUrlRegex_;
@property(copy, nonatomic) NSString *authKeyString; // @synthesize authKeyString=authKeyString_;
@property(copy, nonatomic) NSString *appNameCrc32; // @synthesize appNameCrc32=appNameCrc32_;
@property(retain, nonatomic) NSArray *backendType; // @synthesize backendType=backendType_;
@property(retain, nonatomic) NSArray *backendRegexMatchType; // @synthesize backendRegexMatchType=backendRegexMatchType_;
@property(retain, nonatomic) NSArray *backendRegexNegate; // @synthesize backendRegexNegate=backendRegexNegate_;
@property(retain, nonatomic) NSArray *backendGenericDomainProto; // @synthesize backendGenericDomainProto=backendGenericDomainProto_;
@property(retain, nonatomic) NSArray *backendGenericDomainPrefix; // @synthesize backendGenericDomainPrefix=backendGenericDomainPrefix_;
@property(retain, nonatomic) NSArray *backendPort; // @synthesize backendPort=backendPort_;
@property(retain, nonatomic) NSArray *backendBackupHostIp; // @synthesize backendBackupHostIp=backendBackupHostIp_;
@property(retain, nonatomic) NSArray *backendHost; // @synthesize backendHost=backendHost_;
@property(retain, nonatomic) NSArray *backendProtocol; // @synthesize backendProtocol=backendProtocol_;
@property(retain, nonatomic) NSArray *backendRegex; // @synthesize backendRegex=backendRegex_;
@property(nonatomic) long long udpDestPort; // @synthesize udpDestPort=udpDestPort_;
@property(copy, nonatomic) NSString *udpDestHost; // @synthesize udpDestHost=udpDestHost_;
@property(copy, nonatomic) NSString *debugLogPath; // @synthesize debugLogPath=debugLogPath_;
@property(nonatomic) long long debugLogSeverityLevel; // @synthesize debugLogSeverityLevel=debugLogSeverityLevel_;
@property(retain, nonatomic) NSArray *filteredHttpHeaders; // @synthesize filteredHttpHeaders=filteredHttpHeaders_;
@property(copy, nonatomic) NSString *accessLogPath; // @synthesize accessLogPath=accessLogPath_;
@property(retain, nonatomic) NSArray *customHttpHeaders; // @synthesize customHttpHeaders=customHttpHeaders_;
@property(copy, nonatomic) NSString *appName; // @synthesize appName=appName_;
@property(copy, nonatomic) NSString *imei; // @synthesize imei=imei_;
@property(nonatomic) _Bool hijackHLS; // @synthesize hijackHLS=hijackHLS_;
@property(nonatomic) _Bool useAsyncTranscoding; // @synthesize useAsyncTranscoding=useAsyncTranscoding_;
@property(nonatomic) _Bool forceGzip; // @synthesize forceGzip=forceGzip_;
@property(nonatomic) _Bool isBypassRemoteProxy; // @synthesize isBypassRemoteProxy=isBypassRemoteProxy_;
@property(nonatomic) long long wspInitWindow; // @synthesize wspInitWindow=wspInitWindow_;
@property(nonatomic) long long httpReadTimeout; // @synthesize httpReadTimeout=httpReadTimeout_;
@property(nonatomic) long long compressBody; // @synthesize compressBody=compressBody_;
@property(nonatomic) long long compressionType; // @synthesize compressionType=compressionType_;
@property(nonatomic) _Bool useWSG; // @synthesize useWSG=useWSG_;
@property(nonatomic) long long workMode; // @synthesize workMode=workMode_;
- (void).cxx_destruct;

@end

