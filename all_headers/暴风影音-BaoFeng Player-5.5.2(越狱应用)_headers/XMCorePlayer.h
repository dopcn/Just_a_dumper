//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "XMRequestQueueDelegate-Protocol.h"

@class NSError, NSString, NSThread, NSTimer, NSURL, XMM3u8DataSource, XMRequestQueue;

@interface XMCorePlayer : NSObject <XMRequestQueueDelegate>
{
    float _currentTime;
    int _state;
    long long _stopReason;
    struct OpaqueAudioFileStreamID *mAudioFileStream;
    struct OpaqueAudioQueue *mQueue;
    struct AudioQueueBuffer *mAQBuffers[16];
    unsigned int mPacketsCounts[16];
    struct AudioStreamPacketDescription *mPacketDescs[16];
    _Bool mInuse[16];
    unsigned int mPacketsFilled;
    unsigned int mBytesFilled;
    unsigned long long _enqueuedBufferCount;
    unsigned long long _dequeuedBufferCount;
    unsigned long long _aqBufferMinLen;
    long long _fillPacketIndex;
    long long _slicePacketAdjust;
    unsigned long long _numNetPackets;
    long long _fillBufferIndex;
    unsigned long long _buffersUsed;
    unsigned long long _advanceBufferCount;
    struct _opaque_pthread_mutex_t _queueBufferMutex;
    struct _opaque_pthread_cond_t _queueBufferReadyCond;
    struct _opaque_pthread_mutex_t _requestQueueMutex;
    struct _opaque_pthread_cond_t _requestQueueReadyCond;
    struct _opaque_pthread_mutex_t _exitFillThreadMutex;
    struct _opaque_pthread_cond_t _exitFillThreaReadyCond;
    struct _opaque_pthread_mutex_t _pauseMutex;
    struct _opaque_pthread_cond_t _pauseReadyCond;
    XMRequestQueue *_requestQueue;
    XMM3u8DataSource *_m3u8DataSource;
    NSThread *_fillThread;
    _Bool _exitFillThread;
    _Bool _fillThreadEnded;
    _Bool _playfinalExit;
    _Bool _isAdjustSpeed;
    _Bool _isRateSpeed;
    _Bool _isWaitingData;
    _Bool _discontinuous;
    long long _seekByteOffset;
    long long _dataOffset;
    _Bool _seekAdjustOnce;
    unsigned long long _fileLength;
    unsigned long long _maxCacheByteOffset;
    unsigned long long _seekTime;
    _Bool _completeCache;
    long long _advanceIndex;
    unsigned int _bitRate;
    struct AudioStreamBasicDescription _absd;
    double _packetDuraion;
    unsigned long long _processedPacketCount;
    unsigned long long _processedPacketSize;
    NSTimer *_processTimer;
    _Bool _started;
    unsigned int packetBufferSize;
    double _duration;
    _Bool _isNeedSessionActive;
    _Bool _seekWhenPaused;
    _Bool _pausedWhenWillEOF;
    _Bool _pausedWhenRequestMetadata;
    _Bool _cdnHeaderStatus;
    _Bool _isError;
    long long _isDataEstimated;
    _Bool _isSessionRest;
    long long bufferType;
    struct AudioQueueParameterEvent *_aqInParamValues;
    struct AudioTimeStamp _lasAudioTimeStamp[1];
    double _speed;
    _Bool _isBackGround;
    NSURL *url;
    id delegate;
    NSError *audioQueueError;
    NSString *_writePath;
    NSString *_soundCacheDirectory;
    NSString *_userSoundDownloadDirectory;
    NSString *_userOfflineCacheDirectory;
}

+ (_Bool)checkOtherIsPlay;
+ (id)getVersion;
@property(retain, nonatomic) NSTimer *processTimer; // @synthesize processTimer=_processTimer;
@property(retain, nonatomic) NSString *userOfflineCacheDirectory; // @synthesize userOfflineCacheDirectory=_userOfflineCacheDirectory;
@property(retain, nonatomic) NSString *userSoundDownloadDirectory; // @synthesize userSoundDownloadDirectory=_userSoundDownloadDirectory;
@property(retain, nonatomic) NSString *soundCacheDirectory; // @synthesize soundCacheDirectory=_soundCacheDirectory;
@property(retain, nonatomic) NSString *writePath; // @synthesize writePath=_writePath;
@property(retain, nonatomic) NSError *audioQueueError; // @synthesize audioQueueError;
@property(nonatomic) _Bool completeCached; // @synthesize completeCached=_completeCache;
@property(nonatomic) id delegate; // @synthesize delegate;
@property(retain, nonatomic) NSURL *url; // @synthesize url;
- (void)forceAudioQueueError;
- (void)checkLivingDataBuffer;
- (void)livingSetDuration:(double)arg1;
- (void)livingSetFillDataLengh:(long long)arg1;
- (void)livingSetSeeckTime:(double)arg1;
- (long long)livingGetCurrentFillDataIndex;
- (_Bool)livingCanSeek;
- (void)livingSetFillDataIndex:(long long)arg1;
- (void)livingDatafillThreadMain;
- (void)liveSetM3u8DataSource:(id)arg1;
- (void)livingDataGetReady;
- (void)livePlayStop;
- (void)livePlayStartWithAudioDataType:(int)arg1 withM3u8Data:(id)arg2;
- (void)livePlayInit;
- (void)printState;
- (void)XMRequestQueue:(id)arg1 didDataErrorWithType:(id)arg2 withData:(id)arg3;
- (void)XMRequestQueue:(id)arg1 didReceivedBytes:(long long)arg2;
- (void)XMRequestQueue:(id)arg1 didFinishReceiveAllPackets:(_Bool)arg2;
- (void)XMRequestQueue:(id)arg1 didFinishReceivePacket:(long long)arg2;
- (void)XMRequestQueue:(id)arg1 didFailReceivePacket:(long long)arg2 error:(id)arg3;
- (void)XMRequestQueue:(id)arg1 didFinishedMetadata:(long long)arg2 complete:(_Bool)arg3;
- (void)XMRequestQueue:(id)arg1 didFailMetadataWithError:(id)arg2;
- (void)printErrorData;
- (void)clearQueueError;
- (void)audioQueueErrorOccured:(int)arg1 needEnd:(_Bool)arg2;
- (void)audioQueueErrorOccured:(int)arg1 withLine:(long long)arg2;
- (void)audioQueueErrorOccured:(int)arg1;
- (void)playReachEnd;
- (void)fillThreadMain;
- (void)safteExitFillThread;
- (_Bool)shouldExecuteFillOrWaitForData;
- (_Bool)shouldExitFill;
- (_Bool)shouldExecuteFill;
- (_Bool)shouldExitFillThread;
- (void)exitFillThread;
- (double)caculatedBitRate;
- (double)adjustedBitRate:(double)arg1;
- (double)bytesPerPacket;
- (void)timeExpired;
- (void)requestContent;
- (void)cancelRequestMetadata;
- (void)willPauseFillThread;
- (void)requestMetaData;
- (void)removePlayTimer;
- (void)addPlayTimer;
- (void)startInternal;
- (void)setSoundCachePath:(id)arg1 withOfflineCachePath:(id)arg2 withDownloadPath:(id)arg3;
- (_Bool)activeAudioSession;
- (void)checkAppInitAudioSession;
- (void)initAudioSession;
- (void)wakeupQueueSignal;
- (void)wakeupPauseSignal;
- (void)wakeupOnRequestQueue;
- (void)destroyMutex;
- (void)initPlayData;
- (void)initMutex;
- (void)cleanupOnStop;
- (void)setupMagicCookie:(struct OpaqueAudioFileStreamID *)arg1;
- (void)flushBuffer;
- (void)enqueueBuffer;
- (void)startQueueIfNeeded;
- (_Bool)shouldPauseFillBuffer;
- (_Bool)shouldExitFillAQBuffer;
- (_Bool)shouldEndFillBuffer;
- (_Bool)shouldStartQueue;
- (void)destryoQueue;
- (void)createAQueue:(struct OpaqueAudioFileStreamID *)arg1;
- (void)handleAppEnterFreground:(id)arg1;
- (void)handleAppEnterBackground:(id)arg1;
- (void)handleBufferCompleteForQueue:(struct OpaqueAudioQueue *)arg1 buffer:(struct AudioQueueBuffer *)arg2;
- (void)handleAudioPackets:(const void *)arg1 numberBytes:(unsigned int)arg2 numberPackets:(unsigned int)arg3 packetDescriptions:(struct AudioStreamPacketDescription *)arg4;
- (void)handlePropertyListenerForAudioFileStream:(struct OpaqueAudioFileStreamID *)arg1 propertyID:(unsigned int)arg2 ioFlags:(unsigned int *)arg3;
- (void)handleIsRunningForQueue:(struct OpaqueAudioQueue *)arg1 propertyID:(unsigned int)arg2;
- (void)inAdvanceBuffering;
- (void)handleMediaServicesReset;
- (void)didChangeValueForKey:(id)arg1;
- (void)testObserver;
- (void)resetAudioSessionPlay;
- (void)notifyWillPlaying;
- (double)queryDurationHint;
- (void)notifyFailedWithError:(id)arg1;
- (void)notifyPlayProgress:(double)arg1 currentTime:(long long)arg2;
- (void)notifyCacheProgress:(double)arg1;
- (void)notifyBufferingEnds;
- (void)notifyBufferingBegins;
- (void)notifyPlayerReachedEOF;
- (void)notifyPlayerRestarted;
- (void)notifyPlayerStarted;
- (void)onPlayerDidErrorWithType:(id)arg1 withData:(id)arg2;
- (double)onQueryDurationHint;
- (void)onUpdatePlayProgress:(double)arg1 currentTime:(long long)arg2;
- (void)onUpdateCacheProgress:(double)arg1;
- (void)onDidFailWithError:(id)arg1;
- (void)onDidPaused;
- (void)onDidStopped;
- (void)onWillStopped;
- (void)onDidEnd;
- (void)onWillEnd;
- (void)onDidPlaying;
- (void)onWillPlaying;
- (void)onDidStart;
- (void)onWillStart;
- (void)onInitLoad;
- (void)onDidEndBuffering;
- (void)onDidBeginBuffering;
- (_Bool)onShouldStartPlaying;
- (void)resumeDownload;
- (void)pauseDownload;
- (void)enableAudioURLCDNHeaderStatus:(_Bool)arg1;
- (void)clearCacheIndexAndCompleteFile;
- (void)clearCache;
- (_Bool)isRunning;
- (_Bool)isPaused;
- (_Bool)isPlaying;
- (_Bool)isBuffering;
- (_Bool)isSeeking;
- (void)pausePlayInMainThread;
- (void)resumePlayInMainThread:(id)arg1;
- (void)resumeWaitingDataPauseToPlay;
- (void)pausePlayToWaitingData;
- (void)_continue;
- (void)startNetLoadData;
- (_Bool)seekToTime:(double)arg1;
- (_Bool)canSeek;
- (void)stop;
- (_Bool)resume;
- (void)pause;
- (void)resetPlaySpeed;
- (void)changePlaySpeed:(double)arg1;
- (void)play;
- (double)processPercent;
- (double)cachePercent;
- (double)duration;
@property(nonatomic) double volume;
@property(nonatomic) long long dataOffset;
- (id)init;
- (_Bool)checkValidate;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

