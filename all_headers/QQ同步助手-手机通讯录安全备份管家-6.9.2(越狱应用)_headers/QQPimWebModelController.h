//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "QQPimBaseViewController.h"

#import "QQPimSettingMenuViewDelegate-Protocol.h"
#import "QQPimWebViewDelegate-Protocol.h"
#import "UIActionSheetDelegate-Protocol.h"
#import "UIWebViewDelegate-Protocol.h"

@class MQQJSBridge, NSArray, NSMutableDictionary, NSString, NSURLRequest, QQPimWebProgessView, QQPimWebView, UIAlertExView, UIButton, UIImage, WebViewJavascriptBridge;
@protocol QQPimWebModelControllerDelegate;

@interface QQPimWebModelController : QQPimBaseViewController <QQPimSettingMenuViewDelegate, QQPimWebViewDelegate, UIActionSheetDelegate, UIWebViewDelegate>
{
    NSString *_webURL;
    NSURLRequest *_lastRequest;
    UIAlertExView *_SMSAskView;
    _Bool _loadHTMLFile;
    int _barBtn2State;
    _Bool _hideToolbar;
    _Bool _isFromTextAds;
    _Bool _needSetupCallback;
    _Bool _hasSetupCallback;
    _Bool _closeButtonOnRight;
    _Bool _useBeaconReport;
    _Bool _useWKWebView;
    _Bool _canOpenURL;
    _Bool _hasLoadHTMLFile;
    _Bool _didFinishLoad;
    _Bool _hasJumpToAppStore;
    _Bool _hasBeaconReported;
    id <QQPimWebModelControllerDelegate> _webModelDelagete;
    CDUnknownBlockType _QQPimWebModelControllerDidFinishBlock;
    QQPimWebView *_webView;
    double _delayTime;
    WebViewJavascriptBridge *_bridge;
    MQQJSBridge *_mqqJSBridge;
    NSMutableDictionary *_callbacks;
    NSString *_fixTitle;
    UIImage *_shareImage;
    NSArray *_customToolbarItems;
    UIButton *_createCollectionButton;
    double _beginTime;
    QQPimWebProgessView *_progressView;
}

+ (void)clearWebResourceIfNeeded;
+ (void)registUserAgent;
+ (void)loadBrowserKernel;
@property(retain, nonatomic) QQPimWebProgessView *progressView; // @synthesize progressView=_progressView;
@property(nonatomic) double beginTime; // @synthesize beginTime=_beginTime;
@property(nonatomic) _Bool hasBeaconReported; // @synthesize hasBeaconReported=_hasBeaconReported;
@property(nonatomic) _Bool hasJumpToAppStore; // @synthesize hasJumpToAppStore=_hasJumpToAppStore;
@property(nonatomic) _Bool didFinishLoad; // @synthesize didFinishLoad=_didFinishLoad;
@property(nonatomic) _Bool hasLoadHTMLFile; // @synthesize hasLoadHTMLFile=_hasLoadHTMLFile;
@property(retain, nonatomic) UIButton *createCollectionButton; // @synthesize createCollectionButton=_createCollectionButton;
@property(nonatomic) _Bool canOpenURL; // @synthesize canOpenURL=_canOpenURL;
@property(retain, nonatomic) NSArray *customToolbarItems; // @synthesize customToolbarItems=_customToolbarItems;
@property(retain, nonatomic) UIImage *shareImage; // @synthesize shareImage=_shareImage;
@property(retain, nonatomic) NSString *fixTitle; // @synthesize fixTitle=_fixTitle;
@property(retain, nonatomic) NSMutableDictionary *callbacks; // @synthesize callbacks=_callbacks;
@property(retain, nonatomic) MQQJSBridge *mqqJSBridge; // @synthesize mqqJSBridge=_mqqJSBridge;
@property(retain, nonatomic) WebViewJavascriptBridge *bridge; // @synthesize bridge=_bridge;
@property(nonatomic) _Bool useWKWebView; // @synthesize useWKWebView=_useWKWebView;
@property(nonatomic) double delayTime; // @synthesize delayTime=_delayTime;
@property(retain, nonatomic) QQPimWebView *webView; // @synthesize webView=_webView;
@property(copy, nonatomic) CDUnknownBlockType QQPimWebModelControllerDidFinishBlock; // @synthesize QQPimWebModelControllerDidFinishBlock=_QQPimWebModelControllerDidFinishBlock;
@property(nonatomic) _Bool useBeaconReport; // @synthesize useBeaconReport=_useBeaconReport;
@property(nonatomic) _Bool closeButtonOnRight; // @synthesize closeButtonOnRight=_closeButtonOnRight;
@property(nonatomic) __weak id <QQPimWebModelControllerDelegate> webModelDelagete; // @synthesize webModelDelagete=_webModelDelagete;
@property(nonatomic) _Bool hasSetupCallback; // @synthesize hasSetupCallback=_hasSetupCallback;
@property(nonatomic) _Bool needSetupCallback; // @synthesize needSetupCallback=_needSetupCallback;
@property(nonatomic) _Bool isFromTextAds; // @synthesize isFromTextAds=_isFromTextAds;
@property(nonatomic) _Bool hideToolbar; // @synthesize hideToolbar=_hideToolbar;
@property(retain, nonatomic) NSURLRequest *lastRequest; // @synthesize lastRequest=_lastRequest;
@property(nonatomic) _Bool loadHTMLFile; // @synthesize loadHTMLFile=_loadHTMLFile;
@property(copy, nonatomic) NSString *webURL; // @synthesize webURL=_webURL;
- (void).cxx_destruct;
- (void)actionSheet:(id)arg1 clickedButtonAtIndex:(long long)arg2;
- (void)webViewDidScroll:(id)arg1;
- (void)webView:(id)arg1 didFailLoadWithError:(id)arg2;
- (void)webViewDidFinishLoad:(id)arg1;
- (void)webViewDidStartLoad:(id)arg1;
- (_Bool)webView:(id)arg1 shouldStartLoadWithRequest:(id)arg2 navigationType:(unsigned long long)arg3;
- (void)adjustViewHeight;
- (void)reloadWithURL:(id)arg1;
- (void)reloadWithBlank;
- (void)reload;
- (void)setupCallback;
- (void)setupReservedCallback;
- (void)registerJavascriptMessageCallback:(id)arg1 handler:(CDUnknownBlockType)arg2;
- (void)clickForward:(id)arg1;
- (void)clickBack:(id)arg1;
- (void)clickCancel:(id)arg1;
- (void)settingMenuCancel:(id)arg1;
- (void)settingMenu:(id)arg1 clickAtIndex:(long long)arg2;
- (void)menuButtonTouch;
- (void)setRightTopBtnShowable:(_Bool)arg1;
- (void)showToolBarView;
- (void)hideToolBarView;
- (void)setupNavigationBarButton;
- (void)closeButtonPressed:(id)arg1;
- (void)backButtonPressed:(id)arg1;
- (void)shareButtonClicked:(id)arg1;
- (void)checkAppStoreJump;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)setupDefaultUI;
- (void)viewDidLoad;
- (id)initWithBrowseWeburl:(id)arg1 withTitle:(id)arg2 loadMethod:(_Bool)arg3;
- (id)initWithBrowseWeburl:(id)arg1 withTitle:(id)arg2;
- (void)setupNotification;
- (void)dealloc;
- (id)init;
- (void)changeBtnState:(int)arg1;
- (void)alertView:(id)arg1 clickedButtonAtIndex:(long long)arg2;
- (void)showAskSMSAlertView:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

