//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "NSCopying-Protocol.h"
#import "NSSecureCoding-Protocol.h"

@class NSDate, NSDateComponents, NSString;

@interface AIRDate : NSObject <NSCopying, NSSecureCoding>
{
    long long _year;
    long long _month;
    long long _day;
    NSDateComponents *_components;
}

+ (id)shortStandaloneMonthSymbols;
+ (_Bool)supportsSecureCoding;
+ (id)yesterdayDate;
+ (id)yesterdayDateInTimeZone:(id)arg1;
+ (id)tomorrowDate;
+ (id)tomorrowDateInTimeZone:(id)arg1;
+ (id)todayDate;
+ (id)todayDateInTimeZone:(id)arg1;
+ (id)dateWithDate:(id)arg1 timeZone:(id)arg2;
+ (id)dateWithString:(id)arg1 dateFormat:(id)arg2;
+ (id)dateWithString:(id)arg1;
+ (id)dateWithComponents:(id)arg1;
+ (id)dateWithYear:(long long)arg1 month:(long long)arg2 day:(long long)arg3;
+ (id)localizedDateRangeDescription:(id)arg1 variousDatesEnabled:(_Bool)arg2;
+ (id)localizedDateRangeDescription:(id)arg1;
+ (_Bool)isContinuousDateRange:(id)arg1;
@property(readonly, nonatomic) NSDateComponents *components; // @synthesize components=_components;
@property(readonly, nonatomic) long long day; // @synthesize day=_day;
@property(readonly, nonatomic) long long month; // @synthesize month=_month;
@property(readonly, nonatomic) long long year; // @synthesize year=_year;
- (void).cxx_destruct;
- (id)description;
- (id)debugDescription;
- (id)stringWithDateStyle:(unsigned long long)arg1;
- (id)stringWithDateStyle:(unsigned long long)arg1 locale:(id)arg2;
- (id)stringWithDateStyle:(unsigned long long)arg1 locale:(id)arg2 allowRelative:(_Bool)arg3;
- (id)stringWithExplicitDateFormat:(id)arg1;
- (id)stringWithExplicitDateFormat:(id)arg1 locale:(id)arg2;
- (id)stringWithExplicitDateFormat:(id)arg1 locale:(id)arg2 allowRelative:(_Bool)arg3;
- (id)stringWithDefaultFormat;
- (id)stringWithDateFormat:(id)arg1;
- (id)stringWithDateFormat:(id)arg1 locale:(id)arg2;
- (id)stringWithDateFormat:(id)arg1 locale:(id)arg2 allowRelative:(_Bool)arg3;
- (_Bool)isWithinDays:(long long)arg1 toDate:(id)arg2;
- (_Bool)isWithinDays:(long long)arg1 fromDate:(id)arg2;
- (_Bool)isWithinMonths:(long long)arg1 toDate:(id)arg2;
- (_Bool)isWithinMonths:(long long)arg1 fromDate:(id)arg2;
- (_Bool)isWithinYears:(long long)arg1 toDate:(id)arg2;
- (_Bool)isWithinYears:(long long)arg1 fromDate:(id)arg2;
- (_Bool)isWithinRange:(long long)arg1 unit:(unsigned long long)arg2 fromDate:(id)arg3;
- (_Bool)isWithinRange:(long long)arg1 unit:(unsigned long long)arg2 toDate:(id)arg3;
- (_Bool)isAfter:(id)arg1;
- (_Bool)isAfterTodayInTimeZone:(id)arg1;
- (_Bool)isAfterToday;
- (_Bool)isBefore:(id)arg1;
- (_Bool)isBeforeTodayInTimeZone:(id)arg1;
- (_Bool)isBeforeToday;
- (_Bool)isSameDayAsDate:(id)arg1;
- (_Bool)isSameMonthAsDate:(id)arg1;
- (_Bool)isSameYearAsDate:(id)arg1;
- (_Bool)isYesterday;
- (_Bool)isYesterdayInTimeZone:(id)arg1;
- (_Bool)isTomorrow;
- (_Bool)isTomorrowInTimeZone:(id)arg1;
- (_Bool)isToday;
- (_Bool)isTodayInTimeZone:(id)arg1;
- (long long)compare:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (_Bool)isFirstDayOfYear;
- (_Bool)isWeekend;
- (_Bool)isWeekendInCalendar:(id)arg1;
- (long long)weeksInMonth;
- (long long)weeksInMonthInCalendar:(id)arg1;
- (long long)weeksInYear;
- (long long)weeksInYearInCalendar:(id)arg1;
- (long long)daysInMonth;
- (long long)daysInMonthInCalendar:(id)arg1;
- (long long)weekOfYear;
- (long long)weekOfYearInCalendar:(id)arg1;
- (long long)weekOfMonth;
- (long long)weekOfMonthInCalendar:(id)arg1;
- (long long)weekday;
- (long long)weekdayInCalendar:(id)arg1;
- (long long)weeksInMonthFromDate:(id)arg1;
- (long long)weeksInMonthToDate:(id)arg1;
- (long long)weeksInYearFromDate:(id)arg1;
- (long long)weeksInYearToDate:(id)arg1;
- (long long)daysFromDate:(id)arg1;
- (long long)daysToDate:(id)arg1;
- (long long)monthsFromDate:(id)arg1;
- (long long)monthsToDate:(id)arg1;
- (long long)yearsFromDate:(id)arg1;
- (long long)yearsToDate:(id)arg1;
- (id)componentsFromDate:(id)arg1 units:(unsigned long long)arg2;
- (id)componentsToDate:(id)arg1 units:(unsigned long long)arg2;
- (id)computationCalendar;
- (id)systemDateValueInTimeZone:(id)arg1;
@property(readonly, nonatomic) NSDate *systemDateValue;
@property(readonly, nonatomic) NSString *stringValue;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)dateForWeekdayOfWeek:(long long)arg1;
- (id)dateForWeekdayOfWeek:(long long)arg1 inCalendar:(id)arg2;
- (id)firstDateOfPreviousWeek;
- (id)firstDateOfPreviousWeekInCalendar:(id)arg1;
- (id)firstDateOfNextWeek;
- (id)firstDateOfNextWeekInCalendar:(id)arg1;
- (id)firstDateOfWeek;
- (id)firstDateOfWeekInCalendar:(id)arg1;
- (id)lastDateOfMonth;
- (id)lastDateOfMonthInCalendar:(id)arg1;
- (id)firstDateOfMonth;
- (id)firstDateOfMonthInCalendar:(id)arg1;
- (id)lastDateOfYear;
- (id)lastDateOfYearInCalendar:(id)arg1;
- (id)firstDateOfYear;
- (id)firstDateOfYearInCalendar:(id)arg1;
- (id)dateRangeByAddingYears:(long long)arg1;
- (id)dateRangeByAddingMonths:(long long)arg1;
- (id)dateRangeByAddingDays:(long long)arg1;
- (id)dateByAddingYears:(long long)arg1;
- (id)dateByAddingMonths:(long long)arg1;
- (id)dateByAddingDays:(long long)arg1;
- (id)initWithDate:(id)arg1 timeZone:(id)arg2;
- (id)initWithString:(id)arg1 dateFormat:(id)arg2;
- (id)initWithString:(id)arg1;
- (id)initWithComponents:(id)arg1;
- (id)initWithYear:(long long)arg1 month:(long long)arg2 day:(long long)arg3;
- (id)init;
- (id)requestStringForBirthdate;
- (id)displayStringForBirthdate;
- (id)timeUntilValue:(int)arg1 unit:(long long)arg2;
- (id)timeAgoForValue:(int)arg1 unit:(long long)arg2;
- (id)relativeTimeAgoDateWithTimeZone:(id)arg1;
- (id)relativeTimeUntilDateWithTimeZone:(id)arg1;
- (id)differenceComponentsWithTimeZone:(id)arg1;

@end

