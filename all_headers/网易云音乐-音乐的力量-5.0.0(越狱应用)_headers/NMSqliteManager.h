//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class FMDatabaseQueue;

@interface NMSqliteManager : NSObject
{
    FMDatabaseQueue *_sqliteFMDBQueue_v2;
    FMDatabaseQueue *_sqliteAppendantFMDBQueue;
}

+ (unsigned long long)parseDownloadState:(id)arg1;
+ (long long)parseLocalUpdateTime:(id)arg1;
+ (id)generateLogErrorMsg:(id)arg1 userInfo:(id)arg2;
+ (id)appendantSqlitePath;
+ (id)sqlitePathv2;
+ (id)sqlitePath;
+ (id)defaultManager;
@property(retain) FMDatabaseQueue *sqliteAppendantFMDBQueue; // @synthesize sqliteAppendantFMDBQueue=_sqliteAppendantFMDBQueue;
@property(retain) FMDatabaseQueue *sqliteFMDBQueue_v2; // @synthesize sqliteFMDBQueue_v2=_sqliteFMDBQueue_v2;
- (void).cxx_destruct;
- (unsigned long long)getAllDownloadedMVCount;
- (unsigned long long)getAllDownloadedProgramCount;
- (unsigned long long)getAllDownloadedSongCount;
- (_Bool)recoverDownloadMVs:(id)arg1;
- (id)getExistedMVIds:(id)arg1;
- (_Bool)recoverDownloadPrograms:(id)arg1;
- (id)getExistedProgramSongIds:(id)arg1;
- (_Bool)recoverDownloadSongs:(id)arg1;
- (id)getExistedSongIds:(id)arg1;
- (void)cleanAllUnDownloadResources:(CDUnknownBlockType)arg1;
- (void)fillDownloadCountForAlbums:(id)arg1 finished:(CDUnknownBlockType)arg2;
- (void)fetchIsAlbumSubscribed:(id)arg1 byUserId:(id)arg2 callbackBlock:(CDUnknownBlockType)arg3;
- (void)fetchAlbumCountByUserId:(id)arg1 callbackBlock:(CDUnknownBlockType)arg2;
- (void)removeSubscribedAlbumWithIds:(id)arg1 userId:(id)arg2 callbackBlock:(CDUnknownBlockType)arg3;
- (void)updateOrInserSubscribedAlbum:(id)arg1 withTrack:(id)arg2 userId:(id)arg3 callbackBlock:(CDUnknownBlockType)arg4;
- (void)updateOrInserSubscribedAlbums:(id)arg1 userId:(id)arg2 callbackBlock:(CDUnknownBlockType)arg3;
- (void)loadSongIdsWithAlbumId:(id)arg1 callbackBlock:(CDUnknownBlockType)arg2;
- (void)loadAlbumDetailByUserId:(id)arg1 albumId:(id)arg2 loadSong:(_Bool)arg3 callbackBlock:(CDUnknownBlockType)arg4;
- (void)loadAlbumsByUserId:(id)arg1 callbackBlock:(CDUnknownBlockType)arg2;
- (void)loadAlbumIdsByUserId:(id)arg1 callbackBlock:(CDUnknownBlockType)arg2;
- (void)mergeDjProgramProgress:(id)arg1 andFillPrograms:(id)arg2 callbackBlock:(CDUnknownBlockType)arg3;
- (void)updateOrInsertDjProgramProgress:(id)arg1 callbackBlock:(CDUnknownBlockType)arg2;
- (_Bool)syncUpdateOrInsertDjProgramProgress:(id)arg1;
- (void)loadDjProgramProgressByUserId:(id)arg1 programIds:(id)arg2 callbackBlock:(CDUnknownBlockType)arg3;
- (void)deleteOfflinePackageSongs:(id)arg1 callbackBlock:(CDUnknownBlockType)arg2;
- (void)deleteOfflinePackageSong:(id)arg1 callbackBlock:(CDUnknownBlockType)arg2;
- (void)addOrUpdateOfflinePackageSongs:(id)arg1 callbackBlock:(CDUnknownBlockType)arg2;
- (void)addOrUpdateOfflinePackageSong:(id)arg1 callbackBlock:(CDUnknownBlockType)arg2;
- (void)loadOfflinePackageMusic:(CDUnknownBlockType)arg1;
- (id)getOfflineSongInfo:(id)arg1;
- (void)removeAllPlayingListWithCallbackBlock:(CDUnknownBlockType)arg1;
- (void)removeFromPlayingList:(id)arg1 callbackBlock:(CDUnknownBlockType)arg2;
- (void)insertToTailOfPlayingList:(id)arg1 callbackBlock:(CDUnknownBlockType)arg2;
- (void)insertToHeadOfPlayingList:(id)arg1 callbackBlock:(CDUnknownBlockType)arg2;
- (void)updateAllPlayingListEq:(id)arg1 callbackBlock:(CDUnknownBlockType)arg2;
- (void)updateAllPlayingList:(id)arg1 callbackBlock:(CDUnknownBlockType)arg2;
- (void)loadPlayingList:(CDUnknownBlockType)arg1;
- (void)updateAllLocalPrivateMsgFromUser:(id)arg1 state:(unsigned long long)arg2 callbackBlock:(CDUnknownBlockType)arg3;
- (void)updateLocalPrivateMsg:(id)arg1 state:(unsigned long long)arg2 callbackBlock:(CDUnknownBlockType)arg3;
- (void)checkHasLocalPrivateMsgToUserList:(id)arg1 callbackBlock:(CDUnknownBlockType)arg2;
- (void)loadAllLocalPrivateMsgToUser:(id)arg1 callbackBlock:(CDUnknownBlockType)arg2;
- (void)removeLocalPrivateMsg:(id)arg1 userId:(id)arg2 callbackBlock:(CDUnknownBlockType)arg3;
- (void)addLocalPrivateMsg:(id)arg1 userId:(id)arg2 callbackBlock:(CDUnknownBlockType)arg3;
- (void)checkHasLocalEvents:(CDUnknownBlockType)arg1;
- (void)loadAllLocalEvents:(CDUnknownBlockType)arg1;
- (void)deleteLocalEvents:(id)arg1 callbackBlock:(CDUnknownBlockType)arg2;
- (void)addOrUpdateLocalEvent:(id)arg1 callbackBlock:(CDUnknownBlockType)arg2;
- (unsigned long long)getMVState:(id)arg1;
- (void)_internalRefreshMVState:(id)arg1 callbackBlock:(CDUnknownBlockType)arg2;
- (void)refreshMVInfoOfMVList:(id)arg1 callbackBlock:(CDUnknownBlockType)arg2;
- (void)downloadMVComplete:(id)arg1 isSucc:(_Bool)arg2 callbackBlock:(CDUnknownBlockType)arg3;
- (void)togglePauseDownloadMVs:(id)arg1 isPaused:(_Bool)arg2 callbackBlock:(CDUnknownBlockType)arg3;
- (void)loadDownloadMV:(id)arg1 callbackBlock:(CDUnknownBlockType)arg2;
- (void)loadAllDownloadMVs:(CDUnknownBlockType)arg1;
- (void)loadDownloadedMVs:(CDUnknownBlockType)arg1;
- (void)loadDownloadingMVs:(CDUnknownBlockType)arg1;
- (void)_addOrUpdateMVs:(id)arg1 callbackBlock:(CDUnknownBlockType)arg2;
- (void)_fixJobUpdateTime:(id)arg1;
- (void)_fixJobCreateTimeAndState:(id)arg1;
- (void)updateDownloadMVs:(id)arg1 callbackBlock:(CDUnknownBlockType)arg2;
- (void)addDownloadMVs:(id)arg1 callbackBlock:(CDUnknownBlockType)arg2;
- (void)deleteAllRecentPlayCollectionsWithCallbackBlock:(CDUnknownBlockType)arg1;
- (void)deleteRecentPlayCollection:(id)arg1 callbackBlock:(CDUnknownBlockType)arg2;
- (void)addOrUpdateRecentPlayCollection:(id)arg1 callbackBlock:(CDUnknownBlockType)arg2;
- (void)loadRecentPlayCollections:(CDUnknownBlockType)arg1;
- (void)refreshRecentPlayCountForConversion:(id)arg1;
- (void)addRecentPlayForConversion:(id)arg1 userId:(id)arg2;
- (void)clearAllRecentPlays:(CDUnknownBlockType)arg1;
- (void)getRecentPlayCount:(CDUnknownBlockType)arg1;
- (void)removeRecentPlayWithList:(id)arg1 callbackBlock:(CDUnknownBlockType)arg2;
- (void)removeRecentPlay:(id)arg1 callbackBlock:(CDUnknownBlockType)arg2;
- (void)addOrUpdateRecentPlay:(id)arg1 callbackBlock:(CDUnknownBlockType)arg2;
- (void)loadRecentPlayResourcesWithCount:(unsigned long long)arg1 finished:(CDUnknownBlockType)arg2;
- (void)clearAllTrackVersionInChildThread;
- (void)addOrUpdateSongs:(id)arg1 callbackBlock:(CDUnknownBlockType)arg2;
- (void)loadSongsByIds:(id)arg1 callbackBlock:(CDUnknownBlockType)arg2;
- (void)loadPlaylistCache:(id)arg1 callbackBlock:(CDUnknownBlockType)arg2;
- (void)doIpodMatchResultConversion;
- (id)loadAllIpodSongs;
- (id)loadIpodSongs:(id)arg1;
- (void)removeInvalidIpodSongs:(id)arg1 callbackBlock:(CDUnknownBlockType)arg2;
- (void)saveIpodSongList:(id)arg1 callbackBlock:(CDUnknownBlockType)arg2;
- (void)saveIpodSong:(id)arg1 callbackBlock:(CDUnknownBlockType)arg2;
- (void)programFixed:(id)arg1;
- (void)playStateChanged:(id)arg1;
- (void)radioPlayChanged:(id)arg1;
- (void)loadDjRadioPlayInfo:(id)arg1 callbackBlock:(CDUnknownBlockType)arg2;
- (void)syncSaveDjRadioPlayInfo:(id)arg1 lastPlayTime:(double)arg2 isRadioEnd:(_Bool)arg3 callbackBlock:(CDUnknownBlockType)arg4;
- (void)saveDjRadioPlayInfo:(id)arg1 lastPlayTime:(double)arg2 isRadioEnd:(_Bool)arg3 callbackBlock:(CDUnknownBlockType)arg4;
- (void)loadDjProgram:(id)arg1 callbackBlock:(CDUnknownBlockType)arg2;
- (void)_cleanPlaylistTracks:(id)arg1;
- (void)_internalRefreshPlaylistTracks:(id)arg1 playlist:(id)arg2 callbackBlock:(CDUnknownBlockType)arg3;
- (void)refreshPlaylistTracks:(id)arg1 playlist:(id)arg2 callbackBlock:(CDUnknownBlockType)arg3;
- (void)deletePlaylistTracks:(id)arg1 playlistId:(id)arg2 callbackBlock:(CDUnknownBlockType)arg3;
- (void)addPlaylistTracks:(id)arg1 playlist:(id)arg2 callbackBlock:(CDUnknownBlockType)arg3;
- (void)updatePlaylistTracks:(id)arg1 playlist:(id)arg2 callbackBlock:(CDUnknownBlockType)arg3;
- (unsigned long long)getPlaylistCountByUserId:(id)arg1;
- (unsigned long long)getSongCountByUserId:(id)arg1;
- (void)syncCurrentDownloadCount:(CDUnknownBlockType)arg1;
- (void)updatePlaylistLocalOrder:(id)arg1 callbackBlock:(CDUnknownBlockType)arg2;
- (void)syncRecentPlayCount:(long long)arg1 callbackBlock:(CDUnknownBlockType)arg2;
- (void)updatePlaylistAndSyncDownload:(id)arg1 callbackBlock:(CDUnknownBlockType)arg2;
- (void)updatePlaylist:(id)arg1 callbackBlock:(CDUnknownBlockType)arg2;
- (void)addPlaylist:(id)arg1 userId:(id)arg2 callbackBlock:(CDUnknownBlockType)arg3;
- (void)deletePlaylist:(id)arg1 userId:(id)arg2 callbackBlock:(CDUnknownBlockType)arg3;
- (void)reloadPlaylist:(id)arg1 userId:(id)arg2 callbackBlock:(CDUnknownBlockType)arg3;
- (id)getPlaylistById:(id)arg1 userId:(id)arg2;
- (void)getPlaylistsByUserId:(id)arg1 callbackBlock:(CDUnknownBlockType)arg2;
- (void)getAllPlaylistFromDB:(CDUnknownBlockType)arg1;
- (void)userHasDownloadProgramsOrMVs:(CDUnknownBlockType)arg1;
- (void)userHasDownloadSongs:(CDUnknownBlockType)arg1;
- (void)hasDownloadSong:(id)arg1 callbackBlock:(CDUnknownBlockType)arg2;
- (id)_combineStatisticResultWithSongAndProgramDict:(id)arg1 withMVDict:(id)arg2 needDetail:(_Bool)arg3;
- (id)calcDownloadStatisticNeedDetail:(_Bool)arg1 database:(id)arg2;
- (id)calcDownloadStatisticNeedDetail:(_Bool)arg1;
- (void)calcDownloadStatisticNeedDetail:(_Bool)arg1 callbackBlock:(CDUnknownBlockType)arg2;
- (void)calcDownloadStatusDetail:(id)arg1 callbackBlock:(CDUnknownBlockType)arg2;
- (id)getDBProgramSongDictByProgramIds:(id)arg1;
- (id)getDBSongDictBySongIds:(id)arg1;
- (void)_internalRefreshSongState:(id)arg1 sourceSongArray:(id)arg2;
- (void)_internalRefreshSongCache:(id)arg1;
- (void)_internalRefreshSongIpodState:(id)arg1 songIds:(id)arg2;
- (void)refreshStateOfResourceList:(id)arg1 finishedCallbackOnMainThread:(CDUnknownBlockType)arg2;
- (void)checkCacheSongStateOfSongList:(id)arg1 finishedCallbackOnMainThread:(CDUnknownBlockType)arg2;
- (void)_updateSongData:(id)arg1 fromLocalSong:(id)arg2;
- (void)refreshSongStateOfSongList:(id)arg1 needCheckIpod:(_Bool)arg2 needCheckCache:(_Bool)arg3 finishedCallbackOnMainThread:(CDUnknownBlockType)arg4;
- (void)refreshSongStateOfSongList:(id)arg1 finishedCallbackOnMainThread:(CDUnknownBlockType)arg2;
- (void)syncRefreshSongCacheOrIpodStateOfSongList:(id)arg1;
- (void)refreshSongStateOfSongList:(id)arg1;
- (void)_internalRefreshProgramState:(id)arg1;
- (void)refreshDjProgramStateOfProgramList:(id)arg1 finishedCallbackOnMainThread:(CDUnknownBlockType)arg2;
- (void)refreshDjProgramStateOfProgramList:(id)arg1;
- (id)getDbSongList:(id)arg1;
- (id)getDbDjProgram:(id)arg1;
- (id)getDbSong:(id)arg1;
- (long long)getProgramState:(id)arg1;
- (long long)getSongState:(id)arg1;
- (id)getDownloadSongPath:(id)arg1;
- (id)getDownloadedSongInfo:(id)arg1;
- (void)getAllDownloadedDj:(CDUnknownBlockType)arg1;
- (void)manualResumeDownloadWork:(CDUnknownBlockType)arg1;
- (void)getUnDownloadSongsAndDjAndMVForAuto:(CDUnknownBlockType)arg1;
- (void)getDownloadedSongsTopCount:(long long)arg1 callbackBlock:(CDUnknownBlockType)arg2;
- (void)sortUndownloadResources:(id)arg1;
- (void)getAllUnDownloadResources:(CDUnknownBlockType)arg1;
- (void)getAllUnDownloadResourcesForAuto:(CDUnknownBlockType)arg1;
- (void)getAllDownloadingSongs:(CDUnknownBlockType)arg1;
- (void)getAllDownloadedSongsAndDowloadingSongCount:(CDUnknownBlockType)arg1;
- (void)getAllDownloadedSongs:(CDUnknownBlockType)arg1;
- (void)togglePauseDownloadSongs:(id)arg1 programs:(id)arg2 mvs:(id)arg3 isPaused:(_Bool)arg4 callbackBlock:(CDUnknownBlockType)arg5;
- (void)togglePauseDownloadProgram:(id)arg1 isPaused:(_Bool)arg2 callbackBlock:(CDUnknownBlockType)arg3;
- (void)togglePauseDownloadSongs:(id)arg1 isPaused:(_Bool)arg2 callbackBlock:(CDUnknownBlockType)arg3;
- (void)downloadProgramComplete:(id)arg1 isSucc:(_Bool)arg2 callbackBlock:(CDUnknownBlockType)arg3;
- (void)downloadSongComplete:(id)arg1 isSucc:(_Bool)arg2 callbackBlock:(CDUnknownBlockType)arg3;
- (void)updateProgramDownloadUrlInfo:(id)arg1 callbackBlock:(CDUnknownBlockType)arg2;
- (void)updateDownloadUrlInfo:(id)arg1 callbackBlock:(CDUnknownBlockType)arg2;
- (void)updateSongFile:(id)arg1 callbackBlock:(CDUnknownBlockType)arg2;
- (void)batchUpdateSongJson:(id)arg1 callbackBlock:(CDUnknownBlockType)arg2;
- (void)updateSongJson:(id)arg1 callbackBlock:(CDUnknownBlockType)arg2;
- (void)batchUpdateSongClientEq:(id)arg1 callbackBlock:(CDUnknownBlockType)arg2;
- (void)updateSongClientEq:(id)arg1 callbackBlock:(CDUnknownBlockType)arg2;
- (void)syncPlaylistDownloadCount:(id)arg1 callbackBlock:(CDUnknownBlockType)arg2;
- (void)refreshSongsAndPlaylist:(id)arg1 playlist:(id)arg2 callbackBlock:(CDUnknownBlockType)arg3;
- (void)addDownloadedSongsToPlaylist:(id)arg1 inPlaylist:(id)arg2 callbackBlock:(CDUnknownBlockType)arg3;
- (void)deleteDownloadWithSongIds:(id)arg1 programIds:(id)arg2 mvIds:(id)arg3 callbackBlock:(CDUnknownBlockType)arg4;
- (void)addDownloadDjPrograms:(id)arg1 callbackBlock:(CDUnknownBlockType)arg2;
- (void)addDownloadSongs:(id)arg1 sourcePlaylistId:(id)arg2 callbackBlock:(CDUnknownBlockType)arg3;
- (void)alterTable_UserVersion_4;
- (void)alterTable_UserVersion_3;
- (void)alterTable_UserVersion_2;
- (void)upgradeTable:(unsigned int)arg1;
- (void)upgradeUserVersionIfNeeded;
- (unsigned int)checkUserVersion;
- (void)createApendantTable;
- (void)createTable;
- (void)checkJournalMode;
- (void)openAppendantSqliteDatabase;
- (void)resetDBConnection;
- (void)openSqliteDatabasev2;
- (void)dealloc;
- (id)init;

@end

