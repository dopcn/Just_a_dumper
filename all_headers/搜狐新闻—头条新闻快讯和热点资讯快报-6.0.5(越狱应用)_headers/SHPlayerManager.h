//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

#import "SHPlayerDelegate-Protocol.h"
#import "SHPlayerManagerProtocol-Protocol.h"
#import "SHVideoPlayerTrackerDataSource-Protocol.h"

@class NSDate, NSString, NSURL, SHMedia, SHNewPlayer, UIView, VideoItem;
@protocol PlayerManagerDelegate;

@interface SHPlayerManager : NSObject <SHPlayerManagerProtocol, SHPlayerDelegate, SHVideoPlayerTrackerDataSource>
{
    _Bool _playerDidPrepared;
    _Bool _playerDidPlay;
    _Bool _playerDidAvailable;
    _Bool _isBeingRecordPlaybackStatePause;
    _Bool _recordAutoPause;
    _Bool _isDidEnterForeground;
    unsigned long long _cusLoadState;
    unsigned long long _cusPlaybackState;
    unsigned long long _recordPlaybackState;
    double _recordPlaybackTime;
    double _recordDuration;
    double _videoPreloadTime;
    _Bool allowsAirPlay;
    _Bool _muted;
    _Bool _tvIsVr;
    _Bool _isFirstPlayVideo;
    _Bool _isInAdvertMode;
    SHNewPlayer *_videoPlayer;
    unsigned long long movieScaleMode;
    id <PlayerManagerDelegate> _delegate;
    SHMedia *_mediaObject;
    NSURL *_conentUrl;
    long long _volume;
    unsigned long long _movieQualityType;
    unsigned long long _playOrderType;
    unsigned long long _mediaSourceType;
    double _initialPlaybackTime;
    NSDate *_trackerRecordDate;
    VideoItem *_videoItem;
    long long _totalErrorFileCounts;
    long long _successFileCounts;
}

@property(nonatomic) long long successFileCounts; // @synthesize successFileCounts=_successFileCounts;
@property(nonatomic) long long totalErrorFileCounts; // @synthesize totalErrorFileCounts=_totalErrorFileCounts;
@property(retain, nonatomic) VideoItem *videoItem; // @synthesize videoItem=_videoItem;
@property(retain, nonatomic) NSDate *trackerRecordDate; // @synthesize trackerRecordDate=_trackerRecordDate;
@property(readonly, nonatomic) double initialPlaybackTime; // @synthesize initialPlaybackTime=_initialPlaybackTime;
@property(readonly, nonatomic) unsigned long long mediaSourceType; // @synthesize mediaSourceType=_mediaSourceType;
@property(nonatomic) unsigned long long playOrderType; // @synthesize playOrderType=_playOrderType;
@property(nonatomic) unsigned long long movieQualityType; // @synthesize movieQualityType=_movieQualityType;
@property(nonatomic) _Bool isInAdvertMode; // @synthesize isInAdvertMode=_isInAdvertMode;
@property(nonatomic) _Bool isFirstPlayVideo; // @synthesize isFirstPlayVideo=_isFirstPlayVideo;
@property(nonatomic) long long volume; // @synthesize volume=_volume;
@property(copy, nonatomic) NSURL *conentUrl; // @synthesize conentUrl=_conentUrl;
@property(retain, nonatomic) SHMedia *mediaObject; // @synthesize mediaObject=_mediaObject;
@property(nonatomic) id <PlayerManagerDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) _Bool allowsAirPlay; // @synthesize allowsAirPlay;
@property(retain, nonatomic) SHNewPlayer *videoPlayer; // @synthesize videoPlayer=_videoPlayer;
- (id)sohuLoacakMediaToStaticDictionary:(id)arg1;
- (id)shmediaToStaticDictionary:(id)arg1;
- (id)videoItemToStatisticDictionary:(id)arg1;
- (id)localServiceTSFileStatusInfo;
- (id)currentVideoItem;
- (_Bool)isVideoPlayerFullScreen;
- (void)appsWillTerminal:(id)arg1;
- (void)appsDidEnterForeground:(id)arg1;
- (void)appsDidWillEnterForeground:(id)arg1;
- (void)appsDidEnterBackground:(id)arg1;
- (void)appsWillEnterBackground:(id)arg1;
- (void)playerWillDestroy;
- (void)exitCurrentMoviePlayer;
- (unsigned long long)getPlayerLoadState;
@property(readonly, nonatomic) long long loadState;
@property(readonly, nonatomic) unsigned long long playbackState;
- (unsigned long long)getPlayerPlaybackState;
@property(nonatomic) unsigned long long movieScaleMode; // @synthesize movieScaleMode;
@property(nonatomic) _Bool shouldAutoplay;
@property(readonly, nonatomic) double currentPlaybackRate;
@property(readonly, nonatomic) double currentPlaybackTime;
@property(readonly, nonatomic) double playableDuration;
@property(readonly, nonatomic) double duration;
- (void)setFullscreen:(_Bool)arg1 animated:(_Bool)arg2;
@property(nonatomic, getter=isFullscreen) _Bool fullscreen;
@property(readonly, nonatomic) UIView *view;
@property(readonly, nonatomic, getter=isAirPlaying) _Bool airPlaying;
@property(readonly, nonatomic, getter=isAirPlayActive) _Bool airPlayActive;
- (_Bool)isLivePlay;
- (_Bool)isSupportBackgroundAudio;
- (_Bool)isLocalPlay;
@property(readonly, nonatomic, getter=isPlayerStop) _Bool playerStop;
- (void)updateVideoPlayerFrame:(struct CGRect)arg1;
@property(nonatomic) _Bool tvIsVr; // @synthesize tvIsVr=_tvIsVr;
@property(nonatomic) _Bool muted; // @synthesize muted=_muted;
@property(readonly, nonatomic, getter=isPlayerActiviting) _Bool playerActiviting;
- (id)convertDataKey:(id)arg1;
- (id)cleanupfileCatonInfo:(id)arg1;
- (void)playerPlaybackCaton:(id)arg1 withQosInfo:(id)arg2;
- (void)playerbackOnFirstFrame;
- (void)updateVideoPlayerViewFrame:(id)arg1;
- (void)playerPlaybackDidFinishHandle:(int)arg1;
- (void)playerIsAirPlayVideoActiveDidChange:(id)arg1;
- (void)playerPlaybackDidFinish:(id)arg1;
- (void)playerPlaybackStateDidChange:(id)arg1;
- (void)playerLoadStateDidChange:(id)arg1;
- (void)playbackDurationAvailable:(id)arg1;
- (void)onBufferingStart:(id)arg1;
- (void)playbackPrepared:(id)arg1;
- (void)playbackPreparing:(id)arg1;
- (void)staticRealVV;
- (void)stop;
- (_Bool)isCachePerfectVideoVid:(id)arg1 site:(id)arg2 defType:(long long)arg3 path:(id)arg4;
- (void)playerPlayStartHandle;
- (void)playerResumeHandle;
- (void)playerBufferingProgress:(long long)arg1;
- (void)playerBufferingHandle;
- (void)playerSeekTo:(double)arg1;
- (void)playerPause;
- (void)playerStop;
- (void)playerResume;
- (_Bool)playerPlay;
- (void)playerPlayWithVideoItem:(id)arg1;
- (void)playerPlayWithMedia:(id)arg1;
- (void)playerPlayWithURL:(id)arg1 initialPlaybackTime:(double)arg2;
- (_Bool)preparePlayWithURL:(id)arg1;
- (void)playerURL:(id)arg1 initialPlaybackTime:(double)arg2 resume:(_Bool)arg3;
- (void)registerMovieNotificationObservers;
- (id)init;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

