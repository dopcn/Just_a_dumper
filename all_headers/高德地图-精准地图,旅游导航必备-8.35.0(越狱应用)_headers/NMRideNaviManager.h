//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "NMBaseManager.h"

#import "AMAOSRequestDelegate-Protocol.h"
#import "NMMainMapEventDispatcherProtocol-Protocol.h"
#import "NMMapCoveredProtocol-Protocol.h"
#import "NMRideNaviService-Protocol.h"

@class AMAOSAroundSearchRequest, AMAPRideNaviFinishLayerData, AMap3DLineOverlay, AMap3DNaviCompositeOverlay, AMap3DPointOverlay, AMap3DRideNaviOverlayManager, AMap3DTipsOverlay, AMapAdapterPointOverlayItem, LTMCommonAlertView, MPSQueryPoiData, NMImageToastView, NMRideNaviControl, NMRideNaviFirstEnterLayer, NMToastView, NSArray, NSDate, NSMutableArray, NSMutableDictionary, NSString, NSTimer, UIImage;

@interface NMRideNaviManager : NMBaseManager <AMAOSRequestDelegate, NMMainMapEventDispatcherProtocol, NMRideNaviService, NMMapCoveredProtocol>
{
    long long _bottomBarStatus;
    long long _tipsStatus;
    NMRideNaviControl *_rideNaviControl;
    AMap3DRideNaviOverlayManager *_naviOverlayManager;
    AMap3DPointOverlay *_startOverlay;
    AMap3DPointOverlay *_destOverlay;
    AMap3DPointOverlay *_finishLocationOverlay;
    AMap3DPointOverlay *_rideFacilityOverlay;
    AMap3DLineOverlay *_eaglePassedlineOverlay;
    AMap3DLineOverlay *_eagleNoPassedlineOverlay;
    AMap3DNaviCompositeOverlay *_naviCompOverlay;
    struct ANPoint _carFromLoc;
    int _carDirectionAngle;
    AMap3DLineOverlay *_offRoutlineOverlay;
    MPSQueryPoiData *_endPoi;
    MPSQueryPoiData *_startPoi;
    LTMCommonAlertView *_exitAlertView;
    _Bool _isOutOfNavi;
    _Bool _isRideNaviStarting;
    NSTimer *_carSmoothTimer;
    struct ANPoint _currentPoint;
    struct ANPoint _targetPoint;
    struct ANPoint _moveStep;
    double _currentAngle;
    double _targetAngle;
    double _angleStep;
    long long _moveStepCount;
    _Bool _isFristGps;
    _Bool _isTracking;
    _Bool _isMapZooming;
    _Bool _isForeGround;
    int _lastSegmentIndex;
    _Bool _isShowTips;
    _Bool _isPush;
    _Bool _isWholeRout;
    _Bool _isVoiceHeadSet;
    _Bool _isMuted;
    _Bool _isShowFirst;
    _Bool _isMatchRoute;
    long long _GPSLevel;
    _Bool _isGpsStatusChanged;
    _Bool _showVoiceSmallOnce;
    _Bool _isFirstForeground;
    _Bool _isOwnZoom;
    NSMutableDictionary *_reportParams;
    _Bool _isInNoRouteView;
    _Bool _isInFeedBackNavi;
    NSMutableArray *_stackArray;
    struct ANPoint _mapCenter;
    double _mapLevel;
    double _mapAngle;
    long long _naviModle;
    long long _previousEagleEyeMapState;
    struct tag_RidePushData _naviData;
    double _curMapZoomLevel;
    NSTimer *_voiceTimer;
    _Bool _shouldDrawOffRouteLine;
    _Bool _offRouteJustNow;
    long long _mapFPSOutSide;
    long long _nPrevMapMinFps;
    _Bool _showFinishLocationOverlay;
    long long _eagleEyeViewEngineID;
    AMAOSAroundSearchRequest *_alongWayPOIRequest;
    double _lastMapLever;
    struct ANPoint _lastLocationSelectPoint;
    NMImageToastView *_dirWarningToast;
    _Bool _isFirstShowStartAnimation;
    NMToastView *_progressView;
    NMRideNaviFirstEnterLayer *_firstEnterHelpLayer;
    NSArray *_arPassedPoints;
    LTMCommonAlertView *_shareBikeDistanceTooLongPopUpView;
    _Bool _bNotificationRegisted;
    long long _rideNaviType;
    _Bool _shouldShowCommentTip;
    _Bool _isUsingBike;
    _Bool _haveElectricBike;
    NSMutableDictionary *_naviInfoDic;
    long long _callType;
    NSString *_pageFrom;
    AMap3DTipsOverlay *_nextRoadOverlay;
    AMap3DPointOverlay *_rideNaviTipOverlay;
    AMap3DPointOverlay *_myLocationEagleOverlay;
    AMap3DPointOverlay *_eagleOverlay;
    AMapAdapterPointOverlayItem *_eagleLocationOverlayItem;
    AMapAdapterPointOverlayItem *_eagleStartOverlayItem;
    AMapAdapterPointOverlayItem *_eagleEndOverlayItem;
    long long _roadTipsOverlayIndex;
    NSString *_naviRankRequestUUID;
    NSString *_naviRGeoStartRequestUUID;
    NSString *_naviRGeoEndRequestUUID;
    NSDate *_lastPlayLowGpsDate;
    NSArray *_pois;
    UIImage *_shortcutImage;
}

+ (void)staticapplicationDidBecomeActive:(id)arg1;
+ (void)staticapplicationDidEnterBackground:(id)arg1;
+ (void)registerApLayer;
@property(retain, nonatomic) UIImage *shortcutImage; // @synthesize shortcutImage=_shortcutImage;
@property(retain, nonatomic) NSArray *pois; // @synthesize pois=_pois;
@property(retain, nonatomic) NSDate *lastPlayLowGpsDate; // @synthesize lastPlayLowGpsDate=_lastPlayLowGpsDate;
@property(retain, nonatomic) NSString *naviRGeoEndRequestUUID; // @synthesize naviRGeoEndRequestUUID=_naviRGeoEndRequestUUID;
@property(retain, nonatomic) NSString *naviRGeoStartRequestUUID; // @synthesize naviRGeoStartRequestUUID=_naviRGeoStartRequestUUID;
@property(retain, nonatomic) NSString *naviRankRequestUUID; // @synthesize naviRankRequestUUID=_naviRankRequestUUID;
@property(nonatomic) long long roadTipsOverlayIndex; // @synthesize roadTipsOverlayIndex=_roadTipsOverlayIndex;
@property(retain, nonatomic) AMapAdapterPointOverlayItem *eagleEndOverlayItem; // @synthesize eagleEndOverlayItem=_eagleEndOverlayItem;
@property(retain, nonatomic) AMapAdapterPointOverlayItem *eagleStartOverlayItem; // @synthesize eagleStartOverlayItem=_eagleStartOverlayItem;
@property(retain, nonatomic) AMapAdapterPointOverlayItem *eagleLocationOverlayItem; // @synthesize eagleLocationOverlayItem=_eagleLocationOverlayItem;
@property(retain, nonatomic) AMap3DPointOverlay *eagleOverlay; // @synthesize eagleOverlay=_eagleOverlay;
@property(retain, nonatomic) AMap3DPointOverlay *myLocationEagleOverlay; // @synthesize myLocationEagleOverlay=_myLocationEagleOverlay;
@property(retain, nonatomic) AMap3DPointOverlay *rideNaviTipOverlay; // @synthesize rideNaviTipOverlay=_rideNaviTipOverlay;
@property(retain, nonatomic) AMap3DTipsOverlay *nextRoadOverlay; // @synthesize nextRoadOverlay=_nextRoadOverlay;
@property(copy, nonatomic) NSString *pageFrom; // @synthesize pageFrom=_pageFrom;
@property(nonatomic) _Bool haveElectricBike; // @synthesize haveElectricBike=_haveElectricBike;
@property(nonatomic) _Bool isUsingBike; // @synthesize isUsingBike=_isUsingBike;
@property(nonatomic) _Bool shouldShowCommentTip; // @synthesize shouldShowCommentTip=_shouldShowCommentTip;
@property(readonly, nonatomic) long long callType; // @synthesize callType=_callType;
@property(retain, nonatomic) NSMutableDictionary *naviInfoDic; // @synthesize naviInfoDic=_naviInfoDic;
@property(readonly, nonatomic) long long bottomBarStatus; // @synthesize bottomBarStatus=_bottomBarStatus;
@property(readonly, nonatomic) long long GPSLevel; // @synthesize GPSLevel=_GPSLevel;
@property(readonly, nonatomic) long long tipsStatus; // @synthesize tipsStatus=_tipsStatus;
@property(readonly, nonatomic) MPSQueryPoiData *endPoi; // @synthesize endPoi=_endPoi;
@property(readonly, nonatomic) MPSQueryPoiData *startPoi; // @synthesize startPoi=_startPoi;
@property(readonly, nonatomic) NMRideNaviControl *rideNaviControl; // @synthesize rideNaviControl=_rideNaviControl;
@property(readonly, nonatomic) _Bool isPush; // @synthesize isPush=_isPush;
- (void).cxx_destruct;
- (void)zoomButtonDidTouched:(_Bool)arg1;
- (id)rtbtVersion;
- (void)eagleEyeNorthViewVisible:(_Bool)arg1;
- (void)updateAllLayersStatus;
- (void)dismissProgressView;
- (void)dismissAllPopView;
- (id)pushViewControlClass:(Class)arg1 data:(id)arg2 animated:(_Bool)arg3;
- (id)getEndPoidName;
- (id)getStartPoidName;
- (id)feedBackGetExternData;
- (void)customHandleFeedbackCallback;
- (void)suspendNaviToBackground;
- (void)resumeNaviFromBackground;
- (void)sureExitRideNavi;
- (void)showExitwWarnAlter;
- (void)removeAlertView;
- (void)showCurrentSegment:(long long)arg1;
- (void)mapShowRoute;
@property(readonly, nonatomic) AMAPRideNaviFinishLayerData *rideNaviFinishLayerData;
- (_Bool)isSunRise;
- (void)updateRideNaviMapMode:(long long)arg1;
- (_Bool)isFailReRequest;
- (void)showRideNaviFinishStatus:(id)arg1;
- (void)saveRideTrackData;
- (_Bool)isMuted;
- (_Bool)hasHeadset;
- (void)checkCurrentVoiceStatus;
- (void)dispatchVoiceOperation;
- (void)pushLocalNotificationContentText:(id)arg1;
- (void)checkBackScheme;
- (void)exitRideNaviAndShowResult;
- (void)exitRideNavi;
- (void)quitAllProcessRideNavi;
- (void)cleanScanQRCodeModule;
- (void)quitALLProcessShareBike;
- (void)showRealTimeNaviInfo;
- (void)showHeaderFirstNaviInfo;
- (void)dismissTipsPopView;
- (void)isShowTipsPopView;
- (struct ANPoint)getNaviDestination;
- (id)getSegCoorArray;
- (void)resumeTipsBarNaviStatus;
- (void)aosRequestFinished:(id)arg1 response:(id)arg2;
- (void)cancelAllRequest;
- (void)cancelNaviRankRequest;
- (void)cancelAlongWayPOIRequest;
- (void)cancelRGeoEndRequest;
- (void)cancelRGeoStartRequest;
- (void)startAdressRgeoRequest;
- (void)alongWayPOISearchWithCode:(id)arg1 geoLine:(id)arg2;
- (void)statusBarDidChange:(id)arg1;
- (_Bool)isInvalidAddress:(id)arg1;
- (void)updateTipsBarStatus:(long long)arg1;
- (void)playGpsLowVoicePrompt;
- (void)updateGpsLevel:(long long)arg1;
- (void)updateCurrentNaviInfo:(id)arg1;
- (void)onShareBikeUsingFinished:(id)arg1;
- (void)dismissLongDistanceAlert;
- (void)showLongDistanceAlert;
- (void)drawPassedPoints:(id)arg1;
- (void)naviInfoUpdated:(id)arg1;
- (void)firstShowStartAnimation;
- (void)routRequestFinished:(id)arg1;
- (void)matchRouteStatus;
- (void)updatePassedPathLayer;
- (void)hideRideNaviTipOverlay;
- (void)showRideNaviTipOverlay;
- (void)showDemoArrowsWithIndex:(int)arg1;
- (void)drawNaviArrow:(_Bool)arg1;
- (void)setMapMoveEnable;
- (void)mapViewZoomOrMoveFinishWithMapView:(id)arg1 engineID:(long long)arg2;
- (void)mapZoomChanged:(_Bool)arg1;
- (void)mapViewAnyTouchInvoked:(id)arg1 engineID:(long long)arg2;
- (_Bool)touchOnMapBlankWithEngineID:(long long)arg1;
- (void)eagleEyeBury;
- (void)setPOIPoints:(id)arg1;
- (int)getDistanceby:(struct ANPoint)arg1 nextPoint:(struct ANPoint)arg2;
- (struct ANPoint)getPoinByDistanceSplit:(struct ANPoint)arg1 Point:(struct ANPoint)arg2 AllDis:(int)arg3 ReDis:(int)arg4;
- (struct ANPoint)getDrawRoadNamePoint;
- (int)getRequiredLength:(int)arg1;
- (_Bool)canUpDateNextRoadName;
- (void)updateNextRoadOverlayer;
- (void)drawNextRoadInLayer;
- (void)controlNaviMapNextRoadLayer;
- (_Bool)canShowNaviMapNextRoadLayer;
- (void)removeNextRoadInLayer;
- (void)clearAllOverLayer:(_Bool)arg1;
- (void)clearAllOverLayer;
- (double)getAngleFromLoc:(struct ANPoint)arg1 toLoc:(struct ANPoint)arg2;
- (void)isDrawOffeRoutLineToOverlay;
- (void)drawRouteLineInLayer;
- (id)getPathAlongWayPOISearchGeoLine:(id)arg1;
- (void)drawRideDirectionLayerForStartAngle:(double)arg1 offSetAngle:(double)arg2;
- (void)createNaviCompOverlay:(_Bool)arg1;
- (void)drawCarInLayer;
- (void)drawAllOverLayer;
- (id)apLayerData:(long long)arg1;
- (void)removeEagleLayers;
- (void)removeEagleLineLayers;
- (void)updateMyLocationOnEagle;
- (void)drawEaglePoint;
- (void)resetSuitableEagleEyeView;
- (void)eagleEyeViewShow:(_Bool)arg1;
- (void)eagleEyeViewShowByHeadViewHidden;
- (void)removeEagleEyeView;
- (void)initEagleEyeView;
- (struct ANPoint)calcuPathPoint:(struct ANPoint)arg1 otherPoint:(struct ANPoint)arg2;
- (double)calcuPathProjectionHeight:(struct ANPoint)arg1 otherPoint:(struct ANPoint)arg2;
- (struct ANPoint)calcuPathProjectionPoints;
- (void)initNaviIconTexture;
- (void)rideNavi_PushNaviStart;
- (_Bool)startRideNaviWithRouteData:(char *)arg1 dataLength:(int)arg2 routeID:(int)arg3;
- (void)setStartPoi:(id)arg1 andEndPoi:(id)arg2;
- (void)serializeFromGlobal:(id)arg1;
- (_Bool)startRideNaviWithStart:(id)arg1 andEnd:(id)arg2 callType:(long long)arg3 global:(id)arg4;
- (void)stopNaviVoiceBehavior;
- (void)doNaviVoiceBehaviorWithPageID:(id)arg1 buttonID:(id)arg2 needCheckSystemVoice:(_Bool)arg3;
- (_Bool)startRideNaviWithStart:(id)arg1 andEnd:(id)arg2 callType:(long long)arg3 global:(id)arg4 options:(id)arg5;
- (void)setRidePageFrom:(id)arg1;
- (void)setDestinationWithStartANPoint:(struct ANPoint)arg1 andEndPoint:(struct ANPoint)arg2 global:(id)arg3;
- (void)setDestinationWithANPoint:(struct ANPoint)arg1 method:(int)arg2 flag:(int)arg3 global:(id)arg4;
- (void)reRequestRout;
- (void)lockScreenNaviTips:(unsigned short *)arg1 length:(int)arg2 turnIcon:(int)arg3 SegRemainLeng:(int)arg4;
- (void)saveCurrentLocationForReport;
- (void)offRouteStateChange:(id)arg1;
- (void)offRoute;
- (void)carProjectionChange:(struct tag_RCarLocation)arg1;
- (void)updateNaviInfo:(struct tag_RDGNaviInfo)arg1;
- (void)carLocationChange:(struct tag_RCarLocation)arg1;
- (void)showWrongDirectionAlert;
- (void)PlayVoiceType:(int)arg1;
- (void)phoneVibrate;
- (void)arriveWayPostAction;
- (void)EndEmulatorNavi;
- (void)arriveWay;
- (void)forceGoShareBikeTrackViewControl:(id)arg1;
- (_Bool)forbidenShowMapviewScaleLine;
- (_Bool)isHuangXiaoMingGengZhiDialect;
- (_Bool)isHuangXiaoMingNuanXinDialect;
- (_Bool)isGaoxiaoSongDialect;
- (_Bool)isLuoYongHaoDialect;
- (_Bool)isWangJunKaiDialect;
- (_Bool)isWangYuanDialect;
- (_Bool)isYiYangQianXiDialect;
- (_Bool)isZxxDialect;
- (void)ttsPlayText:(unsigned short *)arg1 textLength:(int)arg2 soundType:(int)arg3;
- (void)requestHTTPWithModuleID:(int)arg1 connectID:(int)arg2 type:(int)arg3 pHead:(char *)arg4 pData:(char *)arg5 dataLength:(int)arg6;
- (void)routRequestPathState:(int)arg1;
- (void)canceRideNaviRequst;
- (_Bool)isRideNaviStarting;
- (_Bool)isRideNaviRunning;
- (void)playVoiceText:(id)arg1;
- (void)screenLit:(_Bool)arg1;
- (void)goBack;
- (void)notifyRouteTooLong:(id)arg1;
- (void)setRideNaviPopType:(long long)arg1;
- (id)saveShortcutImage:(id)arg1;
- (void)mapViewCarVisible:(_Bool)arg1;
- (_Bool)checkNetwork;
- (void)finishOtherProblemReport;
- (void)reportDoneClickAction:(id)arg1;
- (void)showCommentTip:(_Bool)arg1;
- (void)gotPoiFrromLocationSelect:(id)arg1 whithShortcutImage:(id)arg2;
- (void)locationSelectPointWithContent:(id)arg1;
- (void)noRoutPassSubmit;
- (void)noRoutPassCacle;
- (void)showTipsBarBtn;
- (void)hiddenNoRoutPassSubmitView;
- (void)showNoRoutPassSubmitView;
- (void)clickNaviFeedBackButton;
- (void)closeSetup;
- (void)clickNaviLayerButton;
- (id)getLocationSelectIconName;
- (void)setCurrentSegmentZoom:(int)arg1;
- (void)doSmoothMove;
- (void)updateTargetAngle;
- (void)updateTargetPoint;
- (void)updateTargetInfo;
- (void)stopAllRuningTimer;
- (void)startSmoothMove;
- (void)setBottomBarStatusNotFinish:(long long)arg1;
- (void)setBottomBarStatus:(long long)arg1;
- (void)tappedOnCompassWithCameraAngle:(double)arg1;
- (void)tappedOnCompassWithMapView:(id)arg1;
- (void)resumeNaviStatus;
- (void)autoResumeNaviStatus;
- (void)stopUpateAndLaterResume;
- (void)startMapTracking;
- (void)stopUpateMapTracking;
- (_Bool)shouldShowTraffic;
- (_Bool)forbiddenShowGPSOverlay;
- (_Bool)forbiddenLayerPointHighlight;
- (_Bool)forbiddenTapIndoorLayer;
- (_Bool)needStopNMLayers;
- (_Bool)forbiddenShowIndoorLayer;
- (_Bool)forbiddenShowCompass;
- (_Bool)forbiddenGPSClicked;
- (_Bool)forbiddenShowTrafficBtn;
- (_Bool)forbiddenShowMainLayer;
- (_Bool)forbiddenShowMapFeedBackBtn;
- (_Bool)forbiddenFavoritePointClicked;
- (void)updateMapAngleAndMovedZoom;
- (void)updateCarAngleAndPointOnMap;
- (void)updateMapModeAndCameraAngle;
- (void)updateMapSettings;
- (void)exitMapSetting:(_Bool)arg1;
- (void)startMapSetting:(_Bool)arg1;
- (void)setMapViewOffset:(_Bool)arg1;
- (void)resumeNeedlessMapLayer;
- (void)hidenNeedlessMapLayer;
- (void)showFavorLayer;
- (void)hideFavorLayer;
- (void)checkBackAppRefreshStatus;
- (void)showBarContinueStatus;
- (void)removeGpsLevelMonitor;
- (void)addGpsLevelMonitor;
- (void)changeToPreviewMode;
- (void)changeToNavingMode;
- (void)enterRideNavi;
- (void)checkAudioOutput;
- (int)suitableAnimation;
- (long long)mapviewExtendState;
- (_Bool)isMapCoveredByViews:(long long)arg1;
- (void)clearManagerWithData:(id)arg1;
- (void)clearRelatedData;
- (void)clearRelatedViews;
- (void)addEagleIconTexture;
- (void)resumeRelatedViews;
- (void)suspendRelatedViews;
- (void)initRelatedViews;
- (void)initRelatedData;
- (void)initManagerWithOtherInfo:(id)arg1;
- (void)rigisterNotification:(_Bool)arg1;
- (void)dealloc;
- (void)cancelDelayActions;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

