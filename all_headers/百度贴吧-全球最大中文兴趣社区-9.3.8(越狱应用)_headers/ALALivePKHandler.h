//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "ALALivePKViewDelegate-Protocol.h"

@class ALALivePKCancelMatchModel, ALALivePKInfoItem, ALALivePKInfoModel, ALALivePKMatchModel, ALALivePKSurrenderModel, ALALivePKView, ALALiveShowItem, NSString, NSTimer;
@protocol ALALivePKHandlerDelegate;

@interface ALALivePKHandler : NSObject <ALALivePKViewDelegate>
{
    _Bool _isHost;
    _Bool _getOnlyCorePKInfo;
    _Bool _cancelMatchByUser;
    _Bool _enterPKJustNow;
    _Bool _stopRepeatPKMatching;
    _Bool _hasQuiteLiveRoom;
    _Bool _livePKOpen;
    ALALivePKView *_pkView;
    id <ALALivePKHandlerDelegate> _delegate;
    ALALiveShowItem *_liveShowItem;
    ALALivePKInfoItem *_pkInfoItem;
    NSString *_pkId;
    long long _pkState;
    ALALivePKInfoModel *_pkInfoModel;
    ALALivePKMatchModel *_pkMatchModel;
    ALALivePKCancelMatchModel *_pkCancelMatchModel;
    ALALivePKSurrenderModel *_pkSurrenderModel;
    NSTimer *_pkInfoTimer;
    double _pkInfoTimerInterval;
    NSString *_livePKImageURL;
    NSString *_livePKActivityURL;
    NSString *_livePKHistoryURL;
    double _livePKAPIInterval;
    double _livePKMatchTimeout;
    double _livePKMaxDuration;
    double _refreshPKViewTimestamp;
    double _startRequestPKMatchTimestamp;
    double _reuestPKMatchTimestamp;
    long long _pkMatchReason;
    unsigned long long _pkCancelMatchReason;
    long long _pkSurrenderReason;
}

@property(nonatomic) long long pkSurrenderReason; // @synthesize pkSurrenderReason=_pkSurrenderReason;
@property(nonatomic) unsigned long long pkCancelMatchReason; // @synthesize pkCancelMatchReason=_pkCancelMatchReason;
@property(nonatomic) long long pkMatchReason; // @synthesize pkMatchReason=_pkMatchReason;
@property(nonatomic) double reuestPKMatchTimestamp; // @synthesize reuestPKMatchTimestamp=_reuestPKMatchTimestamp;
@property(nonatomic) double startRequestPKMatchTimestamp; // @synthesize startRequestPKMatchTimestamp=_startRequestPKMatchTimestamp;
@property(nonatomic) double refreshPKViewTimestamp; // @synthesize refreshPKViewTimestamp=_refreshPKViewTimestamp;
@property(nonatomic) double livePKMaxDuration; // @synthesize livePKMaxDuration=_livePKMaxDuration;
@property(nonatomic) double livePKMatchTimeout; // @synthesize livePKMatchTimeout=_livePKMatchTimeout;
@property(nonatomic) double livePKAPIInterval; // @synthesize livePKAPIInterval=_livePKAPIInterval;
@property(copy, nonatomic) NSString *livePKHistoryURL; // @synthesize livePKHistoryURL=_livePKHistoryURL;
@property(copy, nonatomic) NSString *livePKActivityURL; // @synthesize livePKActivityURL=_livePKActivityURL;
@property(copy, nonatomic) NSString *livePKImageURL; // @synthesize livePKImageURL=_livePKImageURL;
@property(nonatomic) _Bool livePKOpen; // @synthesize livePKOpen=_livePKOpen;
@property(nonatomic) _Bool hasQuiteLiveRoom; // @synthesize hasQuiteLiveRoom=_hasQuiteLiveRoom;
@property(nonatomic) _Bool stopRepeatPKMatching; // @synthesize stopRepeatPKMatching=_stopRepeatPKMatching;
@property(nonatomic) _Bool enterPKJustNow; // @synthesize enterPKJustNow=_enterPKJustNow;
@property(nonatomic) _Bool cancelMatchByUser; // @synthesize cancelMatchByUser=_cancelMatchByUser;
@property(nonatomic) _Bool getOnlyCorePKInfo; // @synthesize getOnlyCorePKInfo=_getOnlyCorePKInfo;
@property(nonatomic) double pkInfoTimerInterval; // @synthesize pkInfoTimerInterval=_pkInfoTimerInterval;
@property(retain, nonatomic) NSTimer *pkInfoTimer; // @synthesize pkInfoTimer=_pkInfoTimer;
@property(retain, nonatomic) ALALivePKSurrenderModel *pkSurrenderModel; // @synthesize pkSurrenderModel=_pkSurrenderModel;
@property(retain, nonatomic) ALALivePKCancelMatchModel *pkCancelMatchModel; // @synthesize pkCancelMatchModel=_pkCancelMatchModel;
@property(retain, nonatomic) ALALivePKMatchModel *pkMatchModel; // @synthesize pkMatchModel=_pkMatchModel;
@property(retain, nonatomic) ALALivePKInfoModel *pkInfoModel; // @synthesize pkInfoModel=_pkInfoModel;
@property(nonatomic) long long pkState; // @synthesize pkState=_pkState;
@property(copy, nonatomic) NSString *pkId; // @synthesize pkId=_pkId;
@property(retain, nonatomic) ALALivePKInfoItem *pkInfoItem; // @synthesize pkInfoItem=_pkInfoItem;
@property(retain, nonatomic) ALALiveShowItem *liveShowItem; // @synthesize liveShowItem=_liveShowItem;
@property(nonatomic) _Bool isHost; // @synthesize isHost=_isHost;
@property(nonatomic) __weak id <ALALivePKHandlerDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) ALALivePKView *pkView; // @synthesize pkView=_pkView;
- (void).cxx_destruct;
- (_Bool)networkReachable;
- (void)fillPKIntoItem:(id)arg1 withPKInfoItem:(id)arg2;
- (id)convertToPkInfoItem:(id)arg1;
- (_Bool)isPKing:(id)arg1;
- (void)showPKIMMessage:(id)arg1;
- (void)showPKEndIMMessage:(id)arg1;
- (void)showPKStartIMMessage:(id)arg1;
- (void)gotoRivalLiveRoom:(id)arg1;
- (void)gotoPKHistoryPageWithUserId:(id)arg1;
- (void)livePKViewRivalViewClicked:(id)arg1;
- (void)livePKViewAnchorViewClicked:(id)arg1;
- (void)livePKViewGoToActivity:(id)arg1;
- (void)livePKViewGiveUpPK;
- (void)livePKViewCancelPK;
- (void)livePKViewGotoPK;
- (void)stopTimer;
- (void)startGetPKInfoTimerWithInterval:(long long)arg1;
- (void)startGetPKInfoTimer;
- (_Bool)isPKing;
- (void)onQuitLiveRoom;
- (void)onSurrenderPKFailByReason:(long long)arg1;
- (void)onSurrenderPKSuccessByReason:(long long)arg1;
- (void)surrenderPKByReason:(long long)arg1;
- (void)onCancelPKMatchFailByReason:(long long)arg1;
- (void)onCancelPKMatchSuccessByReason:(long long)arg1;
- (void)cancelPKMatchByReason:(long long)arg1;
- (void)onRequestPKMatchFailByReason:(long long)arg1;
- (void)onRequestPKMatchSuccessByReason:(long long)arg1;
- (void)requestPKMatchByReason:(long long)arg1;
- (void)startPKMatchByReason:(long long)arg1;
- (void)onGetPKInfoSuccessWithOnlyCoreData:(_Bool)arg1;
- (void)getPKInfoWithOnlyCoreData:(_Bool)arg1;
- (void)getPKInfo;
- (void)updateLivePKInfo:(id)arg1;
- (void)updateLiveShowItemForCustom:(id)arg1;
- (void)updateLiveShowItemForHost:(id)arg1;
- (void)updateLiveShowItem:(id)arg1;
- (void)refreshPKViewWithState:(long long)arg1 data:(id)arg2;
- (_Bool)isPKViewShowing;
- (void)hidePKView;
- (void)showPKView;
- (id)createPKView;
- (void)reset;
- (id)initWithHost:(_Bool)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

