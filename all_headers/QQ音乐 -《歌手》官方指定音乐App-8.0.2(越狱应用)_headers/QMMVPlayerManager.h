//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

#import "QMVMediaPlayerDelegate-Protocol.h"
#import "TADLoginUserInfoDelegate-Protocol.h"
#import "TVKMediaPlaybackDelegate-Protocol.h"
#import "TVKMediaUrlRequestDelegate-Protocol.h"

@class MVInfo, NSMutableArray, NSString, QMVMediaPlayer, TVKMediaPlayer, TVKMediaUrlRequest;

@interface QMMVPlayerManager : NSObject <TADLoginUserInfoDelegate, TVKMediaUrlRequestDelegate, QMVMediaPlayerDelegate, TVKMediaPlaybackDelegate>
{
    _Bool _clarityOK;
    _Bool _isFullScreenMode;
    _Bool _isQMVideoPlayer;
    MVInfo *_curMVInfo;
    QMVMediaPlayer *_mvPlayer;
    TVKMediaPlayer *_txMVPlayer;
    NSMutableArray *_clarityList;
    NSMutableArray *_claritySizeList;
    NSMutableArray *_clarityListForDownload;
    NSMutableArray *_claritySizeListForDownload;
    TVKMediaUrlRequest *_mediaAddress;
}

+ (id)sharedManager;
@property(nonatomic) _Bool isQMVideoPlayer; // @synthesize isQMVideoPlayer=_isQMVideoPlayer;
@property(retain, nonatomic) TVKMediaUrlRequest *mediaAddress; // @synthesize mediaAddress=_mediaAddress;
@property(nonatomic) _Bool isFullScreenMode; // @synthesize isFullScreenMode=_isFullScreenMode;
@property(nonatomic) _Bool clarityOK; // @synthesize clarityOK=_clarityOK;
@property(retain, nonatomic) NSMutableArray *claritySizeListForDownload; // @synthesize claritySizeListForDownload=_claritySizeListForDownload;
@property(retain, nonatomic) NSMutableArray *clarityListForDownload; // @synthesize clarityListForDownload=_clarityListForDownload;
@property(retain, nonatomic) NSMutableArray *claritySizeList; // @synthesize claritySizeList=_claritySizeList;
@property(retain, nonatomic) NSMutableArray *clarityList; // @synthesize clarityList=_clarityList;
@property(retain, nonatomic) TVKMediaPlayer *txMVPlayer; // @synthesize txMVPlayer=_txMVPlayer;
@property(retain, nonatomic) QMVMediaPlayer *mvPlayer; // @synthesize mvPlayer=_mvPlayer;
@property(retain, nonatomic) MVInfo *curMVInfo; // @synthesize curMVInfo=_curMVInfo;
- (void).cxx_destruct;
- (void)userLoginStatusWithCallback:(CDUnknownBlockType)arg1;
- (void)showLoginPanelWithStatusCallback:(CDUnknownBlockType)arg1;
- (void)qmMediaPlayer:(id)arg1 progressUpdated:(double)arg2 playableDuration:(double)arg3 duration:(double)arg4;
- (id)addRequestFileNamePrefixString:(id)arg1;
- (_Bool)errorOccurWithCode:(long long)arg1 atPositon:(double)arg2;
- (void)qmMediaPlayerOnLandingViewStateChange:(id)arg1 status:(_Bool)arg2;
- (void)qmMediaPlayerQQMusicSkipAD:(id)arg1;
- (void)qmMediaPlayerDidClickSkipAD:(id)arg1;
- (id)getADMoreInfo:(id)arg1;
- (id)getUrlSpareHostWithVid:(id)arg1;
- (id)getUrlExpireDateWithVid:(id)arg1;
- (id)qmMediaPlayerRetryUrl:(id)arg1 withVideID:(id)arg2 withFormat:(int)arg3 withClarity:(int)arg4;
- (id)qmMediaPlayer:(id)arg1 willPlayWithUrl:(id)arg2 isAD:(_Bool)arg3;
- (void)qmMediaPlayer:(id)arg1 screenChanged:(_Bool)arg2;
- (void)qmMediaPlayer:(id)arg1 stateChanged:(int)arg2 withError:(id)arg3;
- (_Bool)isNetWorkConnected;
- (void)adReturnBtn:(id)arg1;
- (id)getUsePresentViewController;
- (void)mediaPlayer:(id)arg1 progressUpdated:(double)arg2 playableDuration:(double)arg3 duration:(double)arg4;
- (void)mediaPlayer:(id)arg1 eventOccur:(int)arg2 userInfo:(id)arg3;
- (void)mediaPlayer:(id)arg1 screenChanged:(_Bool)arg2;
- (void)mediaPlayer:(id)arg1 stateChanged:(int)arg2 withError:(id)arg3;
- (id)mediaPlayer:(id)arg1 willSetPlayerUrl:(id)arg2 duration:(double)arg3;
- (id)mediaPlayer:(id)arg1 willPlayUrl:(id)arg2;
- (void)didMediaUrlRequestFinished:(id)arg1 videoFormatList:(id)arg2 fileSizeList:(id)arg3;
- (id)getPlayEndImage;
- (_Bool)isUseQMVideoPlayer;
- (void)stopCaptureImageM3U8;
- (void)resumeCaptureImageM3U8;
- (void)pauseCaptureImageM3U8;
- (void)startCaptureImageM3U8:(int)arg1;
- (_Bool)hasStartCaptureImage;
- (id)getVideoScreenShotAtTime:(CDStruct_1b6d18a9)arg1;
- (void)addSubViewToControlView:(id)arg1;
- (void)resetAdvertisementEnable:(_Bool)arg1;
- (id)playerPresentViewController;
- (id)setMakeFreeUrl:(id)arg1 isAD:(_Bool)arg2;
- (void)skipAdertisement;
- (void)setMovieScalingMode:(_Bool)arg1;
- (int)getPlayerState;
- (void)dismissMediaPlayer;
- (void)setSwitchScreenLock:(_Bool)arg1;
- (void)setScreenLock:(_Bool)arg1;
- (void)stop;
- (void)setSeekPlayTime:(double)arg1;
- (void)forcePause;
- (void)pauseWithAD;
- (void)pause;
- (void)play;
- (double)getDuration;
- (double)getPlayableDuration;
- (double)getPlayAdTotalTime;
- (double)getCurrentPlaybackTime;
- (void)forceChangeCurrentMediaFormat:(int)arg1;
- (void)playOtherMediaFormat:(int)arg1;
- (void)setDefaultClarity;
- (void)switchFullScreen:(_Bool)arg1 withAnimation:(_Bool)arg2;
- (void)switchFullScreen:(_Bool)arg1;
- (id)getClaritySizeList:(_Bool)arg1;
- (id)getClarityList:(_Bool)arg1;
- (void)getMVFortmatList:(id)arg1;
- (int)getCurrentClarity;
- (void)setCurrentMVInfo:(id)arg1;
- (void)shouldShowRecommendPannel:(_Bool)arg1;
- (void)openMediaPlayerWithUrls:(id)arg1 durations:(id)arg2 clarity:(id)arg3 live:(_Bool)arg4 videoID:(id)arg5 mediaType:(int)arg6 startPosition:(double)arg7;
- (void)openMediaPlayerWithVideoID:(id)arg1 mediaType:(int)arg2 startPosition:(double)arg3;
- (_Bool)isPIPSuspended;
- (_Bool)isPIPPossible;
- (_Bool)isPIPSupported;
- (_Bool)isPIPActive;
- (id)getCurrentPIPController;
- (void)stopPIPMode;
- (void)startPIPMode;
- (void)openMediaPlayerWithChannelID:(id)arg1;
- (void)presentMediaPlayerWithViewController:(id)arg1;
- (void)setVideoInfoTitle:(id)arg1 singerID:(id)arg2;
- (void)addCustomMainPlayerUI:(id)arg1;
- (void)addCustomSmallPlayerUI:(id)arg1;
- (void)setPlayerPresentVC:(id)arg1;
- (void)attachMediaPlayerVC:(id)arg1 smallPlayerFrame:(struct CGRect)arg2;
- (void)dealloc;
- (_Bool)playerHasInit;
- (void)setupTVKPlayerCachePath;
- (void)initTXVideoPlayer;
- (void)initVideoPlayer;
- (void)setGuid:(id)arg1;
- (void)setLoginQQ:(id)arg1;
- (void)setUserIsVip:(_Bool)arg1;
- (void)setUseQMVideoPlayer:(_Bool)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

