//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "PWGestureAndSliderFeatureFactory.h"

#import "MPCustomSliderDelegate-Protocol.h"
#import "PWBeautyGuideViewEventDelegate-Protocol.h"

@class MPCustomSlider, NSMutableArray, NSString, PWMagnifierView, PWScrollViewForMaterial, UIButton, UIImage, UIImageView, UIScrollView, UIView, UnderControlImageView;

@interface PWMakeUpFactory : PWGestureAndSliderFeatureFactory <MPCustomSliderDelegate, PWBeautyGuideViewEventDelegate>
{
    UIScrollView *_tabBar;
    UIButton *_eyeLinerTypeBtn;
    UIButton *_eyeShadowTypeBtn;
    UIButton *_blusherTypeBtn;
    UIButton *_glassTypeBtn;
    UIButton *_lipGlossTypeBtn;
    UIButton *_eyeLashTypeBtn;
    UIButton *_foundationTypeBtn;
    MPCustomSlider *_sliderAlpha;
    UIImageView *_scrollBgImgView;
    _Bool _isfaceDetectionSuccess;
    PWMagnifierView *_magnifierView;
    _Bool isFromeGesture;
    _Bool clickedEyeLinerBtnFrist;
    PWScrollViewForMaterial *_eyeLinerScrollView;
    struct CGRect _leftEyelinerRect;
    struct CGRect _rightEyelinerRect;
    struct CGRect _faceRect_eyeLiner;
    long long _eyeLinerCount;
    _Bool clickedEyeShadowBtnFrist;
    PWScrollViewForMaterial *_eyeShadowScrollView;
    struct CGRect _leftEyeShadowRect;
    struct CGRect _rightEyeShadowRect;
    struct CGRect _faceRect_eyeShadow;
    long long _eyeShadowCount;
    _Bool clickedEyeLashBtnFrist;
    PWScrollViewForMaterial *_eyeLashScrollView;
    struct CGRect _leftEyeLashRect;
    struct CGRect _rightEyeLashRect;
    struct CGRect _faceRect_eyeLash;
    long long _eyeLashCount;
    _Bool clickedBlushBtnFrist;
    PWScrollViewForMaterial *_blusherScrollView;
    struct CGRect _leftBlusherRect;
    struct CGRect _rightBlusherRect;
    struct CGRect _faceRect_Blusher;
    long long _blusherCount;
    _Bool clickedGlassBtnFrist;
    PWScrollViewForMaterial *_glassScrollView;
    struct CGRect _leftGlassRect;
    struct CGRect _rightGlassRect;
    struct CGRect _faceRect_Glass;
    long long _glassCount;
    _Bool clickedLipGlossBtnFrist;
    PWScrollViewForMaterial *_lipGlossScrollView;
    struct CGPoint _mouthPoint;
    struct CGRect _lipMouthRect;
    struct CGRect _faceRect_lipGloss;
    long long _lipGlossCount;
    UIImage *foundationImage;
    _Bool clickedFoundationBtnFrist;
    PWScrollViewForMaterial *_foundationScrollView;
    struct CGRect _leftFoundationRect;
    struct CGRect _rightFoundationRect;
    struct MakeupInterface *_makeupInterface;
    int _markUpType;
    UIView *_adjustImgViewUnderControl;
    float _lastAccumulate;
    struct CGPoint _lastCenterPoint;
    long long _indexInLipScroll;
    UIView *_adjustNoteView;
    UIButton *_compareButton;
    int _markUpType_lastType;
    _Bool panTrigged;
    UnderControlImageView *_leftView;
    UnderControlImageView *_rightView;
    UnderControlImageView *_leftBlusherView;
    UnderControlImageView *_rightBlusherView;
    UnderControlImageView *_leftGlassView;
    UnderControlImageView *_rightGlassView;
    NSString *originalTitle;
    UnderControlImageView *_lipGlossView;
    UnderControlImageView *_leftEyeLashView;
    UnderControlImageView *_rightEyeLashView;
    UnderControlImageView *_leftEyeShadowView;
    UnderControlImageView *_rightEyeShadowView;
    NSMutableArray *_m_pointsAry;
}

@property(retain, nonatomic) NSMutableArray *m_pointsAry; // @synthesize m_pointsAry=_m_pointsAry;
@property(retain, nonatomic) UnderControlImageView *rightEyeShadowView; // @synthesize rightEyeShadowView=_rightEyeShadowView;
@property(retain, nonatomic) UnderControlImageView *leftEyeShadowView; // @synthesize leftEyeShadowView=_leftEyeShadowView;
@property(retain, nonatomic) UnderControlImageView *rightEyeLashView; // @synthesize rightEyeLashView=_rightEyeLashView;
@property(retain, nonatomic) UnderControlImageView *leftEyeLashView; // @synthesize leftEyeLashView=_leftEyeLashView;
@property(retain, nonatomic) UnderControlImageView *lipGlossView; // @synthesize lipGlossView=_lipGlossView;
@property(retain, nonatomic) NSString *originalTitle; // @synthesize originalTitle;
@property(retain, nonatomic) UnderControlImageView *rightGlassView; // @synthesize rightGlassView=_rightGlassView;
@property(retain, nonatomic) UnderControlImageView *leftGlassView; // @synthesize leftGlassView=_leftGlassView;
@property(retain, nonatomic) UnderControlImageView *rightBlusherView; // @synthesize rightBlusherView=_rightBlusherView;
@property(retain, nonatomic) UnderControlImageView *leftBlusherView; // @synthesize leftBlusherView=_leftBlusherView;
@property(retain, nonatomic) UnderControlImageView *rightView; // @synthesize rightView=_rightView;
@property(retain, nonatomic) UnderControlImageView *leftView; // @synthesize leftView=_leftView;
- (void).cxx_destruct;
- (void)faceDetection:(id)arg1 option:(long long)arg2;
- (void)hideMagnifierView;
- (void)setMagnifierViewTouchPoint:(struct CGPoint)arg1;
- (void)remove_magnifierView;
- (void)init_magnifierView;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (void)touchesMoved:(id)arg1 withEvent:(id)arg2;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (void)resetDeleteViewAndRotateView;
- (void)handleRotateFrom:(id)arg1;
- (void)handlePinchFrom:(id)arg1;
- (void)handlePanFrom:(id)arg1;
- (void)handleTapFrom:(id)arg1;
- (void)guideViewFinish;
- (void)commit;
- (void)back;
- (void)clearViewAndMemory;
- (struct CGPoint)convertViewPoint2ImagePoint:(struct CGPoint)arg1;
- (struct CGPoint)convertImagePoint2ViewPoint:(struct CGPoint)arg1;
- (struct CGRect)convertViewRectToImageRect:(struct CGRect)arg1;
- (struct CGRect)convertImageRectToViewRect:(struct CGRect)arg1;
- (void)drawImage2Context:(struct CGContext *)arg1 withCGImageRef:(struct CGImage *)arg2 withView:(id)arg3;
- (id)drawView2Image:(id)arg1;
- (id)changeImageToCGImage:(id)arg1;
- (id)oppositeImage:(id)arg1;
- (void)removeImage:(id)arg1;
- (void)deleteButtonClick:(id)arg1;
- (void)hideORShowAllUnderImageView:(_Bool)arg1;
- (void)data_statistics;
- (void)showORhideScroll_hideType:(int)arg1 showType:(int)arg2;
- (void)hide_scrollBgImgView;
- (void)show_scrollBgImgView;
- (void)removeOrAddView:(_Bool)arg1 withType:(int)arg2;
- (void)sliderValueChange:(id)arg1;
- (void)sliderValueChangeEnd:(id)arg1;
- (void)setBtnSelected:(id)arg1;
- (void)click_foundationTypeBtn;
- (void)click_lipGlossTypeBtn;
- (void)click_glassTypeBtn;
- (void)click_blusherTypeBtn;
- (void)click_eyeLashTypeBtn;
- (void)click_eyeShadowTypeBtn;
- (void)click_eyeLinerTypeBtn;
- (void)_compareButtonTouch:(id)arg1;
- (void)_compareButtonClicked:(id)arg1;
- (id)getColorImage:(id)arg1;
- (id)cropSrcImageWithFrame;
- (void)updateLipGlossImage;
- (void)createImageAsyn;
- (void)reset_lipGlossImage;
- (_Bool)reset_lipGlossFrame;
- (void)setCurrentAdjustView:(id)arg1;
- (struct CGPoint)convertViewPointToLipPoint:(struct CGPoint)arg1;
- (struct CGPoint)convertLipPointToViewPoint:(struct CGPoint)arg1;
- (void)setShowOrHide_adjustView:(_Bool)arg1;
- (void)showImageViews;
- (void)hideImageViews;
- (void)initPointArray;
- (void)removeAdjustmentImageViews:(_Bool)arg1;
- (void)setupAdjustmentImageViews;
- (void)adjustmentBtnClick:(id)arg1;
- (void)resetMainView:(_Bool)arg1;
- (void)setCurrentView:(id)arg1;
- (void)hideSilder:(_Bool)arg1;
- (void)showSlider:(_Bool)arg1;
- (id)getMaterialImageWithIndex:(long long)arg1;
- (id)getMaterialImageWithIndex:(long long)arg1 tyep:(int)arg2;
- (void)clickFoundation:(id)arg1;
- (void)clickLipGloss:(id)arg1;
- (void)clickGlass:(id)arg1;
- (void)clickBlusher:(id)arg1;
- (void)clickEyeLash:(id)arg1;
- (void)clickEyeShadow:(id)arg1;
- (void)clickEyeLiner:(id)arg1;
- (void)materialLoadFinished:(id)arg1;
- (void)faceDetectionFail:(int)arg1;
- (void)faceDetectionSuccess:(int)arg1;
- (_Bool)faceDetection:(int)arg1;
- (void)factoryDidDismiss;
- (void)factoryDidPresent;
- (void)factoryWillPresent;
- (void)initSelfView;
- (void)dealloc;
- (id)initWithImage:(id)arg1 editCtrl:(id)arg2 maxRect:(struct CGRect)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

