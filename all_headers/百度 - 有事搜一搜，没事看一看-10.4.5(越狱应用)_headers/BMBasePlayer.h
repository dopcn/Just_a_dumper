//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

#import "BMAudioPlayerDelegate-Protocol.h"
#import "BMLrcServiceDelegate-Protocol.h"

@class BMAudioPlayer, BMLrcService, BMMusicPlayerItem, NSDate, NSMutableArray, NSMutableSet, NSString;

@interface BMBasePlayer : NSObject <BMAudioPlayerDelegate, BMLrcServiceDelegate>
{
    int _playedSeconds;
    _Bool _lastStatePaused;
    double _firstBufferFileTimeStamp;
    long long _playMode;
    BMAudioPlayer *_player;
    NSMutableSet *_delegateSet;
    unsigned long long _playIndex;
    NSMutableArray *_playItemsArray;
    NSMutableArray *_shuffleIndexList;
    BMLrcService *_lrcService;
    double _playWillStartDate;
    NSString *_ct;
    NSString *_clt;
    BMMusicPlayerItem *_crmPlayItem;
    double _playInterval;
    NSDate *_resumedDate;
}

+ (void)setLogEnable:(_Bool)arg1;
+ (id)sharedInstance;
@property(retain, nonatomic) NSDate *resumedDate; // @synthesize resumedDate=_resumedDate;
@property(nonatomic) double playInterval; // @synthesize playInterval=_playInterval;
@property(nonatomic) __weak BMMusicPlayerItem *crmPlayItem; // @synthesize crmPlayItem=_crmPlayItem;
@property(retain, nonatomic) NSString *clt; // @synthesize clt=_clt;
@property(retain, nonatomic) NSString *ct; // @synthesize ct=_ct;
@property(nonatomic) double playWillStartDate; // @synthesize playWillStartDate=_playWillStartDate;
@property(retain, nonatomic) BMLrcService *lrcService; // @synthesize lrcService=_lrcService;
@property(retain, nonatomic) NSMutableArray *shuffleIndexList; // @synthesize shuffleIndexList=_shuffleIndexList;
@property(retain, nonatomic) NSMutableArray *playItemsArray; // @synthesize playItemsArray=_playItemsArray;
@property(nonatomic) unsigned long long playIndex; // @synthesize playIndex=_playIndex;
@property(retain, nonatomic) NSMutableSet *delegateSet; // @synthesize delegateSet=_delegateSet;
@property(retain, nonatomic) BMAudioPlayer *player; // @synthesize player=_player;
@property(nonatomic) long long playMode; // @synthesize playMode=_playMode;
- (void).cxx_destruct;
- (_Bool)setCustomHttpHeader:(id)arg1 AndValue:(id)arg2 WithSeperator:(id)arg3;
- (_Bool)setProxyHost:(id)arg1 andPort:(int)arg2 andUser:(id)arg3 andPasswd:(id)arg4;
- (void)useP2pNetworkEnable:(_Bool)arg1;
- (void)clearAllCache;
- (float)getCurrentCacheFolderSize;
- (void)fetchCLTWithError:(id)arg1 song:(id)arg2;
- (void)fetchCT;
- (void)sendCRMMessage:(_Bool)arg1 resType:(long long)arg2;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)addObserver:(id)arg1 systemVolumeChanged:(CDUnknownBlockType)arg2;
- (void)fetchDownloadURLWithItem:(id)arg1 completeBlock:(CDUnknownBlockType)arg2;
- (void)lrcDownloadServiceSuccess:(_Bool)arg1;
- (_Bool)checkInputItem:(id)arg1;
- (id)itemWithMusicItem:(id)arg1;
- (void)player:(id)arg1 failCompleteAtIndex:(unsigned long long)arg2 error:(id)arg3;
- (void)player:(id)arg1 updateCacheProgress:(float)arg2;
- (void)player:(id)arg1 updateProgress:(float)arg2;
- (void)playerStatusChanged:(id)arg1;
- (void)player:(id)arg1 playDidStop:(long long)arg2;
- (void)playerEndCacheForPlay:(id)arg1;
- (void)playerBeginCacheForPlay:(id)arg1;
- (void)player:(id)arg1 didEndSeek:(_Bool)arg2;
- (void)player:(id)arg1 didBeginSeek:(_Bool)arg2;
- (void)player:(id)arg1 didPreparePlayAtIndex:(unsigned long long)arg2;
- (void)player:(id)arg1 willPreparePlayAtIndex:(unsigned long long)arg2;
- (void)player:(id)arg1 checkPlayAtIndex:(unsigned long long)arg2 allowBlock:(CDUnknownBlockType)arg3;
- (void)willPlayAtIndex:(unsigned long long)arg1;
- (void)playerDoLaunch:(id)arg1;
- (void)player:(id)arg1 successCompletePlayAtIndex:(unsigned long long)arg2;
- (void)remoteEventAction:(long long)arg1;
- (void)playerWithRemoteEvent:(id)arg1;
- (void)playerEndInterruption;
- (void)playerBeginInterruption;
- (void)cleanPlayerList;
- (void)deletePlayItemAtIndexes:(id)arg1;
- (void)deleteAtPlayIndex:(unsigned long long)arg1;
- (void)insertPlayList:(id)arg1 index:(long long)arg2;
- (_Bool)isSameSong:(id)arg1 newItem:(id)arg2;
- (void)playWithPlayList:(id)arg1 atIndex:(long long)arg2 forceReStart:(_Bool)arg3;
- (void)playWithPlayList:(id)arg1;
- (void)playStrategy:(id)arg1;
- (void)setupshuffleIndexList;
- (unsigned long long)itemIndexForIndex:(long long)arg1 offset:(long long)arg2;
- (long long)previousIndex;
- (long long)nextIndex;
- (void)enumerateDelegatesUsingBlock:(CDUnknownBlockType)arg1;
- (_Bool)hasDelgate:(id)arg1;
- (void)addDelegate:(id)arg1;
- (_Bool)seekToTime:(double)arg1;
- (void)playPrevious;
- (void)playNext;
- (void)replay;
- (void)stop;
- (void)pause;
- (void)play;
- (void)playAtIndex:(unsigned long long)arg1 forceReStart:(_Bool)arg2;
- (void)playAtIndex:(unsigned long long)arg1;
- (void)playOrPause;
- (_Bool)isPlaying;
- (void)setBufferType:(long long)arg1;
- (long long)bufferType;
@property(readonly, nonatomic, getter=isInterrupted) _Bool interrupted;
@property(nonatomic) float volume;
@property(readonly, nonatomic) long long playerStatus;
@property(readonly, nonatomic) float progress;
@property(readonly, nonatomic) double duration;
@property(readonly, nonatomic) double currentTime;
- (id)items;
- (id)itemAtIndex:(unsigned long long)arg1;
@property(readonly, nonatomic) BMMusicPlayerItem *currentItem;
- (unsigned long long)lastIndex;
- (id)getLRCView;
- (void)applicationDidLanuch;
- (void)removeObservers;
- (void)addObservers;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

