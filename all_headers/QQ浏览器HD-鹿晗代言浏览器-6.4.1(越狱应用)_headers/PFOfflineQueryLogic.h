//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

@class PFOfflineStore;

@interface PFOfflineQueryLogic : NSObject
{
    PFOfflineStore *_offlineStore;
}

+ (_Bool)userHasWriteAccess:(id)arg1 ofObject:(id)arg2;
+ (_Bool)userHasReadAccess:(id)arg1 ofObject:(id)arg2;
+ (_Bool)matchesValue:(id)arg1 constraint:(id)arg2 operator:(id)arg3 allKeyConstraints:(id)arg4;
+ (_Bool)matchesValue:(id)arg1 within:(id)arg2;
+ (_Bool)matchesValue:(id)arg1 nearSphere:(id)arg2 maxDistance:(id)arg3;
+ (_Bool)matchesValue:(id)arg1 exists:(id)arg2;
+ (_Bool)matchesValue:(id)arg1 regex:(id)arg2 withOptions:(id)arg3;
+ (_Bool)matchesValue:(id)arg1 containsAllObjectsInArray:(id)arg2;
+ (_Bool)matchesValue:(id)arg1 notContainedIn:(id)arg2;
+ (_Bool)matchesValue:(id)arg1 containedIn:(id)arg2;
+ (_Bool)matchesValue:(id)arg1 greaterThanOrEqualTo:(id)arg2;
+ (_Bool)matchesValue:(id)arg1 greaterThan:(id)arg2;
+ (_Bool)matchesValue:(id)arg1 lessThanOrEqualTo:(id)arg2;
+ (_Bool)matchesValue:(id)arg1 lessThan:(id)arg2;
+ (_Bool)matchesValue:(id)arg1 notEqualTo:(id)arg2;
+ (_Bool)matchesValue:(id)arg1 equalTo:(id)arg2;
+ (_Bool)matchesValue:(id)arg1 constraint:(id)arg2 withDecider:(CDUnknownBlockType)arg3;
+ (_Bool)matchesArray:(id)arg1 constraint:(id)arg2 withDecider:(CDUnknownBlockType)arg3;
@property(nonatomic) __weak PFOfflineStore *offlineStore; // @synthesize offlineStore=_offlineStore;
- (void).cxx_destruct;
- (id)fetchIncludesForObjectAsync:(id)arg1 queryState:(id)arg2 database:(id)arg3;
- (id)fetchIncludesAsyncForResults:(id)arg1 ofQueryState:(id)arg2 inDatabase:(id)arg3;
- (void)_sortResults:(id)arg1 ofQueryState:(id)arg2;
- (id)resultsByApplyingOptions:(unsigned char)arg1 ofQueryState:(id)arg2 toResults:(id)arg3;
- (CDUnknownBlockType)createMatcherForQueryState:(id)arg1 user:(id)arg2;
- (id)fetchIncludeAsync:(id)arg1 container:(id)arg2 database:(id)arg3;
- (CDUnknownBlockType)createMatcherWithQueryConstraints:(id)arg1 user:(id)arg2;
- (CDUnknownBlockType)createOrMatcherForQueries:(id)arg1 user:(id)arg2;
- (CDUnknownBlockType)createMatcherWithOperator:(id)arg1 constraints:(id)arg2 key:(id)arg3 allKeyConstraints:(id)arg4 user:(id)arg5;
- (CDUnknownBlockType)createMatcherForKey:(id)arg1 dontSelect:(id)arg2 user:(id)arg3;
- (CDUnknownBlockType)createMatcherForKey:(id)arg1 select:(id)arg2 user:(id)arg3;
- (CDUnknownBlockType)createMatcherForKey:(id)arg1 notInQuery:(id)arg2 user:(id)arg3;
- (CDUnknownBlockType)createMatcherForKey:(id)arg1 inQuery:(id)arg2 user:(id)arg3;
- (id)valueForContainer:(id)arg1 key:(id)arg2 depth:(int)arg3;
- (id)valueForContainer:(id)arg1 key:(id)arg2;
- (id)initWithOfflineStore:(id)arg1;

@end

