//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <UIKit/UIViewController.h>

#import "KSODisplayRecordStartViewDelegate-Protocol.h"
#import "KSODualScreenManagerDelegate-Protocol.h"
#import "KSOVideoClipsViewControllerDelegate-Protocol.h"
#import "KSOVideoEditViewControllerDelegate-Protocol.h"
#import "KSOWirelessProjectionInfoManagerDelegate-Protocol.h"
#import "KWChoosePathViewCtlDelegate-Protocol.h"
#import "KWPPDisplayPopoverShowViewDelegate-Protocol.h"
#import "KWPPDisplayRecordManagerDelegate-Protocol.h"
#import "KWPPDisplayToolbarMoreContentViewControllerDelegate-Protocol.h"
#import "KWPPDisplayToolbarMoreViewControllerDelegate-Protocol.h"
#import "KWPPDisplayViewControllerDelegate-Protocol.h"
#import "KWPPDisplayWhiteboardViewControllerDelegate-Protocol.h"
#import "KWPPShareDisplayControllerDelegate-Protocol.h"
#import "KWPPTVDisplayControllerDelegate-Protocol.h"
#import "KWProjectionControllerDelegate-Protocol.h"
#import "MailHelperDelegate-Protocol.h"
#import "UIPopoverPresentationControllerDelegate-Protocol.h"

@class KSODisplayRecordStartAlertView, KSODualScreenManager, KWChooseFileViewCtl, KWPPDisplayAudioPlayerController, KWPPDisplayCompetenceConfig, KWPPDisplayInkTraceManager, KWPPDisplayModel, KWPPDisplayMoviePlayerViewController, KWPPDisplayOptionView, KWPPDisplayPopoverShowView, KWPPDisplayRecordManager, KWPPDisplaySlideShowView, KWPPDisplayToolbarMoreContentViewController, KWPPDisplayToolbarMoreViewController, KWPPDisplayView, KWPPDisplayWhiteboardViewController, KWPPShareDisplayController, KWPPTVDisplayController, KWProjectionGuideViewController, KWWirelessProjectionManager, MPMoviePlayerController, MailHelper, NSArray, NSMutableArray, NSNumber, NSString, NSTimer, UIAlertController, UIView, ksReachability;
@protocol KWPPBaseViewControllerDelegate;

@interface KWPPDisplayViewController : UIViewController <KWPPDisplayRecordManagerDelegate, KSOVideoClipsViewControllerDelegate, KSODisplayRecordStartViewDelegate, KSOVideoEditViewControllerDelegate, UIPopoverPresentationControllerDelegate, KSODualScreenManagerDelegate, MailHelperDelegate, KWPPDisplayPopoverShowViewDelegate, KWChoosePathViewCtlDelegate, KWPPTVDisplayControllerDelegate, KWPPShareDisplayControllerDelegate, KWPPDisplayToolbarMoreViewControllerDelegate, KWPPDisplayToolbarMoreContentViewControllerDelegate, KWPPDisplayWhiteboardViewControllerDelegate, KWProjectionControllerDelegate, KSOWirelessProjectionInfoManagerDelegate, KWPPDisplayViewControllerDelegate>
{
    _Bool _isActiveApplication;
    _Bool _isQuitDisplay;
    _Bool _isShowMenubar;
    _Bool _isOpenInkTrace;
    _Bool _isOpenRecord;
    _Bool _isOpenNotePage;
    _Bool _isOpenWireless;
    _Bool _isOpenDisplayOption;
    _Bool _isOpenInkTraceOptionView;
    _Bool _isOpenWhiteboard;
    _Bool _isOpenToolbarMore;
    _Bool _isOpenWirelessProjection;
    _Bool _isOpenInkSwipeByHand;
    _Bool _isOpenedInkTraceOnce;
    _Bool _isHaveShowDisplayContent;
    double _displayBeginTime;
    double _displayTime;
    long long _chooseFileViewCtlFileType;
    struct CGRect _mediaRelativeFrame;
    struct CGRect _preFrame;
    _Bool _isAllowQuitDisplayForProjection;
    long long _inkTraceOpenTimes;
    _Bool _isNeedShowExitSlide;
    _Bool _isLinkNetwork;
    _Bool _isCooperationDisplayReceiveAction;
    _Bool _isProjectionMode;
    _Bool _isOpenInkTraceReceive;
    _Bool _isStartDisplay;
    _Bool _isStartTVPlay;
    _Bool _isDisplayFromMainInterface;
    _Bool _isShareDisplayFromThirdOpen;
    _Bool _isAnimatingForClient;
    _Bool _isBlackScreenMode;
    _Bool _isExitSlide;
    _Bool _isForceCloseFromWppViewController;
    _Bool _isShowRecordOption;
    _Bool _isShowNoMicroPermission;
    _Bool _isNotOpenRecordMovieDocument;
    _Bool _isTimeOutRecordMoviePreview;
    _Bool _isStartRecordAlertViewCommandStart;
    _Bool _isCurrentRecordTimeout;
    _Bool _hasUseInk;
    _Bool _hasUseUndo;
    _Bool _isForceClose;
    _Bool _isDidExitState;
    KWPPDisplayInkTraceManager *_inkTraceManager;
    long long _currentSlideIndex;
    long long _currentClickIndex;
    long long _alertType;
    UIAlertController *_alertController;
    KWPPShareDisplayController *_shareDisplayController;
    KWPPTVDisplayController *_tvDisplayController;
    KWPPDisplayCompetenceConfig *_competenceConfig;
    NSArray *_whiteboardInkLines;
    double _whiteboardInkScale;
    id <KWPPBaseViewControllerDelegate> _delegate;
    KWPPDisplayModel *_model;
    KWPPDisplayView *_displayView;
    NSString *_optionalWPSFilePath;
    KWPPDisplayRecordManager *_recordManager;
    CDUnknownBlockType _purchaseBlock;
    NSTimer *_purchaseListener;
    KSODisplayRecordStartAlertView *_startRecordAlertView;
    double _currentTime;
    NSNumber *_isForceCloseCheck;
    NSTimer *_displayTimer;
    NSArray *_displayTransitionArray;
    KWPPDisplaySlideShowView *_dualScreenOutputDisplaySlideShowView;
    KWPPDisplayPopoverShowView *_popoverShowView;
    UIView *_phonePopoverView;
    UIView *_blackScreenView;
    KWPPDisplayOptionView *_displayOptionView;
    UIViewController *_popoverPresentedViewController;
    KWPPDisplayMoviePlayerViewController *_moviePlayerViewController;
    KWPPDisplayAudioPlayerController *_audioPlayerController;
    KWChooseFileViewCtl *_chooseFileViewCtl;
    MPMoviePlayerController *_moviePlayerController;
    KWWirelessProjectionManager *_wirelessProjectionManager;
    MailHelper *_mailHelper;
    ksReachability *_reachability;
    NSMutableArray *_shareDisplayBackgroundInkTraceMessageArray;
    KSODualScreenManager *_dualScreenManager;
    KWPPDisplayWhiteboardViewController *_whiteboardViewController;
    KWPPDisplayToolbarMoreViewController *_toolbarMoreViewController;
    KWPPDisplayToolbarMoreContentViewController *_toolbarMoreContentViewController;
    KWProjectionGuideViewController *_wireProjectionGuideVC;
}

@property(retain, nonatomic) KWProjectionGuideViewController *wireProjectionGuideVC; // @synthesize wireProjectionGuideVC=_wireProjectionGuideVC;
@property(retain, nonatomic) KWPPDisplayToolbarMoreContentViewController *toolbarMoreContentViewController; // @synthesize toolbarMoreContentViewController=_toolbarMoreContentViewController;
@property(retain, nonatomic) KWPPDisplayToolbarMoreViewController *toolbarMoreViewController; // @synthesize toolbarMoreViewController=_toolbarMoreViewController;
@property(retain, nonatomic) KWPPDisplayWhiteboardViewController *whiteboardViewController; // @synthesize whiteboardViewController=_whiteboardViewController;
@property(retain, nonatomic) KSODualScreenManager *dualScreenManager; // @synthesize dualScreenManager=_dualScreenManager;
@property(nonatomic) _Bool isDidExitState; // @synthesize isDidExitState=_isDidExitState;
@property(retain, nonatomic) NSMutableArray *shareDisplayBackgroundInkTraceMessageArray; // @synthesize shareDisplayBackgroundInkTraceMessageArray=_shareDisplayBackgroundInkTraceMessageArray;
@property(retain, nonatomic) ksReachability *reachability; // @synthesize reachability=_reachability;
@property(retain, nonatomic) MailHelper *mailHelper; // @synthesize mailHelper=_mailHelper;
@property(retain, nonatomic) KWWirelessProjectionManager *wirelessProjectionManager; // @synthesize wirelessProjectionManager=_wirelessProjectionManager;
@property(nonatomic) __weak MPMoviePlayerController *moviePlayerController; // @synthesize moviePlayerController=_moviePlayerController;
@property(nonatomic) __weak KWChooseFileViewCtl *chooseFileViewCtl; // @synthesize chooseFileViewCtl=_chooseFileViewCtl;
@property(nonatomic) __weak KWPPDisplayAudioPlayerController *audioPlayerController; // @synthesize audioPlayerController=_audioPlayerController;
@property(nonatomic) __weak KWPPDisplayMoviePlayerViewController *moviePlayerViewController; // @synthesize moviePlayerViewController=_moviePlayerViewController;
@property(nonatomic) __weak UIViewController *popoverPresentedViewController; // @synthesize popoverPresentedViewController=_popoverPresentedViewController;
@property(retain, nonatomic) KWPPDisplayOptionView *displayOptionView; // @synthesize displayOptionView=_displayOptionView;
@property(retain, nonatomic) UIView *blackScreenView; // @synthesize blackScreenView=_blackScreenView;
@property(nonatomic) __weak UIView *phonePopoverView; // @synthesize phonePopoverView=_phonePopoverView;
@property(retain, nonatomic) KWPPDisplayPopoverShowView *popoverShowView; // @synthesize popoverShowView=_popoverShowView;
@property(retain, nonatomic) KWPPDisplaySlideShowView *dualScreenOutputDisplaySlideShowView; // @synthesize dualScreenOutputDisplaySlideShowView=_dualScreenOutputDisplaySlideShowView;
@property(retain, nonatomic) NSArray *displayTransitionArray; // @synthesize displayTransitionArray=_displayTransitionArray;
@property(retain, nonatomic) NSTimer *displayTimer; // @synthesize displayTimer=_displayTimer;
@property(retain, nonatomic) NSNumber *isForceCloseCheck; // @synthesize isForceCloseCheck=_isForceCloseCheck;
@property(nonatomic) _Bool isForceClose; // @synthesize isForceClose=_isForceClose;
@property(nonatomic) _Bool hasUseUndo; // @synthesize hasUseUndo=_hasUseUndo;
@property(nonatomic) _Bool hasUseInk; // @synthesize hasUseInk=_hasUseInk;
@property(nonatomic) double currentTime; // @synthesize currentTime=_currentTime;
@property(retain, nonatomic) KSODisplayRecordStartAlertView *startRecordAlertView; // @synthesize startRecordAlertView=_startRecordAlertView;
@property(retain, nonatomic) NSTimer *purchaseListener; // @synthesize purchaseListener=_purchaseListener;
@property(copy, nonatomic) CDUnknownBlockType purchaseBlock; // @synthesize purchaseBlock=_purchaseBlock;
@property(nonatomic) _Bool isCurrentRecordTimeout; // @synthesize isCurrentRecordTimeout=_isCurrentRecordTimeout;
@property(nonatomic) _Bool isStartRecordAlertViewCommandStart; // @synthesize isStartRecordAlertViewCommandStart=_isStartRecordAlertViewCommandStart;
@property(nonatomic) _Bool isTimeOutRecordMoviePreview; // @synthesize isTimeOutRecordMoviePreview=_isTimeOutRecordMoviePreview;
@property(nonatomic) _Bool isNotOpenRecordMovieDocument; // @synthesize isNotOpenRecordMovieDocument=_isNotOpenRecordMovieDocument;
@property(nonatomic) _Bool isShowNoMicroPermission; // @synthesize isShowNoMicroPermission=_isShowNoMicroPermission;
@property(nonatomic) _Bool isShowRecordOption; // @synthesize isShowRecordOption=_isShowRecordOption;
@property(retain, nonatomic) KWPPDisplayRecordManager *recordManager; // @synthesize recordManager=_recordManager;
@property(retain, nonatomic) NSString *optionalWPSFilePath; // @synthesize optionalWPSFilePath=_optionalWPSFilePath;
@property(retain, nonatomic) KWPPDisplayView *displayView; // @synthesize displayView=_displayView;
@property(retain, nonatomic) KWPPDisplayModel *model; // @synthesize model=_model;
@property(nonatomic) __weak id <KWPPBaseViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) double whiteboardInkScale; // @synthesize whiteboardInkScale=_whiteboardInkScale;
@property(copy, nonatomic) NSArray *whiteboardInkLines; // @synthesize whiteboardInkLines=_whiteboardInkLines;
@property(retain, nonatomic) KWPPDisplayCompetenceConfig *competenceConfig; // @synthesize competenceConfig=_competenceConfig;
@property(retain, nonatomic) KWPPTVDisplayController *tvDisplayController; // @synthesize tvDisplayController=_tvDisplayController;
@property(retain, nonatomic) KWPPShareDisplayController *shareDisplayController; // @synthesize shareDisplayController=_shareDisplayController;
@property(nonatomic) __weak UIAlertController *alertController; // @synthesize alertController=_alertController;
@property(nonatomic) long long alertType; // @synthesize alertType=_alertType;
@property(nonatomic) _Bool isForceCloseFromWppViewController; // @synthesize isForceCloseFromWppViewController=_isForceCloseFromWppViewController;
@property(nonatomic) _Bool isExitSlide; // @synthesize isExitSlide=_isExitSlide;
@property(nonatomic) _Bool isBlackScreenMode; // @synthesize isBlackScreenMode=_isBlackScreenMode;
@property(nonatomic) _Bool isAnimatingForClient; // @synthesize isAnimatingForClient=_isAnimatingForClient;
@property(nonatomic) _Bool isShareDisplayFromThirdOpen; // @synthesize isShareDisplayFromThirdOpen=_isShareDisplayFromThirdOpen;
@property(nonatomic) _Bool isDisplayFromMainInterface; // @synthesize isDisplayFromMainInterface=_isDisplayFromMainInterface;
@property(nonatomic) long long currentClickIndex; // @synthesize currentClickIndex=_currentClickIndex;
@property(nonatomic) long long currentSlideIndex; // @synthesize currentSlideIndex=_currentSlideIndex;
@property(retain, nonatomic) KWPPDisplayInkTraceManager *inkTraceManager; // @synthesize inkTraceManager=_inkTraceManager;
- (void).cxx_destruct;
- (_Bool)isNeedResponseWhenProjectionTypeClick:(long long)arg1;
- (void)startScanCodeProjectionWithController:(id)arg1;
- (void)startWirelessProjectionWithManager:(id)arg1;
- (void)startWireProjection;
- (void)screenDidConnectNotification:(id)arg1;
- (void)showRecordAlertViewController:(id)arg1;
- (void)recordControlView:(id)arg1 onCommand:(unsigned long long)arg2;
- (void)closeNotConnectedWirelessProjection;
- (_Bool)toolbarMoreTableViewNotePageOpened;
- (id)toolbarMoreTableViewCellAccessoryViewLabelText:(long long)arg1;
- (void)toolbarMoreViewControllerDidDismiss:(id)arg1;
- (void)toolbarMoreViewControllerChangeNotePage:(id)arg1 hidden:(_Bool)arg2;
- (void)toolbarMoreTableViewDidSelected:(id)arg1 functionType:(long long)arg2;
- (_Bool)isAllowDisplayControl;
- (void)showConnectFailedPrompt;
- (void)showShareDisplayLockPrompt;
- (void)showReconnectSuccessPrompt;
- (void)removeWaitAnimationFinishView;
- (void)showWaitAnimationFinishView;
- (long long)shareDisplayMaxClientCount;
- (long long)shareDisplayClientCount;
- (id)shareDisplayQRCodeText;
- (id)shareDisplayAccessCode;
- (_Bool)isJoinShareDisplay;
- (_Bool)isShareDisplay;
- (long long)cooperationDisplayType;
- (void)quitSharePlay;
- (_Bool)isCooperationDisplay;
- (void)receiveCooperationActionClearInk:(id)arg1;
- (void)receiveCooperationActionInk:(id)arg1;
- (void)receiveCooperationActionInkTraceUndo;
- (void)drawInkTraceWithMessages:(id)arg1;
- (void)drawInkTraceWithMessage:(id)arg1;
- (void)receiveCooperationActionInkTrace:(id)arg1;
- (void)receiveCooperationActionClientCount:(long long)arg1;
- (void)receiveCooperationActionRequestPage;
- (void)receiveCooperationActionGotoSlideIndex:(long long)arg1 clickIndex:(long long)arg2;
- (void)receiveCooperationActionPrevClick;
- (void)receiveCooperationActionNextClick;
- (void)receiveCooperationActionNextSlide;
- (void)receiveCooperationActionPrevSlide;
- (void)receiveCooperationActionExit;
- (void)receivedMessage:(id)arg1 withType:(long long)arg2;
- (void)sharePlayError:(id)arg1;
- (void)tvDisplayEncounterError:(id)arg1;
- (void)projectionViewControllerCloseButtonAction;
- (_Bool)isWirelessProjection;
- (_Bool)isTVProjection;
- (_Bool)isProjection;
- (void)sendClearInkMessage:(long long)arg1;
- (void)sendCooperationDisplayMessage:(id)arg1;
- (void)sendCooperationDisplayInkTraceUndo;
- (void)sendCooperationDisplayClickIndex:(long long)arg1 lastClick:(long long)arg2;
- (void)sendCooperationDisplaySlideIndex:(long long)arg1;
- (void)tvPojectionDidExit;
- (void)sendInkTraceToTVProjectionWithPoints:(id)arg1 color:(id)arg2;
- (_Bool)isLandscapePPT;
- (void)showNetworkDisconnectAlert;
- (void)networkDidConnect;
- (void)networkDidDisconnect;
- (void)reconnectForNetWorkChange;
- (void)networkIsChanged;
- (void)recordForcePausAndSave;
- (void)applicationDidBecomeActive;
- (void)applicationWillTerminate;
- (void)applicationWillResignActive;
- (void)clearAlertController;
- (void)dismissAlertControllerWithCompletion:(CDUnknownBlockType)arg1;
- (void)dismissAlertController;
- (void)showAlertControllerWithTag:(long long)arg1;
- (void)removeMedia;
- (void)runActionMediaStop:(id)arg1;
- (void)runActionMediaStart:(id)arg1;
- (void)showMediaWithMediaView:(id)arg1 withRelativeFrame:(struct CGRect)arg2;
- (void)runActionMediaInit:(id)arg1;
- (void)hyperlinksSendMail:(id)arg1;
- (void)moviePlayerDidFinishNotification;
- (id)currentFilePath;
- (void)setTabelCell:(id)arg1 ofFile:(id)arg2;
- (void)choosePathFile:(id)arg1;
- (void)choosePathViewDidChoosePath:(id)arg1 scrFiles:(id)arg2;
- (void)choosePathViewCancelChoosePath;
- (void)choosePathViewDidChooseTarget:(id)arg1;
- (void)openWPSFile:(id)arg1;
- (void)openFileWithPath:(id)arg1;
- (void)chooseMediaFileCtl;
- (void)chooseWPSFileCtl;
- (id)titleForWPSFileCtlAlertController;
- (void)showWPSFileCtlAlertController:(id)arg1;
- (void)openOptionalWPSFileNotification:(id)arg1;
- (void)showMediaFileCtlAlertController:(id)arg1;
- (void)openMediaFileNotification:(id)arg1;
- (void)promptUnsupportedMediaFile:(id)arg1;
- (void)showDisplayUnSupportPrompt:(id)arg1;
- (void)wpsApplicationEvent:(id)arg1;
- (void)render:(id)arg1;
- (void)exitSlideNotification:(id)arg1;
- (void)quitDisplayNotification:(id)arg1;
- (void)removeNotificationsViewDidDisapper;
- (void)addNotificationsAtViewDidAppear;
- (void)removeNotifications;
- (void)addNotificationsAtViewDidLoad;
- (void)finishSendMailWithMessage:(id)arg1;
- (void)showMailHelper;
- (struct CGRect)blackScreenFrame;
- (void)quitBlackScreenMode;
- (void)enterBlackScreenMode;
- (void)removeWhiteboardViewController:(id)arg1 inkLines:(id)arg2 inkScale:(double)arg3;
- (void)showWhiteboardViewController;
- (struct CGRect)toolbarMorePopoverFrame;
- (void)dismissToolbarMorePopover;
- (void)initToolbarMorePopover;
- (struct CGRect)displayOptionPopoverFrame;
- (void)initDisplayOptionPopover;
- (_Bool)isAllowQuitDisplayForProjeciton;
- (void)manager:(id)arg1 deviceDidConnected:(id)arg2;
- (struct CGRect)wirelessPopoverFrame;
- (void)initwirelessProjectionManager;
- (void)setwirelessProjectionManager:(id)arg1;
- (struct CGRect)inkTraceOptionPopoverFrame;
- (void)initInkTraceOptionPopover;
- (void)closePopoverPresentationController:(id)arg1;
- (id)presentationController:(id)arg1 viewControllerForAdaptivePresentationStyle:(long long)arg2;
- (void)popoverPresentationControllerDidDismissPopover:(id)arg1;
- (_Bool)popoverPresentationControllerShouldDismissPopover:(id)arg1;
- (long long)adaptivePresentationStyleForPresentationController:(id)arg1 traitCollection:(id)arg2;
- (long long)adaptivePresentationStyleForPresentationController:(id)arg1;
- (void)dismissPopoverPresentationControllerWithCompletion:(CDUnknownBlockType)arg1;
- (void)dismissPopoverPresentationController;
- (struct CGRect)popoverShowViewFrame;
- (void)removePopoverShowView;
- (void)removePopoverShowViewWithCompletion:(CDUnknownBlockType)arg1;
- (void)initPopoverShowView;
- (void)initPopoverPresentationViewController:(id)arg1 withArrowDirection:(unsigned long long)arg2 withSourceView:(id)arg3 withSourceRect:(struct CGRect)arg4;
- (void)initPhonePopoverView:(id)arg1;
- (void)resetInkTraceUndoStatus;
- (void)inkTraceUndo;
- (void)displayBottomToolbarViewOnTouchEvent:(id)arg1 bottomToolbarCategory:(long long)arg2;
- (void)presentClearAlertControllerWithTitle:(id)arg1 complention:(CDUnknownBlockType)arg2;
- (void)showInkClearPopViewWithView:(id)arg1;
- (void)displayInkTrackControlView:(id)arg1 onCommand:(unsigned long long)arg2;
- (void)stopRelatedFunctions;
- (void)dualScreenManagerDidDisconnect:(id)arg1;
- (void)dualScreenManagerDidConnect:(id)arg1;
- (void)removeDualScreen;
- (void)removeDualScreenOutputView;
- (struct CGRect)dualScreenOutputViewFrame;
- (void)addDualScreenOutputView;
- (void)closeDualScreen;
- (void)disconnectDualScreen;
- (void)connectDualScreen;
- (void)initDualScreen;
- (_Bool)isDualScreen;
- (_Bool)hasDualScreen;
- (void)hideWireProjectionGuideView;
- (void)showWireProjectionGuideView;
- (void)showWireProjectionDevicePromotionBrowserViewController;
- (_Bool)isAllowQuitDisplayForInkTrace;
- (void)clearAllSlideInkNeedShowTip:(_Bool)arg1;
- (void)clearSlideInk:(long long)arg1 needShowTip:(_Bool)arg2;
- (void)clearInkTrace;
- (void)saveInkTrace;
- (_Bool)isNeedSaveInkTrace;
- (_Bool)isHaveInkTraceImage;
- (_Bool)isNeedDrawInkTrace;
- (void)setInkTraceManagerEnable:(_Bool)arg1;
- (void)reloadInkTrace;
- (void)reloadInkTraceManager;
- (void)removeInkTraceDisplayControlView;
- (void)showInkTraceDisplayControlView;
- (void)closeInkTraceManager;
- (void)openInkTracePencilMode;
- (void)openInkTraceReceive;
- (void)openInkTrace;
- (void)initInkTraceManager;
- (void)touchToolbarMoreEvent;
- (void)touchWhiteboardEvent;
- (void)touchDisplayOptionEvent;
- (void)touchWirelessEvent;
- (void)endedNotePageWithTouch:(id)arg1;
- (void)movedNotePageWithTouch:(id)arg1;
- (void)beganNotePageWithTouch:(id)arg1;
- (void)didChangeNotePageStatus;
- (void)showNotePageByAuto;
- (void)changeNotePageStatus:(_Bool)arg1;
- (void)touchNotePageEvent;
- (void)touchRecordEvent;
- (void)touchInkTraceEvent;
- (void)touchInkTraceEventWithCompletion:(CDUnknownBlockType)arg1;
- (id)exitSlideImage;
- (struct CGImage *)createDisplaySlideAndInkImageRef:(id)arg1;
- (void)showWirelessImage:(struct CGImage *)arg1;
- (void)showTvOutputExitSlide;
- (void)showDualScreenOutputImage:(id)arg1;
- (void)sendExitSlideToAllScreen;
- (void)sendAllScreenImageRef:(struct CGImage *)arg1;
- (void)sendWhiteboardImageToAllScreen;
- (void)sendSlideImageToAllScreen;
- (void)sendImageToAllScreen;
- (void)pauseDisplayMedia;
- (void)stopDisplayMedia;
- (long long)autoPlaySwitchTime;
- (void)setAutoDisplaySlideSwitchTime:(long long)arg1;
- (void)setLoopDisplay:(_Bool)arg1;
- (_Bool)isLoopPlay;
- (void)setAutoDisplay:(_Bool)arg1;
- (_Bool)isAutoPlay;
@property(readonly, nonatomic) long long slideCount;
- (void)didChangeClick;
- (void)didChangeSlide;
- (id)displayViewSlideImage;
- (struct CGSize)displayViewSlideSize;
- (struct CGImage *)currentSlideImageRef;
- (_Bool)isAnimationExecuting;
- (long long)clickIndex;
- (long long)slideIndex;
- (void)didGotoClickIndex;
- (void)gotoSlideIndex:(long long)arg1;
- (void)didPrevClick;
- (void)prevClick;
- (void)notifyDeleteInksResult:(id)arg1;
- (void)refreshAddInk;
- (void)nextClick;
- (void)prevClickBySwipeGesture;
- (void)nextClickBySwipeGesture;
- (void)resetBeforeDisplayCommand;
- (void)clickTest:(struct CGPoint)arg1;
- (void)stopDisplay;
- (void)willStopDisplay;
- (void)startDisplay;
- (void)quitDisplayViewControllerForForceClose:(id)arg1;
- (void)quitDisplayViewController;
- (void)executeQuitDisplayAnimation;
- (void)quitDisplay;
- (void)willQuitDisplay;
- (_Bool)isAllowQuitDisplay;
- (void)closeFileFromMainInterface;
- (void)close;
- (void)forceCloseView;
- (void)forceClose:(id)arg1;
- (void)updateDisplayTime;
- (void)removeDisplayTimer;
- (void)initDisplayTimer;
- (void)didEnterDisplayWithOptionCategory:(long long)arg1;
- (void)changeMenubarStatus:(_Bool)arg1 withCompletion:(CDUnknownBlockType)arg2;
- (void)changeMenubarStatus:(_Bool)arg1;
- (void)changeMenubarStatus;
- (void)refreshNotePage;
- (void)refreshThumbnailsWithIndex:(long long)arg1;
- (id)currentSlideShowView;
- (void)hideExitSlideView;
- (void)showExitSlideView;
- (struct CGRect)displayViewFrame;
- (void)removeDisplayView;
- (void)initDisplayView;
- (void)enterDisplayAnimation;
- (void)initDisplayModel;
- (void)resetDisplayViewToProjectionMode;
- (void)clearDisplayView;
- (unsigned long long)supportedInterfaceOrientations;
- (_Bool)shouldAutorotate;
- (void)didReceiveMemoryWarning;
- (void)viewWillTransitionToSize:(struct CGSize)arg1 withTransitionCoordinator:(id)arg2;
- (void)viewWillLayoutSubviews;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (id)initWithDelegate:(id)arg1;
- (void)dealloc;
- (void)videoEditCompostionDidFinish:(id)arg1;
- (void)displayRecordStartView:(id)arg1 onCommand:(long long)arg2;
- (void)displayRecordStartViewCommand:(long long)arg1;
- (void)hideStartRecordAlertView;
- (void)showStartRecordAlertView;
- (void)resetRecordViewStatus;
- (void)displayRecordManager:(id)arg1 seekTimeWaitToResume:(_Bool)arg2 outputFilePath:(id)arg3 timecodes:(id)arg4;
- (void)displayRecordManager:(id)arg1 pauseAndSaveSucessFully:(_Bool)arg2 outputFilePath:(id)arg3 timecodes:(id)arg4;
- (void)displayRecordManager:(id)arg1 saveSucessFully:(_Bool)arg2 outputFilePath:(id)arg3;
- (void)displayRecordManager:(id)arg1 saveProgress:(double)arg2;
- (void)displayRecordManager:(id)arg1 error:(unsigned long long)arg2;
- (void)displayRecordManagerRecording:(id)arg1 recordTime:(double)arg2;
- (void)displayRecordManagerRequestFrameData:(id)arg1;
- (void)showTimeOutAlertView;
- (void)videoClipsViewController:(id)arg1 changRecordTime:(CDStruct_1b6d18a9)arg2;
- (void)showProcessingAlertView;
- (void)showStartRecordCountDownWithCompletion:(CDUnknownBlockType)arg1;
- (void)showVideoClipsViewController:(id)arg1 timecodes:(id)arg2;
- (void)showAlertControllerLittleSpaceRecordMovieWithMemory:(long long)arg1;
- (void)removePurchaseListener;
- (void)addPurchaseListener;
- (void)showPurchaseRecordViewController;
- (_Bool)isAllowQuitDisplayForSavedRecord;
- (_Bool)isAllowQuitDisplayForRecording;
- (void)openRecordMovieDocument:(id)arg1;
- (void)openCurrentRecordMovieDocument;
- (void)showVideoEditViewController;
- (void)editVideo;
- (void)deleteRecording;
- (void)cancelRecording;
- (void)editRecord;
- (void)stopRecord;
- (void)resumeRecord;
- (void)pauseRecord;
- (void)realStartRecord;
- (void)startRecord;
- (void)changeRecordStatus:(_Bool)arg1;
- (void)initRecordManager;
- (void)setToolbarRecordrEnabled:(_Bool)arg1;
- (struct CGRect)recordPurchasePromptPopoverFrame;
- (void)initRecordPurchasePromptPopover;
- (void)showRecordPurchasePrompt;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

