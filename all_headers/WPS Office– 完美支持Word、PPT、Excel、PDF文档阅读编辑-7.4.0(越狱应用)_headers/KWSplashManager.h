//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class KWSplashCache, KWSplashRequest, NSDate, ksReachability;

@interface KWSplashManager : NSObject
{
    KWSplashRequest *_splashRequest;
    KWSplashCache *_splashCache;
    _Bool _appIsEnterBackground;
    _Bool _keyboardIsShowing;
    NSDate *_startGetSplashDate;
    NSDate *_enterBackgroundDate;
    CDUnknownBlockType _canDisplaySplashResult;
    CDUnknownBlockType _shouldShowThirdPartyBlock;
    _Bool _isShowSplash;
    _Bool _isShowHelpSplash;
    _Bool _isLaunchGetSplashing;
    _Bool _appIsLandscapeEnterBackground;
    _Bool _isInAuthLogin;
    unsigned long long _openAppType;
    double _launchGetSplashTimeout;
    CDUnknownBlockType _willBackgroundEnterDispalySplash;
    CDUnknownBlockType _willDeletedAllCache;
    CDUnknownBlockType _willLaunchShowSplash;
    ksReachability *_reachability;
    NSObject *_lockObject;
}

+ (void)eventWithName:(id)arg1 splash:(id)arg2 parasms:(id)arg3;
+ (void)eventWithName:(id)arg1 splash:(id)arg2;
+ (id)sharedManager;
@property(retain, nonatomic) NSObject *lockObject; // @synthesize lockObject=_lockObject;
@property(retain, nonatomic) ksReachability *reachability; // @synthesize reachability=_reachability;
@property(copy, nonatomic) CDUnknownBlockType willLaunchShowSplash; // @synthesize willLaunchShowSplash=_willLaunchShowSplash;
@property(copy, nonatomic) CDUnknownBlockType willDeletedAllCache; // @synthesize willDeletedAllCache=_willDeletedAllCache;
@property(copy, nonatomic) CDUnknownBlockType willBackgroundEnterDispalySplash; // @synthesize willBackgroundEnterDispalySplash=_willBackgroundEnterDispalySplash;
@property(nonatomic) double launchGetSplashTimeout; // @synthesize launchGetSplashTimeout=_launchGetSplashTimeout;
@property(nonatomic) _Bool isInAuthLogin; // @synthesize isInAuthLogin=_isInAuthLogin;
@property(nonatomic) _Bool appIsLandscapeEnterBackground; // @synthesize appIsLandscapeEnterBackground=_appIsLandscapeEnterBackground;
@property(nonatomic) _Bool isLaunchGetSplashing; // @synthesize isLaunchGetSplashing=_isLaunchGetSplashing;
@property(nonatomic) unsigned long long openAppType; // @synthesize openAppType=_openAppType;
- (void).cxx_destruct;
- (id)log;
- (id)log:(id)arg1 withSplash:(id)arg2;
- (id)globalLog:(id)arg1;
- (void)deleteAllCache;
- (void)eventWithName:(id)arg1 splash:(id)arg2 parasms:(id)arg3;
- (void)eventWithName:(id)arg1 splash:(id)arg2;
- (_Bool)isUSVersion;
- (_Bool)isShieldingVersions;
- (_Bool)isNeedShowBuyVip;
- (double)getLaunchAppWaitingDuration;
- (void)setSwitchConfigTrackInfo:(id)arg1;
- (id)switchConfigTrackInfo;
- (id)switchConfigInfo;
- (id)switchConfig;
- (void)splashPopupWithAction:(id)arg1;
- (void)splashPopup:(id)arg1;
- (void)eventForSplashShow:(id)arg1 splash:(id)arg2 cache:(_Bool)arg3;
- (void)recordSplash:(id)arg1 cache:(_Bool)arg2;
- (void)recordHelpGlobalTrackInfo;
- (void)recordGlobalTrackInfo;
- (void)setShowHelpSplash;
- (void)setShowSplash;
- (_Bool)checkSplash:(id)arg1;
- (_Bool)checkThirdPartySplashSwitchConfig;
- (_Bool)checkSplashSwitchConfig;
- (_Bool)checkHelpSplashSwitchConfig;
- (void)clearAdPopCache;
- (void)recordAdPopHasCloseCount;
- (void)recordAdPopHasDistancedCount;
- (void)recordAdPopShowCount;
- (void)downloadAdPopWithResult:(CDUnknownBlockType)arg1;
- (void)downloadSplash:(id)arg1 result:(CDUnknownBlockType)arg2;
- (id)checkShouldDisplayHelpSplash;
- (id)getCacheHelpSplash;
- (id)checkShouldDisplaySplash;
- (id)getCacheSplash;
- (void)getSplashWithResult:(CDUnknownBlockType)arg1 shouldShowThirdPartySplash:(CDUnknownBlockType)arg2;
- (void)loadHelpSplashWithResult:(CDUnknownBlockType)arg1;
- (void)requestAndDownloadHelpSplash;
- (void)loadSplashWithResult:(CDUnknownBlockType)arg1;
- (void)loadSplashSwitchConfig:(CDUnknownBlockType)arg1;
- (void)checkOpenAppTypeWithOptions:(id)arg1;
- (void)didBecomeActiveNotification:(id)arg1;
- (void)enterBackgroundNotification:(id)arg1;
- (void)willTerminateNotification:(id)arg1;
- (void)keyboardWillBeHidden:(id)arg1;
- (void)keyboardWillShow:(id)arg1;
- (id)init;

@end

