//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "BBAAudioPlayBase.h"

#import "BBAAudioMiniPlayerBarDelegate-Protocol.h"

@class BBAAudioBaseMiniPlayerBar, NSString, UIView, UIViewController;
@protocol BBAAudioMiniPlayerDelegate;

@interface BBAAudioMiniPlayer : BBAAudioPlayBase <BBAAudioMiniPlayerBarDelegate>
{
    _Bool _isOnceClosedByUser;
    double _animationDuration;
    double _audioCurrentTime;
    double _audioDuration;
    long long _abTestStatus;
    id <BBAAudioMiniPlayerDelegate> _delegate;
    long long _animationgMode;
    UIView *_superView;
    UIViewController *_superViewController;
    double _miniPlayerHeight;
    double _currentLoadProgress;
    BBAAudioBaseMiniPlayerBar *_miniPlayerBar;
}

+ (id)sharedInstance;
@property(retain, nonatomic) BBAAudioBaseMiniPlayerBar *miniPlayerBar; // @synthesize miniPlayerBar=_miniPlayerBar;
@property(nonatomic) double currentLoadProgress; // @synthesize currentLoadProgress=_currentLoadProgress;
@property(nonatomic) double miniPlayerHeight; // @synthesize miniPlayerHeight=_miniPlayerHeight;
@property(nonatomic) __weak UIViewController *superViewController; // @synthesize superViewController=_superViewController;
@property(nonatomic) __weak UIView *superView; // @synthesize superView=_superView;
@property(nonatomic) long long animationgMode; // @synthesize animationgMode=_animationgMode;
@property(nonatomic) _Bool isOnceClosedByUser; // @synthesize isOnceClosedByUser=_isOnceClosedByUser;
@property(nonatomic) __weak id <BBAAudioMiniPlayerDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) long long abTestStatus; // @synthesize abTestStatus=_abTestStatus;
@property(readonly, nonatomic) double audioDuration; // @synthesize audioDuration=_audioDuration;
@property(readonly, nonatomic) double audioCurrentTime; // @synthesize audioCurrentTime=_audioCurrentTime;
@property(nonatomic) double animationDuration; // @synthesize animationDuration=_animationDuration;
- (void).cxx_destruct;
- (unsigned long long)supportedInterfaceOrientations;
- (_Bool)shouldAutorotate;
- (void)trackDetailBtnClk;
- (void)detailBtnClicked;
- (void)titleViewClicked:(id)arg1;
- (void)trackMiniBarPicClk;
- (void)showFullScreenPlayer:(id)arg1;
- (void)playLastAudioWithDoneBlock:(CDUnknownBlockType)arg1;
- (void)playNextAudioWithDoneBlock:(CDUnknownBlockType)arg1;
- (void)closeAudioPlayer:(id)arg1;
- (void)playOrPause;
- (void)closePlayer;
- (void)p_titleViewButtonClicked:(id)arg1;
- (void)resetPlayControllerStatus;
- (void)resetPlayerTTSStatus;
- (void)applicationWillEnterForeground;
- (void)didFailedWithErrorInfo:(id)arg1;
- (void)updateTTSPlayerStatus:(long long)arg1;
- (void)updatePlayerStatus:(long long)arg1 withCurrent:(double)arg2;
- (void)updateAudioLoadProgress:(float)arg1;
- (void)updateAudioPlayProgress:(float)arg1 withDuration:(double)arg2 withCurrent:(double)arg3;
- (void)updateAudioItemInfo:(id)arg1;
- (void)onProgressValueManualChanged:(double)arg1;
- (void)p_pullFullScreenPlayer:(id)arg1;
- (void)showCloseAlert:(id)arg1;
- (void)p_closeBtnClicked:(id)arg1;
- (void)changePlayControlButtonStatus:(unsigned long long)arg1 enabled:(_Bool)arg2;
- (void)refreshRollingView;
- (void)refreshMiniBarStatusFailure;
- (void)refreshMiniBarStatusDefault;
- (void)refreshMiniBarStatus;
- (void)p_hiddenMiniPlayer:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;
- (void)p_showMiniPlayer:(_Bool)arg1 offset:(double)arg2 completion:(CDUnknownBlockType)arg3;
- (void)dismissMiniPlayer:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;
- (void)showMiniPlayer:(_Bool)arg1 offset:(double)arg2 completion:(CDUnknownBlockType)arg3;
- (void)showMiniPlayer:(_Bool)arg1 offset:(double)arg2;
- (void)loadMiniPlayerBar;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (void)loadView;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

