//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#pragma mark Function Pointers and Blocks

typedef void (*CDUnknownFunctionPointerType)(void); // return type and parameters are unknown

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct AMREncodeFloat {
    void *_field1;
};

struct AppInfo {
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field1;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field2;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field3;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field4;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field5;
    struct map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char>>>> _field6;
};

struct AppSession {
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field1;
    struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> _field2;
};

struct Attachment {
    char _field1;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field2;
    struct vector<char, std::__1::allocator<char>> _field3;
};

struct AudioBuffer {
    unsigned int _field1;
    unsigned int _field2;
    void *_field3;
};

struct AudioBufferList {
    unsigned int _field1;
    struct AudioBuffer _field2[1];
};

struct AudioQueueBuffer {
    unsigned int _field1;
    void *_field2;
    unsigned int _field3;
    void *_field4;
    unsigned int _field5;
    struct AudioStreamPacketDescription *_field6;
    unsigned int _field7;
};

struct AudioStreamBasicDescription {
    double mSampleRate;
    unsigned int mFormatID;
    unsigned int mFormatFlags;
    unsigned int mBytesPerPacket;
    unsigned int mFramesPerPacket;
    unsigned int mBytesPerFrame;
    unsigned int mChannelsPerFrame;
    unsigned int mBitsPerChannel;
    unsigned int mReserved;
};

struct AudioStreamPacketDescription {
    long long mStartOffset;
    unsigned int mVariableFramesInPacket;
    unsigned int mDataByteSize;
};

struct AuthToken {
    int _field1;
    vector_a7fb0c12 _field2;
    vector_a7fb0c12 _field3;
    int _field4;
};

struct AutoFaceProcessor {
    struct {
        int _field1;
        int _field2;
    } _field1[62];
    struct {
        int _field1;
        int _field2;
    } _field2[7];
    struct {
        int _field1;
        int _field2;
    } _field3[7];
    struct {
        int _field1;
        int _field2;
    } _field4[9];
    struct {
        int _field1;
        int _field2;
    } _field5[9];
    int _field6[166];
    float _field7;
    unsigned char _field8[256];
    struct _AutoFaceInfo _field9;
    _Bool _field10;
    float _field11[34];
    float _field12[34];
    struct _Image *_field13;
    struct _Image *_field14;
    struct _Image *_field15;
    struct _Image *_field16;
    struct _Image *_field17;
    struct _Image *_field18;
    _Bool _field19;
    _Bool _field20;
    int _field21;
    struct _Rect _field22;
    struct _Rect _field23;
    int *_field24;
    int _field25;
    struct _Rect _field26;
    struct _Rect _field27;
    struct _Image *_field28;
    struct _Image *_field29;
    struct _Rect _field30;
    struct _Rect _field31;
    struct _Image *_field32;
    struct _Image *_field33;
    struct _Image *_field34;
    struct _Image *_field35;
    struct _Image *_field36;
    struct _Rect _field37;
    struct _Image *_field38;
    struct _Rect _field39;
    struct HighLightRemoval *_field40;
    struct _EyeDetectParam _field41[2];
    _Bool _field42;
};

struct CATransform3D {
    double m11;
    double m12;
    double m13;
    double m14;
    double m21;
    double m22;
    double m23;
    double m24;
    double m31;
    double m32;
    double m33;
    double m34;
    double m41;
    double m42;
    double m43;
    double m44;
};

struct CGAffineTransform {
    double a;
    double b;
    double c;
    double d;
    double tx;
    double ty;
};

struct CGPoint {
    double x;
    double y;
};

struct CGRect {
    struct CGPoint origin;
    struct CGSize size;
};

struct CGSize {
    double width;
    double height;
};

struct CLLocationCoordinate2D {
    double _field1;
    double _field2;
};

struct CNNConvolutionPara {
    int numGroup;
    int inputChannel;
    int outputChannel;
    int kernelHeight;
    int kernelWidth;
    int strideHeight;
    int strideWidth;
    int padHeight;
    int padWidth;
    int dilationHeight;
    int dilationWidth;
    int outputPadHeight;
    int outputPadWidth;
};

struct CNNDimension {
    int num;
    int channel;
    int height;
    int width;
    int padHeight;
    int padWidth;
    int packedWidth;
};

struct CosmeticProcessor {
    struct HairRecolor *_field1;
    struct hairGabor *_field2;
    int _field3;
    struct _IplImage *_field4;
    struct _IplImage *_field5;
    struct _IplImage *_field6;
    struct _IplImage *_field7;
    struct _IplImage *_field8;
    struct _IplImage *_field9;
    struct _IplImage *_field10;
    struct _IplImage *_field11;
    struct _IplImage *_field12;
    struct _IplImage *_field13[41];
    struct _IplImage *_field14;
    struct _IplImage *_field15;
    struct _IplImage *_field16;
    struct _IplImage *_field17;
    struct _IplImage *_field18;
    struct _IplImage *_field19;
    struct _IplImage *_field20;
    struct _IplImage *_field21;
    struct _IplImage *_field22;
    struct _IplImage *_field23;
    struct _IplImage *_field24;
    struct _IplImage *_field25;
    struct _IplImage *_field26;
    struct _IplImage *_field27;
    struct CvRect _field28;
    struct CvRect _field29;
    struct CvRect _field30;
    struct CvRect _field31;
    _Bool _field32;
    _Bool _field33;
    _Bool _field34;
    _Bool _field35;
    int _field36;
    int _field37;
    int _field38[83][2];
    int _field39[8][2];
    int _field40[8][2];
    int _field41[8][2];
    int _field42[8][2];
    int _field43[16][2];
    int _field44[9][2];
    int _field45[41];
    int _field46[41][64];
    double _field47[41];
    double _field48;
    double _field49;
    double _field50;
    double _field51;
    struct _EyeDetectParam _field52[2];
    unsigned char _field53[3];
    unsigned char _field54[3];
    unsigned char _field55[3];
    unsigned char _field56[3];
    struct stack<int *, std::__1::deque<int *, std::__1::allocator<int *>>> _field57;
    struct stack<int *, std::__1::deque<int *, std::__1::allocator<int *>>> _field58;
    int _field59[11];
    _Bool _field60;
};

struct CvHaarClassifierCascade {
    int _field1;
    int _field2;
    struct CvSize _field3;
    struct CvSize _field4;
    double _field5;
    struct CvHaarStageClassifier *_field6;
    struct CvHidHaarClassifierCascade *_field7;
};

struct CvHaarStageClassifier;

struct CvHidHaarClassifierCascade;

struct CvRect {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
};

struct CvSize {
    int _field1;
    int _field2;
};

struct DNSCache;

struct ExceptionUpload {
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field1;
    long long _field2;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field3;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field4;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field5;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field6;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field7;
    struct map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char>>>> _field8;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field9;
    struct AppSession _field10;
    int _field11;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field12;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field13;
    struct AppInfo _field14;
    struct vector<rqd::AppInfo, std::__1::allocator<rqd::AppInfo>> _field15;
    struct vector<rqd::AppInfo, std::__1::allocator<rqd::AppInfo>> _field16;
    struct vector<rqd::Attachment, std::__1::allocator<rqd::Attachment>> _field17;
    struct map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char>>>> _field18;
    struct map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char>>>> _field19;
};

struct ExceptionUploadPackage {
    struct vector<rqd::ExceptionUpload, std::__1::allocator<rqd::ExceptionUpload>> _field1;
};

struct FaceDetectionParam {
    int min_face_size;
    int max_face_size;
    float scale_factor;
    _Bool big_face_only;
    float cls_threshold;
    float nms_threshold;
    float final_threshold;
    int num_threads;
    int pre_resize_size;
    _Bool non_square_rect;
    int big_face_only_ext_scales;
};

struct FacePicAlignRunner {
    struct UFAPic *_field1;
    struct PtsPostProcPic *_field2;
};

struct FileCommitReq {
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field1;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field2;
    vector_a7fb0c12 _field3;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field4;
};

struct FileControlReq {
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field1;
    struct AuthToken _field2;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field3;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field4;
    int _field5;
    long long _field6;
    struct stEnvironment _field7;
    int _field8;
    vector_a7fb0c12 _field9;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field10;
    _Bool _field11;
    int _field12;
};

struct FileUploadControlReq {
    vector_a7fb0c12 _field1;
};

struct GPUMatrix3x3 {
    struct GPUVector3 _field1;
    struct GPUVector3 _field2;
    struct GPUVector3 _field3;
};

struct GPUMatrix4x4 {
    struct GPUVector4 one;
    struct GPUVector4 two;
    struct GPUVector4 three;
    struct GPUVector4 four;
};

struct GPUVector2 {
    float _field1;
    float _field2;
};

struct GPUVector3 {
    float one;
    float two;
    float three;
};

struct GPUVector4 {
    float one;
    float two;
    float three;
    float four;
};

struct Graph<float, float, float>;

struct HFGLTextureOptions {
    unsigned int minFilter;
    unsigned int magFilter;
    unsigned int wrapS;
    unsigned int wrapT;
    unsigned int glFormat;
    unsigned int iosFormat;
    unsigned int type;
};

struct HairRecolor;

struct HandBoxStablizer;

struct HandClassify;

struct HighLightRemoval;

struct HttpClient {
    struct Socket _field1;
    struct HttpResponse *_field2;
    struct HttpRequest *_field3;
    struct SocketAsyncEventArgs *_field4;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field5;
    struct list<wxvoice::SocketAsyncEventArgs *, std::__1::allocator<wxvoice::SocketAsyncEventArgs *>> _field6;
    CDUnknownFunctionPointerType _field7;
    int _field8;
    int _field9;
    struct MutexLock _field10;
    int _field11;
};

struct HttpRequest {
    int _field1;
    int _field2;
    _Bool _field3;
    _Bool _field4;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field5;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field6;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field7;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field8;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field9;
};

struct HttpResponse {
    int _field1;
    int _field2;
    int _field3;
    char *_field4;
    char *_field5;
    _Bool _field6;
};

struct JKConstBuffer {
    struct JKConstPtrRange _field1;
};

struct JKConstPtrRange {
    char *_field1;
    unsigned long long _field2;
};

struct JKEncodeCache {
    id _field1;
    unsigned long long _field2;
    unsigned long long _field3;
};

struct JKEncodeState {
    struct JKManagedBuffer _field1;
    struct JKManagedBuffer _field2;
    unsigned long long _field3;
    struct JKFastClassLookup _field4;
    struct JKEncodeCache _field5[1024];
    unsigned long long _field6;
    unsigned long long _field7;
    unsigned long long _field8;
    id _field9;
    id _field10;
    SEL _field11;
    CDUnknownFunctionPointerType _field12;
    CDUnknownBlockType _field13;
};

struct JKFastClassLookup {
    void *_field1;
    void *_field2;
    void *_field3;
    void *_field4;
    void *_field5;
};

struct JKHashTableEntry {
    unsigned long long _field1;
    id _field2;
    id _field3;
};

struct JKManagedBuffer {
    struct JKPtrRange _field1;
    unsigned long long _field2;
    unsigned long long _field3;
};

struct JKObjCImpCache {
    Class _field1;
    CDUnknownFunctionPointerType _field2;
    CDUnknownFunctionPointerType _field3;
};

struct JKObjectStack {
    void **_field1;
    void **_field2;
    unsigned long long *_field3;
    unsigned long long _field4;
    unsigned long long _field5;
    unsigned long long _field6;
    unsigned long long _field7;
};

struct JKParseState {
    unsigned long long _field1;
    struct JKConstBuffer _field2;
    unsigned long long _field3;
    unsigned long long _field4;
    unsigned long long _field5;
    unsigned long long _field6;
    unsigned long long _field7;
    unsigned long long _field8;
    struct JKParseToken _field9;
    struct JKObjectStack _field10;
    struct JKTokenCache _field11;
    struct JKObjCImpCache _field12;
    id _field13;
    int _field14;
    _Bool _field15;
};

struct JKParseToken {
    struct JKConstPtrRange _field1;
    unsigned long long _field2;
    struct JKTokenValue _field3;
    struct JKManagedBuffer _field4;
};

struct JKPtrRange {
    char *_field1;
    unsigned long long _field2;
};

struct JKTokenCache {
    struct JKTokenCacheItem *_field1;
    unsigned long long _field2;
    unsigned int _field3;
    unsigned char _field4[1024];
};

struct JKTokenCacheItem;

struct JKTokenValue {
    struct JKConstPtrRange _field1;
    unsigned long long _field2;
    unsigned long long _field3;
    CDUnion_abebb5d1 _field4;
    struct JKTokenCacheItem *_field5;
};

struct JceInputStream<taf::BufferReader> {
    char *_field1;
    unsigned long long _field2;
    unsigned long long _field3;
};

struct JceOutputStream<taf::BufferWriter> {
    char *_field1;
    unsigned long long _field2;
    unsigned long long _field3;
};

struct LazySnapApi {
    CDUnknownFunctionPointerType *_field1;
    struct PaintSelect *_field2;
};

struct LensFlareProcessor {
    float _field1;
    float _field2;
    _Bool _field3;
    int _field4;
    float _field5;
    float _field6;
    int _field7;
    float _field8;
    struct _Image *_field9;
    struct vector<connectedRegion, std::__1::allocator<connectedRegion>> _field10;
    struct vector<connectedRegion, std::__1::allocator<connectedRegion>> _field11;
    vector_e0f2bd7e _field12;
};

struct Loop {
    struct Thread _field1;
    struct MutexLock _field2;
    _Bool _field3;
    _Bool _field4;
    int _field5;
    struct list<wxvoice::SocketAsyncEventArgs *, std::__1::allocator<wxvoice::SocketAsyncEventArgs *>> _field6;
    struct vector<wxvoice::SocketAsyncEventArgs *, std::__1::allocator<wxvoice::SocketAsyncEventArgs *>> _field7;
    struct set<int, std::__1::less<int>, std::__1::allocator<int>> _field8;
};

struct MSize {
    int *_field1;
};

struct MStep {
    unsigned long long *_field1;
    unsigned long long _field2[2];
};

struct MTLUInt2 {
    unsigned int x;
    unsigned int y;
};

struct MagicPenProcessor {
    struct _Image *_field1;
    struct _Image *_field2;
    struct _Rect _field3;
    struct _Image *_field4;
    struct _Image *_field5;
    struct _Image *_field6;
    struct _Image *_field7;
    struct _Image *_field8;
    int _field9;
    int _field10;
    int _field11;
    int _field12;
    int _field13;
    int _field14;
    int _field15;
    float _field16;
    float _field17;
    int _field18;
    union {
        unsigned int _field1;
        struct {
            unsigned char _field1;
            unsigned char _field2;
            unsigned char _field3;
            unsigned char _field4;
        } _field2;
    } _field19;
    struct vector<_Image *, std::__1::allocator<_Image *>> _field20;
    struct vector<_Image *, std::__1::allocator<_Image *>> _field21;
    struct vector<_Rect, std::__1::allocator<_Rect>> _field22;
    int _field23;
    int _field24;
    struct _Image *_field25;
    struct vector<_Image *, std::__1::allocator<_Image *>> _field26;
    struct vector<_Image *, std::__1::allocator<_Image *>> _field27;
    struct vector<_Image *, std::__1::allocator<_Image *>> _field28;
    float _field29;
    float _field30;
    float _field31;
    float _field32;
    _Bool _field33;
    _Bool _field34;
    float _field35;
    float _field36;
    int _field37;
    _Bool _field38;
    int _field39;
    struct {
        int _field1;
        int _field2;
    } _field40;
    struct {
        int _field1;
        int _field2;
    } _field41;
    _Bool _field42;
    float _field43;
    float _field44;
    int _field45;
    _Bool _field46;
    int _field47;
    struct vector<MPoint, std::__1::allocator<MPoint>> _field48;
    int _field49;
    int _field50;
    int _field51;
    int _field52;
    struct vector<Point2f, std::__1::allocator<Point2f>> _field53;
    struct vector<MPoint, std::__1::allocator<MPoint>> _field54;
    float *_field55;
    int _field56;
    _Bool _field57;
    struct vector<float, std::__1::allocator<float>> _field58;
    _Bool _field59;
    struct _Image *_field60;
    int _field61;
    float _field62;
};

struct ManualHandleBase {
    CDUnknownFunctionPointerType *_field1;
};

struct Mat {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
    char *_field5;
    int *_field6;
    char *_field7;
    char *_field8;
    char *_field9;
    struct MatAllocator *_field10;
    struct MSize _field11;
    struct MStep _field12;
};

struct MatAllocator;

struct MultiPicInfo {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
};

struct MutexLock {
    struct _opaque_pthread_mutex_t _field1;
};

struct NewOilPaintWithTwoBrush {
    char *_field1;
    char *_field2;
    char *_field3;
    char *_field4;
    char *_field5;
    float *_field6;
    float *_field7;
    float *_field8;
    char *_field9;
    char *_field10;
    float *_field11;
    int _field12;
    int _field13;
    int _field14;
    unsigned long long _field15;
    unsigned long long _field16;
    unsigned long long _field17;
    unsigned long long _field18;
    int _field19;
    int _field20;
    int _field21;
    int _field22;
    char *_field23[10];
    int _field24;
    int _field25;
    int _field26;
    int _field27;
    struct _Rect _field28;
    struct _Rect _field29;
    struct _Rect _field30;
    struct _Rect _field31;
    float *_field32;
    float _field33;
};

struct PCMFifoBuffer;

struct PaintSelect;

struct PaintSelection {
    struct _Image *_field1;
    struct _Image *_field2;
    struct _Image *_field3;
    struct _Image *_field4;
    struct _Image *_field5;
    struct _Image *_field6;
    unsigned short _field7;
    unsigned short _field8;
    unsigned short _field9;
    unsigned short *_field10;
    unsigned short *_field11;
    unsigned short _field12;
    int *_field13;
    char *_field14;
    double _field15;
    struct Graph<float, float, float> *_field16;
    int *_field17;
    int _field18;
    struct _Image *_field19;
    struct _Gaussian *_field20;
    struct _Gaussian *_field21;
    double _field22[9180];
    double *_field23;
    double *_field24;
    int _field25;
    int _field26;
    int _field27;
    double *_field28;
    struct vector<_FILL_FRONT, std::__1::allocator<_FILL_FRONT>> _field29;
    double *_field30;
    char *_field31;
};

struct PicExtendInfo {
    int _field1;
    struct vector<UploadSDK::FileUpload::QuanInfo, std::allocator<UploadSDK::FileUpload::QuanInfo>> _field2;
    struct map<std::basic_string<char>, std::basic_string<char>, std::less<std::basic_string<char>>, std::allocator<std::pair<const std::basic_string<char>, std::basic_string<char>>>> _field3;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field4;
    struct map<std::basic_string<char>, std::basic_string<char>, std::less<std::basic_string<char>>, std::allocator<std::pair<const std::basic_string<char>, std::basic_string<char>>>> _field5;
};

struct Point_<float>;

struct PreuploadPicInfo {
    struct UploadPicInfoReq _field1;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field2;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field3;
    long long _field4;
    int _field5;
    int _field6;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field7;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field8;
    int _field9;
    int _field10;
    long long _field11;
};

struct PtsPostProc;

struct PtsPostProcPic;

struct QQAVBeauty2 {
    unsigned int _field1;
    unsigned int _field2;
    unsigned char _field3;
    char *_field4;
    char *_field5;
    int _field6;
    char *_field7;
    char *_field8;
    char *_field9;
};

struct QuanInfo;

struct QuanPhotoReq {
    struct vector<QuanPhotoUpload::FaceItem, std::allocator<QuanPhotoUpload::FaceItem>> _field1;
};

struct RFunction;

struct ROperation {
    CDUnknownFunctionPointerType *_field1;
    double **_field2;
    double *_field3;
    struct RFunction **_field4;
    char _field5;
    int _field6;
    struct ROperation *_field7;
    struct ROperation *_field8;
    double _field9;
    struct RVar *_field10;
    double *_field11;
    struct RFunction *_field12;
};

struct RVar;

struct RapidnetInstance {
    CDUnknownFunctionPointerType *_field1;
    struct rpdnet_cpu *_field2;
    int _field3;
};

struct Rect_<int> {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RequestPkg {
    int _field1;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field2;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field3;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field4;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field5;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field6;
    int _field7;
    struct vector<char, std::__1::allocator<char>> _field8;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field9;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field10;
    struct map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char>>>> _field11;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field12;
};

struct ResponsePkg {
    char _field1;
    int _field2;
    struct vector<char, std::__1::allocator<char>> _field3;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field4;
    long long _field5;
};

struct SCNMatrix4 {
    float m11;
    float m12;
    float m13;
    float m14;
    float m21;
    float m22;
    float m23;
    float m24;
    float m31;
    float m32;
    float m33;
    float m34;
    float m41;
    float m42;
    float m43;
    float m44;
};

struct SCNVector3 {
    float x;
    float y;
    float z;
};

struct SCNVector4 {
    float x;
    float y;
    float z;
    float w;
};

struct SWUploadPicReq {
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field1;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field2;
    int _field3;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field4;
    long long _field5;
    int _field6;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field7;
    int _field8;
    int _field9;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field10;
    int _field11;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field12;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field13;
    int _field14;
    int _field15;
    int _field16;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field17;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field18;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field19;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field20;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field21;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field22;
    int _field23;
    vector_a7fb0c12 _field24;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field25;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field26;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field27;
};

struct SegmentPreprocessPara {
    int outputWidth;
    int outputHeight;
    int padWidth;
    int padHeight;
    int flipX;
    int flipY;
};

struct ShuoshuoInfoReq {
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field1;
    int _field2;
    long long _field3;
    vector_a7fb0c12 _field4;
    struct vector<UploadSDK::FileUpload::ShuoshuoPicInfo, std::allocator<UploadSDK::FileUpload::ShuoshuoPicInfo>> _field5;
};

struct Socket {
    int _field1;
    _Bool _field2;
    struct sockaddr_in6 _field3;
    struct Loop *_field4;
    int _field5;
    struct DNSCache _field6;
};

struct SocketAsyncEventArgs;

struct SpeexBits {
    char *chars;
    int nbBits;
    int charPtr;
    int bitPtr;
    int owner;
    int overflow;
    int buf_size;
    int reserved1;
    void *reserved2;
};

struct SummaryInfo {
    long long _field1;
    char _field2;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field3;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field4;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field5;
};

struct SvcRequestHead {
    short _field1;
    long long _field2;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field3;
    int _field4;
    vector_a7fb0c12 _field5;
    int _field6;
    int _field7;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field8;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field9;
    long long _field10;
    long long _field11;
    int _field12;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field13;
    int _field14;
    int _field15;
    int _field16;
    vector_a7fb0c12 _field17;
    int _field18;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field19;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field20;
    long long _field21;
    int _field22;
    int _field23;
    int _field24;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field25;
    int _field26;
    int _field27;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field28;
    int _field29;
    struct map<std::basic_string<char>, std::vector<char, std::allocator<char>>, std::less<std::basic_string<char>>, std::allocator<std::pair<const std::basic_string<char>, std::vector<char, std::allocator<char>>>>> _field30;
    int _field31;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field32;
    struct WeiyunUpload _field33;
    int _field34;
    struct map<std::basic_string<char>, std::basic_string<char>, std::less<std::basic_string<char>>, std::allocator<std::pair<const std::basic_string<char>, std::basic_string<char>>>> _field35;
};

struct TC_FaceAlignmentRunner {
    struct UFA *_field1;
    struct PtsPostProc *_field2;
    struct YTFaceRefiner *_field3;
    _Bool _field4;
};

struct Thread {
    struct _opaque_pthread_t *_field1;
    CDUnknownFunctionPointerType _field2;
    void *_field3;
    _Bool _field4;
    _Bool _field5;
};

struct UFA;

struct UFAPic;

struct UIEdgeInsets {
    double top;
    double left;
    double bottom;
    double right;
};

struct UniPacket<taf::BufferWriter, taf::BufferReader, std::allocator> {
    short _field1;
    char _field2;
    int _field3;
    int _field4;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field5;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field6;
    vector_a7fb0c12 _field7;
    int _field8;
    struct map<std::basic_string<char>, std::basic_string<char>, std::less<std::basic_string<char>>, std::allocator<std::pair<const std::basic_string<char>, std::basic_string<char>>>> _field9;
    struct map<std::basic_string<char>, std::basic_string<char>, std::less<std::basic_string<char>>, std::allocator<std::pair<const std::basic_string<char>, std::basic_string<char>>>> _field10;
    struct map<std::basic_string<char>, std::map<std::basic_string<char>, std::vector<char, std::allocator<char>>, std::less<std::basic_string<char>>, std::allocator<std::pair<std::basic_string<char>, std::vector<char, std::allocator<char>>>>>, std::less<std::basic_string<char>>, std::allocator<std::pair<std::basic_string<char>, std::map<std::basic_string<char>, std::vector<char, std::allocator<char>>, std::less<std::basic_string<char>>, std::allocator<std::pair<std::basic_string<char>, std::vector<char, std::allocator<char>>>>>>>> _field11;
    struct map<std::basic_string<char>, std::vector<char, std::allocator<char>>, std::less<std::basic_string<char>>, std::allocator<std::pair<std::basic_string<char>, std::vector<char, std::allocator<char>>>>> _field12;
    short _field13;
    struct JceInputStream<taf::BufferReader> _field14;
    struct JceOutputStream<taf::BufferWriter> _field15;
};

struct UploadPicInfoReq {
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field1;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field2;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field3;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field4;
    int _field5;
    int _field6;
    int _field7;
    int _field8;
    long long _field9;
    struct MultiPicInfo _field10;
    struct PicExtendInfo _field11;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field12;
    int _field13;
    int _field14;
    int _field15;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field16;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field17;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field18;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field19;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field20;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field21;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field22;
    int _field23;
    long long _field24;
    struct map<std::basic_string<char>, std::basic_string<char>, std::less<std::basic_string<char>>, std::allocator<std::pair<const std::basic_string<char>, std::basic_string<char>>>> _field25;
    int _field26;
    struct stPoi _field27;
    struct stWaterTemplate _field28;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field29;
    int _field30;
    vector_a7fb0c12 _field31;
    struct map<std::basic_string<char>, std::basic_string<char>, std::less<std::basic_string<char>>, std::allocator<std::pair<const std::basic_string<char>, std::basic_string<char>>>> _field32;
};

struct UploadPicInfoRsp {
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field1;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field2;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field3;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field4;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field5;
    int _field6;
    int _field7;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field8;
    int _field9;
    int _field10;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field11;
    int _field12;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field13;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field14;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field15;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field16;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field17;
    struct stWaterTemplate _field18;
    int _field19;
    vector_a7fb0c12 _field20;
};

struct UploadReq {
    unsigned int _field1;
    int _field2;
    unsigned short _field3;
    vector_a7fb0c12 _field4;
    int _field5;
    unsigned int _field6;
    unsigned int _field7;
    unsigned int _field8;
    vector_a7fb0c12 _field9;
};

struct UploadUpsInfoReq {
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field1;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field2;
    int _field3;
    vector_a7fb0c12 _field4;
    int _field5;
    int _field6;
    char _field7;
    int _field8;
    int _field9;
    long long _field10;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field11;
    unsigned int _field12;
    unsigned int _field13;
    struct map<std::basic_string<char>, std::vector<char, std::allocator<char>>, std::less<std::basic_string<char>>, std::allocator<std::pair<const std::basic_string<char>, std::vector<char, std::allocator<char>>>>> _field14;
};

struct UploadVideoInfoReq {
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field1;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field2;
    int _field3;
    long long _field4;
    int _field5;
    vector_a7fb0c12 _field6;
    int _field7;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field8;
    int _field9;
    int _field10;
    int _field11;
};

struct UserInfoPackage {
    char _field1;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field2;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field3;
    struct vector<rqd::SummaryInfo, std::__1::allocator<rqd::SummaryInfo>> _field4;
    struct map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char>>>> _field5;
};

struct WBSDKJKConstBuffer {
    struct WBSDKJKConstPtrRange _field1;
};

struct WBSDKJKConstPtrRange {
    char *_field1;
    unsigned long long _field2;
};

struct WBSDKJKEncodeCache {
    id _field1;
    unsigned long long _field2;
    unsigned long long _field3;
};

struct WBSDKJKEncodeState {
    struct WBSDKJKManagedBuffer _field1;
    struct WBSDKJKManagedBuffer _field2;
    unsigned long long _field3;
    struct WBSDKJKFastClassLookup _field4;
    struct WBSDKJKEncodeCache _field5[1024];
    unsigned long long _field6;
    unsigned long long _field7;
    unsigned long long _field8;
    id _field9;
    id _field10;
    SEL _field11;
    CDUnknownFunctionPointerType _field12;
    CDUnknownBlockType _field13;
};

struct WBSDKJKFastClassLookup {
    void *_field1;
    void *_field2;
    void *_field3;
    void *_field4;
    void *_field5;
};

struct WBSDKJKHashTableEntry {
    unsigned long long _field1;
    id _field2;
    id _field3;
};

struct WBSDKJKManagedBuffer {
    struct WBSDKJKPtrRange _field1;
    unsigned long long _field2;
    unsigned long long _field3;
};

struct WBSDKJKObjCImpCache {
    Class _field1;
    CDUnknownFunctionPointerType _field2;
    CDUnknownFunctionPointerType _field3;
};

struct WBSDKJKObjectStack {
    void **_field1;
    void **_field2;
    unsigned long long *_field3;
    unsigned long long _field4;
    unsigned long long _field5;
    unsigned long long _field6;
    unsigned long long _field7;
};

struct WBSDKJKParseState {
    unsigned long long _field1;
    struct WBSDKJKConstBuffer _field2;
    unsigned long long _field3;
    unsigned long long _field4;
    unsigned long long _field5;
    unsigned long long _field6;
    unsigned long long _field7;
    unsigned long long _field8;
    struct WBSDKJKParseToken _field9;
    struct WBSDKJKObjectStack _field10;
    struct WBSDKJKTokenCache _field11;
    struct WBSDKJKObjCImpCache _field12;
    id _field13;
    int _field14;
    _Bool _field15;
};

struct WBSDKJKParseToken {
    struct WBSDKJKConstPtrRange _field1;
    unsigned long long _field2;
    struct WBSDKJKTokenValue _field3;
    struct WBSDKJKManagedBuffer _field4;
};

struct WBSDKJKPtrRange {
    char *_field1;
    unsigned long long _field2;
};

struct WBSDKJKTokenCache {
    struct WBSDKJKTokenCacheItem *_field1;
    unsigned long long _field2;
    unsigned int _field3;
    unsigned char _field4[1024];
};

struct WBSDKJKTokenCacheItem;

struct WBSDKJKTokenValue {
    struct WBSDKJKConstPtrRange _field1;
    unsigned long long _field2;
    unsigned long long _field3;
    CDUnion_abebb5d1 _field4;
    struct WBSDKJKTokenCacheItem *_field5;
};

struct WXVoiceEngine {
    struct Loop _field1;
    struct HttpRequest _field2;
    struct HttpResponse _field3;
    struct HttpClient _field4;
};

struct WeiyunUpload {
    vector_a7fb0c12 _field1;
    vector_a7fb0c12 _field2;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field3;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field4;
    unsigned int _field5;
};

struct WnsLoginCallback;

struct WnsLoginManager;

struct WnsOCDataSource;

struct WnsUniversalSDK;

struct YTFaceRefiner;

struct YTHandAlignmentSdk {
    struct YtHandBoxAlignmentSdk *_field1;
};

struct YTHandStablizerSdk {
    struct HandBoxStablizer *_field1;
};

struct YtHandBox {
    float x;
    float y;
    float width;
    float height;
    float confidence;
};

struct YtHandBoxAlignmentSdk;

struct YtHandClassifySdk {
    struct HandClassify *_field1;
};

struct YtHandDetection;

struct YtHandDetectionSdk {
    struct YtHandDetection *_field1;
};

struct _Alloc_hider {
    char *_field1;
};

struct _AutoFaceInfo {
    struct _Rect _field1;
    struct _Rect _field2;
    struct _Rect _field3;
    struct _Rect _field4;
};

struct _EyeDetectParam {
    int _field1;
    int _field2;
    int _field3;
    int _field4[256][2];
    double _field5[10][2];
    struct _Rect _field6;
};

struct _FILL_FRONT;

struct _Gaussian;

struct _Image {
    char *data;
    unsigned long long data_size;
    int width;
    int height;
    int bpp;
    int bytesPerRow;
    int pixelFormat;
    int orientation;
    struct _ImageMarker *marker_list;
};

struct _ImageMarker;

struct _IplImage {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
    int _field5;
    char _field6[4];
    char _field7[4];
    int _field8;
    int _field9;
    int _field10;
    int _field11;
    int _field12;
    struct _IplROI *_field13;
    struct _IplImage *_field14;
    void *_field15;
    struct _IplTileInfo *_field16;
    int _field17;
    char *_field18;
    int _field19;
    int _field20[4];
    int _field21[4];
    char *_field22;
};

struct _IplROI;

struct _IplTileInfo;

struct _LzRange {
    unsigned long long location;
    unsigned long long length;
};

struct _NSRange {
    unsigned long long location;
    unsigned long long length;
};

struct _Rb_tree<std::basic_string<char>, std::pair<const std::basic_string<char>, std::basic_string<char>>, std::_Select1st<std::pair<const std::basic_string<char>, std::basic_string<char>>>, std::less<std::basic_string<char>>, std::allocator<std::pair<const std::basic_string<char>, std::basic_string<char>>>> {
    struct _Rb_tree_impl<std::less<std::basic_string<char>>, false> _field1;
};

struct _Rb_tree<std::basic_string<char>, std::pair<const std::basic_string<char>, std::map<std::basic_string<char>, std::vector<char, std::allocator<char>>, std::less<std::basic_string<char>>, std::allocator<std::pair<std::basic_string<char>, std::vector<char, std::allocator<char>>>>>>, std::_Select1st<std::pair<const std::basic_string<char>, std::map<std::basic_string<char>, std::vector<char, std::allocator<char>>, std::less<std::basic_string<char>>, std::allocator<std::pair<std::basic_string<char>, std::vector<char, std::allocator<char>>>>>>>, std::less<std::basic_string<char>>, std::allocator<std::pair<const std::basic_string<char>, std::map<std::basic_string<char>, std::vector<char, std::allocator<char>>, std::less<std::basic_string<char>>, std::allocator<std::pair<std::basic_string<char>, std::vector<char, std::allocator<char>>>>>>>> {
    struct _Rb_tree_impl<std::less<std::basic_string<char>>, false> _field1;
};

struct _Rb_tree<std::basic_string<char>, std::pair<const std::basic_string<char>, std::vector<char, std::allocator<char>>>, std::_Select1st<std::pair<const std::basic_string<char>, std::vector<char, std::allocator<char>>>>, std::less<std::basic_string<char>>, std::allocator<std::pair<const std::basic_string<char>, std::vector<char, std::allocator<char>>>>> {
    struct _Rb_tree_impl<std::less<std::basic_string<char>>, false> _field1;
};

struct _Rb_tree_impl<std::less<std::basic_string<char>>, false> {
    struct less<std::basic_string<char>> _field1;
    struct _Rb_tree_node_base _field2;
    unsigned long long _field3;
};

struct _Rb_tree_node_base {
    int _field1;
    struct _Rb_tree_node_base *_field2;
    struct _Rb_tree_node_base *_field3;
    struct _Rb_tree_node_base *_field4;
};

struct _Rect {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
};

struct _TC_FaceProfile {
    vector_31509e0c points;
};

struct _TC_FaceShape {
    struct _TC_FaceProfile faceProfile;
    struct _TC_LeftEyebrow leftEyebrow;
    struct _TC_RightEyebrow rightEyebrow;
    struct _TC_LeftEye leftEye;
    struct _TC_RightEye rightEye;
    struct _TC_Nose nose;
    struct _TC_Mouth mouth;
    struct _TC_Pupil pupil;
};

struct _TC_LeftEye {
    vector_31509e0c points;
};

struct _TC_LeftEyebrow {
    vector_31509e0c points;
};

struct _TC_Mouth {
    vector_31509e0c points;
};

struct _TC_Nose {
    vector_31509e0c points;
};

struct _TC_Pupil {
    vector_31509e0c points;
};

struct _TC_RightEye {
    vector_31509e0c points;
};

struct _TC_RightEyebrow {
    vector_31509e0c points;
};

struct _TRSpeexEncodeContex {
    void *st;
    struct SpeexBits bits;
    int frame_size;
    struct PCMFifoBuffer *pFifo;
};

struct __list_node<wxvoice::SocketAsyncEventArgs *, void *>;

struct __shared_weak_count;

struct __tree_end_node<std::__1::__tree_node_base<void *>*> {
    struct __tree_node_base<void *> *__left_;
};

struct _ccColor4F {
    float _field1;
    float _field2;
    float _field3;
    float _field4;
};

struct _opaque_pthread_mutex_t {
    long long __sig;
    char __opaque[56];
};

struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
    struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
        struct __rep {
            union {
                struct __long {
                    char *__data_;
                    unsigned long long __size_;
                    unsigned long long __cap_;
                } __l;
                struct __short {
                    char __data_[23];
                    struct {
                        unsigned char __size_;
                    } ;
                } __s;
                struct __raw {
                    unsigned long long __words[3];
                } __r;
            } ;
        } __first_;
    } __r_;
};

struct basic_string<char, std::char_traits<char>, std::allocator<char>> {
    struct _Alloc_hider _field1;
};

struct bignum_st;

struct bn_blinding_st;

struct bn_mont_ctx_st;

struct connectedRegion;

struct crypto_ex_data_st {
    struct stack_st_void *_field1;
    int _field2;
};

struct deque<int *, std::__1::allocator<int *>> {
    struct __split_buffer<int **, std::__1::allocator<int **>> {
        int ***_field1;
        int ***_field2;
        int ***_field3;
        struct __compressed_pair<int ***, std::__1::allocator<int **>> {
            int ***_field1;
        } _field4;
    } _field1;
    unsigned long long _field2;
    struct __compressed_pair<unsigned long, std::__1::allocator<int *>> {
        unsigned long long _field1;
    } _field3;
};

struct engine_st;

struct hairGabor;

struct in6_addr {
    union {
        unsigned char _field1[16];
        unsigned short _field2[8];
        unsigned int _field3[4];
    } _field1;
};

struct in_addr {
    unsigned int _field1;
};

struct layer_param {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    int _field3;
    int _field4;
    int _field5;
    int _field6;
    int _field7;
    int _field8;
    int _field9;
    int _field10;
    int _field11;
};

struct layer_res {
    CDUnknownFunctionPointerType *_field1;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field2;
    int _field3;
};

struct less<std::basic_string<char>>;

struct list<wxvoice::SocketAsyncEventArgs *, std::__1::allocator<wxvoice::SocketAsyncEventArgs *>> {
    struct __list_node_base<wxvoice::SocketAsyncEventArgs *, void *> {
        struct __list_node<wxvoice::SocketAsyncEventArgs *, void *> *_field1;
        struct __list_node<wxvoice::SocketAsyncEventArgs *, void *> *_field2;
    } _field1;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<wxvoice::SocketAsyncEventArgs *, void *>>> {
        unsigned long long _field1;
    } _field2;
};

struct map<std::__1::basic_string<char>, int, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, int>>> {
    struct __tree<std::__1::__value_type<std::__1::basic_string<char>, int>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, int>, std::__1::less<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, int>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, int>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, int>, std::__1::less<std::__1::basic_string<char>>, true>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct map<std::__1::basic_string<char>, rpdnet::blob_shape, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, rpdnet::blob_shape>>> {
    struct __tree<std::__1::__value_type<std::__1::basic_string<char>, rpdnet::blob_shape>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, rpdnet::blob_shape>, std::__1::less<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, rpdnet::blob_shape>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, rpdnet::blob_shape>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, rpdnet::blob_shape>, std::__1::less<std::__1::basic_string<char>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char>>>> {
    struct __tree<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::less<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>>> {
        struct __tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::less<std::__1::basic_string<char>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<std::basic_string<char>, std::basic_string<char>, std::less<std::basic_string<char>>, std::allocator<std::pair<const std::basic_string<char>, std::basic_string<char>>>> {
    struct _Rb_tree<std::basic_string<char>, std::pair<const std::basic_string<char>, std::basic_string<char>>, std::_Select1st<std::pair<const std::basic_string<char>, std::basic_string<char>>>, std::less<std::basic_string<char>>, std::allocator<std::pair<const std::basic_string<char>, std::basic_string<char>>>> _field1;
};

struct map<std::basic_string<char>, std::map<std::basic_string<char>, std::vector<char, std::allocator<char>>, std::less<std::basic_string<char>>, std::allocator<std::pair<std::basic_string<char>, std::vector<char, std::allocator<char>>>>>, std::less<std::basic_string<char>>, std::allocator<std::pair<std::basic_string<char>, std::map<std::basic_string<char>, std::vector<char, std::allocator<char>>, std::less<std::basic_string<char>>, std::allocator<std::pair<std::basic_string<char>, std::vector<char, std::allocator<char>>>>>>>> {
    struct _Rb_tree<std::basic_string<char>, std::pair<const std::basic_string<char>, std::map<std::basic_string<char>, std::vector<char, std::allocator<char>>, std::less<std::basic_string<char>>, std::allocator<std::pair<std::basic_string<char>, std::vector<char, std::allocator<char>>>>>>, std::_Select1st<std::pair<const std::basic_string<char>, std::map<std::basic_string<char>, std::vector<char, std::allocator<char>>, std::less<std::basic_string<char>>, std::allocator<std::pair<std::basic_string<char>, std::vector<char, std::allocator<char>>>>>>>, std::less<std::basic_string<char>>, std::allocator<std::pair<const std::basic_string<char>, std::map<std::basic_string<char>, std::vector<char, std::allocator<char>>, std::less<std::basic_string<char>>, std::allocator<std::pair<std::basic_string<char>, std::vector<char, std::allocator<char>>>>>>>> _field1;
};

struct map<std::basic_string<char>, std::vector<char, std::allocator<char>>, std::less<std::basic_string<char>>, std::allocator<std::pair<const std::basic_string<char>, std::vector<char, std::allocator<char>>>>> {
    struct _Rb_tree<std::basic_string<char>, std::pair<const std::basic_string<char>, std::vector<char, std::allocator<char>>>, std::_Select1st<std::pair<const std::basic_string<char>, std::vector<char, std::allocator<char>>>>, std::less<std::basic_string<char>>, std::allocator<std::pair<const std::basic_string<char>, std::vector<char, std::allocator<char>>>>> _field1;
};

struct map<std::basic_string<char>, std::vector<char, std::allocator<char>>, std::less<std::basic_string<char>>, std::allocator<std::pair<std::basic_string<char>, std::vector<char, std::allocator<char>>>>> {
    struct _Rb_tree<std::basic_string<char>, std::pair<const std::basic_string<char>, std::vector<char, std::allocator<char>>>, std::_Select1st<std::pair<const std::basic_string<char>, std::vector<char, std::allocator<char>>>>, std::less<std::basic_string<char>>, std::allocator<std::pair<const std::basic_string<char>, std::vector<char, std::allocator<char>>>>> _field1;
};

struct rapidnet {
    struct rpd_ctrl *_field1;
};

struct rpd_ctrl;

struct rpd_layer_info {
    int _field1;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field2;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field3;
    vector_e0f2bd7e _field4;
    vector_e0f2bd7e _field5;
    struct layer_param *_field6;
};

struct rpd_net_param {
    int _field1;
    int _field2;
    int _field3;
    struct map<std::__1::basic_string<char>, rpdnet::blob_shape, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, rpdnet::blob_shape>>> _field4;
    int _field5;
    int _field6;
};

struct rpdnet_cpu;

struct rsa_meth_st;

struct rsa_st {
    int _field1;
    long long _field2;
    struct rsa_meth_st *_field3;
    struct engine_st *_field4;
    struct bignum_st *_field5;
    struct bignum_st *_field6;
    struct bignum_st *_field7;
    struct bignum_st *_field8;
    struct bignum_st *_field9;
    struct bignum_st *_field10;
    struct bignum_st *_field11;
    struct bignum_st *_field12;
    struct crypto_ex_data_st _field13;
    int _field14;
    int _field15;
    struct bn_mont_ctx_st *_field16;
    struct bn_mont_ctx_st *_field17;
    struct bn_mont_ctx_st *_field18;
    char *_field19;
    struct bn_blinding_st *_field20;
    struct bn_blinding_st *_field21;
};

struct set<int, std::__1::less<int>, std::__1::allocator<int>> {
    struct __tree<int, std::__1::less<int>, std::__1::allocator<int>> {
        struct __tree_node<int, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<int, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::less<int>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct shared_ptr<WnsLoginCallback> {
    struct WnsLoginCallback *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<WnsLoginManager> {
    struct WnsLoginManager *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<WnsOCDataSource> {
    struct WnsOCDataSource *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<WnsUniversalSDK> {
    struct WnsUniversalSDK *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct sockaddr {
    unsigned char _field1;
    unsigned char _field2;
    char _field3[14];
};

struct sockaddr_in {
    unsigned char _field1;
    unsigned char _field2;
    unsigned short _field3;
    struct in_addr _field4;
    char _field5[8];
};

struct sockaddr_in6 {
    unsigned char _field1;
    unsigned char _field2;
    unsigned short _field3;
    unsigned int _field4;
    struct in6_addr _field5;
    unsigned int _field6;
};

struct sockaddr_un {
    unsigned char _field1;
    unsigned char _field2;
    char _field3[104];
};

struct stEnvironment {
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field1;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field2;
    int _field3;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field4;
    unsigned int _field5;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field6;
    int _field7;
    int _field8;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field9;
};

struct stPoi {
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field1;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field2;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field3;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field4;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field5;
    int _field6;
    int _field7;
};

struct stResult {
    int _field1;
    int _field2;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field3;
};

struct stWaterTemplate {
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field1;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field2;
};

struct stack<int *, std::__1::deque<int *, std::__1::allocator<int *>>> {
    struct deque<int *, std::__1::allocator<int *>> _field1;
};

struct stack_st_void;

struct timeval {
    long long tv_sec;
    int tv_usec;
};

struct vector<MCPoint, std::__1::allocator<MCPoint>> {
    CDStruct_183601bc *__begin_;
    CDStruct_183601bc *__end_;
    struct __compressed_pair<MCPoint *, std::__1::allocator<MCPoint>> {
        CDStruct_183601bc *__first_;
    } __end_cap_;
};

struct vector<MPoint, std::__1::allocator<MPoint>> {
    CDStruct_183601bc *_field1;
    CDStruct_183601bc *_field2;
    struct __compressed_pair<MPoint *, std::__1::allocator<MPoint>> {
        CDStruct_183601bc *_field1;
    } _field3;
};

struct vector<Point2f, std::__1::allocator<Point2f>> {
    CDStruct_183601bc *_field1;
    CDStruct_183601bc *_field2;
    struct __compressed_pair<Point2f *, std::__1::allocator<Point2f>> {
        CDStruct_183601bc *_field1;
    } _field3;
};

struct vector<QuanPhotoUpload::FaceItem, std::allocator<QuanPhotoUpload::FaceItem>> {
    struct _Vector_impl {
        struct FaceItem *_field1;
        struct FaceItem *_field2;
        struct FaceItem *_field3;
    } _field1;
};

struct vector<RVar *, std::__1::allocator<RVar *>> {
    struct RVar **__begin_;
    struct RVar **__end_;
    struct __compressed_pair<RVar **, std::__1::allocator<RVar *>> {
        struct RVar **__first_;
    } __end_cap_;
};

struct vector<UploadSDK::FileUpload::QuanInfo, std::allocator<UploadSDK::FileUpload::QuanInfo>> {
    struct _Vector_impl {
        struct QuanInfo *_field1;
        struct QuanInfo *_field2;
        struct QuanInfo *_field3;
    } _field1;
};

struct vector<UploadSDK::FileUpload::ShuoshuoPicInfo, std::allocator<UploadSDK::FileUpload::ShuoshuoPicInfo>> {
    struct _Vector_impl {
        struct ShuoshuoPicInfo *_field1;
        struct ShuoshuoPicInfo *_field2;
        struct ShuoshuoPicInfo *_field3;
    } _field1;
};

struct vector<_FILL_FRONT, std::__1::allocator<_FILL_FRONT>> {
    struct _FILL_FRONT *_field1;
    struct _FILL_FRONT *_field2;
    struct __compressed_pair<_FILL_FRONT *, std::__1::allocator<_FILL_FRONT>> {
        struct _FILL_FRONT *_field1;
    } _field3;
};

struct vector<_Image *, std::__1::allocator<_Image *>> {
    struct _Image **_field1;
    struct _Image **_field2;
    struct __compressed_pair<_Image **, std::__1::allocator<_Image *>> {
        struct _Image **_field1;
    } _field3;
};

struct vector<_Rect, std::__1::allocator<_Rect>> {
    struct _Rect *_field1;
    struct _Rect *_field2;
    struct __compressed_pair<_Rect *, std::__1::allocator<_Rect>> {
        struct _Rect *_field1;
    } _field3;
};

struct vector<char, std::__1::allocator<char>> {
    char *_field1;
    char *_field2;
    struct __compressed_pair<char *, std::__1::allocator<char>> {
        char *_field1;
    } _field3;
};

struct vector<char, std::allocator<char>> {
    struct _Vector_impl {
        char *_field1;
        char *_field2;
        char *_field3;
    } _field1;
};

struct vector<connectedRegion, std::__1::allocator<connectedRegion>> {
    struct connectedRegion *_field1;
    struct connectedRegion *_field2;
    struct __compressed_pair<connectedRegion *, std::__1::allocator<connectedRegion>> {
        struct connectedRegion *_field1;
    } _field3;
};

struct vector<cv::Point_<float>, std::__1::allocator<cv::Point_<float>>> {
    struct Point_<float> *__begin_;
    struct Point_<float> *__end_;
    struct __compressed_pair<cv::Point_<float>*, std::__1::allocator<cv::Point_<float>>> {
        struct Point_<float> *__first_;
    } __end_cap_;
};

struct vector<float, std::__1::allocator<float>> {
    float *_field1;
    float *_field2;
    struct __compressed_pair<float *, std::__1::allocator<float>> {
        float *_field1;
    } _field3;
};

struct vector<int, std::__1::allocator<int>> {
    int *__begin_;
    int *__end_;
    struct __compressed_pair<int *, std::__1::allocator<int>> {
        int *__first_;
    } __end_cap_;
};

struct vector<rqd::AppInfo, std::__1::allocator<rqd::AppInfo>> {
    struct AppInfo *_field1;
    struct AppInfo *_field2;
    struct __compressed_pair<rqd::AppInfo *, std::__1::allocator<rqd::AppInfo>> {
        struct AppInfo *_field1;
    } _field3;
};

struct vector<rqd::Attachment, std::__1::allocator<rqd::Attachment>> {
    struct Attachment *_field1;
    struct Attachment *_field2;
    struct __compressed_pair<rqd::Attachment *, std::__1::allocator<rqd::Attachment>> {
        struct Attachment *_field1;
    } _field3;
};

struct vector<rqd::ExceptionUpload, std::__1::allocator<rqd::ExceptionUpload>> {
    struct ExceptionUpload *_field1;
    struct ExceptionUpload *_field2;
    struct __compressed_pair<rqd::ExceptionUpload *, std::__1::allocator<rqd::ExceptionUpload>> {
        struct ExceptionUpload *_field1;
    } _field3;
};

struct vector<rqd::SummaryInfo, std::__1::allocator<rqd::SummaryInfo>> {
    struct SummaryInfo *_field1;
    struct SummaryInfo *_field2;
    struct __compressed_pair<rqd::SummaryInfo *, std::__1::allocator<rqd::SummaryInfo>> {
        struct SummaryInfo *_field1;
    } _field3;
};

struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> {
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> *_field1;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> *_field2;
    struct __compressed_pair<std::__1::basic_string<char>*, std::__1::allocator<std::__1::basic_string<char>>> {
        struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> *_field1;
    } _field3;
};

struct vector<unsigned long, std::__1::allocator<unsigned long>> {
    unsigned long long *__begin_;
    unsigned long long *__end_;
    struct __compressed_pair<unsigned long *, std::__1::allocator<unsigned long>> {
        unsigned long long *__first_;
    } __end_cap_;
};

struct vector<wxvoice::SocketAsyncEventArgs *, std::__1::allocator<wxvoice::SocketAsyncEventArgs *>> {
    struct SocketAsyncEventArgs **_field1;
    struct SocketAsyncEventArgs **_field2;
    struct __compressed_pair<wxvoice::SocketAsyncEventArgs **, std::__1::allocator<wxvoice::SocketAsyncEventArgs *>> {
        struct SocketAsyncEventArgs **_field1;
    } _field3;
};

#if 0
// Names with conflicting types:
typedef struct {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned int _field6;
    unsigned int _field7;
    _Bool _field8;
} GPUTextureOptions_e60a86bd;

typedef struct {
    unsigned int minFilter;
    unsigned int magFilter;
    unsigned int wrapS;
    unsigned int wrapT;
    unsigned int internalFormat;
    unsigned int format;
    unsigned int type;
    _Bool useDepth;
} GPUTextureOptions_1d06aea2;

typedef struct {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned int _field6;
    unsigned int _field7;
} GPUTextureOptions_59a4f822;

typedef struct {
    unsigned int minFilter;
    unsigned int magFilter;
    unsigned int wrapS;
    unsigned int wrapT;
    unsigned int internalFormat;
    unsigned int format;
    unsigned int type;
} GPUTextureOptions_eebc26a2;

typedef struct ?<float> {
    int _field1[4];
    float *_field2;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field3;
    float *_field4;
    int _field5;
    float _field6;
    float _field7;
    int _field8;
} rpd_blob_6ab8d9c4;

typedef struct ?<float> {
    int shape_[4];
    float *data_;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> blob_name_;
    float *memory_allocated_;
    int channel_step_in_bytes_;
    float quantize_min_;
    float quantize_max_;
    int data_type_;
} rpd_blob_768810fc;

typedef struct ?<float> {
    int _field1[4];
    float *_field2;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field3;
} rpd_blob_318a8890;

#endif

#pragma mark Typedef'd Structures

typedef struct {
    unsigned char _field1;
    unsigned int _field2;
    unsigned short _field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned char _field6;
    unsigned short _field7;
    char _field8[1];
    unsigned int _field9;
} CDStruct_a53ae8cd;

typedef struct {
    unsigned long long _field1;
    unsigned long long _field2;
    unsigned long long _field3;
} CDStruct_14f26992;

typedef struct {
    unsigned long long _field1;
    id *_field2;
    unsigned long long *_field3;
    unsigned long long _field4[5];
} CDStruct_70511ce9;

typedef struct {
    unsigned short wCmd;
    unsigned short wSubCmd;
    short wRst;
    unsigned int dwUsed;
    unsigned int dwCalUsed;
    unsigned short wTry;
    unsigned char acHostName[32];
    unsigned char acHostIp[32];
    unsigned short wPort;
    unsigned char cConn;
    unsigned char cNetType;
    unsigned char cNetwork;
    unsigned char cEncryptType;
    unsigned char acErrorStr[64];
    unsigned short wSendDataLen;
    unsigned short wResvDataLen;
} CDStruct_7a5a57b9;

typedef struct {
    char acHostName[32];
    unsigned short wPort;
    unsigned short wTimeout;
} CDStruct_93d23b61;

typedef struct {
    double m11;
    double m12;
    double m13;
    double m21;
    double m22;
    double m23;
    double m31;
    double m32;
    double m33;
} CDStruct_2d7b3170;

typedef struct {
    double begin;
    double end;
    double scale;
    double alpha;
    double degree;
} CDStruct_728fc79d;

typedef struct {
    double x;
    double y;
    double z;
} CDStruct_31142d93;

typedef struct {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
} CDStruct_a734b2e2;

typedef struct {
    long long version;
    void *info;
    CDUnknownFunctionPointerType retain;
    CDUnknownFunctionPointerType release;
    CDUnknownFunctionPointerType copyDescription;
} CDStruct_4210025a;

typedef struct {
    long long value;
    int timescale;
    unsigned int flags;
    long long epoch;
} CDStruct_1b6d18a9;

typedef struct {
    long long _field1;
    long long _field2;
    long long _field3;
} CDStruct_2ec95fd7;

typedef struct CDStruct_183601bc;

typedef struct {
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    CDStruct_1b6d18a9 _field1;
    long long _field2;
    long long _field3;
    long long _field4;
} CDStruct_145541db;

typedef struct {
    CDStruct_0f04b316 preview9v16;
    CDStruct_0f04b316 preview3v4;
    CDStruct_0f04b316 preview1v1;
} CDStruct_9fd3eec0;

typedef struct {
    CDStruct_1b6d18a9 frameTime;
    unsigned long long rotationMode;
    _Bool frameCheckDisabled;
    _Bool hasReceivedFrame;
    _Bool hasSetTarget;
} CDStruct_9f9bca67;

typedef struct {
    CDStruct_1b6d18a9 start;
    CDStruct_1b6d18a9 duration;
} CDStruct_e83c9415;

typedef struct {
    struct CGPoint begin;
    struct CGPoint end;
} CDStruct_62576dee;

typedef struct {
    struct SCNVector3 _field1;
    struct SCNVector3 _field2;
} CDStruct_da00db28;

typedef struct {
    struct {
        struct _TC_FaceShape _field1;
    } _field1;
    float _field2;
} CDStruct_237f8e52;

// Ambiguous groups
typedef struct {
    unsigned int reloadLayout:1;
} CDStruct_5eeaa817;

typedef struct {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
} CDStruct_d2b197d1;

typedef struct {
    double red;
    double green;
    double blue;
    double alpha;
} CDStruct_3ead2808;

typedef struct {
    double scale_begin;
    double scale_end;
    double alpha_begin;
    double alpha_end;
} CDStruct_53186677;

typedef struct {
    float _field1;
    float _field2;
    float _field3;
    float _field4;
} CDStruct_818bb265;

typedef struct {
    float _field1;
    float _field2;
    float _field3;
} CDStruct_869f9c67;

typedef struct {
    float width;
    float lowLevelWidth;
} CDStruct_0f04b316;

typedef struct {
    int _field1;
    int _field2;
} CDStruct_1ef3fb1f;

typedef struct {
    int w;
    int h;
} CDStruct_1fa2d530;

typedef struct {
    long long _field1;
    long long _field2;
} CDStruct_912cb5d2;

typedef struct Rect_<int> {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
} Rect__ef479948;

typedef struct UniPacket<taf::BufferWriter, taf::BufferReader, std::allocator> {
    short _field1;
    char _field2;
    int _field3;
    int _field4;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field5;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field6;
    vector_a7fb0c12 _field7;
    int _field8;
    struct map<std::basic_string<char>, std::basic_string<char>, std::less<std::basic_string<char>>, std::allocator<std::pair<const std::basic_string<char>, std::basic_string<char>>>> _field9;
    struct map<std::basic_string<char>, std::basic_string<char>, std::less<std::basic_string<char>>, std::allocator<std::pair<const std::basic_string<char>, std::basic_string<char>>>> _field10;
    struct map<std::basic_string<char>, std::map<std::basic_string<char>, std::vector<char, std::allocator<char>>, std::less<std::basic_string<char>>, std::allocator<std::pair<std::basic_string<char>, std::vector<char, std::allocator<char>>>>>, std::less<std::basic_string<char>>, std::allocator<std::pair<std::basic_string<char>, std::map<std::basic_string<char>, std::vector<char, std::allocator<char>>, std::less<std::basic_string<char>>, std::allocator<std::pair<std::basic_string<char>, std::vector<char, std::allocator<char>>>>>>>> _field11;
    struct map<std::basic_string<char>, std::vector<char, std::allocator<char>>, std::less<std::basic_string<char>>, std::allocator<std::pair<std::basic_string<char>, std::vector<char, std::allocator<char>>>>> _field12;
    short _field13;
    struct JceInputStream<taf::BufferReader> _field14;
    struct JceOutputStream<taf::BufferWriter> _field15;
} UniPacket_1fa1d691;

typedef struct shared_ptr<WnsLoginManager> {
    struct WnsLoginManager *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_5f4e74c2;

typedef struct shared_ptr<WnsUniversalSDK> {
    struct WnsUniversalSDK *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_04581389;

typedef struct vector<MCPoint, std::__1::allocator<MCPoint>> {
    CDStruct_183601bc *__begin_;
    CDStruct_183601bc *__end_;
    struct __compressed_pair<MCPoint *, std::__1::allocator<MCPoint>> {
        CDStruct_183601bc *__first_;
    } __end_cap_;
} vector_be406215;

typedef struct vector<char, std::allocator<char>> {
    struct _Vector_impl {
        char *_field1;
        char *_field2;
        char *_field3;
    } _field1;
} vector_a7fb0c12;

typedef struct vector<cv::Point_<float>, std::__1::allocator<cv::Point_<float>>> {
    struct Point_<float> *__begin_;
    struct Point_<float> *__end_;
    struct __compressed_pair<cv::Point_<float>*, std::__1::allocator<cv::Point_<float>>> {
        struct Point_<float> *__first_;
    } __end_cap_;
} vector_31509e0c;

typedef struct vector<int, std::__1::allocator<int>> {
    int *__begin_;
    int *__end_;
    struct __compressed_pair<int *, std::__1::allocator<int>> {
        int *__first_;
    } __end_cap_;
} vector_e0f2bd7e;

#pragma mark Named Unions

union _GLKMatrix4 {
    struct {
        float m00;
        float m01;
        float m02;
        float m03;
        float m10;
        float m11;
        float m12;
        float m13;
        float m20;
        float m21;
        float m22;
        float m23;
        float m30;
        float m31;
        float m32;
        float m33;
    } ;
    float m[16];
};

union _GLKVector2 {
    struct {
        float x;
        float y;
    } ;
    struct {
        float s;
        float t;
    } ;
    float v[2];
};

union _GLKVector3 {
    struct {
        float x;
        float y;
        float z;
    } ;
    struct {
        float r;
        float g;
        float b;
    } ;
    struct {
        float s;
        float t;
        float p;
    } ;
    float v[3];
};

union _GLKVector4 {
    struct {
        float x;
        float y;
        float z;
        float w;
    } ;
    struct {
        float r;
        float g;
        float b;
        float a;
    } ;
    struct {
        float s;
        float t;
        float p;
        float q;
    } ;
    float v[4];
};

#pragma mark Typedef'd Unions

typedef union {
    long long _field1;
    unsigned long long _field2;
    double _field3;
} CDUnion_abebb5d1;

