//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class NSArray, NSDictionary, NSMutableArray, NSMutableDictionary, NSString, NSURL;

@interface LWPOption : NSObject
{
    _Bool _canReportLogs;
    _Bool _isDebugMode;
    double _clientProcessinterval;
    double _keepAliveTimeInterval;
    double _fetchVipTimeout;
    double _socketTimeout;
    double _registerTimeout;
    double _retransmitTimeout;
    double _transactionTimeout;
    double _transactionEndingTimeout;
    double _maxBrokenCount;
    double _brokenSuspendTime;
    double _reconnectSuspendTime;
    double _reconnectTimeInBackground;
    unsigned long long _backupConnectionTimeInterval;
    NSString *_traceToken;
    NSString *_setVersion;
    NSURL *_vipServerURL;
    NSDictionary *_vipServerParamMap;
    NSString *_specifyServer;
    NSString *_defaultServer;
    NSString *_reachabilityHost;
    NSString *_authUri;
    NSString *_authTokenHeaderName;
    NSMutableArray *_whiteUrls;
    NSArray *_forceFilterUris;
    NSDictionary *_extraMsgSendUriMap;
    NSDictionary *_extraMsgPushTypeMap;
    NSString *_vhost;
    long long _switchs;
    NSMutableDictionary *_optionsDict;
}

+ (id)defaultOption;
@property(retain, nonatomic) NSMutableDictionary *optionsDict; // @synthesize optionsDict=_optionsDict;
@property(nonatomic) long long switchs; // @synthesize switchs=_switchs;
@property(copy, nonatomic) NSString *vhost; // @synthesize vhost=_vhost;
@property(retain) NSDictionary *extraMsgPushTypeMap; // @synthesize extraMsgPushTypeMap=_extraMsgPushTypeMap;
@property(retain) NSDictionary *extraMsgSendUriMap; // @synthesize extraMsgSendUriMap=_extraMsgSendUriMap;
@property(retain) NSArray *forceFilterUris; // @synthesize forceFilterUris=_forceFilterUris;
@property(retain) NSMutableArray *whiteUrls; // @synthesize whiteUrls=_whiteUrls;
@property(retain) NSString *authTokenHeaderName; // @synthesize authTokenHeaderName=_authTokenHeaderName;
@property(retain) NSString *authUri; // @synthesize authUri=_authUri;
@property(retain) NSString *reachabilityHost; // @synthesize reachabilityHost=_reachabilityHost;
@property(copy, nonatomic) NSString *defaultServer; // @synthesize defaultServer=_defaultServer;
@property(copy, nonatomic) NSString *specifyServer; // @synthesize specifyServer=_specifyServer;
@property(copy) NSDictionary *vipServerParamMap; // @synthesize vipServerParamMap=_vipServerParamMap;
@property(retain) NSURL *vipServerURL; // @synthesize vipServerURL=_vipServerURL;
@property(retain) NSString *setVersion; // @synthesize setVersion=_setVersion;
@property(retain) NSString *traceToken; // @synthesize traceToken=_traceToken;
@property unsigned long long backupConnectionTimeInterval; // @synthesize backupConnectionTimeInterval=_backupConnectionTimeInterval;
@property double reconnectTimeInBackground; // @synthesize reconnectTimeInBackground=_reconnectTimeInBackground;
@property double reconnectSuspendTime; // @synthesize reconnectSuspendTime=_reconnectSuspendTime;
@property double brokenSuspendTime; // @synthesize brokenSuspendTime=_brokenSuspendTime;
@property double maxBrokenCount; // @synthesize maxBrokenCount=_maxBrokenCount;
@property double transactionEndingTimeout; // @synthesize transactionEndingTimeout=_transactionEndingTimeout;
@property double transactionTimeout; // @synthesize transactionTimeout=_transactionTimeout;
@property double retransmitTimeout; // @synthesize retransmitTimeout=_retransmitTimeout;
@property double registerTimeout; // @synthesize registerTimeout=_registerTimeout;
@property double socketTimeout; // @synthesize socketTimeout=_socketTimeout;
@property double fetchVipTimeout; // @synthesize fetchVipTimeout=_fetchVipTimeout;
@property double keepAliveTimeInterval; // @synthesize keepAliveTimeInterval=_keepAliveTimeInterval;
@property double clientProcessinterval; // @synthesize clientProcessinterval=_clientProcessinterval;
@property _Bool isDebugMode; // @synthesize isDebugMode=_isDebugMode;
@property _Bool canReportLogs; // @synthesize canReportLogs=_canReportLogs;
- (void).cxx_destruct;
- (void)setupSwitchs;
- (void)loadSwitchs:(id)arg1;
- (long long)setSwitch:(unsigned long long)arg1 optionValue:(_Bool)arg2 withSwitchValue:(long long)arg3;
- (void)setSwitchs:(unsigned long long)arg1 optionValue:(_Bool)arg2;
- (long long)dumpSwitchs;
- (void)runMigrations;
- (void)setupProfile;
- (void)loadProfile;
- (void)loadOption:(id)arg1;
- (_Bool)flagForOption:(unsigned long long)arg1;
- (id)init;

@end

