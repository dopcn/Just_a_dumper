//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "ProtocolCom.h"

@class NSObject, NSString, ProtocolError, QQMusicNetBase;

@interface ProtocolBase : ProtocolCom
{
    int cid;
    _Bool bGetXml;
    double fTimer;
    unsigned long long _startWorkTime;
    unsigned long long _netStartTime;
    unsigned long long _netFinishTime;
    unsigned long long _parseFinishTime;
    _Bool parseDataAsynchronized;
    _Bool _isRunning;
    _Bool _bAutoRelease;
    _Bool isNotNeedToCheck;
    _Bool _didSendRequest;
    _Bool _bFirstLoadLastData;
    NSString *_cgiName;
    NSObject *_context;
    unsigned long long _requestQQUin;
    QQMusicNetBase *_net;
    CDUnknownBlockType _finishBlock;
    ProtocolError *_protocolError;
}

+ (id)protocolDebugData;
+ (void)releaseReference:(id *)arg1;
+ (void)addReference:(id)arg1;
+ (void)initReference;
+ (id)defaultHost;
@property(retain) ProtocolError *protocolError; // @synthesize protocolError=_protocolError;
@property(copy, nonatomic) CDUnknownBlockType finishBlock; // @synthesize finishBlock=_finishBlock;
@property(nonatomic) _Bool bFirstLoadLastData; // @synthesize bFirstLoadLastData=_bFirstLoadLastData;
@property(retain, nonatomic) QQMusicNetBase *net; // @synthesize net=_net;
@property(readonly, nonatomic) _Bool didSendRequest; // @synthesize didSendRequest=_didSendRequest;
@property(readonly, nonatomic) unsigned long long requestQQUin; // @synthesize requestQQUin=_requestQQUin;
@property(retain, nonatomic) NSObject *context; // @synthesize context=_context;
@property(nonatomic) _Bool isNotNeedToCheck; // @synthesize isNotNeedToCheck;
@property(nonatomic) _Bool bAutoRelease; // @synthesize bAutoRelease=_bAutoRelease;
@property(retain, nonatomic) NSString *cgiName; // @synthesize cgiName=_cgiName;
@property(readonly, nonatomic) _Bool isRunning; // @synthesize isRunning=_isRunning;
@property(nonatomic) _Bool parseDataAsynchronized; // @synthesize parseDataAsynchronized;
@property(nonatomic) _Bool bGetXml; // @synthesize bGetXml;
@property(nonatomic) int cid; // @synthesize cid;
- (void).cxx_destruct;
- (_Bool)isNeedTrimLog;
- (_Bool)needCheckDidSendRequest;
- (_Bool)shouldHasRepeatRootNode;
- (id)extraHttpRequestHeader;
- (void)checkStatTimeValid;
- (void)verifyDoubleValue:(double *)arg1 rangeFromMinValue:(double)arg2 toMaxValue:(double)arg3 CGIField:(id)arg4;
- (void)verifyIntValue:(long long *)arg1 rangeFromMinValue:(long long)arg2 toMaxValue:(long long)arg3 CGIField:(id)arg4;
- (int)returnCode;
- (id)lastError;
- (void)setLastError:(id)arg1;
- (void)setNetStartTime:(unsigned long long)arg1;
- (void)requestTimeout;
- (_Bool)isNeedMoreTime;
- (float)getRequestTimeOut;
- (_Bool)shouldShowLoadingPercent;
- (void)setStartWorkTime:(unsigned long long)arg1;
- (long long)successReportRate;
- (_Bool)shouldWaitForIPList;
- (void)addCgiStat:(id)arg1;
- (void)_getHistoryDomainIp:(id)arg1 domains:(id *)arg2 ips:(id *)arg3 httpStatus:(id *)arg4 lastXmlCode:(int)arg5;
- (id)getProtocolHistoryRequestItem;
- (_Bool)forceDoNotUseKeepAliveProxy;
- (void)fireBackWithResult:(id)arg1;
- (void)fireBackWithResultOnMainThread:(id)arg1;
- (_Bool)isDataBeginWithFiveZero;
- (void)netBase:(id)arg1 didFailWithError:(id)arg2;
- (void)netBaseDidFinishLoadingWithProtoError:(id)arg1;
- (long long)parseXmlReturnCode:(struct _xmlDoc *)arg1;
- (_Bool)isSuccessfulXmlReturnCode:(struct _xmlDoc *)arg1;
- (_Bool)isSuccessfulReturnCode;
- (void)uploadInvalidData:(id)arg1 withSuffix:(id)arg2;
- (id)parseCompressedData:(id)arg1;
- (void)continueWorkWith:(id)arg1 SID:(id)arg2;
- (void)onParseXmlData:(struct _xmlDoc *)arg1;
- (void)onAddDataInRoot:(struct _xmlNode *)arg1;
- (_Bool)isHasRepeat:(struct _xmlNode *)arg1;
- (id)createPostData:(id)arg1 SIDStr:(id)arg2;
- (void)startWorkOnMainThread:(_Bool)arg1;
- (void)startWorkWithFinishBlockImmediately:(CDUnknownBlockType)arg1;
- (void)startWorkWithFinishBlock:(CDUnknownBlockType)arg1;
- (void)startWork;
- (void)parseCompressedData:(id)arg1 withFinishedBlock:(CDUnknownBlockType)arg2;
- (_Bool)shouldRetryByBackHosts:(id)arg1;
- (void)dealloc;
- (void)cancelAndRelease;
- (id)init;

@end

