//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@interface KGCommonTools : NSObject
{
}

+ (long long)kingCardProxyPort;
+ (id)kingCardProxyIP;
+ (_Bool)phoneNumberIsLegalWithPhoneNumber:(id)arg1;
+ (id)addURLPrefixOfHTTP:(id)arg1;
+ (struct CGSize)sizeForString:(id)arg1 font:(id)arg2;
+ (_Bool)isLowDevice;
+ (id)curDateByDay;
+ (id)curDateTimeMSec;
+ (id)curDateTime;
+ (int)userID;
+ (int)localIP:(char *)arg1;
+ (unsigned long long)freeMemory;
+ (unsigned long long)usedMemory;
+ (_Bool)isShareSongExistBySong:(id)arg1;
+ (_Bool)isJailBroken;
+ (_Bool)isPerfectJailBroken;
+ (id)shareMusicPathName:(id)arg1;
+ (id)perVersionLocalSongPath:(id)arg1;
+ (id)realLocalSongPath:(id)arg1;
+ (int)getIpByDomainOC:(const char *)arg1 ip:(char *)arg2;
+ (id)imageWithContentsOfFile:(id)arg1;
+ (id)imageWithContentsOfFile:(id)arg1 useCache:(_Bool)arg2;
+ (id)windowImage:(id)arg1 rect:(struct CGRect)arg2;
+ (id)screenImage:(id)arg1 rect:(struct CGRect)arg2;
+ (_Bool)isPlayingSong:(id)arg1;
+ (id)colorWithHexString:(id)arg1 withAlpha:(float)arg2;
+ (id)colorWithHexString:(id)arg1;
+ (_Bool)isHashEqual:(id)arg1 toOther:(id)arg2;
+ (_Bool)isLRC:(id)arg1;
+ (id)tempMVPath:(id)arg1;
+ (id)MVFileDir;
+ (id)MVFilePath:(id)arg1;
+ (id)tempFilePath:(id)arg1;
+ (id)targetFileDir;
+ (id)targetFilePath:(id)arg1;
+ (id)offlineFileDir;
+ (id)cacheFileDir;
+ (_Bool)addSkipBackupAttributeToItemAtPath:(id)arg1;
+ (_Bool)addBackupAttributeToItemAtPath:(id)arg1;
+ (_Bool)addSkipBackupAttributeToItemAtURL:(id)arg1;
+ (id)proxyValue;
+ (id)proxyHeader;
+ (long long)proxyPort;
+ (id)proxyHost;
+ (id)telecomUserAgent;
+ (id)unicomUserAgent;
+ (id)unincomHeaderValue;
+ (long long)_folderSizeAtPath:(const char *)arg1;
+ (long long)folderSizeAtPath:(id)arg1;
+ (long long)fileSizeAtPath:(id)arg1;
+ (id)freeDiskSpaceInKBytes;
+ (id)telecomProxyCheckStatusURL;
+ (id)telecomProxyWebURL;
+ (int)telecomProxyPort;
+ (id)telecomProxyIP;
+ (id)telecomProxySpkey;
+ (id)telecomProxySpid;
+ (id)telecomProxyImsi;
+ (_Bool)checkChinaTelecom;
+ (_Bool)isKingCardPorxy;
+ (_Bool)isTelecomPorxy;
+ (_Bool)isUnicomPorxy;
+ (_Bool)checkChinaUnicom;
+ (_Bool)checkSimCard;
+ (_Bool)checkChinaMobile;
+ (_Bool)checkChinaPhone;
+ (id)createUnicomUnikey;
+ (id)createRandomNum:(int)arg1;
+ (_Bool)isDeviceIphone;
+ (_Bool)isOSVersionGreaterThan_7;
+ (_Bool)isOSVersion_7;
+ (_Bool)isOSVersion_6;
+ (_Bool)isOSVersion_5_0;
+ (int)SystemVersin;
+ (_Bool)isOSVersion_5;
+ (id)id3Info:(id)arg1;
+ (_Bool)isWideNetWorkd;
+ (_Bool)isChinaFromMobile;
+ (_Bool)isUseWifi;
+ (id)getOperator;
+ (_Bool)connectedToNetwork;
+ (id)stringToMd5String:(id)arg1;
+ (id)stringToMd5:(id)arg1;
+ (BOOL)AssciiToValue:(BOOL)arg1;
+ (id)md5ToString:(id)arg1;
+ (id)scale:(id)arg1 toSize:(struct CGSize)arg2;
+ (id)dateFromString:(id)arg1;
+ (id)fileModifiedTime:(id)arg1;
+ (id)decodeBase64WithString:(id)arg1;
+ (id)decodeBase64ToStringWithString:(id)arg1;
+ (id)encodeBase64WithData:(id)arg1;
+ (id)encodeBase64WithString:(id)arg1;
+ (id)desDecrypt:(id)arg1 key:(char *)arg2 keySize:(int)arg3 vector:(char *)arg4;
+ (id)desEncrypt:(id)arg1 key:(char *)arg2 keySize:(int)arg3 vector:(char *)arg4;
+ (int)numberValueForHex:(BOOL)arg1;
+ (id)doCipher:(id)arg1 key:(id)arg2 context:(unsigned int)arg3;
+ (id)decryptStr:(id)arg1;
+ (id)encryptStr:(id)arg1;
+ (unsigned int)getFreeMemory;

@end

