//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

@class NSArray, NSDictionary, NSMutableArray, NSString, QYQimoVideoIInfo;
@protocol QYVideoPushDelegate><QYPushVideoModelDelegate;

@interface QYPushVideoModel : NSObject
{
    _Bool _skipTimeFlag;
    _Bool _isPlaying;
    _Bool _canDLNASeekTime;
    int _videoPushState;
    int _currentPushDevice;
    float _pushSystemVolume;
    int _pushOfflineState;
    int _pushOfflineTransitionState;
    QYQimoVideoIInfo *_pushedAlbum;
    NSString *_pushLastTVID;
    QYQimoVideoIInfo *_testPushedAlbum;
    long long _pushedVolume;
    long long _pushedPlayingTime;
    long long _pushedDuration;
    long long _pushedDLNATail;
    long long _pushedLastSeekTime;
    double _pushedBroadCastStart;
    double _pushedBroadCastEnd;
    long long _pushedHead;
    long long _pushedTail;
    NSDictionary *_pushVideoDictionary;
    NSString *_pushVideoTitle;
    NSMutableArray *_normalDataRateArray;
    NSMutableArray *_dolbyDataRateArray;
    NSMutableArray *_pushDataRateArray;
    NSArray *_vipRates;
    NSArray *_pushPlayList;
    NSString *_pushPlayListType;
    long long _pushCurrentDataRate;
    long long _pushExpectDataRate;
    id <QYVideoPushDelegate><QYPushVideoModelDelegate> _delegate;
    long long _pushDLNAPreviewType;
    long long _pushDLNAPreviewDuration;
    long long _pushDLNASeekTime;
}

+ (_Bool)isHaveAppointedRapidityRate:(long long)arg1;
+ (_Bool)isHaveAppointedSmoothRate:(long long)arg1;
+ (_Bool)isHaveAppointed720PRate:(long long)arg1;
+ (id)getOfflineState:(int)arg1;
+ (id)getOfflineStateTransition:(int)arg1;
+ (long long)transferResolutionFromLocal:(long long)arg1;
+ (id)getConstrastDataRateByCode:(id)arg1;
+ (id)getDisplayNameByCode:(id)arg1;
+ (id)getNameByCode:(id)arg1;
+ (_Bool)isCurrentRates:(id)arg1 contentDolby:(id)arg2;
+ (_Bool)isNormalDataRate:(id)arg1;
+ (_Bool)isDolby:(id)arg1;
+ (_Bool)is4kClarity:(id)arg1;
+ (_Bool)isDataRateValid:(id)arg1;
+ (int)getPushOfflinCacheTransitionState:(int)arg1 currentState:(int)arg2;
@property(nonatomic) int pushOfflineTransitionState; // @synthesize pushOfflineTransitionState=_pushOfflineTransitionState;
@property(nonatomic) int pushOfflineState; // @synthesize pushOfflineState=_pushOfflineState;
@property(nonatomic) _Bool canDLNASeekTime; // @synthesize canDLNASeekTime=_canDLNASeekTime;
@property(nonatomic) long long pushDLNASeekTime; // @synthesize pushDLNASeekTime=_pushDLNASeekTime;
@property(nonatomic) float pushSystemVolume; // @synthesize pushSystemVolume=_pushSystemVolume;
@property(nonatomic) long long pushDLNAPreviewDuration; // @synthesize pushDLNAPreviewDuration=_pushDLNAPreviewDuration;
@property(nonatomic) long long pushDLNAPreviewType; // @synthesize pushDLNAPreviewType=_pushDLNAPreviewType;
@property(nonatomic) __weak id <QYVideoPushDelegate><QYPushVideoModelDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) int currentPushDevice; // @synthesize currentPushDevice=_currentPushDevice;
@property(nonatomic) int videoPushState; // @synthesize videoPushState=_videoPushState;
@property(nonatomic) long long pushExpectDataRate; // @synthesize pushExpectDataRate=_pushExpectDataRate;
@property(nonatomic) long long pushCurrentDataRate; // @synthesize pushCurrentDataRate=_pushCurrentDataRate;
@property(retain, nonatomic) NSString *pushPlayListType; // @synthesize pushPlayListType=_pushPlayListType;
@property(retain, nonatomic) NSArray *pushPlayList; // @synthesize pushPlayList=_pushPlayList;
@property(retain, nonatomic) NSArray *vipRates; // @synthesize vipRates=_vipRates;
@property(retain, nonatomic) NSMutableArray *pushDataRateArray; // @synthesize pushDataRateArray=_pushDataRateArray;
@property(retain, nonatomic) NSMutableArray *dolbyDataRateArray; // @synthesize dolbyDataRateArray=_dolbyDataRateArray;
@property(retain, nonatomic) NSMutableArray *normalDataRateArray; // @synthesize normalDataRateArray=_normalDataRateArray;
@property(nonatomic) _Bool isPlaying; // @synthesize isPlaying=_isPlaying;
@property(copy, nonatomic) NSString *pushVideoTitle; // @synthesize pushVideoTitle=_pushVideoTitle;
@property(retain, nonatomic) NSDictionary *pushVideoDictionary; // @synthesize pushVideoDictionary=_pushVideoDictionary;
@property(nonatomic) _Bool skipTimeFlag; // @synthesize skipTimeFlag=_skipTimeFlag;
@property(nonatomic) long long pushedTail; // @synthesize pushedTail=_pushedTail;
@property(nonatomic) long long pushedHead; // @synthesize pushedHead=_pushedHead;
@property(nonatomic) double pushedBroadCastEnd; // @synthesize pushedBroadCastEnd=_pushedBroadCastEnd;
@property(nonatomic) double pushedBroadCastStart; // @synthesize pushedBroadCastStart=_pushedBroadCastStart;
@property(nonatomic) long long pushedLastSeekTime; // @synthesize pushedLastSeekTime=_pushedLastSeekTime;
@property(nonatomic) long long pushedDLNATail; // @synthesize pushedDLNATail=_pushedDLNATail;
@property(nonatomic) long long pushedDuration; // @synthesize pushedDuration=_pushedDuration;
@property(nonatomic) long long pushedPlayingTime; // @synthesize pushedPlayingTime=_pushedPlayingTime;
@property(nonatomic) long long pushedVolume; // @synthesize pushedVolume=_pushedVolume;
@property(retain, nonatomic) QYQimoVideoIInfo *testPushedAlbum; // @synthesize testPushedAlbum=_testPushedAlbum;
@property(retain, nonatomic) NSString *pushLastTVID; // @synthesize pushLastTVID=_pushLastTVID;
@property(retain, nonatomic) QYQimoVideoIInfo *pushedAlbum; // @synthesize pushedAlbum=_pushedAlbum;
- (void).cxx_destruct;
- (id)getCurrentPushWay;
- (id)getCurrentPushStatus;
@property(nonatomic) long long pushLastDataRate;
- (_Bool)isContrastDataRateInCurrentList:(id)arg1;
- (void)resetPushVideo:(id)arg1;
- (void)setPushDataRates:(id)arg1;
- (_Bool)isVipRate:(id)arg1;
- (_Bool)canPushHandleNotify;
- (_Bool)canPushHandleNotifyByNextStatus:(long long)arg1;
- (_Bool)canQimoHandleOffline;
- (_Bool)canPushHandleReconnect;
- (_Bool)canDLNAUpdatePushState;
- (_Bool)canPushHanldeOfflineState;
- (_Bool)canDLNAUpdateProgress;
- (_Bool)canUpdatePushPlayingProgress;
- (_Bool)isExistPushVideo;
- (_Bool)isAirplayed;
- (_Bool)isPushed;
- (void)setDLNACacheDataRate:(long long)arg1;
- (id)init;

@end

