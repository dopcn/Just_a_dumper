//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

#import "SCNSceneRendererDelegate-Protocol.h"

@class ARAnchor, NSString, QZEVARFocusSquare, QZEVSceneAnimation, QZEVSceneItem, QZEVWorldPositionItem, SCNNode, SCNRenderer;
@protocol QZEVSceneManagerDelegate;

@interface QZEVSceneManager : NSObject <SCNSceneRendererDelegate>
{
    _Bool _modelHidden;
    _Bool _kEnableFeaturePoint;
    _Bool _kEnableShadow;
    _Bool _draggingModel;
    _Bool _hasMovedToDefaultPoint;
    _Bool _hasDraggedModel;
    id <QZEVSceneManagerDelegate> _delegate;
    QZEVSceneItem *_sceneItem;
    SCNRenderer *_renderer;
    SCNNode *_modelNode;
    SCNNode *_floorNode;
    QZEVARFocusSquare *_focusSquare;
    QZEVWorldPositionItem *_focusPosItem;
    long long _kFeaturePointsThreshold;
    long long _kShadowRadius;
    long long _kShadowSampleCount;
    long long _kShadowMapSize;
    double _directionAngle;
    QZEVSceneAnimation *_backupAnim;
    SCNNode *_gridPlanNode;
    SCNNode *_cameraNode;
    double _renderScale;
    SCNNode *_sceneEnvironment;
    ARAnchor *_anchor;
    ARAnchor *_trackingAnchor;
    struct SCNVector3 _last3DPoint;
    struct CGSize _renderSize;
    struct CGPoint _last2DPoint;
    struct CGPoint _renderOffset;
    struct QZEVPlane _dragPlane;
    // Error parsing type: {?="columns"[4]}, name: _rotationZPi_2
}

@property(retain, nonatomic) ARAnchor *trackingAnchor; // @synthesize trackingAnchor=_trackingAnchor;
@property(retain, nonatomic) ARAnchor *anchor; // @synthesize anchor=_anchor;
@property(retain, nonatomic) SCNNode *sceneEnvironment; // @synthesize sceneEnvironment=_sceneEnvironment;
@property(nonatomic) _Bool hasDraggedModel; // @synthesize hasDraggedModel=_hasDraggedModel;
@property(nonatomic) double renderScale; // @synthesize renderScale=_renderScale;
@property(nonatomic) struct CGPoint renderOffset; // @synthesize renderOffset=_renderOffset;
@property(nonatomic) __weak SCNNode *cameraNode; // @synthesize cameraNode=_cameraNode;
@property(nonatomic) __weak SCNNode *gridPlanNode; // @synthesize gridPlanNode=_gridPlanNode;
@property(retain, nonatomic) QZEVSceneAnimation *backupAnim; // @synthesize backupAnim=_backupAnim;
@property(nonatomic) _Bool hasMovedToDefaultPoint; // @synthesize hasMovedToDefaultPoint=_hasMovedToDefaultPoint;
@property(nonatomic) struct SCNVector3 last3DPoint; // @synthesize last3DPoint=_last3DPoint;
@property(nonatomic) struct QZEVPlane dragPlane; // @synthesize dragPlane=_dragPlane;
@property(nonatomic) struct CGPoint last2DPoint; // @synthesize last2DPoint=_last2DPoint;
@property(nonatomic) _Bool draggingModel; // @synthesize draggingModel=_draggingModel;
// Error parsing type for property rotationZPi_2:
// Property attributes: T{?=[4]},N,V_rotationZPi_2

@property(nonatomic) double directionAngle; // @synthesize directionAngle=_directionAngle;
@property(nonatomic) long long kShadowMapSize; // @synthesize kShadowMapSize=_kShadowMapSize;
@property(nonatomic) long long kShadowSampleCount; // @synthesize kShadowSampleCount=_kShadowSampleCount;
@property(nonatomic) long long kShadowRadius; // @synthesize kShadowRadius=_kShadowRadius;
@property(nonatomic) _Bool kEnableShadow; // @synthesize kEnableShadow=_kEnableShadow;
@property(nonatomic) long long kFeaturePointsThreshold; // @synthesize kFeaturePointsThreshold=_kFeaturePointsThreshold;
@property(nonatomic) _Bool kEnableFeaturePoint; // @synthesize kEnableFeaturePoint=_kEnableFeaturePoint;
@property(retain, nonatomic) QZEVWorldPositionItem *focusPosItem; // @synthesize focusPosItem=_focusPosItem;
@property(retain, nonatomic) QZEVARFocusSquare *focusSquare; // @synthesize focusSquare=_focusSquare;
@property(nonatomic) __weak SCNNode *floorNode; // @synthesize floorNode=_floorNode;
@property(nonatomic) __weak SCNNode *modelNode; // @synthesize modelNode=_modelNode;
@property(nonatomic) _Bool modelHidden; // @synthesize modelHidden=_modelHidden;
@property(nonatomic) struct CGSize renderSize; // @synthesize renderSize=_renderSize;
@property(readonly, nonatomic) SCNRenderer *renderer; // @synthesize renderer=_renderer;
@property(retain, nonatomic) QZEVSceneItem *sceneItem; // @synthesize sceneItem=_sceneItem;
@property(nonatomic) __weak id <QZEVSceneManagerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)arkitDidRemoveAnchors:(id)arg1;
- (void)arkitDidUpdateAnchors:(id)arg1;
- (void)updateModelWithAnchor:(id)arg1;
- (void)arkitDidAddAnchors:(id)arg1;
- (void)updateCameraOrientationWithAuttitude:(id)arg1 isYMirrored:(_Bool)arg2;
- (void)updateCameraWithARFrame:(id)arg1;
- (id)hittestOptions;
- (struct CGPoint)convertPoint:(struct CGPoint)arg1 to2DSceneFormView:(id)arg2;
- (struct SCNVector3)convertPoint:(struct CGPoint)arg1 to3DPointOnPlan:(struct QZEVPlane)arg2;
- (void)handleRotateGesture:(id)arg1;
- (void)handleDoublePanGesture:(id)arg1;
- (void)addAnchorAtModelPosition;
- (void)handleSinglePanGesture:(id)arg1;
- (void)handlePinchGesture:(id)arg1;
- (void)handleTapGesture:(id)arg1;
- (void)renderer:(id)arg1 didRenderScene:(id)arg2 atTime:(double)arg3;
- (void)walkToPoint:(struct SCNVector3)arg1;
- (struct CGPoint)convert2DScenePointToScreen:(struct CGPoint)arg1;
- (struct CGPoint)getModelPosition;
- (double)getModelScale;
- (void)moveModelToDefaultPoint;
- (void)setNeedMoveModelToDefaultPosition;
- (void)configEnviromentForScene:(id)arg1;
- (id)scene:(id)arg1 EnvironmentWithName:(id)arg2;
- (void)loadSceneEnvironment;
- (void)reloadScene;
- (void)loadWNSConfig;
- (id)init;
- (id)hitTestRayFromScreenPos:(struct CGPoint)arg1;
- (id)hitTestPoint:(struct CGPoint)arg1 onInfiniteHorizontalPlane:(struct SCNVector3)arg2;
- (id)hitTestWithFeaturesAt:(struct CGPoint)arg1 coneOpeningAngleInDegrees:(double)arg2 minDistance:(double)arg3 maxDistance:(double)arg4 maxResults:(long long)arg5;
- (id)worldPositionFromScreenPosition:(struct CGPoint)arg1 ojbectPos:(struct SCNVector3)arg2 infinitePlane:(_Bool)arg3;
- (void)updateFocusSquare;
- (void)setupFocusSquare;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

