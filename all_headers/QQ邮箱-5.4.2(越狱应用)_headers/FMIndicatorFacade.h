//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

#import "FMIndicatorDelegate-Protocol.h"
#import "FMIndicatorWindowDelegate-Protocol.h"

@class FMIndicatorWindow, NSMutableArray, NSString;
@protocol FMIndicatorTrait;

@interface FMIndicatorFacade : NSObject <FMIndicatorWindowDelegate, FMIndicatorDelegate>
{
    _Bool _isEffective;
    _Bool _isTempHide;
    FMIndicatorWindow *_indicatorWindow;
    NSMutableArray *_indicators;
    NSMutableArray *_showQueue;
    NSMutableArray *_delayHideQueue;
    id <FMIndicatorTrait> _currIndicator;
}

+ (id)shareInstance;
@property(retain, nonatomic) id <FMIndicatorTrait> currIndicator; // @synthesize currIndicator=_currIndicator;
@property(retain, nonatomic) NSMutableArray *delayHideQueue; // @synthesize delayHideQueue=_delayHideQueue;
@property(retain, nonatomic) NSMutableArray *showQueue; // @synthesize showQueue=_showQueue;
@property(retain, nonatomic) NSMutableArray *indicators; // @synthesize indicators=_indicators;
@property(retain, nonatomic) FMIndicatorWindow *indicatorWindow; // @synthesize indicatorWindow=_indicatorWindow;
- (void).cxx_destruct;
- (void)clearDelayHideQueue;
- (void)removeDelayHideFromQueue:(id)arg1;
- (void)addDelayHideToQueue:(id)arg1;
- (void)clearShowQueue;
- (long long)showsCount;
- (id)popHighestShowOverIndicator:(id)arg1;
- (void)removeShowFromQueue:(id)arg1;
- (void)addShowToQueue:(id)arg1;
- (void)indicatorDidHide:(id)arg1;
- (void)handleTappedSendMailIndicator:(id)arg1;
- (void)handleTappedDownloadAttachIndicator:(id)arg1;
- (void)indicatorWindowMessageWasTapped:(id)arg1 withTappedPoint:(struct CGPoint)arg2;
- (_Bool)isIgnoreTapEvent;
- (void)setIgnoreTapEvent:(_Bool)arg1;
- (void)handleStatusBarOrientationDidChange:(id)arg1;
- (void)hideIndicator:(id)arg1;
- (void)fireDelayHideIndicator:(id)arg1;
- (void)hideIndicator:(id)arg1 afterSec:(float)arg2;
- (void)higherIndicator:(id)arg1 willShowOverLowerIndicator:(id)arg2;
- (_Bool)tryShowNextIndicator;
- (_Bool)isForceShow;
- (id)mainNavigationController;
- (id)indicatorWithType:(int)arg1;
- (void)updateError:(id)arg1 withType:(int)arg2 shouldShow:(_Bool)arg3 autoHideDelaySec:(float)arg4;
- (void)updateSuccess:(id)arg1 withType:(int)arg2 shouldShow:(_Bool)arg3 autoHideDelaySec:(float)arg4;
- (void)updateInfo:(id)arg1 withType:(int)arg2 shouldShow:(_Bool)arg3 autoHideDelaySec:(float)arg4;
- (void)updateLoading:(id)arg1 withType:(int)arg2 shouldShow:(_Bool)arg3 autoHideDelaySec:(float)arg4;
- (void)updateProgress:(float)arg1 withType:(int)arg2 shouldShow:(_Bool)arg3 autoHideDelaySec:(float)arg4;
- (_Bool)isIndicatorsEffective;
- (void)setIndicatorsEffective:(_Bool)arg1;
- (id)userInfoWithType:(int)arg1;
- (void)setUserInfo:(id)arg1 withType:(int)arg2;
- (void)resetProgressWithType:(int)arg1;
- (void)updateError:(id)arg1 withType:(int)arg2;
- (void)updateSuccess:(id)arg1 withType:(int)arg2;
- (void)updateInfo:(id)arg1 withType:(int)arg2;
- (void)updateLoading:(id)arg1 withType:(int)arg2;
- (void)updateProgress:(float)arg1 withType:(int)arg2;
- (void)showError:(id)arg1 withType:(int)arg2 autoHideDelaySec:(float)arg3;
- (void)showSuccess:(id)arg1 withType:(int)arg2 autoHideDelaySec:(float)arg3;
- (void)showInfo:(id)arg1 withType:(int)arg2 autoHideDelaySec:(float)arg3;
- (void)showLoading:(id)arg1 withType:(int)arg2 autoHideDelaySec:(float)arg3;
- (void)showProgress:(float)arg1 withType:(int)arg2 autoHideDelaySec:(float)arg3;
- (void)showError:(id)arg1 withType:(int)arg2;
- (void)showSuccess:(id)arg1 withType:(int)arg2;
- (void)showInfo:(id)arg1 withType:(int)arg2;
- (void)showLoading:(id)arg1 withType:(int)arg2;
- (void)showProgress:(float)arg1 withType:(int)arg2;
- (void)restoreShow;
- (void)temporarilyHide;
- (void)hideIndicators;
- (void)hideIndicatorWithType:(int)arg1;
- (void)showIndicatorWithType:(int)arg1;
- (void)unregisterNotifications;
- (void)registerNotifications;
- (void)initAllIndicators;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

