//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

@class MMGroupBulletinManager, MMUnreadMessageCount, MMUser, NSDate, NSMutableArray, NSMutableDictionary, NSString, SNHTTPRequestOperationWrapper, WBProgressHUD, WBTDFMDatabaseQueue;
@protocol MMInteractiveMenuDelegate, MMSingleChatSettingsDelegate;

@interface WBMessagesManager : NSObject
{
    NSString *_currUid;
    WBTDFMDatabaseQueue *_dbQueue;
    NSMutableDictionary *_engines;
    NSMutableArray *_conversations;
    NSMutableDictionary *_conversationMapping;
    unsigned long long _conversationsPage;
    SNHTTPRequestOperationWrapper *deleteConversationWrapper;
    NSMutableArray *topConversations;
    NSDate *oldAssetDate;
    _Bool _enableFullForward;
    _Bool _enableOriginal;
    _Bool _conversationsHasMore;
    _Bool _needCorrection;
    _Bool _isRefreshingToken;
    _Bool _hasStarted;
    _Bool _isNotLaunch;
    _Bool _newMessageHome;
    int _last_reachabilityStatus;
    NSMutableArray *_converationDelegateArray;
    id <MMInteractiveMenuDelegate> _interactiveMenuDelegate;
    id <MMSingleChatSettingsDelegate> _singleChatSettingsDelegate;
    MMUnreadMessageCount *_unreadMessageCount;
    NSMutableDictionary *_chatsHasUnreadMessage;
    WBProgressHUD *_progressHUD;
    MMUser *_myself;
    MMGroupBulletinManager *_bulletinCountdownManager;
    unsigned long long _showGideView;
    id _customUserInfo;
    NSMutableDictionary *_theUserInfo;
    NSMutableDictionary *_users;
    NSMutableDictionary *_currentFetchingUserAndGroupInfo;
    long long _localKickedGroupCount;
    NSString *_last_net_type;
    NSString *_current_net_type;
    long long _last_net_changedStamp;
    unsigned long long _firstPageTotalCount;
    unsigned long long _previousPage;
    unsigned long long _previousPageMaxTime;
    unsigned long long _previousPageMinTime;
    unsigned long long _forwardCount;
    unsigned long long _forwardFailCount;
}

+ (void)saveUnfollowMessageRemindType:(long long)arg1;
+ (long long)currentUnfollowMessageRemindType;
+ (id)currentAccountUserId;
+ (id)sharedManager;
+ (void)initialize;
+ (id)getViewControllerForHUDToAdd:(id)arg1;
+ (_Bool)currentTopViewControllerBePushed:(id)arg1;
+ (id)recurisiveGetCurrentViewController:(id)arg1;
+ (void)reuseUserModel:(id)arg1 users:(id)arg2;
+ (CDUnknownBlockType)getUserBlock:(id)arg1;
+ (long long)messageBoxUnreadCount;
+ (id)userTargetWithGroupId:(long long)arg1;
+ (id)userTargetWithGroup:(id)arg1;
+ (id)userTargetWithUser:(id)arg1;
@property(nonatomic) unsigned long long forwardFailCount; // @synthesize forwardFailCount=_forwardFailCount;
@property(nonatomic) unsigned long long forwardCount; // @synthesize forwardCount=_forwardCount;
@property(nonatomic) unsigned long long previousPageMinTime; // @synthesize previousPageMinTime=_previousPageMinTime;
@property(nonatomic) unsigned long long previousPageMaxTime; // @synthesize previousPageMaxTime=_previousPageMaxTime;
@property(nonatomic) unsigned long long previousPage; // @synthesize previousPage=_previousPage;
@property(nonatomic) _Bool newMessageHome; // @synthesize newMessageHome=_newMessageHome;
@property(nonatomic) unsigned long long firstPageTotalCount; // @synthesize firstPageTotalCount=_firstPageTotalCount;
@property(nonatomic) _Bool isNotLaunch; // @synthesize isNotLaunch=_isNotLaunch;
@property(nonatomic) _Bool hasStarted; // @synthesize hasStarted=_hasStarted;
@property(nonatomic) long long last_net_changedStamp; // @synthesize last_net_changedStamp=_last_net_changedStamp;
@property(nonatomic) int last_reachabilityStatus; // @synthesize last_reachabilityStatus=_last_reachabilityStatus;
@property(retain, nonatomic) NSString *current_net_type; // @synthesize current_net_type=_current_net_type;
@property(retain, nonatomic) NSString *last_net_type; // @synthesize last_net_type=_last_net_type;
@property(nonatomic) long long localKickedGroupCount; // @synthesize localKickedGroupCount=_localKickedGroupCount;
@property(retain, nonatomic) NSMutableDictionary *currentFetchingUserAndGroupInfo; // @synthesize currentFetchingUserAndGroupInfo=_currentFetchingUserAndGroupInfo;
@property(retain, nonatomic) NSMutableDictionary *users; // @synthesize users=_users;
@property(retain, nonatomic) NSMutableDictionary *theUserInfo; // @synthesize theUserInfo=_theUserInfo;
@property(retain, nonatomic) id customUserInfo; // @synthesize customUserInfo=_customUserInfo;
@property(nonatomic) unsigned long long showGideView; // @synthesize showGideView=_showGideView;
@property(retain, nonatomic) MMGroupBulletinManager *bulletinCountdownManager; // @synthesize bulletinCountdownManager=_bulletinCountdownManager;
@property(nonatomic) _Bool isRefreshingToken; // @synthesize isRefreshingToken=_isRefreshingToken;
@property(retain, nonatomic) MMUser *myself; // @synthesize myself=_myself;
@property(nonatomic) _Bool needCorrection; // @synthesize needCorrection=_needCorrection;
@property(retain, nonatomic) WBProgressHUD *progressHUD; // @synthesize progressHUD=_progressHUD;
@property(retain, nonatomic) NSMutableDictionary *chatsHasUnreadMessage; // @synthesize chatsHasUnreadMessage=_chatsHasUnreadMessage;
@property(retain, nonatomic) MMUnreadMessageCount *unreadMessageCount; // @synthesize unreadMessageCount=_unreadMessageCount;
@property(nonatomic) _Bool conversationsHasMore; // @synthesize conversationsHasMore=_conversationsHasMore;
@property(nonatomic) _Bool enableOriginal; // @synthesize enableOriginal=_enableOriginal;
@property(nonatomic) _Bool enableFullForward; // @synthesize enableFullForward=_enableFullForward;
@property(nonatomic) __weak id <MMSingleChatSettingsDelegate> singleChatSettingsDelegate; // @synthesize singleChatSettingsDelegate=_singleChatSettingsDelegate;
@property(nonatomic) __weak id <MMInteractiveMenuDelegate> interactiveMenuDelegate; // @synthesize interactiveMenuDelegate=_interactiveMenuDelegate;
@property(retain, nonatomic) NSMutableArray *converationDelegateArray; // @synthesize converationDelegateArray=_converationDelegateArray;
- (void).cxx_destruct;
- (void)setUnfollowUnreadCount:(unsigned long long)arg1 time:(long long)arg2 inChat:(long long)arg3 chatType:(int)arg4 completeBlock:(CDUnknownBlockType)arg5;
- (id)getAllStickerResource;
- (id)queryLocalPathOfEasterEggForText:(id)arg1;
- (void)updateStickerResource;
- (void)queryRemoteRecentContacts:(int)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)setZanMessagePlayed:(id)arg1 inChat:(id)arg2;
- (id)queryRecentContacts:(int)arg1;
- (void)fetchPicInfoWithMessageIDs:(id)arg1 inChat:(id)arg2;
- (_Bool)isFansgroupEntranceFeatureEnabled;
- (void)updateGroupPushSetting:(_Bool)arg1 inGroup:(long long)arg2;
- (void)removeGroupMembers:(id)arg1 withGroup:(id)arg2;
- (void)addGroupMembers:(id)arg1 withGroup:(id)arg2;
- (void)saveGroupAndMembers:(id)arg1;
- (_Bool)clearUnreadCountForChat:(long long)arg1 chatType:(int)arg2;
- (void)saveOrUpdateMessageGroupSendChats:(id)arg1 isApi:(_Bool)arg2 maxChatTime:(long long)arg3 minChatTime:(long long)arg4;
- (_Bool)deleteAllChildConversationsWithParentChatId:(long long)arg1 parentChatType:(int)arg2;
- (void)loadSubscriptionChildConversationFromServerWithUid:(long long)arg1 loginUid:(long long)arg2 cursor:(int)arg3 count:(int)arg4 vp:(int)arg5 completBlock:(CDUnknownBlockType)arg6;
- (id)queryChatsWithOffset:(int)arg1 limit:(int)arg2;
- (id)queryUser:(long long)arg1;
- (_Bool)messageBoxExistsMessagesWhithUserId:(long long)arg1;
- (void)sendReadStatusForMessage:(id)arg1;
- (void)deleteMessages:(long long)arg1 chatType:(int)arg2;
- (_Bool)queryServerCheckInChat:(long long)arg1 chatType:(int)arg2 oldGlobalId:(long long)arg3 newGlobalId:(long long)arg4;
- (_Bool)updateChatOpenedCount:(int)arg1 forChat:(long long)arg2 chatType:(int)arg3;
- (void)exitGroup:(long long)arg1;
- (void)deleteGroupChat:(long long)arg1 uiUserInfo:(id)arg2 keepEntrance:(_Bool)arg3;
- (void)screenShotEventNotifyTo:(long long)arg1 completedBlock:(CDUnknownBlockType)arg2;
- (_Bool)messageBoxExistsUser:(long long)arg1;
- (_Bool)updateUser:(long long)arg1 blockState:(_Bool)arg2;
- (_Bool)saveUserSetting:(long long)arg1 locationSettingType:(int)arg2;
- (int)queryUserSetting:(long long)arg1;
- (void)notifyMessageReadWithUid:(long long)arg1 messageType:(int)arg2 messages:(id)arg3 completedBlock:(CDUnknownBlockType)arg4;
- (void)deleteMessage:(id)arg1;
- (void)cancelUnifyAllUploadFileOperation;
- (void)unifyResendFileMessage:(id)arg1;
- (void)cancelUploadFileMessage:(id)arg1;
- (void)unifySendFileMessage:(id)arg1;
- (void)sendFileMessage:(id)arg1;
- (void)forwardMessage:(id)arg1;
- (void)sendMessage:(id)arg1;
- (void)saveMessage:(id)arg1;
- (void)sendAudioSliceMessage:(id)arg1;
- (void)deleteMessages:(long long)arg1 chatType:(int)arg2 keepEntrance:(_Bool)arg3;
- (id)queryChatsWithOffset:(int)arg1 limit:(int)arg2 chatType:(int)arg3;
- (void)saveOrUpdateMessageUnfollowChats:(id)arg1 isApi:(_Bool)arg2 maxChatTime:(long long)arg3 minChatTime:(long long)arg4;
- (void)fetchUsersInfo:(id)arg1 uiUserInfo:(id)arg2;
- (void)loadMessageBoxChildConversationFromServerWithUid:(long long)arg1 loginUid:(long long)arg2 cursor:(int)arg3 count:(int)arg4 vp:(int)arg5 completBlock:(CDUnknownBlockType)arg6;
- (void)deleteServerMessages:(id)arg1 userId:(long long)arg2 messageDeleteType:(unsigned long long)arg3 sendType:(unsigned long long)arg4 keepEntrance:(_Bool)arg5 completedBlcok:(CDUnknownBlockType)arg6;
- (void)sendReadStatusForConversation:(id)arg1;
- (_Bool)deleteAllMessageBoxChildConversationsWithParentChatId:(long long)arg1 parentChatType:(int)arg2;
- (void)updateServerCheckInChat:(id)arg1 messages:(id)arg2 sinceId:(long long)arg3 maxMessageId:(long long)arg4 limit:(int)arg5 hasMore:(_Bool)arg6 isFetchNewHistoryMsg:(_Bool)arg7;
- (void)fetchMessagesForChat:(id)arg1 customSinceId:(long long)arg2 maxMessageId:(long long)arg3 offset:(int)arg4 limit:(int)arg5 userBlock:(CDUnknownBlockType)arg6;
- (void)fetchGroupNotices:(long long)arg1 offset:(int)arg2 limit:(int)arg3;
- (id)queryMessages:(id)arg1 afterMsgId:(long long)arg2 offset:(int)arg3 limit:(int)arg4 userBlock:(CDUnknownBlockType)arg5;
- (id)queryMessages:(id)arg1 beforeMsgId:(long long)arg2 offset:(int)arg3 limit:(int)arg4 userBlock:(CDUnknownBlockType)arg5;
- (void)saveMessages:(id)arg1;
- (void)savePicInfoWithMessages:(id)arg1;
- (void)cancelCurrentAudioMessage;
- (long long)nextMessageId;
- (_Bool)saveOrUpdateDraft:(id)arg1 inChat:(long long)arg2 chatType:(int)arg3;
- (void)deleteGroupNotice:(id)arg1;
- (void)approveInviteToGroup:(id)arg1;
- (void)approveJoinGroup:(id)arg1;
- (void)updateGroupNotice:(long long)arg1 isNew:(_Bool)arg2;
- (void)deleteAllGroupNotices;
- (void)updateGroupNoticesWithIsNew:(_Bool)arg1;
- (void)sendReadStatusForGroupNotice;
- (void)closeGroupBulletinWithGroupId:(long long)arg1 bulletinId:(long long)arg2;
- (_Bool)updateBulletin:(id)arg1;
- (long long)selfUid;
- (void)kickGroupMembers:(id)arg1 withGroup:(id)arg2;
- (void)fetchGroupInfo:(long long)arg1 uiUserInfo:(id)arg2;
- (id)queryGroup:(long long)arg1;
- (void)checkAndSaveGroup:(id)arg1;
- (void)saveGroup:(id)arg1;
- (void)saveBuddies:(id)arg1;
- (id)queryChat:(long long)arg1 chatType:(int)arg2;
- (void)didUpdateMessage:(id)arg1 likeState:(long long)arg2;
- (_Bool)updateUser:(long long)arg1 relationship:(int)arg2;
- (void)immediatelyFollowWithMessage:(id)arg1 completedBlock:(CDUnknownBlockType)arg2;
- (void)resendMessage:(id)arg1;
- (void)resendFileMessage:(id)arg1;
- (_Bool)updateMessageAudioState:(int)arg1 forMessage:(long long)arg2 chatType:(int)arg3;
- (void)sendMediaStatusWithMessage:(id)arg1;
- (void)sendAudioReadStatusForGroupMessage:(id)arg1;
- (void)sendAudioReadStatusForMessage:(id)arg1;
- (_Bool)updateMessageAudioUnread:(_Bool)arg1 forMessage:(long long)arg2 chatId:(long long)arg3 chatType:(int)arg4;
- (_Bool)updateAttachmentFileName:(id)arg1 forMessage:(id)arg2;
- (void)resendMessage:(id)arg1 forSecurity:(id)arg2;
- (void)cancelSecurityForMessage:(id)arg1;
- (void)roomShutupList:(long long)arg1 completedBlock:(CDUnknownBlockType)arg2;
- (void)roomMembers:(long long)arg1 completedBlock:(CDUnknownBlockType)arg2;
- (void)roomActiveMembers:(unsigned long long)arg1 limit:(unsigned long long)arg2 inRoom:(long long)arg3 completedBlock:(CDUnknownBlockType)arg4;
- (void)roomOperation:(id)arg1 completedBlock:(CDUnknownBlockType)arg2;
- (void)recallMessage:(id)arg1 completedBlock:(CDUnknownBlockType)arg2;
- (void)deleteGroupMessages:(id)arg1 group:(long long)arg2 uiUserInfo:(id)arg3 keepEntrance:(_Bool)arg4;
- (_Bool)deleteDraftInChat:(long long)arg1 chatType:(int)arg2;
- (id)queryDraftInChat:(long long)arg1 chatType:(int)arg2;
- (void)refreshSecurityCodeForMessage:(id)arg1;
- (_Bool)shouldReloadChatWhenMessageReceived:(id)arg1;
- (void)refreshChatWithBlockUnfollowMsgStatusInfo:(id)arg1;
- (void)blockAllUnfollowPrivateMessage:(_Bool)arg1 complete:(CDUnknownBlockType)arg2;
- (void)refreshChatWithRecallMsg:(id)arg1;
- (long long)generalMicroseconds;
- (id)accessToNetworkSignalStatus;
- (void)markFansGroupClickTimeWithMessage:(id)arg1;
- (void)markSubscriptionClickTimeWithMessage:(id)arg1;
- (id)subscriptionFromMemoryOrDB;
- (void)deleteLocalDataForMessageGroupSendConversationWithChatId:(long long)arg1;
- (void)deleteConversationAfterMoveToBlackList:(id)arg1;
- (void)blockSubscriptionMessageWithConversation:(id)arg1 withParameters:(id)arg2 successBlock:(CDUnknownBlockType)arg3 failureBlock:(CDUnknownBlockType)arg4;
- (void)updateFansGroupListLatestMessage;
- (void)removeMessageBoxFolderInMemory;
- (void)updateMessageBoxFolderUnreadCountAtLeaveConversation:(id)arg1;
- (void)updateMessageBoxFolderAtDeleteConversation:(id)arg1;
- (void)updateMessageBoxFolderAfterConversationDeletedSync;
- (void)updateFolderLatestMessageWithChatId:(long long)arg1 chatType:(int)arg2 deletedMessage:(id)arg3;
- (void)updateFolderLatestMessageWithChatId:(long long)arg1 chatType:(int)arg2;
- (void)updateSubscriptionLatestMessage;
- (void)updateSubscriptionLatestMessageAfterDeleteMessage:(id)arg1;
- (void)updateSubscriptionLatestMessageAfterDeleteConversationWithChatId:(long long)arg1 chatType:(int)arg2;
- (void)updateSubscriptionUnreadCountAfterDeleteConversation:(id)arg1;
- (void)conversationDelegatesPerformConversationsDidRemoveWithConversations:(id)arg1 isSuccsss:(_Bool)arg2;
- (void)conversationDelegatesPerformConversationsDidChangedWithConversations:(id)arg1;
- (void)conversationDelegatesPerformConversationLoadingDidSuccedWithConversations:(id)arg1 hasMore:(_Bool)arg2 page:(long long)arg3;
- (_Bool)shouldSetLatestChatWhenReceivedMessage:(id)arg1;
- (void)newMessageReceived:(id)arg1;
- (void)deleteGroupMessages:(id)arg1;
- (void)messageStatusChanged:(id)arg1;
- (void)saveContactAndNotifyUI:(id)arg1;
- (void)refreshContactWithUid:(id)arg1;
- (void)userProfileDidRefresh:(id)arg1;
- (void)didUpdateInvatation:(id)arg1;
- (void)downloadAudioFileForMessage:(id)arg1;
- (id)cachePath;
- (void)WBAlbumLastPhotoChange:(id)arg1;
- (_Bool)isNewAsset:(id)arg1;
- (void)unblockUserAfterSentMessage:(id)arg1 needUpdateDatabase:(_Bool)arg2;
- (void)hideBlockWithMessage:(id)arg1;
- (long long)getMessageUnreadCountFormMessageList;
- (void)cancelTopConversation;
- (void)cancelDeleteConversation;
- (void)deleteConversation:(id)arg1 withExtraParameters:(id)arg2 keepEntrance:(_Bool)arg3;
- (void)deleteConversation:(id)arg1 withExtraParameters:(id)arg2 isMoveToBlackList:(_Bool)arg3 keepEntrance:(_Bool)arg4;
- (void)sendInteraticeMenuEvent:(id)arg1 menuItem:(id)arg2;
- (void)getInteractiveMenuData:(id)arg1;
- (id)attachmentCachePath;
- (void)currentAccountDidChangeNotification:(id)arg1;
- (void)saveRecentContactsNotification:(id)arg1;
- (void)contactEngineDidUnfollowContactNotification:(id)arg1;
- (void)testFetchChats:(id)arg1;
- (void)removeConversationDelegate:(id)arg1;
- (void)addConversationDelegate:(id)arg1;
- (void)handleGDIDDidChange;
- (id)init;
- (void)saveNetParameter:(id)arg1;
- (void)installNetworkStatusListener;
- (void)initForNewUser;
- (void)clearForCurrentUser;
- (void)didFinishSendPrivateMail:(id)arg1;
- (void)shareMessage:(id)arg1 content:(id)arg2 toChatId:(long long)arg3 chatType:(int)arg4 fromChat:(_Bool)arg5;
- (void)forwardMessage:(id)arg1 ownerId:(id)arg2 contentId:(id)arg3 comment:(id)arg4 toUids:(id)arg5 pids:(id)arg6 chatType:(int)arg7 mode:(int)arg8 type:(int)arg9 subType:(int)arg10;
- (void)shareMessage:(id)arg1 content:(id)arg2 toChatId:(long long)arg3 chatType:(int)arg4 localChat:(id)arg5 fromChat:(_Bool)arg6;
- (void)directlySendPrivateMessageToContact:(id)arg1 withContent:(id)arg2 attachement:(id)arg3 extraParameters:(id)arg4 notifyResultWithValue:(id)arg5;
- (void)clearUnreadCountForAllNormalChats;
- (void)updateChatsUnreadCount:(id)arg1;
- (void)clearChatUnreadCount:(id)arg1;
- (void)clearChatUnreadCountWithChatId:(id)arg1;
- (void)clearMessageBoxUnreadCount;
- (void)clearChatUnreadCountWithMessage:(id)arg1;
- (void)refreshUnreadMessageCountForClearChatUnreadCount:(id)arg1;
- (void)refreshUnreadMessageWithNewMessage:(id)arg1;
- (void)refreshUnreadMessageCountWithNewChatUnreadCount:(id)arg1;
- (void)refreshChatListUnreadCount;
- (void)postNeedReloadBadgeValueNotification;
- (void)addChatWithMessage:(id)arg1;
- (void)refreshChat:(long long)arg1 chatType:(int)arg2 clearUnread:(_Bool)arg3;
- (void)refreshChat:(long long)arg1 chatType:(int)arg2;
- (void)deleteChat:(long long)arg1 chatType:(int)arg2;
- (void)removeLatestChat:(long long)arg1 type:(int)arg2;
- (void)setLatestChat:(long long)arg1 type:(int)arg2 time:(int)arg3;
- (_Bool)isContactInfoComplete:(id)arg1;
- (id)userTargetWithChatId:(long long)arg1 type:(int)arg2;
- (void)deleteLocalDataForMessageBox:(id)arg1;
- (void)deleteLocalDataForConversation:(id)arg1 keepEntrance:(_Bool)arg2;
- (void)newMessage:(id)arg1 sentInConversation:(id)arg2;
- (void)reloadChatListWithNewChat:(id)arg1;
- (void)refreshConversationArrayWithNewConersation:(id)arg1;
- (void)reloadChatListAfterNewGroupNotice:(id)arg1;
- (void)reloadChatListFromeNewMessages:(id)arg1;
- (void)reloadChatListFromeNewMessage:(id)arg1;
- (void)refreshFansGroupChat:(long long)arg1;
- (void)refreshMessageBoxChat;
- (id)fansGroupWithMessage:(id)arg1;
- (id)subscriptionWithMessage:(id)arg1;
- (id)subConversationWithMessage:(id)arg1 chatId:(long long)arg2 chatType:(int)arg3;
- (id)chatForMessage:(id)arg1;
- (_Bool)groupConversationIsActivated:(id)arg1;
- (void)messageMigrateNotification:(id)arg1;
- (void)topChatsNotification:(id)arg1;
- (void)reloadChatListAfterTopChats:(id)arg1;
- (void)syncTopChatsForOldVersion;
- (void)groupConversation:(long long)arg1 isTop:(_Bool)arg2 completedBlock:(CDUnknownBlockType)arg3;
- (void)cancelTopConversation:(id)arg1 completedBlock:(CDUnknownBlockType)arg2;
- (void)topConversation:(id)arg1 completedBlock:(CDUnknownBlockType)arg2;
- (void)loadMoreConversationsWithExtraParameters:(id)arg1;
- (void)refreshConversationsWithExtraParameters:(id)arg1;
- (void)loadCachedConversations;
- (_Bool)checkUserInfo:(id)arg1;
- (void)loadConversationsFromServerWithExtraParameters:(id)arg1 page:(long long)arg2;
- (unsigned long long)limitWithPage:(unsigned long long)arg1;
- (unsigned long long)offsetWithPage:(unsigned long long)arg1;
- (unsigned long long)cursorWithPage:(unsigned long long)arg1;
- (id)generateTopUserIdsString;
- (id)convertChats:(id)arg1;
- (_Bool)chatsHasMore:(int)arg1 chatsCount:(long long)arg2;
- (void)processServerConversations:(id)arg1 page:(long long)arg2 hasMore:(_Bool)arg3 needCorrection:(_Bool)arg4 userInfo:(id)arg5;
- (_Bool)needSaveUserWithConveration:(id)arg1;
- (id)getNewMessagesWithChats:(id)arg1;
- (void)reloadDataWithCurrentPage;
- (void)loadConversations:(id)arg1 currentPage:(long long)arg2;
- (void)loadConversations:(id)arg1 page:(long long)arg2 offset:(long long)arg3 limit:(long long)arg4;
- (void)loadConversations:(id)arg1 page:(long long)arg2;
- (void)loadChatsFromChatContainer:(id)arg1;
- (void)reuseUserForChats:(id)arg1;
- (void)reuseUserForChat:(id)arg1;
- (void)insertMessageBoxs:(id)arg1;
- (void)configAccountUnreadCount:(id)arg1;
- (void)configAccountUnreadCountFromPolling:(id)arg1;
- (void)configAccountUnreadCountFromUserList:(id)arg1;
- (void)sendUserLocationEvent:(id)arg1 location:(id)arg2;
- (id)chatForChatId:(long long)arg1 chatType:(int)arg2 saveToMemory:(_Bool)arg3;
- (id)chatForChatId:(long long)arg1 chatType:(int)arg2;
- (id)conversationForUser:(id)arg1;
- (void)deleteGroupMessages:(long long)arg1 withHUD:(_Bool)arg2;
- (void)deleteMessage:(id)arg1 messageDeleteType:(unsigned long long)arg2 messageSendType:(unsigned long long)arg3 successBlock:(CDUnknownBlockType)arg4 failureBlock:(CDUnknownBlockType)arg5;
- (void)reloadChatListAfterDeleteUnfollowPrivateMessage:(id)arg1;
- (void)reloadChatListAfterDeleteAllChatsExceptMessageBox;
- (void)reloadChatListAfterDeleteMessage:(id)arg1;
- (void)reloadSubscriptionAfterDeleteMessage:(id)arg1;
- (void)doReportWithParameter:(id)arg1 successBlock:(CDUnknownBlockType)arg2 failureBlock:(CDUnknownBlockType)arg3;
- (void)reportWeiboWithId:(long long)arg1 rUID:(long long)arg2 content:(id)arg3 url:(id)arg4 successBlock:(CDUnknownBlockType)arg5 failedBlock:(CDUnknownBlockType)arg6;
- (void)reportMessage:(id)arg1 successBlock:(CDUnknownBlockType)arg2 failureBlock:(CDUnknownBlockType)arg3;
- (void)configServerCheckAndSaveMessages:(id)arg1 chat:(id)arg2 maxId:(long long)arg3 hasMore:(_Bool)arg4;
- (void)setChatToChatMapping:(id)arg1;
- (id)getChatFromChatMapping:(long long)arg1 chatType:(int)arg2;
- (id)getChatFromChatMapping:(id)arg1;
- (void)directMessageFunctionSwitchControl:(id)arg1;
- (void)addGroupMemberSync:(id)arg1;
- (void)kickGroupMemberSync:(id)arg1;
- (void)fetchGroupStatus:(id)arg1;
- (void)fetchUsersInfo:(id)arg1;
- (void)fetchGroupInfo:(id)arg1;
- (void)setLatestChatWhenHasFetchedGroupInfoOrUserInfo:(id)arg1;
- (void)fansGroupFolderDeletedNotification:(id)arg1;
- (void)groupChatDidExit:(id)arg1;
- (id)obtainAp;
- (id)obtainLast_type;
- (void)logMessage:(id)arg1;
- (void)setCurrentLanguage;
- (void)saveGideViewNetworkState:(_Bool)arg1;
- (void)saveGideViewAccountState:(_Bool)arg1;
- (void)loadGideViewAccountState;
- (void)setAccountAuth;
- (void)tokenExpired;
- (void)willEnterForeground;
- (void)didEnterBackground;
- (void)networkStatusChanged:(id)arg1;
- (void)updateNetworkStatus;
- (void)makeManagerStarted;
- (void)startup;
- (void)dealloc;
- (void)closeGroutPublicMessageNotfication:(id)arg1;
- (void)groupPublicMessageNotification:(id)arg1;

@end

