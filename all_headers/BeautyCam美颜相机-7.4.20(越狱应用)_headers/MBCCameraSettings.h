//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@interface MBCCameraSettings : NSObject
{
}

+ (_Bool)showQuickTakePhotoModeSwitch;
+ (void)setFunnyMaterialFaceBeautifyFeaturesInfo:(id)arg1;
+ (id)funnyMaterialFaceBeautifyFeaturesInfo;
+ (void)setLastFunnyMaterialID:(id)arg1;
+ (id)lastFunnyMaterialID;
+ (void)setShouldShowFunnyMaterialSlider:(_Bool)arg1;
+ (_Bool)shouldShowFunnyMaterialSlider;
+ (double)defaultFunnyFilterAlpha;
+ (long long)makeupBeautyDefaultLavel;
+ (void)setShouldShowMakeupFaceTypeSlider:(_Bool)arg1;
+ (_Bool)shouldShowMakeupFaceTypeSlider;
+ (void)setLastMakeupFaceTypeID:(id)arg1;
+ (id)lastMakeupFaceTypeID;
+ (void)setLastMakeupMaterialID:(id)arg1;
+ (id)lastMakeupMaterialID;
+ (void)clearLastSelectedMakeupFaceFeatureID;
+ (void)setLastSelectedMakeupFaceFeatureID:(id)arg1;
+ (id)lastSelectedMakeupFaceFeatureID;
+ (void)addDefaultMakeupFaceFeatureIDs;
+ (void)removeAllMakeupFaceFeatureIDs;
+ (void)removeMakeupFaceFeatureID:(id)arg1;
+ (void)addMakeupFaceFeatureID:(id)arg1;
+ (id)makeupFaceFeatureIDStrings;
+ (void)setMakeupMiddlesexFaceTypeValue:(double)arg1;
+ (double)makeupMiddlesexFaceTypeValueWithDefault:(double)arg1;
+ (void)setMakeupGentilityFaceTypeValue:(double)arg1;
+ (double)makeupGentilityFaceTypeValueWithDefault:(double)arg1;
+ (void)setMakeupMatureFaceTypeValue:(double)arg1;
+ (double)makeupMatureFaceTypeValueWithDefault:(double)arg1;
+ (void)setMakeupLovelyFaceTypeValue:(double)arg1;
+ (double)makeupLovelyFaceTypeValueWithDefault:(double)arg1;
+ (void)setMakeupNaturalFaceTypeValue:(double)arg1;
+ (double)makeupNaturalFaceTypeValueWithDefault:(double)arg1;
+ (void)setBeautyEyelashFeatureValue:(double)arg1;
+ (double)beautyEyelashFeatureValueWithDefault:(double)arg1;
+ (_Bool)isBeautyEyelashFeatureMemoryValueExisted;
+ (void)setBeautyEyelinerFeatureValue:(double)arg1;
+ (double)beautyEyelinerFeatureValueWithDefault:(double)arg1;
+ (_Bool)isBeautyEyelinerFeatureMemoryValueExisted;
+ (void)setBeautyEyebrowFeatureValue:(double)arg1;
+ (double)beautyEyebrowFeatureValueWithDefault:(double)arg1;
+ (_Bool)isBeautyEyebrowFeatureMemoryValueExisted;
+ (void)setBeautyBlusherFeatureValue:(double)arg1;
+ (double)beautyBlusherFeatureValueWithDefault:(double)arg1;
+ (_Bool)isBeautyBlusherFeatureMemoryValueExisted;
+ (void)setBeautyLipstickFeatureValue:(double)arg1;
+ (double)beautyLipstickFeatureValueWithDefault:(double)arg1;
+ (_Bool)isBeautyLipstickFeatureMemoryValueExisted;
+ (double)defaultBeautyEyelashFeatureValue;
+ (double)defaultBeautyEyelinerFeatureValue;
+ (double)defaultBeautyEyebrowFeatureValue;
+ (double)defaultBeautyBlusherFeatureValue;
+ (double)defaultBeautyLipstickFeatureValue;
+ (double)defaultBeautyMouseFeatureValue;
+ (double)defaultBeautyNoseFeatureValue;
+ (double)defaultBeautyEyeSpanFeatureValue;
+ (double)defaultBeautyLittleFaceFeatureValue;
+ (double)defaultBeautyLongFaceFeatureValue;
+ (double)defaultBeautyChinFeatureValue;
+ (double)defaultBeautyContourFeatureValue;
+ (double)experimentDefaultBeautyContourFeatureValue;
+ (double)defaultBeautyEyesFeatureValue;
+ (double)defaultBeautySkinFeatureValue;
+ (void)setShowBeautyBarMakeupSectionRedDot:(_Bool)arg1;
+ (_Bool)showBeautyBarMakeupSectionRedDot;
+ (void)setLastBeautyMaterialID:(id)arg1;
+ (id)lastBeautyMaterialID;
+ (void)setBeautyMouseFeatureValue:(double)arg1;
+ (double)beautyMouseFeatureValueWithDefault:(double)arg1;
+ (_Bool)isBeautyMouseFeatureMemoryValueExisted;
+ (void)setBeautyNoseFeatureValue:(double)arg1;
+ (double)beautyNoseFeatureValueWithDefault:(double)arg1;
+ (_Bool)isBeautyNoseFeatureMemoryValueExisted;
+ (void)setBeautyEyeSpanFeatureValue:(double)arg1;
+ (double)beautyEyeSpanFeatureValueWithDefault:(double)arg1;
+ (_Bool)isBeautyEyeSpanFeatureMemoryValueExisted;
+ (void)setBeautyLittleFaceFeatureValue:(double)arg1;
+ (double)beautyLittleFaceFeatureValueWithDefault:(double)arg1;
+ (_Bool)isBeautyLittleFaceFeatureMemoryValueExisted;
+ (void)setBeautyLongFaceFeatureValue:(double)arg1;
+ (double)beautyLongFaceFeatureValueWithDefault:(double)arg1;
+ (_Bool)isBeautyLongFaceFeatureMemoryValueExisted;
+ (void)setBeautyEyesFeatureValue:(double)arg1;
+ (double)beautyEyesFeatureValueWithDefault:(double)arg1;
+ (_Bool)isBeautyEyesFeatureMemoryValueExisted;
+ (void)setBeautyChinFeatureValue:(double)arg1;
+ (double)beautyChinFeatureValueWithDefault:(double)arg1;
+ (_Bool)isBeautyChinFeatureMemoryValueExisted;
+ (void)setBeautyContourFeatureValue:(double)arg1;
+ (double)beautyContourFeatureValueWithDefault:(double)arg1;
+ (_Bool)isBeautyContourFeatureMemoryValueExisted;
+ (void)setBeautySkinFeatureValue:(double)arg1;
+ (double)beautySkinFeatureValueWithDefault:(double)arg1;
+ (_Bool)isBeautySkinFeatureMemoryValueExisted;
+ (_Bool)isBeautyPercentMemoryValueExisted;
+ (long long)beautyPercent;
+ (void)setBeautyPercent:(long long)arg1;
+ (long long)flashState;
+ (void)resetFlashState;
+ (id)flashStateKeyOfCameraPosition:(long long)arg1;
+ (void)setFlashState:(long long)arg1;
+ (void)saveDelayCaptureMode:(long long)arg1;
+ (long long)delayCaptureMode;
+ (void)saveTouchCapture:(_Bool)arg1;
+ (_Bool)touchCapture;
+ (_Bool)isSupportAVCapture:(long long)arg1;
+ (_Bool)isSupportAVCapture;
+ (_Bool)canFlipCameraPosition;
+ (void)flipCameraPosition;
+ (long long)nextCameraPosition;
+ (long long)correctedCameraPositionWithValue:(long long)arg1;
+ (long long)cameraPosition;
+ (void)setCameraPosition:(long long)arg1;
+ (void)saveFloat:(double)arg1 forKey:(id)arg2;
+ (double)floatForKey:(id)arg1 defaultValue:(double)arg2;
+ (void)saveBool:(_Bool)arg1 forKey:(id)arg2;
+ (_Bool)boolForKey:(id)arg1 defaultValue:(_Bool)arg2;
+ (void)saveInteger:(long long)arg1 forKey:(id)arg2;
+ (long long)integerForKey:(id)arg1 defaultValue:(long long)arg2;
+ (void)saveString:(id)arg1 forKey:(id)arg2;
+ (id)stringForKey:(id)arg1 defaultValue:(id)arg2;
+ (void)removeObjectForKey:(id)arg1;
+ (void)saveArray:(id)arg1 forKey:(id)arg2;
+ (id)arrayForKey:(id)arg1 defaultValue:(id)arg2;
+ (void)saveDictionary:(id)arg1 forKey:(id)arg2;
+ (id)dictionaryForKey:(id)arg1 defaultValue:(id)arg2;
+ (void)initialize;
+ (void)setDetailFaceFeatureSectionType:(long long)arg1;
+ (long long)detailFaceFeatureSectionType;

@end

