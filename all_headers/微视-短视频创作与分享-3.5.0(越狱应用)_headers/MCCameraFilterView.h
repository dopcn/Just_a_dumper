//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <UIKit/UIView.h>

#import "UICollectionViewDataSource-Protocol.h"
#import "UICollectionViewDelegate-Protocol.h"
#import "UICollectionViewDelegateFlowLayout-Protocol.h"

@class BaseCollectionLayout, FilterSlider, NSArray, NSMutableDictionary, NSString, NotWorkView, UICollectionView;
@protocol MCCameraBottomBarDelegate;

@interface MCCameraFilterView : UIView <UICollectionViewDelegate, UICollectionViewDataSource, UICollectionViewDelegateFlowLayout>
{
    _Bool _hideFilterGroup;
    id <MCCameraBottomBarDelegate> _delegate;
    NSArray *_groups;
    NSArray *_filters;
    NSArray *_beautys;
    UICollectionView *_collectionView;
    BaseCollectionLayout *_collectionViewFlowLayout;
    UICollectionView *_groupCollectionView;
    BaseCollectionLayout *_groupLayout;
    NSString *_selectedGroupID;
    UIView *_selectedGroupLine;
    NSMutableDictionary *_selectItemDic;
    FilterSlider *_slider;
    NotWorkView *_notWorkView1;
    NotWorkView *_notWorkView2;
}

+ (struct CGRect)getGroupFrame;
+ (struct CGRect)getCollectionViewFrame;
+ (double)getHeight;
@property(retain, nonatomic) NotWorkView *notWorkView2; // @synthesize notWorkView2=_notWorkView2;
@property(retain, nonatomic) NotWorkView *notWorkView1; // @synthesize notWorkView1=_notWorkView1;
@property(retain, nonatomic) FilterSlider *slider; // @synthesize slider=_slider;
@property(retain, nonatomic) NSMutableDictionary *selectItemDic; // @synthesize selectItemDic=_selectItemDic;
@property(retain, nonatomic) UIView *selectedGroupLine; // @synthesize selectedGroupLine=_selectedGroupLine;
@property(retain, nonatomic) NSString *selectedGroupID; // @synthesize selectedGroupID=_selectedGroupID;
@property(retain, nonatomic) BaseCollectionLayout *groupLayout; // @synthesize groupLayout=_groupLayout;
@property(retain, nonatomic) UICollectionView *groupCollectionView; // @synthesize groupCollectionView=_groupCollectionView;
@property(retain, nonatomic) BaseCollectionLayout *collectionViewFlowLayout; // @synthesize collectionViewFlowLayout=_collectionViewFlowLayout;
@property(retain, nonatomic) UICollectionView *collectionView; // @synthesize collectionView=_collectionView;
@property(retain, nonatomic) NSArray *beautys; // @synthesize beautys=_beautys;
@property(retain, nonatomic) NSArray *filters; // @synthesize filters=_filters;
@property(retain, nonatomic) NSArray *groups; // @synthesize groups=_groups;
@property(nonatomic) __weak id <MCCameraBottomBarDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) _Bool hideFilterGroup; // @synthesize hideFilterGroup=_hideFilterGroup;
- (void).cxx_destruct;
- (struct CGSize)collectionView:(id)arg1 layout:(id)arg2 referenceSizeForHeaderInSection:(long long)arg3;
- (double)collectionView:(id)arg1 layout:(id)arg2 minimumInteritemSpacingForSectionAtIndex:(long long)arg3;
- (double)collectionView:(id)arg1 layout:(id)arg2 minimumLineSpacingForSectionAtIndex:(long long)arg3;
- (struct UIEdgeInsets)collectionView:(id)arg1 layout:(id)arg2 insetForSectionAtIndex:(long long)arg3;
- (struct CGSize)collectionView:(id)arg1 layout:(id)arg2 sizeForItemAtIndexPath:(id)arg3;
- (void)sliderAlpha;
- (void)collectionView:(id)arg1 didSelectItemAtIndexPath:(id)arg2;
- (id)collectionView:(id)arg1 viewForSupplementaryElementOfKind:(id)arg2 atIndexPath:(id)arg3;
- (id)collectionView:(id)arg1 cellForItemAtIndexPath:(id)arg2;
- (long long)collectionView:(id)arg1 numberOfItemsInSection:(long long)arg2;
- (long long)numberOfSectionsInCollectionView:(id)arg1;
- (void)setIndexPath:(id)arg1 groupID:(id)arg2;
- (void)setSelectedGroupCell:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)checkSelect;
@property(readonly, nonatomic) _Bool isShowSlider;
- (void)setAlpha:(double)arg1;
- (void)layoutSubviews;
- (id)initWithDelegate:(id)arg1;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

