//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <UIKit/UIViewController.h>

#import "GJCFAssetCellDelegate-Protocol.h"
#import "GJCFAssetsPreviewControllerDelegate-Protocol.h"
#import "UICollectionViewDataSource-Protocol.h"
#import "UICollectionViewDelegate-Protocol.h"
#import "UIImagePickerControllerDelegate-Protocol.h"

@class GJCFAlbums, NSMutableArray, NSMutableDictionary, NSString, UIButton, UICollectionView, UIImageView, UIView;
@protocol GJCFCameraPhotosViewControllerDelegate;

@interface GJCFCameraPhotosViewController : UIViewController <UICollectionViewDataSource, UICollectionViewDelegate, GJCFAssetCellDelegate, GJCFAssetsPreviewControllerDelegate, UIImagePickerControllerDelegate>
{
    id <GJCFCameraPhotosViewControllerDelegate> _delegate;
    long long _mutilSelectLimitCount;
    long long _colums;
    double _columSpace;
    GJCFAlbums *_albums;
    NSMutableArray *_selectedStateAssetArray;
    UIImageView *_customBottomToolBar;
    UIButton *_finishDoneBtn;
    UICollectionView *_collectionView;
    NSMutableArray *_assetsArray;
    NSMutableDictionary *_selectedStateAssetQueue;
    UIView *_baseView;
}

@property(retain, nonatomic) UIView *baseView; // @synthesize baseView=_baseView;
@property(retain, nonatomic) NSMutableDictionary *selectedStateAssetQueue; // @synthesize selectedStateAssetQueue=_selectedStateAssetQueue;
@property(retain, nonatomic) NSMutableArray *assetsArray; // @synthesize assetsArray=_assetsArray;
@property(retain, nonatomic) UICollectionView *collectionView; // @synthesize collectionView=_collectionView;
@property(retain, nonatomic) UIButton *finishDoneBtn; // @synthesize finishDoneBtn=_finishDoneBtn;
@property(retain, nonatomic) UIImageView *customBottomToolBar; // @synthesize customBottomToolBar=_customBottomToolBar;
@property(retain, nonatomic) NSMutableArray *selectedStateAssetArray; // @synthesize selectedStateAssetArray=_selectedStateAssetArray;
@property(retain, nonatomic) GJCFAlbums *albums; // @synthesize albums=_albums;
@property(nonatomic) double columSpace; // @synthesize columSpace=_columSpace;
@property(nonatomic) long long colums; // @synthesize colums=_colums;
@property(nonatomic) long long mutilSelectLimitCount; // @synthesize mutilSelectLimitCount=_mutilSelectLimitCount;
@property(nonatomic) __weak id <GJCFCameraPhotosViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)saveImageToPhotos:(id)arg1;
- (void)imagePickerController:(id)arg1 didFinishPickingMediaWithInfo:(id)arg2;
- (void)imagePickerControllerDidCancel:(id)arg1;
- (void)previewControllerDidCompleteSelectAsset:(id)arg1;
- (long long)numberOfSelectAsset;
- (void)previewController:(id)arg1 didUpdateAssetSelectedState:(id)arg2;
- (id)previewControllerShouldCustomStyle:(id)arg1;
- (_Bool)assetCellShouldChangeToSelectedState:(id)arg1;
- (void)assetCellShouldBeginShowBigImage:(id)arg1;
- (void)assetCell:(id)arg1 changeToState:(_Bool)arg2;
- (void)collectionView:(id)arg1 didSelectItemAtIndexPath:(id)arg2;
- (void)collectionView:(id)arg1 willDisplayCell:(id)arg2 forItemAtIndexPath:(id)arg3;
- (id)collectionView:(id)arg1 cellForItemAtIndexPath:(id)arg2;
- (long long)collectionView:(id)arg1 numberOfItemsInSection:(long long)arg2;
- (long long)numberOfSectionsInCollectionView:(id)arg1;
- (void)finishSelectImage;
- (void)previewSelectedPhotos;
- (void)dismissPickerViewController;
- (void)back;
- (void)setupBackBtn:(id)arg1;
- (void)setupTitleView:(id)arg1;
- (void)setupStyle;
- (id)defaultStyle;
- (void)removeCropingImageOnView:(id)arg1;
- (void)showCropingImageOnView:(id)arg1;
- (void)openCamera;
- (void)updateFinishDoneBtnTitle;
- (void)updateInitSelectedStateWithArray:(id)arg1;
- (void)setupPhotos;
- (void)viewWillAppear:(_Bool)arg1;
- (void)dealloc;
- (void)viewSafeAreaInsetsDidChange;
- (void)viewDidLoad;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

