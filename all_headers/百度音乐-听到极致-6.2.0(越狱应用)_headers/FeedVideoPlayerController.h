//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

#import "BMVideoPlayerDelegate-Protocol.h"
#import "BMVideoPlayerTipViewDelegate-Protocol.h"
#import "FeedVideoPlayerControlDataSource-Protocol.h"
#import "FeedVideoPlayerControlViewDelegate-Protocol.h"

@class BMVideoPlayer, FeedListResultModel, FeedVideoPlayerControlView, MVObject, NSString, UIView;
@protocol FeedVideoPlayerControlViewDelegate;

@interface FeedVideoPlayerController : NSObject <BMVideoPlayerDelegate, BMVideoPlayerTipViewDelegate, FeedVideoPlayerControlDataSource, FeedVideoPlayerControlViewDelegate>
{
    _Bool _isAutoPause;
    _Bool _shouldResumePlay;
    _Bool _isAudioMute;
    _Bool _shouldRePlay;
    FeedVideoPlayerControlView *_videoPlayerControlView;
    NSString *_videoUrl;
    BMVideoPlayer *_videoPlayer;
    UIView *_videoPlayerPanelView;
    double _resumePlayTime;
    id <FeedVideoPlayerControlViewDelegate> _videoPlayerControlDelegate;
    FeedListResultModel *_feedListResultModel;
    long long _playerType;
    MVObject *_mvObject;
    struct CGRect _panelViewFrame;
}

+ (id)sharedInstance;
@property(nonatomic) _Bool shouldRePlay; // @synthesize shouldRePlay=_shouldRePlay;
@property(retain, nonatomic) MVObject *mvObject; // @synthesize mvObject=_mvObject;
@property(nonatomic) long long playerType; // @synthesize playerType=_playerType;
@property(nonatomic) _Bool isAudioMute; // @synthesize isAudioMute=_isAudioMute;
@property(retain, nonatomic) FeedListResultModel *feedListResultModel; // @synthesize feedListResultModel=_feedListResultModel;
@property(nonatomic) __weak id <FeedVideoPlayerControlViewDelegate> videoPlayerControlDelegate; // @synthesize videoPlayerControlDelegate=_videoPlayerControlDelegate;
@property(nonatomic) _Bool shouldResumePlay; // @synthesize shouldResumePlay=_shouldResumePlay;
@property(nonatomic) double resumePlayTime; // @synthesize resumePlayTime=_resumePlayTime;
@property(nonatomic) struct CGRect panelViewFrame; // @synthesize panelViewFrame=_panelViewFrame;
@property(retain, nonatomic) UIView *videoPlayerPanelView; // @synthesize videoPlayerPanelView=_videoPlayerPanelView;
@property(retain, nonatomic) BMVideoPlayer *videoPlayer; // @synthesize videoPlayer=_videoPlayer;
@property(copy, nonatomic) NSString *videoUrl; // @synthesize videoUrl=_videoUrl;
@property(retain, nonatomic) FeedVideoPlayerControlView *videoPlayerControlView; // @synthesize videoPlayerControlView=_videoPlayerControlView;
@property(nonatomic) _Bool isAutoPause; // @synthesize isAutoPause=_isAutoPause;
- (void).cxx_destruct;
- (void)shutdown;
- (void)stop;
- (void)pause;
- (void)play;
- (void)prepareToPlay;
- (void)videoPlayerTipView:(id)arg1 reConnect:(id)arg2;
- (void)player:(id)arg1 stoppedWithError:(id)arg2;
- (void)player:(id)arg1 statusDidChange:(long long)arg2;
- (void)videoPlayerControlView:(id)arg1 shareBtnEvent:(id)arg2;
- (void)videoPlayerControlView:(id)arg1 handleDoubleClick:(id)arg2;
- (void)videoPlayerControlView:(id)arg1 handleSingleClick:(id)arg2;
- (void)videoPlayerControlView:(id)arg1 exitFullScreenEvent:(id)arg2;
- (void)videoPlayerControlView:(id)arg1 fullScreenEvent:(id)arg2;
- (void)videoPlayerControlView:(id)arg1 seekTo:(double)arg2 videoPlayerProgressBar:(id)arg3;
- (void)videoPlayerControlView:(id)arg1 pauseEvent:(id)arg2;
- (void)videoPlayerControlView:(id)arg1 playEvent:(id)arg2;
- (double)videoPlayerControlView:(id)arg1 cacheDuration:(id)arg2;
- (_Bool)videoPlayerControlView:(id)arg1 isPlaying:(id)arg2;
- (double)videoPlayerControlView:(id)arg1 totalDuration:(id)arg2;
- (double)videoPlayerControlView:(id)arg1 currentTime:(id)arg2;
- (void)prepareForVideoPlayerControlView;
- (void)statisticForVideo;
- (void)playVideoWithUrl:(id)arg1 playerType:(long long)arg2 panelViewFrame:(struct CGRect)arg3 mvObject:(id)arg4 resumePlayTime:(double)arg5;
- (void)reachabilityChanged:(id)arg1;
- (void)registerNetObserver;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

