//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "KGViewController.h"

#import "RefreshControlDelegate-Protocol.h"
#import "SearchBoxControlClassDelegte-Protocol.h"
#import "SelectMusicBaseCellDelegate-Protocol.h"
#import "UITableViewDataSource-Protocol.h"
#import "UITableViewDelegate-Protocol.h"
#import "UITextFieldDelegate-Protocol.h"

@class KGDefaultNetErrorView, KGRefreshController, KGTableView, KGThemeLine, KGTopSearchView, NSArray, NSMutableArray, NSString, SelectMusicBottomView, UIView;
@protocol SelectMusicBaseCellDelegate;

@interface KQSearchMusicViewController : KGViewController <UITextFieldDelegate, UITableViewDelegate, UITableViewDataSource, SearchBoxControlClassDelegte, SelectMusicBaseCellDelegate, RefreshControlDelegate>
{
    _Bool _isShowLoadMoreCell;
    _Bool _isLoading;
    long long _totalOfCell;
    long long _page;
    NSString *_searchStr;
    KGDefaultNetErrorView *_errorView;
    unsigned long long _cellType;
    KGThemeLine *_searchBg;
    unsigned long long _pageSourceType;
    KGTopSearchView *_searchBar;
    UIView *_noDataBgView;
    KGTableView *_tableView;
    NSMutableArray *_arSongs;
    NSMutableArray *_musicStateArr;
    NSMutableArray *_selectedSongInfoArr;
    NSArray *_arBookMarks;
    SelectMusicBottomView *_bottomView;
    id <SelectMusicBaseCellDelegate> _cellDelegate;
    KGRefreshController *_refreshControl;
}

@property(retain, nonatomic) KGRefreshController *refreshControl; // @synthesize refreshControl=_refreshControl;
@property(nonatomic) __weak id <SelectMusicBaseCellDelegate> cellDelegate; // @synthesize cellDelegate=_cellDelegate;
@property(retain, nonatomic) SelectMusicBottomView *bottomView; // @synthesize bottomView=_bottomView;
@property(retain, nonatomic) NSArray *arBookMarks; // @synthesize arBookMarks=_arBookMarks;
@property(retain, nonatomic) NSMutableArray *selectedSongInfoArr; // @synthesize selectedSongInfoArr=_selectedSongInfoArr;
@property(retain, nonatomic) NSMutableArray *musicStateArr; // @synthesize musicStateArr=_musicStateArr;
@property(retain, nonatomic) NSMutableArray *arSongs; // @synthesize arSongs=_arSongs;
@property(retain, nonatomic) KGTableView *tableView; // @synthesize tableView=_tableView;
@property(retain, nonatomic) UIView *noDataBgView; // @synthesize noDataBgView=_noDataBgView;
@property(retain, nonatomic) KGTopSearchView *searchBar; // @synthesize searchBar=_searchBar;
@property(nonatomic) unsigned long long pageSourceType; // @synthesize pageSourceType=_pageSourceType;
- (void).cxx_destruct;
- (void)loadingFinishAndRefresh;
- (void)refreshControl:(id)arg1 didEngageRefreshDirection:(int)arg2;
- (void)SelectMusicListenClicked:(id)arg1;
- (void)SelectMusicBaseCellClicked:(id)arg1 andToBeSelected:(_Bool)arg2;
- (long long)showPlayBarWay;
- (void)loadMore;
- (void)beginDragging;
- (void)scrollViewWillBeginDragging:(id)arg1;
- (void)searchBarCancelBtnFun:(id)arg1;
- (void)getSearchMusicWithName:(id)arg1 andPage:(long long)arg2;
- (void)retureSearchDateAndReloadDate:(id)arg1 andArray:(id)arg2;
- (void)clearOldData;
- (void)RefreshBookMark:(id)arg1;
- (void)textFieldDidChange:(id)arg1;
- (_Bool)textFieldShouldReturn:(id)arg1;
- (void)seachForText:(id)arg1;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (_Bool)contrastSongInfoHashWithSongInfoArray:(id)arg1 andSongInfo:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (double)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (void)disAppearTopViewAnimationAndPopSelf;
- (void)appearTopViewAnimation;
- (void)showNoDataView;
- (void)KGUsingControllerState:(int)arg1;
- (void)requestAgain;
- (void)makeView;
- (id)initWithPageSoure:(unsigned long long)arg1 andSelectedSongs:(id)arg2 andCellDelegate:(id)arg3;
- (void)viewDidLoad;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

