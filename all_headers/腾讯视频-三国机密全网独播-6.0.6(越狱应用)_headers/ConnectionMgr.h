//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

#import "OmasConnectionDelegate-Protocol.h"

@class ConnectionPool_, LLReachability, NSMutableArray, NSRecursiveLock, NSString, NSTimer;
@protocol OS_dispatch_queue;

@interface ConnectionMgr : NSObject <OmasConnectionDelegate>
{
    int _currentProtocal;
    ConnectionPool_ *_tcpConnectionPool;
    ConnectionPool_ *_httpConnectionPool;
    _Bool _httpAvailable;
    _Bool _httpTesting;
    int _createdTcpConnection;
    int _createdHttpConnection;
    int _tcpPoolSize;
    int _availableHttpPort;
    NSString *_availableHttpAddress;
    int _connectionStatus;
    NSObject<OS_dispatch_queue> *_queue;
    double _httpHeartbeatInterval;
    NSRecursiveLock *_httpLock;
    NSRecursiveLock *_tcpLock;
    NSRecursiveLock *_vipLock;
    NSMutableArray *_tcpConnectionArray;
    NSMutableArray *_httpConnectionArray;
    NSTimer *_statusTimer;
    double _connTime;
    _Bool _reportSessionStatus;
    double _sessionStartTime;
    LLReachability *_reachability;
}

+ (id)sharedInstance;
+ (void)runRequests;
+ (id)threadForRequest:(id)arg1;
@property(readonly, nonatomic) int connectionStatus; // @synthesize connectionStatus=_connectionStatus;
@property(readonly, nonatomic) int currentConnectionType; // @synthesize currentConnectionType=_currentProtocal;
- (void)doesNotRecognizeSelector:(SEL)arg1;
@property(readonly, nonatomic) int connectionCount; // @dynamic connectionCount;
- (void)sendRequest:(id)arg1;
- (void)sendRequestThread:(id)arg1;
- (void)Notify:(id)arg1 Data:(id)arg2;
- (void)Notify:(id)arg1 SendResultState:(int)arg2 length:(int)arg3 tag:(long long)arg4;
- (void)NotifyDisconnect:(id)arg1;
- (void)didHandShakeTimeout:(id)arg1;
- (void)didHandShakeTimeoutThread:(id)arg1;
- (void)didHandShakeFail:(id)arg1 error:(id)arg2;
- (void)didHandShakeFailThread:(id)arg1;
- (void)didHandShakeCancelled:(id)arg1;
- (void)didHandShakeCancelledThread:(id)arg1;
- (void)didHandShakeSuccess:(id)arg1 redirectInfo:(id)arg2;
- (void)didHandShakeSuccessThread:(id)arg1;
- (void)didHeartBeatFailInThread:(id)arg1;
- (void)didHeartBeatFail:(id)arg1;
- (void)NotifyKeepAlive:(id)arg1;
- (void)Notify:(id)arg1 ApnState:(int)arg2 apn:(int)arg3;
- (void)apnChangeThread:(id)arg1;
- (void)Notify:(id)arg1 oldState:(int)arg2 newState:(int)arg3 errCode:(int)arg4;
- (void)openSessionLog:(id)arg1 code:(int)arg2 detail:(id)arg3;
- (void)disConnectionLog:(id)arg1 code:(int)arg2 detail:(id)arg3;
- (void)connectionLog:(id)arg1 code:(int)arg2 detail:(id)arg3;
- (void)performHandshake:(id)arg1;
- (_Bool)addConnection:(id)arg1;
- (void)retryConnect:(id)arg1 retry:(int)arg2;
- (void)tryNextIp:(id)arg1;
- (void)connectServer:(id)arg1 ip:(id)arg2 port:(long long)arg3;
- (void)disconnect:(id)arg1 release:(_Bool)arg2;
- (void)disconnectThread:(id)arg1;
- (void)putConnection:(id)arg1;
- (void)putConnectionInThread:(id)arg1;
- (id)getConnection:(int)arg1;
- (id)getHttpConnection:(int)arg1;
- (id)getTcpConnection:(int)arg1;
- (void)postPushAvailableNotification:(_Bool)arg1;
- (void)postNetReachableNotification:(_Bool)arg1;
- (void)switchConnectStatus:(int)arg1;
- (void)signalConnectionStatus;
- (_Bool)hasAvailableTcpConnection;
- (_Bool)hasAvailableHttpConnection;
- (void)connectThread:(id)arg1;
- (void)createConnection;
- (id)getVip;
- (_Bool)hasStarted;
- (void)start;
- (void)checkStatus;
- (void)invalidTimer;
- (void)disconnectAndRetry:(id)arg1 release:(_Bool)arg2 retry:(int)arg3;
- (void)disconnectAndRetryInThread:(id)arg1;
- (void)closeAndReconnect:(id)arg1;
- (void)closeAndReconnectInThread:(id)arg1;
- (void)closeAllReconnect:(_Bool)arg1;
- (void)closeAllReconnectInThread:(id)arg1;
- (void)wakeUpConnection;
- (void)wakeUpConnectionInThread;
- (void)setHttpOnly:(_Bool)arg1;
- (id)curState;
- (void)resetTrace;
- (void)reachabilityChanged:(id)arg1;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

