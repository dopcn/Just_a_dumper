//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "JSONModel.h"

@class NSArray, NSDictionary, NSNumber;
@protocol DNSData><Optional, NSDictionary><Optional, NSString, NSString><Optional, Optional;

@interface TTGetDomainsResponseDataModel : JSONModel
{
    NSDictionary *_mapping;
    NSNumber<Optional> *_useDNSMapping;
    NSNumber *_disableEncryptAppLog;
    NSNumber<Optional> *_useMonitorLog;
    NSNumber<Optional> *_shouldCheckLog;
    NSArray<DNSData><Optional> *_DNSMapping;
    NSArray<NSString> *_HTTPSDNSArray;
    NSNumber *_shouldUseHTTPs;
    NSNumber *_DNSMaxErrorCount;
    NSNumber *_shouldFallbackToHTTP;
    NSNumber *_httpRetryCount;
    NSNumber *_shouldShowHijack;
    NSNumber<Optional> *_shouldVerifySign;
    NSArray<NSString><Optional> *_frontierURLs;
    NSNumber<Optional> *_hostSelectEnabled;
    NSArray<NSDictionary><Optional> *_hostArray;
    NSNumber<Optional> *_maxHostFailCount;
    NSNumber<Optional> *_selectInterval;
    NSNumber<Optional> *_httpTimeoutInterval;
    NSNumber<Optional> *_chromiumEnabled;
    NSNumber<Optional> *_httpDnsEnabled;
    NSNumber<Optional> *_sdNetworkEnabled;
    NSNumber<Optional> *_isEncryptQuery;
    NSNumber<Optional> *_isEncryptQueryInHeader;
    NSNumber<Optional> *_isKeepPlainQuery;
    NSNumber<Optional> *_figerprintEnabled;
}

+ (id)keyMapper;
@property(retain, nonatomic) NSNumber<Optional> *figerprintEnabled; // @synthesize figerprintEnabled=_figerprintEnabled;
@property(retain, nonatomic) NSNumber<Optional> *isKeepPlainQuery; // @synthesize isKeepPlainQuery=_isKeepPlainQuery;
@property(retain, nonatomic) NSNumber<Optional> *isEncryptQueryInHeader; // @synthesize isEncryptQueryInHeader=_isEncryptQueryInHeader;
@property(retain, nonatomic) NSNumber<Optional> *isEncryptQuery; // @synthesize isEncryptQuery=_isEncryptQuery;
@property(retain, nonatomic) NSNumber<Optional> *sdNetworkEnabled; // @synthesize sdNetworkEnabled=_sdNetworkEnabled;
@property(retain, nonatomic) NSNumber<Optional> *httpDnsEnabled; // @synthesize httpDnsEnabled=_httpDnsEnabled;
@property(retain, nonatomic) NSNumber<Optional> *chromiumEnabled; // @synthesize chromiumEnabled=_chromiumEnabled;
@property(retain, nonatomic) NSNumber<Optional> *httpTimeoutInterval; // @synthesize httpTimeoutInterval=_httpTimeoutInterval;
@property(retain, nonatomic) NSNumber<Optional> *selectInterval; // @synthesize selectInterval=_selectInterval;
@property(retain, nonatomic) NSNumber<Optional> *maxHostFailCount; // @synthesize maxHostFailCount=_maxHostFailCount;
@property(copy, nonatomic) NSArray<NSDictionary><Optional> *hostArray; // @synthesize hostArray=_hostArray;
@property(retain, nonatomic) NSNumber<Optional> *hostSelectEnabled; // @synthesize hostSelectEnabled=_hostSelectEnabled;
@property(copy, nonatomic) NSArray<NSString><Optional> *frontierURLs; // @synthesize frontierURLs=_frontierURLs;
@property(retain, nonatomic) NSNumber<Optional> *shouldVerifySign; // @synthesize shouldVerifySign=_shouldVerifySign;
@property(retain, nonatomic) NSNumber *shouldShowHijack; // @synthesize shouldShowHijack=_shouldShowHijack;
@property(retain, nonatomic) NSNumber *httpRetryCount; // @synthesize httpRetryCount=_httpRetryCount;
@property(retain, nonatomic) NSNumber *shouldFallbackToHTTP; // @synthesize shouldFallbackToHTTP=_shouldFallbackToHTTP;
@property(retain, nonatomic) NSNumber *DNSMaxErrorCount; // @synthesize DNSMaxErrorCount=_DNSMaxErrorCount;
@property(retain, nonatomic) NSNumber *shouldUseHTTPs; // @synthesize shouldUseHTTPs=_shouldUseHTTPs;
@property(copy, nonatomic) NSArray<NSString> *HTTPSDNSArray; // @synthesize HTTPSDNSArray=_HTTPSDNSArray;
@property(copy, nonatomic) NSArray<DNSData><Optional> *DNSMapping; // @synthesize DNSMapping=_DNSMapping;
@property(retain, nonatomic) NSNumber<Optional> *shouldCheckLog; // @synthesize shouldCheckLog=_shouldCheckLog;
@property(retain, nonatomic) NSNumber<Optional> *useMonitorLog; // @synthesize useMonitorLog=_useMonitorLog;
@property(retain, nonatomic) NSNumber *disableEncryptAppLog; // @synthesize disableEncryptAppLog=_disableEncryptAppLog;
@property(retain, nonatomic) NSNumber<Optional> *useDNSMapping; // @synthesize useDNSMapping=_useDNSMapping;
@property(copy, nonatomic) NSDictionary *mapping; // @synthesize mapping=_mapping;
- (void).cxx_destruct;
- (id)initWithDictionary:(id)arg1 error:(id *)arg2;

@end

