//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@interface CommonUtil : NSObject
{
}

+ (void)saveStartUpConfig:(_Bool)arg1;
+ (_Bool)isProInStartUpConfig;
+ (id)getDownloadPath:(id)arg1;
+ (_Bool)compareResourcePath:(id)arg1;
+ (id)unarchiverAdveriseDataByResourceID:(id)arg1;
+ (_Bool)archiverAdveriseData:(id)arg1 resourceID:(id)arg2;
+ (id)getResourceDataByResourceID:(id)arg1;
+ (_Bool)checkResourceIsNeedToUpdate:(id)arg1;
+ (void)downLoadImageDataByURL:(id)arg1 resourceID:(id)arg2;
+ (void)downLoadAdverts:(id)arg1;
+ (void)removeNSUserDefaultsPartsData;
+ (_Bool)getHasShowRegisterTipView;
+ (void)saveHasShowRegisterTipView:(_Bool)arg1;
+ (_Bool)isNeedModifyMobileByAccount:(id)arg1;
+ (void)clearAppShareEntered;
+ (void)setAppShareEntered;
+ (id)imageByScalingAndCroppingForSourceImage:(id)arg1 targetSize:(struct CGSize)arg2;
+ (id)imageByScalingToMaxSize:(id)arg1;
+ (_Bool)cameraSupportsMedia:(id)arg1 sourceType:(long long)arg2;
+ (_Bool)canUserPickVideosFromPhotoLibrary;
+ (_Bool)isPhotoLibraryAvailable;
+ (_Bool)doesCameraSupportTakingPhotos;
+ (_Bool)isFrontCameraAvailable;
+ (_Bool)isRearCameraAvailable;
+ (_Bool)isCameraAvailable;
+ (id)createRandomStringBitCount:(long long)arg1;
+ (id)getMD5TokenString:(id)arg1 mobileUserCode:(id)arg2;
+ (struct CGSize)boundingRectWithSize:(struct CGSize)arg1 string:(id)arg2 font:(id)arg3;
+ (id)getCurrentTimeInterval;
+ (id)compressImage:(id)arg1 toMaxFileSize:(long long)arg2;
+ (id)getInterValTimeSinceLastTime:(id)arg1;
+ (id)getCurTimeString:(id)arg1;
+ (id)convertFromTimeIntervalSince1970:(id)arg1;
+ (id)getOtimeStr:(id)arg1;
+ (id)getTodayDate;
+ (id)createNotesView:(struct CGRect)arg1 note:(id)arg2;
+ (_Bool)checkVersion:(long long)arg1;
+ (_Bool)isNotRegisterRemoteNotification;
+ (id)getFullClientId:(id)arg1;
+ (id)getShortBusinessAccount:(id)arg1;
+ (id)getFullBusinessAccount:(id)arg1 branch:(id)arg2;
+ (id)getIPAddressesByHostName:(id)arg1 port:(id)arg2;
+ (id)getIPAddressByHostName:(id)arg1 port:(id)arg2;
+ (double)calculateNumber:(double)arg1 bit:(long long)arg2;
+ (id)getFilePath:(id)arg1;
+ (id)getSystemName:(_Bool)arg1;
+ (id)getNewFormatTime:(id)arg1;
+ (id)getAnnaulPersonalBillUrl;
+ (_Bool)isSupportMinVersion:(id)arg1;
+ (_Bool)checkEveryDayByKey:(id)arg1;
+ (id)replaceMobileByStar:(id)arg1;
+ (id)replaceAccountByStar:(id)arg1 keepLength:(long long)arg2;
+ (int)getAutoFirstShow;
+ (id)getWifiName;
+ (id)tradeTypeDescrtionByBsflag:(id)arg1;
+ (id)loadURLWithParam:(id)arg1 linkURL:(id)arg2;
+ (id)dataToJsonString:(id)arg1;
+ (id)queryStringPointsToDic:(id)arg1;
+ (id)queryStringToDic:(id)arg1;
+ (id)formatUrlStringParam:(id)arg1;
+ (id)formatParamForOldMallByURLString:(id)arg1;
+ (id)formatParamByURLString:(id)arg1;
+ (id)formatParaFromAD:(id)arg1;
+ (id)shortStockCode:(id)arg1;
+ (id)formatStringByJSONString:(id)arg1;
+ (id)JSONString:(id)arg1;
+ (id)getRegularResultBySearchText:(id)arg1 regularExpression:(id)arg2;
+ (id)formatJsonStrWithArray:(id)arg1;
+ (id)formatJsonStrWithDictionary:(id)arg1;
+ (id)formatJsonStrWithStr:(id)arg1;
+ (id)convertArray:(id)arg1;
+ (id)parseDataToArray:(id)arg1;
+ (id)parseToArray:(id)arg1;
+ (id)parseDataToDict:(id)arg1;
+ (id)parseToDict:(id)arg1;
+ (int)FormatChar:(char *)arg1;
+ (id)getNotExitFilePath:(id)arg1;
+ (_Bool)validateDigitOrLetterOrChinese:(id)arg1;
+ (_Bool)validateEmail:(id)arg1;
+ (_Bool)CheckPhoneNumInput:(id)arg1;
+ (id)formatDate:(id)arg1 srcFormat:(id)arg2 destFormat:(id)arg3;
+ (id)setDate:(int)arg1 month:(int)arg2 day:(int)arg3;
+ (id)getUrlByCode:(id)arg1;
+ (id)getSystemName;
+ (struct CGSize)getDspStringSize:(id)arg1 font:(id)arg2 curFrame:(struct CGRect)arg3;
+ (struct CGAffineTransform)transformForOrientation:(id)arg1 orientation:(long long)arg2;
+ (id)getAlerVal:(double)arg1 bit:(int)arg2;
+ (void)getCGColorFloat:(id)arg1 red:(float *)arg2 green:(float *)arg3 blue:(float *)arg4 alpha:(float *)arg5;
+ (long long)convertVal:(int)arg1;
+ (id)getCustomListTitleByType:(int)arg1;
+ (id)getTextByCell:(id)arg1;
+ (void)setTextAlignment:(id)arg1 alignment:(long long)arg2;
+ (void)setTextColor:(id)arg1 color:(id)arg2;
+ (void)setTextString:(id)arg1 text:(id)arg2;
+ (void)setTitleFont:(id)arg1 font:(id)arg2;
+ (unsigned long long)getSecondsValInCurTime;
+ (id)getCurTimeStr;
+ (void)parsePowerDate:(int)arg1 byear:(int *)arg2 bmonth:(int *)arg3 bday:(int *)arg4 eyear:(int *)arg5 emonth:(int *)arg6 eday:(int *)arg7;
+ (long long)getFirstMonthDayOfDate:(long long)arg1;
+ (long long)getFirstWeekDayOfDate:(long long)arg1;
+ (id)getTime0;
+ (id)formatDate:(int)arg1 month:(int)arg2 day:(int)arg3;
+ (id)getDateStr:(id)arg1;
+ (id)getOtimeStr:(id)arg1 recvDate:(id)arg2;
+ (id)getCurrentDateByFormatter:(id)arg1;
+ (id)getTime:(id)arg1;
+ (id)getDate:(id)arg1;
+ (float)mappingAsixYValue:(double)arg1 min:(double)arg2 v:(double)arg3 top:(float)arg4 bottom:(float)arg5;
+ (int)converMarket:(char *)arg1;
+ (int)GetSysFontWidth;
+ (int)GetSysFontWidth:(int)arg1;
+ (int)GetSysFontHeight2:(int)arg1;
+ (int)GetSysFontHeight;
+ (id)GetBoldSysFont2:(int)arg1;
+ (id)GetBoldSysFont;
+ (id)GetSysFont2:(int)arg1;
+ (id)GetSysFont;
+ (id)FormatDStr:(float)arg1 len:(int)arg2 dig:(int)arg3;
+ (id)FormatDStr2:(float)arg1 len:(int)arg2 dig:(int)arg3;
+ (void)itoa:(int)arg1 c:(char *)arg2;
+ (id)FormatVolumeForIndex:(int)arg1;
+ (id)FormatAmount:(long long)arg1;
+ (id)FormatVolumeNoUnit:(long long)arg1;
+ (id)formatNumberWithUnit:(long long)arg1;
+ (id)FormatVolume:(long long)arg1;
+ (id)FromInteger:(int)arg1;
+ (id)FormatPrice:(long long)arg1 len:(int)arg2 dig:(int)arg3;
+ (id)FormatPrice:(long long)arg1 len:(int)arg2 dig:(int)arg3 defaultValue:(id)arg4;
+ (id)FormatPerWithUnit:(float)arg1;
+ (id)FormatPer:(float)arg1;
+ (id)FormatPer:(float)arg1 defaultValue:(id)arg2;
+ (id)getColorFromPriceEx:(long long)arg1 twoPrice:(long long)arg2;
+ (id)getColorFromPrice:(long long)arg1 twoPrice:(long long)arg2;
+ (int)GetLenCount:(int)arg1;
+ (int)GetDigCount:(int)arg1;

@end

