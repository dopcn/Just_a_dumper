//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <UIKit/UIView.h>

#import "TBCMediaPlayerAppMonitorDelegate-Protocol.h"
#import "TBCMediaPlayerDelegate-Protocol.h"
#import "TBloaderURLConnectionDelegate-Protocol.h"

@class AVAsset, AVPlayer, AVPlayerLayer, NSString, NSTimer, TBCloaderURLConnection;
@protocol TBCMediaPlayerAppMonitorDelegate, TBCMediaPlayerDelegate;

@interface TBCMediaPlayer : UIView <TBloaderURLConnectionDelegate, TBCMediaPlayerDelegate, TBCMediaPlayerAppMonitorDelegate>
{
    _Bool _isAllowMountObserver;
    _Bool _isAddMountObserver;
    _Bool _isMute;
    _Bool _isAssetLoading;
    _Bool _isAddPlayerObserver;
    _Bool _isAddPlayerLayerObserver;
    _Bool _isAddTimeObserver;
    _Bool _isAddDeviceObserver;
    _Bool _isBeforeInterrupted;
    _Bool _isMuteBeforeInterrupted;
    _Bool _isPlayerItemReadyToPlay;
    _Bool _isItemBufferFinishCanPlay;
    _Bool _isNewLoadData;
    int _timeScale;
    id <TBCMediaPlayerDelegate> _delegate;
    id <TBCMediaPlayerAppMonitorDelegate> _appMonitorDelegate;
    CDUnknownBlockType _asyncLoadAssetBlock;
    double _playerWidth;
    double _playerHeight;
    double _timePeriod;
    AVAsset *_contentAsset;
    NSString *_contentUrl;
    NSString *_gravity;
    long long _playerStatus;
    TBCloaderURLConnection *_resouerLoader;
    long long _loadCount;
    double _videoLoadTime;
    double _videoPlayTime;
    id _playerTimerObserver;
    UIView *_playerView;
    AVPlayerLayer *_playerLayer;
    AVPlayer *_player;
    double _loadedTime;
    double _totalTime;
    NSTimer *_overtimeTimer;
}

@property(retain, nonatomic) NSTimer *overtimeTimer; // @synthesize overtimeTimer=_overtimeTimer;
@property(nonatomic) _Bool isNewLoadData; // @synthesize isNewLoadData=_isNewLoadData;
@property(nonatomic) _Bool isItemBufferFinishCanPlay; // @synthesize isItemBufferFinishCanPlay=_isItemBufferFinishCanPlay;
@property(nonatomic) _Bool isPlayerItemReadyToPlay; // @synthesize isPlayerItemReadyToPlay=_isPlayerItemReadyToPlay;
@property(nonatomic) _Bool isMuteBeforeInterrupted; // @synthesize isMuteBeforeInterrupted=_isMuteBeforeInterrupted;
@property(nonatomic) _Bool isBeforeInterrupted; // @synthesize isBeforeInterrupted=_isBeforeInterrupted;
@property(nonatomic) _Bool isAddDeviceObserver; // @synthesize isAddDeviceObserver=_isAddDeviceObserver;
@property(nonatomic) _Bool isAddTimeObserver; // @synthesize isAddTimeObserver=_isAddTimeObserver;
@property(nonatomic) _Bool isAddPlayerLayerObserver; // @synthesize isAddPlayerLayerObserver=_isAddPlayerLayerObserver;
@property(nonatomic) _Bool isAddPlayerObserver; // @synthesize isAddPlayerObserver=_isAddPlayerObserver;
@property(nonatomic) double totalTime; // @synthesize totalTime=_totalTime;
@property(nonatomic) double loadedTime; // @synthesize loadedTime=_loadedTime;
@property(retain, nonatomic) AVPlayer *player; // @synthesize player=_player;
@property(retain, nonatomic) AVPlayerLayer *playerLayer; // @synthesize playerLayer=_playerLayer;
@property(retain, nonatomic) UIView *playerView; // @synthesize playerView=_playerView;
@property(retain, nonatomic) id playerTimerObserver; // @synthesize playerTimerObserver=_playerTimerObserver;
@property(nonatomic) double videoPlayTime; // @synthesize videoPlayTime=_videoPlayTime;
@property(nonatomic) double videoLoadTime; // @synthesize videoLoadTime=_videoLoadTime;
@property(nonatomic) long long loadCount; // @synthesize loadCount=_loadCount;
@property(nonatomic) _Bool isAssetLoading; // @synthesize isAssetLoading=_isAssetLoading;
@property(retain, nonatomic) TBCloaderURLConnection *resouerLoader; // @synthesize resouerLoader=_resouerLoader;
@property(nonatomic) _Bool isMute; // @synthesize isMute=_isMute;
@property(nonatomic) _Bool isAddMountObserver; // @synthesize isAddMountObserver=_isAddMountObserver;
@property(nonatomic) _Bool isAllowMountObserver; // @synthesize isAllowMountObserver=_isAllowMountObserver;
@property(nonatomic) long long playerStatus; // @synthesize playerStatus=_playerStatus;
@property(copy, nonatomic) NSString *gravity; // @synthesize gravity=_gravity;
@property(copy, nonatomic) NSString *contentUrl; // @synthesize contentUrl=_contentUrl;
@property(retain, nonatomic) AVAsset *contentAsset; // @synthesize contentAsset=_contentAsset;
@property(nonatomic) double timePeriod; // @synthesize timePeriod=_timePeriod;
@property(nonatomic) int timeScale; // @synthesize timeScale=_timeScale;
@property(nonatomic) double playerHeight; // @synthesize playerHeight=_playerHeight;
@property(nonatomic) double playerWidth; // @synthesize playerWidth=_playerWidth;
@property(copy, nonatomic) CDUnknownBlockType asyncLoadAssetBlock; // @synthesize asyncLoadAssetBlock=_asyncLoadAssetBlock;
@property(nonatomic) __weak id <TBCMediaPlayerAppMonitorDelegate> appMonitorDelegate; // @synthesize appMonitorDelegate=_appMonitorDelegate;
@property(nonatomic) __weak id <TBCMediaPlayerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)fixWrongUrl:(id)arg1;
- (void)bindUrl:(id)arg1 tID:(id)arg2;
- (void)videoDownStat:(double)arg1;
- (_Bool)task:(id)arg1 didReceiveVideoLength:(unsigned long long)arg2 mimeType:(id)arg3;
- (void)didFinishLoadingWithTask:(id)arg1;
- (void)didFailLoadingWithTask:(id)arg1 WithError:(id)arg2;
- (void)exceptionHandler;
- (void)dealWithPlayerError:(id)arg1;
- (void)touchesMoved:(id)arg1 withEvent:(id)arg2;
- (void)touchesCancelled:(id)arg1 withEvent:(id)arg2;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (void)destructTimer:(id)arg1;
- (void)setupTimer;
- (void)loadFailedWapper:(id)arg1;
- (void)LoadSuccessWapper;
- (void)assetLoadFailed:(id)arg1;
- (void)assetLoaded;
- (void)mute:(_Bool)arg1;
- (void)resumePlayer;
- (void)dismissPlayer;
- (_Bool)canclePreload;
- (void)waitPlay;
- (void)stop;
- (void)pause;
- (void)resume;
- (void)play;
- (_Bool)isMediaPlayerWaitPlay;
- (_Bool)isMediaPlayerStop;
- (_Bool)isSafeStatusForUsingPlayer;
- (_Bool)isEnoughPlayerItemForPlay;
- (void)playerFinished;
- (void)playerLoading;
- (_Bool)isMeidaPlayerPlaying;
- (_Bool)isMediaPlayerReady;
- (void)resetMediaPlayerForReuse;
- (void)resetMediaPlayer;
- (double)currentSlideTime:(double)arg1;
- (void)jumpToNewTime:(double)arg1;
- (void)seekToTimeOnZero;
- (double)videoCurrentTime;
- (double)videoTotalTime;
- (_Bool)loadedTimeContainCurrent;
- (double)loadedTimeRange;
- (void)playerItemPlaybackStalled:(id)arg1;
- (void)playerItemDidPlayToEndTime:(id)arg1;
- (void)didAppEnterForeground:(id)arg1;
- (void)didAppEnterBackground:(id)arg1;
- (void)didDeviceRotate:(id)arg1;
- (void)didAudioSessionInterrupt:(id)arg1;
- (void)didAudioRouteChangeNotification:(id)arg1;
- (void)removeDeviceObserver;
- (void)addDeviceObserver;
- (void)removePlayerTimeObserver;
- (void)addPlayerTimeObserver;
- (void)removePlayerLayerObservers;
- (void)addPlayerLayerObservers;
- (void)removePlayerObservers;
- (void)addPlayerObservers;
- (void)removeAllObservers;
- (void)addAllObservers;
- (id)genThumbImageOfCurrentTime;
- (void)cleanPlayerItem;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)configurePlayerWithAsset:(id)arg1;
- (_Bool)unstallMediaPlayerLayer;
- (_Bool)installMediaPlayerLayer;
- (void)resetAssetAsyncWithUrl:(id)arg1;
- (void)reloadAssetAsync;
- (void)loadLocalAsset:(id)arg1;
- (void)loadAssetAsyncWithUrl:(id)arg1;
- (void)returnAudioSessionToBackground;
- (void)setupAudioSession;
- (void)changeMediaPlayerFrame:(struct CGRect)arg1;
- (void)setupSubviews;
- (void)initialPlayerSettings;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)didTiebaCommonVoiceReadFinish:(id)arg1;
- (void)didTiebaAudioRecorderEnd:(id)arg1;
- (void)didTiebaAudioRecorderBegin:(id)arg1;
- (void)removeMountObserver;
- (void)addMountObserver;
- (_Bool)isMuteBeforeTiebaTTS;
- (void)setIsMuteBeforeTiebaTTS:(_Bool)arg1;
- (void)unstallObserverMount;
- (void)installObserverMount;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

