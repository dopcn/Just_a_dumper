//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class MttRNBundleDebugTask, NSMutableDictionary;
@protocol OS_dispatch_queue;

@interface MttRNBundleManager : NSObject
{
    NSMutableDictionary *_modules;
    NSMutableDictionary *_updateTasks;
    NSMutableDictionary *_updatingModules;
    NSMutableDictionary *_loadedModules;
    NSMutableDictionary *_loadingModules;
    NSMutableDictionary *_wupReportModules;
    NSObject<OS_dispatch_queue> *_queue;
    MttRNBundleDebugTask *_debugUpdateTask;
}

+ (id)GMTDate:(id)arg1;
+ (long long)compareQBVersion:(id)arg1 to:(id)arg2;
+ (_Bool)checkConfigIsValid:(id)arg1;
+ (id)sharedInstance;
@property(retain, nonatomic) MttRNBundleDebugTask *debugUpdateTask; // @synthesize debugUpdateTask=_debugUpdateTask;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *queue; // @synthesize queue=_queue;
@property(retain, nonatomic) NSMutableDictionary *wupReportModules; // @synthesize wupReportModules=_wupReportModules;
@property(retain, nonatomic) NSMutableDictionary *loadingModules; // @synthesize loadingModules=_loadingModules;
@property(retain, nonatomic) NSMutableDictionary *loadedModules; // @synthesize loadedModules=_loadedModules;
@property(retain, nonatomic) NSMutableDictionary *updatingModules; // @synthesize updatingModules=_updatingModules;
@property(retain, nonatomic) NSMutableDictionary *updateTasks; // @synthesize updateTasks=_updateTasks;
@property(retain, nonatomic) NSMutableDictionary *modules; // @synthesize modules=_modules;
- (void).cxx_destruct;
- (void)writeWupReportInfoToFile:(id)arg1;
- (_Bool)recordReportTime:(id)arg1 launchOrPull:(_Bool)arg2;
- (id)loadingModuleInfo;
- (void)setModuleLoading:(id)arg1;
- (id)bundleInfo;
- (_Bool)isModuleLoaded:(id)arg1;
- (void)setModuleLoaded:(id)arg1;
- (id)modueleNameFromFilePath:(id)arg1;
- (id)commonConfigForModule:(id)arg1;
- (id)configForModule:(id)arg1;
- (id)assetsFolderForModule:(id)arg1;
- (id)extraForModule:(id)arg1;
- (id)udnForModule:(id)arg1;
- (id)versionForModule:(id)arg1;
- (id)versionForCommon;
- (id)moduleFromDisk:(id)arg1;
- (id)moduleFromMemory:(id)arg1;
- (void)reportBundleErrorToRqd:(id)arg1;
- (id)bundleFilePath:(id)arg1;
- (id)commonBundleFilePath;
- (void)writeModulesToFile:(id)arg1;
- (id)readModulesFromFile;
- (void)fetchCommonConfigForModule:(id)arg1;
- (void)updateWithDebugURL:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)updateCommonJS;
- (void)fetchCommonConfigFinish:(id)arg1;
- (void)updateInQueue:(id)arg1 firstFetch:(_Bool)arg2;
- (void)fetchModule:(id)arg1;
- (void)update;
- (_Bool)checkModuleVersionIsValid:(id)arg1;
- (_Bool)checkModuleFileIsValid:(id)arg1;
- (id)addModule:(id)arg1 toModules:(id)arg2;
- (void)addModuleToDisk:(id)arg1;
- (void)addModuleToMemory:(id)arg1;
- (_Bool)addModule:(id)arg1 ignoreVersion:(_Bool)arg2;
- (id)configFromZipFile:(id)arg1 moduleName:(id)arg2;
- (id)addModuleFromZipFile:(id)arg1 moduleName:(id)arg2 isDebug:(_Bool)arg3 ignoreVersion:(_Bool)arg4;
- (id)updateModuleFromDefaultWithModuleName:(id)arg1;
- (id)initializeModuleFromDefaultWithModuleName:(id)arg1;
- (void)initialzeCommonBundle;
- (void)initDefaultBundle;
- (void)dealloc;
- (void)initWupReportInfo;
- (id)init;

@end

