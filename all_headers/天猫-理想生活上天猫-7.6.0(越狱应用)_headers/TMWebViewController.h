//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "TMViewController.h"

#import "TMMuiScrollViewDelegate-Protocol.h"
#import "TMQuickMenuPopoverControllerDelegate-Protocol.h"
#import "UIAlertViewDelegate-Protocol.h"
#import "UIGestureRecognizerDelegate-Protocol.h"
#import "UIWebViewDelegate-Protocol.h"

@class NSArray, NSDictionary, NSMutableArray, NSMutableDictionary, NSString, NSURL, TMTitleManager, TMWVWebViewController, TMWebViewGestureController, TMWebViewNaviBarManager, TMWebviewTabbarManager, UIBarButtonItem, UIButton, UIColor, UIImageView, UINavigationController, UIPanGestureRecognizer, UIView, UIWebView;
@protocol TMWebViewControllerDelegate, UIScrollViewDelegate, WVWebViewProtocol;

@interface TMWebViewController : TMViewController <TMQuickMenuPopoverControllerDelegate, TMMuiScrollViewDelegate, UIGestureRecognizerDelegate, UIWebViewDelegate, UIAlertViewDelegate>
{
    NSString *_lastFragment;
    struct {
        unsigned int isLoading:1;
        unsigned int isPushed:1;
        unsigned int isLoaded:1;
        unsigned int webViewDidFinishLoad:1;
        unsigned int webViewDidFinishLoadWithError:1;
    } _flags;
    NSMutableDictionary *_MotionDict;
    NSMutableDictionary *_MusicDict;
    NSMutableDictionary *_PageVisibilityDict;
    _Bool _refreshFlag;
    _Bool _cartBtnLoadFlag;
    _Bool _whiteListInvalid;
    NSString *_redirectURL;
    _Bool _dynamicShowCloseBtn;
    NSString *_gccpm;
    _Bool _pageActive;
    _Bool _webviewLoaded;
    _Bool _viewWillAppear;
    _Bool _viewDidAppearCapture;
    _Bool _webViewDidFinishLoadCapture;
    UIImageView *imgMaskView;
    _Bool _mainTabPreload;
    _Bool _observeUnreadCount;
    NSURL *_lastPageUrl;
    TMTitleManager *_titleManager;
    CDUnknownBlockType _shouldStartLoadRequestBlock;
    CDUnknownBlockType _poplayerWebviewDidFinishLoad;
    CDUnknownBlockType _poplayerWebviewDidStartLoad;
    UIPanGestureRecognizer *_tmgnPanGesture;
    NSDictionary *_webViewSettings;
    NSDictionary *_queryParams;
    _Bool _decelerationNormal;
    _Bool _scalesPageToFit;
    _Bool _showRefreshView;
    _Bool _disableSearch;
    _Bool _showFeedbackButtonInBottom;
    _Bool _cancelGesture;
    _Bool _isInMainTab;
    _Bool _shouldAskShowNonWhiteListUrl;
    _Bool _isPoplayer;
    _Bool _enableUt;
    _Bool _webViewTransparent;
    _Bool _openTMGlobalNavigationView;
    _Bool _forbidRewrite;
    _Bool _notCleanUp;
    _Bool _blankPageWithoutText;
    _Bool _isDark;
    _Bool _pageDisappeared;
    _Bool _pageAppeared;
    _Bool _pageEntered;
    _Bool _pageEntered2;
    _Bool _disableUtClickId;
    _Bool _back;
    _Bool _fromTmNavigator;
    NSString *_webURLString;
    UIWebView<WVWebViewProtocol> *_webView;
    NSURL *_delayRequestURL;
    NSURL *_webURL;
    id <TMWebViewControllerDelegate> _delegate;
    NSString *_itemTitle;
    NSMutableArray *_webTasks;
    UINavigationController *_externalNavigationController;
    TMWebViewNaviBarManager *_naviBarManager;
    TMWebviewTabbarManager *_tabBarManager;
    CDUnknownBlockType _webViewDidFinishLoadBlock;
    CDUnknownBlockType _webViewDidFailLoadBlock;
    NSDictionary *_postData;
    NSString *_spmCNT;
    UIColor *_iconColor;
    NSString *_uniqueBizid;
    TMWVWebViewController *_wvWebViewController;
    NSArray *_rightBarItems;
    UIBarButtonItem *_quickMenuBarItem;
    NSURL *_currentPageUrl;
    TMWebViewGestureController *_webViewGestureController;
    UIButton *_closeButton;
    unsigned long long _enterTimes;
    unsigned long long _failWithErrorTimes;
    NSString *_spmURL;
    NSString *_scm;
    NSString *_aPlusPageURL;
    NSString *_trackInfo;
    NSString *_clickid;
    NSArray *_tmgnTopItems;
    NSArray *_tmgnCenterItems;
    id <UIScrollViewDelegate> _oldScrollDelegate;
    NSString *_keyboardType;
    UIView *_whiteMask;
    struct CGPoint _oldOffset;
}

+ (void)aopInstanceMethodWithOriClass:(Class)arg1 oriSEL:(SEL)arg2 aopClass:(Class)arg3 aopSEL:(SEL)arg4;
+ (void)stopPerformanceMonitor;
+ (void)startPerformanceMonitor;
@property(retain, nonatomic) UIView *whiteMask; // @synthesize whiteMask=_whiteMask;
@property(retain, nonatomic) NSString *keyboardType; // @synthesize keyboardType=_keyboardType;
@property(nonatomic) struct CGPoint oldOffset; // @synthesize oldOffset=_oldOffset;
@property(nonatomic) __weak id <UIScrollViewDelegate> oldScrollDelegate; // @synthesize oldScrollDelegate=_oldScrollDelegate;
@property(retain, nonatomic) NSArray *tmgnCenterItems; // @synthesize tmgnCenterItems=_tmgnCenterItems;
@property(retain, nonatomic) NSArray *tmgnTopItems; // @synthesize tmgnTopItems=_tmgnTopItems;
@property(retain, nonatomic) NSString *clickid; // @synthesize clickid=_clickid;
@property(retain, nonatomic) NSString *trackInfo; // @synthesize trackInfo=_trackInfo;
@property(retain, nonatomic) NSString *aPlusPageURL; // @synthesize aPlusPageURL=_aPlusPageURL;
@property(retain, nonatomic) NSString *scm; // @synthesize scm=_scm;
@property(retain, nonatomic) NSString *spmURL; // @synthesize spmURL=_spmURL;
@property(nonatomic) unsigned long long failWithErrorTimes; // @synthesize failWithErrorTimes=_failWithErrorTimes;
@property(nonatomic) unsigned long long enterTimes; // @synthesize enterTimes=_enterTimes;
@property(nonatomic) _Bool fromTmNavigator; // @synthesize fromTmNavigator=_fromTmNavigator;
@property(nonatomic, getter=isBack) _Bool back; // @synthesize back=_back;
@property(retain, nonatomic) UIButton *closeButton; // @synthesize closeButton=_closeButton;
@property(retain, nonatomic) TMWebViewGestureController *webViewGestureController; // @synthesize webViewGestureController=_webViewGestureController;
@property(retain, nonatomic) NSURL *currentPageUrl; // @synthesize currentPageUrl=_currentPageUrl;
@property(retain, nonatomic) UIBarButtonItem *quickMenuBarItem; // @synthesize quickMenuBarItem=_quickMenuBarItem;
@property(retain, nonatomic) NSArray *rightBarItems; // @synthesize rightBarItems=_rightBarItems;
@property(retain, nonatomic) TMWVWebViewController *wvWebViewController; // @synthesize wvWebViewController=_wvWebViewController;
@property(retain, nonatomic) NSString *uniqueBizid; // @synthesize uniqueBizid=_uniqueBizid;
@property(nonatomic, getter=isDisableUtClickId) _Bool disableUtClickId; // @synthesize disableUtClickId=_disableUtClickId;
@property(nonatomic) _Bool pageEntered2; // @synthesize pageEntered2=_pageEntered2;
@property(nonatomic) _Bool pageEntered; // @synthesize pageEntered=_pageEntered;
@property(nonatomic) _Bool pageAppeared; // @synthesize pageAppeared=_pageAppeared;
@property(nonatomic) _Bool pageDisappeared; // @synthesize pageDisappeared=_pageDisappeared;
@property(nonatomic) _Bool isDark; // @synthesize isDark=_isDark;
@property(retain, nonatomic) UIColor *iconColor; // @synthesize iconColor=_iconColor;
@property(retain, nonatomic) NSString *spmCNT; // @synthesize spmCNT=_spmCNT;
@property(nonatomic) _Bool blankPageWithoutText; // @synthesize blankPageWithoutText=_blankPageWithoutText;
@property(nonatomic) _Bool notCleanUp; // @synthesize notCleanUp=_notCleanUp;
@property(nonatomic) _Bool forbidRewrite; // @synthesize forbidRewrite=_forbidRewrite;
@property(nonatomic) _Bool openTMGlobalNavigationView; // @synthesize openTMGlobalNavigationView=_openTMGlobalNavigationView;
@property(nonatomic) _Bool webViewTransparent; // @synthesize webViewTransparent=_webViewTransparent;
@property(retain, nonatomic) NSDictionary *postData; // @synthesize postData=_postData;
@property(nonatomic) _Bool enableUt; // @synthesize enableUt=_enableUt;
@property(nonatomic) _Bool isPoplayer; // @synthesize isPoplayer=_isPoplayer;
@property(nonatomic) _Bool shouldAskShowNonWhiteListUrl; // @synthesize shouldAskShowNonWhiteListUrl=_shouldAskShowNonWhiteListUrl;
@property(copy, nonatomic) CDUnknownBlockType webViewDidFailLoadBlock; // @synthesize webViewDidFailLoadBlock=_webViewDidFailLoadBlock;
@property(copy, nonatomic) CDUnknownBlockType webViewDidFinishLoadBlock; // @synthesize webViewDidFinishLoadBlock=_webViewDidFinishLoadBlock;
@property(retain, nonatomic) TMWebviewTabbarManager *tabBarManager; // @synthesize tabBarManager=_tabBarManager;
@property(retain, nonatomic) TMWebViewNaviBarManager *naviBarManager; // @synthesize naviBarManager=_naviBarManager;
@property(nonatomic) _Bool isInMainTab; // @synthesize isInMainTab=_isInMainTab;
@property(nonatomic) _Bool cancelGesture; // @synthesize cancelGesture=_cancelGesture;
@property(retain, nonatomic) UINavigationController *externalNavigationController; // @synthesize externalNavigationController=_externalNavigationController;
@property(retain, nonatomic) NSMutableArray *webTasks; // @synthesize webTasks=_webTasks;
@property(nonatomic) _Bool showFeedbackButtonInBottom; // @synthesize showFeedbackButtonInBottom=_showFeedbackButtonInBottom;
@property(nonatomic) _Bool disableSearch; // @synthesize disableSearch=_disableSearch;
@property(nonatomic) _Bool showRefreshView; // @synthesize showRefreshView=_showRefreshView;
@property(nonatomic) _Bool scalesPageToFit; // @synthesize scalesPageToFit=_scalesPageToFit;
@property(retain, nonatomic) NSString *itemTitle; // @synthesize itemTitle=_itemTitle;
@property(nonatomic) _Bool decelerationNormal; // @synthesize decelerationNormal=_decelerationNormal;
@property(nonatomic) __weak id <TMWebViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) NSURL *webURL; // @synthesize webURL=_webURL;
@property(retain, nonatomic) NSURL *delayRequestURL; // @synthesize delayRequestURL=_delayRequestURL;
@property(readonly, nonatomic) __weak UIWebView<WVWebViewProtocol> *webView; // @synthesize webView=_webView;
@property(retain, nonatomic) NSString *webURLString; // @synthesize webURLString=_webURLString;
- (void).cxx_destruct;
- (_Bool)shouldAutorotate;
- (unsigned long long)supportedInterfaceOrientations;
- (void)registKeyboardNotify:(id)arg1;
- (void)keyboardAutoFit:(id)arg1;
- (void)keyboardWillHide:(id)arg1;
- (void)keyboardDidShown:(id)arg1;
- (void)scrollViewDidScroll:(id)arg1;
- (void)keyboardWillShow:(id)arg1;
- (void)hideOffscreenWKWebView;
- (void)addOffscreenWKWebView;
- (id)constructOffscreenView;
- (void)cleanUpOffscreenView;
- (void)retainWKWebViewOffscreen:(id)arg1;
- (void)networkStatusNotify:(id)arg1;
- (void)updateUnreadCount:(id)arg1;
- (void)actionUserLogged:(id)arg1;
- (void)observeUnreadCount;
- (void)loadPageByUrl:(id)arg1;
- (void)registeHandler:(id)arg1 withClassName:(id)arg2 handler:(CDUnknownBlockType)arg3;
- (void)setWebViewDidStartLoadBlock:(CDUnknownBlockType)arg1;
- (void)setWebViewShouldStartLoadWithRequestBlock:(CDUnknownBlockType)arg1;
- (void)stopUsePullRefresh;
- (void)webViewStopLoading;
- (void)setIsShowLoadingBox:(_Bool)arg1;
- (_Bool)isShowLoadingBox;
- (void)checkAutomaticGoBack:(CDUnknownBlockType)arg1;
- (void)automaticGoBack;
- (void)processBeforePush:(id)arg1 withContext:(id)arg2;
- (void)addWebViewGestureController;
- (void)dynamicShowClothesBtn;
- (void)backReload;
- (void)cleanViewController;
- (void)viewDidUnload;
- (void)didReceiveMemoryWarning;
- (struct CGRect)regionForSupportingRightDragToGoBack;
- (void)removeShakeManager;
- (void)removePageVisible:(id)arg1;
- (void)setPageVisible:(id)arg1 managerKey:(id)arg2;
- (void)notifyPageVisibility:(_Bool)arg1;
- (void)handleWebViewBackGround:(_Bool)arg1 isVisible:(_Bool)arg2;
- (void)handleApplicationEnter:(id)arg1;
- (void)handleAppEnterBack:(id)arg1;
- (void)handleActionAlipay:(id)arg1 isSuccess:(_Bool)arg2;
- (void)actionAlipayFail:(id)arg1;
- (void)actionAlipaySuccess:(id)arg1;
- (void)removeMusicManager:(id)arg1;
- (void)setMusicIntoArray:(id)arg1 managerKey:(id)arg2;
- (id)getPlayer:(id)arg1;
- (void)removeMotionManager:(id)arg1;
- (void)setMotionManagerIntoArray:(id)arg1 managerKey:(id)arg2;
- (void)dealloc;
- (id)navigationController;
- (void)triggeredLoadData:(unsigned long long)arg1;
- (void)setInterruptJumpToLocalPage:(CDUnknownBlockType)arg1;
- (void)reloadURL:(id)arg1;
- (void)setIsPushed:(_Bool)arg1;
- (void)setIsLoaded:(_Bool)arg1;
- (void)loadPageWithUrl:(id)arg1;
- (void)actionJsBack;
- (void)actionClose;
- (void)leftButtonClick:(id)arg1;
- (void)doGoBack:(id)arg1;
- (void)_canJSProcessClose:(CDUnknownBlockType)arg1;
- (void)popOpenedController;
- (void)displayErrorMessageString:(id)arg1 errURL:(id)arg2;
- (void)webView:(id)arg1 didFailLoadWithError:(id)arg2;
- (void)extractPageTitle:(id)arg1;
- (void)parseAllMetaContent;
- (void)extractPageTitleByImageUrl:(id)arg1 iconType:(id)arg2;
- (void)completeLoading;
- (void)captureAndRemoveMask;
- (void)removeMask;
- (void)webViewDidFinishLoad:(id)arg1;
- (void)webViewDidStartLoad:(id)arg1;
- (_Bool)isLoginUrl:(id)arg1;
- (_Bool)webView:(id)arg1 shouldStartLoadWithRequest:(id)arg2 navigationType:(long long)arg3;
- (void)trackHitUrl:(id)arg1;
- (void)loadNonWhiteUrl;
- (void)showNonWhiteListUrl:(id)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)webViewCommitAPlusInformation;
- (void)commitAPlusInformation;
- (_Bool)ignoreUTPagePrefixPage_;
- (id)UTPageName;
- (void)tmLoadURLFirstTime;
- (void)viewWillAppear:(_Bool)arg1;
- (void)buildShareItemWithMeta:(id)arg1 block:(CDUnknownBlockType)arg2;
- (void)newShare;
- (void)refreshWebView;
- (void)popoverController:(id)arg1 didSelectQuickMenuItem:(id)arg2;
- (void)didDismissQuickMenuPopoverController:(id)arg1;
- (void)didPresentQuickMenuPopoverController:(id)arg1;
- (void)showQuickMenuController:(id)arg1;
- (void)changeQuickMenuButtonSelected:(_Bool)arg1;
- (void)updateLeftBarButtonItems;
- (void)rightButtonClick:(id)arg1;
- (void)updateRefreshControl;
- (void)enableRefreshView;
- (void)disableRefreshView;
- (_Bool)needShowRefreshView;
- (void)tmgn_closeStateDidChange;
- (_Bool)tmgn_hasRefresh;
- (void)tmgn_triggeredActionForItem:(id)arg1;
- (id)tmgn_centerBarItems;
- (id)tmgn_topActionItems;
- (void)initTMGlobalNavigationView;
- (void)setTopBarViewWhenNavHide;
- (void)popWindowSelf;
- (void)keepOneCtrlInTheNavigation:(id)arg1;
- (void)keepOneCtrlInTheNavigation;
- (_Bool)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
- (void)viewDidLoad;
- (void)willMoveToParentViewController:(id)arg1;
- (void)applyCustomTMSkinNavigationBarStyle:(id)arg1;
- (_Bool)checkWkWebViewWhiteList;
- (_Bool)decideIsUseWKWebView;
- (id)initWithURL:(id)arg1;
- (void)setWebURLString:(id)arg1 withUrl:(_Bool)arg2;
- (void)webviewInit;
- (id)initWebView:(id)arg1;
- (id)init;
- (id)init:(id)arg1 query:(id)arg2 nativeParams:(id)arg3;
- (id)initWithNavigatorURL:(id)arg1 query:(id)arg2 nativeParams:(id)arg3;
- (id)combineExternalParam:(id)arg1;
- (void)initSelf;
- (void)enterWithURL:(id)arg1 extraArgs:(id)arg2;
- (void)enterWithURL:(id)arg1 spmCNT:(id)arg2 spmURL:(id)arg3 andScm:(id)arg4 andTrackInfo:(id)arg5;
- (void)enterWithURL:(id)arg1 spmCNT:(id)arg2 spmURL:(id)arg3 andScm:(id)arg4 extraArgs:(id)arg5;
- (void)webViewDidFinishLoad_aop:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

