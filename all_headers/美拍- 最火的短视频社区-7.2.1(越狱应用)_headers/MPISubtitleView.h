//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <UIKit/UIImageView.h>

#import "UIGestureRecognizerDelegate-Protocol.h"

@class CAShapeLayer, MPISubtitleModel, NSMutableArray, NSString, UIButton, UIView;
@protocol MPISubtitleViewDelegate;

@interface MPISubtitleView : UIImageView <UIGestureRecognizerDelegate>
{
    _Bool _editing;
    _Bool _shouldRecognizeRotation;
    _Bool _shouldRecognizeScale;
    _Bool _shouldRecognizePan;
    unsigned long long _state;
    MPISubtitleModel *_subtitleModel;
    id <MPISubtitleViewDelegate> _delegate;
    UIButton *_removeButton;
    UIButton *_editButton;
    UIButton *_scaleButton;
    UIView *_textPiecesContentView;
    UIView *_contentView;
    CAShapeLayer *_borderLayer;
    double _currentScale;
    double _minimumZoomScale;
    double _maximumZoomScale;
    double _labelAdvancedScale;
    NSMutableArray *_textPieces;
    NSMutableArray *_imagePieces;
    struct CGAffineTransform _rotateTransform;
}

@property(retain, nonatomic) NSMutableArray *imagePieces; // @synthesize imagePieces=_imagePieces;
@property(retain, nonatomic) NSMutableArray *textPieces; // @synthesize textPieces=_textPieces;
@property(nonatomic) _Bool shouldRecognizePan; // @synthesize shouldRecognizePan=_shouldRecognizePan;
@property(nonatomic) _Bool shouldRecognizeScale; // @synthesize shouldRecognizeScale=_shouldRecognizeScale;
@property(nonatomic) _Bool shouldRecognizeRotation; // @synthesize shouldRecognizeRotation=_shouldRecognizeRotation;
@property(nonatomic) double labelAdvancedScale; // @synthesize labelAdvancedScale=_labelAdvancedScale;
@property(nonatomic) double maximumZoomScale; // @synthesize maximumZoomScale=_maximumZoomScale;
@property(nonatomic) double minimumZoomScale; // @synthesize minimumZoomScale=_minimumZoomScale;
@property(nonatomic) double currentScale; // @synthesize currentScale=_currentScale;
@property(nonatomic) struct CGAffineTransform rotateTransform; // @synthesize rotateTransform=_rotateTransform;
@property(nonatomic, getter=isEditing) _Bool editing; // @synthesize editing=_editing;
@property(retain, nonatomic) CAShapeLayer *borderLayer; // @synthesize borderLayer=_borderLayer;
@property(retain, nonatomic) UIView *contentView; // @synthesize contentView=_contentView;
@property(retain, nonatomic) UIView *textPiecesContentView; // @synthesize textPiecesContentView=_textPiecesContentView;
@property(retain, nonatomic) UIButton *scaleButton; // @synthesize scaleButton=_scaleButton;
@property(retain, nonatomic) UIButton *editButton; // @synthesize editButton=_editButton;
@property(retain, nonatomic) UIButton *removeButton; // @synthesize removeButton=_removeButton;
@property(nonatomic) __weak id <MPISubtitleViewDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) MPISubtitleModel *subtitleModel; // @synthesize subtitleModel=_subtitleModel;
@property(nonatomic) unsigned long long state; // @synthesize state=_state;
- (void).cxx_destruct;
- (void)updateStateWithoutAnimate:(unsigned long long)arg1;
- (void)setupViews;
- (void)updateModel;
- (void)updateSubviewsFrame;
- (struct CGAffineTransform)transformWithGesture:(id)arg1 newTransform:(struct CGAffineTransform)arg2;
- (void)adjustTransformWithGesture:(id)arg1;
- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;
- (void)actionSubtitleLabelTap:(id)arg1;
- (void)reloadLabel;
- (void)resetCenterIfOutScreen:(id)arg1;
- (void)updateCaptureForTextPieces;
- (void)reloadDataIsNeedResetFrameInfo:(_Bool)arg1;
- (void)actionEdit:(id)arg1;
- (void)actionRemove:(id)arg1;
- (void)actionScaleButtonGesture:(id)arg1;
- (void)actionPinch:(id)arg1;
- (void)actionPan:(id)arg1;
- (void)layoutSubviews;
- (id)initWithSubtitleModel:(id)arg1 shouldRecognizeRotation:(_Bool)arg2 shouldRecognizeScale:(_Bool)arg3 shouldRecognizePan:(_Bool)arg4;
- (id)initWithSubtitleModel:(id)arg1 shouldRecognizeGesture:(_Bool)arg2;
- (id)initWithSubtitleModel:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

