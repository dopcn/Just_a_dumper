//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class NSMutableDictionary, UIColor;

@interface JChinaMap : NSObject
{
    UIColor *strokeColor2;
    UIColor *fillColor2;
    UIColor *fillColor3;
    UIColor *fillColor4;
    UIColor *fillColor5;
    UIColor *fillColor6;
    UIColor *fillColor7;
    UIColor *fillColor8;
    UIColor *fillColor9;
    UIColor *fillColor10;
    UIColor *fillColor11;
    UIColor *fillColor12;
    NSMutableDictionary *_mapPathDistionary;
}

+ (struct CGPoint)transformLocation:(id)arg1;
+ (id)transformLocationName:(id)arg1;
+ (id)imageCompressForSize:(id)arg1 targetSize:(struct CGSize)arg2;
+ (id)imageContentCompressForSize:(id)arg1 targetSize:(struct CGSize)arg2;
+ (struct CGPoint)getPrivinceLocationKey:(id)arg1 size:(struct CGSize)arg2;
+ (struct CGPoint)getPrivinceScaleKey:(id)arg1 size:(struct CGSize)arg2;
+ (struct CGPoint)getPrivinceLocation:(id)arg1 size:(struct CGSize)arg2;
+ (id)getPrivinceLocation:(id)arg1;
+ (struct CGPoint)getPrivincePoint:(struct CGPoint)arg1 size:(struct CGSize)arg2;
@property(retain, nonatomic) NSMutableDictionary *mapPathDistionary; // @synthesize mapPathDistionary=_mapPathDistionary;
@property(retain, nonatomic) UIColor *fillColor12; // @synthesize fillColor12;
@property(retain, nonatomic) UIColor *fillColor11; // @synthesize fillColor11;
@property(retain, nonatomic) UIColor *fillColor10; // @synthesize fillColor10;
@property(retain, nonatomic) UIColor *fillColor9; // @synthesize fillColor9;
@property(retain, nonatomic) UIColor *fillColor8; // @synthesize fillColor8;
@property(retain, nonatomic) UIColor *fillColor7; // @synthesize fillColor7;
@property(retain, nonatomic) UIColor *fillColor6; // @synthesize fillColor6;
@property(retain, nonatomic) UIColor *fillColor5; // @synthesize fillColor5;
@property(retain, nonatomic) UIColor *fillColor4; // @synthesize fillColor4;
@property(retain, nonatomic) UIColor *fillColor3; // @synthesize fillColor3;
@property(retain, nonatomic) UIColor *fillColor2; // @synthesize fillColor2;
@property(retain, nonatomic) UIColor *strokeColor2; // @synthesize strokeColor2;
- (void).cxx_destruct;
- (id)getPathForKey:(id)arg1;
- (id)getPathFromOthers;
- (id)getPathFromAM;
- (id)getPathFromXG;
- (id)getPathFromGD;
- (id)getPathFromGX;
- (id)getPathFromFJ;
- (id)getPathFromJX;
- (id)getPathFromHNX;
- (id)getPathFromGZ;
- (id)getPathFromCQ;
- (id)getPathFromHBE;
- (id)getPathFromZJ;
- (id)getPathFromAH;
- (id)getPathFromJS;
- (id)getPathFromHNY;
- (id)getPathFromSXS;
- (id)getPathFromSXJ;
- (id)getPathFromSD;
- (id)getPathFromSH;
- (id)getPathFromHBJ;
- (id)getPathFromTJ;
- (id)getPathFromBJ;
- (id)getPathFromLN;
- (id)getPathFromJL;
- (id)getPathFromHLJ;
- (id)getPathFromTW;
- (id)getPathFromHNQ;
- (id)getPathFromNX;
- (id)getPathFromGS;
- (id)getPathFromNMG;
- (id)getPathFromSC;
- (id)getPathFromYN;
- (id)getPathFromXZ;
- (id)getPathFromQH;
- (id)getPathFromXJ;
- (id)init;
- (void)saveCacheFile:(id)arg1 filePath:(id)arg2;
- (id)cacheFileForPath:(id)arg1;
- (id)cacheFilePathForKey:(id)arg1;
- (void)asyncProvinceImage:(id)arg1 size:(struct CGSize)arg2 imageBlock:(CDUnknownBlockType)arg3;
- (id)provinceImage:(id)arg1 size:(struct CGSize)arg2;
- (void)asyncProvinceImage:(id)arg1 imageBlock:(CDUnknownBlockType)arg2;
- (id)provinceImage:(id)arg1;
- (void)asyncUpdateProvinceColor:(id)arg1 mapSize:(struct CGSize)arg2 imageBlock:(CDUnknownBlockType)arg3;
- (id)updateProvinceColor:(id)arg1 mapSize:(struct CGSize)arg2;
- (void)asyncUpdateProvinceColor:(id)arg1 imageBlock:(CDUnknownBlockType)arg2;
- (id)updateProvinceColor:(id)arg1;
- (void)clickChinaMap:(struct CGPoint)arg1 mapSzie:(struct CGSize)arg2 locationName:(CDUnknownBlockType)arg3;
- (void)asyncChinaNameImageForSize:(struct CGSize)arg1 imageBlock:(CDUnknownBlockType)arg2;
- (void)asyncChinaViewForSize:(struct CGSize)arg1 imageBlock:(CDUnknownBlockType)arg2;
- (id)chinaViewForSize:(struct CGSize)arg1;
- (void)asyncChinaView:(CDUnknownBlockType)arg1;
- (id)chinaView;
- (long long)getRandomNumber:(long long)arg1 to:(long long)arg2;
- (double)getValidYFor:(id)arg1 point:(struct CGPoint)arg2 count:(long long)arg3 maxValue:(long long)arg4;
- (double)getValidXFor:(id)arg1 point:(struct CGPoint)arg2 count:(long long)arg3 maxValue:(long long)arg4;
- (struct CGPoint)getAminitionPoint:(id)arg1 point:(struct CGPoint)arg2;
- (void)getUsersPoint:(unsigned long long)arg1 size:(struct CGSize)arg2 userPointBlock:(CDUnknownBlockType)arg3;

@end

