//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "BasePlayer.h"

#import "CloudServiceDelegate-Protocol.h"
#import "MusicPageFlowViewDataSource-Protocol.h"
#import "MusicPageFlowViewDelegate-Protocol.h"
#import "NSFetchedResultsControllerDelegate-Protocol.h"
#import "SectionHeaderLoadingCellDelegate-Protocol.h"
#import "TWMessageLikeVCDelegate-Protocol.h"

@class CustomActionView, MoreSceneRadioView, MusicPageFlowView, NSArray, NSFetchedResultsController, NSMutableArray, NSString, SceneBaseModel, UIButton, UIImageView, UILabel, UIView;

@interface ScenePlayerVC : BasePlayer <NSFetchedResultsControllerDelegate, TWMessageLikeVCDelegate, SectionHeaderLoadingCellDelegate, MusicPageFlowViewDataSource, MusicPageFlowViewDelegate, CloudServiceDelegate>
{
    MoreSceneRadioView *_moreSceneView;
    CustomActionView *_loginActionView;
    _Bool playlistDidEnd;
    _Bool _needShowFetchingView;
    _Bool _needAutoFetchData;
    _Bool _isFetching;
    int _radioPlayType;
    UIView *_topBannerBgView;
    SceneBaseModel *_sceneObject;
    UIView *_emptyView;
    UIView *_sceneSelectBgView;
    SceneBaseModel *_selectSceneObject;
    MusicPageFlowView *_musicPageFlowView;
    NSArray *_totalTracks;
    UILabel *_sceneTitleLabel;
    UIButton *_shiftImageButton;
    UIView *_sceneFetchEmptyView;
    long long _pageSize;
    NSFetchedResultsController *_sceneFRC;
    UIImageView *_sceneFetchindicator;
    UIView *_sceneFetchingView;
    NSMutableArray *_sectionArray;
    long long _pageNumber;
    UILabel *_networkStateLabel;
    NSString *_artistName;
    UIImageView *_upImageForDrive;
    UIImageView *_downImageForDrive;
    UIImageView *_playBtnLoadingView;
    UIView *_moreButtonView;
    UILabel *_emptyViewLabel0;
    UIButton *_emptyLoadLineButton;
    UILabel *_fetchingLabel;
    UILabel *_sceneFetchEmptyViewLabel0;
    UIButton *_sceneFetchEmptyViewReloadBtn;
    UILabel *_driveRemindLabel;
    double _moreButtonViewcenterY;
    double _moreButtonViewHeight;
    double _musicPageFlowViewOriginY;
    double _musicPageFlowViewHeight;
    double _musicPageFlowViewWidth;
    double _playPageNavViewHeight;
    UIButton *_moreBtn;
    UIButton *_favButtonForDrive;
    UIImageView *_playerBgImageView;
    UIView *_playerBgMaskView;
    UIImageView *_gprsImageView;
    UILabel *_gprsLabel;
    double _musicControlPortraitCenterY;
    double _musicControlLeftCenterY;
    UIButton *_activityBtton;
    NSString *_activityWebUrl;
    NSString *_activityImageUrl;
    UIImageView *_adSceneUpBgView;
    UIImageView *_downShadowView;
    UIView *_tpAdContentView;
    struct CGPoint _startPt;
    struct CGSize _lrcViewSize;
}

+ (id)playerWithSceneObject:(id)arg1;
+ (id)player;
@property(nonatomic) __weak UIView *tpAdContentView; // @synthesize tpAdContentView=_tpAdContentView;
@property _Bool isFetching; // @synthesize isFetching=_isFetching;
@property(retain, nonatomic) UIImageView *downShadowView; // @synthesize downShadowView=_downShadowView;
@property(retain, nonatomic) UIImageView *adSceneUpBgView; // @synthesize adSceneUpBgView=_adSceneUpBgView;
@property(retain, nonatomic) NSString *activityImageUrl; // @synthesize activityImageUrl=_activityImageUrl;
@property(retain, nonatomic) NSString *activityWebUrl; // @synthesize activityWebUrl=_activityWebUrl;
@property(retain, nonatomic) UIButton *activityBtton; // @synthesize activityBtton=_activityBtton;
@property(nonatomic) double musicControlLeftCenterY; // @synthesize musicControlLeftCenterY=_musicControlLeftCenterY;
@property(nonatomic) double musicControlPortraitCenterY; // @synthesize musicControlPortraitCenterY=_musicControlPortraitCenterY;
@property(nonatomic) struct CGSize lrcViewSize; // @synthesize lrcViewSize=_lrcViewSize;
@property(retain, nonatomic) UILabel *gprsLabel; // @synthesize gprsLabel=_gprsLabel;
@property(retain, nonatomic) UIImageView *gprsImageView; // @synthesize gprsImageView=_gprsImageView;
@property(retain, nonatomic) UIView *playerBgMaskView; // @synthesize playerBgMaskView=_playerBgMaskView;
@property(retain, nonatomic) UIImageView *playerBgImageView; // @synthesize playerBgImageView=_playerBgImageView;
@property(retain, nonatomic) UIButton *favButtonForDrive; // @synthesize favButtonForDrive=_favButtonForDrive;
@property(retain, nonatomic) UIButton *moreBtn; // @synthesize moreBtn=_moreBtn;
@property(nonatomic) double playPageNavViewHeight; // @synthesize playPageNavViewHeight=_playPageNavViewHeight;
@property(nonatomic) double musicPageFlowViewWidth; // @synthesize musicPageFlowViewWidth=_musicPageFlowViewWidth;
@property(nonatomic) double musicPageFlowViewHeight; // @synthesize musicPageFlowViewHeight=_musicPageFlowViewHeight;
@property(nonatomic) double musicPageFlowViewOriginY; // @synthesize musicPageFlowViewOriginY=_musicPageFlowViewOriginY;
@property(nonatomic) double moreButtonViewHeight; // @synthesize moreButtonViewHeight=_moreButtonViewHeight;
@property(nonatomic) double moreButtonViewcenterY; // @synthesize moreButtonViewcenterY=_moreButtonViewcenterY;
@property(nonatomic) struct CGPoint startPt; // @synthesize startPt=_startPt;
@property(retain, nonatomic) UILabel *driveRemindLabel; // @synthesize driveRemindLabel=_driveRemindLabel;
@property(retain, nonatomic) UIButton *sceneFetchEmptyViewReloadBtn; // @synthesize sceneFetchEmptyViewReloadBtn=_sceneFetchEmptyViewReloadBtn;
@property(retain, nonatomic) UILabel *sceneFetchEmptyViewLabel0; // @synthesize sceneFetchEmptyViewLabel0=_sceneFetchEmptyViewLabel0;
@property(retain, nonatomic) UILabel *fetchingLabel; // @synthesize fetchingLabel=_fetchingLabel;
@property(retain, nonatomic) UIButton *emptyLoadLineButton; // @synthesize emptyLoadLineButton=_emptyLoadLineButton;
@property(retain, nonatomic) UILabel *emptyViewLabel0; // @synthesize emptyViewLabel0=_emptyViewLabel0;
@property(retain, nonatomic) UIView *moreButtonView; // @synthesize moreButtonView=_moreButtonView;
@property(retain, nonatomic) UIImageView *playBtnLoadingView; // @synthesize playBtnLoadingView=_playBtnLoadingView;
@property(retain, nonatomic) UIImageView *downImageForDrive; // @synthesize downImageForDrive=_downImageForDrive;
@property(retain, nonatomic) UIImageView *upImageForDrive; // @synthesize upImageForDrive=_upImageForDrive;
@property(retain, nonatomic) NSString *artistName; // @synthesize artistName=_artistName;
@property(retain, nonatomic) UILabel *networkStateLabel; // @synthesize networkStateLabel=_networkStateLabel;
@property(nonatomic) _Bool needAutoFetchData; // @synthesize needAutoFetchData=_needAutoFetchData;
@property(nonatomic) long long pageNumber; // @synthesize pageNumber=_pageNumber;
@property(retain, nonatomic) NSMutableArray *sectionArray; // @synthesize sectionArray=_sectionArray;
@property(nonatomic) _Bool needShowFetchingView; // @synthesize needShowFetchingView=_needShowFetchingView;
@property(retain, nonatomic) UIView *sceneFetchingView; // @synthesize sceneFetchingView=_sceneFetchingView;
@property(retain, nonatomic) UIImageView *sceneFetchindicator; // @synthesize sceneFetchindicator=_sceneFetchindicator;
@property(retain, nonatomic) NSFetchedResultsController *sceneFRC; // @synthesize sceneFRC=_sceneFRC;
@property(nonatomic) long long pageSize; // @synthesize pageSize=_pageSize;
@property(retain, nonatomic) UIView *sceneFetchEmptyView; // @synthesize sceneFetchEmptyView=_sceneFetchEmptyView;
@property(retain, nonatomic) UIButton *shiftImageButton; // @synthesize shiftImageButton=_shiftImageButton;
@property(retain, nonatomic) UILabel *sceneTitleLabel; // @synthesize sceneTitleLabel=_sceneTitleLabel;
@property(nonatomic) int radioPlayType; // @synthesize radioPlayType=_radioPlayType;
@property(retain, nonatomic) NSArray *totalTracks; // @synthesize totalTracks=_totalTracks;
@property(retain, nonatomic) MusicPageFlowView *musicPageFlowView; // @synthesize musicPageFlowView=_musicPageFlowView;
@property(retain, nonatomic) SceneBaseModel *selectSceneObject; // @synthesize selectSceneObject=_selectSceneObject;
@property(nonatomic) _Bool playlistDidEnd; // @synthesize playlistDidEnd;
@property(retain, nonatomic) UIView *sceneSelectBgView; // @synthesize sceneSelectBgView=_sceneSelectBgView;
@property(retain, nonatomic) UIView *emptyView; // @synthesize emptyView=_emptyView;
@property(retain, nonatomic) SceneBaseModel *sceneObject; // @synthesize sceneObject=_sceneObject;
@property(retain, nonatomic) UIView *topBannerBgView; // @synthesize topBannerBgView=_topBannerBgView;
- (void).cxx_destruct;
- (id)pickPicURL:(id)arg1;
- (void)fetchRedheartRadioSongsASI;
- (void)fetchUserRadioListByActionsASI;
- (unsigned long long)supportedVCInterfaceOrientations;
- (_Bool)shouldVCRotate;
- (void)promptLoginActionView;
- (void)sendFeedBack:(id)arg1;
- (void)dragOnView:(id)arg1 gestureDidEnd:(id)arg2;
- (void)dragOnView:(id)arg1 gestureDidBegin:(id)arg2;
- (void)singleTapOnView:(id)arg1 gesture:(id)arg2;
- (_Bool)playerViewSupportDrag;
- (void)willTransitionToTraitCollection:(id)arg1 withTransitionCoordinator:(id)arg2;
- (void)willAnimateRotationToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (void)didRotateFromInterfaceOrientation:(long long)arg1;
- (void)willRotateToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (void)rotateViewForDrive:(long long)arg1;
- (void)transitionFromPortraitToLeft:(long long)arg1;
- (void)transitionFromLeftToPortrait;
- (unsigned long long)supportedInterfaceOrientations;
- (_Bool)shouldAutorotate;
- (_Bool)shouldAutorotateToInterfaceOrientation:(long long)arg1;
- (void)searchLrcPicFetched:(id)arg1 userInfo:(id)arg2;
- (void)picturesFetchedCommonWithMemTrack:(id)arg1 picInfo:(id)arg2;
- (void)picturesByTrackIdFetched:(id)arg1 userInfo:(id)arg2;
- (id)flowView:(id)arg1 cellForPageAtIndex:(long long)arg2;
- (long long)numberOfPagesInFlowView:(id)arg1;
- (void)diyPageFlowCellNeedupdateAlbumToLrcView;
- (void)diyPageFlowCell:(id)arg1 clickCell:(unsigned long long)arg2;
- (void)diyPageFlowCell:(id)arg1 didPlay:(unsigned long long)arg2;
- (void)didScrollToPage:(long long)arg1 inFlowView:(id)arg2;
- (struct CGSize)sizeForPageInFlowView:(id)arg1;
- (void)endScrolling;
- (void)beginScrolling;
- (void)fetchWeatherForNeedScene;
- (void)stopAnimation;
- (void)startAnimation;
- (void)fetchPlaylistWithSceneError;
- (void)scenePlaylistFetched:(id)arg1;
- (void)removeEmptyView;
- (void)reloadPlaylist;
- (void)fetchPlaylistWithScene:(long long)arg1 needShowOnlyWifi:(_Bool)arg2;
- (void)favSongNotificationToWatchWithTrack:(id)arg1;
- (void)doRemoveFavSongFailed:(id)arg1;
- (void)doRemoveFavSongSuccess:(id)arg1;
- (void)doAddFavSongFailed:(id)arg1 errorText:(id)arg2;
- (void)doAddFavSongSuccess:(id)arg1;
- (void)addFavSongToLikeSongList:(id)arg1;
- (void)setFavButtonPressed;
- (void)setFavButtonNormal;
- (void)setFavButtonStatus:(_Bool)arg1;
- (void)refreshScenePlayerView;
- (void)addArray:(id)arg1 toArray:(id)arg2;
- (void)insertNearListToTotal:(id)arg1;
- (void)setupListOnline:(id)arg1;
- (void)controllerDidChangeContent:(id)arg1;
- (void)progressChangeTo:(id)arg1;
- (void)fadeOutPause;
- (void)sleepTimer;
- (void)playListDidEnd;
- (void)handlePlayListAutoDownload:(id)arg1;
- (void)handleFadeOut:(id)arg1;
- (void)setFavor;
- (void)moveToTrashReally;
- (void)actionToTrashWithOnline:(_Bool)arg1;
- (void)commitRadioPlayAction:(id)arg1;
- (void)moveToTrash;
- (void)download;
- (void)setMode:(int)arg1;
- (void)skip;
- (void)pre;
- (void)playBtnTaped;
- (void)pauseBtnTaped;
- (void)updatePlayBtnState;
- (void)loadAdEvnet;
- (void)dismissMobileAd;
- (void)dismissNonMobileAd;
- (void)userGprsUpdate:(id)arg1;
- (void)nearLinePlayListUpdate;
- (void)playerDidStopPlaying:(id)arg1;
- (void)refreshPageFlowScrollView;
- (void)refreshPageFlowScrollViewWithPlayIndex;
- (void)fetchTrackImageWithIndex:(long long)arg1;
- (void)showAd;
- (void)playerTrackDidBecomeAvailable:(id)arg1;
- (_Bool)fetchCoverForLocalTrack:(id)arg1;
- (void)initUIStatusForDriverAndAd:(id)arg1;
- (void)readyToPlayTrack:(id)arg1;
- (void)updateDownloadBtnStatus:(id)arg1;
- (void)playerTrackReadyToPlay:(id)arg1;
- (void)actionToActivity;
- (id)lrcView;
- (void)didReceiveMemoryWarning;
- (void)addToPlaylist;
- (void)didSelectType:(int)arg1;
- (void)actionMoreButton;
- (void)actionQuitPlayPageBtn;
- (void)removeViewsWhenEmptyCommon;
- (void)postEmptyViewToWatch;
- (void)showEmptyViewOrPlayView:(_Bool)arg1;
- (_Bool)isSupportRotate;
- (_Bool)isAdvertisementScene;
- (_Bool)isPersonalRedheartScene;
- (_Bool)isDriveScene;
- (void)refreshSceneAnimation;
- (void)resetUIWhenChangeScene;
- (void)removeSceneViewFromPlayerWithAnimation:(_Bool)arg1;
- (void)removeSceneViewFromPlayerWithAnimationCommon:(_Bool)arg1;
- (void)actionShiftSceneView;
- (void)actionClose:(id)arg1;
- (void)actionLrcAlbumImageBtn;
- (void)initMusicControl;
- (id)nextBtn;
- (id)prevBtn;
- (id)playBtn;
- (void)initArtistAlbumNameImgView;
- (void)initTrackArtistNameLabel;
- (void)initFrontViewBg;
- (void)showPlayTitleOnly;
- (void)showLbsFetchedView;
- (void)initAndUPdateLbsView;
- (void)updateSceneTitleView;
- (void)initPlayPageNavView;
- (void)refreshPlayerView:(_Bool)arg1;
- (void)resetUIStatus;
- (void)_refreshFeedBack;
- (void)viewWillAppear:(_Bool)arg1;
- (void)playerViewWillDisappear;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)playerViewWillAppear;
- (void)dealloc;
- (void)viewDidLoad;
- (void)initMoreButtonView;
- (void)loadView;
- (void)musicPageFlowViewWithLrcOrLargeMode;
- (void)sceneUIAdaptation;
- (void)p_addScrollViewMaskEffect:(struct CGRect)arg1 fromView:(id)arg2;
- (int)imageColorSceneBgType;
- (void)updateSceneBgImageWithUrl:(id)arg1;
- (void)sceneActiveViewWithWeburl:(id)arg1 imageurl:(id)arg2;
- (void)selectWithSceneObjectCommon:(id)arg1;
- (void)selectWithSceneObject:(id)arg1 isRec:(_Bool)arg2 touchFrame:(struct CGRect)arg3;
- (void)playSceneWithTrackList:(id)arg1 bLocalList:(_Bool)arg2;
- (void)selectWithSceneObjectOut:(id)arg1;
- (void)initUIStatus:(int)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)applyTheme;
- (void)updateSceneType;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

