//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "BITHockeyBaseManager.h"

@class BITChannel, BITPersistence, BITSender, BITTelemetryContext, NSObject, NSString, NSUserDefaults;
@protocol NSObject, OS_dispatch_queue;

@interface BITMetricsManager : BITHockeyBaseManager
{
    _Bool _disabled;
    BITChannel *_channel;
    BITTelemetryContext *_telemetryContext;
    BITPersistence *_persistence;
    NSString *_serverURL;
    NSUserDefaults *_userDefaults;
    id <NSObject> _appWillEnterForegroundObserver;
    id <NSObject> _appDidEnterBackgroundObserver;
    NSObject<OS_dispatch_queue> *_metricsEventQueue;
    BITSender *_sender;
    unsigned long long _appBackgroundTimeBeforeSessionExpires;
}

@property(nonatomic) unsigned long long appBackgroundTimeBeforeSessionExpires; // @synthesize appBackgroundTimeBeforeSessionExpires=_appBackgroundTimeBeforeSessionExpires;
@property(retain, nonatomic) BITSender *sender; // @synthesize sender=_sender;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *metricsEventQueue; // @synthesize metricsEventQueue=_metricsEventQueue;
@property(retain, nonatomic) id <NSObject> appDidEnterBackgroundObserver; // @synthesize appDidEnterBackgroundObserver=_appDidEnterBackgroundObserver;
@property(retain, nonatomic) id <NSObject> appWillEnterForegroundObserver; // @synthesize appWillEnterForegroundObserver=_appWillEnterForegroundObserver;
@property(nonatomic) _Bool disabled; // @synthesize disabled=_disabled;
- (void)setServerURL:(id)arg1;
- (id)serverURL;
- (void).cxx_destruct;
@property(readonly, nonatomic) NSUserDefaults *userDefaults; // @synthesize userDefaults=_userDefaults;
@property(readonly, nonatomic) BITPersistence *persistence; // @synthesize persistence=_persistence;
@property(readonly, nonatomic) BITTelemetryContext *telemetryContext; // @synthesize telemetryContext=_telemetryContext;
@property(readonly, nonatomic) BITChannel *channel; // @synthesize channel=_channel;
- (void)trackDataItem:(id)arg1;
- (void)trackEventWithName:(id)arg1 properties:(id)arg2 measurements:(id)arg3;
- (void)trackEventWithName:(id)arg1;
- (void)trackSessionWithState:(long long)arg1;
- (id)createNewSessionWithId:(id)arg1;
- (void)startNewSessionWithId:(id)arg1;
- (void)startNewSessionIfNeeded;
- (void)updateDidEnterBackgroundTime;
- (void)unregisterObservers;
- (void)registerObservers;
- (void)startManager;
- (id)initWithChannel:(id)arg1 telemetryContext:(id)arg2 persistence:(id)arg3 userDefaults:(id)arg4;
- (id)init;

@end

