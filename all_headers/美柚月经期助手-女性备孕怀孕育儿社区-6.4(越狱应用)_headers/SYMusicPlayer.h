//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

#import "AVAudioSessionDelegate-Protocol.h"
#import "HysteriaPlayerDataSource-Protocol.h"
#import "HysteriaPlayerDelegate-Protocol.h"

@class HysteriaPlayer, NSArray, NSString, NSTimer, SYMusicAlbum, SYMusicSong;
@protocol OS_dispatch_queue, SYMusicPlayerDelegate;

@interface SYMusicPlayer : NSObject <AVAudioSessionDelegate, HysteriaPlayerDelegate, HysteriaPlayerDataSource>
{
    id mTimeObserver;
    id bTimeObserver;
    NSObject<OS_dispatch_queue> *musicIOQueue;
    NSObject<OS_dispatch_queue> *musicTimeQueue;
    _Bool _playing;
    _Bool _isFirstPlayer;
    _Bool _networdEnable;
    _Bool _isCache;
    NSString *_currentTimeString;
    NSString *_durationString;
    double _currentTime;
    double _durationTime;
    double _progress;
    double _preloadProgress;
    NSArray *_songlist;
    long long _timerRemain;
    NSString *_timerSelectString;
    unsigned long long _currentIndex;
    SYMusicSong *_currentSong;
    id <SYMusicPlayerDelegate> _delegate;
    id _playerVC;
    unsigned long long _playingType;
    long long _albumId;
    SYMusicAlbum *_currentAlbum;
    NSArray *_playlist;
    NSTimer *_timer;
    HysteriaPlayer *_player;
    long long _errorCount;
}

+ (id)sharePlayer;
@property(nonatomic) long long errorCount; // @synthesize errorCount=_errorCount;
@property(retain, nonatomic) HysteriaPlayer *player; // @synthesize player=_player;
@property(retain, nonatomic) NSTimer *timer; // @synthesize timer=_timer;
@property(retain, nonatomic) NSArray *playlist; // @synthesize playlist=_playlist;
@property(retain, nonatomic) SYMusicAlbum *currentAlbum; // @synthesize currentAlbum=_currentAlbum;
@property(nonatomic) _Bool isCache; // @synthesize isCache=_isCache;
@property(nonatomic) _Bool networdEnable; // @synthesize networdEnable=_networdEnable;
@property(nonatomic) long long albumId; // @synthesize albumId=_albumId;
@property(nonatomic) unsigned long long playingType; // @synthesize playingType=_playingType;
@property(nonatomic) _Bool isFirstPlayer; // @synthesize isFirstPlayer=_isFirstPlayer;
@property(nonatomic) __weak id playerVC; // @synthesize playerVC=_playerVC;
@property(nonatomic) __weak id <SYMusicPlayerDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, nonatomic) SYMusicSong *currentSong; // @synthesize currentSong=_currentSong;
@property(nonatomic) unsigned long long currentIndex; // @synthesize currentIndex=_currentIndex;
@property(copy, nonatomic) NSString *timerSelectString; // @synthesize timerSelectString=_timerSelectString;
@property(nonatomic) long long timerRemain; // @synthesize timerRemain=_timerRemain;
@property(retain, nonatomic) NSArray *songlist; // @synthesize songlist=_songlist;
@property(nonatomic) _Bool playing; // @synthesize playing=_playing;
@property double preloadProgress; // @synthesize preloadProgress=_preloadProgress;
@property double progress; // @synthesize progress=_progress;
@property double durationTime; // @synthesize durationTime=_durationTime;
@property double currentTime; // @synthesize currentTime=_currentTime;
@property(copy, nonatomic) NSString *durationString; // @synthesize durationString=_durationString;
@property(copy, nonatomic) NSString *currentTimeString; // @synthesize currentTimeString=_currentTimeString;
- (void).cxx_destruct;
- (void)willStop;
- (void)stopTimer;
- (void)fireTimerWithMinutes:(long long)arg1;
- (void)showLockInfoWithImage:(id)arg1;
- (void)showInfoWithTitle:(id)arg1 artist:(id)arg2 albumTitle:(id)arg3 image:(id)arg4 totalDuration:(id)arg5 currentTime:(id)arg6;
- (void)onlyUpdateTimeInLockScreen;
- (void)showInfoInLockedScreen;
- (void)musicCacheExportFinishWithPathURL:(id)arg1 withMusicID:(long long)arg2;
- (void)removeSongCacheWithMusicID:(long long)arg1;
- (id)songWithMusicID:(long long)arg1;
- (void)cacheAVPlayerItem:(id)arg1 song:(id)arg2;
- (void)outputMusicCache;
- (void)seekTime:(double)arg1;
- (_Bool)didPlayed;
- (_Bool)readyToPlay;
- (double)duration;
- (_Bool)isPlaying;
- (void)playPreviouse;
- (void)playNext;
- (void)pause;
- (void)playDefaultSongList;
- (void)play_pause;
- (void)logPlayMusicEvent;
- (void)playAsynFromSonglist:(id)arg1 index:(long long)arg2;
- (long long)hysteriaPlayerAsyncGetNextSongFromCurrentIndex:(long long)arg1;
- (void)getSongURLAsyncAtIndex:(long long)arg1;
- (void)hysteriaPlayerAsyncSetUrlForItemAtIndex:(long long)arg1 preBuffer:(_Bool)arg2;
- (long long)hysteriaPlayerNumberOfItems;
- (void)everySongDidReachEnd:(id)arg1;
- (void)hysteriaPlayerItemFailedToPlayEndTime:(id)arg1 error:(id)arg2;
- (void)hysteriaPlayerRateChanged:(_Bool)arg1;
- (void)hysteriaPlayerDidReachEnd;
- (void)hysteriaPlayerCurrentItemChanged:(id)arg1;
- (void)hysteriaPlayerWillChangedAtIndex:(long long)arg1;
- (void)hysteriaPlayerCurrentItemPreloaded:(CDStruct_1b6d18a9)arg1;
- (void)hysteriaPlayerReadyToPlay:(long long)arg1;
- (void)hysteriaPlayerDidFailed:(long long)arg1 error:(id)arg2;
- (id)timeWithTotalSecound:(float)arg1;
- (void)updateTime;
- (void)stopPlayMusic:(id)arg1;
- (void)deprecateMusicPlayer;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

