//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <CoreData/NSManagedObject.h>

#import "APIServiceDelegate-Protocol.h"

@class Accompany, Album, Artist, Cloud, NSDate, NSMutableArray, NSNumber, NSSet, NSString, RecentPlaylistItem;
@protocol TrackDelegate, TrackProgressDelegate;

@interface Track : NSManagedObject <APIServiceDelegate>
{
    id <TrackDelegate> trackDelegate;
    id <TrackProgressDelegate> progressDelegate;
    double dlConnectTime;
    double dlTime;
    NSDate *startConnect;
    NSDate *startDonwload;
    NSString *downloadFrom;
    NSString *downloadFrom2;
    int _preferedBitrate;
    NSNumber *trackFileID;
    NSDate *startDownloadLRCDate;
    NSMutableArray *_urlsForPlay;
}

+ (id)createWithId:(id)arg1 inContext:(id)arg2;
+ (id)trackWithDownload:(id)arg1 inContext:(id)arg2;
+ (id)trackWithMemTrack:(id)arg1 inContext:(id)arg2;
+ (id)trackWithDic:(id)arg1 inContext:(id)arg2;
+ (id)trackWithListDic:(id)arg1 inContext:(id)arg2;
+ (id)trackWithPersonalRadioDic:(id)arg1 inContext:(id)arg2;
+ (id)trackWithRadioDic:(id)arg1 inContext:(id)arg2;
+ (id)findByMemTrack:(id)arg1 inContext:(id)arg2;
+ (id)findByTrackName:(id)arg1 albumName:(id)arg2 iPodTrack:(_Bool)arg3 inContext:(id)arg4;
+ (id)findByPersistentID:(id)arg1 inContext:(id)arg2;
+ (id)findByTrackID:(id)arg1 inContext:(id)arg2;
+ (id)TracksByType:(int)arg1 sortKey:(id)arg2 inContext:(id)arg3;
+ (id)nativeTracksExceptIPod:(id)arg1;
+ (id)allNativeTracks:(id)arg1;
+ (id)allMigrationTracks:(id)arg1;
+ (id)allTracks:(id)arg1;
+ (id)defaultTracks:(id)arg1;
+ (id)deletingTracks:(id)arg1;
+ (id)validatingTracks:(id)arg1;
+ (id)offlinedTracks:(id)arg1;
+ (id)favorTracks:(id)arg1;
+ (id)pausedTracks:(id)arg1;
+ (id)waitingTracks:(id)arg1;
+ (id)downloadingTracks:(id)arg1;
+ (id)failedTracks:(id)arg1;
+ (id)downloadedTracksByDate:(id)arg1;
+ (id)tracksNeedToRemove:(id)arg1;
+ (id)dirtyTracks:(id)arg1;
+ (id)iPodTracks:(id)arg1;
@property(retain, nonatomic) NSMutableArray *urlsForPlay; // @synthesize urlsForPlay=_urlsForPlay;
@property(retain, nonatomic) NSDate *startDownloadLRCDate; // @synthesize startDownloadLRCDate;
@property(copy, nonatomic) NSString *downloadFrom2; // @synthesize downloadFrom2;
@property(copy, nonatomic) NSString *downloadFrom; // @synthesize downloadFrom;
@property(retain, nonatomic) NSDate *startConnect; // @synthesize startConnect;
@property(retain, nonatomic) NSDate *startDonwload; // @synthesize startDonwload;
@property(nonatomic) double dlTime; // @synthesize dlTime;
@property(nonatomic) double dlConnectTime; // @synthesize dlConnectTime;
@property(nonatomic) __weak id <TrackProgressDelegate> progressDelegate; // @synthesize progressDelegate;
@property(nonatomic) __weak id <TrackDelegate> trackDelegate; // @synthesize trackDelegate;
@property(retain, nonatomic) NSNumber *trackFileID; // @synthesize trackFileID;
- (void).cxx_destruct;
- (_Bool)isTecentResource;
@property(retain, nonatomic) NSString *artistID; // @dynamic artistID;
@property(retain, nonatomic) NSString *albumID; // @dynamic albumID;
- (void)httpFailed:(id)arg1 userInfo:(id)arg2;
- (int)getResourceType;
- (int)getPreferedBitrate;
- (void)setPreferedBitrate:(int)arg1;
- (void)synchDlTime;
- (void)synchDlFrom;
- (void)dealloc;
- (void)saveToDisk;
- (void)save;
- (id)pickURLsForPlay;
- (_Bool)cleanUp;
- (id)localFileTmp;
- (id)folderPath;
- (void)removeFolderIfExists;
- (id)pickLrcURL;
- (id)pickImageURL;
- (_Bool)isDownloadState;
- (_Bool)equalToTrack:(id)arg1;
- (_Bool)isImportTrack;
- (_Bool)isIpodTrack;
- (void)sendFailedAction:(int)arg1 isOfflineTask:(_Bool)arg2;
- (void)sendSucceseAction:(_Bool)arg1;
- (void)syncWithDownload:(id)arg1;
- (void)deleteFile:(id)arg1;
- (void)syncWithMemTrack:(id)arg1;
- (void)createAlbumArtistIfNotExist;

// Remaining properties
@property(retain, nonatomic) id URLInfo; // @dynamic URLInfo;
@property(retain, nonatomic) Accompany *accompany; // @dynamic accompany;
@property(retain, nonatomic) NSString *accompanyID; // @dynamic accompanyID;
@property(retain, nonatomic) Album *album; // @dynamic album;
@property(retain, nonatomic) NSString *albumImageURL; // @dynamic albumImageURL;
@property(retain, nonatomic) NSNumber *albumIsManual; // @dynamic albumIsManual;
@property(retain, nonatomic) NSNumber *albumIsNew; // @dynamic albumIsNew;
@property(retain, nonatomic) NSNumber *albumNO; // @dynamic albumNO;
@property(retain, nonatomic) NSString *albumName; // @dynamic albumName;
@property(retain, nonatomic) NSString *albumNamePY; // @dynamic albumNamePY;
@property(retain, nonatomic) NSString *allRate; // @dynamic allRate;
@property(retain, nonatomic) Artist *artist; // @dynamic artist;
@property(retain, nonatomic) NSString *artistImageURL; // @dynamic artistImageURL;
@property(retain, nonatomic) NSString *artistName; // @dynamic artistName;
@property(retain, nonatomic) NSString *artistNamePY; // @dynamic artistNamePY;
@property(retain, nonatomic) NSString *bigImageURL; // @dynamic bigImageURL;
@property(retain, nonatomic) NSNumber *bigImageURLSize; // @dynamic bigImageURLSize;
@property(retain, nonatomic) NSString *bitRate; // @dynamic bitRate;
@property(retain, nonatomic) NSString *cacheURL; // @dynamic cacheURL;
@property(retain, nonatomic) NSNumber *chargeType; // @dynamic chargeType;
@property(retain, nonatomic) Cloud *cloud; // @dynamic cloud;
@property(retain, nonatomic) NSNumber *cloudDownloadType; // @dynamic cloudDownloadType;
@property(retain, nonatomic) NSNumber *compress; // @dynamic compress;
@property(readonly, copy) NSString *debugDescription;
@property(retain, nonatomic) NSSet *deleteScenes; // @dynamic deleteScenes;
@property(readonly, copy) NSString *description;
@property(retain, nonatomic) NSNumber *downloadOriginal; // @dynamic downloadOriginal;
@property(retain, nonatomic) NSDate *downloadTime; // @dynamic downloadTime;
@property(retain, nonatomic) NSNumber *downloadedByte; // @dynamic downloadedByte;
@property(retain, nonatomic) NSString *downloadingBitRate; // @dynamic downloadingBitRate;
@property(retain, nonatomic) NSDate *favDate; // @dynamic favDate;
@property(retain, nonatomic) NSString *firstChar; // @dynamic firstChar;
@property(retain, nonatomic) NSString *from; // @dynamic from;
@property(retain, nonatomic) NSNumber *hasAccompany; // @dynamic hasAccompany;
@property(retain, nonatomic) NSNumber *hasMatchedAccompany; // @dynamic hasMatchedAccompany;
@property(readonly) unsigned long long hash;
@property(retain, nonatomic) NSNumber *hdMusicAvailable; // @dynamic hdMusicAvailable;
@property(retain, nonatomic) NSNumber *iPodPersistentID; // @dynamic iPodPersistentID;
@property(retain, nonatomic) NSString *imageURL; // @dynamic imageURL;
@property(retain, nonatomic) NSNumber *imageURLSize; // @dynamic imageURLSize;
@property(retain, nonatomic) NSNumber *isEncrypt; // @dynamic isEncrypt;
@property(retain, nonatomic) NSNumber *isOfflined; // @dynamic isOfflined;
@property(retain, nonatomic) NSNumber *listID; // @dynamic listID;
@property(retain, nonatomic) id listenCountArray; // @dynamic listenCountArray;
@property(retain, nonatomic) NSNumber *listenCountRecent; // @dynamic listenCountRecent;
@property(retain, nonatomic) NSString *localFilePath; // @dynamic localFilePath;
@property(retain, nonatomic) NSNumber *lrcIsManual; // @dynamic lrcIsManual;
@property(retain, nonatomic) NSNumber *lrcIsNew; // @dynamic lrcIsNew;
@property(retain, nonatomic) NSString *lrcURL; // @dynamic lrcURL;
@property(retain, nonatomic) NSString *markType; // @dynamic markType;
@property(retain, nonatomic) NSString *mediaInfo; // @dynamic mediaInfo;
@property(retain, nonatomic) NSNumber *original; // @dynamic original;
@property(retain, nonatomic) NSString *originalRate; // @dynamic originalRate;
@property(retain, nonatomic) NSSet *playScenes; // @dynamic playScenes;
@property(retain, nonatomic) NSSet *playlistItems; // @dynamic playlistItems;
@property(retain, nonatomic) NSNumber *preferedQuality; // @dynamic preferedQuality;
@property(retain, nonatomic) RecentPlaylistItem *recentPlaylistItem; // @dynamic recentPlaylistItem;
@property(retain, nonatomic) NSNumber *replayGain; // @dynamic replayGain;
@property(retain, nonatomic) NSString *resRewardFlag; // @dynamic resRewardFlag;
@property(retain, nonatomic) id sceneFactor; // @dynamic sceneFactor;
@property(retain, nonatomic) NSString *smallImageURL; // @dynamic smallImageURL;
@property(retain, nonatomic) NSString *sortKey; // @dynamic sortKey;
@property(retain, nonatomic) NSNumber *style; // @dynamic style;
@property(readonly) Class superclass;
@property(retain, nonatomic) NSNumber *totalByte; // @dynamic totalByte;
@property(retain, nonatomic) NSString *trackExt; // @dynamic trackExt;
@property(retain, nonatomic) NSString *trackID; // @dynamic trackID;
@property(retain, nonatomic) id trackJson; // @dynamic trackJson;
@property(retain, nonatomic) NSString *trackLength; // @dynamic trackLength;
@property(retain, nonatomic) NSString *trackName; // @dynamic trackName;
@property(retain, nonatomic) NSString *trackNamePY; // @dynamic trackNamePY;
@property(retain, nonatomic) NSNumber *trackResourceType; // @dynamic trackResourceType;
@property(retain, nonatomic) NSNumber *trackStatus; // @dynamic trackStatus;
@property(retain, nonatomic) NSNumber *trackType; // @dynamic trackType;
@property(retain, nonatomic) NSString *trackURL; // @dynamic trackURL;
@property(retain, nonatomic) NSString *userID; // @dynamic userID;
@property(retain, nonatomic) NSString *versions; // @dynamic versions;

@end

