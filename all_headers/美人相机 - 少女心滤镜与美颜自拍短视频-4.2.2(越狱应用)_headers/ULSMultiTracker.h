//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

@class EAGLContext, NSString, ULSFaceDetector;
@protocol OS_dispatch_queue;

@interface ULSMultiTracker : NSObject
{
    int _maxFaces;
    struct ThreadPool *_tpool;
    struct vector<ULSTracker *, std::__1::allocator<ULSTracker *>> _trackersGPU;
    struct vector<TrackerWrapper, std::__1::allocator<TrackerWrapper>> _trackers;
    struct vector<bool, std::__1::allocator<bool>> _alive;
    EAGLContext *_oglCtxt;
    NSString *_activationKey;
    NSString *_activeProdctName;
    struct FeatureComp *_featureComp;
    struct ColorConverter _colorConv;
    struct Size_<int> _feature_size;
    struct Mat_<unsigned char> _grayInput;
    struct mutex _mutex;
    struct condition_variable _condition_var;
    struct vector<cv::Mat_<float>, std::__1::allocator<cv::Mat_<float>>> _shape;
    struct vector<cv::Mat_<float>, std::__1::allocator<cv::Mat_<float>>> _shape3D;
    struct vector<cv::Mat_<float>, std::__1::allocator<cv::Mat_<float>>> _shapeQuality;
    struct vector<cv::Mat_<float>, std::__1::allocator<cv::Mat_<float>>> _pupils;
    struct vector<cv::Mat_<float>, std::__1::allocator<cv::Mat_<float>>> _pose;
    struct vector<cv::Mat_<float>, std::__1::allocator<cv::Mat_<float>>> _gaze;
    _Bool useSoftwareFaceDetector;
    struct vector<CGRect, std::__1::allocator<CGRect>> _faceRect;
    struct vector<float, std::__1::allocator<float>> _rollAngle;
    int _faceCount;
    NSObject<OS_dispatch_queue> *face_detect_queue;
    long long frame_count;
    struct CDenseptns *pCDenseptns;
    struct vector<float *, std::__1::allocator<float *>> denseFaceShape;
    float *denseShape;
    float *stShape;
    int totalDensePointsNum;
    struct vector<PoseStablization, std::__1::allocator<PoseStablization>> _pPoseStablization;
    ULSFaceDetector *ncnnFaceDet;
    struct FeatureComp _downSample;
    unsigned int _cameraTexture;
    _Bool isProcessDownSample;
    struct CGSize downSampleSize;
    int loadModelSuccess;
    _Bool _highPrecision;
    _Bool _faceGlue;
    _Bool _useGPU;
    int _trackMode;
    NSString *_activeFeatureString;
}

+ (_Bool)useGPU;
@property(readonly, nonatomic) NSString *activeFeatureString; // @synthesize activeFeatureString=_activeFeatureString;
@property(readonly) _Bool useGPU; // @synthesize useGPU=_useGPU;
- (id).cxx_construct;
- (void).cxx_destruct;
- (_Bool)isNetworkAvailable;
- (_Bool)sendRequest:(id)arg1 error:(id *)arg2 key:(id)arg3;
- (id)createRequest:(id)arg1;
- (_Bool)verifyRemoteKey:(id)arg1;
- (_Bool)isOKToUseTrackerWithoutNoInternet;
- (void)resetNoInternetCount;
- (void)saveLastLicenseCheckDate:(id)arg1;
- (_Bool)isRemoteKeyValid:(id)arg1;
- (_Bool)isLocalKeyExpired:(id)arg1;
- (_Bool)isLocalKeyValid:(id)arg1;
- (int)getAliveTrackerCount;
- (id)ulsFaceDetectWithImage:(id)arg1;
- (id)ulsFaceDetectWithPixelBuffer:(struct __CVBuffer *)arg1;
- (void)resetTracker;
- (void)setTrackerThreshold:(float)arg1;
- (_Bool)isTracking:(int)arg1;
- (void)getTranslationIndex:(int)arg1 x:(float *)arg2 y:(float *)arg3 z:(float *)arg4 focalLength:(float)arg5 imageCentreX:(float)arg6 imageCentreY:(float)arg7;
- (struct Mat)cvMatFromCVPixelBuffer:(struct __CVBuffer *)arg1;
- (float *)getNewStablePoseIndex:(int)arg1 pixelBuffer:(struct __CVBuffer *)arg2;
- (_Bool)getRotationPitch:(int)arg1 pitch:(float *)arg2 yaw:(float *)arg3 roll:(float *)arg4;
- (_Bool)getTranslationInImage:(int)arg1 x:(float *)arg2 y:(float *)arg3;
- (float)getScaleInImage:(int)arg1;
- (const float *)getGaze:(int)arg1;
- (const float *)getPupilsLocation:(int)arg1;
- (float)getPoseQuality:(int)arg1;
- (const float *)getShapeQuality:(int)arg1;
- (const float *)getShape3D:(int)arg1;
- (void)reShapeFromIndex:(int)arg1 toIndex:(int)arg2;
- (const float *)getShape:(int)arg1;
- (const float *)getShape66p:(int)arg1;
- (unsigned int)numberOfPoints;
- (int)processCPU:(struct __CVBuffer *)arg1 withFaceCount:(int)arg2 withFaceRects:(struct CGRect *)arg3 withRollAngle:(float *)arg4;
- (int)processGPU:(struct __CVBuffer *)arg1 withFaceCount:(int)arg2 withFaceRects:(struct CGRect *)arg3 withRollAngle:(float *)arg4;
- (int)process:(struct __CVBuffer *)arg1 withFaceCount:(int)arg2 withFaceRects:(struct CGRect *)arg3 withRollAngle:(float *)arg4;
- (int)process:(struct __CVBuffer *)arg1;
- (int)processWithInternalPixelBuffer:(id)arg1;
- (void)faceDetectWithPixelBuffer:(struct __CVBuffer *)arg1 faceCount:(int)arg2;
- (void)dealloc;
- (void)downSampleStart:(_Bool)arg1 withSize:(struct CGSize)arg2;
- (id)initFromFolder:(id)arg1 withActivationKey:(id)arg2 withProductName:(id)arg3 withMaxFaces:(int)arg4;
- (id)initFromFolder:(id)arg1 withActivationKey:(id)arg2 withMaxFaces:(int)arg3;
- (id)init;
@property _Bool faceGlue; // @synthesize faceGlue=_faceGlue;
@property _Bool highPrecision; // @synthesize highPrecision=_highPrecision;
@property int trackMode; // @synthesize trackMode=_trackMode;

@end

