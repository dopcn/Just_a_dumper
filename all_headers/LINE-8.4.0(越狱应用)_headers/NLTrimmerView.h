//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <UIKit/UIView.h>

#import "NLTrimmerSliderViewDelegate-Protocol.h"

@class AVAsset, NLAVPlayer, NLAVPlayerLayerView, NLTrimmerDimmedView, NLTrimmerSliderView, NSArray, NSString, NSURL, UIButton, UILabel;
@protocol NLTrimmerViewDelegate;

@interface NLTrimmerView : UIView <NLTrimmerSliderViewDelegate>
{
    _Bool _isMuted;
    _Bool _isPauseByUserInteraction;
    _Bool _isPlayButtonSelected;
    _Bool _isSoundButtonSelected;
    AVAsset *_asset;
    id <NLTrimmerViewDelegate> _delegate;
    double _pivotRate;
    UIView *_trimmerContainerView;
    UILabel *_descriptionLabel;
    NSArray *_externalPlayButtons;
    UIButton *_playButton;
    NLAVPlayer *_player;
    NLAVPlayerLayerView *_playerLayerView;
    UIView *_playerAnchorView;
    NLTrimmerDimmedView *_trimmerDimmedView;
    NLTrimmerSliderView *_trimmerSliderView;
    struct CGSize _videoResolution;
    struct UIEdgeInsets _contentEdgeInsets;
    CDStruct_e83c9415 _trimmableTimeRange;
}

@property(nonatomic) struct CGSize videoResolution; // @synthesize videoResolution=_videoResolution;
@property(retain, nonatomic) NLTrimmerSliderView *trimmerSliderView; // @synthesize trimmerSliderView=_trimmerSliderView;
@property(retain, nonatomic) NLTrimmerDimmedView *trimmerDimmedView; // @synthesize trimmerDimmedView=_trimmerDimmedView;
@property(nonatomic, setter=setSoundButtonSelected:) _Bool isSoundButtonSelected; // @synthesize isSoundButtonSelected=_isSoundButtonSelected;
@property(retain, nonatomic) UIView *playerAnchorView; // @synthesize playerAnchorView=_playerAnchorView;
@property(retain, nonatomic) NLAVPlayerLayerView *playerLayerView; // @synthesize playerLayerView=_playerLayerView;
@property(retain, nonatomic) NLAVPlayer *player; // @synthesize player=_player;
@property(nonatomic, setter=setPlayButtonSelected:) _Bool isPlayButtonSelected; // @synthesize isPlayButtonSelected=_isPlayButtonSelected;
@property(retain, nonatomic) UIButton *playButton; // @synthesize playButton=_playButton;
@property(retain, nonatomic) NSArray *externalPlayButtons; // @synthesize externalPlayButtons=_externalPlayButtons;
@property(retain, nonatomic) UILabel *descriptionLabel; // @synthesize descriptionLabel=_descriptionLabel;
@property(retain, nonatomic) UIView *trimmerContainerView; // @synthesize trimmerContainerView=_trimmerContainerView;
@property(nonatomic, setter=setPauseByUserInteraction:) _Bool isPauseByUserInteraction; // @synthesize isPauseByUserInteraction=_isPauseByUserInteraction;
@property(nonatomic) double pivotRate; // @synthesize pivotRate=_pivotRate;
@property(nonatomic) struct UIEdgeInsets contentEdgeInsets; // @synthesize contentEdgeInsets=_contentEdgeInsets;
@property(nonatomic) __weak id <NLTrimmerViewDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic, setter=setMuted:) _Bool isMuted; // @synthesize isMuted=_isMuted;
@property(retain, nonatomic) AVAsset *asset; // @synthesize asset=_asset;
@property(nonatomic) CDStruct_e83c9415 trimmableTimeRange; // @synthesize trimmableTimeRange=_trimmableTimeRange;
- (void).cxx_destruct;
- (struct CGRect)videoRect;
- (id)preferredTransformsForRenderSize:(struct CGSize)arg1 pivotRatio:(double)arg2;
- (void)setNeedsCancelPreviousAndPerformSelector:(SEL)arg1 withObject:(id)arg2 afterDelay:(double)arg3 runLoopModes:(id)arg4;
- (void)setNeedsCancelPreviousAndPerformSelector:(SEL)arg1 withRunLoopModes:(id)arg2;
- (void)handleApplicationDidEnterBackgroundNotification:(id)arg1;
- (void)handlePlayButton:(id)arg1;
- (void)notifyDidChangeReadyForDisplay:(_Bool)arg1;
- (void)notifyDidPrepareWithAsset:(id)arg1 error:(id)arg2;
- (void)setDescriptionText:(id)arg1;
@property(readonly, nonatomic) _Bool isPlaying;
- (void)stopAccordingToPlaybackState;
- (void)playAccordingToPlaybackState;
- (void)pauseAccordingToPlaybackState;
- (void)forcedPlay;
- (void)forcedPauseByUserInteraction;
- (void)forcedPause;
- (struct CGRect)frameOfPlayerView:(double)arg1;
- (struct CGSize)sizeToFitDescriptionLabel;
- (void)layoutSubviews;
- (void)player:(id)arg1 didChangeCurrentTime:(CDStruct_1b6d18a9)arg2;
- (void)player:(id)arg1 didChangePreparingState:(long long)arg2 withCacheKey:(id)arg3 URL:(id)arg4 AVPlayer:(id)arg5 error:(id)arg6;
- (void)player:(id)arg1 didChangePlaybackState:(long long)arg2 withError:(id)arg3;
- (void)willGenerateThumbnailsForTrimmerSliderView:(id)arg1;
- (void)notifyWillGenerateThumbnails;
- (void)setupTrimmerViewWithURL:(id)arg1;
- (void)setupTrimmerViewWithAsset:(id)arg1;
- (void)setupTrimmerView;
- (void)setupTrimmerSliderView;
- (void)setupTrimmerDimmedView;
- (void)setupPlayerLayerView;
- (void)setupPlayer;
- (void)setupPlayButton;
- (void)setupTrimmerContainerView;
- (void)setupDescriptionLabel;
- (void)removeNotificationHandler;
- (id)initWithURL:(id)arg1;
- (id)initWithAsset:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithCoder:(id)arg1;
- (void)dealloc;
- (void)addNotificationHandler;
- (void)trimmerSliderView:(id)arg1 willBeginChangingTrimmableTimeRange:(CDStruct_e83c9415)arg2;
- (void)trimmerSliderView:(id)arg1 didEndChangingTrimmableTimeRange:(CDStruct_e83c9415)arg2;
- (void)trimmerSliderView:(id)arg1 didChangingTrimmableTimeRange:(CDStruct_e83c9415)arg2 isLowerValueChange:(_Bool)arg3;
- (void)notifyWillBeginChangingTrimmableTimeRange:(CDStruct_e83c9415)arg1;
- (void)notifyDidEndChangingTrimmableTimeRange:(CDStruct_e83c9415)arg1;
- (void)notifyDidChangingTrimmableTimeRange:(CDStruct_e83c9415)arg1;
- (void)trimmerSliderView:(id)arg1 willBeginChangingCurrentTime:(CDStruct_1b6d18a9)arg2;
- (void)trimmerSliderView:(id)arg1 didEndChangingCurrentTime:(CDStruct_1b6d18a9)arg2;
- (void)trimmerSliderView:(id)arg1 didChangingCurrentTime:(CDStruct_1b6d18a9)arg2;
- (struct CGRect)clippedFrameForSquaredWidth:(double)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
@property(copy, nonatomic) NSURL *URL;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

