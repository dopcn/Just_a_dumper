//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "YXManager.h"

@class NIMMulticastDelegate, NSMutableDictionary, NSString, YXTeamCircleCommentDraftStore, YXTeamCircleCountModel, YXTeamCircleDatabase, YXTeamCircleFeedDraftStore, YXTeamCircleLikeDraftStore, YXTeamCircleReadedStore;

@interface YXTeamCircleManager : YXManager
{
    _Bool _isAuthFailed;
    YXTeamCircleLikeDraftStore *_likeStore;
    YXTeamCircleCommentDraftStore *_commentStore;
    NSMutableDictionary *_likeTaskIds;
    NSMutableDictionary *_commentTaskIds;
    NSString *_currentTeamID;
    NIMMulticastDelegate *_mulDelegate;
    YXTeamCircleCountModel *_countModel;
    YXTeamCircleFeedDraftStore *_store;
    YXTeamCircleDatabase *_database;
    YXTeamCircleReadedStore *_readedStore;
}

@property(retain, nonatomic) YXTeamCircleReadedStore *readedStore; // @synthesize readedStore=_readedStore;
@property(retain, nonatomic) YXTeamCircleDatabase *database; // @synthesize database=_database;
@property(retain, nonatomic) YXTeamCircleFeedDraftStore *store; // @synthesize store=_store;
@property(retain, nonatomic) YXTeamCircleCountModel *countModel; // @synthesize countModel=_countModel;
@property(retain, nonatomic) NIMMulticastDelegate *mulDelegate; // @synthesize mulDelegate=_mulDelegate;
@property(retain, nonatomic) NSString *currentTeamID; // @synthesize currentTeamID=_currentTeamID;
@property(retain, nonatomic) NSMutableDictionary *commentTaskIds; // @synthesize commentTaskIds=_commentTaskIds;
@property(retain, nonatomic) NSMutableDictionary *likeTaskIds; // @synthesize likeTaskIds=_likeTaskIds;
@property(retain, nonatomic) YXTeamCircleCommentDraftStore *commentStore; // @synthesize commentStore=_commentStore;
@property(retain, nonatomic) YXTeamCircleLikeDraftStore *likeStore; // @synthesize likeStore=_likeStore;
- (void).cxx_destruct;
- (void)updateCountModel:(id)arg1;
- (void)getFeedWithTeamID:(id)arg1 feedID:(id)arg2 attach:(_Bool)arg3 result:(CDUnknownBlockType)arg4;
- (id)fillterReadedFeedIDs;
- (id)allFeedDraft:(id)arg1;
- (void)getFeedListWithTeamID:(id)arg1 maxtime:(long long)arg2 result:(CDUnknownBlockType)arg3;
- (void)getCachedFeedListWithTeamID:(id)arg1 maxtime:(long long)arg2 result:(CDUnknownBlockType)arg3;
- (void)deleteFeed:(id)arg1 result:(CDUnknownBlockType)arg2;
- (void)addTeamCircleFeedDraftPostTask:(id)arg1;
- (void)postFeedWithTeamID:(id)arg1 content:(id)arg2 result:(CDUnknownBlockType)arg3;
- (void)postFeedWithDraft:(id)arg1 result:(CDUnknownBlockType)arg2;
- (id)genDraftWithTeamID:(id)arg1 content:(id)arg2;
- (void)onTeamCircleNewFeedTypeNotify:(id)arg1;
- (void)getTeamCircleCountWithNewFeed:(_Bool)arg1 related:(_Bool)arg2 top:(_Bool)arg3;
- (void)addListenEvents;
- (void)dealloc;
- (id)init;
- (void)cancelTeamCircleCommentTask:(unsigned long long)arg1;
- (void)tc_checkCommentCancelTask:(id)arg1;
- (long long)removeCommentTaskWithComment:(id)arg1 complete:(CDUnknownBlockType)arg2;
- (long long)postCommentTaskWithTeamID:(id)arg1 feedID:(id)arg2 content:(id)arg3 complete:(CDUnknownBlockType)arg4;
- (void)removeComment:(id)arg1 result:(CDUnknownBlockType)arg2;
- (void)postCommentWithTeamID:(id)arg1 feedID:(id)arg2 content:(id)arg3 result:(CDUnknownBlockType)arg4;
- (void)cancelTeamCircleLikeTask:(unsigned long long)arg1;
- (void)tc_checkLikeCancelTask:(id)arg1;
- (CDUnknownBlockType)taskStatusPredicate;
- (CDUnknownBlockType)cancelTaskWithMyLike:(_Bool)arg1 teamID:(id)arg2 feedID:(id)arg3;
- (long long)addCancelLikeTaskWithMyLike:(_Bool)arg1 teamID:(id)arg2 feedID:(id)arg3 complete:(CDUnknownBlockType)arg4;
- (void)myLike:(_Bool)arg1 teamID:(id)arg2 feedID:(id)arg3 result:(CDUnknownBlockType)arg4;
- (void)onTeamCommand:(id)arg1;
- (_Bool)hasAuthFailed;
- (void)clearCurrentTeam;

@end

