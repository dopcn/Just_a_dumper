//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

#import "CEOrientationObserverProtocol-Protocol.h"
#import "CEOvalMaskLayerDelegate-Protocol.h"
#import "CEPanoramicViewControllerDelegate-Protocol.h"
#import "GLKViewDelegate-Protocol.h"

@class CADisplayLink, CAShapeLayer, CEOvalMaskLayer, CEPanoramaContainerView, CMMotionManager, EAGLContext, GLKBaseEffect, GLKView, NSArray, NSDate, NSOperationQueue, NSString, NSTimer, UIColor, UIImage, UIImageView, UILongPressGestureRecognizer, UIPanGestureRecognizer, UITapGestureRecognizer, UIView, UIViewController;
@protocol CEFullScreenViewControllerProtocol, CEPanoramaPlayerDelegate;

@interface CEPanoramaPlayer : NSObject <GLKViewDelegate, CEOrientationObserverProtocol, CEOvalMaskLayerDelegate, CEPanoramicViewControllerDelegate>
{
    _Bool _isDestroyed;
    _Bool _shouldUpdateFrame;
    _Bool _isHintFinished;
    _Bool _isFullScreen;
    _Bool _isTouching;
    unsigned int _vertexBuffer;
    CEPanoramaContainerView *_panoramicView;
    UIImage *_cover;
    id <CEPanoramaPlayerDelegate> _delegate;
    UIViewController<CEFullScreenViewControllerProtocol> *_controller;
    GLKView *_glView;
    GLKBaseEffect *_effect;
    EAGLContext *_context;
    NSArray *_textures;
    NSArray *_indices;
    CMMotionManager *_motionManager;
    NSOperationQueue *_motionHandlerQueue;
    UIView *_panoramaHintLabel;
    CEOvalMaskLayer *_mask;
    CAShapeLayer *_maskBorder;
    NSDate *_startDate;
    NSTimer *_hintTimer;
    NSTimer *_animationTimer;
    CADisplayLink *_autospinTimer;
    UITapGestureRecognizer *_tapGesture;
    UIPanGestureRecognizer *_panGesture;
    UILongPressGestureRecognizer *_pressGesture;
    UITapGestureRecognizer *_actionButtonTapGesture;
    UIImageView *_compassView;
    UITapGestureRecognizer *_compassTapGesture;
    UIColor *_compassBaseColor;
    UIColor *_compassPointColor;
    UIColor *_compassStrokeColor;
    UIColor *_compassHighlightedStrokeColor;
    NSArray *_compassConstraints;
    UIImage *_actionButtonImage;
    UIImageView *_actionButton;
    NSArray *_actionButtonConstraints;
    struct CGPoint _gyroShift;
    struct CGPoint _shift;
    struct CGPoint _panVelocity;
    struct CGSize _actionButtonImageSize;
}

@property(retain, nonatomic) NSArray *actionButtonConstraints; // @synthesize actionButtonConstraints=_actionButtonConstraints;
@property(retain, nonatomic) UIImageView *actionButton; // @synthesize actionButton=_actionButton;
@property(nonatomic) struct CGSize actionButtonImageSize; // @synthesize actionButtonImageSize=_actionButtonImageSize;
@property(retain, nonatomic) UIImage *actionButtonImage; // @synthesize actionButtonImage=_actionButtonImage;
@property(retain, nonatomic) NSArray *compassConstraints; // @synthesize compassConstraints=_compassConstraints;
@property(retain, nonatomic) UIColor *compassHighlightedStrokeColor; // @synthesize compassHighlightedStrokeColor=_compassHighlightedStrokeColor;
@property(retain, nonatomic) UIColor *compassStrokeColor; // @synthesize compassStrokeColor=_compassStrokeColor;
@property(retain, nonatomic) UIColor *compassPointColor; // @synthesize compassPointColor=_compassPointColor;
@property(retain, nonatomic) UIColor *compassBaseColor; // @synthesize compassBaseColor=_compassBaseColor;
@property(retain, nonatomic) UITapGestureRecognizer *compassTapGesture; // @synthesize compassTapGesture=_compassTapGesture;
@property(retain, nonatomic) UIImageView *compassView; // @synthesize compassView=_compassView;
@property(retain, nonatomic) UITapGestureRecognizer *actionButtonTapGesture; // @synthesize actionButtonTapGesture=_actionButtonTapGesture;
@property(retain, nonatomic) UILongPressGestureRecognizer *pressGesture; // @synthesize pressGesture=_pressGesture;
@property(retain, nonatomic) UIPanGestureRecognizer *panGesture; // @synthesize panGesture=_panGesture;
@property(retain, nonatomic) UITapGestureRecognizer *tapGesture; // @synthesize tapGesture=_tapGesture;
@property(nonatomic) struct CGPoint panVelocity; // @synthesize panVelocity=_panVelocity;
@property(retain, nonatomic) CADisplayLink *autospinTimer; // @synthesize autospinTimer=_autospinTimer;
@property(nonatomic) _Bool isTouching; // @synthesize isTouching=_isTouching;
@property(nonatomic) _Bool isFullScreen; // @synthesize isFullScreen=_isFullScreen;
@property(nonatomic) struct CGPoint shift; // @synthesize shift=_shift;
@property(retain, nonatomic) NSTimer *animationTimer; // @synthesize animationTimer=_animationTimer;
@property(retain, nonatomic) NSTimer *hintTimer; // @synthesize hintTimer=_hintTimer;
@property(nonatomic) _Bool isHintFinished; // @synthesize isHintFinished=_isHintFinished;
@property(retain, nonatomic) NSDate *startDate; // @synthesize startDate=_startDate;
@property(retain, nonatomic) CAShapeLayer *maskBorder; // @synthesize maskBorder=_maskBorder;
@property(retain, nonatomic) CEOvalMaskLayer *mask; // @synthesize mask=_mask;
@property(retain, nonatomic) UIView *panoramaHintLabel; // @synthesize panoramaHintLabel=_panoramaHintLabel;
@property(retain, nonatomic) NSOperationQueue *motionHandlerQueue; // @synthesize motionHandlerQueue=_motionHandlerQueue;
@property(nonatomic) struct CGPoint gyroShift; // @synthesize gyroShift=_gyroShift;
@property(retain, nonatomic) CMMotionManager *motionManager; // @synthesize motionManager=_motionManager;
@property(retain, nonatomic) NSArray *indices; // @synthesize indices=_indices;
@property(retain, nonatomic) NSArray *textures; // @synthesize textures=_textures;
@property(nonatomic) unsigned int vertexBuffer; // @synthesize vertexBuffer=_vertexBuffer;
@property(retain, nonatomic) EAGLContext *context; // @synthesize context=_context;
@property(retain, nonatomic) GLKBaseEffect *effect; // @synthesize effect=_effect;
@property(retain, nonatomic) GLKView *glView; // @synthesize glView=_glView;
@property(nonatomic) _Bool shouldUpdateFrame; // @synthesize shouldUpdateFrame=_shouldUpdateFrame;
@property(retain, nonatomic) UIViewController<CEFullScreenViewControllerProtocol> *controller; // @synthesize controller=_controller;
@property(nonatomic) __weak id <CEPanoramaPlayerDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) UIImage *cover; // @synthesize cover=_cover;
@property(nonatomic) _Bool isDestroyed; // @synthesize isDestroyed=_isDestroyed;
@property(retain, nonatomic) CEPanoramaContainerView *panoramicView; // @synthesize panoramicView=_panoramicView;
- (void).cxx_destruct;
- (void)startAnimateShiftWithDuration:(double)arg1 displacementByTime:(CDUnknownBlockType)arg2 onFinished:(CDUnknownBlockType)arg3;
- (double)relativeFrameWidth;
- (double)FOVY;
- (void)setShouldUpdateFrame;
- (void)resetShift;
- (void)adjustShift;
- (void)stop;
- (void)start;
- (void)setActionButtonImage:(id)arg1 size:(struct CGSize)arg2;
- (void)setImage:(id)arg1;
- (void)dealloc;
- (void)destroyWithError:(unsigned int)arg1;
- (_Bool)isSafe;
- (id)initWithFrame:(struct CGRect)arg1 delegate:(id)arg2;
- (void)setupGL;
- (void)glkView:(id)arg1 drawInRect:(struct CGRect)arg2;
- (void)tearDownGL;
- (void)update;
- (void)onTap:(id)arg1;
- (void)onPan:(id)arg1;
- (void)onPress:(id)arg1;
- (_Bool)shouldSpinWithLocation:(struct CGPoint)arg1;
- (void)startSpinWithLocation:(struct CGPoint)arg1;
- (void)cancelSpin;
- (void)spin;
- (void)stopPanGesture;
- (void)startPanGesture;
- (void)setupGestureRecognizer;
- (_Bool)isSpinning;
- (void)stopMotionUpdate;
- (void)startMotionUpdate;
- (void)UILayoutOrientationDidChangedWithObserver:(id)arg1;
- (void)tearDownMotionManager;
- (void)setupMotionManager;
- (void)onAnimationStoppedWithLayer:(id)arg1 isCanceled:(_Bool)arg2;
- (double)relativeTime;
- (void)stopHint;
- (void)startHint;
- (struct CGSize)maskSize;
- (void)setupHintView;
- (void)didClose;
- (void)willClose;
- (void)didShow;
- (void)fadeIn;
- (void)willShow;
- (id)snapshot;
- (void)setupController;
- (void)drawCompass;
- (void)tapCompass:(id)arg1;
- (void)updateCompassConstraint;
- (void)setupCompass;
- (void)updateActionButtonConstraints;
- (void)onActionButtonTap:(id)arg1;
- (void)setupActionButton;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

