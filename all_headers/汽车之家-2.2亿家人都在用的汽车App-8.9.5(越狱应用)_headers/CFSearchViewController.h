//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <AHBusinessFramework/AHRefreshTableViewController.h>

#import "AHLoadingViewDelegate-Protocol.h"
#import "AHStencilViewControllerDelegate-Protocol.h"
#import "AHStencilViewControllerLayoutDataSource-Protocol.h"
#import "UISearchBarDelegate-Protocol.h"

@class AHLoadingView, AHStencilViewController, CFSearchBar, NSString, UIButton, UISearchBar, UIView;
@protocol CFSearchViewControllerDelegate;

@interface CFSearchViewController : AHRefreshTableViewController <AHStencilViewControllerDelegate, AHStencilViewControllerLayoutDataSource, AHLoadingViewDelegate, UISearchBarDelegate>
{
    CFSearchBar *_searchBar;
    id <CFSearchViewControllerDelegate> _delegate;
    _Bool _show;
    AHLoadingView *_loadingView;
    AHStencilViewController *_stencilViewController;
    UIView *_mainView;
    UIButton *_cancleButton;
    struct CGRect _originalSearchBarFrame;
    struct CGRect _newSearchBarFrame;
}

@property(retain, nonatomic) UIButton *cancleButton; // @synthesize cancleButton=_cancleButton;
@property(nonatomic) struct CGRect newSearchBarFrame; // @synthesize newSearchBarFrame=_newSearchBarFrame;
@property(nonatomic) struct CGRect originalSearchBarFrame; // @synthesize originalSearchBarFrame=_originalSearchBarFrame;
@property(retain, nonatomic) UIView *mainView; // @synthesize mainView=_mainView;
@property(retain, nonatomic) AHStencilViewController *stencilViewController; // @synthesize stencilViewController=_stencilViewController;
@property(retain, nonatomic) AHLoadingView *loadingView; // @synthesize loadingView=_loadingView;
- (void).cxx_destruct;
@property(readonly, nonatomic) UISearchBar *searchBar;
- (id)clientViewInViewContoller:(id)arg1 clientViewSize:(struct CGSize)arg2 contentInset:(struct UIEdgeInsets)arg3;
- (int)backButtonTypeInViewController:(id)arg1;
- (_Bool)hasFooterBarInViewController:(id)arg1;
- (_Bool)hasNavigationBarInViewController:(id)arg1;
- (void)backButtonPressInViewController:(id)arg1;
- (void)tableView:(id)arg1 commitEditingStyle:(long long)arg2 forRowAtIndexPath:(id)arg3;
- (id)tableView:(id)arg1 titleForDeleteConfirmationButtonForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 editingStyleForRowAtIndexPath:(id)arg2;
- (_Bool)tableView:(id)arg1 canEditRowAtIndexPath:(id)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (void)tableView:(id)arg1 didDeselectRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 viewForFooterInSection:(long long)arg2;
- (id)tableView:(id)arg1 viewForHeaderInSection:(long long)arg2;
- (double)tableView:(id)arg1 heightForFooterInSection:(long long)arg2;
- (double)tableView:(id)arg1 heightForHeaderInSection:(long long)arg2;
- (double)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;
- (void)searchBar:(id)arg1 selectedScopeButtonIndexDidChange:(long long)arg2;
- (void)searchBarResultsListButtonClicked:(id)arg1;
- (void)searchBarBookmarkButtonClicked:(id)arg1;
- (void)searchBarSearchButtonClicked:(id)arg1;
- (_Bool)searchBar:(id)arg1 shouldChangeTextInRange:(struct _NSRange)arg2 replacementText:(id)arg3;
- (void)searchBar:(id)arg1 textDidChange:(id)arg2;
- (void)searchBarTextDidEndEditing:(id)arg1;
- (_Bool)searchBarShouldEndEditing:(id)arg1;
- (void)searchBarTextDidBeginEditing:(id)arg1;
- (_Bool)searchBarShouldBeginEditing:(id)arg1;
- (void)AHLoadingViewReloadClick:(id)arg1;
- (void)pullUpdateTriggering:(id)arg1 type:(long long)arg2;
- (void)searchBarCancelButtonClicked:(id)arg1;
- (void)hide;
- (void)showInViewController:(id)arg1;
- (void)showTipsView:(id)arg1 showTopGap:(double)arg2;
- (void)initView;
- (void)didReceiveMemoryWarning;
- (void)viewDidLoad;
- (id)initWithDelegate:(id)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

