//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <UIKit/UIView.h>

#import "PopUpInputViewDelegate-Protocol.h"
#import "UIGestureRecognizerDelegate-Protocol.h"
#import "UITableViewDataSource-Protocol.h"
#import "UITableViewDelegate-Protocol.h"
#import "ZSSearchHotViewDelegate-Protocol.h"
#import "ZSSearchScopeMenuDelegate-Protocol.h"

@class BookListSearchItem, MBProgressHUD, NSArray, NSDictionary, NSString, PopUpInputView, UIButton, UILabel, UITableView, UITextField, ZSSearchHotView, ZSSearchResultView, ZSSearchScopeMenu;
@protocol ZSSearchBookViewDelegate;

@interface ZSSearchBookView : UIView <UITableViewDelegate, UITableViewDataSource, ZSSearchHotViewDelegate, ZSSearchScopeMenuDelegate, UIGestureRecognizerDelegate, PopUpInputViewDelegate>
{
    _Bool _isFixedSearchMonthOnly;
    _Bool _isFromAddBookList;
    _Bool _isComplexSearch;
    _Bool _isFromShortage;
    _Bool _isSearchMonthOnly;
    NSArray *_searchHistoryArr;
    id <ZSSearchBookViewDelegate> _delegate;
    ZSSearchResultView *_searchResultView;
    UITableView *_searchHistoryTableView;
    UIView *_searchTableHeaderView;
    ZSSearchHotView *_hotSearchView;
    ZSSearchHotView *_hotRecommendView;
    UIView *_hotSearchHeaderView;
    UIView *_hotRecommendHeaderView;
    UIView *_searchHistoryHeaderView;
    UILabel *_hotSearchHeaderLabel;
    UILabel *_hotRecommendHeaderLabel;
    UILabel *_searchHistoryHeaderLabel;
    UIView *_topSearchView;
    UIButton *_searchTFLeftBtn;
    UIButton *_searchCancelBtn;
    MBProgressHUD *_loadingView;
    PopUpInputView *_addDescriptionView;
    UITextField *_searchTextField;
    UIButton *_searchScopeBtn;
    ZSSearchScopeMenu *_searchScopeMenu;
    NSArray *_hotSearchArr;
    NSArray *_hotRecommendBookNames;
    NSArray *_hotRecommendBookIds;
    NSDictionary *_selectedBookListBooks;
    BookListSearchItem *_editingSearchItem;
    long long _hotRecommendFirstShowingIndex;
}

@property(nonatomic) long long hotRecommendFirstShowingIndex; // @synthesize hotRecommendFirstShowingIndex=_hotRecommendFirstShowingIndex;
@property(retain, nonatomic) BookListSearchItem *editingSearchItem; // @synthesize editingSearchItem=_editingSearchItem;
@property(retain, nonatomic) NSDictionary *selectedBookListBooks; // @synthesize selectedBookListBooks=_selectedBookListBooks;
@property(retain, nonatomic) NSArray *hotRecommendBookIds; // @synthesize hotRecommendBookIds=_hotRecommendBookIds;
@property(retain, nonatomic) NSArray *hotRecommendBookNames; // @synthesize hotRecommendBookNames=_hotRecommendBookNames;
@property(retain, nonatomic) NSArray *hotSearchArr; // @synthesize hotSearchArr=_hotSearchArr;
@property(retain, nonatomic) ZSSearchScopeMenu *searchScopeMenu; // @synthesize searchScopeMenu=_searchScopeMenu;
@property(retain, nonatomic) UIButton *searchScopeBtn; // @synthesize searchScopeBtn=_searchScopeBtn;
@property(retain, nonatomic) UITextField *searchTextField; // @synthesize searchTextField=_searchTextField;
@property(retain, nonatomic) PopUpInputView *addDescriptionView; // @synthesize addDescriptionView=_addDescriptionView;
@property(retain, nonatomic) MBProgressHUD *loadingView; // @synthesize loadingView=_loadingView;
@property(retain, nonatomic) UIButton *searchCancelBtn; // @synthesize searchCancelBtn=_searchCancelBtn;
@property(retain, nonatomic) UIButton *searchTFLeftBtn; // @synthesize searchTFLeftBtn=_searchTFLeftBtn;
@property(retain, nonatomic) UIView *topSearchView; // @synthesize topSearchView=_topSearchView;
@property(retain, nonatomic) UILabel *searchHistoryHeaderLabel; // @synthesize searchHistoryHeaderLabel=_searchHistoryHeaderLabel;
@property(retain, nonatomic) UILabel *hotRecommendHeaderLabel; // @synthesize hotRecommendHeaderLabel=_hotRecommendHeaderLabel;
@property(retain, nonatomic) UILabel *hotSearchHeaderLabel; // @synthesize hotSearchHeaderLabel=_hotSearchHeaderLabel;
@property(retain, nonatomic) UIView *searchHistoryHeaderView; // @synthesize searchHistoryHeaderView=_searchHistoryHeaderView;
@property(retain, nonatomic) UIView *hotRecommendHeaderView; // @synthesize hotRecommendHeaderView=_hotRecommendHeaderView;
@property(retain, nonatomic) UIView *hotSearchHeaderView; // @synthesize hotSearchHeaderView=_hotSearchHeaderView;
@property(retain, nonatomic) ZSSearchHotView *hotRecommendView; // @synthesize hotRecommendView=_hotRecommendView;
@property(retain, nonatomic) ZSSearchHotView *hotSearchView; // @synthesize hotSearchView=_hotSearchView;
@property(retain, nonatomic) UIView *searchTableHeaderView; // @synthesize searchTableHeaderView=_searchTableHeaderView;
@property(retain, nonatomic) UITableView *searchHistoryTableView; // @synthesize searchHistoryTableView=_searchHistoryTableView;
@property(retain, nonatomic) ZSSearchResultView *searchResultView; // @synthesize searchResultView=_searchResultView;
@property(nonatomic) __weak id <ZSSearchBookViewDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) _Bool isSearchMonthOnly; // @synthesize isSearchMonthOnly=_isSearchMonthOnly;
@property(retain, nonatomic) NSArray *searchHistoryArr; // @synthesize searchHistoryArr=_searchHistoryArr;
@property(nonatomic) _Bool isFromShortage; // @synthesize isFromShortage=_isFromShortage;
@property(nonatomic) _Bool isComplexSearch; // @synthesize isComplexSearch=_isComplexSearch;
@property(nonatomic) _Bool isFromAddBookList; // @synthesize isFromAddBookList=_isFromAddBookList;
@property(nonatomic) _Bool isFixedSearchMonthOnly; // @synthesize isFixedSearchMonthOnly=_isFixedSearchMonthOnly;
- (void).cxx_destruct;
- (_Bool)isForAddBook;
- (_Bool)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;
- (void)handleTapOnSelfView;
- (void)addGesture;
- (void)updateView;
- (void)requestHotRecommendDataWithCompletionBlock:(CDUnknownBlockType)arg1;
- (void)requestHotSearchDataWithCompletionBlock:(CDUnknownBlockType)arg1;
- (void)preViewControllerWillShow;
- (void)addBlankFooterForTableView:(id)arg1;
- (void)searchHotView:(id)arg1 didClickAtIndex:(long long)arg2;
- (void)scrollViewWillBeginDragging:(id)arg1;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (void)hideLoading;
- (void)showLoading;
- (void)addSearchHeaderViewOnSearchHeaderViewWithType:(unsigned long long)arg1 withFrame:(struct CGRect)arg2;
- (void)updateTableHeaderView;
- (void)registerNotification;
- (void)searchBookViewWillDisappear;
- (void)confirmInputViewBtnClicked:(id)arg1;
- (void)hideInputViewBtnClicked:(id)arg1;
- (void)hideInputViewFinished;
- (void)showEditUserBookDescForBook:(id)arg1 withSelectedBookItems:(id)arg2;
- (_Bool)isShowingSearchResult;
- (void)appendSearchResultData:(id)arg1 isSucceed:(_Bool)arg2;
- (void)updateSearchResultWithBooksInBookList:(id)arg1;
- (void)showErrorView;
- (void)showSearchResultViewWithData:(id)arg1 withAssociateItems:(id)arg2 withBooksInBookList:(id)arg3 searchSource:(unsigned long long)arg4;
- (void)showAssociateViewWithData:(id)arg1;
- (void)beforeSearchKey:(id)arg1;
- (void)handleSearchTrashBtn;
- (void)trashSearchHistories;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (void)createHistoryTableView;
- (void)initSearchHistory;
- (long long)startIndexInSearchHotView:(id)arg1;
- (id)titleForIndex:(long long)arg1 inSearchHotView:(id)arg2;
- (long long)cellMaxCountsInSearchHotView:(id)arg1;
- (void)updateRecommendFirstShowingIndexTo:(long long)arg1;
- (void)handleSearchRefreshBtn;
- (void)updateRecommendDataFromOrigin:(id)arg1;
- (void)initHotRecommend;
- (void)handleSearchArrowBtn;
- (void)initHotSearch;
- (void)searchViewResignFirstResponder;
- (void)searchViewBecomeFirstResponder;
- (id)searchingKey;
- (_Bool)isSearchScopeOnlyMonth;
- (void)clearSearchResultViewData;
- (void)handleKeyboardNotification:(id)arg1;
- (void)initSearchBar;
- (void)setup;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

