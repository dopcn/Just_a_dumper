//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "BasePainter.h"

@class MTGLFramebuffer, MTGLProgram, MTGLShaderPropertyAttribteObject, MTGLShaderPropertyUniformObject, MTGLTexture, NSMutableArray;

@interface ColorHeartPainter : BasePainter
{
    int _nscount;
    union _GLKVector2 *_vertexBuffer;
    union _GLKVector2 *_texCoordBuffer;
    MTGLTexture *_imageTexture;
    NSMutableArray *_points;
    unsigned long long _lastnscount;
    MTGLFramebuffer *_heartFBO;
    MTGLProgram *_heartProgram;
    unsigned short *_indexBuffer;
    union _GLKVector4 *_colorBuffer;
    MTGLShaderPropertyAttribteObject *_vertex;
    MTGLShaderPropertyAttribteObject *_texCoord;
    MTGLShaderPropertyAttribteObject *_color;
    MTGLShaderPropertyUniformObject *_texture;
    struct CGPoint _first;
    struct CGPoint _last;
}

@property(retain, nonatomic) MTGLShaderPropertyUniformObject *texture; // @synthesize texture=_texture;
@property(retain, nonatomic) MTGLShaderPropertyAttribteObject *color; // @synthesize color=_color;
@property(retain, nonatomic) MTGLShaderPropertyAttribteObject *texCoord; // @synthesize texCoord=_texCoord;
@property(retain, nonatomic) MTGLShaderPropertyAttribteObject *vertex; // @synthesize vertex=_vertex;
@property(nonatomic) union _GLKVector4 *colorBuffer; // @synthesize colorBuffer=_colorBuffer;
@property(nonatomic) unsigned short *indexBuffer; // @synthesize indexBuffer=_indexBuffer;
@property(retain, nonatomic) MTGLProgram *heartProgram; // @synthesize heartProgram=_heartProgram;
@property(retain, nonatomic) MTGLFramebuffer *heartFBO; // @synthesize heartFBO=_heartFBO;
@property(nonatomic) unsigned long long lastnscount; // @synthesize lastnscount=_lastnscount;
@property(nonatomic) struct CGPoint last; // @synthesize last=_last;
@property(nonatomic) struct CGPoint first; // @synthesize first=_first;
@property(retain, nonatomic) NSMutableArray *points; // @synthesize points=_points;
- (void).cxx_destruct;
- (void)calculateQuadCurveFrom:(union _GLKVector2)arg1 to:(union _GLKVector2)arg2;
- (void)addPoint:(struct CGPoint)arg1 spacing:(double)arg2;
- (void)paintEnd:(struct CGPoint)arg1;
- (void)render;
- (void)paint;
- (void)paintTo:(struct CGPoint)arg1;
- (void)paintBegin:(struct CGPoint)arg1;
- (void)loadConfig:(id)arg1;
- (void)initProperty;
- (id)init;
- (void)dealloc;

@end

