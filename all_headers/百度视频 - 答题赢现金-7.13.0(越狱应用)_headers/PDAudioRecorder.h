//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

#import "AVAudioRecorderDelegate-Protocol.h"

@class AVAudioRecorder, NSDictionary, NSString, NSTimer, NSURL;
@protocol PDAudioRecorderDelegate;

@interface PDAudioRecorder : NSObject <AVAudioRecorderDelegate>
{
    _Bool _isRecording;
    _Bool _originIdleSetting;
    _Bool _isInterruption;
    long long _status;
    AVAudioRecorder *_audioRecorder;
    id <PDAudioRecorderDelegate> _delegate;
    NSURL *_recordFileUrl;
    NSURL *_amrFileUrl;
    NSString *_fileName;
    NSString *_nameSpace;
    double _recordTime;
    double _shortestRecordTime;
    NSTimer *_voiceDetectionTimer;
    NSDictionary *_settings;
}

+ (id)sharedInstance;
@property(nonatomic) _Bool isInterruption; // @synthesize isInterruption=_isInterruption;
@property(retain, nonatomic) NSDictionary *settings; // @synthesize settings=_settings;
@property(nonatomic) _Bool originIdleSetting; // @synthesize originIdleSetting=_originIdleSetting;
@property(retain, nonatomic) NSTimer *voiceDetectionTimer; // @synthesize voiceDetectionTimer=_voiceDetectionTimer;
@property(nonatomic) double shortestRecordTime; // @synthesize shortestRecordTime=_shortestRecordTime;
@property(nonatomic) double recordTime; // @synthesize recordTime=_recordTime;
@property(retain, nonatomic) NSString *nameSpace; // @synthesize nameSpace=_nameSpace;
@property(retain, nonatomic) NSString *fileName; // @synthesize fileName=_fileName;
@property(copy, nonatomic) NSURL *amrFileUrl; // @synthesize amrFileUrl=_amrFileUrl;
@property(copy, nonatomic) NSURL *recordFileUrl; // @synthesize recordFileUrl=_recordFileUrl;
@property(nonatomic) id <PDAudioRecorderDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) AVAudioRecorder *audioRecorder; // @synthesize audioRecorder=_audioRecorder;
@property(nonatomic) _Bool isRecording; // @synthesize isRecording=_isRecording;
@property(nonatomic) long long status; // @synthesize status=_status;
- (void).cxx_destruct;
- (void)onAppWillEnterBackground;
- (void)addObservers;
- (void)audioRecorderBeginInterruption:(id)arg1;
- (void)audioRecorderEncodeErrorDidOccur:(id)arg1 error:(id)arg2;
- (void)audioRecorderDidFinishRecording:(id)arg1 successfully:(_Bool)arg2;
- (void)onRecordError;
- (void)resumeIdleTimerSetting;
- (void)setIdleTimerDisabled;
- (void)beginRecording;
- (void)detectVoicePeakPower;
- (void)onConvert2AmrFinished;
- (void)convertAudio2AmrFile:(id)arg1;
- (void)killVoicePeakDetectionTimer;
- (void)setupVoicePeakDetectionTimer;
- (id)audioRecorderSettings;
- (void)setupAudioRecorderWithFileUrl:(id)arg1;
- (void)activeAVAudioSession:(_Bool)arg1;
- (void)stopRecording;
- (void)showMicroPhoneSettingGuide;
- (void)innerRecordWithFileName:(id)arg1 andNameSpace:(id)arg2 andShortestTime:(double)arg3;
- (void)beginRecordWithFileName:(id)arg1 andNameSpace:(id)arg2 andShortestTime:(double)arg3 andDelegate:(id)arg4;
- (void)beginRecordWithFileName:(id)arg1 andNameSpace:(id)arg2 andDelegate:(id)arg3;
- (void)dealloc;
- (id)init;
- (void)recreateAmrfile:(id)arg1 WithOriginAudioUrl:(id)arg2;
- (_Bool)checkIfAudioFileExistsWithName:(id)arg1 andNameSpace:(id)arg2;
- (_Bool)checkIfAMRFileExistsWithName:(id)arg1 andNameSpace:(id)arg2;
- (void)createRecordCacheRootDirectory;
- (void)createVoiceCacheDirectoryByNameSpace:(id)arg1;
- (void)removeRecordFileByNameSpace:(id)arg1;
- (void)removeFileAtUrl:(id)arg1;
- (void)removeAmrFileByName:(id)arg1 andNameSpace:(id)arg2;
- (void)removeVoiceFileByName:(id)arg1 andNameSpace:(id)arg2;
- (void)removeRecordFilesByName:(id)arg1 andNameSpace:(id)arg2;
- (id)amrFileUrlByName:(id)arg1 andNameSpace:(id)arg2;
- (id)voiceFileUrlByName:(id)arg1 andNameSpace:(id)arg2;
- (id)voiceCacheDirectoryOfNameSpace:(id)arg1;
- (id)voiceCacheRootDirectory;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

