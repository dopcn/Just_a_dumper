//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

#import "SHVideoPlayerDelegate-Protocol.h"
#import "SOHUAdvertManagerDelegate-Protocol.h"
#import "SOHUVolumeManagerChangedObserver-Protocol.h"
#import "ScreenUploadViewActionDelegate-Protocol.h"
#import "UploadScreenCAPManagerDelegate-Protocol.h"

@class NSHashTable, NSString, NSTimer, SHPlayerVideoItem, SHVideoPlayer, SHVideoPlayerView, SOHUAdvertManager, SOHUBarrageManager, SOHUCaptionManager, SOHUCastTVManager, SOHUControlViewManager, SOHUVideoGesture, SOHUVideoPlayNextCenter, SOHUVideoQualityMonitor, UIImageView, UIView, UIViewController;
@protocol PlayerPlayDelegate, SOHUPlayerProtocol, VideoDataManager;

@interface SOHUVideoPlayerController : NSObject <UploadScreenCAPManagerDelegate, ScreenUploadViewActionDelegate, SOHUAdvertManagerDelegate, SHVideoPlayerDelegate, SOHUVolumeManagerChangedObserver>
{
    _Bool _isFirstCallPlay;
    id <PlayerPlayDelegate> _videoPlayerDelegate;
    UIViewController *_currentViewController;
    SHVideoPlayerView *_videoPlayerView;
    UIView *_containerView;
    UIImageView *_backgroundView;
    id <VideoDataManager> _videoDataManager;
    long long _viewMode;
    long long _currentPlaybackState;
    SOHUAdvertManager *_advertManager;
    SOHUBarrageManager *_barrageManager;
    SOHUCaptionManager *_captionManager;
    SOHUCastTVManager *_castTVManager;
    SOHUControlViewManager *_controlViewManager;
    UIView *_view;
    long long _speedRatio;
    CDUnknownBlockType _destroyCompletion;
    NSTimer *_tickTimer;
    NSTimer *_oneSecondTickTimer;
    long long _pauseCount;
    long long _savePlaybackTimeCount;
    SOHUVideoGesture *_playerGesture;
    SOHUVideoPlayNextCenter *_playNextCenter;
    SOHUVideoQualityMonitor *_videoQualityMonitor;
    NSHashTable *_viewModeChangeObservers;
    NSHashTable *_timerTickObservers;
    NSHashTable *_delegateSet;
    id <SOHUPlayerProtocol> _videoPlayer;
    SHVideoPlayer *_videoPlayerCore;
    long long _playerProtocolType;
    id _theCaller;
    struct CGRect _videoFrame;
}

+ (id)defaultPlayerViewController;
@property(nonatomic) _Bool isFirstCallPlay; // @synthesize isFirstCallPlay=_isFirstCallPlay;
@property(nonatomic) struct CGRect videoFrame; // @synthesize videoFrame=_videoFrame;
@property(nonatomic) __weak id theCaller; // @synthesize theCaller=_theCaller;
@property(nonatomic) long long playerProtocolType; // @synthesize playerProtocolType=_playerProtocolType;
@property(retain, nonatomic) SHVideoPlayer *videoPlayerCore; // @synthesize videoPlayerCore=_videoPlayerCore;
@property(retain, nonatomic) id <SOHUPlayerProtocol> videoPlayer; // @synthesize videoPlayer=_videoPlayer;
@property(retain, nonatomic) NSHashTable *delegateSet; // @synthesize delegateSet=_delegateSet;
@property(retain, nonatomic) NSHashTable *timerTickObservers; // @synthesize timerTickObservers=_timerTickObservers;
@property(retain, nonatomic) NSHashTable *viewModeChangeObservers; // @synthesize viewModeChangeObservers=_viewModeChangeObservers;
@property(retain, nonatomic) SOHUVideoQualityMonitor *videoQualityMonitor; // @synthesize videoQualityMonitor=_videoQualityMonitor;
@property(retain, nonatomic) SOHUVideoPlayNextCenter *playNextCenter; // @synthesize playNextCenter=_playNextCenter;
@property(retain, nonatomic) SOHUVideoGesture *playerGesture; // @synthesize playerGesture=_playerGesture;
@property(nonatomic) long long savePlaybackTimeCount; // @synthesize savePlaybackTimeCount=_savePlaybackTimeCount;
@property(nonatomic) long long pauseCount; // @synthesize pauseCount=_pauseCount;
@property(retain, nonatomic) NSTimer *oneSecondTickTimer; // @synthesize oneSecondTickTimer=_oneSecondTickTimer;
@property(retain, nonatomic) NSTimer *tickTimer; // @synthesize tickTimer=_tickTimer;
@property(copy, nonatomic) CDUnknownBlockType destroyCompletion; // @synthesize destroyCompletion=_destroyCompletion;
@property(nonatomic) long long speedRatio; // @synthesize speedRatio=_speedRatio;
@property(retain, nonatomic) UIView *view; // @synthesize view=_view;
@property(retain, nonatomic) SOHUControlViewManager *controlViewManager; // @synthesize controlViewManager=_controlViewManager;
@property(retain, nonatomic) SOHUCastTVManager *castTVManager; // @synthesize castTVManager=_castTVManager;
@property(retain, nonatomic) SOHUCaptionManager *captionManager; // @synthesize captionManager=_captionManager;
@property(retain, nonatomic) SOHUBarrageManager *barrageManager; // @synthesize barrageManager=_barrageManager;
@property(retain, nonatomic) SOHUAdvertManager *advertManager; // @synthesize advertManager=_advertManager;
@property(nonatomic) long long currentPlaybackState; // @synthesize currentPlaybackState=_currentPlaybackState;
@property(nonatomic) long long viewMode; // @synthesize viewMode=_viewMode;
@property(retain, nonatomic) id <VideoDataManager> videoDataManager; // @synthesize videoDataManager=_videoDataManager;
@property(retain, nonatomic) UIImageView *backgroundView; // @synthesize backgroundView=_backgroundView;
@property(retain, nonatomic) UIView *containerView; // @synthesize containerView=_containerView;
@property(retain, nonatomic) SHVideoPlayerView *videoPlayerView; // @synthesize videoPlayerView=_videoPlayerView;
@property(nonatomic) __weak UIViewController *currentViewController; // @synthesize currentViewController=_currentViewController;
@property(nonatomic) __weak id <PlayerPlayDelegate> videoPlayerDelegate; // @synthesize videoPlayerDelegate=_videoPlayerDelegate;
- (void).cxx_destruct;
@property(readonly, nonatomic) _Bool isLocked;
@property(readonly, nonatomic) _Bool isBuffering;
@property(readonly, nonatomic) struct CGSize videoNaturalSize;
@property(readonly, nonatomic) long long videoBufferingProgress;
@property(readonly, nonatomic) long long videoDownloadSpeed;
@property(readonly, nonatomic) double downloadedTime;
@property(readonly, nonatomic) double currentPlaybackTime;
@property(readonly, nonatomic) double duration;
@property(readonly, nonatomic) _Bool isPlayerReadyToPlay;
- (long long)playerType;
@property(readonly, nonatomic) SHPlayerVideoItem *currentPlayerItem;
@property(nonatomic) long long playerScalingMode;
@property(nonatomic) _Bool mute;
@property(nonatomic) double volume;
- (void)setPlayerLogEnable:(_Bool)arg1;
- (void)resetSpeedRatio;
- (void)changeToNextSpeedRatio;
- (void)notifyVideoPlayerControlViewChange:(SEL)arg1 info:(id)arg2;
- (void)removePlayerControlViewChangeObserver:(id)arg1;
- (void)addPlayerControlViewChangeObserver:(id)arg1;
- (void)removeTimerTickObserver:(id)arg1 selector:(SEL)arg2;
- (void)addTimerTickObserver:(id)arg1 selector:(SEL)arg2;
- (void)updateVideoFrame:(struct CGRect)arg1;
- (void)updatePlayerViewSize:(struct CGSize)arg1;
- (void)updatePlayerViewFrame:(struct CGRect)arg1;
- (void)clearCachedFiles;
- (void)destroyVideoPlayerCompletion:(CDUnknownBlockType)arg1 theCaller:(id)arg2;
- (void)playWithVideoData:(id)arg1;
- (void)showInContainerView:(id)arg1 viewMode:(long long)arg2 theCaller:(id)arg3;
- (id)init;
- (void)setScreenCaptureAlert:(id)arg1;
- (id)screenCaptureAlert;
@property(nonatomic) _Bool isVideoRecording;
- (void)setScreenUploadView:(id)arg1;
- (id)screenUploadView;
- (void)setScreenCaptureVideoFilePath:(id)arg1;
- (id)screenCaptureVideoFilePath;
- (void)setScreenCaptureVideoName:(id)arg1;
- (id)screenCaptureVideoName;
- (void)setScreenCaptureUploadManager:(id)arg1;
- (id)screenCaptureUploadManager;
- (void)setScreenCaptureCurrentState:(long long)arg1;
- (long long)screenCaptureCurrentState;
@property(nonatomic) long long playRateTypeBeforeScreenCapture;
- (void)setScreenCaptureView:(id)arg1;
- (id)screenCaptureView;
- (id)screenCaptureSaveDirectoryPath;
- (_Bool)screenUploadViewIsOnlySave;
- (void)loginViewControllerDismissNotification:(id)arg1;
- (void)uploadScreenCapProgress:(double)arg1;
- (void)uploadScreenCAPCompleteWithError:(id)arg1;
- (void)player:(id)arg1 recordMediaFinishIsError:(_Bool)arg2;
- (void)screenUploadViewWaitingCompleteFired;
- (void)deleteRecordVideo;
- (void)exitScreenCapture;
- (void)screenUploadViewBackButtonAction;
- (void)screenCaptureViewStopClick:(id)arg1;
- (void)screenCaptureViewCancelClick:(id)arg1;
- (void)uploadScreenCap;
- (void)switchToUploadView;
- (int)recordStatus;
- (void)screenCaptureDidFinish;
- (void)screenCaptureDidDoneWithFinish:(_Bool)arg1;
- (void)videoRecordingEnterForeground;
- (void)videoRecordingEnterBackground;
- (void)playVideoRecording;
- (void)pauseVideoRecording;
- (void)removeVideoRecording;
- (void)startVideoRecording;
- (void)videoAdvertDidFailedWithAdvertType:(long long)arg1;
- (void)videoAdvertDidFinishWithAdvertType:(long long)arg1;
- (void)videoAdvertDidPlayWithAdvertType:(long long)arg1;
- (void)setVideoAuth:(id)arg1;
- (id)videoAuth;
- (void)processVideoAuthResult:(id)arg1;
- (void)releaseVideoAuthObject;
- (void)checkVideoAuth;
- (_Bool)shouldProcessVideoWhenResignActive;
- (void)playVideoFromBackground;
- (void)playerDidEnterBackground;
- (void)playerWillEnterBackground;
- (void)playerDidEnterForeground;
- (long long)getCorePlayerPlaybackState;
- (void)playerDidReceiveURLForDLNA:(id)arg1;
- (void)playerSwitchToCurrentType:(long long)arg1 andPlay:(_Bool)arg2;
- (void)player:(id)arg1 decoderTypeChanged:(long long)arg2;
- (void)updateVideoPlayerViewFrame;
- (void)playerDidLoadVideoFromRouterCache:(id)arg1 withDefinition:(long long)arg2;
- (void)playerHDMIPlayVideoActiveDidChange:(id)arg1;
- (void)playerAirplayStateChanged;
- (void)playerAirPlayVideoActiveDidChange:(id)arg1;
- (void)playerReportCaton:(id)arg1 analysisInfo:(id)arg2;
- (void)playerResponseVideoService:(id)arg1 fileRequestInfo:(id)arg2;
- (void)playerPlaybackDidFailed:(id)arg1 error:(id)arg2;
- (_Bool)playerShouldRetryPlayVideo:(id)arg1 video:(id)arg2;
- (void)playerPlaybackError:(id)arg1 userInfo:(id)arg2;
- (void)playerPlaybackDidFinished:(id)arg1 reason:(long long)arg2 playbackTime:(double)arg3;
- (void)playerPlaybackStateDidChanged:(id)arg1;
- (void)playerLoadStateDidChanged:(id)arg1;
- (void)playerIsPreparedToPlay:(id)arg1;
- (_Bool)playerDurationAvailable:(id)arg1;
- (void)playerFirstFrameOnShow;
- (void)playerPlaybackStateDidChanged;
- (_Bool)isPlayerAllowPlayOnWWAN;
- (void)exitFullScreenPlayerCompletion:(CDUnknownBlockType)arg1;
- (void)closeUploadPlayerCatonLogs;
- (void)startUploadPlayerCatonLogs;
- (void)checkVRTypeAndResetVRMode;
- (void)switchToViewMode:(long long)arg1 animated:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;
- (void)playerSwitchToCurrentProcedure:(long long)arg1;
- (void)videoPlayerReadyToPlay;
- (_Bool)videoPlayerDurationAvailable;
- (void)videoPlayerDidDestroy;
- (void)videoPlayerDidPlayEndReason:(long long)arg1 error:(id)arg2;
- (void)videoPlayerDidLoad;
- (_Bool)videoPlayerShouldPlayImmediately;
- (void)unregisterNotifications;
- (void)registgerNotifications;
- (void)playerDataDidPrepared;
- (void)playerViewDidShow;
- (void)volumeAudioRecover;
- (void)volumeAudioInterrupt;
- (void)unregisterAudioObserver;
- (void)registerAudioObserver;
- (void)callDelegateWithSelector:(SEL)arg1;
- (void)videoPlayerDidSeekTo:(double)arg1;
- (void)videoPlayerWillSeekTo:(double)arg1;
- (void)videoPlayerDidResumeWithNewDefinition:(_Bool)arg1;
- (void)videoPlayerWillResumeWithNewDefinition:(_Bool)arg1;
- (void)videoPlayerDidSetVolumeTo:(double)arg1;
- (void)videoPlayerWillSetVolumeTo:(double)arg1;
- (void)videoPlayerDidStopVideo;
- (void)videoPlayerWillStopVideo;
- (void)videoPlayerDidPauseVideo;
- (void)videoPlayerWillPauseVideo;
- (void)videoPlayerDidPlayVideo;
- (void)videoPlayerWillPlayVideo;
- (void)removePlayControlDelegate:(id)arg1;
- (void)addPlayControlDelegate:(id)arg1;
@property(nonatomic) _Bool isNetworkChanged;
- (void)setShouldProcessBlock:(CDUnknownBlockType)arg1;
- (CDUnknownBlockType)shouldProcessBlock;
- (void)setNetworkAlert:(id)arg1;
- (id)networkAlert;
- (void)setCurrentNetworkStatus:(long long)arg1;
- (long long)currentNetworkStatus;
- (void)dismissWWANAlertView;
- (_Bool)isAppSupportWWANPlay;
- (void)showWWANAlertWithMessage:(id)arg1;
- (void)playVideoWithWWANForNoFreeFlow;
- (void)palyVideoWithWWANForFreeFlow;
- (void)handleCheckFreeFlowTypeResult:(long long)arg1;
- (void)playVideoWithWWAN;
- (void)checkWWANStatusNoFreeFlow;
- (void)checkWWANStatusFreeFlowType:(long long)arg1;
- (void)playVideoUseWifi;
- (void)videoPlayerReachabilityChanged:(id)arg1;
- (void)checkNetworkStatusShouldProcessPlayResultBlock:(CDUnknownBlockType)arg1;
- (void)unregisterNetworkChangeNotificationForDestroy:(_Bool)arg1;
- (void)registerNetworkChangeNotificationForInit:(_Bool)arg1;
- (void)changeToSpeedRatio:(long long)arg1;
- (_Bool)playerIsBeingShowVideo;
- (void)startPlayVideo;
- (void)checkPlaybackState;
- (void)oneSecondTick;
- (void)tick;
- (void)unregisterTickTimer;
- (void)registerTickTimer;
- (void)logCenterDidLoggingPlayerPlayEnd;
- (void)logCenterDidLoggingPlayerCallControlPanel;
- (void)logCenterDidLoggingPlayerVolumeDecreaseViaGesture;
- (void)logCenterDidLoggingPlayerVolumeIncreaseViaGesture;
- (void)logCenterDidLoggingPlayerBrightnessDecreaseViaGesture;
- (void)logCenterDidLoggingPlayerBrightnessIncreaseViaGesture;
- (void)logCenterDidLoggingMiddleClickContainButtonBackInline;
- (void)logCenterDidLoggingPlaySelectedDefinition:(id)arg1;
- (void)logCenterDidLoggingPlayerClickChangeVideoQualityButton;
- (void)logCenterDidLoggingPlayerClickMoreView;
- (void)logCenterDidloggingLiveClickPauseButton;
- (void)logCenterDidLoggingLiveClickPlayButton;
- (void)logCenterDidLoggingPlayerClickPauseButton;
- (void)logCenterDidLoggingPlayerClickPlayButton;
- (void)logCenterDidLoggingPlayerUnlockGravitational;
- (void)logCenterDidLoggingPlayerLockGravitational;
- (void)logTrackVideoPlaybackDidFinishWithReason:(long long)arg1 playTime:(double)arg2;
- (void)logTrackVideoSpeedRatioChangePreRatio:(long long)arg1;
- (void)logTrackVideoPlayerWillEnterBackground;
- (void)logTrackVideoPlayerDidEnterForeground;
- (void)logTrackVideoPlayerWillEnterForeground;
- (void)logTrackVideoPlayEnd;
- (void)logTrackVideoPlayFailedWithError:(id)arg1;
- (void)logTrackVideoDataReady;
- (void)playerPauseVideo;
- (void)playerPlayVideo;
- (void)resumeVideo;
- (void)stopVideo;
- (void)pauseVideo;
- (void)playVideo;
- (void)seekTo:(double)arg1;
- (void)resumeWithNewDefinition:(_Bool)arg1;
- (void)pause;
- (void)play;
- (void)switchToNewDefinitionAtIndex:(int)arg1 completeBlock:(CDUnknownBlockType)arg2;
- (int)currentDefinitionIndex;
- (id)definitionListNames;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

