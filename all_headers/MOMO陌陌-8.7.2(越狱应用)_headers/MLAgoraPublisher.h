//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "MLPublisher.h"

#import "AgoraRtcEngineDelegate-Protocol.h"
#import "MLPublisherRenderViewsLayoutDelegate-Protocol.h"
#import "MLPublisherStatisticAuxiliaryDataProvider-Protocol.h"

@class AgoraRtcCryptoLoader, AgoraRtcEngineKit, AgoraRtcLocalVideoStats, AgoraRtcStats, AgoraVideoSource, AgoraYuvEnhancerObjc, IJKAudioConvert, MLAgoraDelegateProxy, NSArray, NSDictionary, NSMutableArray, NSMutableDictionary, NSObject, NSString, NSTimer;
@protocol OS_dispatch_queue;

@interface MLAgoraPublisher : MLPublisher <MLPublisherStatisticAuxiliaryDataProvider, MLPublisherRenderViewsLayoutDelegate, AgoraRtcEngineDelegate>
{
    _Bool _isHost;
    NSString *_conferenceSessionId;
    unsigned long long _conferenceUserId;
    struct MLAgoraAudioFrameObserver *agoraAudioFrameObserver;
    struct MLAgoraVideoFrameObserver *agoraVideoFrameObserver;
    struct AutoPtr<agora::media::IMediaEngine> mediaEngine;
    _Bool _enableAudioMuted;
    _Bool _enableReportAudioVolume;
    _Bool _isLoopbackAudio;
    _Bool _enableAgoraReconnect;
    _Bool _isAgoraAudience;
    _Bool _isBroadcaster;
    _Bool _isAudioCommMode;
    _Bool _isEncryption;
    _Bool _delayDisconnectPeriod;
    _Bool _isMuteLocalAudio;
    _Bool _isUseHighQualityAudio;
    _Bool _isMuteAllRemoteAudio;
    float _musicVolume;
    float _micVolume;
    NSMutableDictionary *_yuv420ToCVPixelBufferDict;
    unsigned long long _totalBytesProduct;
    unsigned long long _totalBytesSendInOneConnection;
    unsigned long long _totalBytesRecvInOneConnection;
    NSString *_hostSdkID;
    NSString *_sdkAppID;
    NSString *_channelKey;
    NSString *_acceptRemoteConferenceId;
    NSArray *_remoteConferenceIDs;
    NSString *_localConferenceIdStr;
    NSMutableDictionary *_lianmaiStatsDict;
    NSMutableArray *_playbackAudioBufferArray;
    NSObject<OS_dispatch_queue> *_mixAudioQueue;
    IJKAudioConvert *_playbackAudioConvert;
    NSMutableDictionary *_slaveAudioVolumeDict;
    long long _clientRole;
    long long _videoProfile;
    AgoraRtcEngineKit *_rtcEngine;
    AgoraYuvEnhancerObjc *_agoraEnhancer;
    AgoraVideoSource *_mVideoSrc;
    NSString *_encryptionMode;
    NSString *_encryptionSecret;
    AgoraRtcCryptoLoader *_rtcCryptoLoader;
    MLAgoraDelegateProxy *_delegateProxy;
    AgoraRtcStats *_rtcStats;
    AgoraRtcLocalVideoStats *_localVideoStats;
    long long _renderFreezeCount;
    unsigned long long _localStatusCallbackCount;
    NSTimer *_disconnectTimer;
    NSString *_agroaSeiKey;
    NSTimer *_updateSeiTimer;
    NSDictionary *_lastSeiDict;
    long long _statisticPackageCollectionInterval;
    struct CGSize _encodeSize;
}

@property(nonatomic) _Bool isMuteAllRemoteAudio; // @synthesize isMuteAllRemoteAudio=_isMuteAllRemoteAudio;
@property(nonatomic) _Bool isUseHighQualityAudio; // @synthesize isUseHighQualityAudio=_isUseHighQualityAudio;
@property(nonatomic) _Bool isMuteLocalAudio; // @synthesize isMuteLocalAudio=_isMuteLocalAudio;
@property(nonatomic) long long statisticPackageCollectionInterval; // @synthesize statisticPackageCollectionInterval=_statisticPackageCollectionInterval;
@property(copy, nonatomic) NSDictionary *lastSeiDict; // @synthesize lastSeiDict=_lastSeiDict;
@property(retain, nonatomic) NSTimer *updateSeiTimer; // @synthesize updateSeiTimer=_updateSeiTimer;
@property(copy, nonatomic) NSString *agroaSeiKey; // @synthesize agroaSeiKey=_agroaSeiKey;
@property(nonatomic, getter=isDelayDisconnectPeriod) _Bool delayDisconnectPeriod; // @synthesize delayDisconnectPeriod=_delayDisconnectPeriod;
@property(retain, nonatomic) NSTimer *disconnectTimer; // @synthesize disconnectTimer=_disconnectTimer;
@property(nonatomic) unsigned long long localStatusCallbackCount; // @synthesize localStatusCallbackCount=_localStatusCallbackCount;
@property long long renderFreezeCount; // @synthesize renderFreezeCount=_renderFreezeCount;
@property(retain) AgoraRtcLocalVideoStats *localVideoStats; // @synthesize localVideoStats=_localVideoStats;
@property(retain) AgoraRtcStats *rtcStats; // @synthesize rtcStats=_rtcStats;
@property(retain, nonatomic) MLAgoraDelegateProxy *delegateProxy; // @synthesize delegateProxy=_delegateProxy;
@property(retain, nonatomic) AgoraRtcCryptoLoader *rtcCryptoLoader; // @synthesize rtcCryptoLoader=_rtcCryptoLoader;
@property(retain, nonatomic) NSString *encryptionSecret; // @synthesize encryptionSecret=_encryptionSecret;
@property(retain, nonatomic) NSString *encryptionMode; // @synthesize encryptionMode=_encryptionMode;
@property(nonatomic) _Bool isEncryption; // @synthesize isEncryption=_isEncryption;
@property(nonatomic) _Bool isAudioCommMode; // @synthesize isAudioCommMode=_isAudioCommMode;
@property(nonatomic) _Bool isBroadcaster; // @synthesize isBroadcaster=_isBroadcaster;
@property(retain) AgoraVideoSource *mVideoSrc; // @synthesize mVideoSrc=_mVideoSrc;
@property(retain, nonatomic) AgoraYuvEnhancerObjc *agoraEnhancer; // @synthesize agoraEnhancer=_agoraEnhancer;
@property(retain) AgoraRtcEngineKit *rtcEngine; // @synthesize rtcEngine=_rtcEngine;
@property(nonatomic) long long videoProfile; // @synthesize videoProfile=_videoProfile;
@property(nonatomic) _Bool isAgoraAudience; // @synthesize isAgoraAudience=_isAgoraAudience;
@property(nonatomic) long long clientRole; // @synthesize clientRole=_clientRole;
@property(retain, nonatomic) NSMutableDictionary *slaveAudioVolumeDict; // @synthesize slaveAudioVolumeDict=_slaveAudioVolumeDict;
@property(retain, nonatomic) IJKAudioConvert *playbackAudioConvert; // @synthesize playbackAudioConvert=_playbackAudioConvert;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *mixAudioQueue; // @synthesize mixAudioQueue=_mixAudioQueue;
@property(retain, nonatomic) NSMutableArray *playbackAudioBufferArray; // @synthesize playbackAudioBufferArray=_playbackAudioBufferArray;
@property(retain, nonatomic) NSMutableDictionary *lianmaiStatsDict; // @synthesize lianmaiStatsDict=_lianmaiStatsDict;
@property(copy, nonatomic) NSString *localConferenceIdStr; // @synthesize localConferenceIdStr=_localConferenceIdStr;
@property(copy, nonatomic) NSArray *remoteConferenceIDs; // @synthesize remoteConferenceIDs=_remoteConferenceIDs;
@property(copy, nonatomic) NSString *acceptRemoteConferenceId; // @synthesize acceptRemoteConferenceId=_acceptRemoteConferenceId;
@property(copy, nonatomic) NSString *channelKey; // @synthesize channelKey=_channelKey;
@property(copy, nonatomic) NSString *sdkAppID; // @synthesize sdkAppID=_sdkAppID;
@property(copy, nonatomic) NSString *hostSdkID; // @synthesize hostSdkID=_hostSdkID;
@property(nonatomic) unsigned long long totalBytesRecvInOneConnection; // @synthesize totalBytesRecvInOneConnection=_totalBytesRecvInOneConnection;
@property(nonatomic) unsigned long long totalBytesSendInOneConnection; // @synthesize totalBytesSendInOneConnection=_totalBytesSendInOneConnection;
@property(nonatomic) unsigned long long totalBytesProduct; // @synthesize totalBytesProduct=_totalBytesProduct;
@property(retain, nonatomic) NSMutableDictionary *yuv420ToCVPixelBufferDict; // @synthesize yuv420ToCVPixelBufferDict=_yuv420ToCVPixelBufferDict;
@property(nonatomic) _Bool enableAgoraReconnect; // @synthesize enableAgoraReconnect=_enableAgoraReconnect;
- (struct CGSize)encodeSize;
- (_Bool)isLoopbackAudio;
- (_Bool)enableReportAudioVolume;
@property(nonatomic) _Bool enableAudioMuted; // @synthesize enableAudioMuted=_enableAudioMuted;
- (float)micVolume;
- (float)musicVolume;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)enableAgoraReportAudioVolume:(_Bool)arg1;
- (void)setEnableReportAudioVolume:(_Bool)arg1;
- (void)rtcEngine:(id)arg1 receiveVideoSeiFromUid:(unsigned long long)arg2 data:(id)arg3;
- (void)setSeiUserInfo:(id)arg1;
- (void)rtcEngine:(id)arg1 networkQuality:(unsigned long long)arg2 txQuality:(unsigned long long)arg3 rxQuality:(unsigned long long)arg4;
- (void)rtcEngine:(id)arg1 audioQualityOfUid:(unsigned long long)arg2 quality:(unsigned long long)arg3 delay:(unsigned long long)arg4 lost:(unsigned long long)arg5;
- (void)rtcEngine:(id)arg1 remoteVideoStats:(id)arg2;
- (void)rtcEngine:(id)arg1 reportRtcStats:(id)arg2;
- (void)rtcEngine:(id)arg1 reportAudioVolumeIndicationOfSpeakers:(id)arg2 totalVolume:(long long)arg3;
- (void)rtcEngine:(id)arg1 didVideoMuted:(_Bool)arg2 byUid:(unsigned long long)arg3;
- (void)rtcEngine:(id)arg1 didAudioMuted:(_Bool)arg2 byUid:(unsigned long long)arg3;
- (void)rtcEngineRequestChannelKey:(id)arg1;
- (void)rtcEngine:(id)arg1 didRejoinChannel:(id)arg2 withUid:(unsigned long long)arg3 elapsed:(long long)arg4;
- (void)rtcEngine:(id)arg1 didLeaveChannelWithStats:(id)arg2;
- (void)rtcEngine:(id)arg1 didJoinChannel:(id)arg2 withUid:(unsigned long long)arg3 elapsed:(long long)arg4;
- (void)rtcEngineConnectionDidLost:(id)arg1;
- (void)rtcEngineConnectionDidInterrupted:(id)arg1;
- (void)rtcEngine:(id)arg1 localVideoStats:(id)arg2;
- (void)rtcEngine:(id)arg1 didOfflineOfUid:(unsigned long long)arg2 reason:(unsigned long long)arg3;
- (void)rtcEngine:(id)arg1 didJoinedOfUid:(unsigned long long)arg2 elapsed:(long long)arg3;
- (void)rtcEngine:(id)arg1 firstRemoteVideoDecodedOfUid:(unsigned long long)arg2 size:(struct CGSize)arg3 elapsed:(long long)arg4;
- (void)rtcEngine:(id)arg1 didOccurError:(long long)arg2;
- (void)rtcEngine:(id)arg1 didOccurWarning:(long long)arg2;
- (void)rtcEngineMediaEngineDidAudioEffectFinish:(id)arg1 soundId:(long long)arg2;
- (void)rtcEngineMediaEngineDidAudioMixingFinish:(id)arg1;
- (void)setIsAudioRecording:(_Bool)arg1;
- (void)onRenderVideoFrame:(unsigned int)arg1 videoFrame:(struct YUV420PFrame)arg2;
- (void)onPlaybackAudioFrameBeforeMixing:(unsigned int)arg1 audioFrame:(id)arg2;
- (void)onPlaybackAudioFrame:(id)arg1;
- (void)onRecordAudioFrame:(id)arg1;
- (void)layout:(id)arg1 updateConnectWaitViewsWithRemoteDisplays:(id)arg2;
- (void)layout:(id)arg1 updateSubviewFramesRatio:(id)arg2;
- (void)layout:(id)arg1 updateDisplayFrames:(id)arg2;
- (void)configRenderViewsLayoutIdInfo;
- (void)createRenderViewsLayout;
- (void)updateSeiDataForConnectWithSeiDict:(id)arg1;
- (void)setSEIParamWithHostID:(id)arg1 displayRatios:(id)arg2;
- (void)onUpdateSei;
- (void)enableUpdateSei:(_Bool)arg1;
- (void)setAgoraVideoSeiKey:(id)arg1;
- (void)recoverAudioSessionMode;
- (void)leaveChannel;
- (void)updateAudioLoopbackSetting;
- (void)setIsLoopbackAudio:(_Bool)arg1;
- (_Bool)isHeadsetPluggedIn;
- (void)loadAgoraKit;
- (void)removeRemoteCanvasForUserId:(long long)arg1;
- (void)removeRemoteSlaveForUserId:(long long)arg1;
- (void)removeRemoteSlaveForUserIdStr:(id)arg1;
- (void)removeAllRemote;
- (void)onMemberExit:(id)arg1 userId:(long long)arg2 reason:(unsigned long long)arg3;
- (void)setRemoteVideoQuality:(long long)arg1 zOrder:(int)arg2;
- (void)onMemberEnter:(id)arg1 userId:(long long)arg2;
- (void)setSlavesFrameRatioInVideo:(id)arg1;
- (void)setSubVideoPos:(double)arg1 y:(double)arg2 width:(double)arg3 height:(double)arg4 margin:(double)arg5;
- (_Bool)kickRemoteWithUserId:(id)arg1;
- (void)setAcceptRemoteUserId:(id)arg1;
- (void)disconnectTimerAction:(id)arg1;
- (void)disconnectTimerInvalidate;
- (void)destroyConference;
- (void)setupWriter;
- (void)startRenderCallBackForRemoteId:(id)arg1 view:(id)arg2;
- (void)conferenceResume;
- (void)enterForeground;
- (void)enterBackground;
- (int)setConferencePlaybackSpeakerphone:(_Bool)arg1;
- (float)getMicVolume;
- (void)setMicVolume:(float)arg1;
- (float)getMusicVolume;
- (void)setMusicVolume:(float)arg1;
- (void)playMusicDidFailed;
- (void)playMusicDidCompleted;
- (double)musicDuration;
- (double)musicCurrentPosition;
- (void)playEffectDidCompletedWithId:(long long)arg1;
- (void)playEffectDidFailedWithId:(int)arg1;
- (void)setEffectsVolume:(double)arg1;
- (void)setEffectVolumeWithId:(int)arg1 withVolume:(double)arg2;
- (void)stopAllEffect;
- (void)stopEffectWithId:(int)arg1;
- (void)playEffectWithId:(int)arg1 url:(id)arg2 loop:(_Bool)arg3;
- (void)playEffectWithId:(int)arg1 url:(id)arg2 loop:(_Bool)arg3 pitch:(double)arg4 pan:(double)arg5 gain:(double)arg6;
- (void)resumeMusic;
- (void)pauseMusic;
- (void)stopMusic;
- (void)playMusicWithUrl:(id)arg1 loopback:(_Bool)arg2 repeat:(long long)arg3;
- (void)playMusicWithUrl:(id)arg1 loopback:(_Bool)arg2;
- (void)playMusicWithUrl:(id)arg1;
- (void)publishConnectionRecover;
- (void)publishFailed;
- (void)publishConnectionInterrupt;
- (void)processVideoBuffer:(struct __CVBuffer *)arg1 atTime:(CDStruct_1b6d18a9)arg2;
- (void)setSabineAudioEffectToDefault;
- (void)setSabineAudioEffect:(int)arg1 index:(int)arg2 value:(float)arg3;
- (void)stopPublishingWithCompletionCode:(long long)arg1;
- (void)stopPublishing:(long long)arg1;
- (void)sendStartLogInfo;
- (void)startPublishingWithPublishPath:(id)arg1 videoBitrate:(unsigned long long)arg2 videoFramerate:(unsigned long long)arg3 audioBitrate:(unsigned long long)arg4 audioSamplerate:(unsigned long long)arg5 statisticReportCount:(long long)arg6 statisticSec:(long long)arg7 logEventEnable:(long long)arg8 userID:(id)arg9 roomID:(id)arg10 provider:(int)arg11 sessionTime:(unsigned long long)arg12 codecType:(long long)arg13 bitrateAdapter:(long long)arg14 adaptiveCachMax:(long long)arg15 adaptiveCachMin:(long long)arg16 confServer:(id)arg17 confSecurityId:(id)arg18 confSessionId:(id)arg19 confUserId:(id)arg20 maxBufferStartTimestampInMs:(unsigned long long)arg21 useHighQualityAudio:(_Bool)arg22;
- (void)startPublishingWithOptions:(id)arg1;
- (void)setEncodeSize:(struct CGSize)arg1;
- (void)setPublisherOptions:(id)arg1;
- (unsigned long long)pushType;
- (id)publisherType;
- (void)setClientRoleAsBroadcast:(_Bool)arg1;
- (void)setClientAsAudience:(_Bool)arg1;
- (void)enableSoftAEC:(_Bool)arg1;
- (void)muteRemoteVideoStream:(unsigned long long)arg1 mute:(_Bool)arg2;
- (void)muteRemoteAudioStream:(unsigned long long)arg1 mute:(_Bool)arg2;
- (void)muteAllRemoteVideo:(_Bool)arg1;
- (void)muteAllRemoteAudio:(_Bool)arg1;
- (void)muteLocalVideo:(_Bool)arg1;
- (void)muteLocalAudio:(_Bool)arg1;
- (void)enableCommMode:(_Bool)arg1;
- (void)renewChannelKey:(id)arg1;
- (void)setSdkAppID:(id)arg1 withChannelKey:(id)arg2;
- (void)setAgoraSdkAppID:(id)arg1 withChannelKey:(id)arg2;
- (void)setEncryptionSecret:(id)arg1 withMode:(id)arg2;
- (void)dealloc;
- (void)releasePublisher;
- (id)initWithContentView:(id)arg1 inputVideoSize:(struct CGSize)arg2 isHost:(_Bool)arg3;
- (id)hostConferenceID;
- (void)setValueAEFilter:(int)arg1;
- (void)setValuePitchShift:(int)arg1;
- (void)setValueEQ:(int)arg1;
- (int)getGOPDuration;
- (id)getLianmaiDetailData;
- (unsigned long long)readerRecvVideoDataSize;
- (unsigned long long)readerRecvAudioDataSize;
- (unsigned long long)readerRecvDataSize;
- (long long)roomMode;
- (long long)roomType;
- (unsigned long long)writerSentVideoFrameRate;
- (unsigned long long)writerSentVideoBitrate;
- (unsigned long long)writerSentAudioBitrate;
- (unsigned long long)writerVideoFreezeCount;
- (unsigned long long)writerCachedDataDuration;
- (unsigned long long)writerMuxDataSize;
- (unsigned long long)writerSentDataSize;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

