//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <UIKit/UIViewController.h>

#import "UCAVPlayerAdaptorDelegate-Protocol.h"
#import "UCMoviePlayerControllerInterface-Protocol.h"

@class NSString, NSTimer, NSURL, UCAVPlayerAdaptor, UCAVPlayerView, UCMoviePlaybackInfo, UCPlayerBackgroundView, UIView;
@protocol UCMoviePlayerControllerDelegate;

@interface UCAVPlayerController : UIViewController <UCAVPlayerAdaptorDelegate, UCMoviePlayerControllerInterface>
{
    UCPlayerBackgroundView *m_backgroundView;
    UCAVPlayerView *m_playerView;
    int m_playbackState;
    unsigned long long m_loadState;
    double m_initialTime;
    unsigned long long m_delaySeconds;
    unsigned long long m_retryCountMax;
    _Bool m_isPrepareToPlay;
    _Bool m_isSeeking;
    _Bool m_isInBackground;
    _Bool m_throughOK;
    double m_lastCheckPlayPosition;
    _Bool m_isSeekPlayTime;
    _Bool _isMute;
    _Bool _isVideoFinished;
    id <UCMoviePlayerControllerDelegate> delegate;
    NSTimer *_stallCheckTimer;
    UCMoviePlaybackInfo *_playbackInfo;
    UCAVPlayerAdaptor *_currentAdaptor;
}

+ (_Bool)checkIsGifRecordEnabel;
+ (_Bool)isAvailable;
@property(retain, nonatomic) UCAVPlayerAdaptor *currentAdaptor; // @synthesize currentAdaptor=_currentAdaptor;
@property(retain, nonatomic) UCMoviePlaybackInfo *playbackInfo; // @synthesize playbackInfo=_playbackInfo;
@property(nonatomic) _Bool isVideoFinished; // @synthesize isVideoFinished=_isVideoFinished;
@property(retain, nonatomic) NSTimer *stallCheckTimer; // @synthesize stallCheckTimer=_stallCheckTimer;
@property(nonatomic) _Bool isMute; // @synthesize isMute=_isMute;
@property(nonatomic) id <UCMoviePlayerControllerDelegate> delegate; // @synthesize delegate;
@property(nonatomic) _Bool isSeekPlayTime; // @synthesize isSeekPlayTime=m_isSeekPlayTime;
- (void)logRetryCount;
- (_Bool)shouldRetry;
- (_Bool)waitsToMinimizeStallingDisabled;
- (void)setRetryFunction;
- (_Bool)needsAutoErrorReport;
- (void)didFinishWithReason:(int)arg1 stoppedContentURL:(id)arg2;
- (void)checkRate;
- (void)updateLoadState;
- (void)playerAdaptor:(id)arg1 mediaNaturalSizeChanged:(struct CGSize)arg2;
- (void)playerAdaptor:(id)arg1 bufferFullChanged:(_Bool)arg2;
- (void)playerAdaptor:(id)arg1 bufferEmptyChanged:(_Bool)arg2;
- (void)playerAdaptor:(id)arg1 likelyToKeepupChanged:(_Bool)arg2;
- (void)playerAdaptor:(id)arg1 playRateChaned:(float)arg2;
- (void)playerAdaptor:(id)arg1 readyToPlay:(_Bool)arg2;
- (void)playerAdaptor:(id)arg1 durationChanged:(double)arg2 oldDuration:(double)arg3;
- (void)playerAdaptor:(id)arg1 errorOccured:(id)arg2;
- (void)playerAdaptorDidPlaybackEnd:(id)arg1;
- (void)playerAdaptor:(id)arg1 didFailLoadMetadata:(id)arg2;
- (void)playerAdaptorDidFinishLoadMetadata:(id)arg1;
- (void)applicationWillResignActive:(id)arg1;
- (void)applicationDidBecomeActive:(id)arg1;
- (void)applicationWillEnterForeground:(id)arg1;
- (void)applicationDidEnterBackground:(id)arg1;
- (id)playbackLastError;
- (void)replayForRaiseError;
- (_Bool)tryReplayWhenRaiseError;
- (void)raiseError:(id)arg1;
- (_Bool)isOnlineVideo;
- (void)startRequestThumbnailImage;
- (_Bool)needReloadCachingPlay;
- (void)reloadCurrentContentURL;
- (void)playAtInitialPlayTime;
- (void)setInitialPlayTime:(double)arg1;
- (double)checkSeekTime:(double)arg1;
- (void)seekToTime:(double)arg1;
- (void)skipTimeInterval:(double)arg1;
- (void)timeoutStop;
- (void)userStop;
- (void)stop;
- (void)playerStop;
- (void)pause;
- (void)play;
- (void)playImmediately:(_Bool)arg1;
- (void)prepareToPlay;
- (void)stopRecordGif;
- (void)startRecordGif:(id)arg1;
- (void)setGifParametersWithWidth:(double)arg1 height:(double)arg2 fps:(long long)arg3;
- (void)setVolume:(float)arg1;
- (float)currentVolume;
- (double)observedLoadPercentage;
- (double)observedBitrate;
- (_Bool)setCurrentPlaybackTime:(double)arg1 byEx:(_Bool)arg2;
- (struct CGSize)naturalSize;
- (void)moviePlayDidStalledException;
- (_Bool)isBufferring;
- (double)currentPlaybackTime;
- (double)playableDuration;
- (double)duration;
@property(readonly, retain, nonatomic) UIView *avPlayerView;
- (void)createPlayerViewIfNeeded;
- (void)releaseMoviePlayer;
@property(nonatomic) long long scalingMode;
- (void)onStallCheck;
- (void)stopStallCheckTimer;
- (void)startStallCheckTimer;
- (void)setLoadState:(unsigned long long)arg1 andForceRaise:(_Bool)arg2;
@property(readonly, nonatomic) unsigned long long loadState;
- (void)setPlayback:(int)arg1 andRaise:(_Bool)arg2 raiseAfterReadyToPlay:(_Bool)arg3;
@property(readonly, nonatomic) int playbackState;
- (_Bool)isPlayingState;
- (void)setContentURL:(id)arg1 needStop:(_Bool)arg2;
@property(retain, nonatomic) NSURL *contentURL;
- (void)resetPlayBackInfo;
@property(readonly, nonatomic) _Bool isApollo;
- (void)dealloc;
- (void)viewDidLoad;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

