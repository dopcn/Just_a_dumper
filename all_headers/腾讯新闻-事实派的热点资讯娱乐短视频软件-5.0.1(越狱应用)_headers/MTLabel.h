//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <UIKit/UIView.h>

@class NSMutableDictionary, NSString, UIColor, UIFont;
@protocol MTLabelDelegate;

@interface MTLabel : UIView
{
    int _numberOfLines;
    double _lineHeight;
    double _minimumFontSize;
    NSString *_text;
    UIColor *_fontColor;
    UIColor *_highlightColor;
    UIFont *_font;
    NSString *_fontName;
    double _fontSize;
    _Bool _limitToNumberOfLines;
    _Bool _shouldResizeToFit;
    int _textAlignment;
    id <MTLabelDelegate> delegate;
    _Bool adjustSizeToFit;
    double _kerning;
    double _paragraghSpace;
    NSMutableDictionary *_fontNameWithRanges;
    NSMutableDictionary *_fontSizeWithRanges;
    NSMutableDictionary *_colorWithRanges;
    _Bool _adjustSizeToFit;
    double _textHeight;
    UIColor *_fontHighlightColor;
    double shadowOffset;
}

+ (struct CGSize)preComputeSize:(id)arg1 fontName:(id)arg2 fontSize:(double)arg3 kern:(double)arg4 lineHeight:(double)arg5 paragraghSpace:(double)arg6 constrainToSize:(struct CGSize)arg7;
+ (id)labelWithText:(id)arg1;
+ (id)labelWithFrame:(struct CGRect)arg1 andText:(id)arg2;
+ (id)label;
@property(nonatomic) double paragraghSpace; // @synthesize paragraghSpace=_paragraghSpace;
@property(nonatomic) double kerning; // @synthesize kerning=_kerning;
@property(nonatomic) double shadowOffset; // @synthesize shadowOffset;
@property(nonatomic, getter=adjustSizeToFit, setter=setAdjustSizeToFit:) _Bool _adjustSizeToFit; // @synthesize _adjustSizeToFit;
@property(nonatomic) id <MTLabelDelegate> delegate; // @synthesize delegate;
@property(retain, nonatomic, getter=fontHighlightColor, setter=setFontHighlightColor:) UIColor *_fontHighlightColor; // @synthesize _fontHighlightColor;
@property(nonatomic, setter=setFontSize:) double fontSize; // @synthesize fontSize=_fontSize;
@property(retain, nonatomic, setter=setFontName:) NSString *fontName; // @synthesize fontName=_fontName;
@property(nonatomic, getter=minimumFontSize, setter=setMinimumFontSize:) double _minimumFontSize; // @synthesize _minimumFontSize;
@property(readonly, nonatomic) double _textHeight; // @synthesize _textHeight;
- (void)dealloc;
- (void)clearRanges;
- (void)drawRect:(struct CGRect)arg1;
- (void)drawTextInRect:(struct CGRect)arg1 inContext:(struct CGContext *)arg2;
- (double)textOffsetForLine:(struct __CTLine *)arg1 inRect:(struct CGRect)arg2;
- (void)drawTransparentBackground;
- (id)initWithText:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1 andText:(id)arg2;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)init;
- (void)setup;
@property(nonatomic, getter=textAlignment, setter=setTextAlignment:) int _textAlignment; // @synthesize _textAlignment;
@property(nonatomic, getter=resizeToFitText, setter=setResizeToFitText:) _Bool _shouldResizeToFit; // @synthesize _shouldResizeToFit;
@property(nonatomic, getter=limitToNumberOfLines, setter=setLimitToNumberOfLines:) _Bool _limitToNumberOfLines; // @synthesize _limitToNumberOfLines;
@property(retain, nonatomic, getter=fontColor, setter=setFontColor:) UIColor *_fontColor; // @synthesize _fontColor;
@property(nonatomic, getter=numberOfLines, setter=setNumberOfLines:) int _numberOfLines; // @synthesize _numberOfLines;
@property(nonatomic, getter=lineHeight, setter=setLineHeight:) double _lineHeight; // @synthesize _lineHeight;
@property(retain, nonatomic, getter=font, setter=setFont:) UIFont *_font; // @synthesize _font;
@property(retain, nonatomic, getter=text, setter=setText:) NSString *_text; // @synthesize _text;
- (void)setFontColor:(id)arg1 withRange:(struct _NSRange)arg2;
- (void)setFontName:(id)arg1 andSize:(double)arg2 withRange:(struct _NSRange)arg3;

@end

