//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@interface TeamHelper : NSObject
{
}

+ (void)sendMessageWithNotice:(id)arg1 sessionID:(id)arg2;
+ (void)setLastMessageTimeTagWithTeamId:(id)arg1 time:(unsigned int)arg2;
+ (unsigned int)getLastMessageTimeWithTeamId:(id)arg1;
+ (id)teamBoard:(id)arg1;
+ (void)updateTeamBoard:(id)arg1 teamID:(id)arg2;
+ (id)teamBoardDic:(id)arg1;
+ (unsigned long long)teamPIDWithTeamID:(id)arg1;
+ (void)dismissTeamWithTeamID:(id)arg1;
+ (id)mobileJsonKey;
+ (id)teamMobile:(id)arg1 teamID:(id)arg2;
+ (void)updateTeamMobile:(id)arg1 teamID:(id)arg2;
+ (id)teamMisc:(id)arg1 teamID:(id)arg2;
+ (_Bool)isUser:(id)arg1 inTeam:(id)arg2;
+ (long long)remainMutedSeconds:(id)arg1 inTeam:(id)arg2;
+ (_Bool)isSelfMutedWithTeamId:(id)arg1;
+ (_Bool)isMemberMuted:(id)arg1 inTeam:(id)arg2;
+ (long long)teamMemberMuteDeadline:(id)arg1 inTeam:(id)arg2;
+ (_Bool)isTeamMuted:(id)arg1;
+ (void)setMemberMutedTime:(unsigned long long)arg1 forUser:(id)arg2 inTeam:(id)arg3;
+ (void)setTeamMute:(_Bool)arg1 inTeam:(id)arg2;
+ (void)setTeamAdmin:(_Bool)arg1 forUsers:(id)arg2 inTeam:(id)arg3;
+ (void)updateTeamCard:(id)arg1 teamID:(id)arg2;
+ (id)teamCard:(id)arg1 teamID:(id)arg2;
+ (void)joinTeamByDimen:(id)arg1;
+ (_Bool)isTeamNormalUser:(id)arg1 teamID:(id)arg2;
+ (_Bool)isTeamAdmin:(id)arg1 teamID:(id)arg2;
+ (_Bool)isTeamOwner:(id)arg1 teamID:(id)arg2;
+ (void)kickUsers:(id)arg1 teamID:(id)arg2 blackFlag:(_Bool)arg3;
+ (void)leaveTeam:(id)arg1;
+ (void)sendJionApplyDeny:(id)arg1 invitee:(id)arg2;
+ (void)rejectJionApplyWithTeamID:(id)arg1 uid:(id)arg2 inviter:(id)arg3 inviteType:(unsigned int)arg4 isDeny:(_Bool)arg5;
+ (void)acceptInvite:(_Bool)arg1 teamID:(id)arg2 invitor:(id)arg3 timetag:(unsigned int)arg4;
+ (void)inviteUsers:(id)arg1 teamID:(id)arg2 confirmInvite:(_Bool)arg3;
+ (_Bool)isHost:(id)arg1 forTeam:(id)arg2;
+ (_Bool)isTeamCircleProtectEnabledForTeam:(id)arg1;
+ (_Bool)isDualScreenEnabledForTeam:(id)arg1;
+ (_Bool)isOnlyAllowdAdminToInvitForTeam:(id)arg1;
+ (_Bool)isNeedInviteVerificationForTeam:(id)arg1;
+ (void)modifyHosts:(id)arg1 oldHosts:(id)arg2 forTeam:(id)arg3;
+ (long long)getHostsCountForTeam:(id)arg1;
+ (id)getHostsForTeam:(id)arg1;
+ (void)getWaterMessages:(id)arg1 fromTime:(unsigned long long)arg2;
+ (void)sendApprovalForInvitee:(id)arg1 inviter:(id)arg2 inviteType:(unsigned long long)arg3 forTeam:(id)arg4;
+ (void)applyForEnterTeam:(id)arg1 inviter:(id)arg2 inviteType:(unsigned long long)arg3 extraMsg:(id)arg4;
+ (void)sendVerificationForInvite:(id)arg1 list:(id)arg2 extraMsg:(id)arg3;
+ (void)enableTeamCircle:(_Bool)arg1 forTeam:(id)arg2;
+ (void)enableDualScreen:(_Bool)arg1 forTeam:(id)arg2;
+ (void)enableInvite:(_Bool)arg1 forTeam:(id)arg2;
+ (void)enableInviteConfirm:(_Bool)arg1 forTeam:(id)arg2;
+ (void)updateTeam:(id)arg1 name:(id)arg2;
+ (void)createNewECPTeam:(id)arg1 introduce:(id)arg2 pid:(unsigned long long)arg3 users:(id)arg4 confirmInvite:(_Bool)arg5;
+ (void)createNewECPTeam:(id)arg1 introduce:(id)arg2 pid:(unsigned long long)arg3 users:(id)arg4;
+ (void)createSuperTeam:(id)arg1 type:(int)arg2 introduce:(id)arg3 pid:(unsigned long long)arg4 users:(id)arg5;
+ (void)createSuperTeam:(id)arg1 type:(int)arg2 introduce:(id)arg3 pid:(unsigned long long)arg4 users:(id)arg5 confirmInvite:(_Bool)arg6;
+ (void)createTeam:(id)arg1 users:(id)arg2 confirmInvite:(_Bool)arg3;
+ (_Bool)isSpecialTeam:(id)arg1;
+ (_Bool)isPublicTeam:(id)arg1;
+ (_Bool)isDefaultTeam:(id)arg1;
+ (_Bool)isPATeam:(id)arg1;
+ (_Bool)isEcpTeam:(id)arg1;
+ (_Bool)isGameTeam:(id)arg1;
+ (_Bool)isNewEcpTeam:(id)arg1;
+ (long long)teamMemberCount:(id)arg1;
+ (id)getTeamConfig:(id)arg1;
+ (id)getTeamDescripton:(id)arg1;
+ (id)teamMemberSearchContactInfoForTeamId:(id)arg1;
+ (id)teamMemberContactInfoForTeamId:(id)arg1;
+ (id)contactInfoTeamList:(id)arg1;
+ (id)sortedTeamUserList:(id)arg1;
+ (id)getTeamUserList:(id)arg1;
+ (long long)getLocalTeamCount:(id)arg1;
+ (id)getLocalTempTeamName:(id)arg1;
+ (id)getTeamName:(id)arg1;
+ (id)getTeamOwner:(id)arg1;
+ (id)teamInfo:(id)arg1;
+ (id)getAllMyVitalityTeams;
+ (id)getAllMyVisibleTeams;
+ (_Bool)isHasTeam;
+ (id)getAllMyTeams;
+ (void)saveToAddressBook:(id)arg1 flag:(_Bool)arg2;
+ (_Bool)isTeamInAddressBook:(id)arg1;
+ (_Bool)isMyTeam:(id)arg1;

@end

