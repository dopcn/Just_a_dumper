//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "TGBaseCell.h"

@class NSMutableArray, NVModelBaseCellList, NVModelBaseTuanHomeSearchResult, TGMainKeywordButton, TGMainSearchBar, UILabel;
@protocol NVSearchBarDelegate;

@interface TGMainKeywordCell : TGBaseCell
{
    NVModelBaseTuanHomeSearchResult *_searchResult;
    NVModelBaseCellList *_listForKeywords;
    double _heightForCell;
    TGMainKeywordButton *_searchButton;
    id <NVSearchBarDelegate> _delegate;
    TGMainSearchBar *_searchBar;
    UILabel *_labelForPopularSearch;
    NSMutableArray *_labelsForKeywordsTitle;
    NSMutableArray *_labelsForKeywordsSubTitle;
}

@property(retain, nonatomic) NSMutableArray *labelsForKeywordsSubTitle; // @synthesize labelsForKeywordsSubTitle=_labelsForKeywordsSubTitle;
@property(retain, nonatomic) NSMutableArray *labelsForKeywordsTitle; // @synthesize labelsForKeywordsTitle=_labelsForKeywordsTitle;
@property(retain, nonatomic) UILabel *labelForPopularSearch; // @synthesize labelForPopularSearch=_labelForPopularSearch;
@property(retain, nonatomic) TGMainSearchBar *searchBar; // @synthesize searchBar=_searchBar;
@property(retain, nonatomic) id <NVSearchBarDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) TGMainKeywordButton *searchButton; // @synthesize searchButton=_searchButton;
@property(nonatomic) double heightForCell; // @synthesize heightForCell=_heightForCell;
@property(retain, nonatomic) NVModelBaseCellList *listForKeywords; // @synthesize listForKeywords=_listForKeywords;
@property(retain, nonatomic) NVModelBaseTuanHomeSearchResult *searchResult; // @synthesize searchResult=_searchResult;
- (void).cxx_destruct;
- (void)didTapCellSecond:(id)arg1;
- (void)didTapCellFirst:(id)arg1;
- (void)layoutSubviews;
- (void)initView;
- (void)createLabels;
- (void)removeTitleLabels;
- (void)removeSubTitleLabel;
- (void)setData:(id)arg1;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2 leftCellMarginType:(long long)arg3 rightCellMarginType:(long long)arg4;

@end

