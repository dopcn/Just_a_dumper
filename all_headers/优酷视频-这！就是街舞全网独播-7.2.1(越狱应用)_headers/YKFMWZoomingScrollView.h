//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <UIKit/UIScrollView.h>

#import "MWTapDetectingImageViewDelegate-Protocol.h"
#import "UIGestureRecognizerDelegate-Protocol.h"
#import "UIScrollViewDelegate-Protocol.h"
#import "YKFMWTapDetectingViewDelegate-Protocol.h"

@class NSString, UIButton, UIImageView, UIPanGestureRecognizer, YKFDACircularProgressView, YKFMWCaptionView, YKFMWPhotoBrowser, YKFMWTapDetectingImageView, YKFMWTapDetectingView;
@protocol YKFMWPhoto;

@interface YKFMWZoomingScrollView : UIScrollView <UIGestureRecognizerDelegate, UIScrollViewDelegate, MWTapDetectingImageViewDelegate, YKFMWTapDetectingViewDelegate>
{
    YKFMWPhotoBrowser *_photoBrowser;
    YKFMWTapDetectingView *_tapView;
    YKFMWTapDetectingImageView *_photoImageView;
    YKFDACircularProgressView *_loadingIndicator;
    UIImageView *_loadingError;
    unsigned long long _index;
    id <YKFMWPhoto> _photo;
    YKFMWCaptionView *_captionView;
    UIButton *_selectedButton;
    UIButton *_playButton;
    UIPanGestureRecognizer *_panGesture;
    unsigned long long _panState;
    unsigned long long _panResultState;
    double _startScaleWhenPanning;
    struct CGPoint _lastLocationWhenPanning;
    struct CGPoint _startCenterWhenPanning;
    struct CGAffineTransform _startAffineTransformWhenPanning;
}

@property(nonatomic) struct CGPoint startCenterWhenPanning; // @synthesize startCenterWhenPanning=_startCenterWhenPanning;
@property(nonatomic) struct CGAffineTransform startAffineTransformWhenPanning; // @synthesize startAffineTransformWhenPanning=_startAffineTransformWhenPanning;
@property(nonatomic) double startScaleWhenPanning; // @synthesize startScaleWhenPanning=_startScaleWhenPanning;
@property(nonatomic) unsigned long long panResultState; // @synthesize panResultState=_panResultState;
@property(nonatomic) unsigned long long panState; // @synthesize panState=_panState;
@property(nonatomic) struct CGPoint lastLocationWhenPanning; // @synthesize lastLocationWhenPanning=_lastLocationWhenPanning;
@property(retain, nonatomic) UIPanGestureRecognizer *panGesture; // @synthesize panGesture=_panGesture;
@property(nonatomic) __weak UIButton *playButton; // @synthesize playButton=_playButton;
@property(nonatomic) __weak UIButton *selectedButton; // @synthesize selectedButton=_selectedButton;
@property(nonatomic) __weak YKFMWCaptionView *captionView; // @synthesize captionView=_captionView;
@property(retain, nonatomic) id <YKFMWPhoto> photo; // @synthesize photo=_photo;
@property unsigned long long index; // @synthesize index=_index;
- (void).cxx_destruct;
- (void)panEvent:(id)arg1;
- (_Bool)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
- (_Bool)gestureRecognizerShouldBegin:(id)arg1;
- (void)view:(id)arg1 doubleTapDetected:(struct CGPoint)arg2;
- (void)view:(id)arg1 singleTapDetected:(struct CGPoint)arg2;
- (void)imageView:(id)arg1 doubleTapDetected:(struct CGPoint)arg2;
- (void)imageView:(id)arg1 singleTapDetected:(struct CGPoint)arg2;
- (void)handleDoubleTap:(struct CGPoint)arg1;
- (void)handleSingleTap:(struct CGPoint)arg1;
- (void)scrollViewDidZoom:(id)arg1;
- (void)scrollViewDidEndDragging:(id)arg1 willDecelerate:(_Bool)arg2;
- (void)scrollViewWillBeginZooming:(id)arg1 withView:(id)arg2;
- (void)scrollViewWillBeginDragging:(id)arg1;
- (id)viewForZoomingInScrollView:(id)arg1;
- (void)layoutSubviews;
- (void)setMaxMinZoomScalesForCurrentBounds;
- (double)initialZoomScaleWithMinScale;
- (void)showLoadingIndicator;
- (void)hideLoadingIndicator;
- (void)setProgressFromNotification:(id)arg1;
- (void)hideImageFailure;
- (void)displayImageFailure;
- (void)displayImage;
- (void)setImageHidden:(_Bool)arg1;
- (_Bool)displayingVideo;
- (void)prepareForReuse;
- (void)dealloc;
- (id)initWithPhotoBrowser:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

