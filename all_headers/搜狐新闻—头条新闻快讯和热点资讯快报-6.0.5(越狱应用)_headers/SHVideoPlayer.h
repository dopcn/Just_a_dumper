//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "PKMoviePlayerController.h"

#import "PresoModeViewDelegate-Protocol.h"
#import "SHVPAccessBufferDelegate-Protocol.h"
#import "SVVideoServiceDelegate-Protocol.h"

@class NSDate, NSDictionary, NSString, SHMonitorGuideView, SHPlayerVideoItem, SHVPAccessBuffer;
@protocol SHVideoPlayerDelegate;

@interface SHVideoPlayer : PKMoviePlayerController <SVVideoServiceDelegate, SHVPAccessBufferDelegate, PresoModeViewDelegate>
{
    _Bool _retry;
    long long _retryTimes;
    _Bool _preLoadDidFinsih;
    _Bool _HDMIVideoActive;
    id <SHVideoPlayerDelegate> _playerDelegate;
    SHPlayerVideoItem *_playerItem;
    long long _videoFinishedReason;
    long long _userEvent;
    long long _playerState;
    long long _playerPlayType;
    long long _playerDecoderType;
    unsigned long long _SHLoadState;
    long long _maxRetryCount;
    NSDate *_playerDate;
    SHVPAccessBuffer *_accessBuffer;
}

@property(retain, nonatomic) SHVPAccessBuffer *accessBuffer; // @synthesize accessBuffer=_accessBuffer;
@property(retain, nonatomic) NSDate *playerDate; // @synthesize playerDate=_playerDate;
@property(nonatomic) long long maxRetryCount; // @synthesize maxRetryCount=_maxRetryCount;
@property(readonly, nonatomic, getter=isHDMIvideoActive) _Bool HDMIVideoActive; // @synthesize HDMIVideoActive=_HDMIVideoActive;
@property(nonatomic) unsigned long long SHLoadState; // @synthesize SHLoadState=_SHLoadState;
@property(nonatomic) long long playerDecoderType; // @synthesize playerDecoderType=_playerDecoderType;
@property(nonatomic) long long playerPlayType; // @synthesize playerPlayType=_playerPlayType;
@property(nonatomic) _Bool preLoadDidFinsih; // @synthesize preLoadDidFinsih=_preLoadDidFinsih;
@property(nonatomic) long long playerState; // @synthesize playerState=_playerState;
@property(nonatomic) long long userEvent; // @synthesize userEvent=_userEvent;
@property(nonatomic) long long videoFinishedReason; // @synthesize videoFinishedReason=_videoFinishedReason;
@property(retain, nonatomic) SHPlayerVideoItem *playerItem; // @synthesize playerItem=_playerItem;
@property(nonatomic) __weak id <SHVideoPlayerDelegate> playerDelegate; // @synthesize playerDelegate=_playerDelegate;
- (void).cxx_destruct;
- (void)updateVideoPlayerViewFrame;
- (void)playerRetryPlayWithAirplay;
- (unsigned long long)getPlayerLoadState;
- (unsigned long long)getPlayerPlaybackState;
- (void)setContentURL:(id)arg1;
- (void)configContentURL:(id)arg1;
@property(readonly, nonatomic) long long videoDownloadSpeed;
- (double)downloadDuration;
- (double)currentPlaybackTime;
- (void)recommendAutoRetryVideoPlayer:(id)arg1;
- (void)recommendAutoResumeVideoPlayer:(id)arg1;
- (void)presoMode:(_Bool)arg1;
- (void)removeNotifications;
- (void)postNotification:(id)arg1;
- (void)registerNotifications;
- (id)printMovieLogAccess;
- (_Bool)retry;
- (_Bool)handlePlaybackEndStateError;
- (void)playbackDidFinishNotification:(id)arg1;
- (void)loadStateDidChange:(id)arg1;
- (void)playbackStateDidChange:(id)arg1;
- (void)playerIsPreparedToPlay:(id)arg1;
- (void)playerDurationAvailable:(id)arg1;
- (void)stopHDMIVideo;
- (void)startupHDMIVideo;
- (id)loaclServiceTSFileStatusInfo;
- (_Bool)isPlayingLiveVideo;
- (_Bool)isPlayingLocalVideo;
- (_Bool)isSupportBackgroundAudio;
- (_Bool)isAirPlayActive;
- (void)startupAirPlay:(_Bool)arg1;
- (void)stopPlay;
- (void)exitPlayer:(long long)arg1;
- (void)playerPlaybackDidFinishReason:(long long)arg1;
- (void)playVideoFromPlaybackTime:(double)arg1;
- (void)p_logSHPlayerInfo;
- (void)playVideoUsingSystemPlayerWithAirplay:(double)arg1 withNewDefinition:(_Bool)arg2;
- (void)playBackWithVideoURL:(id)arg1 replaceURL:(_Bool)arg2;
- (void)playVideoFromPlaybackTime:(double)arg1 withNewDefinition:(_Bool)arg2;
- (void)playVideo:(id)arg1 withPlaybackTime:(double)arg2;
- (void)reset;
- (id)initWithVideo:(id)arg1 delegate:(id)arg2;
- (id)initWithContentURL:(id)arg1;
- (void)dealloc;
@property(nonatomic) long long successFileCounts;
@property(nonatomic) long long totalErrorFileCounts;
@property(copy, nonatomic) NSDictionary *m3u8Info;
@property(copy, nonatomic) NSDictionary *catonInfo;
@property(nonatomic) double beforeStopPlaybackTime;
@property(nonatomic) _Bool willSwitchVideoDefinition;
@property(nonatomic) long long retryLoadTSCount;
- (id)cleanupfileCatonInfo:(id)arg1;
- (id)fileRequestInfoWithRequest:(id)arg1 fileType:(long long)arg2;
- (void)videoService:(id)arg1 refreshRouterCacheWithM3U8URL:(id)arg2;
- (void)videoService:(id)arg1 didLoadVideoFromRouterCacheWithVideoQuality:(long long)arg2;
- (_Bool)videoServiceAllowsRouterCacheSwitchQuality:(id)arg1;
- (void)videoService:(id)arg1 didRespondTSFile:(id)arg2;
- (void)videoService:(id)arg1 didFinishedFileRequest:(id)arg2 fileType:(long long)arg3;
- (void)videoServiceDidFailToLoadM3U8:(id)arg1 error:(long long)arg2 httpStatus:(long long)arg3;
- (void)videoServiceDidLoadM3U8File:(id)arg1 tsCount:(unsigned long long)arg2;
- (void)videoService:(id)arg1 didFoundTSError:(long long)arg2 code:(long long)arg3 duFile:(id)arg4 cdnFile:(id)arg5 httpStatus:(long long)arg6 vid:(long long)arg7;
- (_Bool)videoServiceShouldRetryLoadingCurrentTS:(id)arg1;
- (double)videoServiceDidLoadCurrentPlaybackTime;
- (void)videoService:(id)arg1 didFailToStartWithError:(id)arg2;
- (void)videoService:(id)arg1 didChangeM3U8URL:(id)arg2;
- (void)videoService:(id)arg1 didStartWithM3U8URL:(id)arg2;
- (void)videoServiceWillBlocked:(id)arg1;
- (_Bool)isAirplayActive;
- (void)currentTSFilePlaybackError:(long long)arg1;
- (void)playVideoWithLocalService:(id)arg1;
- (void)onShowPlayerMessage:(id)arg1;
- (void)onRouterQuality:(long long)arg1;
- (void)onCatonAnalysis:(id)arg1;
@property(nonatomic) long long currMonitorType;
@property(retain, nonatomic) SHMonitorGuideView *monitorGuideView;
- (void)wirelessRouteActiveDidChange:(id)arg1;
- (void)wirelessRoutesAvailableDidChange:(id)arg1;
- (void)playerIsAirPlayVideoActiveDidChangeNotificaion:(id)arg1;
- (void)registerMonitorNotification;
- (void)removeMonitorGuideView;
- (void)showMonitorGuideView;
@property(nonatomic) long long origPlayerSubviewCount;
- (void)attachView:(id)arg1 level:(long long)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

