//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

@class BMSharedBikeMyStorageManage, BMSharedBikeRequestBasicInfo, NSArray;

@interface BMSharedBikeDataController : NSObject
{
    BMSharedBikeRequestBasicInfo *_reqBasicInfo;
    BMSharedBikeMyStorageManage *_dataStorageMagage;
    NSArray *_arrPlatforms;
    CDUnknownBlockType _basicInfoCallBack;
}

+ (id)getShareInstance;
@property(copy, nonatomic) CDUnknownBlockType basicInfoCallBack; // @synthesize basicInfoCallBack=_basicInfoCallBack;
@property(retain) NSArray *arrPlatforms; // @synthesize arrPlatforms=_arrPlatforms;
@property(retain, nonatomic) BMSharedBikeMyStorageManage *dataStorageMagage; // @synthesize dataStorageMagage=_dataStorageMagage;
@property(retain, nonatomic) BMSharedBikeRequestBasicInfo *reqBasicInfo; // @synthesize reqBasicInfo=_reqBasicInfo;
- (void).cxx_destruct;
- (id)getBikeHomeLogoWithBrandId:(id)arg1;
- (id)getOrDownloadActivityImage:(id)arg1 withImageId:(id)arg2;
- (id)getMobikeBikeBrandId;
- (_Bool)bikeIsFreeDeposit:(id)arg1;
- (id)getBikeModelByScanKeyFromCache:(id)arg1;
- (id)checkIsSharedBikeOpenWithOpenAPIType:(id)arg1;
- (id)getLocalSharedBikeStorageInfoWithCityId:(long long)arg1;
- (_Bool)blHadShownSharedBikeDeclaration;
- (void)saveHadShownSharedBikeDeclaration;
- (id)getBikeBrandIdWithPlatformName:(id)arg1;
- (id)getSelectedSharedBikeBrandId;
- (void)saveSharedBikeBrandId:(id)arg1;
- (int)getSharedBikeUseTypeWithBrandId:(id)arg1;
- (_Bool)checkBikeBrandIdExist:(id)arg1;
- (id)getPlatformNamesWithBrandId:(id)arg1;
- (id)getBikeNameWithPlatform:(id)arg1 subPlatform:(id)arg2;
- (id)getChargeUnitDimeAndMinutesWithPlatform:(id)arg1 subPlatform:(id)arg2;
- (id)getImageWithPlatform:(id)arg1 locationType:(int)arg2;
- (id)getLogoWithPlatform:(id)arg1;
- (id)getAllPlatformAndSubplatforms;
- (_Bool)isSharedBikeOnCloud;
- (_Bool)isSharedBikeOn;
- (_Bool)isSharedBikeInService;
- (void)manageLocalDatasWithLocalStorageInCurrentCity;
- (void)manageLocalOrDownloadImageWithArray:(id)arg1;
- (void)addOrRefreshStorageWithCityId:(id)arg1 resDict:(id)arg2;
- (void)refreshStorageAndPostNotificationWith:(id)arg1 resDict:(id)arg2;
- (void)responseAndCleanCallbackWithResult:(id)arg1 error:(id)arg2;
- (void)refreshHomePinLocalDataOrServerDataWithCityId:(long long)arg1 CallbackInfo:(CDUnknownBlockType)arg2;
- (void)getLocalDataOrServerDataWithLocalFirst:(_Bool)arg1 CallbackInfo:(CDUnknownBlockType)arg2;
- (void)requestAndRefreshBasicInfo;

@end

