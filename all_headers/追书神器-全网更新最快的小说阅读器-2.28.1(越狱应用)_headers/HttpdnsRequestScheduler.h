//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class HttpdnsRequestTestHelper, NSDate, NSMutableDictionary, NSOperationQueue, NSString;
@protocol OS_dispatch_queue;

@interface HttpdnsRequestScheduler : NSObject
{
    long long _lastNetworkStatus;
    _Bool _isExpiredIPEnabled;
    _Bool _isPreResolveAfterNetworkChangedEnabled;
    NSMutableDictionary *_hostManagerDict;
    NSObject<OS_dispatch_queue> *_syncDispatchQueue;
    NSOperationQueue *_asyncOperationQueue;
    _Bool _serverDisable;
    NSDate *_lastServerDisableDate;
    NSObject<OS_dispatch_queue> *_cacheQueue;
    NSString *_disableStatusPath;
    HttpdnsRequestTestHelper *_testHelper;
}

+ (void)configureServerIPsAndResetActivatedIPTime;
+ (void)initialize;
@property(retain, nonatomic) HttpdnsRequestTestHelper *testHelper; // @synthesize testHelper=_testHelper;
@property(copy, nonatomic) NSString *disableStatusPath; // @synthesize disableStatusPath=_disableStatusPath;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *cacheQueue; // @synthesize cacheQueue=_cacheQueue;
@property(retain, nonatomic) NSDate *lastServerDisableDate; // @synthesize lastServerDisableDate=_lastServerDisableDate;
@property(nonatomic, getter=isServerDisable) _Bool serverDisable; // @synthesize serverDisable=_serverDisable;
- (void).cxx_destruct;
- (_Bool)isTimeoutError:(id)arg1 isHTTPS:(_Bool)arg2;
- (void)changeToNextServerIPIfNeededWithError:(id)arg1 fromIPIndex:(long long)arg2 isHTTPS:(_Bool)arg3;
- (_Bool)isDisableToServer;
- (_Bool)isAbleToSniffer;
- (void)setServerDisable:(_Bool)arg1 host:(id)arg2 activatedServerIPIndex:(long long)arg3;
- (void)setServerDisable:(_Bool)arg1 host:(id)arg2;
- (void)snifferIfNeededWithHost:(id)arg1 activatedServerIPIndex:(long long)arg2;
- (void)networkChanged:(id)arg1;
- (void)setPreResolveAfterNetworkChanged:(_Bool)arg1;
- (void)setExpiredIPEnabled:(_Bool)arg1;
- (_Bool)isHostsNumberLimitReached;
- (id)executeRequest:(id)arg1 synchronously:(_Bool)arg2 retryCount:(int)arg3 activatedServerIPIndex:(long long)arg4 error:(id)arg5;
- (id)executeRequest:(id)arg1 synchronously:(_Bool)arg2 retryCount:(int)arg3 activatedServerIPIndex:(long long)arg4;
- (void)canNotResolveHost:(id)arg1 error:(id)arg2 isRetry:(_Bool)arg3 activatedServerIPIndex:(long long)arg4;
- (void)mergeLookupResultToManager:(id)arg1 forHost:(id)arg2;
- (id)addSingleHostAndLookup:(id)arg1 synchronously:(_Bool)arg2;
- (void)addPreResolveHosts:(id)arg1;
- (void)initServerDisableStatus;
- (id)init;

@end

