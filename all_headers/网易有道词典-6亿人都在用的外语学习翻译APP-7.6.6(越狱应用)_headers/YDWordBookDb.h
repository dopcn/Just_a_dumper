//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

@class NSString, WBFMDatabase;

@interface YDWordBookDb : NSObject
{
    NSString *_userSQL;
    NSString *_dbPath;
    WBFMDatabase *_WBDateBase;
}

@property(retain, nonatomic) WBFMDatabase *WBDateBase; // @synthesize WBDateBase=_WBDateBase;
@property(retain, nonatomic) NSString *dbPath; // @synthesize dbPath=_dbPath;
@property(retain, nonatomic) NSString *userSQL; // @synthesize userSQL=_userSQL;
- (void).cxx_destruct;
- (_Bool)canAddOneRemWord;
- (void)markOneRemWordDelFromReviewPlan;
- (void)markOneRemWordAddedToReviewPlan;
- (void)makeRemWordsToReviewPlan;
- (_Bool)carryWordsFromUser:(id)arg1 toUser:(id)arg2;
- (double)intervalForProgress:(int)arg1;
- (id)getChangedRemList;
- (id)getInReviewWords;
- (int)getHourOfDate:(id)arg1;
- (id)nextDay:(int)arg1 hour:(int)arg2 fromDate:(id)arg3;
- (id)next3dayRemindTimeFromDate:(id)arg1;
- (id)scheduleRemindTimeFromDate:(id)arg1 futureRemindRimes:(id)arg2;
- (id)getNeedRemWords:(unsigned long long)arg1;
- (id)calculateRemindTime;
- (void)updateRemindTimeForWords:(id)arg1 remindTimes:(id)arg2;
- (long long)getNeedRemWordsCountInTag:(id)arg1 forUser:(id)arg2 andPreUser:(id)arg3;
- (id)getNeedRemWordsInTag:(id)arg1;
- (id)wordsInReviewPlan:(id)arg1;
- (_Bool)checkHasNoWordInReviewPlan:(id)arg1;
- (_Bool)checkHasWordInReviewPlan:(id)arg1;
- (_Bool)checkAllWordsInReviewPlan:(id)arg1;
- (_Bool)wordInReviewPlan:(id)arg1;
- (_Bool)hasWordsInProgress:(id)arg1;
- (_Bool)setNextProgressForWords:(id)arg1;
- (_Bool)setNextProgressForWord:(id)arg1;
- (_Bool)makeWordInReviewPlan:(id)arg1 withDb:(id)arg2;
- (_Bool)delRemForWordBySyncing:(id)arg1;
- (_Bool)commitSyncingActionList:(id)arg1 forUser:(id)arg2;
- (_Bool)addOrUpdateRemForWordBySyncing:(id)arg1 forUser:(id)arg2;
- (_Bool)setNotRemWords:(id)arg1;
- (_Bool)setNotRemWord:(id)arg1;
- (_Bool)delRemForWords:(id)arg1;
- (_Bool)delRemForWord:(id)arg1;
- (_Bool)addRemForWords:(id)arg1 forUser:(id)arg2;
- (id)dateFromTime:(id)arg1;
- (long long)getNumOfSyncedWordForUser:(id)arg1;
- (void)dealloc;
- (id)getDelList;
- (id)getAddList;
- (id)getTagsForWord:(id)arg1;
- (id)getWordsSortedWithNoTagByDate:(_Bool)arg1 forUser:(id)arg2 andPreUser:(id)arg3;
- (id)getWordsSortedByDate:(_Bool)arg1 withTag:(id)arg2 forUser:(id)arg3 andPreUser:(id)arg4 byPreloading:(_Bool)arg5;
- (unsigned long long)getRemWordSum;
- (unsigned long long)getWordsNumWithNoTagForUser:(id)arg1 andPreUser:(id)arg2;
- (unsigned long long)getWordsNumWithTag:(id)arg1 forUser:(id)arg2 andPreUser:(id)arg3;
- (void)addItem:(id)arg1 toDictionary:(id)arg2 forKey:(id)arg3;
- (id)getFirstCharCategory:(id)arg1;
- (id)getTimeStampForUser:(id)arg1;
- (_Bool)setTimeStamp:(id)arg1 forUser:(id)arg2;
- (id)getRemTimeStampForUser:(id)arg1;
- (_Bool)setRemTimeStamp:(id)arg1 forUser:(id)arg2;
- (_Bool)hasUnSyncedWordsForUser:(id)arg1;
- (id)searchWord:(id)arg1;
- (_Bool)hasWord:(id)arg1;
- (_Bool)hasWord:(id)arg1 withDb:(id)arg2;
- (_Bool)deleteTagsForWords:(id)arg1;
- (_Bool)deleteTag:(id)arg1;
- (_Bool)deleteTagsForWord:(id)arg1;
- (_Bool)addTag:(id)arg1 toWord:(id)arg2 forUser:(id)arg3;
- (_Bool)addWords:(id)arg1 toTag:(id)arg2 forUser:(id)arg3;
- (_Bool)addTags:(id)arg1 toWord:(id)arg2 forUser:(id)arg3;
- (_Bool)updateWordTag:(id)arg1 toTag:(id)arg2;
- (_Bool)addWordTags:(id)arg1 forUser:(id)arg2;
- (id)getAllTags;
- (_Bool)updateSpellTime:(double)arg1 forWord:(id)arg2;
- (double)getSpellTimeForWord:(id)arg1;
- (_Bool)clearTable:(id)arg1;
- (_Bool)delWordsBySyncing:(id)arg1;
- (_Bool)delWordBySyncing:(id)arg1;
- (_Bool)addWordsBySyncing:(id)arg1 forUser:(id)arg2;
- (_Bool)addWordBySyncing:(id)arg1 forUser:(id)arg2;
- (_Bool)clearChangedWordsWithAddList:(id)arg1 andDelList:(id)arg2;
- (_Bool)deleteWords:(id)arg1 forUser:(id)arg2 andPreUser:(id)arg3;
- (_Bool)deleteWord:(id)arg1 forUser:(id)arg2 andPreUser:(id)arg3;
- (_Bool)addWord:(id)arg1 withPhonetic:(id)arg2 andDefinition:(id)arg3 forUser:(id)arg4;
- (id)getStringFromSafeString:(id)arg1;
- (id)getSafeStringForDb:(id)arg1;
- (_Bool)checkString:(id)arg1;
- (id)dateBase;
- (id)initWordBook:(id)arg1;
- (id)initWithFileName:(id)arg1;

@end

