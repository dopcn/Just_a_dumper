//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "CBaseCell.h"

#import "KBTableViewCellProtocol-Protocol.h"
#import "UIGestureRecognizerDelegate-Protocol.h"
#import "UIWebViewDelegate-Protocol.h"

@class NSString, QNHttpBridge, QNSecureHTMLContentWebView, TGJSBridge, UIImageView, UIScrollView;
@protocol QNWebviewCellDelegate;

@interface CWebViewCell : CBaseCell <UIGestureRecognizerDelegate, UIWebViewDelegate, KBTableViewCellProtocol>
{
    QNHttpBridge *_httpBridge;
    TGJSBridge *_jsBridge;
    NSString *_idStr;
    NSString *_url;
    UIImageView *_shortcut;
    _Bool _needValidateTheme;
    _Bool _needReloadWebView;
    _Bool _isWebViewReady;
    _Bool _isWebviewLoaded;
    _Bool _isCellError;
    _Bool _shouldUseSecureHTMLTransfer;
    UIScrollView *_scrollView;
    id <QNWebviewCellDelegate> _delegate;
    QNSecureHTMLContentWebView *_webView;
}

+ (double)heightForData:(id)arg1 width:(double)arg2 context:(id)arg3;
+ (id)reuseIdentifierForData:(id)arg1;
+ (float)getCellHeight;
+ (id)do_reuseIdentifierForItem:(id)arg1;
@property(nonatomic) _Bool shouldUseSecureHTMLTransfer; // @synthesize shouldUseSecureHTMLTransfer=_shouldUseSecureHTMLTransfer;
@property(retain, nonatomic) QNSecureHTMLContentWebView *webView; // @synthesize webView=_webView;
@property(retain, nonatomic) UIImageView *shortcut; // @synthesize shortcut=_shortcut;
@property(retain, nonatomic) QNHttpBridge *httpBridge; // @synthesize httpBridge=_httpBridge;
@property(copy, nonatomic) NSString *url; // @synthesize url=_url;
@property(copy, nonatomic) NSString *idStr; // @synthesize idStr=_idStr;
@property(nonatomic) __weak id <QNWebviewCellDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) UIScrollView *scrollView; // @synthesize scrollView=_scrollView;
- (void).cxx_destruct;
- (void)jsBridge:(id)arg1 onWebCellUIChangedWithUserInfo:(id)arg2 fromWebView:(id)arg3;
- (void)jsBridge:(id)arg1 onWebCellErrorWithUserInfo:(id)arg2 fromWebView:(id)arg3;
- (void)jsBridge:(id)arg1 onWebCellReadyWithUserInfo:(id)arg2 fromWebView:(id)arg3;
- (void)jsBridge:(id)arg1 postWithUserInfo:(id)arg2 fromWebView:(id)arg3;
- (void)setAlpha:(double)arg1;
- (void)layoutWithData:(id)arg1 context:(id)arg2;
- (void)onWebCellReady;
- (void)cleanShortcut;
- (id)doSaveShortcut;
- (void)saveShortcut;
- (void)onWebCellError;
- (void)webView:(id)arg1 didFailLoadWithError:(id)arg2;
- (void)webViewDidFinishLoad:(id)arg1;
- (void)p_injectNativeJs;
- (void)layoutCell:(id)arg1 row:(long long)arg2 isLastRow:(_Bool)arg3 isNoPicMode:(_Bool)arg4 context:(id)arg5;
- (void)p_tryReloadWebView;
- (void)p_doReloadWebView;
- (_Bool)p_showSnapshot:(id)arg1;
- (void)p_resetNeedReloadFlag;
- (id)p_getValidUrlString:(id)arg1;
- (_Bool)needLayoutForItem:(id)arg1;
- (void)themeChanged:(long long)arg1;
- (void)handelLoginStatusChanged:(id)arg1;
- (void)onStarSignDidChanged:(id)arg1;
- (void)handelChannelDidRefreshDada:(id)arg1;
- (void)handelChannelDidDisappear:(id)arg1;
- (void)handelChannelDidAppear:(id)arg1;
- (void)dealloc;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

