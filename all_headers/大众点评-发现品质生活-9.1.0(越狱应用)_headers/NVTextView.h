//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <UIKit/UIView.h>

#import "UIScrollViewDelegate-Protocol.h"
#import "UITextInputTraits-Protocol.h"
#import "UITextViewDelegate-Protocol.h"

@class NSString, NVPageControl, UIBarButtonItem, UIColor, UIFont, UIImageView, UILabel, UIScrollView, UITextView, UIToolbar;
@protocol NVTextViewDelegate;

@interface NVTextView : UIView <UITextInputTraits, UITextViewDelegate, UIScrollViewDelegate>
{
    UIImageView *backgroundView;
    UITextView *contentInput;
    UILabel *placeholderLabel;
    _Bool _showToolbar;
    UILabel *toolbarLabel;
    UIBarButtonItem *toolbarButton;
    UIBarButtonItem *switchKeyboardButton;
    UIScrollView *scrollView;
    NVPageControl *pageControl;
    id <NVTextViewDelegate> delegate;
    double keyboardHeight;
    _Bool canShowToolbar;
    _Bool canShowEmojiKeyboard;
    long long emojiIndex;
    _Bool hideBounder;
    _Bool _showEmojiKeyboard;
    UIToolbar *_toolbar;
    struct CGRect contentInputRect;
}

@property(nonatomic) _Bool showEmojiKeyboard; // @synthesize showEmojiKeyboard=_showEmojiKeyboard;
@property(readonly, nonatomic) double keyboardHeight; // @synthesize keyboardHeight;
@property(nonatomic) struct CGRect contentInputRect; // @synthesize contentInputRect;
@property(nonatomic) _Bool canShowEmojiKeyboard; // @synthesize canShowEmojiKeyboard;
@property(retain, nonatomic) UIToolbar *toolbar; // @synthesize toolbar=_toolbar;
@property(nonatomic) _Bool showToolbar; // @synthesize showToolbar=_showToolbar;
@property(nonatomic) __weak id <NVTextViewDelegate> delegate; // @synthesize delegate;
- (void).cxx_destruct;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)awakeFromNib;
- (void)layoutSubviews;
- (void)initial;
@property(nonatomic) _Bool hideBounder; // @synthesize hideBounder;
- (void)hideToolbarButton:(_Bool)arg1;
- (void)setToolbarButtonTarget:(id)arg1 action:(SEL)arg2;
@property(retain, nonatomic) NSString *toolbarText;
- (void)onEmoji:(id)arg1;
@property(retain, nonatomic) NSString *placeholder;
@property(nonatomic, getter=isSecureTextEntry) _Bool secureTextEntry;
- (_Bool)secureTextEntry;
@property(nonatomic) _Bool enablesReturnKeyAutomatically;
@property(nonatomic) long long returnKeyType;
@property(nonatomic) long long keyboardAppearance;
@property(nonatomic) long long keyboardType;
@property(nonatomic) long long autocorrectionType;
@property(nonatomic) long long autocapitalizationType;
- (_Bool)isFirstResponder;
- (_Bool)resignFirstResponder;
- (_Bool)canResignFirstResponder;
- (_Bool)becomeFirstResponder;
- (_Bool)canBecomeFirstResponder;
- (void)scrollRangeToVisible:(struct _NSRange)arg1;
- (_Bool)hasText;
@property(nonatomic) unsigned long long dataDetectorTypes;
@property(nonatomic, getter=isEditable) _Bool editable;
@property(nonatomic) struct _NSRange selectedRange;
- (void)setTextAlignment:(long long)arg1;
- (long long)textAlignment;
@property(retain, nonatomic) UIColor *textColor;
@property(retain, nonatomic) UIFont *font;
@property(copy, nonatomic) NSString *text;
- (void)textViewDidChangeSelection:(id)arg1;
- (void)textViewDidChange:(id)arg1;
- (_Bool)textView:(id)arg1 shouldChangeTextInRange:(struct _NSRange)arg2 replacementText:(id)arg3;
- (void)textViewDidEndEditing:(id)arg1;
- (void)textViewDidBeginEditing:(id)arg1;
- (_Bool)textViewShouldEndEditing:(id)arg1;
- (_Bool)textViewShouldBeginEditing:(id)arg1;
- (void)keyboardWillShown:(id)arg1;
- (void)keyboardWillHidden:(id)arg1;
- (void)changePage:(id)arg1;
- (void)scrollViewDidScroll:(id)arg1;
- (void)showEmojiKeyboard:(_Bool)arg1;
- (void)showToolbarWithKeyboard:(_Bool)arg1;
- (void)animationDidStop:(id)arg1 finished:(id)arg2 context:(void *)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(nonatomic) long long spellCheckingType;
@property(readonly) Class superclass;
@property(copy, nonatomic) NSString *textContentType;

@end

