//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <UIKit/UIView.h>

@class MDRadialProgressLabel, MDRadialProgressTheme;

@interface MDRadialProgressView : UIView
{
    _Bool _clockwise;
    _Bool _isIndeterminateProgress;
    unsigned long long _progressTotal;
    unsigned long long _progressCounter;
    unsigned long long _startingSlice;
    MDRadialProgressTheme *_theme;
    MDRadialProgressLabel *_label;
    CDUnknownBlockType _labelTextBlock;
    unsigned long long _internalPadding;
    unsigned long long _progressCounterTemp;
    MDRadialProgressLabel *_labelTemp;
}

@property(retain, nonatomic) MDRadialProgressLabel *labelTemp; // @synthesize labelTemp=_labelTemp;
@property(nonatomic) unsigned long long progressCounterTemp; // @synthesize progressCounterTemp=_progressCounterTemp;
@property(nonatomic) unsigned long long internalPadding; // @synthesize internalPadding=_internalPadding;
@property(copy, nonatomic) CDUnknownBlockType labelTextBlock; // @synthesize labelTextBlock=_labelTextBlock;
@property(retain, nonatomic) MDRadialProgressLabel *label; // @synthesize label=_label;
@property(retain, nonatomic) MDRadialProgressTheme *theme; // @synthesize theme=_theme;
@property(nonatomic) unsigned long long startingSlice; // @synthesize startingSlice=_startingSlice;
@property(nonatomic) _Bool isIndeterminateProgress; // @synthesize isIndeterminateProgress=_isIndeterminateProgress;
@property(nonatomic) _Bool clockwise; // @synthesize clockwise=_clockwise;
@property(nonatomic) unsigned long long progressCounter; // @synthesize progressCounter=_progressCounter;
@property(nonatomic) unsigned long long progressTotal; // @synthesize progressTotal=_progressTotal;
- (void).cxx_destruct;
- (id)themePropertiesToObserve;
- (void)notifyProgressChange;
- (unsigned long long)accessibilityTraits;
- (void)drawCenter:(struct CGContext *)arg1 withViewSize:(struct CGSize)arg2 andCenter:(struct CGPoint)arg3;
- (void)drawSlicesSeparators:(struct CGContext *)arg1 withViewSize:(struct CGSize)arg2 andCenter:(struct CGPoint)arg3;
- (void)drawArcInContext:(struct CGContext *)arg1 center:(struct CGPoint)arg2 radius:(double)arg3 startAngle:(double)arg4 endAngle:(double)arg5 color:(struct CGColor *)arg6 clockwise:(_Bool)arg7;
- (void)drawSlicesWithRadius:(double)arg1 center:(struct CGPoint)arg2 inContext:(struct CGContext *)arg3;
- (void)drawRect:(struct CGRect)arg1;
- (void)runSpinAnimationOnView:(id)arg1 duration:(double)arg2 rotations:(double)arg3 repeat:(float)arg4;
- (void)stopAnimationForIndeterminateMode;
- (void)startAnimationForIndeterminateMode;
- (void)dealloc;
- (struct CGSize)intrinsicContentSize;
- (void)internalInitWithTheme:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1 andTheme:(id)arg2;
- (id)initWithFrame:(struct CGRect)arg1;

@end

