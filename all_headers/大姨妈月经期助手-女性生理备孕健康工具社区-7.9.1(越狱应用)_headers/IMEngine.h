//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "WKAuthProtocol-Protocol.h"
#import "WKOAuthServiceDelegate-Protocol.h"

@class NSString, OfflineSyncRequestFilter, OpenDatabase, OpenGCDQueue;
@protocol WKAPNSServiceProtocol, WKAuthProtocol, WKCloudSettingServiceProtocol, WKContactServiceProtocol, WKConversationServiceProtocol, WKMessageServiceProtocol, WKProfileServiceProtocol, WKPushServiceProtocol, WKRelationServiceProtocol;

@interface IMEngine : NSObject <WKOAuthServiceDelegate, WKAuthProtocol>
{
    _Bool _profileModuleEnabled;
    id <WKAuthProtocol> _authService;
    id <WKConversationServiceProtocol> _conversationService;
    id <WKMessageServiceProtocol> _messageService;
    id <WKProfileServiceProtocol> _profileService;
    id <WKCloudSettingServiceProtocol> _cloudSettingService;
    id <WKAPNSServiceProtocol> _apnsService;
    id <WKPushServiceProtocol> _pushService;
    id <WKRelationServiceProtocol> _relationService;
    CDUnknownBlockType _databasePicker;
    OpenDatabase *_defaultDatabase;
    OpenGCDQueue *_executionQueue;
    OpenGCDQueue *_callbackQueue;
    OfflineSyncRequestFilter *_syncRequestFilter;
    id <WKContactServiceProtocol> _contactService;
}

+ (long long)environment;
+ (void)setEnvironment:(long long)arg1;
+ (id)userAgent;
+ (id)getUserAgent;
+ (id)customUserAgent;
+ (id)getBizUserAgent;
+ (void)setCustomUserAgent:(id)arg1;
+ (void)setBizUserAgent:(id)arg1;
+ (id)sharedIMEngine;
@property(readonly, nonatomic) id <WKContactServiceProtocol> contactService; // @synthesize contactService=_contactService;
@property(retain, nonatomic) OfflineSyncRequestFilter *syncRequestFilter; // @synthesize syncRequestFilter=_syncRequestFilter;
@property(nonatomic) _Bool profileModuleEnabled; // @synthesize profileModuleEnabled=_profileModuleEnabled;
@property(retain, nonatomic) OpenGCDQueue *callbackQueue; // @synthesize callbackQueue=_callbackQueue;
@property(retain, nonatomic) OpenGCDQueue *executionQueue; // @synthesize executionQueue=_executionQueue;
@property(copy, nonatomic) OpenDatabase *defaultDatabase; // @synthesize defaultDatabase=_defaultDatabase;
@property(copy, nonatomic) CDUnknownBlockType databasePicker; // @synthesize databasePicker=_databasePicker;
@property(readonly, nonatomic) id <WKRelationServiceProtocol> relationService; // @synthesize relationService=_relationService;
@property(readonly, nonatomic) id <WKPushServiceProtocol> pushService; // @synthesize pushService=_pushService;
@property(retain, nonatomic) id <WKAPNSServiceProtocol> apnsService; // @synthesize apnsService=_apnsService;
@property(readonly, nonatomic) id <WKCloudSettingServiceProtocol> cloudSettingService; // @synthesize cloudSettingService=_cloudSettingService;
@property(readonly, nonatomic) id <WKProfileServiceProtocol> profileService; // @synthesize profileService=_profileService;
@property(readonly, nonatomic) id <WKMessageServiceProtocol> messageService; // @synthesize messageService=_messageService;
@property(readonly, nonatomic) id <WKConversationServiceProtocol> conversationService; // @synthesize conversationService=_conversationService;
@property(retain, nonatomic) id <WKAuthProtocol> authService; // @synthesize authService=_authService;
- (void).cxx_destruct;
- (void)autoLoginWillComplete:(_Bool)arg1 loginType:(long long)arg2;
- (void)logoutWillComplete;
- (void)loginSuccess:(long long)arg1 authInfo:(id)arg2 successBlock:(CDUnknownBlockType)arg3;
- (void)lastDatabaseErrorCode:(int *)arg1 extendedErrCode:(int *)arg2 errorMessage:(id *)arg3;
- (void)initNewOfflineSync:(id)arg1;
- (void)initOfflineSync:(id)arg1;
- (void)setWhiteUrls:(id)arg1;
- (void)startLWPWithAppKey:(id)arg1;
- (id)latestUserProfile;
- (id)currentScopeMD5;
- (long long)currentOpenId;
- (id)accessToken;
@property(retain, nonatomic) NSString *deviceID;
- (id)getLWPAppKey;
- (id)latestScopeMD5;
- (long long)latestOpenId;
- (void)setNickname:(id)arg1;
- (id)latestAuthInfo;
- (_Bool)isLogin;
- (id)versionString;
- (void)kickDeviceWithClientType:(long long)arg1 message:(id)arg2 successBlock:(CDUnknownBlockType)arg3 failureBlock:(CDUnknownBlockType)arg4;
- (void)logoutWithCompletion:(CDUnknownBlockType)arg1;
- (void)launchEngineWithOpenId:(long long)arg1 needAutoLogin:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;
- (long long)loginType;
- (void)autoLoginWithCompletion:(CDUnknownBlockType)arg1;
- (void)loginWithDomain:(id)arg1 appKey:(id)arg2 deviceId:(id)arg3 nonce:(id)arg4 timestamp:(long long)arg5 signature:(id)arg6 successBlock:(CDUnknownBlockType)arg7 failureBlock:(CDUnknownBlockType)arg8;
- (void)loginWithAppKey:(id)arg1 domain:(id)arg2 openId:(long long)arg3 refreshToken:(id)arg4 accessToken:(id)arg5 successBlock:(CDUnknownBlockType)arg6 failureBlock:(CDUnknownBlockType)arg7;
- (void)loginBySMSWithOrg:(id)arg1 domain:(id)arg2 appKey:(id)arg3 appSecret:(id)arg4 mobile:(id)arg5 code:(id)arg6 successBlock:(CDUnknownBlockType)arg7 failureBlock:(CDUnknownBlockType)arg8;
- (void)requestSMSWithOrg:(id)arg1 domain:(id)arg2 appKey:(id)arg3 appSecret:(id)arg4 toMobile:(id)arg5 successBlock:(CDUnknownBlockType)arg6 failureBlock:(CDUnknownBlockType)arg7;
- (void)loginWithDomain:(id)arg1 appKey:(id)arg2 openId:(long long)arg3 nonce:(id)arg4 timestamp:(long long)arg5 signature:(id)arg6 successBlock:(CDUnknownBlockType)arg7 failureBlock:(CDUnknownBlockType)arg8;
- (void)loginWithDomain:(id)arg1 appKey:(id)arg2 secretToken:(id)arg3 successBlock:(CDUnknownBlockType)arg4 failureBlock:(CDUnknownBlockType)arg5;
- (void)loginWithOpenId:(long long)arg1 openSecret:(id)arg2 appKey:(id)arg3 appSecret:(id)arg4 orgnizationId:(id)arg5 domain:(id)arg6 successBlock:(CDUnknownBlockType)arg7 failureBlock:(CDUnknownBlockType)arg8;
- (void)registerWithOpenId:(long long)arg1 openSecret:(id)arg2 appKey:(id)arg3 appSecret:(id)arg4 orgnizationId:(id)arg5 domain:(id)arg6 successBlock:(CDUnknownBlockType)arg7 failureBlock:(CDUnknownBlockType)arg8;
- (void)loginSuccessedWithAuthInfo:(id)arg1 successBlock:(CDUnknownBlockType)arg2;
- (void)clearServices;
- (void)loadServices;
- (id)loadDefaultDatabaseWithScope:(id)arg1;
- (id)dbpathForScope:(id)arg1;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

