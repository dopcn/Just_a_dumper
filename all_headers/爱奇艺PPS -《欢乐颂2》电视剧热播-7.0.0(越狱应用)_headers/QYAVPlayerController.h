//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <UIKit/UIViewController.h>

#import "IQYDataLoadManagerDelegate-Protocol.h"
#import "MRAdViewDelegate-Protocol.h"
#import "PlayerControllerDelegate-Protocol.h"
#import "QYAVPlayAdsManagerDelegate-Protocol.h"
#import "QYNetworkHandlerProtocol-Protocol.h"

@class CTCallCenter, CTTelephonyNetworkInfo, IQYTmtsManager, IQYVPlayerManager, IRSdkPlayerTracker, NSArray, NSDate, NSDictionary, NSMutableDictionary, NSMutableString, NSNumber, NSObject, NSString, PlayerController, QYAVPlayAdsManager, QYAVPlayerCallManager, QYAVPlayerDataItem, QYNetworkHandler, UIWindow, UniStatPlayerTracker;
@protocol AVDataDelegate, OS_dispatch_source, QYAVPlayerDelegate;

@interface QYAVPlayerController : UIViewController <IQYDataLoadManagerDelegate, PlayerControllerDelegate, QYAVPlayAdsManagerDelegate, QYNetworkHandlerProtocol, MRAdViewDelegate>
{
    IQYTmtsManager *_getPIPplayAlbumManger;
    IQYTmtsManager *_getAlbumPlayManger;
    IQYVPlayerManager *_getPumaPlayManager;
    IQYVPlayerManager *_getPumaForDataManager;
    IQYVPlayerManager *_getNextPumaPlayManager;
    NSString *_albumeID;
    NSString *_tvID;
    NSString *_vID;
    long long _currentRes;
    long long _lastAirPlayRes;
    NSMutableDictionary *_dataDictionary;
    NSDictionary *_nextDictionary;
    long long _cacheNum;
    _Bool _isLocalPlayForErrorCode;
    IRSdkPlayerTracker *_irVideoTracker;
    UniStatPlayerTracker *_uniStatPlayerTracker;
    NSString *_playerUA;
    int curPlayerState;
    NSObject<OS_dispatch_source> *_playTimer;
    QYAVPlayAdsManager *_adsManager;
    _Bool _isShowedNextTip;
    QYNetworkHandler *_qyNetwokHandle;
    _Bool _recordCurPlayState;
    _Bool isMidADPlaying;
    _Bool isShowFirstFrame;
    double _totalDuration;
    float _adTotalTime;
    NSMutableString *seekLoadTImes;
    NSMutableString *natureLoadTImes;
    _Bool _lastFileType;
    _Bool _isNeedBecomeActiveWakeupPuma;
    _Bool _isMute;
    double _airPlayPlayTime;
    long long _vrPlayTime;
    int _playerType;
    long long _free3GPayType;
    long long _videoDecoderTypeForPuma;
    long long _audioDecoderTypeForPuma;
    double captureTime;
    _Bool isCaptureShowPausePuma;
    long long _maxPreloadTaskNum;
    _Bool _isResTypeChanged;
    _Bool _isprv;
    _Bool _swithRestypeForDanmu;
    _Bool _autoJump;
    _Bool _autoPlayNext;
    _Bool _showWaterMark;
    _Bool _isRetryVplayData;
    _Bool _isLocalFile;
    _Bool _isLocalDownloadingFile;
    _Bool _playerIsFront;
    _Bool _slideFlag;
    _Bool _loadFinish;
    _Bool _shoulAutoPlay;
    _Bool _shouAutoPlay2;
    _Bool _isRequestAd;
    _Bool _autoPlay;
    _Bool _isNextDictonaryRequesting;
    _Bool _isFullScreen;
    _Bool _isPlayError;
    _Bool _isPumaUploadLog;
    _Bool _isTransformed;
    _Bool _isQsvPlay;
    _Bool _isOnstart;
    _Bool _isChangedResType;
    _Bool _isqiyiproduce;
    _Bool _is_zb;
    _Bool _isShowRightBottom;
    _Bool _isearphone;
    _Bool _isbroadcastSupportReplay;
    _Bool _isReplayBroadcast;
    _Bool _isEPGClosed;
    _Bool _needReopenFromNetChange;
    _Bool _isUsedVRModeOncePlay;
    _Bool _history_write;
    _Bool _history_read;
    _Bool _needVV;
    _Bool _noWifiStartPlay;
    _Bool _isUsePumaHardDec;
    _Bool _isUsePumaP2P;
    _Bool _showKadun;
    _Bool _isMRFailed;
    _Bool _isPlayerStop;
    _Bool _isKeepAlive;
    _Bool _isKeepAliveBingfa;
    _Bool _isdolby;
    int _coreKernelType;
    int _timeout;
    int _requestState;
    int _from;
    float _p_start;
    float _p_end;
    int _loadState;
    float _playStartTime;
    int _currentAVPlayerType;
    int _tryAndSeeType;
    int _nativeAdId;
    PlayerController *_pumaPlayerCtrl;
    NSString *_lastRequestSign;
    UIWindow *_mirroredScreenWindow;
    NSString *_watermarkImageName1;
    NSString *_watermarkImageName2;
    NSString *_watermarkImageName3;
    NSString *_switchDanmu;
    CTCallCenter *_callCenter;
    CTTelephonyNetworkInfo *_simInfo;
    NSDate *_baozhangTime;
    id <QYAVPlayerDelegate> _controller;
    id <AVDataDelegate> _delegate;
    NSNumber *_adOpenType;
    NSString *_fromSubType;
    NSString *_resType;
    NSString *_assignRes;
    NSArray *_resInfo;
    NSString *_url;
    NSDictionary *_error;
    NSDictionary *_lastErrorCode;
    long long _adType;
    double _screenScale;
    long long _preloadTime;
    long long _apiLoadtime;
    NSMutableDictionary *_otherLogs;
    NSMutableDictionary *_vvlogDic;
    long long _realPlayTime;
    long long _ctnCount;
    long long _ctnTime;
    NSDate *_currentDateOnStart;
    NSString *_localPlayErrorCode;
    long long _startPlayTime;
    NSMutableDictionary *_airPlayInfo;
    NSArray *_subtitleLanguagesArray;
    long long _ad_id;
    NSString *_ad_url;
    long long _broadcastStartTime;
    long long _broadcastEndTime;
    long long _broadcastServerTime;
    QYAVPlayerDataItem *_playerDataItem;
    NSString *_ppVideoType;
    NSDictionary *_nextTvDic;
    NSString *_history_write_delay;
    NSString *_liveFrom;
    NSArray *_videoVIPTypeList;
    long long _callState;
    NSString *_childId;
    long long _saveRealPlayTime;
    long long _saveVRPlayTime;
    NSString *_tuneType;
    QYAVPlayerCallManager *_callManager;
    unsigned long long _videoPlayType;
    NSString *_isFan;
    NSMutableDictionary *_preloadTaskDic;
    NSMutableDictionary *_bufferRequestDic;
}

+ (void)closeAirPlayPlayer;
+ (id)sortResType:(id)arg1;
+ (int)clearCache;
+ (_Bool)isAirPlayActive;
+ (id)getQYPlayerAVLibVersion;
+ (id)sortAirplayRes:(id)arg1;
@property(retain, nonatomic) NSMutableDictionary *bufferRequestDic; // @synthesize bufferRequestDic=_bufferRequestDic;
@property(retain, nonatomic) NSMutableDictionary *preloadTaskDic; // @synthesize preloadTaskDic=_preloadTaskDic;
@property(copy, nonatomic) NSString *isFan; // @synthesize isFan=_isFan;
@property(nonatomic) unsigned long long videoPlayType; // @synthesize videoPlayType=_videoPlayType;
@property(retain, nonatomic) QYAVPlayerCallManager *callManager; // @synthesize callManager=_callManager;
@property(copy, nonatomic) NSString *tuneType; // @synthesize tuneType=_tuneType;
@property(nonatomic) long long saveVRPlayTime; // @synthesize saveVRPlayTime=_saveVRPlayTime;
@property(nonatomic) long long saveRealPlayTime; // @synthesize saveRealPlayTime=_saveRealPlayTime;
@property(nonatomic) _Bool isdolby; // @synthesize isdolby=_isdolby;
@property(copy, nonatomic) NSString *childId; // @synthesize childId=_childId;
@property(nonatomic) long long callState; // @synthesize callState=_callState;
@property(nonatomic) _Bool isKeepAliveBingfa; // @synthesize isKeepAliveBingfa=_isKeepAliveBingfa;
@property(nonatomic) _Bool isKeepAlive; // @synthesize isKeepAlive=_isKeepAlive;
@property(nonatomic) _Bool isPlayerStop; // @synthesize isPlayerStop=_isPlayerStop;
@property(nonatomic) _Bool isMRFailed; // @synthesize isMRFailed=_isMRFailed;
@property(nonatomic) _Bool showKadun; // @synthesize showKadun=_showKadun;
@property(nonatomic) _Bool isUsePumaP2P; // @synthesize isUsePumaP2P=_isUsePumaP2P;
@property(nonatomic) _Bool isUsePumaHardDec; // @synthesize isUsePumaHardDec=_isUsePumaHardDec;
@property(retain, nonatomic) NSArray *videoVIPTypeList; // @synthesize videoVIPTypeList=_videoVIPTypeList;
@property(nonatomic) int nativeAdId; // @synthesize nativeAdId=_nativeAdId;
@property(copy, nonatomic) NSString *liveFrom; // @synthesize liveFrom=_liveFrom;
@property(nonatomic) int tryAndSeeType; // @synthesize tryAndSeeType=_tryAndSeeType;
@property(nonatomic) _Bool noWifiStartPlay; // @synthesize noWifiStartPlay=_noWifiStartPlay;
@property(nonatomic) _Bool needVV; // @synthesize needVV=_needVV;
@property(copy, nonatomic) NSString *history_write_delay; // @synthesize history_write_delay=_history_write_delay;
@property(nonatomic) _Bool history_read; // @synthesize history_read=_history_read;
@property(nonatomic) _Bool history_write; // @synthesize history_write=_history_write;
@property(retain, nonatomic) NSDictionary *nextTvDic; // @synthesize nextTvDic=_nextTvDic;
@property(copy, nonatomic) NSString *ppVideoType; // @synthesize ppVideoType=_ppVideoType;
@property(nonatomic) _Bool isUsedVRModeOncePlay; // @synthesize isUsedVRModeOncePlay=_isUsedVRModeOncePlay;
@property(nonatomic) _Bool needReopenFromNetChange; // @synthesize needReopenFromNetChange=_needReopenFromNetChange;
@property(retain, nonatomic) QYAVPlayerDataItem *playerDataItem; // @synthesize playerDataItem=_playerDataItem;
@property(nonatomic) _Bool isEPGClosed; // @synthesize isEPGClosed=_isEPGClosed;
@property(nonatomic) _Bool isReplayBroadcast; // @synthesize isReplayBroadcast=_isReplayBroadcast;
@property(nonatomic) _Bool isbroadcastSupportReplay; // @synthesize isbroadcastSupportReplay=_isbroadcastSupportReplay;
@property(nonatomic) long long broadcastServerTime; // @synthesize broadcastServerTime=_broadcastServerTime;
@property(nonatomic) long long broadcastEndTime; // @synthesize broadcastEndTime=_broadcastEndTime;
@property(nonatomic) long long broadcastStartTime; // @synthesize broadcastStartTime=_broadcastStartTime;
@property(copy, nonatomic) NSString *ad_url; // @synthesize ad_url=_ad_url;
@property(nonatomic) long long ad_id; // @synthesize ad_id=_ad_id;
@property(nonatomic) _Bool isearphone; // @synthesize isearphone=_isearphone;
@property(retain, nonatomic) NSArray *subtitleLanguagesArray; // @synthesize subtitleLanguagesArray=_subtitleLanguagesArray;
@property(readonly, nonatomic) int currentAVPlayerType; // @synthesize currentAVPlayerType=_currentAVPlayerType;
@property(retain, nonatomic) NSMutableDictionary *airPlayInfo; // @synthesize airPlayInfo=_airPlayInfo;
@property(nonatomic) _Bool isShowRightBottom; // @synthesize isShowRightBottom=_isShowRightBottom;
@property(nonatomic) _Bool is_zb; // @synthesize is_zb=_is_zb;
@property(nonatomic) _Bool isqiyiproduce; // @synthesize isqiyiproduce=_isqiyiproduce;
@property(nonatomic) _Bool isChangedResType; // @synthesize isChangedResType=_isChangedResType;
@property(nonatomic) long long startPlayTime; // @synthesize startPlayTime=_startPlayTime;
@property(nonatomic) _Bool isOnstart; // @synthesize isOnstart=_isOnstart;
@property(nonatomic) _Bool isQsvPlay; // @synthesize isQsvPlay=_isQsvPlay;
@property(nonatomic) _Bool isTransformed; // @synthesize isTransformed=_isTransformed;
@property(copy, nonatomic) NSString *localPlayErrorCode; // @synthesize localPlayErrorCode=_localPlayErrorCode;
@property(nonatomic) _Bool isPumaUploadLog; // @synthesize isPumaUploadLog=_isPumaUploadLog;
@property(nonatomic) _Bool isPlayError; // @synthesize isPlayError=_isPlayError;
@property(retain, nonatomic) NSDate *currentDateOnStart; // @synthesize currentDateOnStart=_currentDateOnStart;
@property(nonatomic) long long ctnTime; // @synthesize ctnTime=_ctnTime;
@property(nonatomic) long long ctnCount; // @synthesize ctnCount=_ctnCount;
@property(nonatomic) long long realPlayTime; // @synthesize realPlayTime=_realPlayTime;
@property(retain, nonatomic) NSMutableDictionary *vvlogDic; // @synthesize vvlogDic=_vvlogDic;
@property(retain, nonatomic) NSMutableDictionary *otherLogs; // @synthesize otherLogs=_otherLogs;
@property(nonatomic) long long apiLoadtime; // @synthesize apiLoadtime=_apiLoadtime;
@property(nonatomic) long long preloadTime; // @synthesize preloadTime=_preloadTime;
@property(nonatomic) _Bool isFullScreen; // @synthesize isFullScreen=_isFullScreen;
@property(nonatomic) double screenScale; // @synthesize screenScale=_screenScale;
@property(nonatomic) _Bool isNextDictonaryRequesting; // @synthesize isNextDictonaryRequesting=_isNextDictonaryRequesting;
@property(nonatomic) long long adType; // @synthesize adType=_adType;
@property(nonatomic) _Bool autoPlay; // @synthesize autoPlay=_autoPlay;
@property(nonatomic) _Bool isRequestAd; // @synthesize isRequestAd=_isRequestAd;
@property(nonatomic) _Bool shouAutoPlay2; // @synthesize shouAutoPlay2=_shouAutoPlay2;
@property(nonatomic) _Bool shoulAutoPlay; // @synthesize shoulAutoPlay=_shoulAutoPlay;
@property(retain, nonatomic) NSDictionary *lastErrorCode; // @synthesize lastErrorCode=_lastErrorCode;
@property(retain, nonatomic) NSDictionary *error; // @synthesize error=_error;
@property(readonly, nonatomic) _Bool loadFinish; // @synthesize loadFinish=_loadFinish;
@property(readonly, nonatomic) float playStartTime; // @synthesize playStartTime=_playStartTime;
@property(nonatomic) _Bool slideFlag; // @synthesize slideFlag=_slideFlag;
@property(retain, nonatomic) NSString *url; // @synthesize url=_url;
@property(readonly, nonatomic) int loadState; // @synthesize loadState=_loadState;
@property(readonly, nonatomic) _Bool playerIsFront; // @synthesize playerIsFront=_playerIsFront;
@property(nonatomic) _Bool isLocalDownloadingFile; // @synthesize isLocalDownloadingFile=_isLocalDownloadingFile;
@property(nonatomic) _Bool isLocalFile; // @synthesize isLocalFile=_isLocalFile;
@property(readonly, nonatomic) float p_end; // @synthesize p_end=_p_end;
@property(readonly, nonatomic) float p_start; // @synthesize p_start=_p_start;
@property(retain, nonatomic) NSArray *resInfo; // @synthesize resInfo=_resInfo;
@property(copy, nonatomic) NSString *assignRes; // @synthesize assignRes=_assignRes;
@property(retain, nonatomic) NSString *resType; // @synthesize resType=_resType;
@property(copy, nonatomic) NSString *fromSubType; // @synthesize fromSubType=_fromSubType;
@property(readonly, nonatomic) int from; // @synthesize from=_from;
@property(nonatomic) int requestState; // @synthesize requestState=_requestState;
@property(retain, nonatomic) NSNumber *adOpenType; // @synthesize adOpenType=_adOpenType;
@property(retain, nonatomic) NSMutableDictionary *dataDictionary; // @synthesize dataDictionary=_dataDictionary;
@property(nonatomic) _Bool isRetryVplayData; // @synthesize isRetryVplayData=_isRetryVplayData;
@property(nonatomic) _Bool showWaterMark; // @synthesize showWaterMark=_showWaterMark;
@property(nonatomic) _Bool autoPlayNext; // @synthesize autoPlayNext=_autoPlayNext;
@property(nonatomic) _Bool autoJump; // @synthesize autoJump=_autoJump;
@property(nonatomic) int timeout; // @synthesize timeout=_timeout;
@property(nonatomic) __weak id <AVDataDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) __weak id <QYAVPlayerDelegate> controller; // @synthesize controller=_controller;
@property(retain, nonatomic) NSDate *baozhangTime; // @synthesize baozhangTime=_baozhangTime;
@property(retain, nonatomic) CTTelephonyNetworkInfo *simInfo; // @synthesize simInfo=_simInfo;
@property(retain, nonatomic) CTCallCenter *callCenter; // @synthesize callCenter=_callCenter;
@property(nonatomic) _Bool swithRestypeForDanmu; // @synthesize swithRestypeForDanmu=_swithRestypeForDanmu;
@property(retain, nonatomic) NSString *switchDanmu; // @synthesize switchDanmu=_switchDanmu;
@property(retain, nonatomic) NSString *watermarkImageName3; // @synthesize watermarkImageName3=_watermarkImageName3;
@property(retain, nonatomic) NSString *watermarkImageName2; // @synthesize watermarkImageName2=_watermarkImageName2;
@property(retain, nonatomic) NSString *watermarkImageName1; // @synthesize watermarkImageName1=_watermarkImageName1;
@property(nonatomic) _Bool isprv; // @synthesize isprv=_isprv;
@property(nonatomic) int coreKernelType; // @synthesize coreKernelType=_coreKernelType;
@property(nonatomic) _Bool isResTypeChanged; // @synthesize isResTypeChanged=_isResTypeChanged;
@property(retain, nonatomic) UIWindow *mirroredScreenWindow; // @synthesize mirroredScreenWindow=_mirroredScreenWindow;
@property(retain, nonatomic) NSString *lastRequestSign; // @synthesize lastRequestSign=_lastRequestSign;
@property(retain, nonatomic) PlayerController *pumaPlayerCtrl; // @synthesize pumaPlayerCtrl=_pumaPlayerCtrl;
- (void).cxx_destruct;
- (void)startMediaType:(int)arg1;
- (void)enterForegoundForPuma:(id)arg1;
- (void)enterBackgoundForPuma:(id)arg1;
- (void)becameActiveForPuma:(id)arg1;
- (void)resignActiveForPuma:(id)arg1;
- (void)addIndependentObserverForAppState;
- (void)sendNativeAdVideoStopPingback;
- (void)pumaDeletePreloadTaskByTvId:(id)arg1;
- (void)removePumaPreloadTaskWithArray:(id)arg1;
- (long long)getStartTimeForPreloadWithTvId:(id)arg1 startTime:(double)arg2;
- (void)startPumaPreloadTaskWithArray:(id)arg1;
- (void)updatePreloadState;
- (void)startNewPreloadTaskByNewTaskIDArray:(id)arg1;
- (id)orderTasksNotInPreloadPoolBy:(id)arg1 withAllNewTaskArr:(id)arg2;
- (void)cleanPreloadPoolIfIsFullByAllTaskIDArray:(id)arg1;
- (_Bool)isValidPreloadDataItem:(id)arg1;
- (void)addAllTasksToPreloadPoolWithNewPlayDataList:(id)arg1 usingAllTaskIDArray:(id)arg2 newTaskIDArray:(id)arg3;
- (void)preloadPlayDataList:(id)arg1;
- (void)cleanAllPreloadTasks;
- (_Bool)isNativeAdVideo;
- (_Bool)shouldShowFinishReplayCover;
- (void)addSIMCardObserver;
- (id)getNetStatusForPumaPlayer;
- (_Bool)shouldReopenPlayer;
- (void)onGotAudioData:(int)arg1 data:(void *)arg2 length:(int)arg3 pts:(double)arg4 video_pts:(double)arg5;
- (void)setVolume:(int)arg1;
- (void)setPlayerBuffer:(int)arg1;
- (void)setPlayerGetVoice;
- (void)endPlayFinish:(_Bool)arg1;
- (float)totalDuration;
- (float)adTotalTime;
- (_Bool)getResLImitFreeFlag;
- (_Bool)getLiveDolbyFlag;
- (void)callNotify:(id)arg1;
- (long long)getSeekTimeByTvid:(id)arg1 isLocal:(_Bool)arg2;
- (void)startOrStopVRShowVV:(_Bool)arg1;
- (_Bool)isSimCardInside;
- (void)updateNextTvDic;
- (void)OnVideoRenderAreaChanged;
- (void)setPlayerFrame:(struct CGRect)arg1;
- (void)endDolbyTryWithAudiotrack:(id)arg1;
- (void)changePlayerModeByType:(int)arg1;
- (void)changePlayerMultiPlaySpeed:(int)arg1;
- (id)getCurTaId;
- (void)setJustLookAtHerState:(_Bool)arg1 taId:(id)arg2;
- (id)getMovieJSON;
- (void)changePlayerGyroEnabled:(_Bool)arg1;
- (void)changeOverallViewAngle:(double)arg1 y:(double)arg2 z:(double)arg3 scale:(double)arg4;
- (void)changePlayerRenderEffectBy:(int)arg1;
- (_Bool)isPlayFromReplayBtn;
- (void)systemPlayerUpdateCurrentClarity:(long long)arg1;
- (_Bool)isSystemPlayer;
- (double)getAirplayTime;
- (void)setLiveMessage:(int)arg1 msg_params:(id)arg2;
- (void)SetMute:(_Bool)arg1;
- (void)sendAdsCreativePingbackWithAdId:(unsigned int)arg1 event:(int)arg2 index:(int)arg3 url:(id)arg4;
- (void)sendAdsCreativeLoadingPingbackWithAdId:(long long)arg1 url:(id)arg2;
- (void)deletePumaPlayController;
- (long long)getEPGServerTime;
- (_Bool)shoulAutoPlay:(id)arg1;
- (void)airplayActiveNotification:(id)arg1;
- (void)taiwanPlayError:(id)arg1;
- (void)retryLogin;
- (int)GetCurrentSubtitleLanguage;
- (void)SwitchSubtitle:(int)arg1;
- (void)resetAirplayInfo;
- (_Bool)getIsShowRightBottom;
- (_Bool)getIsqiyizb;
- (_Bool)getIsqiyiproduce;
- (id)getOfflineInstance;
- (void)updateVVLogIsDolby:(_Bool)arg1;
- (_Bool)getLocalFileFlag;
- (_Bool)getPlayerInstanceDolbyState;
- (long long)getStartPlayTime;
- (struct CGRect)playAreaFrame;
- (struct CGSize)pumaVideoSize;
- (void)setCdnToken;
- (void)setTelecomParam;
- (void)resetCdnToken;
- (void)recordTestLog:(id)arg1;
- (id)getAlbum_ext_infoForVVlog:(id)arg1;
- (void)updatePlayerWaterByAlbumData;
- (void)setLogByNextDic:(id)arg1;
- (void)setAdSDKStateIsVertical:(_Bool)arg1;
- (void)setAdSDKState;
- (_Bool)isSpecialLocalPlayByItem:(id)arg1;
- (void)updateStateTimeForShow:(long long)arg1;
- (id)getCurrentBitStream;
- (void)updateResByPlayContent;
- (void)updateProgressStartAndEnd;
- (id)getErrorCodeDic;
- (id)getPlayDefaultResList;
- (void)setLocalPlayFlag;
- (int)getCoreType;
- (_Bool)isPumaCorePLayer;
- (void)setLocalPlayTimeoutErrorCode;
- (void)setLocalPlayErrorType:(int)arg1 code:(id)arg2;
- (_Bool)isInBitStreams:(id)arg1 bits:(id)arg2;
- (void)snapShot;
- (id)getVipResInfo;
- (void)showDolbyTurnOnAnimationC;
- (void)showDolbyTurnOnAnimationBWithParamDic:(id)arg1;
- (void)showWatermark;
- (void)setWatermarkHidden:(_Bool)arg1;
- (void)setWatermarkImageName:(id)arg1 image2:(id)arg2 image3:(id)arg3;
- (_Bool)isOnTrySee;
- (id)getPumaLog;
- (void)resetPlayData;
- (void)disableMirroringOnCurrentScreen;
- (void)setupMirroringForScreen:(id)arg1;
- (_Bool)isHDMI;
- (void)handleNotify:(id)arg1;
- (void)screenshotAct:(id)arg1;
- (void)initForHDMI;
- (long long)getLiveRealPlayTimeWithTvid;
- (void)stopRecordLivePlayTimeWithTvid;
- (void)startRecordLivePlayTimeWithTvid;
- (void)onlyStopRecordPlayTime;
- (void)stopRecordPlayTime;
- (void)startRecordPlayTime;
- (void)recordVideoLog:(id)arg1 value:(id)arg2;
- (void)uploadVVlog;
- (void)setPPVideoTime;
- (void)finishedVideoLogRecord;
- (void)uploadBufferlog;
- (id)stringWithCurDate;
- (id)getResolution;
- (_Bool)checkCopyright;
- (id)isVideoLocal:(id)arg1;
- (_Bool)isUGC;
- (_Bool)isVideoBroadcast;
- (void)jumpTitlesTrailer:(_Bool)arg1;
- (void)setPlayStartTime:(float)arg1;
- (void)netStatusChange:(long long)arg1;
- (_Bool)isCanContinueToPlay;
- (void)appsenterForeground:(id)arg1;
- (void)appsenterBackground:(id)arg1;
- (void)resignActive:(id)arg1;
- (void)becameActive:(id)arg1;
- (void)touchIdDidLogin:(id)arg1;
- (void)touchIdWillLogin:(id)arg1;
- (_Bool)isHDMIActive;
- (_Bool)airPlayVideoActive;
- (void)insertPlayHistory:(_Bool)arg1;
- (void)insertPlayHistory;
- (void)closePlayerByTest;
- (void)OnMyMraidNeedClose;
- (void)OnMyMraidClickedPingback:(long long)arg1 Url:(id)arg2;
- (void)OnMyMraidTouched;
- (void)OnMyMraidLoadFailedPingback:(long long)arg1 URL:(id)arg2;
- (void)OnMyMraidLoadCompletePingback:(long long)arg1 Url:(id)arg2;
- (void)close;
- (void)expand:(id)arg1 Width:(int)arg2 Height:(int)arg3 ShouldUseCustomClose:(_Bool)arg4 ShouldLockOrientation:(_Bool)arg5;
- (void)showVideo:(id)arg1;
- (void)open:(id)arg1;
- (void)onFailure:(id)arg1;
- (void)send:(id)arg1;
- (void)onReady:(id)arg1;
- (void)onPlayStuckWithParam:(long long)arg1;
- (void)createMraidView:(id)arg1;
- (void)OnMyMraidPlayEndPingback:(long long)arg1 Url:(id)arg2;
- (void)avAdRemovePingback;
- (void)removeMraidView;
- (void)mrAdViewDidClick;
- (void)mrAdViewDidRemoved;
- (void)showMRContinue;
- (void)AdRemoveWithOutPingback;
- (void)AdRemove;
- (void)AdCreateWithId:(long long)arg1 URL:(id)arg2;
- (void)sendQiXiuPingback:(long long)arg1 adsId:(int)arg2 url:(id)arg3;
- (void)sendReadPingback:(int)arg1 adsId:(int)arg2 url:(id)arg3;
- (void)sendGameBannerPingback:(int)arg1 adsId:(int)arg2 url:(id)arg3;
- (void)sendView_pointAdsPingback:(int)arg1 adsId:(int)arg2 url:(id)arg3;
- (void)onPlayCardShowWithPageId:(unsigned int)arg1 event:(int)arg2;
- (void)onPlayCardShow:(unsigned int)arg1 event:(int)arg2;
- (void)updateAdProgress:(unsigned int)arg1 progress:(unsigned int)arg2;
- (void)sendADPingBack:(unsigned int)arg1 action:(int)arg2 url:(id)arg3 properties:(id)arg4;
- (void)sendADPingBack:(unsigned int)arg1 action:(int)arg2 url:(id)arg3;
- (void)sendTicketAdsPingback:(int)arg1 adsId:(int)arg2 url:(id)arg3;
- (void)sendWebViewLoadPingback:(int)arg1;
- (void)showOrHideAdsCardView:(_Bool)arg1;
- (void)updateAdModel:(id)arg1 modelType:(int)arg2 templateType:(int)arg3;
- (void)showRenderAdsViewWithData:(id)arg1;
- (void)sendPauseAdsPingbackNew:(int)arg1 adsId:(int)arg2 url:(id)arg3;
- (void)updateViewPointAdsItem:(id)arg1;
- (void)updateRenderAdsItem:(id)arg1;
- (void)updateAdsItem:(id)arg1 type:(int)arg2;
- (void)updateCommonOverlayAdsItem:(id)arg1;
- (void)updatePauseAdsItem:(id)arg1;
- (void)onAdTouched;
- (id)adAppleId;
- (int)adClickThroughType;
- (id)adThroughUrl;
- (void)startPumaAirplay;
- (void)pumaAirplayer;
- (void)hiddenDanmuForAirplay;
- (void)showChangeClarityView;
- (void)playLogicTryDolbyWillEnd;
- (void)playLogicPreWatchNoticeStart;
- (void)playLogicDataReady;
- (void)onLiveNetBad;
- (void)onWaiting:(_Bool)arg1;
- (_Bool)isFullScreenModel;
- (void)OnSnapShot:(void *)arg1 width:(unsigned int)arg2 height:(unsigned int)arg3 format:(unsigned int)arg4;
- (void)OnSubtitleChanged:(int)arg1;
- (void)onSubtitleStateChange:(id)arg1 codec_id:(int)arg2 is_inside:(_Bool)arg3 is_success:(_Bool)arg4 is_close:(_Bool)arg5;
- (void)onSubtitle:(id)arg1 subtitle_len:(int)arg2;
- (void)onTrialAndListen:(int)arg1 start_time:(long long)arg2 end_time:(long long)arg3 auth_result:(id)arg4;
- (void)onTryAndSee:(int)arg1 start_time:(long long)arg2 end_time:(long long)arg3 auth_result:(id)arg4;
- (void)onAudioTrackChanged:(id)arg1 to:(id)arg2;
- (void)onAudioTrackChanging:(id)arg1 to:(id)arg2 duration:(long long)arg3;
- (void)onBitStreamChanged:(int)arg1 to:(int)arg2;
- (void)onBitStreamChanging:(int)arg1 to:(int)arg2 duration:(long long)arg3;
- (void)onIsPlayingStateChanged:(_Bool)arg1;
- (_Bool)isAdPlayState;
- (void)updateVideoPlayType:(id)arg1;
- (void)updateHistoryAndVV:(id)arg1;
- (void)onPlayerStateChanged:(int)arg1;
- (id)getPlayerType:(int)arg1;
- (id)getCurrentTVID;
- (id)getVIPAlblumID;
- (void)showPlayTimeLimitView:(id)arg1;
- (void)keepAliveWithBingFaInfo:(id)arg1;
- (void)resetKeepAliveForFengting;
- (void)keepAliveWithInfo:(id)arg1;
- (void)decoderTypeCallback:(id)arg1;
- (void)onDolbyAudioPlayFailed;
- (void)OnEpisodeMessage:(id)arg1;
- (void)epgCallBackWithType:(id)arg1 info:(id)arg2;
- (void)onError:(id)arg1;
- (void)onStart;
- (void)sendSkipAdsPingback;
- (void)AdCallBackNextVIP:(id)arg1;
- (void)advertise:(unsigned int)arg1 dataReady:(id)arg2;
- (void)AdPlayVIP:(id)arg1;
- (void)AdPlayNext:(long long)arg1;
- (void)OnAdLogoViewClose;
- (void)OnAdLogoUrl:(id)arg1;
- (void)OnAdTrueViewWithTime:(int)arg1 andCloseTime:(int)arg2;
- (void)AdplayEnd:(long long)arg1;
- (void)AdPlayBegin:(long long)arg1;
- (long long)panoType;
- (long long)loadingSpeed;
- (float)loadingProgress;
- (void)onAdThroughTouched;
- (id)adThroughUrlAndType;
- (void)login;
- (void)skipVIPAd;
- (void)skipTrueviewAd;
- (void)jumpAd;
- (_Bool)isAdsCanClick;
- (void)updateWaterFrameIsFullMode:(_Bool)arg1;
- (void)setFullScreen:(_Bool)arg1;
- (float)adLeftTime;
- (int)getRealPlayTime;
- (double)playableDuration;
- (double)duration;
- (double)currentPlaybackTime;
- (id)getPlayAudioTracks;
- (id)getCurrentPlayAudioTrack;
- (void)setCurrentAudioTrack:(id)arg1;
- (_Bool)isResLowThanMidlle:(id)arg1;
- (void)setCurrentRes:(id)arg1 resValue:(int)arg2;
- (float)getScale;
- (void)setScreenSize:(float)arg1;
- (void)onSeekSuccess:(long long)arg1;
- (void)removeNextTipView:(long long)arg1;
- (void)seekToTime:(double)arg1;
- (int)getCurrentPlayerState;
- (_Bool)isLoading;
- (_Bool)isPlaying;
- (void)replay;
- (void)retryPlay;
- (void)stop;
- (void)pauseLoad;
- (void)pauseAndStopLoad;
- (void)pause;
- (void)pauseAndRequestAds;
- (id)bitToString:(int)arg1;
- (void)printBitStreamDetailToPlayer;
- (void)play;
- (void)stopPlayer;
- (void)closePlayer;
- (void)updateSlideFlag:(_Bool)arg1;
@property(readonly, nonatomic) _Bool seekFlag;
- (void)setupNextMovie:(id)arg1;
- (void)playMovieWithStrData:(id)arg1;
- (_Bool)isVideoToolBoxUsed;
- (void)createPlayer:(id)arg1 pumaType:(int)arg2 coreType:(int)arg3;
- (_Bool)isPumaCoreUsed;
- (void)handlePlayTime;
- (void)handlePlayerTimerEvent;
- (void)uploadStatistics:(_Bool)arg1;
- (void)openPlayerByQixiuUrl:(id)arg1;
- (void)requestDataForPIPAndPlay;
- (void)openPlayerByDict:(id)arg1;
- (void)checkNextVideo;
- (void)playEnd;
- (void)openPlayerByItem:(id)arg1;
- (void)getStatisticsObject;
- (void)dealloc;
- (void)didReceiveMemoryWarning;
- (void)setPlayerView;
- (void)viewDidLoad;
- (void)setTheLastDataRate;
- (void)initDefaultData;
- (id)initWithPlayerType:(int)arg1;
- (id)init;
- (void)decreasePlayeCount;
- (void)increasePlayeCount;
- (id)getDuration;
- (id)getSpend;
- (id)getProgress:(_Bool)arg1;
- (void)endStatTracker:(_Bool)arg1;
- (void)removeTrackerRecord;
- (void)recordTracker;
- (void)startStatTracker;
- (void)setStatTrackerWithDic:(id)arg1;
- (void)createStatTrackerWithDic:(id)arg1;
- (id)playerUA;
- (void)initStatisticsSdk;
- (_Bool)isHaveAppointedRapidityRate:(long long)arg1;
- (_Bool)isHaveAppointedSmoothRate:(long long)arg1;
- (_Bool)isHaveAppointed720PRate:(long long)arg1;
- (_Bool)isHasNetDefaultRes;
- (void)setAVPlayerNewData:(id)arg1;
- (id)createAlbumByOfflineData:(id)arg1;
- (id)createTvsetByOfflineData:(id)arg1;
- (id)createAlbumByPumaData:(id)arg1;
- (id)createTvsetByPumaData:(id)arg1;
- (void)requestNextPumaPlayInfo:(id)arg1;
- (void)retryForVpalyRequest;
- (void)requestPumaForData:(id)arg1;
- (void)requestPumaForPlay:(id)arg1;
- (id)getPumaDicByAvItem:(id)arg1 isNext:(_Bool)arg2;
- (id)getPumaDicByUrl:(id)arg1 playType:(int)arg2;
- (void)startPumaPlay:(id)arg1;
- (void)checkAndPlayForPuma:(id)arg1;
- (void)requestCurrentPlayData:(id)arg1;
- (void)startPumaPlayForUrl:(id)arg1 playType:(int)arg2;
- (void)startPumaPlayForNetQsv:(id)arg1;
- (void)startPumaPlayForLocalMp4:(id)arg1;
- (void)startPumaPlayForNetMp4:(id)arg1;
- (void)startPumaPlayForQixiu:(id)arg1;
- (id)getResInfoListArray:(id)arg1;
- (id)dic2String:(id)arg1;
- (id)array2String:(id)arg1;
- (_Bool)getQiyiShowRightBottom:(id)arg1;
- (_Bool)getQiyiZbWith:(id)arg1;
- (_Bool)getQiyiProduceWith:(id)arg1;
- (id)getPlayMovieStringWith:(id)arg1;
- (id)getResTypeWith:(id)arg1;
- (id)getHistoryInfo:(id)arg1 videotype:(id)arg2 sourceid:(id)arg3;
- (_Bool)isValidTvId:(id)arg1;
- (id)getvIdWith:(id)arg1;
- (id)getAddHistoryTimeByTvid:(id)arg1;
- (id)getResInfoWith:(id)arg1;
- (_Bool)checkIsHasLocalFile:(id)arg1 tvId:(id)arg2;
- (id)getOfflineTaskByTvid:(id)arg1 isChuanshu:(_Bool)arg2;
- (id)localPlayerUrl:(id)arg1;
- (id)parserForAirPlay:(id)arg1;
- (void)dataLoadManagerFailed:(id)arg1;
- (void)dataLoadManagerFinished:(id)arg1;
- (void)setNextPumaByItem:(id)arg1;
- (void)startSetNextPumaData:(id)arg1;
- (void)requestNextPlayDate:(int)arg1;
- (void)requestAlbumInfoForPIP;
- (void)requestAlbumInfoForPlayWithTvid:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

