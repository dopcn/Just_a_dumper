//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "IMCommonService.h"

@class NSLock, NSMutableDictionary, NSObject;
@protocol OS_dispatch_queue;

@interface IMChatService : IMCommonService
{
    NSObject<OS_dispatch_queue> *messageSendQueue;
    NSObject<OS_dispatch_queue> *messageReceiveQueue;
    NSMutableDictionary *messageGetCallBackStack;
    NSMutableDictionary *messageThumbGetCallBackStack;
    NSLock *imageSendLock;
    NSObject<OS_dispatch_queue> *messageImageQueue;
    NSMutableDictionary *_mgrPublicTextMsgIdCache;
    NSMutableDictionary *_aiServiceRepliedItemCache;
    NSMutableDictionary *_aiServiceReplyEventCache;
}

+ (int)getVoiceTimeLength:(id)arg1;
+ (id)sharedIMChatService;
@property(retain, nonatomic) NSMutableDictionary *aiServiceReplyEventCache; // @synthesize aiServiceReplyEventCache=_aiServiceReplyEventCache;
@property(retain, nonatomic) NSMutableDictionary *aiServiceRepliedItemCache; // @synthesize aiServiceRepliedItemCache=_aiServiceRepliedItemCache;
@property(retain, nonatomic) NSMutableDictionary *mgrPublicTextMsgIdCache; // @synthesize mgrPublicTextMsgIdCache=_mgrPublicTextMsgIdCache;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *messageImageQueue; // @synthesize messageImageQueue;
@property(retain, nonatomic) NSLock *imageSendLock; // @synthesize imageSendLock;
@property(retain, nonatomic) NSMutableDictionary *messageThumbGetCallBackStack; // @synthesize messageThumbGetCallBackStack;
@property(retain, nonatomic) NSMutableDictionary *messageGetCallBackStack; // @synthesize messageGetCallBackStack;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *messageReceiveQueue; // @synthesize messageReceiveQueue;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *messageSendQueue; // @synthesize messageSendQueue;
- (void).cxx_destruct;
- (id)getRecordMessageItemListFromMessageEntityList:(id)arg1 andUserId:(long long)arg2;
- (id)getMessageItemListFromMessageEntityList:(id)arg1 andUserId:(long long)arg2;
- (void)setUserInfoToRecentlyContactItem:(id)arg1;
- (void)setUserInfoToChatListItem:(id)arg1;
- (void)setUserInfoToChatMessageItem:(id)arg1 byUserId:(long long)arg2;
- (long long)getGroupLastMessageIndex:(long long)arg1;
- (id)getRecordMessageItemFromEntity:(id)arg1 andUserId:(long long)arg2;
- (id)getChatMessageItemFromEntity:(id)arg1 andUserId:(long long)arg2;
- (id)getFormatServiceGroupContent:(id)arg1;
- (_Bool)deleteChatListByUserId:(long long)arg1;
- (_Bool)deleteChatMessageByUserId:(long long)arg1;
- (_Bool)setServiceGroupUnreadCountByUserId:(long long)arg1;
- (_Bool)clearNotReadCountByUserId:(long long)arg1;
- (long long)getTotalNotReadCountWithCallBack:(CDUnknownBlockType)arg1;
- (long long)getTotalNotReadCount;
- (long long)getNotReadCountByUserId:(long long)arg1;
- (long long)getTotalNotReadCountWithOutUserId:(long long)arg1;
- (_Bool)setChatListIsTag:(_Bool)arg1 byUserId:(long long)arg2;
- (void)updateChatListForServiceGroup:(id)arg1;
- (_Bool)setChatListIsTop:(_Bool)arg1 byUserId:(long long)arg2;
- (id)searchChatListByKeyWord:(id)arg1;
- (id)getRecentlyContactList;
- (int)getChatListServiceTypeByUserID:(long long)arg1;
- (id)getChatListWithServiceType:(int)arg1;
- (id)getChatListNoServicesGroup;
- (id)getChatList;
- (id)getChatListFriendsAndGroup;
- (id)getChatListItemByUserId:(long long)arg1;
- (void)updateGroupServiceMessage;
- (_Bool)deleteChatMessageByUserId:(long long)arg1 andMessageId:(id)arg2;
- (id)getManagerNameWithUserId:(long long)arg1;
- (id)getUUIDDataFromUUIDString:(id)arg1;
- (_Bool)setChatLinkImageUrl:(id)arg1 byUserId:(long long)arg2 andMessageId:(id)arg3;
- (_Bool)setAIServiceHasTransManager:(_Bool)arg1 byUserId:(long long)arg2 andMessageId:(id)arg3;
- (_Bool)setAIServiceHasTransHuman:(_Bool)arg1 byUserId:(long long)arg2 andMessageId:(id)arg3;
- (_Bool)setAIServiceHasFeedBack:(_Bool)arg1 byUserId:(long long)arg2 andMessageId:(id)arg3;
- (_Bool)updataChatMessageWithKey:(id)arg1 NewValue:(id)arg2 byUserId:(long long)arg3 andMessageId:(id)arg4;
- (_Bool)setICBCNoticeIsGuideClosed:(_Bool)arg1 byUserId:(long long)arg2 andMessageId:(id)arg3;
- (id)searchChatMessageByKeyWord:(id)arg1 andUserId:(long long)arg2 andCount:(int)arg3 andOffSet:(int)arg4;
- (long long)searchChatMessageCountByKeyWord:(id)arg1 andUserId:(long long)arg2;
- (id)getChatMessageListByUserId:(long long)arg1 andMessageType:(int)arg2 andBusinessType:(id)arg3 andKeyWord:(id)arg4 andCount:(int)arg5 andOffSet:(int)arg6;
- (id)getBusinessTypeListByUserId:(long long)arg1 andMessageType:(int)arg2;
- (long long)getChatMessageCountByUserId:(long long)arg1 andMessageType:(int)arg2 andBusinessType:(id)arg3 andKeyWord:(id)arg4;
- (id)getChatMessageListAfterMessageId:(id)arg1 byUserId:(long long)arg2;
- (id)getRecordChatMessageListByUserId:(long long)arg1;
- (id)getImageMessageListByUserId:(long long)arg1 andCount:(int)arg2 andOffSet:(int)arg3;
- (id)getChatMessageListByUserId:(long long)arg1 andMessageType:(int)arg2 andCount:(int)arg3 andOffSet:(int)arg4;
- (long long)getChatMessageCountByUserId:(long long)arg1 andMessageType:(int)arg2;
- (id)getChatMessageListByUserId:(long long)arg1 andCount:(int)arg2 andOffSet:(int)arg3;
- (long long)getChatMessageCountByUserId:(long long)arg1;
- (id)getChatMessageByUserId:(long long)arg1 andMessageId:(id)arg2;
- (_Bool)checkMessageAfterSend:(id)arg1 withErrorType:(int)arg2;
- (_Bool)checkMessageBeforeSend:(id)arg1;
- (_Bool)checkMessageAfterReceive:(id)arg1;
- (_Bool)checkMessageBeforeReceive:(id)arg1 withMessageType:(int)arg2;
- (_Bool)hasExistMessage:(id)arg1;
- (void)onTypingRecieved:(long long)arg1;
- (void)onReadReplyRecieved:(id)arg1;
- (void)onReadReplySent:(id)arg1;
- (void)onReplyReceived:(id)arg1;
- (void)onICBCMessageHaveReceived:(id)arg1 withChatType:(int)arg2;
- (void)onUnKnownTypeICBCMessageReceived:(id)arg1 withChatType:(int)arg2;
- (void)onGroupICBCMessageRecieved:(id)arg1;
- (void)onICBCMessageRecieved:(id)arg1;
- (void)onICBCMessageSent:(id)arg1;
- (void)onVoiceRecieved:(id)arg1;
- (id)insertChatMessageWithitem:(id)arg1 key:(id)arg2 Value:(id)arg3 time:(long long)arg4;
- (void)onVoiceSend:(id)arg1;
- (void)onImageRecieved:(id)arg1;
- (void)onImageThumbRecieved:(id)arg1;
- (void)getImageThumbOnServerByMessageId:(id)arg1 fromUser:(long long)arg2 withCallBack:(CDUnknownBlockType)arg3;
- (id)getImageThumbFromLocalByImageId:(id)arg1 fromUser:(long long)arg2;
- (void)getImageThumbByMessageId:(id)arg1 andImageId:(id)arg2 fromUser:(long long)arg3 withCallBack:(CDUnknownBlockType)arg4;
- (void)onImageIndexRecieved:(id)arg1;
- (void)onImageSent:(id)arg1;
- (void)onTextHaveRecieved:(id)arg1 withChatType:(int)arg2;
- (void)onGroupTextRecieved:(id)arg1;
- (void)onTextRecieved:(id)arg1;
- (void)onTextHaveSent:(id)arg1;
- (void)onGroupTextSent:(id)arg1;
- (void)onTextSent:(id)arg1;
- (void)onGetoffline:(_Bool)arg1;
- (_Bool)insertChatMessage:(id)arg1 byUserId:(long long)arg2 withChatType:(int)arg3;
- (_Bool)insertRecordMessageItemList:(id)arg1 fromUser:(long long)arg2 withChatType:(int)arg3 addNotRead:(_Bool)arg4;
- (_Bool)insertChatMessageList:(id)arg1 fromUser:(long long)arg2 withChatType:(int)arg3 addNotRead:(_Bool)arg4;
- (_Bool)sendLocalMessage:(id)arg1 withMessageType:(int)arg2 withUser:(long long)arg3 fromUser:(long long)arg4 atSendTime:(long long)arg5 withChatType:(int)arg6;
- (_Bool)sendLocalMessage:(id)arg1 withMessageType:(int)arg2 withUser:(long long)arg3 fromUser:(long long)arg4 atSendTime:(long long)arg5;
- (void)getImageOnServerByMessageId:(id)arg1 fromUser:(long long)arg2 withCallBack:(CDUnknownBlockType)arg3;
- (id)getImageFromLocalByImageId:(id)arg1 fromUser:(long long)arg2;
- (void)getImageByMessageId:(id)arg1 andImageId:(id)arg2 fromUser:(long long)arg3 withCallBack:(CDUnknownBlockType)arg4;
- (void)sendTypingToUser:(long long)arg1;
- (void)sendReadReply:(id)arg1 toUser:(long long)arg2;
- (void)reSendMessageEntity:(id)arg1 to:(long long)arg2 withChatType:(int)arg3 andIsUpdate:(_Bool)arg4;
- (void)reSendMessage:(id)arg1 to:(long long)arg2 withChatType:(int)arg3;
- (void)reSendMessage:(id)arg1 toUser:(long long)arg2 withChatType:(int)arg3;
- (void)reSendMessage:(id)arg1 toUser:(long long)arg2;
- (void)reSendSendingMessages;
- (void)clearSendingMessageByUserId:(long long)arg1;
- (void)sendICBCMessage:(id)arg1 toUser:(long long)arg2 withChatType:(int)arg3;
- (void)sendEventMessage:(id)arg1 toUser:(long long)arg2;
- (void)sendPublicMenuClickEvent:(id)arg1 toUser:(long long)arg2;
- (void)sendAIServiceReply:(int)arg1 withMessageId:(id)arg2 toUser:(long long)arg3;
- (void)sendNotSupportReply:(id)arg1 to:(long long)arg2;
- (void)sendNotSupportReply:(id)arg1 toUser:(long long)arg2;
- (void)sendICBCMessagerGuideForwardText:(id)arg1 toUser:(long long)arg2;
- (void)sendBubbleLinkToServer:(id)arg1 to:(long long)arg2 withChatType:(int)arg3;
- (void)sendBubbleLink:(id)arg1 to:(long long)arg2 withChatType:(int)arg3;
- (void)sendBubbleLink:(id)arg1 toUser:(long long)arg2 withChatType:(int)arg3;
- (void)sendBubbleLink:(id)arg1 toUser:(long long)arg2;
- (void)sendLocationToServer:(id)arg1 to:(long long)arg2 withChatType:(int)arg3;
- (void)sendLocation:(id)arg1 to:(long long)arg2 withChatType:(int)arg3;
- (void)sendLocation:(id)arg1 toUser:(long long)arg2 withChatType:(int)arg3;
- (void)sendLocation:(id)arg1 toUser:(long long)arg2;
- (void)sendLinkToServer:(id)arg1 to:(long long)arg2 withChatType:(int)arg3;
- (void)sendLink:(id)arg1 to:(long long)arg2 withChatType:(int)arg3;
- (void)sendLink:(id)arg1 toUser:(long long)arg2 withChatType:(int)arg3;
- (void)sendLink:(id)arg1 toUser:(long long)arg2;
- (void)sendImageTextToServer:(id)arg1 to:(long long)arg2 withChatType:(int)arg3;
- (void)sendImageText:(id)arg1 to:(long long)arg2 withChatType:(int)arg3;
- (void)sendImageText:(id)arg1 toUser:(long long)arg2 withChatType:(int)arg3;
- (void)sendImageText:(id)arg1 toUser:(long long)arg2;
- (void)sendVoiceToServer:(id)arg1 to:(long long)arg2 withChatType:(int)arg3;
- (void)sendVoice:(id)arg1 to:(long long)arg2 withChatType:(int)arg3;
- (void)sendVoice:(id)arg1 toUser:(long long)arg2 withChatType:(int)arg3;
- (void)sendVoice:(id)arg1 toUser:(long long)arg2;
- (void)sendImageToServer:(id)arg1 to:(long long)arg2 withChatType:(int)arg3;
- (void)sendImage:(id)arg1 to:(long long)arg2 withChatType:(int)arg3;
- (void)sendImage:(id)arg1 toUser:(long long)arg2 withChatType:(int)arg3;
- (void)sendCardToServer:(id)arg1 to:(long long)arg2 withChatType:(int)arg3;
- (void)sendUserCard:(id)arg1 toUser:(long long)arg2 withChatType:(int)arg3;
- (void)sendUserCard:(id)arg1 toUser:(long long)arg2 withChattype:(int)arg3;
- (void)sendUserCard:(id)arg1 toUser:(long long)arg2;
- (void)sendImage:(id)arg1 toUser:(long long)arg2;
- (void)sendMgrPublicTextString:(id)arg1 toUser:(long long)arg2 withChatType:(int)arg3 andResultFlag:(long long)arg4;
- (void)sendMgrPublicText:(id)arg1 toUser:(long long)arg2 withChatType:(int)arg3 andResultFlag:(long long)arg4;
- (_Bool)isMessage:(id)arg1 canBeSentAsMgrPublicTextToUser:(long long)arg2;
- (void)sendPublicText:(id)arg1 toUser:(long long)arg2;
- (void)sendTextToServer:(id)arg1 to:(long long)arg2 withChatType:(int)arg3 andForcePureText:(_Bool)arg4;
- (void)sendText:(id)arg1 to:(long long)arg2 tagUsers:(id)arg3 withChatType:(int)arg4 andForcePureText:(_Bool)arg5;
- (void)forceSendPureText:(id)arg1 toUser:(long long)arg2 withChatType:(int)arg3;
- (void)sendText:(id)arg1 toUser:(long long)arg2 tagUsers:(id)arg3 withChatType:(int)arg4;
- (void)sendText:(id)arg1 toUser:(long long)arg2 tagUsers:(id)arg3;
- (void)sendText:(id)arg1 toUser:(long long)arg2 withChatType:(int)arg3;
- (void)sendText:(id)arg1 toUser:(long long)arg2;
- (void)getOffline;
- (_Bool)initChatWithUserId:(long long)arg1;
- (_Bool)alterTable:(id)arg1;
- (_Bool)checkHasCreateChatTable;
- (_Bool)createTable;

@end

