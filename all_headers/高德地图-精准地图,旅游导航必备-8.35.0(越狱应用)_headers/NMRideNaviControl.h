//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class MPSQueryPoiData, NMRideRouteDataModel, NSDate, NSDictionary, NSMutableArray, NSString;

@interface NMRideNaviControl : NSObject
{
    _Bool _rtbtInitSucceed;
    NSMutableArray *_endPointArray;
    long long _naviModeType;
    int _routeRequestFlag;
    struct tag_RCarLocation _personLocation;
    double _personGPSDir;
    _Bool _canRequest;
    _Bool _requestRoutSucceed;
    _Bool _tbtReceiveRouteSucceed;
    _Bool _isArrived;
    _Bool _isReceiveGPS;
    double _startLon;
    double _startLat;
    double _endLon;
    double _endLat;
    struct ANPoint _endPoint;
    NSString *_endPoiName;
    NSMutableArray *_tbtPathArray;
    NSMutableArray *_passedPathArray;
    long long _lastOffRouteMatch;
    long long _lastPersonMatch;
    NSString *_lastNaviId;
    struct NMRideNaviFrameForRTBT *_pstFrame;
    long long _curNetworkStatus;
    struct tag_RDGNaviInfo _rideNaviInfo;
    struct tag_RNaviGuideItem *_naviGuides;
    int _naviNum;
    struct tag_RNaviStaticInfo *_naviStaticInfo;
    _Bool _rideNaviStart;
    struct tag_RCarLocation _offeRoutMapLoaction;
    long long _offRoutLength;
    double _lastLontitude;
    double _lastLattitude;
    struct ANPoint _reRoutePoint;
    int _calcType;
    int _lastSegNum;
    int _lastPointNum;
    NSMutableArray *_tempPointArr;
    double _lastNaviLat;
    double _lastNaviLon;
    struct ANPoint _selectedStartPoint;
    struct ANPoint _selectedEndPoint;
    _Bool _isExitFootNaviAllTask;
    int _voiceType;
    int _nSelectedRouteIndex;
    int _nRouteCount;
    int _nRouteType;
    int _nEta;
    int _nNaviDistance;
    NSString *_strReRouteInfo;
    MPSQueryPoiData *_endPoiData;
    _Bool _isTrackPosted;
    NSDictionary *_naviDic;
    NSDate *_naviStartTime;
    NSDate *_naviEndTime;
    NSString *_weatherData;
    NSString *_destinationPoiID;
    long long _rideNaviType;
    struct IRTBT *_rtbt;
    NMRideRouteDataModel *_rideRouteDataModel;
    NSString *_naviRouteRequestUUID;
    NSDate *_prevGPSFireTime;
    NSDate *_prevHeadingFireTime;
}

+ (id)rtbtVersion;
@property(nonatomic) _Bool isTrackPosted; // @synthesize isTrackPosted=_isTrackPosted;
@property(copy, nonatomic) NSDate *prevHeadingFireTime; // @synthesize prevHeadingFireTime=_prevHeadingFireTime;
@property(copy, nonatomic) NSDate *prevGPSFireTime; // @synthesize prevGPSFireTime=_prevGPSFireTime;
@property(retain, nonatomic) NSString *naviRouteRequestUUID; // @synthesize naviRouteRequestUUID=_naviRouteRequestUUID;
@property(retain, nonatomic) NMRideRouteDataModel *rideRouteDataModel; // @synthesize rideRouteDataModel=_rideRouteDataModel;
@property(nonatomic) struct IRTBT *rtbt; // @synthesize rtbt=_rtbt;
@property(nonatomic) long long rideNaviType; // @synthesize rideNaviType=_rideNaviType;
@property(copy, nonatomic) NSString *destinationPoiID; // @synthesize destinationPoiID=_destinationPoiID;
@property(copy, nonatomic) NSString *weatherData; // @synthesize weatherData=_weatherData;
@property(retain, nonatomic) NSDate *naviEndTime; // @synthesize naviEndTime=_naviEndTime;
@property(retain, nonatomic) NSDate *naviStartTime; // @synthesize naviStartTime=_naviStartTime;
@property(retain, nonatomic) NSDictionary *naviDic; // @synthesize naviDic=_naviDic;
- (void).cxx_destruct;
- (void)addRerouteInfo;
- (void)handleTrackPostFile:(long long)arg1 urlStrDic:(id)arg2 urlNumDic:(id)arg3;
- (int)getTextFontFromText:(id)arg1;
- (id)getBottomBubbleWithRoadName:(id)arg1 action:(id)arg2 distance:(id)arg3 textType:(long long)arg4;
- (id)getTopBubbleTextWithAction:(id)arg1 distance:(id)arg2 roadName:(id)arg3 textType:(long long)arg4;
- (id)getBottomPromptWithRoadName:(id)arg1 action:(id)arg2 distance:(id)arg3 textType:(long long)arg4;
- (id)getTopPromptTextWithAction:(id)arg1 distance:(id)arg2 roadName:(id)arg3 textType:(long long)arg4;
- (long long)getShowTextType:(int)arg1;
- (id)getCurrentRemainRoutRate;
- (void)naviInfoUpdated;
- (void)updateTempPoint;
- (void)updatePassedRoutPoints;
- (void)updateNaviTempData;
- (id)getCurrentNaviInfo;
- (id)getCurrentRoadName;
- (id)getActionRoadName;
- (int)getNaviInfoIconType;
- (int)getRouteRemainTime;
- (int)getCurSegmentLength;
- (int)getCurSegmentRemainLength;
- (int)getRouteRemainLength;
- (int)getSpliteIdFromRealSegmentId:(int)arg1 split:(int)arg2;
- (int)getSpliteIdFromRealSegmentId:(int)arg1;
- (int)getSpliteIdFromNaviInfo;
- (struct ANPoint)getReroutePoint;
- (struct ANPoint)getEndPoint;
- (long long)getOffRoutLength;
- (int)getEstimateDist;
- (double)getRealMaxSpeed;
- (double)getRealAverageSpeed;
- (int)getRealWalkTime;
- (int)getRealWalkLength;
- (int)getCurPointNum;
- (int)getCurSegNum;
- (int)getPersonMatchStatus;
- (int)getPersonDir;
- (double)getGpsPersonDir;
- (int)getOffeRoutPersonStatus;
- (double)getOffeRoutMapLon;
- (double)getOffeRoutMapLat;
- (long long)getEagleEyeIndex;
- (double)getNaviInfoPersonLon;
- (double)getNaviInfoPersonLat;
- (double)getPersonLon;
- (double)getPersonLat;
- (void)networkStatusChanged:(long long)arg1 newStatus:(long long)arg2;
- (void)checkOffRouteStatus;
- (id)getEndSubPoiID;
- (void)againRequestOnMain;
- (void)reRouteOnMain;
- (void)setArriveStatus;
- (void)rideNaviArriveDestination;
- (void)doPhoneVibrate;
- (void)phoneVibrate;
- (void)EndEmulatorNavi;
- (void)arriveWay;
- (void)requestHTTPWithModuleID:(int)arg1 connectID:(int)arg2 type:(int)arg3 pHead:(char *)arg4 pData:(char *)arg5 dataLength:(int)arg6;
- (void)routRequestPathState:(int)arg1;
- (void)reRoute;
- (void)carLocationChange:(struct tag_RCarLocation)arg1;
- (void)carProjectionChange:(struct tag_RCarLocation)arg1;
- (void)updateNaviInfo:(struct tag_RDGNaviInfo)arg1;
- (void)ttsPlayTextOnMain:(id)arg1;
- (void)ttsPlayText:(id)arg1 soundType:(int)arg2;
- (void)stopAndResetAudioServiceInNavi;
- (void)cancelRouteRequest;
- (void)NetRequestHTTPOnMain:(id)arg1;
- (_Bool)isRouteLengthExceeded;
- (struct tag_RPoiPoint)getNaviEndPoint;
- (void)setNaviEndPoi;
- (void)requestNaviRoute:(long long)arg1;
- (void)failRequestReRout;
- (void)doTimerIntervalRequestRout;
- (void)startRequestRout;
- (_Bool)pushRouteDataToRideNavi:(char *)arg1 dataLength:(int)arg2 routeID:(int)arg3 method:(int)arg4 flag:(int)arg5;
- (void)setDestinationPoiInfo:(id)arg1;
- (_Bool)naviStarting;
- (_Bool)isArrived;
- (long long)getRideNaviType;
- (struct ANPoint)getDestinationWithANPoint;
- (_Bool)requsetRoutDataSucceed;
- (id)getTempPointArray;
- (id)getPassedPathArray;
- (id)getTBTPathArray;
- (_Bool)getSegWtbtIsWalkRoad:(int)arg1;
- (id)getSegWtbtPointArray:(int)arg1;
- (int)getSegWtbtLendth:(int)arg1;
- (int)getSegWtbtNum;
- (double)getSegMapLevelForNavi:(int)arg1;
- (struct ANPoint)getSegMapCenterForNavi:(int)arg1;
- (int)getSegLendth:(int)arg1;
- (_Bool)getSegLineHighlight:(int)arg1;
- (_Bool)getSegSplited:(int)arg1;
- (id)getHawkEyePoints;
- (id)getSamplePoints;
- (_Bool)getTipsStateIsOpen;
- (id)getSegPointArray:(int)arg1;
- (id)getSegHighlightArray:(int)arg1;
- (id)getSegNaviArrow:(int)arg1;
- (id)getSegDictInfo:(int)arg1;
- (struct ANPoint)getPathEndPoint;
- (long long)getSegNum;
- (id)getRideRouteDataModel;
- (id)getRouteAllCoorArray;
- (int)getRouteLength;
- (void)setDestinationWithArray:(id)arg1 method:(int)arg2 flag:(int)arg3;
- (void)setDestinationWithANPoint:(struct ANPoint)arg1 method:(int)arg2 flag:(int)arg3;
- (void)setDestinationWithANPoint:(struct ANPoint)arg1;
- (void)setRequestRouteMethod:(int)arg1 flag:(int)arg2;
- (void)setDestinationName:(id)arg1;
- (void)setStartLon:(double)arg1 lat:(double)arg2;
- (void)setEndPointWithANPoint:(struct ANPoint)arg1;
- (void)setStartPointWithANPoint:(struct ANPoint)arg1;
- (void)setPersonStarLocation;
- (struct CLLocationCoordinate2D)getOffsetFromRealGPSLoaction:(id)arg1;
- (void)locationManager:(id)arg1 didUpdateHeading:(id)arg2;
- (void)locationManager:(id)arg1 didFailWithError:(id)arg2;
- (void)locationManager:(id)arg1 didUpdateRealLocation:(id)arg2;
- (void)resumeNormalMapAccuracy;
- (void)setBackgroundMapAccuracy;
- (void)stopLocateMe;
- (void)removeLocateMe;
- (void)locateMe;
- (void)stopReceivedGPS;
- (void)startReceivedGPS;
- (void)cancelRequestRout;
- (void)setRideNaviModel:(long long)arg1;
- (void)exitRideNaviAllTask;
- (void)destroyRTBTEngine;
- (void)clearNaviStaticInfo;
- (void)feedbackNoRoutPassPoint:(struct CLLocationCoordinate2D)arg1;
- (void)rusumeRideNavi;
- (void)pauseRideNavi;
- (void)stopRideNavi;
- (_Bool)startRideNavi;
- (void)setManagerStatus:(int)arg1;
- (void)initRTBTEngine;
- (void)dealloc;
- (id)init;

@end

