//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

@class KKMediaRootViewController, NSMutableArray, NSMutableData, NSString, QLURLRequest;

@interface MakeJsonData : NSObject
{
    _Bool ipLimit;
    NSMutableData *jsonData;
    NSString *postEventName;
    NSMutableArray *_objectDatas;
    long long reRequestDataNums;
    NSString *urlString;
    long long interfaceType;
    long long videoDataType;
    double _dateStartRequest;
    long long dltype;
    QLURLRequest *urlRequest;
    long long retryNums;
    NSString *netRequestDataErrorEventName;
    NSString *networkRequestFailedEventName;
    KKMediaRootViewController *_mainCtrl;
}

@property(nonatomic) KKMediaRootViewController *mainCtrl; // @synthesize mainCtrl=_mainCtrl;
@property(copy, nonatomic) NSString *networkRequestFailedEventName; // @synthesize networkRequestFailedEventName;
@property(copy, nonatomic) NSString *netRequestDataErrorEventName; // @synthesize netRequestDataErrorEventName;
@property(nonatomic) long long retryNums; // @synthesize retryNums;
@property(retain, nonatomic) QLURLRequest *urlRequest; // @synthesize urlRequest;
@property(nonatomic) long long dltype; // @synthesize dltype;
@property double dateStartRequest; // @synthesize dateStartRequest=_dateStartRequest;
@property(nonatomic) long long videoDataType; // @synthesize videoDataType;
@property(nonatomic) _Bool ipLimit; // @synthesize ipLimit;
@property(nonatomic) long long interfaceType; // @synthesize interfaceType;
@property(copy, nonatomic) NSString *urlString; // @synthesize urlString;
@property(nonatomic) long long reRequestDataNums; // @synthesize reRequestDataNums;
@property(retain, nonatomic) NSMutableArray *objectDatas; // @synthesize objectDatas=_objectDatas;
@property(copy, nonatomic) NSString *postEventName; // @synthesize postEventName;
@property(retain, nonatomic) NSMutableData *jsonData; // @synthesize jsonData;
- (void)request:(id)arg1 didFailLoadWithError:(id)arg2;
- (void)requestDidFinishLoad:(id)arg1;
- (void)createDataByRequestURL:(id)arg1 apiType:(id)arg2;
- (void)cancelTheRequest;
- (void)requestTheOrginUrlAgain;
- (void)resetDataArrays;
- (void)createDataByRequestURL:(id)arg1;
- (void)connection:(id)arg1 didFailWithError:(id)arg2;
- (void)connection:(id)arg1 didReceiveData:(id)arg2;
- (void)connectionDidFinishLoading:(id)arg1;
- (void)fillData:(id)arg1 withUrlConnection:(id)arg2;
- (void)reportPlayInfoSucc;
- (void)handleErrorDataWithEm:(long long)arg1 withDataUserInfo:(id)arg2 withEmInfo:(id)arg3;
- (id)getErrorTextFromCode:(long long)arg1;
- (void)makeErrorJsonContent:(id)arg1 withDataUserInfo:(id)arg2;
- (id)interfaceBaseCode;
- (long long)changeNScodeToLocalCode:(long long)arg1;
- (void)enscapeData:(id)arg1 withDataUserInfo:(id)arg2;
- (void)handleJsonParsedStatus:(id)arg1;
- (id)initWithEventName:(id)arg1;
- (id)connection:(id)arg1 willSendRequest:(id)arg2 redirectResponse:(id)arg3;
- (void)dealloc;

@end

