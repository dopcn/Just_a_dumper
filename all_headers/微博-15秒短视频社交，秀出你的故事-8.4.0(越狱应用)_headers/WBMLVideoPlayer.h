//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

#import "BaseSmartVideoPlayerDelegate-Protocol.h"
#import "YXSDKLivePlayerDelegate-Protocol.h"
#import "YXSDKStandardPlayerDelegate-Protocol.h"

@class NSMutableDictionary, NSString, NSTimer, UIView, WBMLVideoLiveLoggerManager, WBMLVideoPlayerPanorama, WBMediaAudioSession, YXBaseSmartVideoPlayer, YXSDKSharedStandardPlayer;
@protocol WBMLVideoPlayerDelegate;

@interface WBMLVideoPlayer : NSObject <YXSDKLivePlayerDelegate, BaseSmartVideoPlayerDelegate, YXSDKStandardPlayerDelegate>
{
    UIView *_playView;
    NSString *_URL;
    WBMLVideoLiveLoggerManager *logger;
    _Bool live;
    id <WBMLVideoPlayerDelegate> _delegate;
    NSString *_playerDescription;
    unsigned long long _status;
    NSMutableDictionary *_playLogFromYZB;
    YXBaseSmartVideoPlayer *_replayPlayer;
    YXSDKSharedStandardPlayer *_standardReplayPlayer;
    NSTimer *_timeoutTimer;
    WBMLVideoPlayerPanorama *_panoPlayer;
    WBMediaAudioSession *_session;
    double _fileDuration;
    long long _firstDuration;
}

+ (_Bool)isUseStandarReplayPlayer;
+ (id)liveInternalPlayer;
+ (id)currentPlayerNormal;
+ (id)currentPlayer;
+ (void)setPlayerType:(unsigned long long)arg1;
@property(nonatomic) long long firstDuration; // @synthesize firstDuration=_firstDuration;
@property(nonatomic) double fileDuration; // @synthesize fileDuration=_fileDuration;
@property(retain, nonatomic) WBMediaAudioSession *session; // @synthesize session=_session;
@property(retain, nonatomic) WBMLVideoPlayerPanorama *panoPlayer; // @synthesize panoPlayer=_panoPlayer;
@property(retain, nonatomic) NSTimer *timeoutTimer; // @synthesize timeoutTimer=_timeoutTimer;
@property(retain, nonatomic) YXSDKSharedStandardPlayer *standardReplayPlayer; // @synthesize standardReplayPlayer=_standardReplayPlayer;
@property(retain, nonatomic) YXBaseSmartVideoPlayer *replayPlayer; // @synthesize replayPlayer=_replayPlayer;
@property(retain, nonatomic) NSMutableDictionary *playLogFromYZB; // @synthesize playLogFromYZB=_playLogFromYZB;
@property(readonly, nonatomic) unsigned long long status; // @synthesize status=_status;
@property(retain, nonatomic) NSString *playerDescription; // @synthesize playerDescription=_playerDescription;
@property(nonatomic) __weak id <WBMLVideoPlayerDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, copy, nonatomic) NSString *URL; // @synthesize URL=_URL;
@property(retain, nonatomic) UIView *playView; // @synthesize playView=_playView;
- (void).cxx_destruct;
- (_Bool)isValidNSString:(id)arg1;
- (id)getValidObjectFromDictionary:(id)arg1 key:(id)arg2;
- (void)setValidObjectForDictionary:(id)arg1 key:(id)arg2 value:(id)arg3;
- (_Bool)isValidNSDictionary:(id)arg1;
- (void)setRenderControllerPause:(_Bool)arg1;
- (void)setDelegatePano:(id)arg1;
- (void)handleTapGestures:(id)arg1;
- (void)handlePanGestures:(id)arg1;
- (void)handlePinchGesture:(id)arg1;
- (void)loadingTimeout;
- (void)handlePlayEventDelegateWithEvent:(unsigned long long)arg1;
- (void)BaseSmartVideoPlayerWillResignActive;
- (void)BaseSmartVideoPlayerProgressWithCurrent:(double)arg1 duration:(double)arg2;
- (void)BaseSmartVideoPlayerStopLoading;
- (void)BaseSmartVideoPlayerFailedWithError:(id)arg1;
- (void)BaseSmartVideoPlayerStartLoading;
- (void)BaseSmartVideoPlayerReadyToPlay;
- (void)BaseSmartVideoPlayerDidPlayToEnd:(id)arg1;
- (void)BaseSmartVideoPlayerDoPause:(id)arg1;
- (void)BaseSmartVideoPlayerDoPlay:(id)arg1;
- (void)onStandardPlayerEventCallback:(int)arg1 msg:(id)arg2;
- (void)onPlayerEventCallback:(int)arg1 msg:(id)arg2;
- (void)onPlayerVideoDataCallback:(struct opaqueCMSampleBuffer *)arg1;
- (void)onPlayerAudioDataCallback:(struct opaqueCMSampleBuffer *)arg1;
- (void)onPlayerLogCallback:(int)arg1 msg:(id)arg2;
- (void)onPlayerVideoInfoCallback:(int)arg1 height:(int)arg2;
- (void)onPlayerNetStatisticsCallback:(int)arg1 msg:(id)arg2;
- (void)configLivePlayer;
- (void)configStandardReplayPlayer;
- (id)getCurrentSeiData;
- (void)clean;
- (double)currentDuration;
- (void)seekToTime:(double)arg1;
- (void)restart;
- (void)resume;
- (void)pause;
- (void)reStartPlayWithURL:(id)arg1;
- (void)startPlayWithURL:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

