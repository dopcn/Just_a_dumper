//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

@class NSDictionary, NSMutableDictionary, NSString;
@protocol OS_dispatch_queue;

@interface QBigIMManager : NSObject
{
    _Bool _isIMManagerLogin;
    _Bool _willCancelLogin;
    _Bool _needTryRelogin;
    _Bool _isBackgroundLogin;
    NSString *_appVersion;
    NSString *_httpRootHost;
    NSString *_innerFileHost;
    NSString *_imageCachePath;
    int _serverTimeDiff;
    NSString *_clientIp;
    NSMutableDictionary *_groupMsgMaxVersion;
    double _lastMsgTime;
    NSDictionary *_reakMarks;
    double _lastGroupMessageTime;
    double _lastSystemMsgTime;
    void *_cacheTag;
    NSObject<OS_dispatch_queue> *_cacheQueue;
    NSObject<OS_dispatch_queue> *_loginComplateQueue;
    NSObject<OS_dispatch_queue> *_load_history_msg;
    int _appWorkState;
    NSString *_downLoadFile;
    NSObject<OS_dispatch_queue> *_receive_msg_queue;
    NSObject<OS_dispatch_queue> *_update_chat_card;
    NSMutableDictionary *_chatIdInfoDic;
    NSMutableDictionary *_timeStempDic;
    NSMutableDictionary *_notReadMsgDic;
    NSMutableDictionary *_notReadMsgByGroupDic;
    NSMutableDictionary *_userBigHeaderDic;
    NSMutableDictionary *_channelInfoDic;
    NSString *_currentSessionUserId;
    NSString *_myName;
    NSMutableDictionary *_groupHeaderImageDic;
    NSMutableDictionary *_virtualRealJidDic;
    NSMutableDictionary *_notSendTextDic;
    _Bool _latestGroupMessageFlag;
    NSMutableDictionary *_loadingImgs;
    _Bool _isMerchant;
    NSString *_remoteKey;
}

+ (id)defaultUserHeaderImage;
+ (id)shareInstance;
@property(retain, nonatomic) NSString *remoteKey; // @synthesize remoteKey=_remoteKey;
@property(nonatomic) _Bool isMerchant; // @synthesize isMerchant=_isMerchant;
- (void).cxx_destruct;
- (void)receiveCategoryNotifyMessage:(id)arg1;
- (void)setNotSendText:(id)arg1 inputItems:(id)arg2 ForJid:(id)arg3;
- (id)getNotSendTextByJid:(id)arg1;
- (void)addConsultSessionById:(id)arg1 ByRealJid:(id)arg2 WithName:(id)arg3 ByMsgId:(id)arg4 WithOpen:(_Bool)arg5 WithLastUpdateTime:(long long)arg6 WithChatType:(int)arg7;
- (id)getBusinessInfoByBusinessId:(id)arg1;
- (id)getRealJidForVirtual:(id)arg1;
- (id)virtualRealJidDic;
- (void)openChatSessionByUserId:(id)arg1 ByName:(id)arg2;
- (void)openGroupSessionByGroupId:(id)arg1 ByName:(id)arg2;
- (id)beginChatWithStrId:(id)arg1 WithPid:(id)arg2 WithIp:(id)arg3 WithLine:(id)arg4 WithType:(id)arg5 WithSeatId:(id)arg6;
- (void)sendBigClientPushWithStrid:(id)arg1 WithMerchant:(id)arg2 WithUid:(id)arg3 WithGid:(id)arg4 WithPid:(id)arg5 WtihVid:(id)arg6 WithClientVersion:(id)arg7;
- (id)getGroupHeaderImageByGroupId:(id)arg1 cacheFirst:(_Bool)arg2;
- (id)groupHeaderImageDic;
- (id)searchUserListBySearchStr:(id)arg1 Url:(id)arg2 id:(id)arg3 limit:(long long)arg4 offset:(long long)arg5;
- (_Bool)checkNetworkCanUser;
- (void)checkNetworkStatus;
- (void)onDisconnect;
- (void)socketDisconnect;
- (void)updateUserChannelInfo:(id)arg1;
- (void)onTransferChat:(id)arg1;
- (void)messageLogEvent:(id)arg1;
- (void)onMessageSendFaild:(id)arg1;
- (void)onMessageSendSuccess:(id)arg1;
- (void)onConsultReadState:(id)arg1;
- (void)onReadState:(id)arg1;
- (void)updateMsgsState:(id)arg1;
- (void)onReadMark:(id)arg1;
- (void)onTyping:(id)arg1;
- (void)onLogined;
- (_Bool)addSkipBackupAttributeToItemAtURL:(id)arg1;
- (void)initDB;
- (void)receiveQChatNoteMsg:(id)arg1;
- (_Bool)sendReadstateWithGroupLastMessageTime:(long long)arg1 withGroupId:(id)arg2;
- (int)getNotReadMsgCountByJid:(id)arg1;
- (int)getNotReadMsgCountByJid:(id)arg1 WithRealJid:(id)arg2;
- (void)clearNotReadMsgByGroupId:(id)arg1;
- (void)clearNotReadMsgByJid:(id)arg1;
- (id)thirdpartKeywithValue;
- (id)getUserChatlogWithFrom:(id)arg1 to:(id)arg2 version:(long long)arg3 count:(int)arg4 direction:(int)arg5;
- (id)getMucMsgListWihtGroupId:(id)arg1 WithDirection:(int)arg2 WithLimit:(int)arg3 WithVersion:(long long)arg4;
- (void)getMsgListByUserId:(id)arg1 WithRealJid:(id)arg2 WihtLimit:(int)arg3 WithOffset:(int)arg4 WihtComplete:(CDUnknownBlockType)arg5;
- (void)getMsgListByUserId:(id)arg1 FromTimeStamp:(long long)arg2 WihtComplete:(CDUnknownBlockType)arg3;
- (void)getMsgListByUserId:(id)arg1 WithRealJid:(id)arg2 FromTimeStamp:(long long)arg3 WihtComplete:(CDUnknownBlockType)arg4;
- (id)updateUserCard:(id)arg1;
- (void)updateGroupMemberCardForGroupId:(id)arg1;
- (_Bool)updateGroupCard:(id)arg1;
- (_Bool)updateGroupCardByGroupId:(id)arg1;
- (void)updateMyCard;
- (id)getQChatUserInfoByUserId:(id)arg1;
- (id)getSessionList;
- (void)updateNotReadCountCacheByJid:(id)arg1;
- (_Bool)sendReadStateWithMessagesIdArray:(id)arg1 WithXmppId:(id)arg2;
- (void)addSessionByType:(int)arg1 ById:(id)arg2 ByMsgId:(id)arg3 WithMsgTime:(long long)arg4;
- (void)updateMsg:(id)arg1 ByJid:(id)arg2;
- (void)saveMsg:(id)arg1 ByJid:(id)arg2;
- (void)checkMsgaTimeWithJid:(id)arg1 WithMsgDate:(long long)arg2 WithGroup:(_Bool)arg3;
- (id)getChatIdByUserId:(id)arg1;
- (void)saveChatId:(id)arg1 ForUserId:(id)arg2;
- (void)receiveGroupFile:(id)arg1;
- (void)receiveFile:(id)arg1;
- (void)receiveConsultMessage:(id)arg1;
- (void)receiveGroupMsg:(id)arg1;
- (void)receiveMsg:(id)arg1;
- (void)removeSessionById:(id)arg1;
- (id)syncgroupMember:(id)arg1;
- (void)userMucList:(id)arg1;
- (void)loginFaild:(id)arg1;
- (void)loginComplate;
- (void)configForRemoteKeyAndSystemTime:(id)arg1;
- (id)getMucHistoryByJsonIsTimeOut:(_Bool *)arg1 WithRetry:(int)arg2 num:(unsigned long long)arg3 lastMsgTime:(long long)arg4;
- (_Bool)updateGroupOfflineMessagesByJson;
- (id)getUserChatlogByJsonSince:(double)arg1 num:(unsigned long long)arg2 isTimeOut:(_Bool *)arg3 retryCount:(int)arg4;
- (id)getReadMarkWithTime:(id)arg1;
- (_Bool)updateOfflineMessagesByJson;
- (id)getGroupReadMark;
- (void)updateGroupMsgMaxTime:(_Bool)arg1;
- (_Bool)getMucHistoryV2WithTimeOut:(double)arg1;
- (void)updateOfflineGroupMessages;
- (id)getUserChatlogSince:(double)arg1 success:(_Bool *)arg2 timeOut:(double)arg3;
- (_Bool)updateOfflineMessages;
- (void)updateLastSystemMsgTime;
- (void)updateLastGroupMsgTime;
- (id)AppBuildVersion;
- (void)updateLastMsgTime;
- (void)checkMessageState;
- (id)getClientIp;
- (void)clearAllNoRead;
- (int)getServerTimeDiff;
- (void)setChannelInfo:(id)arg1 ForUserId:(id)arg2;
- (id)updateUserCardByUserVersions:(id)arg1;
- (void)updateUserBigHeaderImageUrl:(id)arg1 WihtVersion:(id)arg2 ForUserId:(id)arg3;
- (id)updateUserHeaderImageWithXmppId:(id)arg1;
- (id)getUserInfoByName:(id)arg1;
- (int)getGroupMsgDirectionWithNickName:(id)arg1;
- (id)getHeadImagePathForUserId:(id)arg1;
- (id)userHeaderImageByUserId:(id)arg1;
- (id)getUserHeaderPathByUserName:(id)arg1;
- (id)getUserHeaderImageByName:(id)arg1;
- (id)getUserInfoByUserId:(id)arg1;
- (id)sendConsultMessageId:(id)arg1 WithMessage:(id)arg2 WithInfo:(id)arg3 toJid:(id)arg4 realToJid:(id)arg5 WithChatType:(int)arg6 WithMsgType:(int)arg7;
- (id)sendMessage:(id)arg1 ToUserId:(id)arg2 realToJid:(id)arg3;
- (_Bool)sendMessageWithMsgInfo:(id)arg1 exInfo:(id)arg2 callBack:(CDUnknownBlockType)arg3;
- (id)createMessageWithMsg:(id)arg1 extenddInfo:(id)arg2 userId:(id)arg3 realJid:(id)arg4 userType:(int)arg5 msgType:(int)arg6 forMsgId:(id)arg7 willSave:(_Bool)arg8;
- (id)createMessageWithInfo:(id)arg1;
- (id)getCurrentSessionUserId;
- (void)setCurrentSessionUserId:(id)arg1;
- (id)getImagerCache;
- (id)getLastPassword;
- (id)myNickname;
- (id)getName;
- (id)getLastUserName;
- (id)getLastJid;
- (id)myRemotelogginKey;
- (_Bool)sendServer:(id)arg1 withUsername:(id)arg2 withParamU:(id)arg3 withParamK:(id)arg4;
- (void)sendPushtokenWithKey:(id)arg1;
- (id)updateRemoteLoginKey;
- (void)sendNoPush;
- (void)setAppWorkState:(int)arg1;
- (int)appWorkState;
- (void)cancelLogin;
- (void)clearcache;
- (void)quitLogin;
- (void)relogin;
- (void)loginWithUserName:(id)arg1 WithPassWord:(id)arg2;
- (_Bool)isLogin;
- (id)getDomain;
- (void)updateNavigationConfig;
- (void)registerEvent;
- (void)initManager;
- (id)getDownloadFilePath;

@end

