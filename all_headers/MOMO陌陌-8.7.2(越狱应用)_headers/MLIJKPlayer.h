//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

#import "MLPlayer-Protocol.h"
#import "MLPlayerStatisticDataProvider-Protocol.h"

@class IJKFFMoviePlayerController, IJKSDLGLView, MLPlayerStatistic, MLShowVideoDetail, NSString;
@protocol MLPlayerDelegate;

@interface MLIJKPlayer : NSObject <MLPlayerStatisticDataProvider, MLPlayer>
{
    unsigned long long _startPlaybackPtsInMs;
    _Bool _isFirstPlay;
    _Bool _isStalled;
    _Bool _hasPlaybackError;
    _Bool _isPlayback;
    _Bool _seeking;
    _Bool _isOnlyAudio;
    _Bool _isStoped;
    int _playbackErrorNo;
    id <MLPlayerDelegate> _delegate;
    CDUnknownBlockType _stopCompleteBlock;
    MLPlayerStatistic *_statistic;
    MLShowVideoDetail *_detail;
    long long _videoConfiguration;
    IJKFFMoviePlayerController *_playerController;
    IJKSDLGLView *_renderView;
    double _playbackDelay;
    double _maxVideoBufferDurationTolerateInSec;
    double _fileDurationInSecs;
    NSString *_hostIP;
}

@property(nonatomic) _Bool isStoped; // @synthesize isStoped=_isStoped;
@property(nonatomic) _Bool isOnlyAudio; // @synthesize isOnlyAudio=_isOnlyAudio;
@property _Bool seeking; // @synthesize seeking=_seeking;
@property(copy, nonatomic) NSString *hostIP; // @synthesize hostIP=_hostIP;
@property(nonatomic) _Bool isPlayback; // @synthesize isPlayback=_isPlayback;
@property(nonatomic) double fileDurationInSecs; // @synthesize fileDurationInSecs=_fileDurationInSecs;
@property(nonatomic) double maxVideoBufferDurationTolerateInSec; // @synthesize maxVideoBufferDurationTolerateInSec=_maxVideoBufferDurationTolerateInSec;
@property(nonatomic) _Bool hasPlaybackError; // @synthesize hasPlaybackError=_hasPlaybackError;
@property(nonatomic) double playbackDelay; // @synthesize playbackDelay=_playbackDelay;
@property(nonatomic) _Bool isStalled; // @synthesize isStalled=_isStalled;
@property(nonatomic) _Bool isFirstPlay; // @synthesize isFirstPlay=_isFirstPlay;
@property(retain, nonatomic) IJKSDLGLView *renderView; // @synthesize renderView=_renderView;
@property(retain, nonatomic) IJKFFMoviePlayerController *playerController; // @synthesize playerController=_playerController;
@property(nonatomic) long long videoConfiguration; // @synthesize videoConfiguration=_videoConfiguration;
@property(retain, nonatomic) MLShowVideoDetail *detail; // @synthesize detail=_detail;
@property(retain, nonatomic) MLPlayerStatistic *statistic; // @synthesize statistic=_statistic;
@property(copy, nonatomic) CDUnknownBlockType stopCompleteBlock; // @synthesize stopCompleteBlock=_stopCompleteBlock;
@property(nonatomic) int playbackErrorNo; // @synthesize playbackErrorNo=_playbackErrorNo;
@property(nonatomic) __weak id <MLPlayerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (id)snapShot;
- (long long)getPlayerReceiveSize;
- (void)resetRenderFrame:(struct CGRect)arg1;
- (void)switchAudioCallback:(_Bool)arg1;
- (void)recordAudio:(_Bool)arg1;
- (void)setMute:(_Bool)arg1;
- (double)getCurrentPlaybackTimeInSec;
- (void)seek:(double)arg1;
- (_Bool)isPrepared;
- (void)clean;
- (void)sendStopLogInfo:(struct HttpDetecter *)arg1 detectCount:(int)arg2;
- (void)stopWithErrorCode:(int)arg1;
- (void)stop;
- (id)lookupIPForHost:(id)arg1;
- (void)destroyPlayer;
- (void)pause;
- (void)play;
@property(readonly, nonatomic) _Bool isPlaying;
- (_Bool)isVideoToolboxOpen;
- (id)getPullWatch;
- (struct CGSize)getVideoSize;
- (void)observeMoviePlayerPlaybackVideoRendering:(id)arg1;
- (void)finished;
- (void)failed;
- (void)stallToFailed;
- (void)observeMoviePlayerPlaybackDidFinish:(id)arg1;
- (void)observeMoviePlayerLoadStateDidChange:(id)arg1;
- (void)checkSubViewChangedOrNot:(id)arg1;
- (void)updatePlaybackDelayWithSEI:(id)arg1;
- (void)observeMoviePlayerPlaybackVideoSizeChanged:(id)arg1;
- (void)observeMoviePlayerPlaybackStateDidChange:(id)arg1;
- (void)observeMoviePlayerPlaybackUpdateH264SEI:(id)arg1;
- (id)parseUserDefineSeiData:(const void *)arg1 sei_data_size:(unsigned long long)arg2;
- (void)observeMoviePlayerLowerLatencyDropStop:(id)arg1;
- (void)observeMoviePlayerLowerLatencyDropStart:(id)arg1;
- (void)observeMoviePlayerLowerLatencySpeedStop:(id)arg1;
- (void)observeMoviePlayerLowerLatencySpeedStart:(id)arg1;
- (void)observeMoviePlayerIsPreparedToPlayDidChange:(id)arg1;
- (double)getFileDurationInSec;
- (void)dealloc;
- (void)setupStatisticWithRoomID:(id)arg1;
- (void)installPlayerObserver;
- (void)getHostIP;
- (void)setAudioPlaybackVolume:(float)arg1;
- (void)setupPlayerSpeedControlWithDictionary:(id)arg1;
- (id)initWithURL:(id)arg1 videoConfiguration:(long long)arg2 renderView:(id)arg3 playback:(_Bool)arg4 autoPlay:(_Bool)arg5;
- (id)initWithURL:(id)arg1 videoConfiguration:(long long)arg2 renderView:(id)arg3 playback:(_Bool)arg4;
- (id)initWithURL:(id)arg1 videoConfiguration:(long long)arg2 renderView:(id)arg3;
- (id)initWithDetail:(id)arg1 videoConfiguration:(long long)arg2 inView:(id)arg3 playback:(_Bool)arg4;
- (id)initWithDetail:(id)arg1 videoConfiguration:(long long)arg2 inView:(id)arg3 playback:(_Bool)arg4 onlyAudio:(_Bool)arg5;
- (struct CGSize)playerVideoSize;
- (unsigned long long)playerAudioSampleRate;
- (unsigned long long)playerPlaybackDelay;
- (unsigned long long)playerVideoFrameRate;
- (unsigned long long)playerReceivedAudioBitrate;
- (unsigned long long)playerReceivedVideoBitrate;
- (float)playerSpeedRate;
- (unsigned long long)playerAudioCacheDuration;
- (unsigned long long)playerVideoCacheDuration;
- (unsigned long long)playerAudioRenderedSize;
- (unsigned long long)playerVideoRenderedCount;
- (unsigned long long)playerAudioDecodedSize;
- (unsigned long long)playerVideoDecodedCount;
- (unsigned long long)playerVideoReceivedSize;
- (unsigned long long)playerAudioReceivedSize;
- (unsigned long long)playerReceivedDataSize;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

