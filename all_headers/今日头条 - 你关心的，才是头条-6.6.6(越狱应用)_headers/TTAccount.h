//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

@class TTAccountUserEntity;
@protocol OS_dispatch_semaphore;

@interface TTAccount : NSObject
{
    NSObject<OS_dispatch_semaphore> *_readOnlySemaphore_;
    _Bool _isLogin;
    TTAccountUserEntity *_user;
}

+ (_Bool)__multiThreadSafeSupported__;
+ (void)setAccountUserInNSUserDefault:(id)arg1;
+ (id)accountUserInNSUserDefault;
+ (void)setIsLoginInNSUserDefault:(_Bool)arg1;
+ (_Bool)isLoginInNSUserDefault;
+ (id)currentAccountUserInDisk;
+ (void)saveAccountUserToDisk:(id)arg1;
+ (id)__sharingKeyChainGroup__;
+ (id)sharedAccount;
+ (void)load;
+ (id)accountConf;
+ (void)setAccountConf:(id)arg1;
+ (void)removeMulticastDelegate:(id)arg1;
+ (void)addMulticastDelegate:(id)arg1;
+ (id)requestNewSessionWithSessionKey:(id)arg1 installId:(id)arg2 completion:(CDUnknownBlockType)arg3;
+ (id)logoutPlatform:(id)arg1 completion:(CDUnknownBlockType)arg2;
+ (id)logout:(CDUnknownBlockType)arg1;
+ (id)updateUserExtraProfileWithDict:(id)arg1 completion:(CDUnknownBlockType)arg2;
+ (id)updateUserProfileWithDict:(id)arg1 completion:(CDUnknownBlockType)arg2;
+ (id)checkUsername:(id)arg1 completion:(CDUnknownBlockType)arg2;
+ (id)startUploadUserBgImage:(id)arg1 progress:(id *)arg2 completion:(CDUnknownBlockType)arg3;
+ (id)startUploadImage:(id)arg1 progress:(id *)arg2 completion:(CDUnknownBlockType)arg3;
+ (id)startUploadUserPhoto:(id)arg1 progress:(id *)arg2 completion:(CDUnknownBlockType)arg3;
+ (id)getUserAuditInfoIgnoreDispatchWithCompletion:(CDUnknownBlockType)arg1;
+ (id)getUserAuditInfoWithCompletion:(CDUnknownBlockType)arg1;
+ (id)getUserInfoIgnoreDispatchWithCompletion:(CDUnknownBlockType)arg1;
+ (id)getUserInfoWithCompletion:(CDUnknownBlockType)arg1;
+ (id)refreshCaptchaWithCompletion:(CDUnknownBlockType)arg1;
+ (id)changePhoneNumber:(id)arg1 SMSCode:(id)arg2 captcha:(id)arg3 completion:(CDUnknownBlockType)arg4;
+ (id)modifyPasswordWithNewPassword:(id)arg1 SMSCode:(id)arg2 captcha:(id)arg3 completion:(CDUnknownBlockType)arg4;
+ (id)resetPasswordWithPhone:(id)arg1 SMSCode:(id)arg2 password:(id)arg3 captcha:(id)arg4 completion:(CDUnknownBlockType)arg5;
+ (id)validateSMSCode:(id)arg1 SMSCodeType:(long long)arg2 captcha:(id)arg3 completion:(CDUnknownBlockType)arg4;
+ (id)sendSMSCodeWithPhone:(id)arg1 captcha:(id)arg2 SMSCodeType:(long long)arg3 unbindExist:(_Bool)arg4 completion:(CDUnknownBlockType)arg5;
+ (id)unbindPhoneWithCaptcha:(id)arg1 completion:(CDUnknownBlockType)arg2;
+ (id)bindPhoneWithPhone:(id)arg1 SMSCode:(id)arg2 password:(id)arg3 captcha:(id)arg4 unbind:(_Bool)arg5 completion:(CDUnknownBlockType)arg6;
+ (id)loginWithPhone:(id)arg1 token:(id)arg2 captcha:(id)arg3 completion:(CDUnknownBlockType)arg4;
+ (id)quickLoginWithPhone:(id)arg1 SMSCode:(id)arg2 captcha:(id)arg3 completion:(CDUnknownBlockType)arg4;
+ (id)loginWithPhone:(id)arg1 password:(id)arg2 captcha:(id)arg3 completion:(CDUnknownBlockType)arg4;
+ (id)loginWithEmail:(id)arg1 password:(id)arg2 captcha:(id)arg3 completion:(CDUnknownBlockType)arg4;
+ (id)registerWithPhone:(id)arg1 SMSCode:(id)arg2 password:(id)arg3 captcha:(id)arg4 completion:(CDUnknownBlockType)arg5;
+ (void)setIsSucceedInSynchronizingAccountUserStatus:(_Bool)arg1;
+ (_Bool)isSuccceedInSynchronizingAccountUserStatus;
+ (void)setIsSucceedInRequestingNewSessionLogin:(_Bool)arg1;
+ (_Bool)isSucceedInRequestingNewSessionLogin;
+ (void)setAPPHasInstalled;
+ (_Bool)isAPPFirstInstall;
+ (void)handleAccountUserNetworkSynchronization:(CDUnknownBlockType)arg1 jsonData:(id)arg2 error:(id)arg3 originalURL:(id)arg4;
+ (void)synchronizeAccountUserStatusByNetwork:(CDUnknownBlockType)arg1 waitUntilDone:(_Bool)arg2;
+ (id)loginWithSSOCallback:(id)arg1 forPlatform:(long long)arg2 willLogin:(CDUnknownBlockType)arg3 completion:(CDUnknownBlockType)arg4;
+ (long long)validAuthPlatformTypeOfPlatformName:(id)arg1;
+ (void)requestLogoutForPlatformName:(id)arg1 completion:(CDUnknownBlockType)arg2;
+ (void)requestLogoutForPlatform:(long long)arg1 completion:(CDUnknownBlockType)arg2;
+ (void)requestLoginForPlatform:(long long)arg1 inCustomWebView:(_Bool)arg2 willLogin:(CDUnknownBlockType)arg3 completion:(CDUnknownBlockType)arg4;
+ (void)requestLoginForPlatform:(long long)arg1 willLogin:(CDUnknownBlockType)arg2 completion:(CDUnknownBlockType)arg3;
+ (void)requestLoginForPlatformName:(id)arg1 inCustomWebView:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;
+ (void)requestLoginForPlatform:(long long)arg1 inCustomWebView:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;
+ (void)requestLoginForPlatformName:(id)arg1 completion:(CDUnknownBlockType)arg2;
+ (void)requestLoginForPlatform:(long long)arg1 completion:(CDUnknownBlockType)arg2;
+ (id)getAppInstallUrlForPlatform:(long long)arg1;
+ (id)localizedDisplayNameForPlatform:(long long)arg1;
+ (_Bool)isAppInstalledForPlatform:(long long)arg1;
+ (_Bool)canCustomWebSSOForPlatform:(long long)arg1;
+ (_Bool)canWebSSOForPlatform:(long long)arg1;
+ (_Bool)canSSOForPlatform:(long long)arg1;
+ (id)platformAppIdForAccountAuthType:(long long)arg1;
+ (id)platformNameForAccountAuthType:(long long)arg1;
+ (long long)accountAuthTypeForPlatform:(id)arg1;
+ (_Bool)handleOpenURL:(id)arg1;
+ (void)registerAuthAccount:(Class)arg1;
+ (void)registerPlatforms:(id)arg1;
+ (void)registerPlatform:(id)arg1;
+ (void)registerAppId:(id)arg1 forPlatform:(long long)arg2;
- (void).cxx_destruct;
@property(retain, nonatomic) TTAccountUserEntity *user; // @synthesize user=_user;
@property(nonatomic) _Bool isLogin; // @synthesize isLogin=_isLogin;
- (id)userIdString;
- (id)sessionKey;
- (void)setSessionKey:(id)arg1;
- (id)connectedAccountForPlatform:(id)arg1;
- (void)logoutAuthorizedPlatform:(id)arg1;
- (void)loginAuthorizedPlatform:(id)arg1;
- (void)clearMemory;
- (void)clear;
- (void)persistence;
- (void)__synchronizeAccountUserFromNetwork__;
- (void)__loadAccountUserFromDisk__;
- (void)dealloc;
- (id)init;
- (void)autoSynchronizeAccountUserInfo;
- (void)autoSynchronizeLoginStatusIfNeeded;
- (void)applicationWillEnterForeground:(id)arg1;
- (void)applicationDidFinishLaunching:(id)arg1;
- (void)applicationDidReceiveMemoryWarning:(id)arg1;
- (void)__unregisterNotifications__;
- (void)__registerNotifications__;

@end

