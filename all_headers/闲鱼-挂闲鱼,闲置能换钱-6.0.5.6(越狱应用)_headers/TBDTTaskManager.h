//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

@class NSLock, NSMutableArray, NSMutableDictionary, TBDTDownloader;

@interface TBDTTaskManager : NSObject
{
    unsigned long long _maxConcurrentOperationCount;
    NSMutableArray *_waitingConditionTaskArray;
    NSMutableArray *_suspendingTaskArray;
    NSMutableArray *_operatingTaskArray;
    NSMutableArray *_waitingOperationTaskArray;
    TBDTDownloader *_downloader;
    NSMutableDictionary *_backgroundTasksJSON;
    NSMutableDictionary *_realTaskDic;
    NSLock *_taskDictionaryLock;
    NSLock *_backgroundTasksJSONLock;
}

+ (id)sharedInstance;
@property(retain, nonatomic) NSLock *backgroundTasksJSONLock; // @synthesize backgroundTasksJSONLock=_backgroundTasksJSONLock;
@property(retain, nonatomic) NSLock *taskDictionaryLock; // @synthesize taskDictionaryLock=_taskDictionaryLock;
@property(retain, nonatomic) NSMutableDictionary *realTaskDic; // @synthesize realTaskDic=_realTaskDic;
@property(retain, nonatomic) NSMutableDictionary *backgroundTasksJSON; // @synthesize backgroundTasksJSON=_backgroundTasksJSON;
@property(retain, nonatomic) TBDTDownloader *downloader; // @synthesize downloader=_downloader;
@property(retain, nonatomic) NSMutableArray *waitingOperationTaskArray; // @synthesize waitingOperationTaskArray=_waitingOperationTaskArray;
@property(retain, nonatomic) NSMutableArray *operatingTaskArray; // @synthesize operatingTaskArray=_operatingTaskArray;
@property(retain, nonatomic) NSMutableArray *suspendingTaskArray; // @synthesize suspendingTaskArray=_suspendingTaskArray;
@property(retain, nonatomic) NSMutableArray *waitingConditionTaskArray; // @synthesize waitingConditionTaskArray=_waitingConditionTaskArray;
- (void).cxx_destruct;
- (id)backgroundTaskForURL:(id)arg1;
- (id)waitingBackgroundTasks;
- (void)addBackgroundTask:(id)arg1;
- (void)finishBackgroundTask:(id)arg1;
- (id)backgroundTaskRecordFile;
- (void)beginNewTask;
- (void)finishTask:(id)arg1;
- (void)cancelTask:(id)arg1;
- (void)resumeTask:(id)arg1;
- (void)suspendTask:(id)arg1;
- (void)startTask:(id)arg1;
- (_Bool)haveDuplicateTask:(id)arg1;
- (_Bool)task:(id)arg1 duplicateWithTaskIn:(id)arg2;
- (void)conditionChanged:(id)arg1;
- (void)configMaxConcurrent;
- (_Bool)isConditionSatisfied:(id)arg1;
- (void)insertTask:(id)arg1 toArray:(id)arg2;
- (void)printTaskManager;
- (void)dealloc;
- (id)init;

@end

