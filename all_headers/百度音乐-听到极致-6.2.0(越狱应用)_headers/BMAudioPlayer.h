//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

#import "ACAudioPlayerDelegate-Protocol.h"

@class ACAudioPlayer, BMAudioPlayerItem, NSArray, NSMutableArray, NSMutableSet, NSOperationQueue, NSString, NSTimer;

@interface BMAudioPlayer : NSObject <ACAudioPlayerDelegate>
{
    ACAudioPlayer *_player;
    _Bool _pauseAfterPrepare;
    _Bool _interrupted;
    _Bool _eqEnabled;
    _Bool _replayGainEnabled;
    _Bool _hasPrepared;
    _Bool _isHeadphone;
    _Bool _isOnlinePlaying;
    _Bool _isSeeking;
    float _bass;
    float _pan;
    float _surround;
    int _eqType;
    int _ReverbCurrentPreset;
    int _preGain;
    unsigned long long _playIndex;
    long long _playerStatus;
    long long _playMode;
    long long _bufferType;
    NSArray *_customPresetSettings;
    unsigned long long _bgTaskId;
    NSMutableArray *_shuffleIndexList;
    NSMutableSet *_failedIndexSet;
    NSMutableArray *_playItemList;
    NSOperationQueue *_playQueue;
    NSMutableSet *_delegateSet;
    NSTimer *_progressUpdateTimer;
    double _progressUpdateInterval;
    NSArray *_effectArray;
}

+ (_Bool)setUserAgent:(id)arg1;
+ (_Bool)setProxyHost:(id)arg1 andPort:(int)arg2 andUser:(id)arg3 andPasswd:(id)arg4 andAuth:(unsigned int)arg5 enabled:(_Bool)arg6;
+ (id)trackCachePath;
+ (void)setLogEnable:(_Bool)arg1;
+ (void)setAudioSessionActive;
+ (void)initAudioPlayer;
+ (int)createP2pEnvProductID;
@property(nonatomic) int preGain; // @synthesize preGain=_preGain;
@property(retain, nonatomic) NSArray *effectArray; // @synthesize effectArray=_effectArray;
@property(nonatomic) int ReverbCurrentPreset; // @synthesize ReverbCurrentPreset=_ReverbCurrentPreset;
@property(nonatomic) double progressUpdateInterval; // @synthesize progressUpdateInterval=_progressUpdateInterval;
@property(retain, nonatomic) NSTimer *progressUpdateTimer; // @synthesize progressUpdateTimer=_progressUpdateTimer;
@property(retain, nonatomic) NSMutableSet *delegateSet; // @synthesize delegateSet=_delegateSet;
@property(retain, nonatomic) NSOperationQueue *playQueue; // @synthesize playQueue=_playQueue;
@property(retain, nonatomic) NSMutableArray *playItemList; // @synthesize playItemList=_playItemList;
@property(retain, nonatomic) NSMutableSet *failedIndexSet; // @synthesize failedIndexSet=_failedIndexSet;
@property(retain, nonatomic) NSMutableArray *shuffleIndexList; // @synthesize shuffleIndexList=_shuffleIndexList;
@property(nonatomic) unsigned long long bgTaskId; // @synthesize bgTaskId=_bgTaskId;
@property(nonatomic) _Bool isSeeking; // @synthesize isSeeking=_isSeeking;
@property(nonatomic) _Bool isOnlinePlaying; // @synthesize isOnlinePlaying=_isOnlinePlaying;
@property(nonatomic) _Bool isHeadphone; // @synthesize isHeadphone=_isHeadphone;
@property(nonatomic) _Bool hasPrepared; // @synthesize hasPrepared=_hasPrepared;
@property(retain, nonatomic) ACAudioPlayer *player; // @synthesize player=_player;
@property(retain, nonatomic) NSArray *customPresetSettings; // @synthesize customPresetSettings=_customPresetSettings;
@property(nonatomic) _Bool replayGainEnabled; // @synthesize replayGainEnabled=_replayGainEnabled;
@property(nonatomic) int eqType; // @synthesize eqType=_eqType;
@property(nonatomic) float surround; // @synthesize surround=_surround;
@property(nonatomic) float pan; // @synthesize pan=_pan;
@property(nonatomic) float bass; // @synthesize bass=_bass;
@property(nonatomic) _Bool eqEnabled; // @synthesize eqEnabled=_eqEnabled;
@property(nonatomic) long long bufferType; // @synthesize bufferType=_bufferType;
@property(nonatomic, getter=isInterrupted) _Bool interrupted; // @synthesize interrupted=_interrupted;
@property(nonatomic) long long playMode; // @synthesize playMode=_playMode;
@property(nonatomic) long long playerStatus; // @synthesize playerStatus=_playerStatus;
@property(nonatomic) _Bool pauseAfterPrepare; // @synthesize pauseAfterPrepare=_pauseAfterPrepare;
@property(nonatomic) unsigned long long playIndex; // @synthesize playIndex=_playIndex;
- (void).cxx_destruct;
- (void)audioRouteChangeFromRouteStr:(id)arg1 toRouteStr:(id)arg2;
- (void)playerEndInterruption;
- (void)playerBeginInterruption;
- (void)removeAudioSessionlistener;
- (void)initializeAudioSessionlistener;
- (void)setCustomEqWithBandArray:(id)arg1;
@property(readonly, nonatomic) int comtomSettingCount;
- (void)setEqType:(int)arg1 customPresetSettings:(id)arg2;
- (_Bool)bypassResumeAllEffect:(_Bool)arg1;
- (void)setupPlayerSettings;
- (void)setCustomSetting;
- (void)audioPlayerBufferingDidEnd:(id)arg1;
- (void)audioPlayerBufferingDidStart:(id)arg1;
- (void)audioPlayerDidSeeked:(id)arg1 successfully:(_Bool)arg2;
- (void)audioPlayerDecodeErrorDidOccur:(id)arg1 error:(id)arg2;
- (void)audioPlayerDidFinishPlaying:(id)arg1 successfully:(_Bool)arg2;
- (void)audioPlayerDidPrepared:(id)arg1 successfully:(_Bool)arg2;
- (void)existPlayer;
- (void)didPreparePlayAtIndex:(unsigned long long)arg1;
- (void)playDidEndWithIndex:(unsigned long long)arg1 error:(id)arg2;
- (void)didEndCacheToPlay;
- (void)didBeginCacheForPlay;
- (void)didEndSeek:(_Bool)arg1;
- (void)preparePlayAtIndex:(unsigned long long)arg1;
- (id)audioPlayerInitWithItem:(id)arg1;
- (void)willToPlayAtIndex:(unsigned long long)arg1;
- (void)launchPlayerAtIndex:(unsigned long long)arg1;
- (void)playAtIndex:(unsigned long long)arg1 forceReStart:(_Bool)arg2;
- (void)playAtIndex:(unsigned long long)arg1;
- (_Bool)hasLaunchPlayer;
- (void)setupshuffleIndexList;
- (unsigned long long)itemIndexForIndex:(long long)arg1 offset:(long long)arg2;
- (long long)previousIndex;
- (long long)nextIndex;
- (void)enumerateDelegatesUsingBlock:(CDUnknownBlockType)arg1;
- (id)itemAtIndex:(unsigned long long)arg1;
- (void)addDelegate:(id)arg1;
- (void)willEnterForeground;
- (_Bool)isPlayerReady;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)deleteAtPlayIndex:(unsigned long long)arg1;
- (void)updatePlayList:(id)arg1;
- (void)updatePlayList:(id)arg1 initIndex:(long long)arg2;
- (void)deletePlayItemAtIndexes:(id)arg1;
@property(readonly, nonatomic) float progress;
@property(readonly, nonatomic) BMAudioPlayerItem *currentItem;
@property(nonatomic) float volume;
- (void)updateProgress;
- (_Bool)seekToTime:(double)arg1;
- (void)_stop;
- (void)stopAudio:(long long)arg1;
- (void)playPrevious;
- (void)playNext;
- (void)replay;
- (void)stop;
- (void)resume;
- (void)pause;
- (void)play;
- (void)playOrPause;
- (_Bool)isPlaying;
- (id)initWithPlayerList:(id)arg1;
- (id)initWithPlayerItem:(id)arg1;
- (id)initWithURL:(id)arg1;
- (void)dealloc;
- (id)init;
- (id)getFrequencyDataWithDataCount:(int)arg1;
@property(readonly, nonatomic) int nFrequencyDataMaxLevel;
@property(readonly, nonatomic) int nFrequencyDataMinLevel;
@property(readonly, nonatomic) double duration;
@property(readonly, nonatomic) double currentTime;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

