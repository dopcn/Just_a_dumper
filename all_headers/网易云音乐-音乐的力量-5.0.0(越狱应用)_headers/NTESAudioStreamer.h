//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class NSError, NTESAudioEffector, NTESAudioProvider;

@interface NTESAudioStreamer : NSObject
{
    NTESAudioProvider *_audioProvider;
    NTESAudioEffector *_effector;
    _Bool _providerThreadStarted;
    _Bool _decoderThreadStarted;
    _Bool _playBeforeAllThreadStarted;
    _Bool _prepareBeforeAllThreadStarted;
    _Bool _switching;
    _Bool _playAfterSwitch;
    _Bool _pauseAfterSwitch;
    _Bool _active;
    _Bool _seeking;
    _Bool _readyToProducePackets;
    long long _status;
    NSError *_error;
    double _duration;
    double _timingOffset;
    double _crossfadeTime;
    _Bool _crossfadeEnable;
    _Bool _pauseCrossfading;
    _Bool _pauseWhenRemoveHeadSet;
    _Bool _pausedByInterruption;
    _Bool _interruptionTagFor601;
    _Bool _acvite;
}

+ (float)averagePowerForChannel:(unsigned long long)arg1;
+ (float)peakPowerForChannel:(unsigned long long)arg1;
+ (void)updateMeters;
+ (void)setMeteringEnabled:(_Bool)arg1;
+ (_Bool)meteringEnabled;
+ (void)setPlayRate:(double)arg1;
+ (double)playRate;
+ (void)setVolume:(double)arg1;
+ (double)volume;
+ (id)outputDeviceUID;
+ (id)outputDeviceType;
+ (id)outputDeviceName;
+ (void)updateOutputDevice;
+ (_Bool)airplayActived;
+ (_Bool)usingHeadset;
+ (unsigned long long)sessionCategoryOption;
+ (void)setSessionCategoryOption:(unsigned long long)arg1;
+ (id)sessionCategory;
+ (void)setSessionCategory:(id)arg1;
+ (struct AudioStreamBasicDescription)decodeToFormat;
+ (id)streamerWithAudioProvider:(id)arg1;
@property(nonatomic) _Bool acvite; // @synthesize acvite=_acvite;
@property(nonatomic) _Bool interruptionTagFor601; // @synthesize interruptionTagFor601=_interruptionTagFor601;
@property(nonatomic) _Bool pausedByInterruption; // @synthesize pausedByInterruption=_pausedByInterruption;
@property(nonatomic) _Bool pauseWhenRemoveHeadSet; // @synthesize pauseWhenRemoveHeadSet=_pauseWhenRemoveHeadSet;
@property(nonatomic) _Bool pauseCrossfading; // @synthesize pauseCrossfading=_pauseCrossfading;
@property(nonatomic) _Bool crossfadeEnable; // @synthesize crossfadeEnable=_crossfadeEnable;
@property(nonatomic) double crossfadeTime; // @synthesize crossfadeTime=_crossfadeTime;
@property(nonatomic) double timingOffset; // @synthesize timingOffset=_timingOffset;
@property(retain, nonatomic) NTESAudioEffector *effector; // @synthesize effector=_effector;
@property(readonly, nonatomic) NTESAudioProvider *audioProvider; // @synthesize audioProvider=_audioProvider;
@property(retain, nonatomic) NSError *error; // @synthesize error=_error;
@property(nonatomic) _Bool readyToProducePackets; // @synthesize readyToProducePackets=_readyToProducePackets;
@property(nonatomic) _Bool pauseAfterSwitch; // @synthesize pauseAfterSwitch=_pauseAfterSwitch;
@property(nonatomic) _Bool playAfterSwitch; // @synthesize playAfterSwitch=_playAfterSwitch;
@property(nonatomic) _Bool switching; // @synthesize switching=_switching;
@property(nonatomic) _Bool seeking; // @synthesize seeking=_seeking;
@property(nonatomic) long long status; // @synthesize status=_status;
- (void).cxx_destruct;
- (void)stop;
- (void)playOrPause;
- (void)pause:(_Bool)arg1;
- (void)pause;
- (void)play;
- (void)prepareToPlay;
@property(nonatomic) double playedTime;
@property(readonly, nonatomic) double duration; // @dynamic duration;
@property(readonly, nonatomic) long long source; // @dynamic source;
- (_Bool)allThreadStarted;
- (void)handleThreadStarted;
- (void)decoderThreadStarted:(id)arg1;
- (void)providerThreadStarted:(id)arg1;
- (void)dealloc;
- (id)initWithAudioProvider:(id)arg1;

@end

