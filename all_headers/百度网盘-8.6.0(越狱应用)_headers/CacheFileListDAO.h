//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "BDCBaseDAO.h"

@interface CacheFileListDAO : BDCBaseDAO
{
}

+ (_Bool)isAPathFolderAllImageReferentialFiles:(id)arg1;
+ (_Bool)updateSubFileMetaStatusToNoShareWithParentFileMeta:(id)arg1;
+ (long long)getAttributeDirectoryCountWithPath:(id)arg1;
+ (long long)getAttributeDirectoryCount;
+ (id)getRootShareDirWithFileMeta:(id)arg1;
+ (_Bool)containsDirectoryWithAttributeTag:(long long)arg1;
+ (_Bool)updateAttributeTag:(long long)arg1 withFid:(unsigned long long)arg2;
+ (id)getFidsWithServerFullPaths:(id)arg1;
+ (id)imageFileStatisticsByDirectory;
+ (unsigned long long)getImageFileCountWithServerPath:(id)arg1 categories:(id)arg2;
+ (unsigned long long)getImageFileCountWithServerPath:(id)arg1;
+ (unsigned long long)getImageFileCount;
+ (id)getAllImageFid;
+ (id)customSortSelectArray:(id)arg1 orderField:(long long)arg2 orderType:(long long)arg3;
+ (id)convertResultModel:(id)arg1;
+ (long long)leavesCountOfServerPath:(id)arg1;
+ (id)getListWithFids:(id)arg1;
+ (id)getFavoritedList;
+ (id)getCachedList;
+ (id)getCacheFileMetasWithFids:(id)arg1;
+ (id)getCacheFileMetasWithServerFullPaths:(id)arg1;
+ (id)getCacheFileMetaWithServerFullPath:(id)arg1;
+ (id)getCacheFileMetaWithBlockList:(id)arg1;
+ (id)getCacheFileMetaWithFid:(unsigned long long)arg1;
+ (int)getCountWithServerPath:(id)arg1;
+ (int)getCountWithCategory:(long long)arg1;
+ (int)getCountWithServerPath:(id)arg1 category:(long long)arg2 sharetype:(long long)arg3 fids:(id)arg4;
+ (int)getDescendFileCountWithServerPath:(id)arg1;
+ (id)getDescendantListWithServerPath:(id)arg1 isFileOnly:(_Bool)arg2;
+ (id)getListDicWithCategory:(int)arg1;
+ (id)getFileDicByServerPath:(id)arg1;
+ (id)getListWithServerPath:(id)arg1 orderField:(int)arg2 orderType:(int)arg3;
+ (int)getRecentFileListCount;
+ (id)getRecentFileListSkipItems:(unsigned long long)arg1 count:(unsigned long long)arg2;
+ (id)getListWithCategoryArray:(id)arg1 filePath:(id)arg2 orderField:(long long)arg3 orderType:(long long)arg4 skipLeadingItems:(unsigned long long)arg5 count:(unsigned long long)arg6;
+ (id)getListWithCategory:(long long)arg1 filePath:(id)arg2 orderField:(long long)arg3 orderType:(long long)arg4 SkipLeadingItems:(unsigned long long)arg5 count:(unsigned long long)arg6;
+ (id)getListWithServerPath:(id)arg1 category:(int)arg2 orderField:(int)arg3 orderType:(int)arg4 page:(int)arg5 count:(int)arg6;
+ (id)getListWithServerPath:(id)arg1 category:(int)arg2 includeSubFolder:(_Bool)arg3 orderField:(int)arg4 orderType:(int)arg5 page:(int)arg6 count:(int)arg7;
+ (id)getAttributeFolderWithServerPath:(id)arg1;
+ (_Bool)haveShareDirWithModel:(id)arg1;
+ (id)getListWithServerPath:(id)arg1 folderOnly:(_Bool)arg2 SkipLeadingItems:(unsigned long long)arg3 count:(unsigned long long)arg4 orderField:(long long)arg5 orderType:(long long)arg6;
+ (id)getListWithServerPath:(id)arg1 category:(int)arg2 sharetype:(int)arg3 fids:(id)arg4 orderField:(int)arg5 orderType:(int)arg6;
+ (id)getListWithServerPath:(id)arg1 category:(int)arg2 sharetype:(int)arg3 fids:(id)arg4 orderField:(int)arg5 orderType:(int)arg6 folderOnly:(_Bool)arg7;
+ (_Bool)deleteDescendantFileWithServerPath:(id)arg1;
+ (_Bool)deleteWithServerFullPath:(id)arg1;
+ (_Bool)deleteWithFids:(id)arg1;
+ (_Bool)deleteWithFid:(unsigned long long)arg1;
+ (_Bool)deleteAll;
+ (_Bool)updateDescendantPath:(id)arg1 originalPath:(id)arg2;
+ (_Bool)updateDecendIsFavorite:(_Bool)arg1 serverPath:(id)arg2;
+ (_Bool)updateIsShare:(_Bool)arg1 fid:(unsigned long long)arg2;
+ (_Bool)updateIsFavorite:(_Bool)arg1 fid:(unsigned long long)arg2;
+ (_Bool)updateIsCache:(_Bool)arg1 fid:(unsigned long long)arg2;
+ (_Bool)updateProperty:(int)arg1 fid:(unsigned long long)arg2;
+ (_Bool)updateWithPath:(id)arg1;
+ (_Bool)updateFileWithFid:(unsigned long long)arg1 newServerFullPath:(id)arg2;
+ (_Bool)update:(id)arg1;
+ (_Bool)insertIfNotExists:(id)arg1;
+ (_Bool)insert:(id)arg1;
+ (_Bool)insert:(id)arg1 onConflict:(long long)arg2;
+ (void)configCacheFileModel:(id)arg1 withResultSet:(id)arg2;

@end

