//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <UIKit/UIViewController.h>

#import "SAPIMainManagerDelegate-Protocol.h"
#import "THNetErrorViewDelegate-Protocol.h"
#import "THWebViewDelegate-Protocol.h"

@class NSString, NSURL, THNetErrorView, THWebView, UIView;

@interface THLoginViewController : UIViewController <THWebViewDelegate, SAPIMainManagerDelegate, THNetErrorViewDelegate>
{
    _Bool _hasRegister;
    _Bool _ignoreLocalWeb;
    _Bool _needDismiss;
    _Bool _isJSCallNative;
    _Bool _needSetToken;
    THWebView *_thWebView;
    UIView *_navigationView;
    NSURL *_needRefreshURL;
    THNetErrorView *_netErrorView;
    NSURL *_thWebViewURL;
    NSString *_updateToken;
    long long _preStatusBarStyle;
    long long _delegtacount;
}

@property(nonatomic) long long delegtacount; // @synthesize delegtacount=_delegtacount;
@property(nonatomic) long long preStatusBarStyle; // @synthesize preStatusBarStyle=_preStatusBarStyle;
@property(copy, nonatomic) NSString *updateToken; // @synthesize updateToken=_updateToken;
@property(nonatomic) _Bool needSetToken; // @synthesize needSetToken=_needSetToken;
@property(nonatomic) _Bool isJSCallNative; // @synthesize isJSCallNative=_isJSCallNative;
@property(retain, nonatomic) NSURL *thWebViewURL; // @synthesize thWebViewURL=_thWebViewURL;
@property(nonatomic) _Bool needDismiss; // @synthesize needDismiss=_needDismiss;
@property(retain, nonatomic) THNetErrorView *netErrorView; // @synthesize netErrorView=_netErrorView;
@property(nonatomic) _Bool ignoreLocalWeb; // @synthesize ignoreLocalWeb=_ignoreLocalWeb;
@property(retain, nonatomic) NSURL *needRefreshURL; // @synthesize needRefreshURL=_needRefreshURL;
@property(retain, nonatomic) UIView *navigationView; // @synthesize navigationView=_navigationView;
@property(nonatomic) _Bool hasRegister; // @synthesize hasRegister=_hasRegister;
@property(retain, nonatomic) THWebView *thWebView; // @synthesize thWebView=_thWebView;
- (void).cxx_destruct;
- (_Bool)shouldAutorotate;
- (unsigned long long)supportedInterfaceOrientations;
- (void)willAnimateRotationToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (void)executeScript:(id)arg1;
- (long long)preferredInterfaceOrientationForPresentation;
- (id)getTokenCookie;
- (void)initView;
- (void)sapiManager:(id)arg1 didLogOut:(id)arg2;
- (void)sapiManager:(id)arg1 didOauthLoginSucceed:(id)arg2;
- (void)sapiManager:(id)arg1 didRegistVerified:(id)arg2;
- (void)sapiManager:(id)arg1 didFillUnameSucceed:(id)arg2;
- (void)sapiManager:(id)arg1 didLoginFail:(id)arg2;
- (void)deallocLoninVC;
- (void)_sapiRealLoginSuccess:(id)arg1;
- (void)sapiManager:(id)arg1 didLoginSucceed:(id)arg2 extraInfo:(id)arg3;
- (void)goToConnect;
- (void)goToPassword;
- (void)goToRegist;
- (void)goToUpdate;
- (void)setToken:(id)arg1;
- (void)goToSecurityMobilePage:(id)arg1;
- (void)goToBindMobileWithPageFrom:(id)arg1;
- (void)setWebViewURL:(id)arg1;
- (void)sapiConfiguration;
- (_Bool)weiXinInstalled;
- (void)baiduLogin;
- (void)regUpdateSuccess;
- (void)closePage;
- (void)subWeiXinLogin;
- (void)QQLogin;
- (void)weiBoLogin;
- (void)weiXinLogin;
- (void)loginError:(id)arg1;
- (void)bindPhoneSuccess:(id)arg1 isNotNeedClose:(_Bool)arg2;
- (void)updateSuccess:(id)arg1 isNotNeedClose:(_Bool)arg2;
- (void)loginSuccess:(id)arg1 isNotNeedClose:(_Bool)arg2;
- (void)tHNetErrorView:(id)arg1 refreshSender:(id)arg2;
- (void)tHNetErrorView:(id)arg1 goBackSender:(id)arg2;
- (void)thWebView:(id)arg1 didFailLoadWithError:(id)arg2;
- (void)thWebViewDidFinishLoad:(id)arg1;
- (void)thWebViewDidStartLoad:(id)arg1;
- (_Bool)thWebView:(id)arg1 shouldStartLoadWithReuqest:(id)arg2 navigationType:(long long)arg3;
- (void)_restoreStatusBarStyle;
- (void)_saveStatusBarStyle;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)goBack:(id)arg1;
- (void)createNaBar;
- (void)createErrorView;
- (void)viewDidLoad;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

