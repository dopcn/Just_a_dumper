//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "AVAsynchronousKeyValueLoading-Protocol.h"
#import "FNFAVAsset-Protocol.h"
#import "FNFAVPlayerItem-Protocol.h"
#import "FNFAssetForPlayer-Protocol.h"
#import "FNFBufferDeciderRealTimeInfo-Protocol.h"
#import "FNFDashDataLoaderDelegate-Protocol.h"
#import "FNFInfoForLoopableAsset-Protocol.h"
#import "FNFLiveAVPlayerAsset-Protocol.h"
#import "FNFPlaylistLoaderDelegate-Protocol.h"
#import "FNFTimeLoadedDelegate-Protocol.h"

@class AVAudioMix, FBAssetLinearReader, FNFAdaptiveBitrateSelector, FNFAssetResourceLoader, FNFBufferSizeDecider, FNFDashDownloadTracker, FNFDashPlaylistData, FNFDashPlaylistLoader, FNFDashRepresentationSpecificData, FNFDataBlockDistributor, NSArray, NSDictionary, NSError, NSMutableArray, NSMutableDictionary, NSString;
@protocol FNFBandwidthProvider, OS_dispatch_queue;

@interface FNFDashAsset : NSObject <AVAsynchronousKeyValueLoading, FNFAVAsset, FNFAVPlayerItem, FNFAssetForPlayer, FNFInfoForLoopableAsset, FNFDashDataLoaderDelegate, FNFPlaylistLoaderDelegate, FNFTimeLoadedDelegate, FNFLiveAVPlayerAsset, FNFBufferDeciderRealTimeInfo>
{
    CDUnknownBlockType _assetLoadedHandler;
    FNFBufferSizeDecider *_bufferSizeDecider;
    FNFDashPlaylistData *_playlistData;
    FNFDashPlaylistLoader *_playlistLoader;
    FNFAssetResourceLoader *_resourceLoader;
    FNFAdaptiveBitrateSelector *_abrSelector;
    FNFDashDownloadTracker *_downloadTrackers[2];
    CDUnknownBlockType _playerCheckForStallCallback;
    _Bool _hasFailed;
    _Bool _isStalled;
    _Bool _shouldShowBroadcasterInterruptedMessage;
    _Bool _sentStreamDryNotification;
    _Bool _assetLoaded;
    _Bool _waitingOnLoad;
    _Bool _bypassPrefetch;
    _Bool _async;
    NSObject<OS_dispatch_queue> *_dispatchQueue;
    double _loadingStartedTimestamp;
    FNFDataBlockDistributor *_dataBlockDistributors[2];
    FBAssetLinearReader *_readers[2];
    struct FNFMp4FrameMetadataCompressor *_frames[2];
    NSMutableArray *_gopKeyframeMetadata;
    _Bool _parsedHeadersForAnyRepresentation[2];
    _Bool _parsedHeadersForEachTrack;
    CDStruct_1b6d18a9 _duration;
    CDStruct_1b6d18a9 _videoTrackDuration;
    struct AudioStreamBasicDescription _asbd;
    NSDictionary *_audioStreamExtraParameters;
    unsigned int _timescale[2];
    unsigned long long _initialTime;
    unsigned long long _initialTimePts;
    _Bool _initialTimeSet;
    int _segmentsParsedCount[2];
    _Bool _playlistWasParsed;
    _Bool _shouldUsePtsForInitialTime;
    _Bool _shouldUpdateLoadedTimeEarlier;
    _Bool _shouldCheckAllHeadersParsedAtDownloadComplete;
    _Bool _shouldFailOnFailedMoofParse;
    _Bool _shouldFailOnUnparsedMoofs;
    _Bool _enablePrefetchLookupWhenBypassCache;
    _Bool _enableLiveMidstreamSwitch;
    _Bool _enableVodMidstreamSwitch;
    _Bool _enableWifiVODDiskCache;
    _Bool _enableCellVODDiskCache;
    _Bool _enableDiskCacheForFbCdnOnly;
    long long _dashVodDiskCacheWifiNetworkConditionMask;
    long long _dashVodDiskCacheCellNetworkConditionMask;
    float _wifiDiskCacheStopBufferSizeInSec;
    float _cellDiskCacheStopBufferSizeInSec;
    float _wifiDiskCacheRestartBufferSizeInSec;
    float _cellDiskCacheRestartBufferSizeInSec;
    float _dashVodDiskCacheSafeMultiplier;
    FNFDashRepresentationSpecificData *_audioRepData;
    FNFDashRepresentationSpecificData *_videoRepData;
    NSMutableDictionary *_videoRepDatas;
    NSString *_playbackRepIds[2];
    NSString *_fetchingRepIds[2];
    _Bool _ignorePrefetchQualitySelection;
    int _segmentsFromEndToStartPrefetch;
    int _vodSegmentIndex[2];
    _Bool _hadInlineManifest;
    int _pauseReason;
    int _warningCount;
    NSError *_error;
    NSError *_loadingError;
    id <FNFBandwidthProvider> _bandwidthProvider;
    _Bool _embedFrameInfo;
    struct FNFDashAssetPrefetchMetadata _prefetchMetadata;
}

@property(nonatomic) struct FNFDashAssetPrefetchMetadata prefetchMetadata; // @synthesize prefetchMetadata=_prefetchMetadata;
- (void).cxx_destruct;
- (double)assetCurrentBitRate;
@property(readonly, nonatomic) int pauseReason;
- (unsigned long long)sidxEndOffsetForTrack:(long long)arg1 representationId:(id)arg2;
- (unsigned long long)sidxOffsetForSegmentIndex:(int)arg1 track:(long long)arg2 representationId:(id)arg3;
- (id)fetchingRepresentationIdForTrack:(long long)arg1;
- (id)abrSelector;
- (id)playlistData;
- (id)playlistLoader;
- (id)downloadTrackerForTrack:(long long)arg1;
- (_Bool)parsedHeadersForTrack:(long long)arg1 representationId:(id)arg2;
- (int)segmentsParsedCountForTrack:(long long)arg1;
- (int)vodSegmentIndexForTrack:(long long)arg1;
- (id)dataLoaderForTrack:(long long)arg1 representationId:(id)arg2;
- (id)dataLoaderForTrack:(long long)arg1;
- (void)_forTestingBypassPrefetch;
- (void)_forTestingMakeSynchronous;
- (unsigned long long)currentOffsetForTrack:(long long)arg1;
- (struct CGSize)naturalSize;
- (unsigned long long)timescale;
- (id)dataBlockDistributorForTrack:(long long)arg1;
- (_Bool)_advanceToNextGopKeyframe;
- (void)_advanceAudioToMatchVideo;
- (void)_attemptToParseMoofAtomsForTrack:(long long)arg1 representationId:(id)arg2;
- (void)_attemptToParseInitializationAtomsForTrack:(long long)arg1 representationId:(id)arg2;
- (struct FNFSeekStatus)_segmentedSeekStatusForTime:(CDStruct_1b6d18a9)arg1 shouldUpdateOffset:(_Bool)arg2 shouldSeekAudio:(_Bool)arg3 newOffset:(unsigned long long)arg4;
- (void)_resetDataForSeekBack;
- (_Bool)shouldBufferVideoAsSoonAsPossible;
- (id)audioStreamExtraParameters;
- (struct AudioStreamBasicDescription)asbd;
- (struct opaqueCMFormatDescription *)formatDesc;
- (CDStruct_1b6d18a9)nextAbsoluteAudioTime;
- (CDStruct_1b6d18a9)videoTrackDuration;
- (CDStruct_1b6d18a9)currentVideoPts;
- (unsigned long long)offsetForTimeInSeconds:(float)arg1 track:(long long)arg2;
- (_Bool)offsetIsAtLeastLargestOffset:(unsigned long long)arg1 track:(long long)arg2;
- (CDStruct_1b6d18a9)timeLoadedForOffset:(unsigned long long)arg1 track:(long long)arg2;
- (void)advanceFrameForTrack:(long long)arg1;
- (_Bool)containsAudio;
- (const char *)currentFrameDataForTrack:(long long)arg1;
- (struct FNFFrameMetadata)currentFrameMetadataForTrack:(long long)arg1;
- (void)setDashPlaylistData:(id)arg1;
- (struct FNFSeekStatus)_segmentedVodSeekToPosition:(CDStruct_1b6d18a9)arg1;
- (_Bool)_liveSeekToNextKeyFrame;
- (int)_videoSegmentIndexForTime:(CDStruct_1b6d18a9)arg1;
- (_Bool)_fragmentedSeekToPosition:(CDStruct_1b6d18a9)arg1;
- (_Bool)shouldResetAssetToBeginning;
- (void)createNewDataBlockDistributorForTrack:(long long)arg1;
- (void)createNewDataBlockDistributors;
- (void)_parseAtomForTrack:(long long)arg1 representationId:(id)arg2;
- (_Bool)decompressedFramebuffer;
- (id)dispatchQueue;
@property(readonly, copy, nonatomic) NSArray *loadedTimeRanges;
@property(copy, nonatomic) AVAudioMix *audioMix;
- (_Bool)isPlaybackBufferFull;
- (_Bool)isPlaybackLikelyToKeepUp;
- (void)addOutput:(id)arg1;
- (id)accessLog;
- (id)tracksWithMediaType:(id)arg1;
- (void)cancelLoading;
- (void)_seekDataLoaderToTime:(CDStruct_1b6d18a9)arg1 offset:(unsigned long long)arg2 shouldUpdateOffset:(_Bool)arg3 track:(long long)arg4;
- (void)_handleError:(id)arg1;
- (void)_handleWarning:(id)arg1;
- (id)_selectSegmentedQualityForTrack:(long long)arg1;
- (_Bool)_previousFragmentedRequestFinishedAtBoundaryForTrack:(long long)arg1;
- (id)_selectFragmentedQualityForTrack:(long long)arg1;
- (void)_selectRepresentationForTrack:(long long)arg1;
- (_Bool)_shouldFetchDataForTrack:(long long)arg1;
- (void)_segmentedFetchForTrack:(long long)arg1;
- (void)_fragmentedFetchForTrack:(long long)arg1;
- (void)_potentiallyStartRequestForTrack:(long long)arg1;
- (unsigned long long)_nextDiskCacheOffset:(long long)arg1;
- (unsigned long long)_diskCacheFetchLength:(long long)arg1;
- (_Bool)_shouldCancelDiskCache:(long long)arg1;
- (_Bool)_shouldStartDiskCache:(long long)arg1;
- (_Bool)_isDiskCacheEnabledForCurrentReachabilityState;
- (_Bool)_isDiskCacheEnabled;
- (_Bool)_isDiskCacheEnabledForCurrentConnectionQuality;
- (void)_potentiallyStartRequest;
- (void)_sendUndryNotificationIfApplicable;
- (void)_sendDryNotificationIfApplicable;
- (_Bool)_fullyDownloaded;
- (void)_verifySidxParsingAgainstFileLengthForRepresentationData:(id)arg1;
- (_Bool)_isFullyDownloadedForTrack:(long long)arg1;
- (void)_updateTimeLoaded:(CDStruct_1b6d18a9)arg1;
- (id)_newRepDataForTrack:(long long)arg1 representationId:(id)arg2;
- (id)_dataForRep:(id)arg1 track:(long long)arg2;
- (_Bool)_isCurrentFrameAKeyframe;
- (double)nextLiveAudioTimestamp;
- (id)resourceLoader;
- (void)didChangeValue;
- (void)willChangeValue;
- (_Bool)hasPlaybackFailed;
- (void)playlistUpdated;
- (void)loadingDidFailWithError:(id)arg1;
- (void)dataWasReceivedForTrack:(long long)arg1 representationId:(id)arg2 isComplete:(_Bool)arg3 allRequestedBytesReceived:(_Bool)arg4 forDiskCache:(_Bool)arg5;
- (int)unfetchedSegmentCountForTrack:(long long)arg1;
- (double)elapsedVideoTimestamp;
- (unsigned int)unfetchedSegmentCapHitCount;
- (unsigned long long)requestedBytesCount;
- (unsigned long long)receivedBytesCount;
- (_Bool)isAbrEnabled;
- (unsigned int)availableQualitiesCount;
- (id)representationId;
- (id)qualityLabel;
- (void)reportWarning:(id)arg1;
- (void)parsingDidFailWithError:(id)arg1;
- (struct FNFDashAssetPrefetchMetadata)getUpdatedPrefetchMetadataIfPossible;
- (id)audioChannelConfiguration;
- (id)projection;
- (id)debugDetails;
- (void)playbackStarted;
- (void)playbackPauseRequested:(int)arg1;
- (CDStruct_1b6d18a9)timeAfterSeek;
@property(readonly, nonatomic) long long status;
- (CDStruct_1b6d18a9)currentTime;
- (void)addErrorToLog:(id)arg1 shouldStopPlayback:(_Bool)arg2;
@property(nonatomic) _Bool embedFrameInfo;
- (id)asset;
- (id)mpdAccessibilityDescription;
@property(readonly, nonatomic) CDStruct_1b6d18a9 minBufferTime;
@property(readonly, nonatomic) CDStruct_1b6d18a9 maxBufferTime;
- (_Bool)shouldRestartAfterStalling;
- (_Bool)shouldPauseForStallingWithNextCheckCallback:(CDUnknownBlockType)arg1 stallReason:(int)arg2;
- (_Bool)trackHasMoreFrames:(long long)arg1;
- (_Bool)containsTrack:(long long)arg1;
- (_Bool)seekToPosition:(CDStruct_1b6d18a9)arg1;
- (_Bool)resetAssetToBeginningIfNeeded;
- (void)requestErrorNotificationIfNeeded;
- (void)requestTimeLoadedUpdate;
- (CDStruct_1b6d18a9)duration;
- (long long)statusOfValueForKey:(id)arg1 error:(id *)arg2;
- (void)updatePlaybackTime:(CDStruct_1b6d18a9)arg1;
- (struct CGAffineTransform)preferredTransform;
- (double)loadingStartedTimestamp;
- (void)loadValuesAsynchronouslyForKeys:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)dealloc;
@property(readonly, copy) NSString *description;
- (id)initWithConfig:(struct FNFDashAssetConfig)arg1 mpdData:(id)arg2 mpdUrl:(id)arg3 bandwidthProvider:(id)arg4;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

