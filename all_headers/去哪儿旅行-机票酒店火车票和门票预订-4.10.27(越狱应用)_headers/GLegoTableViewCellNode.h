//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

@class GLegoTableVC, GLegoTableViewCell, NSDictionary, NSIndexPath, NSMutableArray, NSString;

@interface GLegoTableViewCellNode : NSObject
{
    _Bool _unfold;
    NSString *_className;
    id _data;
    NSDictionary *_userInfo;
    GLegoTableVC *_legoVC;
    double _height;
    NSIndexPath *_indexPath;
    NSMutableArray *_subNodes;
    unsigned long long _unfoldDirection;
    long long _customTag;
    Class _viewClass;
    GLegoTableViewCell *_cellView;
}

+ (id)viewWithNode:(id)arg1;
+ (id)nodeWithClassName:(id)arg1 data:(id)arg2 userInfo:(id)arg3 customTag:(long long)arg4;
+ (id)nodeWithClassName:(id)arg1 data:(id)arg2 userInfo:(id)arg3;
+ (id)nodeWithClassName:(id)arg1 data:(id)arg2 customTag:(long long)arg3;
+ (id)nodeWithClassName:(id)arg1 data:(id)arg2;
@property(retain, nonatomic) GLegoTableViewCell *cellView; // @synthesize cellView=_cellView;
@property(readonly, nonatomic) Class viewClass; // @synthesize viewClass=_viewClass;
@property(nonatomic) long long customTag; // @synthesize customTag=_customTag;
@property(nonatomic) unsigned long long unfoldDirection; // @synthesize unfoldDirection=_unfoldDirection;
@property(nonatomic) _Bool unfold; // @synthesize unfold=_unfold;
@property(retain, nonatomic) NSMutableArray *subNodes; // @synthesize subNodes=_subNodes;
@property(retain, nonatomic) NSIndexPath *indexPath; // @synthesize indexPath=_indexPath;
@property(nonatomic) double height; // @synthesize height=_height;
@property(nonatomic) __weak GLegoTableVC *legoVC; // @synthesize legoVC=_legoVC;
@property(copy, nonatomic) NSDictionary *userInfo; // @synthesize userInfo=_userInfo;
@property(retain, nonatomic) id data; // @synthesize data=_data;
@property(copy, nonatomic) NSString *className; // @synthesize className=_className;
- (void).cxx_destruct;
- (id)description;
- (void)update;
- (void)updateWithData:(id)arg1 userInfo:(id)arg2;
- (void)updateWithClassName:(id)arg1 data:(id)arg2 userInfo:(id)arg3;
- (id)initWithClassName:(id)arg1 data:(id)arg2 userInfo:(id)arg3 customTag:(long long)arg4;
- (id)initWithClassName:(id)arg1 data:(id)arg2 userInfo:(id)arg3;
- (id)initWithClassName:(id)arg1 data:(id)arg2 customTag:(long long)arg3;
- (id)initWithClassName:(id)arg1 data:(id)arg2;

@end

