//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "BaseCore.h"

#import "AuthClient-Protocol.h"
#import "ChannelCoreClient-Protocol.h"
#import "MobileLiveCoreClient-Protocol.h"
#import "UIAlertViewDelegate-Protocol.h"

@class ConnectMicQueryAnchorAuthRes, NSMutableDictionary, NSString, NSTimer;
@protocol IProtoSDKSession;

@interface ConnectMicCore : BaseCore <UIAlertViewDelegate, AuthClient, MobileLiveCoreClient, ChannelCoreClient>
{
    _Bool _isUserCloseLowVersionTips;
    _Bool _isUserCloseNoAuthTips;
    _Bool _isUserLianMaiEnable;
    _Bool _isSysLianMaiEnable;
    _Bool _hasLianmaiApply;
    unsigned int _topCid;
    unsigned int _subCid;
    unsigned int _sendUid;
    unsigned int _inviterUid;
    unsigned int _inviteeUid;
    unsigned long long _state;
    unsigned long long _userLianmaiState;
    ConnectMicQueryAnchorAuthRes *_lianmaiAuth;
    id <IProtoSDKSession> _sdkSession;
    NSTimer *_timer;
    NSTimer *_connectPassTimer;
    long long _connectPassSecond;
    NSTimer *_userLianmaiTimer;
    NSMutableDictionary *_userAuthCache;
    long long _anchorId;
    unsigned long long _userTick;
}

@property(nonatomic) unsigned long long userTick; // @synthesize userTick=_userTick;
@property(nonatomic) long long anchorId; // @synthesize anchorId=_anchorId;
@property(retain, nonatomic) NSMutableDictionary *userAuthCache; // @synthesize userAuthCache=_userAuthCache;
@property(nonatomic) __weak NSTimer *userLianmaiTimer; // @synthesize userLianmaiTimer=_userLianmaiTimer;
@property(nonatomic) long long connectPassSecond; // @synthesize connectPassSecond=_connectPassSecond;
@property(retain, nonatomic) NSTimer *connectPassTimer; // @synthesize connectPassTimer=_connectPassTimer;
@property(retain, nonatomic) NSTimer *timer; // @synthesize timer=_timer;
@property(nonatomic) unsigned int inviteeUid; // @synthesize inviteeUid=_inviteeUid;
@property(nonatomic) unsigned int inviterUid; // @synthesize inviterUid=_inviterUid;
@property(nonatomic) unsigned int sendUid; // @synthesize sendUid=_sendUid;
@property(nonatomic) unsigned int subCid; // @synthesize subCid=_subCid;
@property(nonatomic) unsigned int topCid; // @synthesize topCid=_topCid;
@property(retain, nonatomic) id <IProtoSDKSession> sdkSession; // @synthesize sdkSession=_sdkSession;
@property(retain, nonatomic) ConnectMicQueryAnchorAuthRes *lianmaiAuth; // @synthesize lianmaiAuth=_lianmaiAuth;
@property(nonatomic) _Bool hasLianmaiApply; // @synthesize hasLianmaiApply=_hasLianmaiApply;
@property(nonatomic) _Bool isSysLianMaiEnable; // @synthesize isSysLianMaiEnable=_isSysLianMaiEnable;
@property(nonatomic) _Bool isUserLianMaiEnable; // @synthesize isUserLianMaiEnable=_isUserLianMaiEnable;
@property(nonatomic) unsigned long long userLianmaiState; // @synthesize userLianmaiState=_userLianmaiState;
@property(nonatomic) _Bool isUserCloseNoAuthTips; // @synthesize isUserCloseNoAuthTips=_isUserCloseNoAuthTips;
@property(nonatomic) _Bool isUserCloseLowVersionTips; // @synthesize isUserCloseLowVersionTips=_isUserCloseLowVersionTips;
@property(nonatomic) unsigned long long state; // @synthesize state=_state;
- (void).cxx_destruct;
- (void)cancelApplyLianmai;
- (void)onChannelChanged:(id)arg1;
- (void)onChannelWillChanged:(id)arg1;
- (void)onCurrentAnchorChange:(id)arg1;
- (void)userCancelApplyLianMai;
- (void)userApplyLianMaiWithCompletion:(CDUnknownBlockType)arg1;
- (void)onLianmaiAuthIsChanged:(id)arg1;
- (id)parselianmaiAuthRes:(struct pQueryLianmaiAuthExResp)arg1;
- (void)reqAnchorAuthwithCompletion:(CDUnknownBlockType)arg1;
- (void)saveAuthInfo:(id)arg1;
- (_Bool)userHasLianmaiAuthWithAnchor;
- (void)onAnchorLiveStop;
- (void)onCurrentAccountChanged:(long long)arg1;
- (void)onConnectMicTimerAction:(id)arg1;
- (void)stopConnectPassTimer;
- (void)startConnectPassTimer;
- (_Bool)updateCounting;
- (void)tickOut:(id)arg1;
- (void)stopUserLianmaiTimer;
- (void)startUserLianmaiTimer;
- (void)timeOut:(id)arg1;
- (void)stopTimer;
- (void)startTimer;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)onNotifyApplyListInfo:(struct PNotifyApplyListInfo)arg1;
- (void)onConnectMicCancel:(struct PLianMaiRes)arg1;
- (void)onConnectMicRespond:(struct PLianMaiRes)arg1;
- (void)onConnectMicInvitation:(struct PLianMaiRes)arg1;
- (void)onReceive:(id)arg1 maxType:(unsigned short)arg2 miniType:(unsigned short)arg3;
- (void)manualStopConnectMic;
- (void)setUserApplySwitchWithValue:(_Bool)arg1 isManual:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;
- (void)deleteApplyWithUidList:(id)arg1;
- (void)reqUserApplySettingWithCompletion:(CDUnknownBlockType)arg1;
- (void)reqApplyMicListWithCompletion:(CDUnknownBlockType)arg1;
- (void)reqDisConnectMicWithCompletion:(CDUnknownBlockType)arg1;
- (void)respondConnectMicInvitation:(unsigned long long)arg1 errorCode:(unsigned long long)arg2 completion:(CDUnknownBlockType)arg3;
- (void)respondConnectMicInvitation:(unsigned long long)arg1 completion:(CDUnknownBlockType)arg2;
- (void)reqConnectMicWithUid:(unsigned int)arg1 completion:(CDUnknownBlockType)arg2;
- (void)reqCheckConnectMicAuthWithUid:(unsigned int)arg1 completion:(CDUnknownBlockType)arg2;
- (long long)getConnectMicRemainTime;
- (unsigned int)getInviteeUid;
- (unsigned int)getInviterUid;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

