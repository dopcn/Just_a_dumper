//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

@class NSDate, NSMutableArray, NSString, QZTraceReportCommModel;

@interface QZTraceReportManager : NSObject
{
    NSDate *lastRepTime_;
    NSMutableArray *currentReportArray_;
    NSMutableArray *sendingReportArray_;
    QZTraceReportCommModel *commModel_;
    _Bool useBackupIp_;
    double lastUTCTime_;
    long long lastReportUin_;
    _Bool shouldReportTrace_;
    _Bool shouldReportNow_;
    _Bool isNeedUserAgent;
    NSString *gRefer;
    NSString *photoRefer;
    NSString *launchFrom;
    NSString *photoAndMoodRefer;
    NSString *activeInputboxRefer;
    NSString *userAgent;
    NSDate *beginDate;
    NSString *_device;
    NSString *_os;
}

+ (id)getInstance;
+ (id)getASINetQueue;
@property(retain, nonatomic) NSString *os; // @synthesize os=_os;
@property(retain, nonatomic) NSString *device; // @synthesize device=_device;
@property(retain, nonatomic) NSDate *beginDate; // @synthesize beginDate;
@property(retain, nonatomic) NSString *userAgent; // @synthesize userAgent;
@property(nonatomic) _Bool isNeedUserAgent; // @synthesize isNeedUserAgent;
@property(retain, nonatomic) NSString *activeInputboxRefer; // @synthesize activeInputboxRefer;
@property(retain, nonatomic) NSString *photoAndMoodRefer; // @synthesize photoAndMoodRefer;
@property(retain, nonatomic) NSString *launchFrom; // @synthesize launchFrom;
@property(retain, nonatomic) NSString *photoRefer; // @synthesize photoRefer;
@property(retain, nonatomic) NSString *gRefer; // @synthesize gRefer;
@property(nonatomic) _Bool useBackupIp; // @synthesize useBackupIp=useBackupIp_;
@property(retain, nonatomic) NSMutableArray *sendingReportArray; // @synthesize sendingReportArray=sendingReportArray_;
@property(retain, nonatomic) NSMutableArray *currentReportArray; // @synthesize currentReportArray=currentReportArray_;
@property(retain, nonatomic) QZTraceReportCommModel *commModel; // @synthesize commModel=commModel_;
@property(retain, nonatomic) NSDate *lastRepTime; // @synthesize lastRepTime=lastRepTime_;
- (void).cxx_destruct;
- (void)reportLocalData;
- (id)getReferId:(id)arg1;
- (void)reportData:(long long)arg1 uin:(long long)arg2 touin:(long long)arg3 firstActionType:(id)arg4 secondActionType:(id)arg5 thridActionType:(id)arg6 readSource:(id)arg7 reserves1:(id)arg8 reserves2:(id)arg9 reserves3:(id)arg10 reserves4:(id)arg11 reserves5:(id)arg12 reserves7:(id)arg13 refer:(id)arg14 appid:(long long)arg15 adid:(unsigned long long)arg16 traceid:(unsigned long long)arg17 extraDict:(id)arg18 pushStat:(id)arg19;
- (void)reportData:(long long)arg1 uin:(long long)arg2 touin:(long long)arg3 firstActionType:(id)arg4 secondActionType:(id)arg5 thridActionType:(id)arg6 readSource:(id)arg7 reserves1:(id)arg8 refer:(id)arg9 appid:(long long)arg10 adid:(unsigned long long)arg11 traceid:(unsigned long long)arg12;
- (void)reportData:(long long)arg1 uin:(long long)arg2 extraDict:(id)arg3;
- (void)reportData:(long long)arg1 uin:(long long)arg2 touin:(long long)arg3 firstActionType:(id)arg4 secondActionType:(id)arg5 thridActionType:(id)arg6 readSource:(id)arg7 reserves1:(id)arg8 refer:(id)arg9 appid:(long long)arg10;
- (void)reportData:(long long)arg1 uin:(long long)arg2 touin:(long long)arg3 firstActionType:(id)arg4 secondActionType:(id)arg5 thridActionType:(id)arg6 readSource:(id)arg7 refer:(id)arg8 appid:(long long)arg9;
- (void)reportData:(id)arg1 firstActionType:(id)arg2 reverse1:(id)arg3 level:(long long)arg4;
- (void)reportData:(id)arg1 reserves1:(id)arg2;
- (void)reportData:(id)arg1 level:(long long)arg2;
- (void)reportData:(id)arg1;
- (void)didRequestFail:(id)arg1;
- (void)didRequestFinish:(id)arg1;
- (void)didRequestStart:(id)arg1;
- (void)checkForUseBackupIpReport;
- (id)reportDatatoJson:(id)arg1 currentReportArray:(id)arg2;
- (id)compressReportInfo:(id)arg1;
- (void)startReportData:(id)arg1 useBackupIp:(_Bool)arg2 backupIp:(id)arg3 trySeq:(long long)arg4;
- (void)startReportData:(id)arg1 useBackupIp:(_Bool)arg2 backupIp:(id)arg3;
- (void)checkForReportNow;
- (_Bool)checkForFrequency;
- (void)getCommReportInfo;
- (void)reportFilter:(id)arg1;
- (void)dealloc;
- (id)init;

@end

