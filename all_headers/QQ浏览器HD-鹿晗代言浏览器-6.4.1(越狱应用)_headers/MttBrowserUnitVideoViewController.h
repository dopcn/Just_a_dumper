//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "MttBrowserUnitViewController.h"

#import "MttAppVideoFilterDelegate-Protocol.h"
#import "MttContentControllerBaseDelegate-Protocol.h"
#import "MttPanGestureBackDelegate-Protocol.h"
#import "MttVideoContentDelegate-Protocol.h"

@class MttAppVideoFilterView, MttFilteredMaskView, MttPanGestureBackController, MttVideoContentController, MttVideoDetailViewController, NSMutableArray, NSString, UIView;
@protocol MttWebView;

@interface MttBrowserUnitVideoViewController : MttBrowserUnitViewController <MttPanGestureBackDelegate, MttContentControllerBaseDelegate, MttVideoContentDelegate, MttAppVideoFilterDelegate>
{
    _Bool _showingToolbarAfterDraggingDown;
    struct UIView *_shareVideoWebView;
    MttVideoContentController *_firstLevelViewController;
    MttVideoContentController *_secondLevelViewController;
    MttVideoContentController *_currentController;
    MttVideoDetailViewController *_detailViewController;
    double _previousContentOffsetY;
    UIView *_filterView;
    MttFilteredMaskView *_filterMaskView;
    MttAppVideoFilterView *_filterContentView;
    MttPanGestureBackController *_panGestureBackController;
    NSMutableArray *_detailViewControllerArray;
}

@property(retain, nonatomic) NSMutableArray *detailViewControllerArray; // @synthesize detailViewControllerArray=_detailViewControllerArray;
@property(retain, nonatomic) MttPanGestureBackController *panGestureBackController; // @synthesize panGestureBackController=_panGestureBackController;
@property(retain, nonatomic) MttAppVideoFilterView *filterContentView; // @synthesize filterContentView=_filterContentView;
@property(retain, nonatomic) MttFilteredMaskView *filterMaskView; // @synthesize filterMaskView=_filterMaskView;
@property(retain, nonatomic) UIView *filterView; // @synthesize filterView=_filterView;
@property(nonatomic) _Bool showingToolbarAfterDraggingDown; // @synthesize showingToolbarAfterDraggingDown=_showingToolbarAfterDraggingDown;
@property(nonatomic) double previousContentOffsetY; // @synthesize previousContentOffsetY=_previousContentOffsetY;
@property(retain, nonatomic) MttVideoDetailViewController *detailViewController; // @synthesize detailViewController=_detailViewController;
@property(retain, nonatomic) MttVideoContentController *currentController; // @synthesize currentController=_currentController;
@property(retain, nonatomic) MttVideoContentController *secondLevelViewController; // @synthesize secondLevelViewController=_secondLevelViewController;
@property(retain, nonatomic) MttVideoContentController *firstLevelViewController; // @synthesize firstLevelViewController=_firstLevelViewController;
@property(retain, nonatomic) UIView<MttWebView> *shareVideoWebView; // @synthesize shareVideoWebView=_shareVideoWebView;
- (void).cxx_destruct;
- (void)appVideoFilterViewChangeSelection:(id)arg1 withTabChange:(_Bool)arg2;
- (id)videoContentControllerFilterView:(id)arg1;
- (void)videoContentControllerDidClickBack:(id)arg1;
- (void)videoContentControllerSwitchToSceneWithCurrentFilter:(id)arg1;
- (void)videoContentController:(id)arg1 withVideo:(id)arg2 withCoverImage:(id)arg3;
- (void)videoContentController:(id)arg1 switchToSenceOfTab:(int)arg2 bannerTitle:(id)arg3 filterDictionary:(id)arg4 withFilterIndex:(long long)arg5;
- (void)updateFilterContent:(int)arg1 withFilterDict:(id)arg2;
- (void)videoContentController:(id)arg1 showFilterAtTab:(int)arg2;
- (void)videoContentController:(id)arg1 updateFilterAtTab:(int)arg2 subTab:(int)arg3 withType:(long long)arg4 withFilterDict:(id)arg5 completeBlock:(CDUnknownBlockType)arg6;
- (struct CGRect)filterContentViewShownFrame;
- (void)showFilterView:(_Bool)arg1;
- (void)hideFilterAnimated:(_Bool)arg1;
- (void)onTapMask:(id)arg1;
- (void)createFilterView;
- (void)panGestureBackDidSucceed;
- (void)panGestureBackStart;
- (void)applyTransitionStyle:(_Bool)arg1;
- (void)removeVideoContentController:(id)arg1 animated:(_Bool)arg2 usePopStyle:(_Bool)arg3;
- (void)removeVideoContentController:(id)arg1;
- (void)presentVideoContentController:(id)arg1 animated:(_Bool)arg2 usePushStyle:(_Bool)arg3;
- (void)presentVideoContentController:(id)arg1;
- (id)createVideoContentControllerWithType:(long long)arg1;
- (void)dealloc;
- (id)pageScrollView;
- (long long)bookmarkStatusForToolbar:(id)arg1;
- (_Bool)needSearchIconForToolbar:(id)arg1;
- (_Bool)needRefreshButtonForToolbar:(id)arg1;
- (_Bool)isLoadingForToolbar:(id)arg1;
- (double)progressValueForToolbar:(id)arg1;
- (_Bool)pluginButtonEnabledForToolbar:(id)arg1;
- (_Bool)homeButtonEnabledForToolbar:(id)arg1;
- (_Bool)canAdCut;
- (_Bool)forwardButtonEnabledForToolbar:(id)arg1;
- (_Bool)backButtonEnabledForToolbar:(id)arg1;
- (_Bool)needBlurEffectForToolbar:(id)arg1;
- (id)statusBarColorForToolbar:(id)arg1 shouldForceToolBarToUseIt:(_Bool *)arg2;
- (_Bool)isNativeContent;
- (void)updateToolbarOffset:(double)arg1 animated:(_Bool)arg2;
- (_Bool)isShowingToolBarDragDownAnimation;
- (void)contentControllerNeedReloadToolBar;
- (void)contentControllerScrollViewWillEndDragging:(id)arg1 withVelocity:(struct CGPoint)arg2 targetContentOffset:(inout struct CGPoint *)arg3;
- (void)contentControllerScrollViewDidScroll:(id)arg1;
- (_Bool)destroy;
- (_Bool)isOnlyOneInstance;
- (id)url;
- (id)title;
- (void)reload;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (void)reset;
- (void)loadURL:(id)arg1 fromWebArchive:(_Bool)arg2;
- (void)loadURL:(id)arg1 withReferer:(id)arg2;
- (void)loadURL:(id)arg1;
- (_Bool)panGestureBackRecognizerShouldBegin:(id)arg1;
- (void)panGestureBackSucceed;
- (void)panGestureBackDidStart;
- (struct CGRect)finalFrameOfTargetViewForPanGestureBack;
- (struct CGRect)finalFrameOfCurrentViewForPanGestureBack;
- (struct CGRect)initialFrameOfTargetViewForPanGestureBack;
- (struct CGRect)initialFrameOfCurrentViewForPanGestureBack;
- (id)targetViewForPanGestureBack;
- (id)currentViewForPanGestureBack;
- (id)containerViewForPanGestureBack;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

