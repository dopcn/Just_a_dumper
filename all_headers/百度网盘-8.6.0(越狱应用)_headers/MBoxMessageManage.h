//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "BaseManage.h"

@class HHTimer, MBoxMessageUploadEngine, NSMutableArray, NSMutableDictionary;

@interface MBoxMessageManage : BaseManage
{
    void *IsOnCurrentQueueOrTargetQueueKey;
    _Bool _hasNewMessage;
    NSMutableDictionary *_sendMessageDictionary;
    NSMutableDictionary *_sendLocalMessageDictionary;
    NSMutableArray *_openSeesionArray;
    HHTimer *_messageFetchTimer;
    NSMutableDictionary *_ongoingRequestDictionary;
    NSMutableDictionary *_ongoingThumbRequestDictionary;
    unsigned long long _doubleMsgReadRequestTag;
    unsigned long long _sysMsgReadRequestTag;
    unsigned long long _groupMsgReadRequestTag;
    unsigned long long _newFriendMsgReadRequestTag;
    unsigned long long _doubleMsgListFetchRequestTag;
    unsigned long long _newFriendMsgFetchRequestTag;
    MBoxMessageUploadEngine *_uploadEngine;
    NSMutableArray *_waitingVerifyMessageArray;
}

+ (id)convertRequestToChatMessage:(id)arg1 isAssistMsg:(_Bool)arg2;
+ (id)convertFileFromRequestModel:(id)arg1 withMessage:(id)arg2 requestModel:(id)arg3;
+ (id)getMsgWithType:(int)arg1;
+ (struct CGSize)thumVideoImageSize;
+ (void)thumVideoImageByImage:(id)arg1 andWriteToFile:(id)arg2;
+ (void)thumImageByImage:(id)arg1 andWriteToFile:(id)arg2;
+ (id)getMessageFirstFile:(id)arg1;
+ (id)constructSendMsgWithType:(int)arg1 msgContent:(id)arg2 fileList:(id)arg3 toUser:(id)arg4 contentType:(long long)arg5;
+ (unsigned long long)sizeOfTransArray:(id)arg1;
+ (id)messageTitle:(id)arg1 isConversation:(_Bool)arg2;
+ (id)sharedMBoxMessageManage;
@property(retain, nonatomic) NSMutableArray *waitingVerifyMessageArray; // @synthesize waitingVerifyMessageArray=_waitingVerifyMessageArray;
@property(retain, nonatomic) MBoxMessageUploadEngine *uploadEngine; // @synthesize uploadEngine=_uploadEngine;
@property(nonatomic) _Bool hasNewMessage; // @synthesize hasNewMessage=_hasNewMessage;
@property(nonatomic) unsigned long long newFriendMsgFetchRequestTag; // @synthesize newFriendMsgFetchRequestTag=_newFriendMsgFetchRequestTag;
@property(nonatomic) unsigned long long doubleMsgListFetchRequestTag; // @synthesize doubleMsgListFetchRequestTag=_doubleMsgListFetchRequestTag;
@property(nonatomic) unsigned long long newFriendMsgReadRequestTag; // @synthesize newFriendMsgReadRequestTag=_newFriendMsgReadRequestTag;
@property(nonatomic) unsigned long long groupMsgReadRequestTag; // @synthesize groupMsgReadRequestTag=_groupMsgReadRequestTag;
@property(nonatomic) unsigned long long sysMsgReadRequestTag; // @synthesize sysMsgReadRequestTag=_sysMsgReadRequestTag;
@property(nonatomic) unsigned long long doubleMsgReadRequestTag; // @synthesize doubleMsgReadRequestTag=_doubleMsgReadRequestTag;
@property(retain, nonatomic) NSMutableDictionary *ongoingThumbRequestDictionary; // @synthesize ongoingThumbRequestDictionary=_ongoingThumbRequestDictionary;
@property(retain, nonatomic) NSMutableDictionary *ongoingRequestDictionary; // @synthesize ongoingRequestDictionary=_ongoingRequestDictionary;
@property(retain, nonatomic) HHTimer *messageFetchTimer; // @synthesize messageFetchTimer=_messageFetchTimer;
@property(retain, nonatomic) NSMutableArray *openSeesionArray; // @synthesize openSeesionArray=_openSeesionArray;
@property(retain, nonatomic) NSMutableDictionary *sendLocalMessageDictionary; // @synthesize sendLocalMessageDictionary=_sendLocalMessageDictionary;
@property(retain, nonatomic) NSMutableDictionary *sendMessageDictionary; // @synthesize sendMessageDictionary=_sendMessageDictionary;
- (void).cxx_destruct;
- (void)notificationQuitGroup:(id)arg1;
- (void)insertGroupMessageWithFailedUser:(id)arg1 failedUserList:(id)arg2 messagesTime:(id)arg3;
- (void)clearDraftInfo:(id)arg1;
- (void)saveDraftInfo:(id)arg1;
- (id)findDraftInfoByMessage:(id)arg1;
- (id)convertTransListToShareModelList:(id)arg1 withMsg:(id)arg2;
- (id)imageFileListWithGid:(id)arg1 msgID:(id)arg2 imageCountLimit:(long long)arg3;
- (id)imageFileListWithUK:(id)arg1 msgID:(id)arg2 isToUser:(_Bool)arg3 imageCountLimit:(long long)arg4;
- (_Bool)updateNewFriendNotificationMsg:(id)arg1 withFollowFlag:(long long)arg2;
- (id)getAllNewFriendUnReadNotifications;
- (_Bool)removeNewFriendNotificationMsgs:(id)arg1;
- (void)requestNewFriendNotification;
- (_Bool)updateConversationDraftInfo:(id)arg1;
- (void)saveMboxShareDraftInformation:(id)arg1;
- (id)mboxShareDraftSaveFilePath;
- (id)mboxShareDraftSaveDir;
- (void)clearShareExtensionCacheFilesWithMessage:(id)arg1;
- (void)clearShareExtensionCacheFile:(id)arg1;
- (_Bool)isHasActiveTask;
- (int)wwlanUploadStatus;
- (void)changeWWlanUploadFlag:(int)arg1 schedueQueue:(_Bool)arg2;
- (void)reStartUploadMessage:(id)arg1 ingoreFailFile:(_Bool)arg2 isNewMsg:(_Bool)arg3 verifyCode:(id)arg4 verifyContext:(id)arg5 completion:(CDUnknownBlockType)arg6;
- (id)convertToTransFileList:(id)arg1 assetType:(int)arg2;
- (double)messageTransSpeed:(id)arg1;
- (_Bool)isMessageTransing:(id)arg1;
- (unsigned long long)getMessageUploadFileFailCount:(id)arg1;
- (id)getMessageTransFileList:(id)arg1;
- (void)sendLocalMessage:(id)arg1 receiveArray:(id)arg2;
- (void)getBusinessSwitchWithOption:(int)arg1 callback:(id)arg2;
- (void)setupBusinessSwitch:(_Bool)arg1 option:(int)arg2 callback:(id)arg3;
- (void)markOldSysMessageRead;
- (void)markOldMessageRead;
- (void)markGroupArrayMsgRead:(id)arg1;
- (void)handleMessageCancelled:(id)arg1;
- (void)handleAppLogOutEvent:(id)arg1;
- (void)handleQuitGroupChanged:(id)arg1;
- (void)handleRecommadUserChanged:(id)arg1;
- (void)handleAppLoginEvent:(id)arg1;
- (void)handleAppEnterForeGroundEvent:(id)arg1;
- (void)handleAppLanchEvent:(id)arg1;
- (void)handleP2PShareChangedNotification:(id)arg1;
- (void)handleConnectionFail:(id)arg1;
- (void)locationServerClose:(id)arg1;
- (void)handleHttpNetCheckFail:(id)arg1;
- (void)handleHttpNetCheckEnable:(id)arg1;
- (void)wifiSwitch:(id)arg1;
- (void)updateOngoingMsgToFail;
- (id)findOngoingMessageArray:(id)arg1;
- (void)startFetchSystemAssistMsg;
- (void)cancelFetchTimer;
- (void)handlerShareDirDiffResultWithModel:(id)arg1;
- (void)handlerMboxDiffResultWithModel:(id)arg1 hiddenIndicator:(_Bool)arg2;
- (void)queryDiffResultWithHiddenIndicator:(_Bool)arg1;
- (void)startFetchTimer:(double)arg1 needHiddenIndicator:(_Bool)arg2;
- (void)startFetchAllMsg:(_Bool)arg1 needHiddenIndicator:(_Bool)arg2;
- (void)startFetchGroupChatMessage:(_Bool)arg1 needHiddenIndicator:(_Bool)arg2 groupList:(id)arg3 needToFetchGroupList:(_Bool)arg4;
- (void)handleGroupMsgFetched:(id)arg1 withReadDic:(id)arg2 bRecurise:(_Bool)arg3;
- (_Bool)isFetchingGroupMsg;
- (void)startFetchGroupMsg:(id)arg1;
- (unsigned long long)startFetchDoubleChatMessage:(_Bool)arg1 needHiddenIndicator:(_Bool)arg2;
- (void)checkMsgFecthComplete;
- (void)wrapRunDispatchBlock:(CDUnknownBlockType)arg1;
- (_Bool)isDispatchOnCurrentQueue;
- (void)handleNewIncomineMsgArray:(id)arg1 withReadDic:(id)arg2 bRecurise:(_Bool)arg3;
- (void)continousMessageUpload:(id)arg1;
- (void)cancelMessageUpload:(id)arg1;
- (void)deleteConversation:(id)arg1;
- (void)deleteMessagesArray:(id)arg1;
- (void)deleteLocalMessage:(id)arg1;
- (void)deleteMessagesByGID:(id)arg1;
- (void)deleteMessagesByUK:(id)arg1;
- (id)getConversations:(unsigned long long)arg1 count:(unsigned long long)arg2;
- (id)getGroupMessageByMsgID:(id)arg1;
- (id)getDoubleMessageByMsgID:(id)arg1;
- (id)getGroupMessageByGroupID:(id)arg1 start:(unsigned long long)arg2 count:(unsigned long long)arg3;
- (id)getDoubleMessageByUK:(id)arg1 start:(unsigned long long)arg2 count:(unsigned long long)arg3;
- (void)fetchDoubleNewMessage;
- (_Bool)hasMessageTransOngoing:(id)arg1 transType:(int)arg2;
- (id)failMsgStatusString:(long long)arg1 isTextMsg:(_Bool)arg2;
- (void)markConversationRead:(id)arg1;
- (void)handleLocalMessageSendDone:(id)arg1;
- (void)handleMessageSendDone:(id)arg1 withMessage:(id)arg2 receiveArray:(id)arg3 withTransFile:(id)arg4;
- (void)handleWaitingVerifyMessageArray;
- (unsigned long long)sendMessage:(id)arg1 receiveArray:(id)arg2 verifyCode:(id)arg3 verifyContext:(id)arg4 callback:(id)arg5;
- (unsigned long long)notifyPersonToAddFriend:(id)arg1 callback:(id)arg2;
- (void)addLocalMessageSendlog:(id)arg1;
- (void)addMessageSendlog:(id)arg1;
- (void)updateMsgStatus:(id)arg1 status:(int)arg2;
- (void)deleteWaitingVerifyMessage:(id)arg1;
- (void)handleSendMessageEvent:(id)arg1 withReceiveArray:(id)arg2;
- (void)updateConversationWithNewMessage:(id)arg1 withReadDic:(id)arg2 withReceiveArray:(id)arg3;
- (void)handleAddFollowEvent:(id)arg1;
- (_Bool)calucateNewMessageStatus:(id)arg1 withReadDic:(id)arg2;
- (_Bool)findOpenSessionWithMessage:(id)arg1;
- (unsigned long long)getAllUnreadMsgCount;
- (void)closeSession:(id)arg1;
- (void)openNewSession:(id)arg1;
- (_Bool)isSystemAssistUK:(id)arg1;
- (id)getAssistSystemUK;
- (void)addNotification;
- (id)init;
- (unsigned long long)refreshMboxMessageDlinkInfo:(id)arg1 callback:(id)arg2;

@end

