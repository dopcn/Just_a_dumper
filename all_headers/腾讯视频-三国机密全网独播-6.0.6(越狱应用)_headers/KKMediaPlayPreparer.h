//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

#import "MakeJsonDataDelegate-Protocol.h"
#import "QLGetVinfoDelegate-Protocol.h"
#import "QLImageLoadDelegate-Protocol.h"
#import "QLRequestModelDelegate-Protocol.h"
#import "VideoP2PDataControllerDelegate-Protocol.h"

@class KKMediaPlayInfo, KKMediaRootViewController, KKVideoInfo, NSMutableArray, NSString, VideoP2PDataController;
@protocol KKMediaPlayPrepareDelegate;

@interface KKMediaPlayPreparer : NSObject <QLImageLoadDelegate, MakeJsonDataDelegate, QLGetVinfoDelegate, QLRequestModelDelegate, VideoP2PDataControllerDelegate>
{
    id <KKMediaPlayPrepareDelegate> _delegate;
    long long _totalUrlKeysNum;
    _Bool _useDefaultFormat;
    _Bool _updateUrlAfterBkeyReady;
    _Bool _isStopped;
    NSMutableArray *_arrayVideoKeyDataController;
    _Bool _isCarrierFreeMode;
    long long _keyErrorRetryCount;
    long long _previewInfoErrorRetryCount;
    VideoP2PDataController *_videoP2PDataController;
    _Bool _prepareP2PError;
    _Bool _didGetProgVPreviewInfo;
    unsigned int _prepaerSeq;
    double _requestUrlStartTime;
    long long _p2pRetryCount;
    long long _unfinishedVbkeyRequestNum;
    _Bool _playOtherFormatAction;
    _Bool _isP2pSupportLoaderToPlay;
    KKMediaPlayInfo *_mediaPlayInfo;
    KKVideoInfo *_videoInfo;
    KKMediaRootViewController *_mainCtrl;
    long long _defsrc;
}

+ (double)downloadedTime3GStatusWithVid:(id)arg1;
+ (unsigned long long)downLoadVideoRealResolutionWithVideoID:(id)arg1;
+ (_Bool)checkWhetherVideoDownLoadTaskIsFinish3GStatusWithVid:(id)arg1;
@property(nonatomic) long long defsrc; // @synthesize defsrc=_defsrc;
@property(nonatomic) _Bool isP2pSupportLoaderToPlay; // @synthesize isP2pSupportLoaderToPlay=_isP2pSupportLoaderToPlay;
@property(nonatomic) _Bool didGetProgVPreviewInfo; // @synthesize didGetProgVPreviewInfo=_didGetProgVPreviewInfo;
@property(nonatomic) __weak KKMediaRootViewController *mainCtrl; // @synthesize mainCtrl=_mainCtrl;
@property(nonatomic) _Bool playOtherFormatAction; // @synthesize playOtherFormatAction=_playOtherFormatAction;
@property(nonatomic) double requestUrlStartTime; // @synthesize requestUrlStartTime=_requestUrlStartTime;
@property(retain) KKVideoInfo *videoInfo; // @synthesize videoInfo=_videoInfo;
@property(retain) KKMediaPlayInfo *mediaPlayInfo; // @synthesize mediaPlayInfo=_mediaPlayInfo;
- (void).cxx_destruct;
- (_Bool)isRetryPlayVideo;
- (id)generateStandardStringWithInterfaceType:(long long)arg1 errorCode:(long long)arg2;
- (void)didFailedRequestInfo:(long long)arg1 withErrorCode:(long long)arg2;
- (void)didFailedRequestGetvbkeyInfo:(id)arg1 withErrorCode:(id)arg2;
- (void)didFinishedRequestGetvbkeyInfo:(id)arg1;
- (void)startGetvbkeyInfo;
- (void)didFailedRequestGetvinfo:(id)arg1 withErrorCode:(id)arg2;
- (void)didFinishedRequestGetvinfo:(id)arg1;
- (void)startGetvinfo;
- (id)getliveCacheKey;
- (void)didRequestFailedWithData:(id)arg1 error:(id)arg2 isNetError:(_Bool)arg3;
- (void)didRequestFinishWithData:(id)arg1 responseData:(id)arg2 withUrl:(id)arg3;
- (id)readFromCacheWithUrl:(id)arg1;
- (long long)getDataResponseCachePolicy;
- (long long)getDataRequestCachePolicy;
- (int)mediaDownloadInfo;
- (void)retryP2pPlay;
- (void)didDataError:(id)arg1 errorCode:(int)arg2;
- (void)didDataFinished:(id)arg1;
- (id)componenKeyIndexText:(long long)arg1;
- (void)onReceiveRequestNetFailed:(id)arg1;
- (void)onReceiveRequestDataError:(id)arg1;
- (_Bool)shouldPrepareDefaultAddress:(long long)arg1 withErrorCode:(long long)arg2 errorType:(long long)arg3;
- (void)removeNotificationWithNetRequestDataErrorAndFailed;
- (void)addNotificationWithNetRequestDataErrorAndFailed;
- (void)removeNotification;
- (void)removeNotificationWithName:(id)arg1;
- (void)addNotificationWithName:(id)arg1 withInterfaceType:(long long)arg2;
- (void)requestModelDidStartLoad:(id)arg1;
- (void)didLoadImage:(id)arg1 forURL:(id)arg2;
- (void)getCertainMovieItemForPlayer;
- (void)loadMovieImageForPlayer:(id)arg1;
- (id)getPlayingMovieItemFromJceModel:(id)arg1;
- (void)updateVideoDetailInfoFromJceModel:(id)arg1;
- (void)onReceiveBKeyInfo:(id)arg1;
- (void)onReceiveClarityInfo:(id)arg1;
- (void)onReceiveVideoInfo:(id)arg1;
- (void)onReceiveLiveProgInfo:(id)arg1;
- (void)onReceiveTVStationInfo:(id)arg1;
- (_Bool)requestInterfaceAgainWithInterfaceType:(long long)arg1;
- (void)onAllFileKeysReady;
- (void)replaceOnlinePlayURLWithLocalDonwloadedClipVideoFilePath;
- (void)changeFileKeyForSingleKeyVideo:(id)arg1;
- (void)handlePreWatchVideoFileKey;
- (void)changeFileKeysFromStart:(long long)arg1 withKeyEnd:(long long)arg2 withKeyData:(id)arg3 withUInfo:(id)arg4;
- (void)makeFileKeyWithVideoID:(id)arg1 withKeysIndexText:(id)arg2 withKeyStart:(long long)arg3 withKeyEnd:(long long)arg4;
- (void)startToRequestBKeysWithClipCount:(long long)arg1;
- (long long)indexOfPreWatchVideo;
- (void)makeVideoDetailData;
- (id)makeP2PLiveInfoWithURL:(id)arg1 andJsonString:(id)arg2;
- (void)configVideoP2PDataControllerIsPayVideo;
- (void)makeP2PInfo;
- (void)makeClarityInfo;
- (void)makeVideoInfo;
- (void)makeLiveProgInfo:(unsigned long long)arg1;
- (long long)getRequestMediaType;
- (_Bool)checkWhetherVideoDownloadedAndPrepare;
- (void)onMediaPlayInfoUpdated:(int)arg1;
- (void)onMediaPlayInfoPrepareFailed:(id)arg1;
- (void)onVideoLiveQueue:(id)arg1 withGetProVInfo:(unsigned long long)arg2;
- (void)onVideoNoPurchaseForPaidMedia:(id)arg1 withGetProVInfo:(unsigned long long)arg2;
- (void)onMediaPlayInfoPrepared;
- (void)startToPrepareVideoWithOtherFormat:(id)arg1;
- (void)startToPrepareVideo:(id)arg1 withMeidiaPlayInfo:(id)arg2;
- (void)startToPrepareVideoForDefaultAddress;
- (void)resetInitialPlayedTimeForLocalVideoID:(id)arg1;
- (void)startToPrepareVideo;
- (_Bool)isNeedPrepareP2P;
- (void)adjustVideoFormat:(id)arg1;
- (void)stopPreparer;
- (void)cancelRequests;
@property(readonly, nonatomic) long long p2pDataID;
- (void)dealloc;
- (id)initWithPlayerController:(id)arg1;
- (double)timeForShowPlayBtnTargetPoint;
- (unsigned long long)downLoadVideoRealResolutionWithVideoID:(id)arg1;
- (double)downloadedTime;
- (_Bool)currentVideoDownloadFinishAndResolutionIsEqual;
- (id)downloadAndPlayCurrentFormat:(id)arg1;
- (_Bool)checkWhetherVideoDownLoadTaskIsFinish;
- (_Bool)videoHasExistOfDownloadFinish;
- (_Bool)shouldCheckPreWatch;
- (_Bool)hasVideoClipDownLoadFinish;
- (_Bool)isDownloadingAndPlayVideo;
- (_Bool)downloadingAndPlayVideoNeedOfflinePlay;
- (_Bool)checkVideoDownloadState;
- (_Bool)shouldPlayVideoAsLocalFile;
- (void)makeP2PInfoOfUnicomMode;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

