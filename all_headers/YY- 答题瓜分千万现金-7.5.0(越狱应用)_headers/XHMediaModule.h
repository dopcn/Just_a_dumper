//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "ATModelBase.h"

#import "AVAudioRecorderDelegate-Protocol.h"
#import "XHMediaCoreDelegate-Protocol.h"
#import "XHMediaModuleProtocol-Protocol.h"

@class AVAudioRecorder, NSString, XHMediaCore, YYTPBSTimer;

@interface XHMediaModule : ATModelBase <XHMediaCoreDelegate, AVAudioRecorderDelegate, XHMediaModuleProtocol>
{
    _Bool _shouldResumeMp3;
    _Bool _recordUnderPcmMode;
    _Bool _needResumeAudio;
    _Bool _isPlaying;
    float _mediaPlayerVolume;
    CDUnknownBlockType _playingProgress;
    CDUnknownBlockType _finishPlaying;
    CDUnknownBlockType _finishRecording;
    CDUnknownBlockType _finishStopPlaying;
    CDUnknownBlockType _recordVolumeChanged;
    XHMediaCore *_mediaCore;
    YYTPBSTimer *_timer;
    double _totalTime;
    unsigned long long _recordingDuration;
    NSString *_recordedFilePath;
    AVAudioRecorder *_sysAudioRecorder;
}

@property(retain, nonatomic) AVAudioRecorder *sysAudioRecorder; // @synthesize sysAudioRecorder=_sysAudioRecorder;
@property(copy, nonatomic) NSString *recordedFilePath; // @synthesize recordedFilePath=_recordedFilePath;
@property(nonatomic) unsigned long long recordingDuration; // @synthesize recordingDuration=_recordingDuration;
@property(nonatomic) _Bool isPlaying; // @synthesize isPlaying=_isPlaying;
@property(nonatomic) _Bool needResumeAudio; // @synthesize needResumeAudio=_needResumeAudio;
@property(nonatomic) _Bool recordUnderPcmMode; // @synthesize recordUnderPcmMode=_recordUnderPcmMode;
@property(nonatomic) float mediaPlayerVolume; // @synthesize mediaPlayerVolume=_mediaPlayerVolume;
@property(nonatomic) _Bool shouldResumeMp3; // @synthesize shouldResumeMp3=_shouldResumeMp3;
@property(nonatomic) double totalTime; // @synthesize totalTime=_totalTime;
@property(retain, nonatomic) YYTPBSTimer *timer; // @synthesize timer=_timer;
@property(retain, nonatomic) XHMediaCore *mediaCore; // @synthesize mediaCore=_mediaCore;
@property(copy, nonatomic) CDUnknownBlockType recordVolumeChanged; // @synthesize recordVolumeChanged=_recordVolumeChanged;
@property(copy, nonatomic) CDUnknownBlockType finishStopPlaying; // @synthesize finishStopPlaying=_finishStopPlaying;
@property(copy, nonatomic) CDUnknownBlockType finishRecording; // @synthesize finishRecording=_finishRecording;
@property(copy, nonatomic) CDUnknownBlockType finishPlaying; // @synthesize finishPlaying=_finishPlaying;
@property(copy, nonatomic) CDUnknownBlockType playingProgress; // @synthesize playingProgress=_playingProgress;
- (void).cxx_destruct;
- (void)onRecordedVolumeDisplay:(unsigned int)arg1 volume:(unsigned int)arg2;
- (void)onAudioRecorderStoppedWithReason:(id)arg1 stopReason:(long long)arg2 totalDuration:(unsigned long long)arg3;
- (void)onAudioPlayerStoppedWithReason:(id)arg1 stopReason:(unsigned long long)arg2;
- (void)onAudioPlayerProgressPlayed:(id)arg1 playedMs:(unsigned long long)arg2 totalDuration:(unsigned long long)arg3;
- (void)stopTimer;
- (void)startTimer;
- (void)onRecordingTimeout:(id)arg1;
- (void)removeSoundRecorder;
- (void)stopPlaysound:(CDUnknownBlockType)arg1;
- (void)pausePlaysound;
- (void)stopPlayStream;
- (void)playRecorderWithProgress:(CDUnknownBlockType)arg1 finish:(CDUnknownBlockType)arg2;
- (void)stopRecorder;
- (void)_startRecordWithType:(id)arg1 duration:(double)arg2 volumeChaged:(CDUnknownBlockType)arg3 finishRecording:(CDUnknownBlockType)arg4;
- (void)startRecordAACWithDuration:(double)arg1 volumeChaged:(CDUnknownBlockType)arg2 finishRecording:(CDUnknownBlockType)arg3;
- (void)startRecordWithDuration:(double)arg1 volumeChaged:(CDUnknownBlockType)arg2 finishRecording:(CDUnknownBlockType)arg3;
- (void)uninitModel;
- (void)initModel;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

