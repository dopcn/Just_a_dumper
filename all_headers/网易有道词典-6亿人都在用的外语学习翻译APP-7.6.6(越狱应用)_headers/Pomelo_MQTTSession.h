//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

#import "Pomelo_MQTTDecoderDelegate-Protocol.h"
#import "Pomelo_MQTTEncoderDelegate-Protocol.h"

@class NSMutableArray, NSMutableDictionary, NSRunLoop, NSString, NSTimer, Pomelo_MQTTDecoder, Pomelo_MQTTEncoder, Pomelo_MQTTMessage;
@protocol Pomelo_MQTTSessionDelegate;

@interface Pomelo_MQTTSession : NSObject <Pomelo_MQTTEncoderDelegate, Pomelo_MQTTDecoderDelegate>
{
    _Bool _cleanSessionFlag;
    _Bool _isWaitingPong;
    _Bool _closed;
    unsigned short _keepAliveInterval;
    unsigned short _txMsgId;
    int _status;
    id <Pomelo_MQTTSessionDelegate> _delegate;
    NSString *_clientId;
    Pomelo_MQTTMessage *_connectMessage;
    NSRunLoop *_runLoop;
    NSString *_runLoopMode;
    NSTimer *_timer;
    long long _idleTimer;
    Pomelo_MQTTEncoder *_encoder;
    Pomelo_MQTTDecoder *_decoder;
    NSMutableDictionary *_txFlows;
    NSMutableDictionary *_rxFlows;
    unsigned long long _ticks;
    NSMutableArray *_queue;
    NSMutableArray *_timerRing;
}

@property(nonatomic) _Bool closed; // @synthesize closed=_closed;
@property(retain, nonatomic) NSMutableArray *timerRing; // @synthesize timerRing=_timerRing;
@property(retain, nonatomic) NSMutableArray *queue; // @synthesize queue=_queue;
@property(nonatomic) _Bool isWaitingPong; // @synthesize isWaitingPong=_isWaitingPong;
@property(nonatomic) unsigned long long ticks; // @synthesize ticks=_ticks;
@property(retain, nonatomic) NSMutableDictionary *rxFlows; // @synthesize rxFlows=_rxFlows;
@property(retain, nonatomic) NSMutableDictionary *txFlows; // @synthesize txFlows=_txFlows;
@property(nonatomic) unsigned short txMsgId; // @synthesize txMsgId=_txMsgId;
@property(retain, nonatomic) Pomelo_MQTTDecoder *decoder; // @synthesize decoder=_decoder;
@property(retain, nonatomic) Pomelo_MQTTEncoder *encoder; // @synthesize encoder=_encoder;
@property(nonatomic) long long idleTimer; // @synthesize idleTimer=_idleTimer;
@property(retain, nonatomic) NSTimer *timer; // @synthesize timer=_timer;
@property(copy, nonatomic) NSString *runLoopMode; // @synthesize runLoopMode=_runLoopMode;
@property(nonatomic) __weak NSRunLoop *runLoop; // @synthesize runLoop=_runLoop;
@property(retain, nonatomic) Pomelo_MQTTMessage *connectMessage; // @synthesize connectMessage=_connectMessage;
@property(nonatomic) _Bool cleanSessionFlag; // @synthesize cleanSessionFlag=_cleanSessionFlag;
@property(nonatomic) unsigned short keepAliveInterval; // @synthesize keepAliveInterval=_keepAliveInterval;
@property(copy, nonatomic) NSString *clientId; // @synthesize clientId=_clientId;
@property(nonatomic) int status; // @synthesize status=_status;
@property(nonatomic) __weak id <Pomelo_MQTTSessionDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (unsigned short)nextMsgId;
- (void)send:(id)arg1;
- (void)error:(int)arg1;
- (void)handlePingresp:(id)arg1;
- (void)handlePubcomp:(id)arg1;
- (void)handlePubrel:(id)arg1;
- (void)handlePubrec:(id)arg1;
- (void)handlePuback:(id)arg1;
- (void)handlePublish:(id)arg1;
- (void)newMessage:(id)arg1;
- (void)decoder:(id)arg1 newMessage:(id)arg2;
- (void)decoder:(id)arg1 handleEvent:(int)arg2;
- (void)encoder:(id)arg1 handleEvent:(int)arg2;
- (void)timerHandler:(id)arg1;
- (void)publishJson:(id)arg1 onTopic:(id)arg2;
- (void)publishDataExactlyOnce:(id)arg1 onTopic:(id)arg2 retain:(_Bool)arg3;
- (void)publishDataExactlyOnce:(id)arg1 onTopic:(id)arg2;
- (void)publishDataAtLeastOnce:(id)arg1 onTopic:(id)arg2 retain:(_Bool)arg3;
- (void)publishDataAtLeastOnce:(id)arg1 onTopic:(id)arg2;
- (void)publishDataAtMostOnce:(id)arg1 onTopic:(id)arg2 retain:(_Bool)arg3;
- (void)publishDataAtMostOnce:(id)arg1 onTopic:(id)arg2;
- (void)publishData:(id)arg1 onTopic:(id)arg2;
- (void)unsubscribeTopic:(id)arg1;
- (void)subscribeToTopic:(id)arg1 atLevel:(unsigned char)arg2;
- (void)subscribeTopic:(id)arg1;
- (void)connectToHost:(id)arg1 port:(unsigned int)arg2 usingSSL:(_Bool)arg3;
- (void)connectToHost:(id)arg1 port:(unsigned int)arg2;
- (void)close;
- (void)dealloc;
- (id)initWithClientId:(id)arg1 keepAlive:(unsigned short)arg2 connectMessage:(id)arg3 runLoop:(id)arg4 forMode:(id)arg5;
- (id)initWithClientId:(id)arg1 userName:(id)arg2 password:(id)arg3 keepAlive:(unsigned short)arg4 cleanSession:(_Bool)arg5 willTopic:(id)arg6 willMsg:(id)arg7 willQoS:(unsigned char)arg8 willRetainFlag:(_Bool)arg9 runLoop:(id)arg10 forMode:(id)arg11;
- (id)initWithClientId:(id)arg1 userName:(id)arg2 password:(id)arg3 keepAlive:(unsigned short)arg4 cleanSession:(_Bool)arg5 willTopic:(id)arg6 willMsg:(id)arg7 willQoS:(unsigned char)arg8 willRetainFlag:(_Bool)arg9;
- (id)initWithClientId:(id)arg1 userName:(id)arg2 password:(id)arg3 keepAlive:(unsigned short)arg4 cleanSession:(_Bool)arg5 runLoop:(id)arg6 forMode:(id)arg7;
- (id)initWithClientId:(id)arg1 userName:(id)arg2 password:(id)arg3 keepAlive:(unsigned short)arg4 cleanSession:(_Bool)arg5;
- (id)initWithClientId:(id)arg1 userName:(id)arg2 password:(id)arg3 runLoop:(id)arg4 forMode:(id)arg5;
- (id)initWithClientId:(id)arg1 runLoop:(id)arg2 forMode:(id)arg3;
- (id)initWithClientId:(id)arg1 userName:(id)arg2 password:(id)arg3;
- (id)initWithClientId:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

