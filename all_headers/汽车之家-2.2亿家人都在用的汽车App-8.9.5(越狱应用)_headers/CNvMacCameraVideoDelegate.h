//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "AVCaptureVideoDataOutputSampleBufferDelegate-Protocol.h"

@class NSString;

@interface CNvMacCameraVideoDelegate : NSObject <AVCaptureVideoDataOutputSampleBufferDelegate>
{
    // Error parsing type: ^{CNvMacCamera=^^?{QAtomicInt={atomic<int>=Ai}}^^?^{CNvMacCameraFactory}^{INvVideoCaptureDeviceCallback}I{SNvVideoCaptureDeviceInfo=ii}Bi^{CNvMacCameraEventHandler}^{CNvVideoCaptureFrameGrabber}@@@{CNvSyncEvent=BB{QWaitCondition=^{QWaitConditionPrivate}}{QMutex={QBasicAtomicPointer<QMutexData>={atomic<QMutexData *>=A^{QMutexData}}}}{QElapsedTimer=qq}}{CNvSyncEvent=BB{QWaitCondition=^{QWaitConditionPrivate}}{QMutex={QBasicAtomicPointer<QMutexData>={atomic<QMutexData *>=A^{QMutexData}}}}{QElapsedTimer=qq}}BBB{?=qiIq}{QAtomicInt={atomic<int>=Ai}}{SNvVideoResolution=II{SNvRational=ii}{SNvRational=ii}}i{SNvRational=ii}{SNvRational=ii}{SNvAudioResolution=IiI}{TNvSmartPtr<INvAVFileWriter>=^{INvAVFileWriter}}{TNvSmartPtr<INvMacFileWriterCMSampleBuffer>=^{INvMacFileWriterCMSampleBuffer}}@fq{TNvSmartPtr<INvVideoFrameAllocator>=^{INvVideoFrameAllocator}}{vector<QSize, std::__1::allocator<QSize> >=^{QSize}^{QSize}{__compressed_pair<QSize *, std::__1::allocator<QSize> >=^{QSize}}}{vector<float, std::__1::allocator<float> >=^f^f{__compressed_pair<float *, std::__1::allocator<float> >=^f}}BBBqII{QSize=ii}IIi}, name: m_camera
    CDStruct_1b6d18a9 m_captureStartTime;
    _Bool _captureStopped;
    _Bool _recording;
}

@property(nonatomic) _Bool recording; // @synthesize recording=_recording;
@property(nonatomic) _Bool captureStopped; // @synthesize captureStopped=_captureStopped;
- (void)captureOutput:(id)arg1 didDropSampleBuffer:(struct opaqueCMSampleBuffer *)arg2 fromConnection:(id)arg3;
- (void)captureOutput:(id)arg1 didOutputSampleBuffer:(struct opaqueCMSampleBuffer *)arg2 fromConnection:(id)arg3;
-     // Error parsing type: @24@0:8^{CNvMacCamera=^^?{QAtomicInt={atomic<int>=Ai}}^^?^{CNvMacCameraFactory}^{INvVideoCaptureDeviceCallback}I{SNvVideoCaptureDeviceInfo=ii}Bi^{CNvMacCameraEventHandler}^{CNvVideoCaptureFrameGrabber}@@@{CNvSyncEvent=BB{QWaitCondition=^{QWaitConditionPrivate}}{QMutex={QBasicAtomicPointer<QMutexData>={atomic<QMutexData *>=A^{QMutexData}}}}{QElapsedTimer=qq}}{CNvSyncEvent=BB{QWaitCondition=^{QWaitConditionPrivate}}{QMutex={QBasicAtomicPointer<QMutexData>={atomic<QMutexData *>=A^{QMutexData}}}}{QElapsedTimer=qq}}BBB{?=qiIq}{QAtomicInt={atomic<int>=Ai}}{SNvVideoResolution=II{SNvRational=ii}{SNvRational=ii}}i{SNvRational=ii}{SNvRational=ii}{SNvAudioResolution=IiI}{TNvSmartPtr<INvAVFileWriter>=^{INvAVFileWriter}}{TNvSmartPtr<INvMacFileWriterCMSampleBuffer>=^{INvMacFileWriterCMSampleBuffer}}@fq{TNvSmartPtr<INvVideoFrameAllocator>=^{INvVideoFrameAllocator}}{vector<QSize, std::__1::allocator<QSize> >=^{QSize}^{QSize}{__compressed_pair<QSize *, std::__1::allocator<QSize> >=^{QSize}}}{vector<float, std::__1::allocator<float> >=^f^f{__compressed_pair<float *, std::__1::allocator<float> >=^f}}BBBqII{QSize=ii}IIi}16, name: initWithCamera:

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

