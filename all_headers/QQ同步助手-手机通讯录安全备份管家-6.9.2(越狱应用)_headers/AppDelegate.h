//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <UIKit/UIResponder.h>

#import "MQQHotspotHelperDelegate-Protocol.h"
#import "QQPimSoftLockVerifyDelegate-Protocol.h"
#import "QQPimWeChatAuthDelegate-Protocol.h"
#import "UIApplicationDelegate-Protocol.h"
#import "UINavigationControllerDelegate-Protocol.h"
#import "UNUserNotificationCenterDelegate-Protocol.h"
#import "WXApiDelegate-Protocol.h"

@class MMDrawerController, NSDate, NSString, QQPimSoftLockViewController, QQPimSyncViewController, UINavigationController, UIWindow;

@interface AppDelegate : UIResponder <QQPimSoftLockVerifyDelegate, MQQHotspotHelperDelegate, UINavigationControllerDelegate, UIApplicationDelegate, WXApiDelegate, QQPimWeChatAuthDelegate, UNUserNotificationCenterDelegate>
{
    UINavigationController *_softlockContainerViewController;
    UIWindow *_lockWindow;
    _Bool _isLaunchByPush;
    _Bool _isDoingWorkAtLastFetch;
    _Bool _runningBackgroundTask;
    UIWindow *_window;
    UINavigationController *_mainContainerViewController;
    QQPimSyncViewController *_syncViewController;
    QQPimSoftLockViewController *_softlockcontroller;
    MMDrawerController *_drawerController;
    NSDate *_lastReportPushDate;
    long long _launchTime;
    double _becomeActiveTime;
}

@property(nonatomic) double becomeActiveTime; // @synthesize becomeActiveTime=_becomeActiveTime;
@property(nonatomic) long long launchTime; // @synthesize launchTime=_launchTime;
@property(retain, nonatomic) NSDate *lastReportPushDate; // @synthesize lastReportPushDate=_lastReportPushDate;
@property(nonatomic) _Bool runningBackgroundTask; // @synthesize runningBackgroundTask=_runningBackgroundTask;
@property(nonatomic) _Bool isDoingWorkAtLastFetch; // @synthesize isDoingWorkAtLastFetch=_isDoingWorkAtLastFetch;
@property(nonatomic) _Bool isLaunchByPush; // @synthesize isLaunchByPush=_isLaunchByPush;
@property(retain, nonatomic) MMDrawerController *drawerController; // @synthesize drawerController=_drawerController;
@property(retain, nonatomic) QQPimSoftLockViewController *softlockcontroller; // @synthesize softlockcontroller=_softlockcontroller;
@property(retain, nonatomic) QQPimSyncViewController *syncViewController; // @synthesize syncViewController=_syncViewController;
@property(retain, nonatomic) UINavigationController *mainContainerViewController; // @synthesize mainContainerViewController=_mainContainerViewController;
@property(retain, nonatomic) UIWindow *window; // @synthesize window=_window;
- (void).cxx_destruct;
- (void)stopBackgroundTaskWithIdentifier:(unsigned long long)arg1;
- (void)updateSplashTask;
- (void)reportBirthdayPush;
- (void)beginBackgroundTask;
- (void)doConfigWifiSDK;
- (void)hotspotHelper:(id)arg1 didMaintainWiFi:(id)arg2 isConfigured:(_Bool)arg3;
- (void)hotspotHelper:(id)arg1 didConnectWiFi:(id)arg2 isConfigured:(_Bool)arg3;
- (void)hotspotHelper:(id)arg1 didEvaluateWiFi:(id)arg2 setConfidence:(_Bool)arg3;
- (void)hotspotHelper:(id)arg1 didScanWiFiList:(id)arg2;
- (void)hotspotHelper:(id)arg1 willHandleCommand:(id)arg2;
- (void)showLocalRecoverView:(id)arg1 fromWeixin:(_Bool)arg2;
- (void)monitorApplicationActiveUsedWithState:(long long)arg1;
- (void)navigationController:(id)arg1 didShowViewController:(id)arg2 animated:(_Bool)arg3;
- (void)navigationController:(id)arg1 willShowViewController:(id)arg2 animated:(_Bool)arg3;
- (void)onWechatResp:(id)arg1;
- (void)onWechatReq:(id)arg1;
- (void)animationDidStop:(id)arg1 finished:(id)arg2 context:(void *)arg3;
- (void)SoftLockVerifySuccess;
- (void)doSomeReportWhileFromLocalNotificationWithUserInfo:(id)arg1;
- (void)doSomeReportWhileFromBirthdayWidget;
- (void)doSomeReportWhileFromWidget;
- (void)doSomeReportWhileReceivePush;
- (void)doSomethingWhenEnterFromLocalNotification;
- (void)doAction:(id)arg1;
- (void)openLink:(id)arg1 andTitle:(id)arg2;
- (void)analyzeNotificationActionFromUserInfo:(id)arg1;
- (void)beaconReportRemoteNotification:(id)arg1;
- (void)doWithRemoteNotification:(id)arg1;
- (void)doHandleNotificationWithLaunchOptionsWhenLaunch:(id)arg1;
- (void)setupSplashScreenIfNeed;
- (void)setupNewFunction;
- (void)setupMainView;
- (void)setupSoftLockIfNeed;
- (void)application:(id)arg1 performActionForShortcutItem:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)userNotificationCenter:(id)arg1 didReceiveNotificationResponse:(id)arg2 withCompletionHandler:(CDUnknownBlockType)arg3;
- (void)userNotificationCenter:(id)arg1 willPresentNotification:(id)arg2 withCompletionHandler:(CDUnknownBlockType)arg3;
- (void)application:(id)arg1 didReceiveLocalNotification:(id)arg2;
- (void)application:(id)arg1 didReceiveRemoteNotification:(id)arg2 fetchCompletionHandler:(CDUnknownBlockType)arg3;
- (void)application:(id)arg1 didReceiveRemoteNotification:(id)arg2;
- (void)application:(id)arg1 handleActionWithIdentifier:(id)arg2 forRemoteNotification:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)application:(id)arg1 didRegisterUserNotificationSettings:(id)arg2;
- (void)application:(id)arg1 didFailToRegisterForRemoteNotificationsWithError:(id)arg2;
- (void)application:(id)arg1 didRegisterForRemoteNotificationsWithDeviceToken:(id)arg2;
- (_Bool)application:(id)arg1 openURL:(id)arg2 sourceApplication:(id)arg3 annotation:(id)arg4;
- (void)performFetchOfDuplicateContactsNotificationWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)performFetchOfCloudChangeNotificationWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)application:(id)arg1 performFetchWithCompletionHandler:(CDUnknownBlockType)arg2;
- (void)application:(id)arg1 handleEventsForBackgroundURLSession:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)applicationWillTerminate:(id)arg1;
- (void)applicationDidBecomeActive:(id)arg1;
- (void)applicationWillEnterForeground:(id)arg1;
- (void)applicationDidEnterBackground:(id)arg1;
- (void)applicationWillResignActive:(id)arg1;
- (_Bool)application:(id)arg1 didFinishLaunchingWithOptions:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

