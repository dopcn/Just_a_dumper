//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "YYChannelModuleView.h"

#import "ISceneTemplateMediaBridge-Protocol.h"
#import "MediaCoreClient-Protocol.h"
#import "PTemplateChannelControllerClient-Protocol.h"

@class NSString, UIPanGestureRecognizer, UIView, YYSceneMediaBackgroundView;

@interface YYSceneMediaModuleView : YYChannelModuleView <PTemplateChannelControllerClient, MediaCoreClient, ISceneTemplateMediaBridge>
{
    UIView *_pVideoView;
    UIView *_aVideoView;
    _Bool _isDualVideo;
    _Bool _moduleViewVisiable;
    _Bool _enableDrag;
    unsigned int _onlyVisiabelVideoContianerAchorid;
    CDUnknownBlockType _dualVideoStartBlock;
    CDUnknownBlockType _exchangeVideoBlock;
    YYSceneMediaBackgroundView *_pScenebBackgroundView;
    YYSceneMediaBackgroundView *_aScenebBackgroundView;
    unsigned long long _videoSequence;
    long long _leftAnchorId;
    UIView *_pContianerView;
    UIPanGestureRecognizer *_dragGR;
    double _videoTopMargin;
    struct CGRect _dragRange;
}

+ (struct CGSize)kPrimaryVideoSizeAtLandscapePCRecordModeVideoView;
+ (struct CGSize)kAuxiliaryVideoSizeAtPortraitPIPModeVideoView;
+ (struct CGPoint)kAuxiliaryVideoOriginAtPortraitPIPModeVideoView;
+ (struct CGSize)kVideoSizeAtPortraitIf4v3;
+ (double)p_getMediaTopMarginIfNotStraight;
+ (double)getMediaTopMarginIfNotStraight;
+ (id)yySceneMediaModuleView;
@property(nonatomic) unsigned int onlyVisiabelVideoContianerAchorid; // @synthesize onlyVisiabelVideoContianerAchorid=_onlyVisiabelVideoContianerAchorid;
@property(nonatomic) double videoTopMargin; // @synthesize videoTopMargin=_videoTopMargin;
@property(nonatomic) struct CGRect dragRange; // @synthesize dragRange=_dragRange;
@property(nonatomic) _Bool enableDrag; // @synthesize enableDrag=_enableDrag;
@property(nonatomic) _Bool moduleViewVisiable; // @synthesize moduleViewVisiable=_moduleViewVisiable;
@property(retain, nonatomic) UIPanGestureRecognizer *dragGR; // @synthesize dragGR=_dragGR;
@property(retain, nonatomic) UIView *pContianerView; // @synthesize pContianerView=_pContianerView;
@property(nonatomic) long long leftAnchorId; // @synthesize leftAnchorId=_leftAnchorId;
@property(nonatomic) unsigned long long videoSequence; // @synthesize videoSequence=_videoSequence;
@property(nonatomic) _Bool isDualVideo; // @synthesize isDualVideo=_isDualVideo;
@property(retain, nonatomic) YYSceneMediaBackgroundView *aScenebBackgroundView; // @synthesize aScenebBackgroundView=_aScenebBackgroundView;
@property(retain, nonatomic) YYSceneMediaBackgroundView *pScenebBackgroundView; // @synthesize pScenebBackgroundView=_pScenebBackgroundView;
@property(copy, nonatomic) CDUnknownBlockType exchangeVideoBlock; // @synthesize exchangeVideoBlock=_exchangeVideoBlock;
@property(copy, nonatomic) CDUnknownBlockType dualVideoStartBlock; // @synthesize dualVideoStartBlock=_dualVideoStartBlock;
- (void).cxx_destruct;
- (_Bool)isVoiceRoomTemplate;
- (double)getCustomVideoViewTop;
- (void)updateVideoViewTopMargin:(double)arg1;
- (void)setExchangeVideoViewBlock:(CDUnknownBlockType)arg1;
- (struct CGRect)getPAnchorVideoFrame;
- (id)videoAnchorIds;
- (void)setAnchorVideoViewLeft:(unsigned int)arg1;
- (void)cancelOnlyVisiabelSingleVideoContianer;
- (void)setOnlyVisiabelSingleVideoContianerWithAchorid:(unsigned int)arg1;
- (id)videoContainerViewWithAnchorId:(unsigned int)arg1;
- (void)updateAVideoStreamANDMediaLayoutIfNeed;
- (void)enableDualViedeoView:(_Bool)arg1;
- (void)setaNoVideoBackgroudImageWithUrl:(id)arg1 placeholderImage:(id)arg2;
- (void)setNoVideoBackgroudImageWithUrl:(id)arg1 placeholderImage:(id)arg2;
- (void)setaSceneBackgroundImageWithURL:(id)arg1 placeholderImage:(id)arg2 contentModel:(long long)arg3;
- (void)setaSceneBackgroundImageWithURL:(id)arg1 placeholderImage:(id)arg2;
- (void)setSceneBackgroundImageWithURL:(id)arg1 placeholderImage:(id)arg2 contentModel:(long long)arg3;
- (void)setSceneBackgroundImageWithURL:(id)arg1 placeholderImage:(id)arg2;
- (void)enableDragVideoView:(_Bool)arg1 rangeFrame:(struct CGRect)arg2;
- (id)getVideoContianerView;
- (void)videoViewVisiable:(_Bool)arg1;
- (void)unsubscribeVideo;
- (void)subscribeVideo;
- (void)keyboardWillHideWithFrameBegin:(id)arg1 frameEnd:(id)arg2 animationDuration:(id)arg3 animationCurve:(id)arg4;
- (void)keyboardWillShowWithFrameBegin:(id)arg1 frameEnd:(id)arg2 animationDuration:(id)arg3 animationCurve:(id)arg4;
- (void)onAppWillEnterForeground:(id)arg1;
- (void)onAppDidEnterBackground:(id)arg1;
- (void)channelViewControllerWillDestroy:(id)arg1;
- (void)channelViewDidDisappear:(id)arg1;
- (void)channelViewWillAppear:(id)arg1;
- (void)channelViewController:(id)arg1 willAnimateChangeLayout:(long long)arg2;
- (void)channelViewController:(id)arg1 willChangeLayout:(long long)arg2;
- (void)p_mediaDidEnd;
- (void)p_mediaDidStart;
- (void)p_aVideoStreamDidStart;
- (void)p_pVideoStreamDidStart;
- (void)p_mediaWillLoading;
- (void)onVideoStreamStartWithAnchorUid:(unsigned int)arg1;
- (void)onVideoChanged;
- (void)p_updateFollowView;
- (void)p_updateContentModeWithLayout:(_Bool)arg1;
- (void)p_updateContentMode:(unsigned long long)arg1 forView:(id)arg2;
- (void)p_pauseVideo;
- (void)p_resumeVideo;
- (void)p_unsubscribeVideo;
- (void)p_subscribeVideo;
- (_Bool)p_exchangedVideoViewLayoutIfNeed;
- (void)p_updateMediaLayoutIfNeed;
- (void)p_updateNewStreamMediaLayout;
- (_Bool)p_isNewVideoDoubleStreamByFlag;
- (void)createDualVideoLayout;
- (void)p_initLayout;
- (void)p_dragMediaModule:(id)arg1;
- (void)p_cancelBgViewPreviousPerformRequest;
- (id)p_getRightVideoView;
- (id)p_getLeftVideoView;
- (void)setaBlurViewTips:(id)arg1;
- (void)setpBlurViewTips:(id)arg1;
- (void)setBlurTipsViewHidden:(_Bool)arg1;
- (long long)rightAnchorUID;
- (long long)leftAnchorUID;
- (void)p_startVideo;
- (void)p_createMediaView;
- (void)p_dealloc;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

