//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

#import "TVKAirPlayDetectorUtilDelegate-Protocol.h"
#import "TVKAudioInterruptionDelegate-Protocol.h"
#import "TVKIPlayerBase-Protocol.h"
#import "TVKSelfPlayerWrapperCallback-Protocol.h"

@class NSMutableDictionary, NSString, TVKPlayerVideo, TVKSelfPlayerCapture;
@protocol OS_dispatch_queue, TVKIPlayerViewBase, TVKISelfPlayerAudioRenderer, TVKPlayerDelegate;

@interface TVKSelfPlayer : NSObject <TVKSelfPlayerWrapperCallback, TVKAirPlayDetectorUtilDelegate, TVKAudioInterruptionDelegate, TVKIPlayerBase>
{
    int _playerID;
    id <TVKISelfPlayerAudioRenderer> _audioRenderer;
    struct TVKSelfPlayerWrapper *_playerWrapper;
    long long _currentPosition;
    long long _duration;
    NSMutableDictionary *_configs;
    int _selfPlayerCorePlayerType;
    int _selfPlayerCoreVideoDecMode;
    int _selfPlayerCoreAudioDecMode;
    _Bool _selfPlayerCoreVtbOutputRawData;
    long long _descID;
    _Bool _seekWhenPrepared;
    _Bool _isBuffering;
    _Bool _isPrepared;
    TVKPlayerVideo *_video;
    TVKSelfPlayerCapture *_capture;
    NSString *_captureURL;
    _Bool _loopback;
    long long _loopbackStartPos;
    long long _loopbackEndPos;
    NSObject<OS_dispatch_queue> *_msgQueue;
    float _pixelAspectRatio;
    _Bool _firstFrameDetected;
    _Bool _allowsExternalPlayback;
    _Bool _externalPlaybackActive;
    _Bool _usesExternalPlaybackWhileExternalScreenIsActive;
    _Bool _enableResourceLoader;
    _Bool _pictureInPicturePossible;
    _Bool _pictureInPictureActive;
    float _rate;
    float _volume;
    long long _state;
    unsigned long long _videoWidth;
    unsigned long long _videoHeight;
    id <TVKPlayerDelegate> _delegate;
    id <TVKIPlayerViewBase> _view;
    long long _externalPlaybackVideoGravity;
}

@property(readonly, nonatomic, getter=isPictureInPictureActive) _Bool pictureInPictureActive; // @synthesize pictureInPictureActive=_pictureInPictureActive;
@property(readonly, nonatomic, getter=isPictureInPicturePossible) _Bool pictureInPicturePossible; // @synthesize pictureInPicturePossible=_pictureInPicturePossible;
@property(nonatomic) _Bool enableResourceLoader; // @synthesize enableResourceLoader=_enableResourceLoader;
@property(nonatomic) long long externalPlaybackVideoGravity; // @synthesize externalPlaybackVideoGravity=_externalPlaybackVideoGravity;
@property(nonatomic) _Bool usesExternalPlaybackWhileExternalScreenIsActive; // @synthesize usesExternalPlaybackWhileExternalScreenIsActive=_usesExternalPlaybackWhileExternalScreenIsActive;
@property(nonatomic) _Bool allowsExternalPlayback; // @synthesize allowsExternalPlayback=_allowsExternalPlayback;
@property(retain, nonatomic) id <TVKIPlayerViewBase> view; // @synthesize view=_view;
@property(nonatomic) __weak id <TVKPlayerDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, nonatomic) unsigned long long videoHeight; // @synthesize videoHeight=_videoHeight;
@property(readonly, nonatomic) unsigned long long videoWidth; // @synthesize videoWidth=_videoWidth;
@property long long state; // @synthesize state=_state;
@property(nonatomic) float volume; // @synthesize volume=_volume;
@property(nonatomic) float rate; // @synthesize rate=_rate;
- (void).cxx_destruct;
- (void)audioInterruptionEnded;
- (void)audioInterruptionBegan;
- (void)judgeExternalPlaybackError;
- (void)airPlayActiveDidChange:(_Bool)arg1;
- (void)airPlayAvailableDidChange:(_Bool)arg1;
- (void)getResolutionAndAspectRatio;
- (_Bool)needNotifyInvalidSourceWithPosition:(long long)arg1 video:(id)arg2;
- (void)notifyPlayerMsgAsync:(id)arg1 msgType:(long long)arg2 descID:(long long)arg3 extra1:(id)arg4 extra2:(id)arg5;
- (int)judgeSelfPlayerCorePlayerType:(id)arg1;
- (id)rebuildPlayerErrorCode:(int)arg1;
- (void)setParametersDictToSelfPlayerCore;
- (void)setParameterToSelfPlayerCore:(long long)arg1 param1:(long long)arg2 param2:(long long)arg3 context:(void *)arg4;
- (void)setParameterToDict:(long long)arg1 param1:(long long)arg2 param2:(long long)arg3 context:(void *)arg4;
- (id)getNSStringArrayFromVideoArray:(id)arg1;
- (id)getNSStringFromVideo:(id)arg1;
- (basic_string_a490aa4c)getCStringFromNSURL:(id)arg1;
- (id)getNSStringFromNSURL:(id)arg1;
- (_Bool)isSupportVideoDecode:(int)arg1 codecID:(int)arg2 width:(int)arg3 height:(int)arg4;
- (void)onSubtitleData:(char *)arg1 size:(unsigned int)arg2 type:(unsigned int)arg3 attr:(char *)arg4 attrLen:(unsigned int)arg5 format:(int)arg6;
- (void)onAudioData:(char *)arg1 size:(unsigned int)arg2 sampleRate:(int)arg3 channelLayout:(long long)arg4 format:(int)arg5;
- (void)onVideoPixelBuffer:(struct __CVBuffer *)arg1 width:(unsigned int)arg2 height:(unsigned int)arg3 rotation:(int)arg4 pixfmt:(int)arg5;
- (void)onVideoData:(char **)arg1 linesize:(unsigned int *)arg2 width:(unsigned int)arg3 height:(unsigned int)arg4 rotation:(int)arg5 pixfmt:(int)arg6;
- (void)onVideoData:(char *)arg1 width:(unsigned int)arg2 height:(unsigned int)arg3 rotation:(int)arg4 pixfmt:(int)arg5;
- (void)notifyPlayerMsg:(int)arg1 position:(long long)arg2 param:(long long)arg3 context:(void *)arg4 size:(int)arg5;
@property(readonly, nonatomic, getter=isExternalPlaybackActive) _Bool externalPlaybackActive; // @synthesize externalPlaybackActive=_externalPlaybackActive;
@property(readonly, nonatomic) long long bufferedDuration; // @dynamic bufferedDuration;
@property(readonly, nonatomic) long long position; // @dynamic position;
@property(readonly, nonatomic) long long duration; // @dynamic duration;
- (void)stopPictureInPicture;
- (void)startPictureInPicture;
- (id)snapshot;
- (void)setLoopBack:(_Bool)arg1 startPos:(long long)arg2 endPos:(long long)arg3;
- (void)setExtraParameters:(long long)arg1 param1:(long long)arg2 param2:(long long)arg3 context:(void *)arg4;
- (void)seekToNextClip;
- (void)seekTo:(long long)arg1 mode:(long long)arg2;
- (void)stop;
- (void)pause;
- (void)start;
- (void)switchDefinitionWithVideo:(id)arg1 bakVideos:(id)arg2;
- (_Bool)supportSeamlesslySwitchDefinition:(long long)arg1 videoCodec:(long long)arg2;
- (_Bool)supportSeamlesslySwitchDefinition;
- (void)updateVideo:(id)arg1;
- (void)openPlayerWithVideo:(id)arg1 bakVideos:(id)arg2;
- (void)switchDefinitionWithURL:(id)arg1 bakURLs:(id)arg2;
- (void)openPlayerWithURL:(id)arg1 bakURLs:(id)arg2 startPos:(long long)arg3 skipEndPos:(long long)arg4;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

