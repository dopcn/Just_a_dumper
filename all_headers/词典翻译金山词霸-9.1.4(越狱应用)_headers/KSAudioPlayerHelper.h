//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "AVAudioPlayerDelegate-Protocol.h"
#import "KSPlayerManagerProtocol-Protocol.h"

@class AFHTTPSessionManager, AVAudioPlayer, NSData, NSString, NSURL, NSURLSessionDownloadTask;

@interface KSAudioPlayerHelper : NSObject <AVAudioPlayerDelegate, KSPlayerManagerProtocol>
{
    _Bool isBusy;
    _Bool canShowErrorMessage;
    _Bool _isHideTip;
    _Bool _playing;
    _Bool _isPause;
    NSString *_sourceString;
    NSData *_sourceData;
    NSString *_localVoicePath;
    AVAudioPlayer *_thisAudioPlayer;
    CDUnknownBlockType _thisPlayerWillBeginPlayingVoice;
    CDUnknownBlockType _thisPlayerDidBeginPlayingVoice;
    CDUnknownBlockType _thisPlayerPlayCompletionBlock;
    CDUnknownBlockType _thisPlayerPlayFailedBlock;
    CDUnknownBlockType _thisPlayerWillBeginDownVoiceFromService;
    CDUnknownBlockType _thisPlayerDidBeginDownVoiceFromService;
    CDUnknownBlockType _thisDownloadResultBlock;
    CDUnknownBlockType _downloadProgress;
    CDUnknownBlockType _downloadResultBlockForPrivateUse;
    AFHTTPSessionManager *_manager;
    NSURLSessionDownloadTask *_downloadTask;
    NSString *_preSourceString;
    NSURL *_sourceURL;
}

+ (void)showPlayErrorMessageView;
+ (id)shareAudioPlayerHelper;
@property(nonatomic) _Bool isPause; // @synthesize isPause=_isPause;
@property(nonatomic, getter=isPlaying) _Bool playing; // @synthesize playing=_playing;
@property(retain, nonatomic) NSURL *sourceURL; // @synthesize sourceURL=_sourceURL;
@property(copy, nonatomic) NSString *preSourceString; // @synthesize preSourceString=_preSourceString;
@property(retain, nonatomic) NSURLSessionDownloadTask *downloadTask; // @synthesize downloadTask=_downloadTask;
@property(retain, nonatomic) AFHTTPSessionManager *manager; // @synthesize manager=_manager;
@property(copy, nonatomic) CDUnknownBlockType downloadResultBlockForPrivateUse; // @synthesize downloadResultBlockForPrivateUse=_downloadResultBlockForPrivateUse;
@property(copy, nonatomic) CDUnknownBlockType downloadProgress; // @synthesize downloadProgress=_downloadProgress;
@property(copy, nonatomic) CDUnknownBlockType thisDownloadResultBlock; // @synthesize thisDownloadResultBlock=_thisDownloadResultBlock;
@property(copy, nonatomic) CDUnknownBlockType thisPlayerDidBeginDownVoiceFromService; // @synthesize thisPlayerDidBeginDownVoiceFromService=_thisPlayerDidBeginDownVoiceFromService;
@property(copy, nonatomic) CDUnknownBlockType thisPlayerWillBeginDownVoiceFromService; // @synthesize thisPlayerWillBeginDownVoiceFromService=_thisPlayerWillBeginDownVoiceFromService;
@property(copy, nonatomic) CDUnknownBlockType thisPlayerPlayFailedBlock; // @synthesize thisPlayerPlayFailedBlock=_thisPlayerPlayFailedBlock;
@property(copy, nonatomic) CDUnknownBlockType thisPlayerPlayCompletionBlock; // @synthesize thisPlayerPlayCompletionBlock=_thisPlayerPlayCompletionBlock;
@property(copy, nonatomic) CDUnknownBlockType thisPlayerDidBeginPlayingVoice; // @synthesize thisPlayerDidBeginPlayingVoice=_thisPlayerDidBeginPlayingVoice;
@property(copy, nonatomic) CDUnknownBlockType thisPlayerWillBeginPlayingVoice; // @synthesize thisPlayerWillBeginPlayingVoice=_thisPlayerWillBeginPlayingVoice;
@property _Bool isHideTip; // @synthesize isHideTip=_isHideTip;
@property(retain, nonatomic) AVAudioPlayer *thisAudioPlayer; // @synthesize thisAudioPlayer=_thisAudioPlayer;
@property(retain, nonatomic) NSString *localVoicePath; // @synthesize localVoicePath=_localVoicePath;
@property(retain, nonatomic) NSData *sourceData; // @synthesize sourceData=_sourceData;
@property(copy, nonatomic) NSString *sourceString; // @synthesize sourceString=_sourceString;
@property(nonatomic) _Bool canShowErrorMessage; // @synthesize canShowErrorMessage;
- (void).cxx_destruct;
- (void)setPlayerDownloadResultBlock:(CDUnknownBlockType)arg1;
- (void)setPlayerDidBeginDownVoiceFromServiceBlock:(CDUnknownBlockType)arg1;
- (void)setPlayerWillBeginDownVoiceFromServiceBlock:(CDUnknownBlockType)arg1;
- (void)setPlayerPlayFailedBlock:(CDUnknownBlockType)arg1;
- (void)setPlayerPlayCompletionBlock:(CDUnknownBlockType)arg1;
- (void)setPlayerDidBeginPlayingVoiceBlock:(CDUnknownBlockType)arg1;
- (void)setPlayerWillBeginPlayingVoiceBlock:(CDUnknownBlockType)arg1;
- (_Bool)isCachedWithURLString:(id)arg1;
- (void)cancelCurrentPlayerIfPossible;
- (void)resetAudioPlayerBlocks;
- (void)invokePlayercompltionBlock;
- (void)cancelRequestOperationIfNeeded;
- (void)stopVoice;
- (void)playVoice;
- (void)audioPlayerDecodeErrorDidOccur:(id)arg1 error:(id)arg2;
- (void)audioPlayerDidFinishPlaying:(id)arg1 successfully:(_Bool)arg2;
- (void)saveVoiceDataToCache;
- (void)saveVoiceDataToCacheWithUrlString:(id)arg1 audioData:(id)arg2;
- (void)saveVoiceDataToLocal;
- (void)playVoiceWithUrlString:(id)arg1 playCompletionBlock:(CDUnknownBlockType)arg2 playFailedBlock:(CDUnknownBlockType)arg3;
- (id)composeVoiceRequestUrlWithWords:(id)arg1 tts_lan:(unsigned long long)arg2;
- (id)composeSentenceVoiceRequestUrlWithWords:(id)arg1 voiceTyoe:(unsigned long long)arg2;
- (void)playVoiceWithWords:(id)arg1 voiceType:(unsigned long long)arg2;
- (void)playVoiceWithWords:(id)arg1 tts_lan:(unsigned long long)arg2;
- (void)playVoiceWithWords:(id)arg1;
- (void)playVoiceWithUrlString:(id)arg1;
- (void)pause;
- (void)play;
- (void)stop;
- (void)playVoiceFromData:(id)arg1;
- (void)playVoiceFromLocal;
- (void)playVoiceFromService:(id)arg1;
- (void)convertAmrVoiceIfNeeded;
- (void)checkPlayingState;
- (void)setUpThisAVAudioPlayer;
- (void)getVoiceDataFromCacheOrLocal:(id)arg1;
- (id)nameOfWordWithURLString:(id)arg1;
- (void)getVoiceDataFromCacheOrLocal:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)downVoiceDataFromService:(id)arg1;
- (void)downVoiceDataFromService:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)prepareAudioDataWithUrlString:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)setDownloadProgressBlock:(CDUnknownBlockType)arg1;
- (void)confirgAudioSession;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

