//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

#import "LetvMediaPlayerInterface-Protocol.h"
#import "LetvMediaPlayerItemsInterface-Protocol.h"

@class AVPlayerItem, AVPlayerLayer, AVQueuePlayer, NSArray, NSDate, NSMutableArray, NSString, NSTimer, UIImageView;
@protocol MediaPlayerDelegate;

@interface HardwareDecodeAVPlayer : NSObject <LetvMediaPlayerInterface, LetvMediaPlayerItemsInterface>
{
    _Bool isFirstPlay;
    _Bool isFirstLoad;
    id <MediaPlayerDelegate> _mediaPlayerDelegate;
    NSArray *_urls;
    UIImageView *_displayView;
    NSArray *_sourceItems;
    AVQueuePlayer *_avQueuePlayer;
    AVPlayerLayer *_playerLayer;
    NSMutableArray *_playerItems;
    AVPlayerItem *_breakpointPlayerItem;
    id _playerTimeObserver;
    NSMutableArray *_statusFailedPlayerItems;
    unsigned long long _sourceItemsBeginningFailedAmount;
    NSDate *_creatPlayerTime;
    NSDate *_startLoadTime;
    NSDate *_firstReadyToPlayTime;
    NSDate *_firstPlayingTime;
    NSString *_kCurrentOsExternalPlayback;
    NSTimer *_accessLogTimer;
    CDUnknownBlockType _logHandler;
    NSArray *_statusChnMsgArr;
}

@property(retain, nonatomic) NSArray *statusChnMsgArr; // @synthesize statusChnMsgArr=_statusChnMsgArr;
@property(copy) CDUnknownBlockType logHandler; // @synthesize logHandler=_logHandler;
@property(retain, nonatomic) NSTimer *accessLogTimer; // @synthesize accessLogTimer=_accessLogTimer;
@property(retain, nonatomic) NSString *kCurrentOsExternalPlayback; // @synthesize kCurrentOsExternalPlayback=_kCurrentOsExternalPlayback;
@property(retain, nonatomic) NSDate *firstPlayingTime; // @synthesize firstPlayingTime=_firstPlayingTime;
@property(retain, nonatomic) NSDate *firstReadyToPlayTime; // @synthesize firstReadyToPlayTime=_firstReadyToPlayTime;
@property(retain, nonatomic) NSDate *startLoadTime; // @synthesize startLoadTime=_startLoadTime;
@property(retain, nonatomic) NSDate *creatPlayerTime; // @synthesize creatPlayerTime=_creatPlayerTime;
@property(nonatomic) unsigned long long sourceItemsBeginningFailedAmount; // @synthesize sourceItemsBeginningFailedAmount=_sourceItemsBeginningFailedAmount;
@property(retain, nonatomic) NSMutableArray *statusFailedPlayerItems; // @synthesize statusFailedPlayerItems=_statusFailedPlayerItems;
@property(retain, nonatomic) id playerTimeObserver; // @synthesize playerTimeObserver=_playerTimeObserver;
@property(retain, nonatomic) AVPlayerItem *breakpointPlayerItem; // @synthesize breakpointPlayerItem=_breakpointPlayerItem;
@property(retain, nonatomic) NSMutableArray *playerItems; // @synthesize playerItems=_playerItems;
@property(retain, nonatomic) AVPlayerLayer *playerLayer; // @synthesize playerLayer=_playerLayer;
@property(retain, nonatomic) AVQueuePlayer *avQueuePlayer; // @synthesize avQueuePlayer=_avQueuePlayer;
@property(retain, nonatomic) NSArray *sourceItems; // @synthesize sourceItems=_sourceItems;
@property(readonly, nonatomic) UIImageView *displayView; // @synthesize displayView=_displayView;
@property(readonly, nonatomic) NSArray *urls; // @synthesize urls=_urls;
@property(nonatomic) __weak id <MediaPlayerDelegate> mediaPlayerDelegate; // @synthesize mediaPlayerDelegate=_mediaPlayerDelegate;
- (void).cxx_destruct;
- (void)setMuted:(_Bool)arg1;
- (_Bool)isMuted;
- (float)volume;
- (void)setAirPlayActive:(_Bool)arg1;
- (_Bool)isAirPlayActive;
- (void)setAllowsAirPlay:(_Bool)arg1;
- (_Bool)allowsAirPlay;
- (CDStruct_2c43369c)getPlayerItemBitrates;
- (struct CGSize)getMediaSize;
- (double)getplayableDuration;
- (double)getCurrentPosition;
- (double)getDuration;
- (void)refreshPlayerViewOnFrameChanged;
- (void)updatePlayerViewScalingMode:(int)arg1;
- (void)refreshPlayerViewWithScale:(float)arg1;
- (void)resetPlayerWithItems:(id)arg1 playIndex:(unsigned long long)arg2 playTime:(double)arg3;
- (void)stop;
- (void)pause;
- (void)play;
- (void)setRate:(float)arg1;
- (void)seekPercent:(float)arg1;
- (void)seekTime:(double)arg1;
- (void)prepare:(id)arg1;
- (void)setPlayerLogHandler:(CDUnknownBlockType)arg1;
- (void)sendPlayerErrorAtFinalIndex:(unsigned long long)arg1;
- (void)sendStatusChange:(int)arg1 errorInfo:(id)arg2 finalIndex:(unsigned long long)arg3;
- (void)sendStatusChange:(int)arg1;
- (void)playerItemPlaybackStalled:(id)arg1;
- (void)advanceToNextPlayableItem;
- (void)playerItemDidReachEndTime:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)removeObserverFromPlayerItem:(id)arg1;
- (void)removePlayerItemsObserver;
- (void)removePlayerObserver;
- (void)removeNotificationObserver;
- (void)removeObserver;
- (void)addObserverToPlayerItem:(id)arg1;
- (void)addPlayerItemsObserver;
- (void)addPlayerObserver;
- (void)addObserver;
- (void)closeTimer;
- (void)sendMsgToLogHandler:(id)arg1;
- (void)writeAccessLogEvent;
- (_Bool)playerItem:(id)arg1 hasURLPrefix:(id)arg2;
- (_Bool)hasSamePlayURLBeforeItem:(id)arg1;
- (void)saveBreakpointItem;
- (void)playAtIndex:(unsigned long long)arg1 time:(double)arg2;
- (id)copyPlayerItem:(id)arg1;
- (void)resetPlayerItems;
- (double)availableDuration;
- (id)playerItemURLAssetWithIndex:(unsigned long long)arg1;
- (void)checkTrulyPlayerItemPlayableAfter:(unsigned long long)arg1;
- (unsigned long long)finalIndexWithPlayURLString:(id)arg1 repetitiveTimes:(unsigned long long)arg2;
- (unsigned long long)repetitiveTimesToPlayerURLString:(id)arg1 atIndex:(unsigned long long)arg2;
- (unsigned long long)playerItemIndexWithFinalIndex:(unsigned long long)arg1;
- (unsigned long long)finalIndexWithPlayerItemIndex:(unsigned long long)arg1;
- (unsigned long long)finalIndexOfCurrentPlayerItemIndex;
- (unsigned long long)playerItemIndex:(id)arg1;
- (unsigned long long)currentPlayerItemIndex;
- (id)currentPlayerItem;
- (void)resetSourceItemsBeginningFailedAmount;
- (void)resetStatusFailedArray;
- (_Bool)createQueuePlayerWithItems:(id)arg1;
- (_Bool)createPlayer;
- (id)getPlayerItemsWithSources:(id)arg1;
- (void)releasePlayer;
- (void)dealloc;
- (id)initWithPlayView:(id)arg1 items:(id)arg2 delegate:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

