//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "MusicTableVC.h"

#import "OHAttributedLabelDelegate-Protocol.h"
#import "OnlineTrackCellDelegate-Protocol.h"

@class CustActionSheet, EditDownloadListVC, MusicEmptyView, NSDictionary, NSMutableArray, NSString, NSTimer, SegmentHeaderView, UIButton, UIImageView, UILabel;

@interface TingAlbumDetailVC : MusicTableVC <OHAttributedLabelDelegate, OnlineTrackCellDelegate>
{
    NSString *ID;
    UIButton *shareBtn;
    UIImageView *albumCover;
    UILabel *albumName;
    UIButton *playAllBtn;
    _Bool _isEmpty;
    _Bool _showBar;
    int tingAlbumDetailFromTag;
    NSMutableArray *trackSections;
    NSDictionary *detailDictionary;
    CustActionSheet *shareActionSheet;
    EditDownloadListVC *_editDownloadListVC;
    NSTimer *_refreshTimer;
    UIImageView *_onlineImageView;
    NSString *_link;
    NSMutableArray *_allTracks;
    long long _homeTingAlbumIndex;
    SegmentHeaderView *_segHeaderView;
    MusicEmptyView *_noSong;
}

@property(nonatomic) _Bool showBar; // @synthesize showBar=_showBar;
@property(retain, nonatomic) MusicEmptyView *noSong; // @synthesize noSong=_noSong;
@property(retain, nonatomic) SegmentHeaderView *segHeaderView; // @synthesize segHeaderView=_segHeaderView;
@property(nonatomic) long long homeTingAlbumIndex; // @synthesize homeTingAlbumIndex=_homeTingAlbumIndex;
@property(retain, nonatomic) NSMutableArray *allTracks; // @synthesize allTracks=_allTracks;
@property(retain, nonatomic) NSString *link; // @synthesize link=_link;
@property(retain, nonatomic) UIImageView *onlineImageView; // @synthesize onlineImageView=_onlineImageView;
@property(retain, nonatomic) NSTimer *refreshTimer; // @synthesize refreshTimer=_refreshTimer;
@property(retain, nonatomic) EditDownloadListVC *editDownloadListVC; // @synthesize editDownloadListVC=_editDownloadListVC;
@property(nonatomic) _Bool isEmpty; // @synthesize isEmpty=_isEmpty;
@property(retain, nonatomic) CustActionSheet *shareActionSheet; // @synthesize shareActionSheet;
@property(nonatomic) int tingAlbumDetailFromTag; // @synthesize tingAlbumDetailFromTag;
@property(retain, nonatomic) NSDictionary *detailDictionary; // @synthesize detailDictionary;
@property(retain, nonatomic) NSMutableArray *trackSections; // @synthesize trackSections;
- (void).cxx_destruct;
- (void)trackCellPlayMV:(id)arg1;
- (void)doReloadData:(id)arg1;
- (void)hideBlockedByOnlyWiFi;
- (void)showBlockedByOnlyWiFi;
- (void)didClickDownloadBtn;
- (void)didClickFaverateBtn;
- (void)didClickShareBtn;
- (void)httpFailed:(id)arg1 userInfo:(id)arg2;
- (void)tingAlbumDetailListFetched:(id)arg1 byID:(id)arg2;
- (void)refreshData;
- (void)fetchTingAlbumDetailByIDASI:(id)arg1 useCache:(_Bool)arg2;
- (void)fetchData:(_Bool)arg1;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 viewForHeaderInSection:(long long)arg2;
- (double)tableView:(id)arg1 heightForFooterInSection:(long long)arg2;
- (double)tableView:(id)arg1 heightForHeaderInSection:(long long)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (double)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (long long)getTrackNumInSection:(long long)arg1;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (id)getFootView;
- (_Bool)attributedLabel:(id)arg1 shouldFollowLink:(id)arg2;
- (id)colorForLink:(id)arg1 underlineStyle:(int *)arg2;
- (void)createHeaderView;
- (_Bool)navigationBarIsTransparent;
- (double)navigationBarAlpha;
- (void)scrollViewDidScroll:(id)arg1;
- (void)playAll:(id)arg1;
- (void)playAllTrackAtIndex:(long long)arg1;
- (void)dealloc;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (void)loadView;
- (id)initWithAlbumID:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

