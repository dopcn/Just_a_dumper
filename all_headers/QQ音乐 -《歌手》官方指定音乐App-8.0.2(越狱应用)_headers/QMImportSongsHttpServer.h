//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

@class ImportSongList, NSDate, NSMutableArray, NSString, NSTimer;
@protocol QMImportSongsHttpServerDelegate;

@interface QMImportSongsHttpServer : NSObject
{
    _Bool _isRunning;
    struct qm_mg_context *ctx;
    id <QMImportSongsHttpServerDelegate> _delegate;
    ImportSongList *_importSongList;
    NSMutableArray *_clientSessions;
    NSString *_diskInfo;
    NSTimer *_checkTimer;
    NSDate *_idleTime;
}

+ (long long)timeout;
+ (long long)serverVersion;
+ (long long)serverPort;
+ (id)serverIp;
+ (id)getAllIPAddresses;
+ (id)shareInstance;
@property(nonatomic) _Bool isRunning; // @synthesize isRunning=_isRunning;
@property(retain, nonatomic) NSDate *idleTime; // @synthesize idleTime=_idleTime;
@property(retain, nonatomic) NSTimer *checkTimer; // @synthesize checkTimer=_checkTimer;
@property(retain, nonatomic) NSString *diskInfo; // @synthesize diskInfo=_diskInfo;
@property(retain, nonatomic) NSMutableArray *clientSessions; // @synthesize clientSessions=_clientSessions;
@property(retain, nonatomic) ImportSongList *importSongList; // @synthesize importSongList=_importSongList;
@property(nonatomic) __weak id <QMImportSongsHttpServerDelegate> delegate; // @synthesize delegate=_delegate;
@property struct qm_mg_context *ctx; // @synthesize ctx;
- (void).cxx_destruct;
- (void)httpQPlayProxy:(id)arg1;
- (float)getImageWidth;
- (_Bool)shouldSetImageSizeMiddle;
- (void)httpCreateRecognizeDeskTop:(id)arg1;
- (void)httpIndex:(id)arg1;
- (id)createDesktopApp:(id)arg1 ShortCut:(id)arg2 WithIcon:(id)arg3 guideImg:(id)arg4;
- (void)httpHeartBeat:(id)arg1;
- (void)httpUploadResult:(id)arg1;
- (void)httpUploadSong:(id)arg1;
- (void)httpPrepareSong:(id)arg1;
- (void)httpUploadSongList:(id)arg1;
- (void)close;
- (void)start;
- (void)autoCheck;
- (void)closeCheckTimer;
- (void)startCheckTimer;
- (id)querySongByFileId:(long long)arg1;
- (_Bool)closeSessionWithClientIp:(id)arg1;
- (_Bool)isValidClientSession:(id)arg1;
- (id)sessionTokenWithClientIp:(id)arg1 Port:(long long)arg2;
- (_Bool)isAlive;
- (id)rootDir;
- (void)clearDiskInfo;
- (id)init;

@end

