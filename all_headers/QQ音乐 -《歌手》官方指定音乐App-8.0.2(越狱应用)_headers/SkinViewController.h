//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "HookViewController.h"

#import "BEActionSheetDelegate-Protocol.h"
#import "CAAnimationDelegate-Protocol.h"
#import "ChannelAlertViewDelegate-Protocol.h"
#import "ListTagDelegate-Protocol.h"
#import "QMActionSheetSingerListDelegate-Protocol.h"
#import "QMTableViewProtocol-Protocol.h"
#import "RadioCreatingDelegate-Protocol.h"
#import "SongCellDelegate-Protocol.h"
#import "UIGestureRecognizerDelegate-Protocol.h"
#import "UIScrollViewDelegate-Protocol.h"
#import "UITableViewDataSource-Protocol.h"
#import "UITableViewDelegate-Protocol.h"

@class BEActionSheet, BETouchView, CRNavigationBar, CreatingRadioVC, IndexView, InputFolderName, ListBase, ListTag, NSArray, NSIndexPath, NSMutableArray, NSMutableDictionary, NSString, NSTimer, NavBarTitleLabel, NoNetViewParameter, NowPlayingAnimationView, SongInfo, UIButton, UIImageView, UINavigationController, UITableView, UIView;

@interface SkinViewController : HookViewController <CAAnimationDelegate, ChannelAlertViewDelegate, ListTagDelegate, UITableViewDelegate, UIScrollViewDelegate, BEActionSheetDelegate, UITableViewDataSource, QMTableViewProtocol, UIGestureRecognizerDelegate, SongCellDelegate, RadioCreatingDelegate, QMActionSheetSingerListDelegate>
{
    ListTag *listTag;
    _Bool bPlayingUIPush;
    unsigned long long _uin;
    long long _actionSheet_addToPlaying_index;
    long long _actionSheet_addTo_index;
    long long _actionSheet_addSong_index;
    long long _actionSheet_download_index;
    long long _actionSheet_buy_single_song_index;
    long long _actionSheet_share_index;
    long long _actionSheet_delete_index;
    long long _actionSheet_createRadio_index;
    long long _actionSheet_singerInfo_index;
    long long _actionSheet_albumInfo_index;
    long long _actionSheet_toMv_index;
    long long _actionSheet_playerSkin_index;
    long long _actionSheet_timeout_index;
    long long _actionSheet_CiPai_index;
    long long _actionSheet_backgroundSong_index;
    long long _actionSheet_kSong_index;
    long long _actionSheet_blackName_index;
    long long _actionSheet_global_comment_index;
    long long _actionSheet_donot_like_index;
    long long _actionSheet_export_to_itunesShare_index;
    long long _actionSheet_searchSong_Index;
    long long _actionSheet_Perfre_Set_Index;
    long long _actionSheet_SingerPortrait_Custom_Index;
    long long _actionSheet_NotificationPush_Switch_Index;
    long long _actionSheet_myLove_index;
    long long _actionSheet_goToLyric_index;
    long long _actionSheet_folderContributions_index;
    long long _actionSheet_restoreFolder_index;
    long long _actionSheet_sort_switch_index;
    long long _actionSheet_weiyun_index;
    long long _actionSheet_edit_mySongList_index;
    long long _actionSheet_report_index;
    BETouchView *nonetView;
    UITableView *songsTableView;
    UITableView *cluserTableView;
    UIView *infoView;
    UIView *emptyView;
    UIView *pageHeaderView;
    UIView *bannerTipsContainerView;
    UIButton *btnPlay;
    NowPlayingAnimationView *playingAnimationView;
    NavBarTitleLabel *navTitleLabel;
    UIImageView *topBackImageView;
    CRNavigationBar *topBar;
    _Bool bDisplayTabBar;
    _Bool bContainSongList;
    IndexView *_indexView;
    _Bool _titleLabelIsAnimated;
    struct CGRect _originNavTitleLabelFrame;
    _Bool _canBack;
    CreatingRadioVC *_creatingRadioVC;
    _Bool isModalView;
    _Bool animateShow;
    _Bool isMVButtonStyle;
    _Bool isManualScolling;
    _Bool _delayCallPlayingListIndexChange;
    _Bool _bContinueShowBannerTips;
    _Bool _bShowSaveFinishIcoInCell;
    _Bool _disablePopGesture;
    _Bool _showSongCellRightButtons;
    _Bool _isRandomBtnPreesed;
    _Bool _showedLocalSongTips;
    _Bool _shouldAutoAdjustViewWhenStatusBarFrameChange;
    _Bool _statusBarFrameIsChanging;
    int tabBarDisplayMode;
    int statusBarOffset;
    int _backGroundMusicFrom;
    UIView *tabBarObserverd;
    SongInfo *circleJumpSong;
    UIView *_bgView;
    NSArray *_extraVCType;
    NSMutableArray *_modySongs;
    long long _eMiniPlayerDisplayMode;
    BETouchView *_topButton;
    InputFolderName *_inputFolderName;
    UIImageView *_imageViewChecked;
    SongInfo *_circleJumpSongInfo;
    BEActionSheet *_actionSheet;
    NSString *_strAID;
    long long _downloadQualityStatistics;
    NSMutableArray *_requestToPlayArray;
    NSMutableDictionary *_fromSongDic;
    UIButton *_anchorButton;
    NoNetViewParameter *_noNetViewParameter;
    NSMutableArray *_notifycationAliveWithSelf;
    NSMutableArray *_notifycationAliveWithView;
    NSIndexPath *_lastHilightedIndexPath;
    NSTimer *_viewDidPopTimer;
    UINavigationController *_weakNavController;
    long long _useWhiteBgWhenDefaultSkinFlag;
    double _statusBarIncrementalHeight;
}

+ (id)topViewController;
+ (void)addSeprateLineFrameToView:(id)arg1;
+ (id)addSeprateLineToVerticalCenter:(id)arg1;
+ (id)addSeprateLineToRight:(id)arg1;
+ (id)addSeprateLineToLeft:(id)arg1;
+ (id)addSeprateLineToBottom:(id)arg1;
+ (id)addSeprateLineToTop:(id)arg1;
+ (id)createSeprateLine;
+ (double)seprateLineHeight;
+ (void)goToRestoreFolder;
+ (id)findVCInNavigation:(Class)arg1;
+ (id)classFuncGetCurrentNavigationController;
+ (_Bool)_containArrowInCell:(id)arg1;
+ (id)reusableCell:(Class)arg1 tableView:(id)arg2 indexPath:(id)arg3 identifier:(id)arg4;
+ (void)showAddToDownloadSuccessBannerTips:(int)arg1;
+ (id)showAlertIdForNormalSong:(id)arg1 quality:(int)arg2 fromList:(id)arg3;
+ (void)filterLastSongs:(id)arg1 quality:(int)arg2 result:(CDUnknownBlockType)arg3;
+ (id)addArrowToCell:(id)arg1 inTable:(id)arg2 indexPath:(id)arg3;
+ (id)createArrowImageView;
+ (void)addSeprateLineToCell:(id)arg1 inTable:(id)arg2 indexPath:(id)arg3 cellType:(int)arg4;
+ (void)addSeprateLineToCell:(id)arg1 inTable:(id)arg2 indexPath:(id)arg3;
+ (double)cellHeightForTable:(id)arg1 indexPath:(id)arg2;
+ (struct SLineIndent)_indentSeprateLineForRow:(unsigned long long)arg1 rowCount:(unsigned long long)arg2 cellType:(int)arg3;
+ (double)indentByCellType:(int)arg1;
+ (id)createOperateViewByMode:(long long)arg1 actions:(long long)arg2 playBlock:(CDUnknownBlockType)arg3 operBlock:(CDUnknownBlockType)arg4;
+ (id)createNavBarStyleBtnWithTitle:(id)arg1 target:(id)arg2 selector:(SEL)arg3;
+ (id)createCancelHeaderBtn:(id)arg1;
+ (id)createFinishHeaderBtn:(id)arg1;
+ (id)vcfrom_Search_Result;
+ (id)vcfrom_MyMusic_Download_Recommend;
+ (id)vcfrom_MyMusic_MyLove_Recommend;
+ (id)vcfrom_MyMusic_LocalSong_Recommend;
+ (id)vcfrom_MyMusic_AllSong_Recommend;
+ (id)vcfrom_MyMusic_Download;
+ (id)vcfrom_MyMusic_MyLove;
+ (id)vcfrom_MyMusic_LocalSong;
+ (id)vcfrom_MyMusic_AllSong;
+ (void)showBannerTips:(id)arg1 WithIcon:(long long)arg2;
+ (void)jumpToDirect:(id)arg1 directItem:(id)arg2 nav:(id)arg3 fromVC:(id)arg4 fromSmart:(_Bool)arg5 orderNum:(long long)arg6;
@property double statusBarIncrementalHeight; // @synthesize statusBarIncrementalHeight=_statusBarIncrementalHeight;
@property _Bool statusBarFrameIsChanging; // @synthesize statusBarFrameIsChanging=_statusBarFrameIsChanging;
@property(nonatomic) _Bool shouldAutoAdjustViewWhenStatusBarFrameChange; // @synthesize shouldAutoAdjustViewWhenStatusBarFrameChange=_shouldAutoAdjustViewWhenStatusBarFrameChange;
@property(nonatomic) long long useWhiteBgWhenDefaultSkinFlag; // @synthesize useWhiteBgWhenDefaultSkinFlag=_useWhiteBgWhenDefaultSkinFlag;
@property(nonatomic) __weak UINavigationController *weakNavController; // @synthesize weakNavController=_weakNavController;
@property(nonatomic) _Bool showedLocalSongTips; // @synthesize showedLocalSongTips=_showedLocalSongTips;
@property _Bool isRandomBtnPreesed; // @synthesize isRandomBtnPreesed=_isRandomBtnPreesed;
@property(retain) NSTimer *viewDidPopTimer; // @synthesize viewDidPopTimer=_viewDidPopTimer;
@property(retain, nonatomic) NSIndexPath *lastHilightedIndexPath; // @synthesize lastHilightedIndexPath=_lastHilightedIndexPath;
@property(retain, nonatomic) NSMutableArray *notifycationAliveWithView; // @synthesize notifycationAliveWithView=_notifycationAliveWithView;
@property(retain, nonatomic) NSMutableArray *notifycationAliveWithSelf; // @synthesize notifycationAliveWithSelf=_notifycationAliveWithSelf;
@property(retain, nonatomic) NoNetViewParameter *noNetViewParameter; // @synthesize noNetViewParameter=_noNetViewParameter;
@property(nonatomic) int backGroundMusicFrom; // @synthesize backGroundMusicFrom=_backGroundMusicFrom;
@property(nonatomic) _Bool showSongCellRightButtons; // @synthesize showSongCellRightButtons=_showSongCellRightButtons;
@property(retain, nonatomic) UIButton *anchorButton; // @synthesize anchorButton=_anchorButton;
@property(nonatomic) _Bool disablePopGesture; // @synthesize disablePopGesture=_disablePopGesture;
@property(retain, nonatomic) NSMutableDictionary *fromSongDic; // @synthesize fromSongDic=_fromSongDic;
@property(retain, nonatomic) NSMutableArray *requestToPlayArray; // @synthesize requestToPlayArray=_requestToPlayArray;
@property(nonatomic) long long downloadQualityStatistics; // @synthesize downloadQualityStatistics=_downloadQualityStatistics;
@property(retain, nonatomic) NSString *strAID; // @synthesize strAID=_strAID;
@property(retain, nonatomic) BEActionSheet *actionSheet; // @synthesize actionSheet=_actionSheet;
@property(retain, nonatomic) SongInfo *circleJumpSongInfo; // @synthesize circleJumpSongInfo=_circleJumpSongInfo;
@property(nonatomic) _Bool bShowSaveFinishIcoInCell; // @synthesize bShowSaveFinishIcoInCell=_bShowSaveFinishIcoInCell;
@property(nonatomic) _Bool bContinueShowBannerTips; // @synthesize bContinueShowBannerTips=_bContinueShowBannerTips;
@property(nonatomic) _Bool delayCallPlayingListIndexChange; // @synthesize delayCallPlayingListIndexChange=_delayCallPlayingListIndexChange;
@property(retain, nonatomic) UIImageView *imageViewChecked; // @synthesize imageViewChecked=_imageViewChecked;
@property(retain, nonatomic) InputFolderName *inputFolderName; // @synthesize inputFolderName=_inputFolderName;
@property(retain, nonatomic) BETouchView *topButton; // @synthesize topButton=_topButton;
@property long long eMiniPlayerDisplayMode; // @synthesize eMiniPlayerDisplayMode=_eMiniPlayerDisplayMode;
@property(retain, nonatomic) NSMutableArray *modySongs; // @synthesize modySongs=_modySongs;
@property(retain, nonatomic) NSArray *extraVCType; // @synthesize extraVCType=_extraVCType;
@property(retain, nonatomic) UIView *bgView; // @synthesize bgView=_bgView;
@property(nonatomic) _Bool isManualScolling; // @synthesize isManualScolling;
@property(retain, nonatomic) SongInfo *circleJumpSong; // @synthesize circleJumpSong;
@property _Bool isMVButtonStyle; // @synthesize isMVButtonStyle;
@property(nonatomic) _Bool animateShow; // @synthesize animateShow;
@property(nonatomic) _Bool isModalView; // @synthesize isModalView;
@property(nonatomic) int statusBarOffset; // @synthesize statusBarOffset;
@property(readonly, nonatomic) IndexView *indexView; // @synthesize indexView=_indexView;
@property(nonatomic) _Bool bContainSongList; // @synthesize bContainSongList;
@property(retain, nonatomic) UIView *tabBarObserverd; // @synthesize tabBarObserverd;
@property(nonatomic) _Bool bDisplayTabBar; // @synthesize bDisplayTabBar;
@property(nonatomic) int tabBarDisplayMode; // @synthesize tabBarDisplayMode;
@property(nonatomic) _Bool bPlayingUIPush; // @synthesize bPlayingUIPush;
@property(retain, nonatomic) UIView *bannerTipsContainerView; // @synthesize bannerTipsContainerView;
@property(retain, nonatomic) UIView *pageHeaderView; // @synthesize pageHeaderView;
@property(retain, nonatomic) CRNavigationBar *topBar; // @synthesize topBar;
@property(retain, nonatomic) UIImageView *topBackImageView; // @synthesize topBackImageView;
@property(retain, nonatomic) NowPlayingAnimationView *playingAnimationView; // @synthesize playingAnimationView;
@property(retain, nonatomic) UIButton *btnPlay; // @synthesize btnPlay;
@property(retain, nonatomic) UIView *emptyView; // @synthesize emptyView;
@property(retain, nonatomic) UITableView *cluserTableView; // @synthesize cluserTableView;
@property(retain, nonatomic) NavBarTitleLabel *navTitleLabel; // @synthesize navTitleLabel;
@property(retain, nonatomic) UIView *nonetView; // @synthesize nonetView;
@property(retain, nonatomic) UIView *infoView; // @synthesize infoView;
@property(retain, nonatomic) UITableView *songsTableView; // @synthesize songsTableView;
- (void).cxx_destruct;
- (_Bool)disable3DTouch;
- (void)closePlayingListVC;
- (void)navigateToVipWeb:(id)arg1;
- (void)presentPurchseControllerWithProductType:(unsigned long long)arg1 aid:(id)arg2 month:(long long)arg3 canChange:(_Bool)arg4;
- (void)presentPurchseControllerWithProductType:(unsigned long long)arg1 aid:(id)arg2;
- (void)presentPurchseControllerWithPurchaseCode:(id)arg1 aid:(id)arg2 month:(long long)arg3 canChange:(_Bool)arg4;
- (void)presentPurchseControllerWithPurchaseCode:(id)arg1 aid:(id)arg2;
- (void)ignoreScreenEdgePanGesture:(id)arg1;
- (void)disablePopRecommendView;
- (id)batchDownloadSongs;
- (id)defaultCreateNewFolderName;
- (void)delayDeselectRow;
- (void)reloadTable:(id)arg1 indexPath:(id)arg2;
- (void)postNotityUIReady:(_Bool)arg1;
- (long long)statusBarStyle;
- (_Bool)gestureRecognizerShouldBegin:(id)arg1;
- (_Bool)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;
- (void)updateTheNoNetView;
- (void)hideNavBarBg;
- (double)getSeperateLineWidth;
- (_Bool)canBack;
- (float)emptyViewTopOffset;
- (float)infoViewTopOffset;
- (void)doneAfterDismissMe;
- (_Bool)dismissMeWhenOnBackground;
- (void)captureAfter;
- (void)captureBefore;
- (void)removeNotification:(id)arg1 selector:(id)arg2;
- (void)addNotification:(id)arg1 selector:(SEL)arg2;
- (void)showMVNoSaleAlert;
- (void)showCanNotPlayMVAlert;
- (struct CGRect)getContextFrame;
- (id)getPlayingIndexIfInCurrentList;
- (void)statusBarFrameDidChange:(id)arg1 withDiff:(double)arg2;
- (void)_statusBarFrameDidChange:(id)arg1;
- (void)_statusBarFrameWillChange:(id)arg1;
- (double)calculateStatusBarIncrementalHeight;
- (void)doHandlePushComming:(id)arg1;
- (_Bool)enableShake;
- (void)onNotifyUserPreferredFontChange:(id)arg1;
- (void)onNotifyUserLanguageChanged:(id)arg1;
- (_Bool)titileBarNeedChangeColor;
- (void)onColorStyleChanged;
- (void)_onNotifyColorStyleChanged:(id)arg1;
- (void)_onNotifySongEntityFileChanged:(id)arg1;
- (void)dealWithSongEntityFileChangedNotification:(id)arg1;
- (void)onNotifyReturnMiniPlayerFromPlayingView:(id)arg1;
- (void)scrollViewDidEndDecelerating:(id)arg1;
- (void)scrollViewDidEndDragging:(id)arg1 willDecelerate:(_Bool)arg2;
- (void)onNotifySongInfoExtUpdated:(id)arg1;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (void)tableView:(id)arg1 didUnhighlightRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 didHighlightRowAtIndexPath:(id)arg2;
- (id)_nextCellInTable:(id)arg1 currentIndexPath:(id)arg2;
- (void)animate:(id)arg1 section:(unsigned long long)arg2 compareResult:(struct SCompareResult)arg3;
- (id)makeIndexPathArray:(unsigned long long)arg1 length:(unsigned long long)arg2 section:(unsigned long long)arg3;
- (void)cancel:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)popGestureRecognize;
- (void)reachabilityChanged:(id)arg1;
- (_Bool)canRefreshIfNetChanged;
- (void)viewDidLoad;
- (_Bool)isNeedAddBottomLine;
- (void)setNavTitle:(id)arg1;
- (void)recoverGestureState;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)longPressBack:(id)arg1;
- (void)afterBtnAction:(id)arg1;
- (void)back:(id)arg1;
- (void)freshByPopTag;
- (void)nowPlayingButtonPressed:(id)arg1;
@property(readonly, nonatomic) int contextHight;
@property(readonly, nonatomic) int headerHight;
- (void)reFreshWithNetworkDetection;
- (void)reFresh;
- (void)onList:(id)arg1 ChangeByType:(int)arg2 Index:(int)arg3 Info:(id)arg4;
- (void)onList:(id)arg1 InfoChangeByInfo:(id)arg2 ChangeType:(int)arg3 Index:(unsigned long long)arg4;
- (void)checkSongRightStatusForIndexPathes:(id)arg1 personalSongs:(id)arg2 normalSongs:(id)arg3;
- (void)tryRefreshSongRightContainCurrent:(_Bool)arg1;
- (void)tryRefreshSongRight;
- (void)onNotifySongRightStatusReset:(id)arg1;
- (void)onNotifySongRightRefreshed:(id)arg1;
- (void)onNotifyPlayingSongChange:(id)arg1;
- (_Bool)miniplayerShouldHide;
- (void)showNoWifiTip:(id)arg1;
- (_Bool)actualPlayList:(id)arg1 ItemClicked:(int)arg2 listPlayMode:(int)arg3 isNeedToResetNavBar:(_Bool)arg4;
- (id)getCurrentModule;
- (_Bool)playList:(id)arg1 ItemClicked:(int)arg2 listPlayMode:(int)arg3 isNeedToResetNavBar:(_Bool)arg4;
- (_Bool)playList:(id)arg1 ItemClicked:(int)arg2 listPlayMode:(int)arg3;
- (int)playModeForAddNewRandomPlaylist;
- (void)randomButtonClicked:(id)arg1;
- (_Bool)isNeedShowLocalFirstBannerTips;
- (id)randomPlayList;
@property(readonly, nonatomic) __weak ListBase *list;
- (void)delListTag;
- (void)addListTag:(int)arg1;
- (id)getAllVCType;
- (id)strVCtype;
@property(readonly, nonatomic) int vcType;
- (void)touchOnTop;
- (id)getCurrentNavigationController;
- (_Bool)dismissActionSheet;
- (void)dealloc;
- (void)deleleAllListTag;
- (void)didReceiveMemoryWarning;
- (void)viewDidPop;
- (void)viewWillPop;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)contentAreaHeightDidChanged:(double)arg1;
- (float)getMiniPlayerHeight;
- (void)miniPlayerViewDidChanged:(double)arg1;
- (void)hiddenMiniBar:(id)arg1;
- (void)showMiniBar:(id)arg1;
- (void)loadView;
- (void)useWhiteBgWhenDefaultSkin:(_Bool)arg1 reason:(long long)arg2;
- (_Bool)useBgImage;
@property(readonly, nonatomic) _Bool mody;
- (_Bool)accessibilityPerformEscape;
- (id)init;
- (void)customPopAction:(id)arg1 commitViewController:(id)arg2;
- (void)registerForceTouchDelegateForTableView;
- (id)vcForForceTouchCell:(id)arg1;
- (void)radioCreatedFailed;
- (void)radioCreatedSuccess;
- (void)onTouchUpInsideRandomButton:(id)arg1;
- (void)onSongsEditDone:(id)arg1 deletedObjects:(id)arg2;
- (void)handleCellLongPress:(id)arg1;
- (id)batchEditDelegate;
- (id)batchEditSelectedIndex:(id)arg1;
- (id)batchEditSongs;
- (_Bool)canResponseLongPress;
- (_Bool)isCurrentMVlist;
- (void)showPiLiangOperationAlert;
- (void)cellLongPressShowAlert;
- (_Bool)isShowActionBarDelButton;
- (void)_deleteSongsFromAllMusicExpertTaoSong:(id)arg1;
- (void)_deleteSongsFromeFolder:(id)arg1 songInfo:(id)arg2;
- (void)deleteSongsFromAllMusic:(id)arg1 force:(_Bool)arg2;
- (void)deleteSongsFromAllMusic:(id)arg1;
- (void)showOpenAutoSaveAlert;
- (void)resetSongTableFrame;
- (void)newTableCanLoadingMore;
- (void)newSongTable;
- (int)footBarHeight;
- (_Bool)wantPlayAtIndexPath:(id)arg1 tableView:(id)arg2;
- (void)showKSongAction:(id)arg1;
- (void)showNoInterestObject:(id)arg1;
- (void)delObject:(id)arg1;
- (void)showFloderSongList:(id)arg1;
- (void)showHotFolderViewWithSongListItems:(id)arg1;
- (void)showAlbumInfo:(id)arg1 fromVC:(id)arg2;
- (void)goToSingerVC:(id)arg1;
- (void)showSingerInfoWithSingerArray:(id)arg1 defaultSinger:(id)arg2 withExposureId:(int)arg3 andClickId:(int)arg4;
- (void)showSingerInfo:(id)arg1;
- (void)actionSheetDidChooseSinger:(id)arg1;
- (void)createSingleRadio:(id)arg1;
- (void)showMv:(id)arg1;
- (void)addToSong:(id)arg1;
- (void)reqSong:(id)arg1 assetsType:(int)arg2;
- (void)loginSucess:(id)arg1;
- (void)addTrendAroundActionSheetClickStat:(long long)arg1;
- (void)purchaseSongAfterLoginFailed:(id)arg1;
- (void)purchaseSongAfterLoginSuccess:(id)arg1;
- (void)actionSheet:(id)arg1 actionSheetSongPayBarClickedWithInfo:(id)arg2;
- (void)actionSheet:(id)arg1 actionSheetButtonClickedAtIndex:(long long)arg2;
- (void)showOrdinaryAlertView:(id)arg1;
- (void)actionSheet:(id)arg1 sheetButtonDidShowAtIndex:(long long)arg2;
- (void)actionSheetChoiceButtonClick:(_Bool)arg1;
- (void)_showActionSheetWithSongWithExpInfo:(id)arg1 forceBlackStyle:(_Bool)arg2;
- (void)getActionSheetDownloadForSong:(id)arg1 assetsType:(int)arg2 IconTitle:(id *)arg3 iconPic:(id *)arg4 iconPicH:(id *)arg5 enable:(_Bool *)arg6;
- (void)newActionSheetWithSongWithExpInfo:(id)arg1 forceBlackStyle:(_Bool)arg2;
- (void)newActionSheetWithSongWithExpInfo:(id)arg1;
- (void)newActionSheet:(id)arg1;
- (void)newMvActionSheet:(id)arg1;
- (_Bool)enableKSongActionSheet:(id)arg1;
- (_Bool)enableDelActionSheet:(id)arg1;
- (_Bool)showDnotLikeBtnInActionSheet:(id)arg1;
- (_Bool)showKSongBtnInActionSheet:(id)arg1;
- (_Bool)showDelBtnInActionSheet:(id)arg1;
- (_Bool)showAlbumInfoBtnInActionSheet:(id)arg1;
- (_Bool)showSingerInfoBtnInActionSheet:(id)arg1;
- (id)getSongWithExpByObject:(id)arg1;
- (void)showMVFromCell:(id)arg1;
- (void)checkIfCanShareSong:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)checkIfCanAddToCollectWithSong:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)autoRandomButton;
- (void)removeRandomButtonInHeader:(id)arg1;
- (void)addRandomButtonInHeader:(id)arg1;
- (id)createRandomButton;
- (void)resetButtonInset:(id)arg1;
- (void)changeDownAllViewFrame:(_Bool)arg1;
- (_Bool)isPlaying:(id)arg1 indexPath:(id)arg2;
- (_Bool)isEditingTable;
- (id)fillSongCell:(id)arg1 indexPath:(id)arg2;
- (_Bool)_containArrowInCell:(id)arg1;
- (id)reusableCell:(Class)arg1 tableView:(id)arg2 indexPath:(id)arg3 identifier:(id)arg4;
- (id)mvCell:(id)arg1 RowAtIndexPath:(id)arg2 hasTwoSubtitle:(_Bool)arg3 identifier:(id)arg4;
- (Class)getSongCellClassByIndexpath:(id)arg1;
- (id)getObjectWithExpInfoAtIndexPath:(id)arg1;
- (void)fillCell:(id)arg1 WithSong:(id)arg2;
- (id)getDownloadAllActionSheetWithFilterResult:(id)arg1 block:(CDUnknownBlockType)arg2;
- (void)showDownloadBannerTips:(unsigned int)arg1 lastSongArray:(id)arg2;
- (id)addedToDownloadingListMsg:(_Bool)arg1 songs:(id)arg2 defaultMsg:(id)arg3;
- (void)refreshChinaUnicomCell;
- (id)createFreePackItemDicInDownloadSheet;
- (int)extraClickStatusActionSheetDownload;
- (void)downloadSongAfterLoginFailed:(id)arg1;
- (void)canDownloadPaidSongAfterLoginSuccess:(id)arg1;
- (_Bool)isSongInfoBestQualityDownloaded:(id)arg1;
- (struct SFlexInteger)canUpgradeDownloadSongQualityOrRight:(id)arg1 assetsType:(int)arg2 reason:(long long *)arg3;
- (void)checkAndActionSheetAgain:(id)arg1 choiceButtonClickedWithChoiceValue:(id)arg2;
- (void)showSQLimitOKAlert:(long long)arg1;
- (id)showAlertIdForNormalSong:(id)arg1 forQuality:(int)arg2;
- (_Bool)allSongsIsPayDownload:(id)arg1;
- (void)constructDownloadExpInfo:(id)arg1 downtype:(id)arg2;
- (_Bool)specialAlertForSingleSongDownload:(id)arg1 songWithExp:(id)arg2;
- (void)actionSheet:(id)arg1 confirmButtonClickedWithChoiceValue:(id)arg2 identifier:(id)arg3;
- (void)showTipForVIPDownload:(id)arg1;
- (_Bool)actionSheet:(id)arg1 choiceButtonClickedWithChoiceValue:(id)arg2;
- (id)downloadTips:(id)arg1 assetsType:(int)arg2;
- (void)showDownloadQualityActionsheetForSingleSong:(id)arg1;
- (void)handleIconNamesForDictionary:(id)arg1 downloadQuality:(int)arg2 song:(id)arg3 andAssertType:(int)arg4;
- (void)downloadSingleSong:(id)arg1;
- (void)checkBeforeDownloadSong:(id)arg1 actionSheet:(id)arg2;
- (void)checkBeforeDownloadSong:(id)arg1;
- (void)index_scrollViewDidEndScrollingAnimation:(id)arg1;
- (void)index_scrollViewDidEndDecelerating:(id)arg1;
- (void)index_scrollViewWillBeginDecelerating:(id)arg1;
- (void)index_scrollViewDidEndDragging:(id)arg1 willDecelerate:(_Bool)arg2;
- (void)index_scrollViewWillBeginDragging:(id)arg1;
- (void)index_scrollViewDidScroll:(id)arg1;
- (void)delayCallTouchUpInside:(id)arg1;
- (void)onIndexTouchupInside:(struct CGPoint)arg1;
- (void)onIndexChanged:(id)arg1;
- (void)didClickIndexViewAtPoint:(struct CGPoint)arg1;
- (double)customIndexViewY;
- (struct CGRect)indexFrame;
- (void)createIndexView;
- (void)handleReadyToPlayChannelItem:(id)arg1 channelItem:(id)arg2;
- (void)handleReadyToPlayChannelItemError:(id)arg1 channelItemKey:(id)arg2;
- (void)readyToPlayChannelItem:(id)arg1;
- (void)reallyPlayChannel:(id)arg1;
- (void)reallyPlayChannel:(id)arg1 fromSong:(id)arg2;
- (void)_animateTitleBackFromNavBarWithAnimate:(_Bool)arg1;
- (void)_animateTitleBackFromNavBar;
- (void)_animateTitleToNavBarWithText:(id)arg1 withAnimate:(_Bool)arg2;
- (void)_animateTitleToNavBarWithText:(id)arg1;
- (void)showWebViewWithPageUrl:(id)arg1 defaultTitle:(id)arg2;
- (void)navigateToSingerVC:(id)arg1 coverPage:(long long)arg2;
- (void)navigateToSingerVC:(id)arg1;
- (id)getDestViewControllerByCreator:(id)arg1;
- (void)navigateToPersonalCenter:(id)arg1 fromVC:(id)arg2;
- (void)channelAlertView:(id)arg1 clickedButtonAtIndex:(long long)arg2;
- (void)jumpToViewByMid:(int)arg1 AndKey1:(id)arg2 AndKey2:(id)arg3 AndKey3:(id)arg4 AndKey4:(int)arg5 AndKey5:(int)arg6 AndKey6:(int)arg7 AndKey7:(id)arg8 bNeedAnimated:(_Bool)arg9 fromVC:(id)arg10;
- (_Bool)playChannel:(id)arg1;
- (_Bool)navigateToChannel:(id)arg1 fromvc:(id)arg2 animated:(_Bool)arg3;
- (_Bool)navigateToChannel:(id)arg1 fromvc:(id)arg2;
- (void)handleFetchRadioListStatus:(long long)arg1 radioProtocol:(id)arg2 protocolError:(id)arg3;
- (id)createFrom:(id)arg1;
- (void)setCircleJumpSongToController:(id)arg1;
- (_Bool)navigateToChannel:(id)arg1;
- (void)showVipChannelStuckAlert;
- (void)handleVipChannel:(id)arg1;
- (void)handleExpiredChannel:(id)arg1;
- (_Bool)isExpiredChannel:(id)arg1;
- (_Bool)isValidChannel:(id)arg1;
- (_Bool)isSamePlayingList:(id)arg1;
- (void)showTips:(id)arg1;
- (void)addBottomGreenLine;
- (void)addChannelLayoutTableViewWithFrame:(struct CGRect)arg1 inView:(id)arg2 bottomShadow:(_Bool)arg3;
- (struct CGRect)_defaultChannelLayoutTableViewFrame;
- (void)addChannelLayoutShadowTableView;
- (void)addChannelLayoutTableView;
- (void)setRedPointStyle:(id)arg1 withCellHeight:(double)arg2 withLabel:(id)arg3;
- (void)setLabelOriginY:(id)arg1 withCellHeight:(double)arg2;
- (void)setCellRightLabelStyle:(id)arg1 withCellHeight:(double)arg2;
- (void)setCellRightLabelStyle:(id)arg1;
- (void)showWXMissView:(int)arg1;
- (void)setTableViewFooterTextStyle:(id)arg1;
- (void)setTableViewHeaderTextStyle:(id)arg1;
- (id)setTableViewHeaderTitle:(id)arg1;
- (id)moreRootSwitchCellRowForTableView:(id)arg1 AtIndexPath:(id)arg2 identifier:(id)arg3;
- (id)moreRootSwitchCellRowForTableView:(id)arg1 AtIndexPath:(id)arg2;
- (id)noSeperateLineMoreRootCellRowForTableView:(id)arg1 AtIndexPath:(id)arg2;
- (id)moreRootCellRowForTableView:(id)arg1 AtIndexPath:(id)arg2;
- (id)innerMoreRootCellRowForTableView:(id)arg1 AtIndexPath:(id)arg2 withSeperateLine:(_Bool)arg3;
- (unsigned long long)feedDataVCType;
- (void)updateFeedCellTimeString:(id)arg1;
- (void)checkExposureVideoFeedWhenTableViewStopScrolling:(id)arg1 isVCShow:(_Bool)arg2;
- (void)checkExposureVideoFeedInDidScroll:(id)arg1 isVCShow:(_Bool)arg2 lastScrollOffset:(double *)arg3;
- (void)startCheckNextVideoFirstPieceInDataSource:(id)arg1 withPlayingCell:(id)arg2;
- (void)checkAutoPlayVideoCellInTableView:(id)arg1 inDataSource:(id)arg2 withPlayingCell:(id *)arg3 withPlayingData:(id *)arg4 withPausingData:(id)arg5;
- (void)checkAutoPlayVideoCellInTableView:(id)arg1 inDataSource:(id)arg2 withPlayingCell:(id *)arg3 withPlayingData:(id *)arg4;
- (void)checkAutoPlayVideoCellInTableView:(id)arg1 inDataSource:(id)arg2 withPlayingCell:(id *)arg3;
- (void)showOfflineFuncPrivilegeWebPage:(id)arg1 callbackSelector:(SEL)arg2 alert:(_Bool)arg3;
- (void)_onCollectSuccess:(id)arg1;
- (void)_showMessageWhileDone:(id)arg1;
- (void)reportLoveSong:(id)arg1;
- (id)_formatAddSongsToFolderMsgWithErrorCollectType:(int)arg1 collectInfo:(id)arg2 folderId:(int)arg3 iconType:(long long *)arg4;
- (void)_showInputFolderName:(id)arg1;
- (void)_showSelectFolder:(id)arg1;
- (void)onNotifyCollectEdit:(id)arg1;
- (void)collectSelected:(id)arg1;
- (void)addSongsToCollect:(id)arg1;
- (id)folderCellModelFromFolderInfo:(id)arg1;
- (void)updateComRootCellNumber:(id)arg1 folderInfo:(id)arg2 cellFrom:(int)arg3;
- (id)getSubTitleInfoWithFolder:(id)arg1 withPart1:(id)arg2;
- (void)fillComRootMyMusicCell:(id)arg1 indexPath:(id)arg2 channelItem:(id)arg3 hiddenArrow:(_Bool)arg4;
- (void)fillComRootMyMusicCell:(id)arg1 indexPath:(id)arg2 folderInfo:(id)arg3 cellFrom:(int)arg4;
- (id)imageCell:(id)arg1 RowAtIndexPath:(id)arg2 identifier:(id)arg3;
- (id)addFootView:(id)arg1;
- (id)addHeaderView:(id)arg1;
- (void)newPlainTable;
- (void)newTable;
- (void)batchAddSongs:(id)arg1;
- (void)onLongPressedBack:(id)arg1;
- (void)onTouchUpInsideBack:(id)arg1;
- (void)onTouchUpInsideMore:(id)arg1;
- (id)createMoreHeaderBtn;
- (id)createClearInputButton;
- (void)freshTopBgView;
- (void)freshReturnButton;
- (void)freshNowPlayingButton;
- (id)createNavBarStyleBtnWithTitle:(id)arg1 selector:(SEL)arg2;
- (id)createRightButtonWithImage:(id)arg1 highlightImageName:(id)arg2 selector:(SEL)arg3;
- (id)createSelectAllButton:(id)arg1;
- (id)createTitleHeaderBtn:(id)arg1 selector:(SEL)arg2 title:(id)arg3;
- (id)createCloseHeaderBtn;
- (id)createCancelHeaderBtn;
- (id)createFinishHeaderBtn;
- (id)createShareHeaderBtn;
- (id)createEditHeaderBtn;
- (id)createGeneralBtnWithTitle:(id)arg1 selector:(SEL)arg2;
- (void)headerCancel:(id)arg1;
- (void)selectAllClicked:(id)arg1;
- (void)headerEdit:(id)arg1;
- (void)headerFinish:(id)arg1;
- (void)headerButtonClicked:(id)arg1;
- (id)createNowPlayingBtn;
- (id)getBackImageSelectName;
- (id)getBackImageName;
- (id)createRetunBtnAutoAndCloseBt:(_Bool)arg1 closeSelector:(SEL)arg2;
- (id)createRetunBtnAuto:(_Bool)arg1;
- (void)createWebViewHeaderWithLeftView:(id)arg1 rightView:(id)arg2 withBg:(_Bool)arg3;
- (void)createHeaderWithBg:(_Bool)arg1 LeftView:(id)arg2 HeaderText:(_Bool)arg3 RightView:(id)arg4;
- (void)createHeaderWithLeftView:(id)arg1 HeaderText:(_Bool)arg2 RightView:(id)arg3;
- (void)createHeaderWithLeftView:(id)arg1 HeaderText:(_Bool)arg2 RightView:(id)arg3 clickable:(_Bool)arg4;
- (void)createHeaderWithReturnBtn:(_Bool)arg1 HeaderText:(_Bool)arg2 PlayBtn:(_Bool)arg3;
- (void)createDefaultHeader;
- (_Bool)isScrollEventHandledInSubViewController;
- (_Bool)shouldShowAnchorButton;
- (void)refreshAnchorButton;
- (struct CGPoint)anchorButtonPosition:(struct CGSize)arg1;
- (void)notifyToAnchorWhenScrollViewDidBeginDragging:(id)arg1;
- (long long)anchorButtonScrollPosition;
- (void)anchorButtonClicked:(id)arg1;
- (void)hideAnchorButton;
- (void)notifyBeforeAnchorClicked;
- (void)showAnchorViewWhenNeed;
- (id)presentViewControllerFrom;
- (void)gotoWebpageWithURL:(id)arg1;
- (void)showBackGroundManagePage;
- (void)showBackGroundListPage;
- (id)getReportFromKey:(int)arg1;
- (long long)getAlertExposureOrClickID:(int)arg1 isGray:(_Bool)arg2;
- (long long)getMsgIDbyTag:(int)arg1;
- (id)getSetBGMusicGrayAID:(int)arg1;
- (void)showUpdateDiamondAlert;
- (void)setBackGroundSongsFinish:(id)arg1;
- (_Bool)setBackGroundSongsAction:(id)arg1 withAID:(id)arg2;
- (void)setBackGroundSongsAction:(id)arg1;
- (void)onTouchSelectAll:(id)arg1;
- (unsigned long long)getEditingSongsCount;
- (void)onTouchUpInsideDoneEdit:(id)arg1;
- (id)createDoneEditView;
- (id)createSelectAllView;
- (id)createFootEditBarOnlyForDelete;
- (id)createFootEditBarOnlyForDownload;
- (id)createFootEditBarOnlyForAddto;
- (id)createFootEditBarWithDeleteBtnShow:(_Bool)arg1 isFromIpodVC:(_Bool)arg2 isFromRecentPlayVC:(_Bool)arg3 isFromDownloadedSong:(_Bool)arg4 isNotShowDownloadBtn:(_Bool)arg5 WeiYunBtnShow:(_Bool)arg6;
- (void)onTouchUpInsideEdit:(id)arg1;
- (id)createEditView;
- (id)createEditViewByButtonItems:(id)arg1 streachButton:(_Bool)arg2;
- (void)onTouchUpInsideReFreshWithNetworkDetection:(id)arg1;
- (void)hideNonStoppedBannerTips;
- (void)showNonStoppedBannerTips:(id)arg1 WithIcon:(long long)arg2;
- (void)dismissMsgView:(id)arg1;
- (void)showComMsgBoxWithMsg:(id)arg1 ArrowLoction:(struct CGPoint)arg2;
- (void)hideNetErrView;
- (void)resetNoNetImageTopOffset:(double)arg1;
- (void)showNoNetViewWithInfo1:(id)arg1 andInfo2:(id)arg2 iconName:(id)arg3 topOffset:(double)arg4 errorCode:(long long)arg5;
- (void)tappedCloseWifiOnlyButton:(id)arg1;
- (id)closeWiFiOnlyButton;
- (void)showNoNetViewWithInfo1:(id)arg1 andInfo2:(id)arg2 iconName:(id)arg3 errorCode:(long long)arg4;
- (struct CGRect)getNetErrShowFrame;
- (void)showNetErrView;
- (void)showNetErrWithResult:(int)arg1 withTopOffset:(double)arg2;
- (void)showNetErrWithResult:(int)arg1;
- (_Bool)isNeedNetErrIcon;
- (void)hideLoadingView;
- (id)loadingViewText;
- (void)showAllTypeLoadingView:(_Bool)arg1 height:(double)arg2;
- (void)showCustomLoadingViewWithHeight:(double)arg1;
- (void)showLoadingView;
- (_Bool)isBannerTipsShow;
- (void)finishedTips;
- (void)dismissTipsWithAnimated:(_Bool)arg1;
- (void)dismissTips;
- (void)changeTipsEnable;
- (void)hideBannerTipsImmedirtery;
- (void)hideBannerTips;
- (void)showBannerTips:(id)arg1 WithIcon:(long long)arg2 Force:(_Bool)arg3;
- (void)showBannerTips:(id)arg1 WithIcon:(long long)arg2 withTipsType:(long long)arg3 withForceClearQueue:(_Bool)arg4;
- (void)showBannerTips:(id)arg1 WithIcon:(long long)arg2;
- (void)showBannerTips:(id)arg1 WithIcon:(long long)arg2 withActionTitle:(id)arg3 withTipsDisappearTime:(int)arg4 withEventBlock:(CDUnknownBlockType)arg5;
- (void)showBannerTips:(id)arg1 WithIcon:(long long)arg2 withActionTitle:(id)arg3 withEventBlock:(CDUnknownBlockType)arg4;
- (void)showChannelBannerTips:(id)arg1 WithIcon:(long long)arg2 Force:(_Bool)arg3;
- (void)showChannelBannerTips:(id)arg1 WithIcon:(long long)arg2;
- (id)createNewBannerTips:(id)arg1 WithIcon:(long long)arg2;
- (id)createIcon:(long long)arg1;
- (_Bool)showContinuousBannerTips;
- (void)freshAllExceptionView;
- (void)hideAll;
- (void)showTable;
- (void)fresh:(id)arg1;
- (void)addEmptyView:(id)arg1;
- (id)emptyViewText;
- (void)adjustTwoViewBelowPicture;
- (double)getCustomButtonYStart;
- (void)createTwoCustomViewsBelowPicture:(id)arg1;
- (void)showEmptyView;
- (id)createEmptyViewButton:(id)arg1 sel:(SEL)arg2;
- (id)noNetViewCustomButton;
- (id)emptyViewCustomButton;
- (id)emptyViewBgText2;
- (id)emptyViewBgText;
- (struct CGRect)emptyViewBgImageViewRect;
- (id)emptyViewBgImage;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

