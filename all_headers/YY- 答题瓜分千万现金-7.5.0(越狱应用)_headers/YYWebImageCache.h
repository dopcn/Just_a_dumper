//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

@class NSCache, NSFileManager, NSMutableArray, NSString;
@protocol OS_dispatch_queue;

@interface YYWebImageCache : NSObject
{
    NSFileManager *_fileManager;
    NSObject<OS_dispatch_queue> *_ioQueue;
    NSString *_cacheNamespace;
    double _maxCacheAge;
    unsigned long long _maxCacheSize;
    NSCache *_memoryCache;
    NSString *_diskCachePath;
    NSMutableArray *_customPaths;
}

+ (void)clearSharedMemoryCache;
+ (id)imageFromSharedMemoryCacheForKey:(id)arg1;
+ (unsigned long long)sharedMemoryCacheItemLimit;
+ (void)setSharedMemoryCacheItemLimit:(unsigned long long)arg1;
+ (unsigned long long)sharedMemoryCacheCostLimit;
+ (void)setSharedMemoryCacheCostLimit:(unsigned long long)arg1;
+ (void)onMemoryWarning:(id)arg1;
+ (id)sharedMemoryCache;
+ (void)load;
@property(readonly, nonatomic) NSMutableArray *customPaths; // @synthesize customPaths=_customPaths;
@property(readonly, nonatomic) NSString *diskCachePath; // @synthesize diskCachePath=_diskCachePath;
@property(retain, nonatomic, getter=getMemoryCache) NSCache *memoryCache; // @synthesize memoryCache=_memoryCache;
@property(nonatomic) unsigned long long maxCacheSize; // @synthesize maxCacheSize=_maxCacheSize;
@property(nonatomic) double maxCacheAge; // @synthesize maxCacheAge=_maxCacheAge;
@property(readonly, nonatomic) NSString *cacheNamespace; // @synthesize cacheNamespace=_cacheNamespace;
- (void).cxx_destruct;
- (id)_cachePathForKey:(id)arg1 inPath:(id)arg2;
- (id)_defaultCachePathForKey:(id)arg1;
- (id)_cacheFileNameForKey:(id)arg1;
- (void)caculateSizeWithCompletion:(CDUnknownBlockType)arg1;
- (unsigned long long)getDiskCount;
- (unsigned long long)getSize;
- (void)backgroundCleanDisk;
- (void)cleanDiskOnCompletion:(CDUnknownBlockType)arg1;
- (void)cleanDisk;
- (void)clearDiskOnCompletion:(CDUnknownBlockType)arg1;
- (void)clearDisk;
- (void)removeAllImages;
- (void)removeImageForKey:(id)arg1 fromDisk:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;
- (void)removeImageForKey:(id)arg1 fromDisk:(_Bool)arg2;
- (void)removeImageForKey:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)removeImageForKey:(id)arg1;
- (void)storeImage:(id)arg1 recalculateFromImage:(_Bool)arg2 imageData:(id)arg3 forKey:(id)arg4 toDisk:(_Bool)arg5;
- (void)storeImage:(id)arg1 forKey:(id)arg2 toDisk:(_Bool)arg3;
- (void)storeImage:(id)arg1 forKey:(id)arg2;
- (id)scaledImageForKey:(id)arg1 image:(id)arg2;
- (id)diskImageForKey:(id)arg1;
- (id)diskImageDataBySearchingAllPathsForKey:(id)arg1;
- (id)imageFromMemoryCacheForKey:(id)arg1;
- (id)imageFromDiskCacheForKey:(id)arg1;
- (id)diskCachePathForKey:(id)arg1;
- (_Bool)diskImageExistsWithKey:(id)arg1;
- (id)queryDiskCacheForKey:(id)arg1 done:(CDUnknownBlockType)arg2;
- (unsigned long long)costForImage:(id)arg1;
- (void)dealloc;
- (id)init;
- (id)initWithNamespace:(id)arg1;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *ioQueue; // @synthesize ioQueue=_ioQueue;
- (void)setMemoryCacheWithName:(id)arg1;

@end

