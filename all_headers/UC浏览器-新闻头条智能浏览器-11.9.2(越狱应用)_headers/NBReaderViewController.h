//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <UIKit/UIViewController.h>

#import "CustomFontEducationControllerDelegate-Protocol.h"
#import "NBAutomateTurningToastDelegate-Protocol.h"
#import "NBBookServiceManagerObserver-Protocol.h"
#import "NBCacheToastViewDataSource-Protocol.h"
#import "NBCacheToastViewDelegate-Protocol.h"
#import "NBChapterViewControllerDataSource-Protocol.h"
#import "NBChapterViewControllerDelegate-Protocol.h"
#import "NBDownloadManagerObserver-Protocol.h"
#import "NBFullPaymentViewControllerDelegate-Protocol.h"
#import "NBGeneralBookDataModelObserver-Protocol.h"
#import "NBMenuControllerDelegate-Protocol.h"
#import "NBMoreSettingViewControllerDelegate-Protocol.h"
#import "NBPABatchPaymentViewControllerDelegate-Protocol.h"
#import "NBPABeanTicketAlertViewDelegate-Protocol.h"
#import "NBPACacheAlertViewDelegate-Protocol.h"
#import "NBPAPaymentManagerObserverProtocol-Protocol.h"
#import "NBReaderSourceViewDelegate-Protocol.h"
#import "NBSourceControllerDelegate-Protocol.h"
#import "ThemeManagerObserver-Protocol.h"
#import "UCCustomFontViewControllerDelegate-Protocol.h"
#import "UCStatusbarControllerProtocol-Protocol.h"
#import "UCViewManagerObserver-Protocol.h"
#import "UIActionSheetDelegate-Protocol.h"
#import "UIAlertViewDelegate-Protocol.h"

@class NBAutomateTurningToast, NBBookItem, NBCacheToastView, NBChapterSourceInvalidCheckController, NBChapterViewController, NBContainerController, NBFullPaymentViewController, NBMoreSettingViewController, NBMultiWinReaderItem, NBPABatchPaymentViewController, NBPABeanTicketAlertView, NBPACacheAlertView, NBPAGrantedBeanTicketDataItem, NBReaderBookDataProvider, NBReaderMenuController, NBReaderSourceController, NBReaderSourceView, NBShareController, NBTurningPageEducationView, NSDate, NSString, UCCustomFontViewController, UIActionSheet, UIView, WaitLabel;
@protocol NBCatalogueProviderProtocol, NBReaderViewControllerDelegate;

@interface NBReaderViewController : UIViewController <NBPAPaymentManagerObserverProtocol, NBPABatchPaymentViewControllerDelegate, NBBookServiceManagerObserver, NBPABeanTicketAlertViewDelegate, NBFullPaymentViewControllerDelegate, NBDownloadManagerObserver, NBCacheToastViewDataSource, NBCacheToastViewDelegate, NBPACacheAlertViewDelegate, NBChapterViewControllerDelegate, NBSourceControllerDelegate, NBChapterViewControllerDataSource, UIAlertViewDelegate, NBGeneralBookDataModelObserver, NBMenuControllerDelegate, UIActionSheetDelegate, UCViewManagerObserver, NBMoreSettingViewControllerDelegate, UCCustomFontViewControllerDelegate, CustomFontEducationControllerDelegate, NBAutomateTurningToastDelegate, UCStatusbarControllerProtocol, ThemeManagerObserver, NBReaderSourceViewDelegate>
{
    _Bool _quitWithAnimation;
    _Bool _fromBookShelf;
    _Bool _showChapter;
    _Bool _hasPresented;
    _Bool _isCleanState;
    _Bool _shouldRefreshWebViewStatus;
    _Bool _isPresentComplete;
    _Bool _isReaderShowComplete;
    _Bool _isFirstRenderHasCache;
    _Bool _isFirstRenderSuccessful;
    _Bool _isChapterViewVisible;
    _Bool _hiddenStatusBar;
    _Bool _isLimitFreeTipShow;
    _Bool _isStatusBarRegisted;
    int _winTag;
    NBBookItem *_bookItem;
    NBPABatchPaymentViewController *_batchPaymentViewController;
    NBFullPaymentViewController *_fullPaymentViewController;
    NBPAGrantedBeanTicketDataItem *_activityPresentTickets;
    NBPABeanTicketAlertView *_alertView;
    NBCacheToastView *_cacheToastView;
    NBPACacheAlertView *_cacheAlertView;
    NBContainerController *_txtContentViewController;
    NBReaderBookDataProvider *_bookDataProviderController;
    NBReaderMenuController *_menuController;
    NBMultiWinReaderItem *_multiWinReaderItem;
    long long _firstPaiedChapterIndex;
    id <NBReaderViewControllerDelegate> _delegate;
    NBChapterViewController *_chapterViewController;
    NSDate *_startTimeNBReaded;
    NSDate *_firstStartupTimestamp;
    unsigned long long _changeChapterCount;
    unsigned long long _switchSourceCount;
    NBChapterSourceInvalidCheckController *_sourceInvalidCheckController;
    NBReaderSourceController *_readerVCSourceController;
    NBMoreSettingViewController *_moreSettingController;
    UCCustomFontViewController *_customFontViewController;
    UIView *_chapterTempView;
    NSString *_targetUrlForOpen;
    NBAutomateTurningToast *_toastView;
    UIActionSheet *_actionSheet;
    id <NBCatalogueProviderProtocol> _catalogueProvider;
    WaitLabel *_waitLabel;
    NBShareController *_shareController;
    NBReaderSourceView *_transparentSourceView;
    CDUnknownBlockType _dismissCompletion;
    NBTurningPageEducationView *_turningPageEducationView;
}

+ (_Bool)isLiving;
+ (id)readerViewControllerWithBookItem:(id)arg1;
@property(retain, nonatomic) NBTurningPageEducationView *turningPageEducationView; // @synthesize turningPageEducationView=_turningPageEducationView;
@property(copy, nonatomic) CDUnknownBlockType dismissCompletion; // @synthesize dismissCompletion=_dismissCompletion;
@property(retain, nonatomic) NBReaderSourceView *transparentSourceView; // @synthesize transparentSourceView=_transparentSourceView;
@property(retain, nonatomic) NBShareController *shareController; // @synthesize shareController=_shareController;
@property(retain, nonatomic) WaitLabel *waitLabel; // @synthesize waitLabel=_waitLabel;
@property(retain, nonatomic) id <NBCatalogueProviderProtocol> catalogueProvider; // @synthesize catalogueProvider=_catalogueProvider;
@property(retain, nonatomic) UIActionSheet *actionSheet; // @synthesize actionSheet=_actionSheet;
@property(retain, nonatomic) NBAutomateTurningToast *toastView; // @synthesize toastView=_toastView;
@property(retain, nonatomic) NSString *targetUrlForOpen; // @synthesize targetUrlForOpen=_targetUrlForOpen;
@property(retain, nonatomic) UIView *chapterTempView; // @synthesize chapterTempView=_chapterTempView;
@property(nonatomic) _Bool isStatusBarRegisted; // @synthesize isStatusBarRegisted=_isStatusBarRegisted;
@property(nonatomic) _Bool isLimitFreeTipShow; // @synthesize isLimitFreeTipShow=_isLimitFreeTipShow;
@property(nonatomic) _Bool hiddenStatusBar; // @synthesize hiddenStatusBar=_hiddenStatusBar;
@property(nonatomic) _Bool isChapterViewVisible; // @synthesize isChapterViewVisible=_isChapterViewVisible;
@property(retain, nonatomic) UCCustomFontViewController *customFontViewController; // @synthesize customFontViewController=_customFontViewController;
@property(retain, nonatomic) NBMoreSettingViewController *moreSettingController; // @synthesize moreSettingController=_moreSettingController;
@property(retain, nonatomic) NBReaderSourceController *readerVCSourceController; // @synthesize readerVCSourceController=_readerVCSourceController;
@property(retain, nonatomic) NBChapterSourceInvalidCheckController *sourceInvalidCheckController; // @synthesize sourceInvalidCheckController=_sourceInvalidCheckController;
@property(nonatomic) unsigned long long switchSourceCount; // @synthesize switchSourceCount=_switchSourceCount;
@property(nonatomic) unsigned long long changeChapterCount; // @synthesize changeChapterCount=_changeChapterCount;
@property(nonatomic) _Bool isFirstRenderSuccessful; // @synthesize isFirstRenderSuccessful=_isFirstRenderSuccessful;
@property(nonatomic) _Bool isFirstRenderHasCache; // @synthesize isFirstRenderHasCache=_isFirstRenderHasCache;
@property(nonatomic) _Bool isReaderShowComplete; // @synthesize isReaderShowComplete=_isReaderShowComplete;
@property(nonatomic) _Bool isPresentComplete; // @synthesize isPresentComplete=_isPresentComplete;
@property(retain, nonatomic) NSDate *firstStartupTimestamp; // @synthesize firstStartupTimestamp=_firstStartupTimestamp;
@property(retain, nonatomic) NSDate *startTimeNBReaded; // @synthesize startTimeNBReaded=_startTimeNBReaded;
@property(nonatomic) _Bool shouldRefreshWebViewStatus; // @synthesize shouldRefreshWebViewStatus=_shouldRefreshWebViewStatus;
@property(retain, nonatomic) NBChapterViewController *chapterViewController; // @synthesize chapterViewController=_chapterViewController;
@property(nonatomic) id <NBReaderViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, nonatomic) _Bool isCleanState; // @synthesize isCleanState=_isCleanState;
@property(nonatomic) _Bool hasPresented; // @synthesize hasPresented=_hasPresented;
@property(nonatomic) _Bool showChapter; // @synthesize showChapter=_showChapter;
@property(nonatomic) _Bool fromBookShelf; // @synthesize fromBookShelf=_fromBookShelf;
@property(nonatomic) long long firstPaiedChapterIndex; // @synthesize firstPaiedChapterIndex=_firstPaiedChapterIndex;
@property(nonatomic) _Bool quitWithAnimation; // @synthesize quitWithAnimation=_quitWithAnimation;
@property(nonatomic) int winTag; // @synthesize winTag=_winTag;
@property(retain, nonatomic) NBMultiWinReaderItem *multiWinReaderItem; // @synthesize multiWinReaderItem=_multiWinReaderItem;
@property(retain, nonatomic) NBReaderMenuController *menuController; // @synthesize menuController=_menuController;
@property(retain, nonatomic) NBReaderBookDataProvider *bookDataProviderController; // @synthesize bookDataProviderController=_bookDataProviderController;
@property(retain, nonatomic) NBContainerController *txtContentViewController; // @synthesize txtContentViewController=_txtContentViewController;
@property(retain, nonatomic) NBPACacheAlertView *cacheAlertView; // @synthesize cacheAlertView=_cacheAlertView;
@property(retain, nonatomic) NBCacheToastView *cacheToastView; // @synthesize cacheToastView=_cacheToastView;
@property(retain, nonatomic) NBPABeanTicketAlertView *alertView; // @synthesize alertView=_alertView;
@property(retain, nonatomic) NBPAGrantedBeanTicketDataItem *activityPresentTickets; // @synthesize activityPresentTickets=_activityPresentTickets;
@property(retain, nonatomic) NBFullPaymentViewController *fullPaymentViewController; // @synthesize fullPaymentViewController=_fullPaymentViewController;
@property(retain, nonatomic) NBPABatchPaymentViewController *batchPaymentViewController; // @synthesize batchPaymentViewController=_batchPaymentViewController;
@property(retain, nonatomic) NBBookItem *bookItem; // @synthesize bookItem=_bookItem;
- (void)resetPoplayerListenerParams;
- (_Bool)canShowARNeckCarePopLayer;
- (void)showARNeckCarePopLayerIfNeeded;
- (void)willChangeToVisible:(_Bool)arg1;
- (void)willDismiss;
- (void)didPresentWithAnimate:(_Bool)arg1;
- (void)willPresentWithAnimate:(_Bool)arg1;
- (void)restore:(id)arg1;
- (void)clean;
- (void)releaseContent;
- (void)refreshCatalogue;
- (void)didClickTranscodeDeclareButton;
- (void)didClickSourceTitleButton;
- (void)comomOpenNewUrl:(id)arg1 withReasonType:(long long)arg2;
- (void)onMGAccountTokenChanged;
- (void)requireToQuitReader;
- (void)refreshTokenIfNeeded;
- (void)automateTurningEdu;
- (void)hiddenView;
- (void)innerButtonClick:(id)arg1;
- (long long)statusBarAnimation;
- (_Bool)statusbarHidden;
- (long long)statusBarStyle;
- (void)onCustomFontConfirmBtnClicked;
- (void)statisticsCustomFontUseInformation;
- (void)customFontViewControllerDismiss:(id)arg1 shouldRerenderedFont:(_Bool)arg2;
- (void)openFontDownloadView;
- (void)releaseCustomFontController;
- (void)onStatisticsReaderOpenWithBook:(id)arg1;
- (void)applicationDidEnterBackground:(id)arg1;
- (void)applicationWillBecomeActive:(id)arg1;
- (void)triggerReaderKPIStatistics;
- (void)triggerQFStatistics;
- (_Bool)readAll;
- (double)readProgress;
- (double)millisecondReadTime;
- (double)readTime;
- (void)triggerReaderWAKPIStatistics;
- (long long)currentBookItemType;
- (id)bookBid;
- (id)getValidSourceUrl;
- (void)requestValidSource;
- (void)releaseSourceInvalidCheckController;
- (void)moreSettingViewDidChangeFontName;
- (void)moreSettingViewDidChangeLineSpace:(long long)arg1;
- (void)moreSettingViewDidChangeAutoBuy:(id)arg1;
- (void)moreSettingViewWillDismiss:(id)arg1;
- (void)forceDismissCurrentView;
- (void)dismissReaderViewControllerWithCompletion:(CDUnknownBlockType)arg1;
- (void)dismissReaderAndBookShelfAnimated:(_Bool)arg1;
- (_Bool)isReadingChapterFromChapterViewController;
- (_Bool)isExistOfflineIncrUpdateFromChapterViewController;
- (int)downloadTipsStatusForBookItem:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)removeObserver;
- (void)addObserver;
- (void)reportReaderShowCompletion;
- (void)bookDataModelDidChangeBookItems:(id)arg1 forProperties:(id)arg2 trigger:(id)arg3;
- (void)resetStatusBar;
- (_Bool)tryUpdateSkinValue:(id)arg1;
- (void)willThemeChangeTo:(id)arg1;
- (void)didUpdateNovelBoxThemeKey;
- (void)onDidSkinChange;
- (void)didNovelBoxThemeChangeInAdvance;
- (void)didNovelBoxSkinChange;
- (void)didThemeChange;
- (void)deleteCurrentBookItem;
- (void)setStatusBarHidden:(_Bool)arg1 withAnimation:(long long)arg2;
- (void)dismissChapterViewControllerCompletion;
- (void)dismissChapterViewControllerAnimated:(_Bool)arg1;
- (void)performAddressBarAnimationWhenExitReaderView;
- (void)doDestoryReaderViewController;
- (void)dismissAnimaitionFinished;
- (void)dismissAnimationDefault;
- (void)destoryTxtReaderViewControllerLater;
- (void)controllerWillDestroy;
- (void)deleteFSBookItemInArray:(id)arg1;
- (void)deleteFSBookItemsIfNeeded;
- (void)destoryTxtReaderViewController;
- (void)dismissReaderViewController;
- (void)didShowPANovelCacheFreeChapterBubble;
- (void)onReaderMenuDetectedPageChanged:(id)arg1;
- (void)onReaderMenuDetectedChapterChanged:(id)arg1;
- (void)onNaivBarAndBottomBarHide;
- (void)onNaivBarAndBottomBarShow;
- (void)handleEnterBookShelf:(id)arg1;
- (void)handleOpenPageWithURL:(id)arg1;
- (void)handleBuyBtnClicked:(id)arg1;
- (void)handleAboutBtnClicked:(id)arg1;
- (void)handleChapterCorrectBtnClicked:(id)arg1;
- (void)handleShareBtnClicked:(id)arg1;
- (void)handleBookShelfBtnClicked:(id)arg1;
- (void)menuController:(id)arg1 setStatusBarHidden:(_Bool)arg2 withAnimation:(long long)arg3;
- (void)actionSheet:(id)arg1 clickedButtonAtIndex:(long long)arg2;
- (void)alertURLToBeOpen:(id)arg1;
- (void)handleOpenSourceURLInMenuController:(id)arg1;
- (void)handleMultiWinBtnClicked:(id)arg1;
- (void)handleFontSettingBtnClicked:(id)arg1;
- (void)handleMoreSettingBtnClicked:(id)arg1;
- (void)releaseMoreSettingController;
- (void)menuController:(id)arg1 openNewUrl:(id)arg2 type:(long long)arg3;
- (void)onReaderFirstShowCompletion:(_Bool)arg1 withTranscodeResult:(_Bool)arg2;
- (void)dismissReaderViewControllerInMenuController:(id)arg1;
- (void)menuController:(id)arg1 handleCatalogueButtonClicked:(id)arg2;
- (void)sourceController:(id)arg1 openURL:(id)arg2;
- (void)sourceController:(id)arg1 hideNavBarAndMenuWithAnimate:(_Bool)arg2;
- (void)sourceController:(id)arg1 showNavBarAndMenuWithAnimate:(_Bool)arg2;
- (id)getChapterInfo;
- (_Bool)chapterViewController:(id)arg1 isBuy:(id)arg2;
- (_Bool)chapterViewController:(id)arg1 isNewChapter:(id)arg2;
- (void)handleTranscodingDeclearationClickFromChpaterViewController:(id)arg1;
- (void)handleNovelSourceClickFromChapterViewController:(id)arg1 sourceUrl:(id)arg2;
- (int)getCurrentdownloadTipsStatus:(id)arg1;
- (void)chapterViewController:(id)arg1 handleClickChapterItem:(id)arg2;
- (void)handleReturnFromChapterViewController:(id)arg1;
- (void)resumeReadTimeServiceIfNeeded;
- (void)beginCheckPreferentialInfoService;
- (void)pauseReadTimeService;
- (void)beginReadTimeService;
- (void)switchToChapter:(id)arg1;
- (void)postSwitchChapterMessageForNewChapter:(id)arg1;
- (_Bool)isCurrentChapterBuyable;
- (double)getPageHeight;
- (double)getSourceViewHeight;
- (void)presentView:(id)arg1 inParentView:(id)arg2 animated:(_Bool)arg3;
- (void)delayToastForLimitTimeFree:(id)arg1;
- (void)checkTimeLimitFreeWithBookItem:(id)arg1;
- (void)captureView;
- (id)viewForCapture;
- (void)handleOpenSourceURL:(id)arg1;
- (void)alertView:(id)arg1 didDismissWithButtonIndex:(long long)arg2;
- (void)alertView:(id)arg1 clickedButtonAtIndex:(long long)arg2;
- (void)showAddBookShelfNotify;
- (void)addTransparentSourceView;
- (void)addTxtContentViewController;
- (void)dealloc;
- (void)tryShowFontEducationPage;
- (void)tryShowTurningPageEducation;
- (void)tryShowEduPage;
- (void)willAnimateRotationToInterfaceOrientation:(long long)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)initMultiWinItemWithBookItem:(id)arg1;
- (void)initCurrentSkin;
- (void)initPageTurnWay;
- (void)tryShowContentOrChapterView;
- (void)tryToQueryBookContentKey;
- (void)viewDidLoad;
- (id)initWithBookItem:(id)arg1;
- (void)unRegisterStatusBar;
- (void)registerStatusBar;
- (void)presentComplete;
- (void)onStatisticsEnterBatchPaymentViewFromPaymentView;
- (void)onStatisticsEnterBatchPaymentViewFromMenu;
- (void)beanTicketAlert:(id)arg1 dismissByPressingButtonAtIndex:(unsigned long long)arg2;
- (void)delayShowBeanTicketAlert;
- (void)bookServiceManager:(id)arg1 didFinishBeanTicketUpdateWithResult:(_Bool)arg2;
- (void)handleBatchPaymentPrereadAlertSelect:(long long)arg1;
- (void)dismissFullPaymentViewController;
- (void)dismissBatchPaymentViewController;
- (_Bool)onBatchPaymentStartForWholeBookPurchase;
- (_Bool)onBatchPaymentStartForMultiChapterPurchase;
- (void)onBatchPaymentStarted;
- (void)paymentManager:(id)arg1 finishedGetBestTicketSetWithDetailInfo:(id)arg2;
- (void)paymentManager:(id)arg1 finishedGetBeanTicketAffordBatchCountWithDetailInfo:(id)arg2;
- (void)paymentManager:(id)arg1 finishedPurchaseWithDetailInfo:(id)arg2;
- (void)paymentManager:(id)arg1 finishedGetBalanceWithDetailInfo:(id)arg2;
- (void)paymentManager:(id)arg1 finishedBatchPurchaseWithDetailInfo:(id)arg2;
- (void)paymentManager:(id)arg1 finishedGetBatchInfo:(id)arg2 withResult:(id)arg3;
- (void)batchPaymentViewController:(id)arg1 didChangeSelectedBeanTicket:(id)arg2 atChapter:(id)arg3;
- (void)batchPaymentViewControllerWillDismiss:(id)arg1;
- (void)batchPaymentViewController:(id)arg1 didPurchaseWithChapterId:(id)arg2 batchInfo:(id)arg3 andBeanTickets:(id)arg4 payType:(id)arg5;
- (void)batchPaymentViewControllerDidRecharge:(id)arg1;
- (void)fullPaymentViewController:(id)arg1 confirmToPurchaseWithBeanTickets:(id)arg2;
- (void)fullPaymentViewControllerRequetToDoRecharge:(id)arg1;
- (void)fullPaymentViewControllerWillDismiss:(id)arg1;
- (void)onPurchaseFinished;
- (void)beginRecharge;
- (_Bool)isSelfShowOnCurrentWindow;
- (_Bool)isReqeustInfosMatchesResultBookID:(id)arg1 andChapterID:(id)arg2;
- (void)updateChapterItemsPurchaseStatusInDataBase:(id)arg1;
- (id)getChapterItemsNeedToUpdateWithReplyChapters:(id)arg1 updateIsBuyState:(_Bool)arg2;
- (id)getChapterItemsWithChapterIDs:(id)arg1 fromArray:(id)arg2 beginFromIndex:(unsigned long long)arg3 updateIsBuyState:(_Bool)arg4;
- (void)releaseBatchPaymentViewController;
- (void)checkIfNeedShowBeanTicketAlert;
- (void)updateActivityPresentTickets;
- (_Bool)canPurchaseCurrentChapter;
- (void)startToGetMatchTicketInfo;
- (void)startToGetBatchInfo;
- (void)onBuyButtonClicked;
- (void)removePaymentObserverIfNeeded;
- (void)addPaymentObserverIfNeeded;
- (void)hideShadowColorForView:(id)arg1;
- (void)setShadowColorForView:(id)arg1;
- (void)cacheAlertViewDidDimiss:(id)arg1;
- (void)cacheAlertView:(id)arg1 didSelectButtonAtIndex:(long long)arg2;
- (void)downloadTaskAddedToTaskList:(id)arg1;
- (void)downloadTaskWithInfo:(id)arg1 didChangeStatus:(int)arg2 savePath:(id)arg3;
- (void)onCacheToastViewDidDismiss:(id)arg1;
- (double)downloadProgressForBookWithID:(id)arg1;
- (_Bool)isCurrentPANovelReadyToCache;
- (void)layoutCacheAlertViewIfNeeded;
- (void)layoutCacheToastViewIfNeeded;
- (struct CGRect)toastViewFrame;
- (void)createCacheToastViewIfNeeded;
- (void)onCurrentBookItemCacheRelativePropertiesChanged;
- (void)showCacheAlertView;
- (void)updateCacheUIWhenRotation;
- (_Bool)shouldShowCacheFreeChapterBubble;
- (_Bool)hasProcessingOfflineTaskForCurrentNovel;
- (_Bool)isCurrentPANovelCacheable;
- (void)tryToCacheCurrentOpenedPANovel;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

