//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

@class AGOggOpusWriter, NSDateFormatter, NSFileHandle, NSMutableData, NSString;
@protocol OS_dispatch_queue;

@interface OpusRecordingManager : NSObject
{
    NSObject<OS_dispatch_queue> *_recorder_queue;
    struct AudioStreamBasicDescription _recordingAudioFormat;
    unsigned int _bufferSize;
    struct AudioQueueLevelMeterState *_meterStateDB;
    struct OpaqueAudioQueue *_audioQueue;
    NSMutableData *_audioBuffer;
    NSMutableData *_bufferData;
    _Bool _isRunning;
    _Bool _meteringEnabled;
    _Bool _recordingStarted;
    int _recordingBitrate;
    NSString *_recordingFileName;
    CDUnknownBlockType _progress;
    CDUnknownBlockType _completion;
    CDUnknownBlockType _failure;
    double _recordingSampleRate;
    NSFileHandle *_fileHandle;
    NSDateFormatter *_dateFormatter;
    AGOggOpusWriter *_oggWriter;
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (id)sharedManager;
@property(nonatomic) _Bool recordingStarted; // @synthesize recordingStarted=_recordingStarted;
@property(nonatomic) _Bool meteringEnabled; // @synthesize meteringEnabled=_meteringEnabled;
@property(retain, nonatomic) AGOggOpusWriter *oggWriter; // @synthesize oggWriter=_oggWriter;
@property(retain, nonatomic) NSDateFormatter *dateFormatter; // @synthesize dateFormatter=_dateFormatter;
@property(retain, nonatomic) NSFileHandle *fileHandle; // @synthesize fileHandle=_fileHandle;
@property(nonatomic) int recordingBitrate; // @synthesize recordingBitrate=_recordingBitrate;
@property(nonatomic) double recordingSampleRate; // @synthesize recordingSampleRate=_recordingSampleRate;
@property(copy, nonatomic) CDUnknownBlockType failure; // @synthesize failure=_failure;
@property(copy, nonatomic) CDUnknownBlockType completion; // @synthesize completion=_completion;
@property(copy, nonatomic) CDUnknownBlockType progress; // @synthesize progress=_progress;
@property(copy, nonatomic) NSString *recordingFileName; // @synthesize recordingFileName=_recordingFileName;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)init;
- (float)averagePowerForChannel:(unsigned long long)arg1;
- (float)peakPowerForChannel:(unsigned long long)arg1;
- (void)updateMeters;
- (void)cleanup;
- (id)timestampGenerator;
- (id)returnError:(int)arg1;
- (void)processBufferData:(void *)arg1 bufferSize:(unsigned int)arg2;
- (void)handleAudioQueueOutputCallBack:(struct OpaqueAudioQueue *)arg1 buffer:(struct AudioQueueBuffer *)arg2 inStartTime:(const struct AudioTimeStamp *)arg3 inNumberPacketDescriptions:(unsigned int)arg4 inPacketDescs:(const struct AudioStreamPacketDescription *)arg5;
- (void)stopWithCompletion:(CDUnknownBlockType)arg1;
- (void)stop;
- (void)recordWithProgress:(CDUnknownBlockType)arg1 completion:(CDUnknownBlockType)arg2 failure:(CDUnknownBlockType)arg3;

@end

