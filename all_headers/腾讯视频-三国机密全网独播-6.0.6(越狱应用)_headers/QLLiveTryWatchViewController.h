//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <UIKit/UIViewController.h>

#import "QLLiveChoosePayCommonDelegate-Protocol.h"
#import "QLSeeBackDelegate-Protocol.h"

@class KKMediaPlayInfo, KKMediaRootViewController, NSString, NSTimer, QLLiveChoosePayCommonView, QLMovieIAPView, QLSImageView, QLTryWatchView, UIView;

@interface QLLiveTryWatchViewController : UIViewController <QLLiveChoosePayCommonDelegate, QLSeeBackDelegate>
{
    long long _stateCode;
    struct CGRect _WatchViewFrame;
    _Bool _isShowTryWatchView;
    _Bool _isLogin;
    long long _watchViewType;
    long long _tryWatchActionState;
    _Bool _isWatchTimeUp;
    _Bool _isStartPlay;
    _Bool _canPlay;
    _Bool _isLivePreviewWatch;
    _Bool _didGetLiveInfo;
    _Bool _hasDoSeekAction;
    _Bool _isShowingIapView;
    KKMediaRootViewController *_mainCtl;
    KKMediaPlayInfo *_mediaPlayInfo;
    long long _tryWatchState;
    NSTimer *_tryWatchTimer;
    QLTryWatchView *_tryWatchView;
    QLMovieIAPView *_liveIapView;
    QLSImageView *_mediaHeaderView;
    long long _tryWatchType;
    QLLiveChoosePayCommonView *_payCommonView;
    UIView *_maskView;
    CDUnknownBlockType _seeBackBlock;
}

@property(nonatomic) _Bool isShowingIapView; // @synthesize isShowingIapView=_isShowingIapView;
@property(nonatomic) _Bool hasDoSeekAction; // @synthesize hasDoSeekAction=_hasDoSeekAction;
@property(copy, nonatomic) CDUnknownBlockType seeBackBlock; // @synthesize seeBackBlock=_seeBackBlock;
@property(retain, nonatomic) UIView *maskView; // @synthesize maskView=_maskView;
@property(retain, nonatomic) QLLiveChoosePayCommonView *payCommonView; // @synthesize payCommonView=_payCommonView;
@property(nonatomic) long long tryWatchType; // @synthesize tryWatchType=_tryWatchType;
@property(retain, nonatomic) QLSImageView *mediaHeaderView; // @synthesize mediaHeaderView=_mediaHeaderView;
@property(retain, nonatomic) QLMovieIAPView *liveIapView; // @synthesize liveIapView=_liveIapView;
@property(retain, nonatomic) QLTryWatchView *tryWatchView; // @synthesize tryWatchView=_tryWatchView;
@property(retain, nonatomic) NSTimer *tryWatchTimer; // @synthesize tryWatchTimer=_tryWatchTimer;
@property(nonatomic) _Bool didGetLiveInfo; // @synthesize didGetLiveInfo=_didGetLiveInfo;
@property(nonatomic) _Bool isLivePreviewWatch; // @synthesize isLivePreviewWatch=_isLivePreviewWatch;
@property(nonatomic) long long tryWatchState; // @synthesize tryWatchState=_tryWatchState;
@property(retain) KKMediaPlayInfo *mediaPlayInfo; // @synthesize mediaPlayInfo=_mediaPlayInfo;
@property(nonatomic) _Bool canPlay; // @synthesize canPlay=_canPlay;
@property(nonatomic) _Bool isStartPlay; // @synthesize isStartPlay=_isStartPlay;
@property(nonatomic) _Bool isWatchTimeUp; // @synthesize isWatchTimeUp=_isWatchTimeUp;
@property(nonatomic) __weak KKMediaRootViewController *mainCtl; // @synthesize mainCtl=_mainCtl;
- (void).cxx_destruct;
- (void)clickPayButton:(id)arg1;
- (void)singlePayVideo:(id)arg1;
- (_Bool)isHidenButtonWhilePriceIsIllegal;
- (void)openHollyWoodView;
- (_Bool)pidCanBePlay;
- (_Bool)liveCanBePlay;
- (_Bool)isVideoInfoPay;
- (void)controlPlayOrPause:(_Bool)arg1;
- (void)setKKPlayer:(id)arg1 liveTryWatchState:(long long)arg2;
- (void)refreshLivePlay;
- (void)iapViewActionWithButton:(id)arg1;
- (void)resetLiveTryWatchFrame;
- (void)configRightButtonTagWithPaystate:(long long)arg1;
- (void)configLeftButtonTagWithWatchType:(long long)arg1;
- (void)changeFrame;
- (void)hidenIapViewWhilePriceIllegal;
- (void)updatePayBill;
- (void)flushPayBillView;
- (_Bool)isShowIapView;
- (void)iapViewActionLiveContinuePlay;
- (void)configLiveWatcthBackIAPView;
- (void)showPreviewType:(long long)arg1;
- (id)getPlayerTipsWithType:(long long)arg1;
- (void)showTimeUpTipsType:(long long)arg1;
- (id)getPreviewTimeAttributedString;
- (id)attributedvideoTitle;
- (void)showStartTipsType:(long long)arg1;
- (void)showLivePreview:(struct CGRect)arg1;
- (void)checkLiveTryWatchTimeUp:(id)arg1;
- (void)createLiveTryWatchTimer;
- (void)getLiveState:(id)arg1 withGetProVInfo:(unsigned long long)arg2;
- (void)dealloc;
- (_Bool)isShowHeaderWatchView;
- (void)didReceiveMemoryWarning;
- (void)clearResources;
- (void)clearTryWatchView;
- (void)showTips;
- (void)showTipsWithGetProVInfo:(unsigned long long)arg1;
- (void)onVideoInfoPrepared:(id)arg1 withGetProVInfo:(unsigned long long)arg2;
- (long long)getLivePayState;
- (void)payForCurrentMedia;
- (void)setPlayerCanPlay:(_Bool)arg1;
- (void)clickButton:(id)arg1;
- (void)clickTryWatchButton:(id)arg1;
- (void)requestPlayAdrressWithGetPreviewInfo:(_Bool)arg1;
- (void)reFreshViewWithPaidForCurrentVideo;
- (void)replayAfterPaybillsUpdated;
- (void)vipStateChange;
- (_Bool)isShowingIAPView;
- (void)setTryWatchActionState:(long long)arg1;
- (void)replay;
- (void)refreshViewWithlogin;
- (void)startGetProVInfoTimerNotification:(id)arg1;
- (void)loginStateChange:(id)arg1;
- (void)showNormalView;
- (void)showTryWatchView:(unsigned long long)arg1 withCurrentType:(long long)arg2;
- (void)showTryWatchView;
- (void)showContinueTryWatchView;
- (void)showShoppingView;
- (void)showLoginQQView;
- (void)setKKPlayer:(id)arg1 tryWatchState:(long long)arg2;
- (void)showViewWithCurrentType:(long long)arg1;
- (void)showTipsWithStateCode:(long long)arg1 withGetProVInfo:(unsigned long long)arg2;
- (id)playMediaInfo;
- (void)addMediaTryWatchView:(struct CGRect)arg1 withCurrentType:(long long)arg2;
- (void)checkTryWatchTimeUp:(id)arg1;
- (void)createTryWatchTimer;
- (void)destroyTryWatchTimer;
- (void)tryWatchTimeUpNotification;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (void)loginInfoDidUpdate;
- (_Bool)liveCanBeSeeBack;
- (void)onStartLiveChangeToSeeBack:(id)arg1 withBlock:(CDUnknownBlockType)arg2;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

