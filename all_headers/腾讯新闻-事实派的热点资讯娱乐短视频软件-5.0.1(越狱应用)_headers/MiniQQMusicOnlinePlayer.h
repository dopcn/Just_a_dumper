//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "MiniQQMusicBasicPlayer.h"

@class NSDictionary, NSNotificationCenter, NSThread, NSTimer, NSURL;

@interface MiniQQMusicOnlinePlayer : MiniQQMusicBasicPlayer
{
    NSURL *url;
    struct OpaqueAudioQueue *audioQueue;
    struct OpaqueAudioFileStreamID *audioFileStream;
    struct AudioStreamBasicDescription asbd;
    NSThread *internalThread;
    struct AudioQueueBuffer *audioQueueBuffer[16];
    struct AudioStreamPacketDescription packetDescs[512];
    unsigned int fillBufferIndex;
    unsigned int packetBufferSize;
    unsigned int bytesFilled;
    unsigned int packetsFilled;
    _Bool inuse[16];
    long long buffersUsed;
    NSDictionary *httpHeaders;
    int state;
    int stopReason;
    int errorCode;
    int err;
    _Bool discontinuous;
    struct _opaque_pthread_mutex_t queueBuffersMutex;
    struct _opaque_pthread_cond_t queueBufferReadyCondition;
    struct __CFReadStream *stream;
    NSNotificationCenter *notificationCenter;
    unsigned int bitRate;
    long long dataOffset;
    long long fileLength;
    long long seekByteOffset;
    unsigned long long audioDataByteCount;
    unsigned long long processedPacketsCount;
    unsigned long long processedPacketsSizeTotal;
    double seekTime;
    _Bool seekWasRequested;
    _Bool isNotAllowSeek;
    double requestedSeekTime;
    double sampleRate;
    double packetDuration;
    double lastProgress;
    struct OpaqueAudioFileID *audioFile;
    long long packetOffset;
    unsigned long long packetIndex;
    unsigned long long packetIndexBySeek;
    unsigned long long packetsCount;
    unsigned int numPacketsToRead;
    _Bool repeat;
    _Bool trackClosed;
    _Bool trackEnded;
    _Bool isFileStream;
    double fileDuration;
    int iTryHttpCount;
    NSTimer *iHttpTimer;
    _Bool isInitialized;
    unsigned int totalbytes;
    long long endByteOffset;
    _Bool restartWasRequested;
}

+ (unsigned int)hintForFileExtension:(id)arg1;
@property(nonatomic) int state; // @synthesize state;
@property(readonly) NSDictionary *httpHeaders; // @synthesize httpHeaders;
@property unsigned int bitRate; // @synthesize bitRate;
@property int errorCode; // @synthesize errorCode;
@property int stopReason; // @synthesize stopReason;
- (void)dealloc;
- (void)setVolume:(float)arg1;
- (void)playbackStateChanged:(id)arg1;
- (unsigned int)readPacketsIntoBuffer:(struct AudioQueueBuffer *)arg1;
- (void)postTrackFinishedPlayingNotification:(id)arg1;
- (void)callbackForBuffer:(struct AudioQueueBuffer *)arg1;
- (void)playBackIsRunningStateChanged;
- (void)handleInterruptionChangeToState:(unsigned int)arg1;
- (void)handlePropertyChangeForQueue:(struct OpaqueAudioQueue *)arg1 propertyID:(unsigned int)arg2;
- (void)handleBufferCompleteForQueue:(struct OpaqueAudioQueue *)arg1 buffer:(struct AudioQueueBuffer *)arg2;
- (void)handleAudioPackets:(const void *)arg1 numberBytes:(unsigned int)arg2 numberPackets:(unsigned int)arg3 packetDescriptions:(struct AudioStreamPacketDescription *)arg4;
- (void)handlePropertyChangeForFileStream:(struct OpaqueAudioFileStreamID *)arg1 fileStreamPropertyID:(unsigned int)arg2 ioFlags:(unsigned int *)arg3;
- (void)createQueue;
- (void)enqueueBuffer;
- (void)handleReadFromStream:(struct __CFReadStream *)arg1 eventType:(unsigned long long)arg2;
- (void)onStop;
- (void)onClose;
- (void)onPlay;
- (_Bool)onPrepare;
- (void)onResume;
- (void)onPause;
- (double)getDuration;
@property(readonly) double duration;
@property(readonly) double progress;
- (double)getCurrTime;
- (double)seek:(double)arg1;
- (_Bool)fileSeekToTime:(double)arg1;
- (void)internalSeekToTime:(double)arg1;
- (void)onStart;
- (void)internalRestartReadStream;
- (_Bool)reopenReadStream;
- (void)startInternal;
- (void)httpTimer:(id)arg1;
- (_Bool)openReadStream;
- (char *)FindHost:(char *)arg1:(int *)arg2;
- (void)mainThreadStateNotification;
- (void)failWithErrorCode:(int)arg1;
- (_Bool)runLoopShouldExit;
- (_Bool)isFinishing;
- (double)calculatedBitRate;
- (id)initWithLocalSongFile:(id)arg1;
- (long long)getState;
- (void)completeInitWithURL:(id)arg1;
- (void)completeInitWithFilePath:(id)arg1;
- (id)initWithUrl:(id)arg1;

@end

