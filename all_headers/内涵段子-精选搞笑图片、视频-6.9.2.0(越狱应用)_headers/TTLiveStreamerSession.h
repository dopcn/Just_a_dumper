//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

@class NSArray, NSString, NSTimer, TTLiveStreamerQoSInfo, UIView, VCPreviewView;
@protocol OS_dispatch_queue, TTLiveStreamerSessionDelegate;

@interface TTLiveStreamerSession : NSObject
{
    VCPreviewView *_previewView;
    struct shared_ptr<videocore::simpleApi::PixelBufferOutput> m_pbOutput;
    struct shared_ptr<videocore::iOS::TTAudioSource> m_mixAudioSource;
    struct shared_ptr<videocore::iOS::MicSource> m_micSource;
    struct shared_ptr<videocore::iOS::TTVideoSource> m_videoSource;
    struct shared_ptr<videocore::Apple::PixelBufferSource> m_logo_pixelBufferSource;
    struct shared_ptr<videocore::AspectTransform> m_logo_pbAspect;
    struct shared_ptr<videocore::PositionTransform> m_logo_pbPosition;
    struct shared_ptr<videocore::Apple::PixelBufferSource> m_title_pixelBufferSource;
    struct shared_ptr<videocore::AspectTransform> m_title_pbAspect;
    struct shared_ptr<videocore::PositionTransform> m_title_pbPosition;
    struct shared_ptr<videocore::Split> m_videoSplit;
    struct shared_ptr<videocore::AspectTransform> m_aspectTransform;
    int m_aspectMode;
    struct shared_ptr<videocore::IAudioMixer> m_audioMixer;
    struct shared_ptr<videocore::IVideoMixer> m_videoMixer;
    struct shared_ptr<videocore::ITransform> m_h264Encoder;
    struct shared_ptr<videocore::ITransform> m_aacEncoder;
    struct shared_ptr<videocore::ITransform> m_h264Packetizer;
    struct shared_ptr<videocore::ITransform> m_aacPacketizer;
    struct shared_ptr<videocore::IOutputSession> m_outputSession;
    struct time_point<std::__1::chrono::steady_clock, std::__1::chrono::duration<long long, std::__1::ratio<1, 1000000000>>> m_epoch;
    struct time_point<std::__1::chrono::steady_clock, std::__1::chrono::duration<long long, std::__1::ratio<1, 1000000000>>> m_nextMixTime;
    struct time_point<std::__1::chrono::steady_clock, std::__1::chrono::duration<long long, std::__1::ratio<1, 1000000000>>> currentTime;
    NSObject<OS_dispatch_queue> *_graphManagementQueue;
    struct CGSize _videoSize;
    int _bitrate;
    int _fps;
    int _audioChannelCount;
    float _audioSampleRate;
    float _micGain;
    _Bool _frontMirrored;
    long long _aspectMode;
    long long _rtmpSessionState;
    _Bool _orientationLocked;
    unsigned long long _audioSourceType;
    _Bool _hasSetupGraph;
    _Bool _useCustomizedSEI;
    _Bool _debugMode;
    _Bool _autoAppleEstimateBitrate;
    _Bool _autoAppleReducesLatency;
    _Bool _reconnectSupported;
    _Bool _shouldEnableLogReport;
    _Bool _shouldEnableEndLogReport;
    _Bool _retryConnecting;
    int _videoFPS;
    int _videoMinFPS;
    int _videoInitBitrate;
    int _videoMaxBitrate;
    int _videoMinBitrate;
    int _reportTimeInterval;
    int _videoBitrate;
    id <TTLiveStreamerSessionDelegate> _delegate;
    CDUnknownBlockType _debugInfoBlock;
    CDUnknownBlockType _logBlock;
    CDUnknownBlockType _outputCallback;
    TTLiveStreamerQoSInfo *_qosInfo;
    NSTimer *_statisticsTimer;
    NSString *_statLog;
    NSArray *_errorCodes;
    unsigned long long _retryCount;
    long long _contentType;
    long long _timeTickCnt;
}

+ (id)getSdkVersion;
@property long long timeTickCnt; // @synthesize timeTickCnt=_timeTickCnt;
@property(nonatomic) long long contentType; // @synthesize contentType=_contentType;
@property(nonatomic) _Bool retryConnecting; // @synthesize retryConnecting=_retryConnecting;
@property(nonatomic) unsigned long long retryCount; // @synthesize retryCount=_retryCount;
@property(copy, nonatomic) NSArray *errorCodes; // @synthesize errorCodes=_errorCodes;
@property(retain, nonatomic) NSString *statLog; // @synthesize statLog=_statLog;
@property(retain, nonatomic) NSTimer *statisticsTimer; // @synthesize statisticsTimer=_statisticsTimer;
@property(nonatomic) int videoBitrate; // @synthesize videoBitrate=_videoBitrate;
@property(retain, nonatomic) TTLiveStreamerQoSInfo *qosInfo; // @synthesize qosInfo=_qosInfo;
@property(copy, nonatomic) CDUnknownBlockType outputCallback; // @synthesize outputCallback=_outputCallback;
@property(copy, nonatomic) CDUnknownBlockType logBlock; // @synthesize logBlock=_logBlock;
@property(nonatomic) _Bool shouldEnableEndLogReport; // @synthesize shouldEnableEndLogReport=_shouldEnableEndLogReport;
@property(nonatomic) int reportTimeInterval; // @synthesize reportTimeInterval=_reportTimeInterval;
@property(nonatomic) _Bool shouldEnableLogReport; // @synthesize shouldEnableLogReport=_shouldEnableLogReport;
@property(nonatomic) _Bool reconnectSupported; // @synthesize reconnectSupported=_reconnectSupported;
@property(nonatomic) _Bool autoAppleReducesLatency; // @synthesize autoAppleReducesLatency=_autoAppleReducesLatency;
@property(nonatomic) _Bool autoAppleEstimateBitrate; // @synthesize autoAppleEstimateBitrate=_autoAppleEstimateBitrate;
@property(nonatomic) int videoMinBitrate; // @synthesize videoMinBitrate=_videoMinBitrate;
@property(nonatomic) int videoMaxBitrate; // @synthesize videoMaxBitrate=_videoMaxBitrate;
@property(nonatomic) int videoInitBitrate; // @synthesize videoInitBitrate=_videoInitBitrate;
@property(nonatomic) int videoMinFPS; // @synthesize videoMinFPS=_videoMinFPS;
@property(nonatomic) int videoFPS; // @synthesize videoFPS=_videoFPS;
@property(copy, nonatomic) CDUnknownBlockType debugInfoBlock; // @synthesize debugInfoBlock=_debugInfoBlock;
@property(nonatomic) _Bool debugMode; // @synthesize debugMode=_debugMode;
@property(nonatomic) id <TTLiveStreamerSessionDelegate> delegate; // @synthesize delegate=_delegate;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)reDroppFrames;
- (void)checkNewQoSInfo;
- (id)QosInfo;
- (long long)currentVideoBitrate;
- (long long)totalUploadedKByte;
- (long long)uploadedKByte;
- (void)debugLog:(id)arg1;
- (void)setErrorCodes:(id)arg1 withRetryCount:(unsigned long long)arg2;
- (id)statusLogForEndLive;
- (void)reportStreamerLogDataWhenStatusChanged:(id)arg1 withError:(int)arg2;
- (void)reportStreamerLogData;
- (void)updateStat:(id)arg1;
- (void)stopStatisticsTimer;
- (void)startStatisticsTimer;
- (void)addVideoBufferSource:(struct __CVBuffer *)arg1;
- (void)addAudioBufferSource:(char *)arg1 size:(unsigned long long)arg2 frames:(int)arg3;
- (void)removePixelBufferSourceWithType:(long long)arg1;
- (void)addPixelBufferSource:(id)arg1 withRect:(struct CGRect)arg2 withType:(long long)arg3;
- (void)addEncodersAndPacketizers;
- (void)removeEncodersAndPacketizers;
- (void)pauseOutput;
- (void)resumeOutput;
- (void)setupGraph;
- (void)setDefaultFilter;
- (void)mixPaused:(_Bool)arg1;
- (void)endRtmpSession;
- (void)stop;
- (void)startSessionInternal:(id)arg1 streamKey:(id)arg2;
- (void)startRtmpSessionWithURL:(id)arg1;
- (void)dealloc;
- (void)setupGraphIfNeeded;
- (void)initInternalWithConfig:(id)arg1 outputCallback:(CDUnknownBlockType)arg2;
- (id)initWithConfig:(id)arg1 outputCallBack:(CDUnknownBlockType)arg2;
@property(readonly, nonatomic) UIView *previewView; // @dynamic previewView;
@property(nonatomic) float micGain; // @dynamic micGain;
@property(nonatomic) float audioSampleRate; // @dynamic audioSampleRate;
@property(nonatomic) int audioChannelCount; // @dynamic audioChannelCount;
@property(nonatomic) long long rtmpSessionState; // @dynamic rtmpSessionState;
- (id)descriptionOfSessionState:(long long)arg1;
- (void)setRtmpSessionState:(long long)arg1 withError:(int)arg2;
@property(nonatomic) long long aspectMode; // @dynamic aspectMode;
- (_Bool)frontMirrored;
- (void)setFps:(int)arg1;
- (int)fps;
- (void)setBitrate:(int)arg1;
- (int)bitrate;
@property(nonatomic) struct CGSize videoSize; // @dynamic videoSize;
- (void)resetOutputSetting;

@end

