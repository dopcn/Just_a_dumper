//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "CLLocationManagerDelegate-Protocol.h"
#import "SAKAnalyticsSessionDelegate-Protocol.h"

@class CLLocation, CLLocationManager, NSDate, NSMutableArray, NSString, NSTimer, SAKAnalyticsBaseHeader, SAKAnalyticsHeader, SAKAnalyticsSession;

@interface SAKAnalytics : NSObject <CLLocationManagerDelegate, SAKAnalyticsSessionDelegate>
{
    CLLocationManager *_locationManager;
    CLLocation *_lastLocation;
    NSTimer *_timer;
    NSMutableArray *_locationSensitiveBlocks;
    NSDate *_startDate;
    SAKAnalyticsSession *_session;
    _Bool _crashReportingEnabled;
    _Bool _started;
    SAKAnalyticsBaseHeader *_baseHeader;
    NSString *_defaultLaunchChannel;
    NSString *_FlurryID;
    NSString *_lastPageTrack;
    SAKAnalyticsHeader *_header;
    long long _eventSeq;
    unsigned long long _backgroundTask;
}

+ (void)configReportExceptionMonitorBlock:(CDUnknownBlockType)arg1;
+ (void)enableLocationAutoUpdate:(_Bool)arg1;
+ (void)setDelegate:(id)arg1;
+ (id)sharedAnalytics;
+ (void)setLogFilePath:(id)arg1;
+ (void)setLogEnabled:(_Bool)arg1;
+ (void)logLaunchInfo:(id)arg1;
+ (void)logDNSPoisioning:(id)arg1 DNS:(id)arg2 realDNS:(id)arg3;
+ (void)logError:(id)arg1;
+ (void)logNetworkState:(id)arg1;
+ (void)trackTransactionWithOrderId:(id)arg1 dealId:(id)arg2 orderType:(id)arg3 count:(int)arg4 singlePrice:(id)arg5 deliveryFee:(float)arg6;
+ (void)trackPayOrder:(id)arg1 deal:(id)arg2 price:(id)arg3 bizType:(id)arg4;
+ (void)trackCreateOrder:(id)arg1 deal:(id)arg2 bizType:(id)arg3;
+ (void)trackStrategyWithDealID:(id)arg1 strategy:(id)arg2;
+ (void)trackSetting:(id)arg1;
+ (void)trackCityID:(id)arg1 name:(id)arg2;
+ (void)trackPushLaunchWithBase64String:(id)arg1;
+ (void)trackPageRoot:(id)arg1 name:(id)arg2 content:(id)arg3 type:(id)arg4;
+ (void)trackWitness:(id)arg1 content:(id)arg2;
+ (void)trackPage:(id)arg1;
+ (void)trackEvent:(id)arg1 action:(id)arg2 label:(id)arg3 value:(id)arg4 identifier:(id)arg5;
+ (void)trackEvent:(id)arg1 action:(id)arg2 label:(id)arg3 value:(id)arg4;
+ (void)trackMeituanPageRoot:(id)arg1 name:(id)arg2 content:(id)arg3 type:(id)arg4;
+ (void)trackUserLocation:(id)arg1 location:(id)arg2;
+ (void)trackUserRegister:(id)arg1;
+ (void)trackUserPush:(id)arg1;
+ (void)trackUserLogin:(id)arg1;
+ (void)logUpdateUUID:(id)arg1 oldUUID:(id)arg2 completion:(CDUnknownBlockType)arg3;
+ (void)wm_trackEvent:(id)arg1 action:(id)arg2 label:(id)arg3 dictValue:(id)arg4;
@property(nonatomic) unsigned long long backgroundTask; // @synthesize backgroundTask=_backgroundTask;
@property long long eventSeq; // @synthesize eventSeq=_eventSeq;
@property(retain) SAKAnalyticsHeader *header; // @synthesize header=_header;
@property _Bool started; // @synthesize started=_started;
@property(copy) NSString *lastPageTrack; // @synthesize lastPageTrack=_lastPageTrack;
@property(nonatomic) _Bool crashReportingEnabled; // @synthesize crashReportingEnabled=_crashReportingEnabled;
@property(copy, nonatomic) NSString *FlurryID; // @synthesize FlurryID=_FlurryID;
@property(retain, nonatomic) NSString *defaultLaunchChannel; // @synthesize defaultLaunchChannel=_defaultLaunchChannel;
- (void).cxx_destruct;
- (void)applicationWillTerminate;
- (void)applicationWillEnterForeground;
- (void)applicationDidEnterBackground;
- (void)applicationWillResignActive;
- (void)applicationDidBecomeActive;
- (void)startSAKAnalytics;
- (void)uploadAnalyticsPackage:(id)arg1 events:(id)arg2;
- (void)uploadHistoryAnalytics;
- (void)dispatch;
- (void)cleanHistoryAnalytics;
- (void)startTracker;
- (void)didChangedLocation:(id)arg1;
- (void)locationManager:(id)arg1 didFailWithError:(id)arg2;
- (void)locationManager:(id)arg1 didUpdateToLocation:(id)arg2 fromLocation:(id)arg3;
- (void)locationManager:(id)arg1 didUpdateLocations:(id)arg2;
- (void)logLocationSensitiveEventType:(int)arg1 parameter:(id)arg2 timeStamp:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)logEventType:(int)arg1 parameter:(id)arg2 timeStamp:(id)arg3 eventSeq:(long long)arg4;
- (void)logEventType:(int)arg1 parameter:(id)arg2 timeStamp:(id)arg3;
- (id)eventWithHeader:(id)arg1 name:(id)arg2 parameter:(id)arg3 timeStamp:(id)arg4 eventSeq:(long long)arg5;
- (void)logEventHeader:(id)arg1 name:(id)arg2 parameter:(id)arg3 timeStamp:(id)arg4 eventSeq:(long long)arg5;
- (void)logEvent:(id)arg1 parameter:(id)arg2 timeStamp:(id)arg3 eventSeq:(long long)arg4;
- (void)logEvent:(id)arg1 JSONDictionaryParameter:(id)arg2 timeStamp:(id)arg3;
- (void)logEvent:(id)arg1 parameter:(id)arg2 timeStamp:(id)arg3;
- (long long)nextEventSequence;
- (void)waitStartingWithRetryNumber:(unsigned long long)arg1 block:(CDUnknownBlockType)arg2;
- (void)updateCoreDataHeader;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
@property(retain) SAKAnalyticsBaseHeader *baseHeader; // @synthesize baseHeader=_baseHeader;
- (void)session:(id)arg1 expiredID:(id)arg2;
@property(retain, nonatomic) NSString *pushID;
- (void)showAlertView;
- (void)showPLAlertView;
- (id)sessionID;
@property(readonly, nonatomic) NSString *launchChannel;
- (id)init;
- (void)dealloc;
- (_Bool)checkCrashContinousInPeriod:(unsigned long long)arg1 crashCount:(unsigned long long)arg2;
- (void)resetAllCrashTimeStamps;
- (void)resetCrashCount;
- (int)crashCount;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

