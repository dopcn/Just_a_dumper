//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "KTVBaseViewController.h"

#import "KTVAudioFilterSelectViewDelegate-Protocol.h"
#import "KTVRecordVolumeViewDelegate-Protocol.h"
#import "RealTimeMixRecordControllerDelegate-Protocol.h"

@class KTVAudioFilterSelectView, KTVDuet, KTVElectricalWaveView, KTVLyricsView, KTVRecordCountdownView, KTVRecordStatusDurationView, KTVRecordVolumeView, KTVSong, NSString, NSTimer, RealTimeMixRecordController, TKEvent, TKState, TKStateMachine, UIButton, UILabel;

@interface KTVSimpleRecordViewController : KTVBaseViewController <KTVRecordVolumeViewDelegate, KTVAudioFilterSelectViewDelegate, RealTimeMixRecordControllerDelegate>
{
    _Bool _isRerecordCountingDown;
    _Bool _localShouldSingOriginalSong;
    _Bool _shouldNotRestartWhenViewShowed;
    _Bool _shouldRestartWhenPopFromCompleteVC;
    _Bool _isUserComplete;
    _Bool _bFirstTimeEnter;
    _Bool _isCheckEarphoneAlertShowing;
    int _type;
    KTVSong *_song;
    KTVDuet *_duet;
    unsigned long long _mode;
    UILabel *_songNameLabel;
    UIButton *_audiofilterButton;
    UIButton *_volumeButton;
    UIButton *_closeButton;
    KTVRecordStatusDurationView *_durationView;
    UIButton *_completeButton;
    UIButton *_reportButton;
    KTVAudioFilterSelectView *_audioFilterSelectView;
    KTVRecordVolumeView *_volumeView;
    KTVLyricsView *_lyricsView;
    KTVElectricalWaveView *_humanVoiceWaveView;
    TKStateMachine *_stateMachine;
    TKState *_recordingState;
    TKState *_prepareState;
    TKState *_abortState;
    TKState *_finishState;
    TKState *_pauseState;
    TKEvent *_startRecordEvent;
    TKEvent *_pauseRecordEvent;
    TKEvent *_resumeRecordEvent;
    TKEvent *_finishRecordEvent;
    TKEvent *_abortRecordEvent;
    RealTimeMixRecordController *_recordController;
    NSTimer *_resumeCountdownTimer;
    double _lastRecordingPausedCursor;
    double _preDelta;
    KTVRecordCountdownView *_resumeCountdownView;
    long long _pausingCountDuraingOneRecording;
    NSString *_entryDescription;
}

@property(nonatomic) _Bool isCheckEarphoneAlertShowing; // @synthesize isCheckEarphoneAlertShowing=_isCheckEarphoneAlertShowing;
@property(nonatomic) _Bool bFirstTimeEnter; // @synthesize bFirstTimeEnter=_bFirstTimeEnter;
@property(nonatomic) _Bool isUserComplete; // @synthesize isUserComplete=_isUserComplete;
@property(retain, nonatomic) NSString *entryDescription; // @synthesize entryDescription=_entryDescription;
@property(nonatomic) _Bool shouldRestartWhenPopFromCompleteVC; // @synthesize shouldRestartWhenPopFromCompleteVC=_shouldRestartWhenPopFromCompleteVC;
@property(nonatomic) _Bool shouldNotRestartWhenViewShowed; // @synthesize shouldNotRestartWhenViewShowed=_shouldNotRestartWhenViewShowed;
@property(nonatomic) _Bool localShouldSingOriginalSong; // @synthesize localShouldSingOriginalSong=_localShouldSingOriginalSong;
@property(nonatomic) long long pausingCountDuraingOneRecording; // @synthesize pausingCountDuraingOneRecording=_pausingCountDuraingOneRecording;
@property(retain, nonatomic) KTVRecordCountdownView *resumeCountdownView; // @synthesize resumeCountdownView=_resumeCountdownView;
@property(nonatomic) _Bool isRerecordCountingDown; // @synthesize isRerecordCountingDown=_isRerecordCountingDown;
@property(nonatomic) double preDelta; // @synthesize preDelta=_preDelta;
@property(nonatomic) double lastRecordingPausedCursor; // @synthesize lastRecordingPausedCursor=_lastRecordingPausedCursor;
@property(retain, nonatomic) NSTimer *resumeCountdownTimer; // @synthesize resumeCountdownTimer=_resumeCountdownTimer;
@property(retain, nonatomic) RealTimeMixRecordController *recordController; // @synthesize recordController=_recordController;
@property(retain, nonatomic) TKEvent *abortRecordEvent; // @synthesize abortRecordEvent=_abortRecordEvent;
@property(retain, nonatomic) TKEvent *finishRecordEvent; // @synthesize finishRecordEvent=_finishRecordEvent;
@property(retain, nonatomic) TKEvent *resumeRecordEvent; // @synthesize resumeRecordEvent=_resumeRecordEvent;
@property(retain, nonatomic) TKEvent *pauseRecordEvent; // @synthesize pauseRecordEvent=_pauseRecordEvent;
@property(retain, nonatomic) TKEvent *startRecordEvent; // @synthesize startRecordEvent=_startRecordEvent;
@property(retain, nonatomic) TKState *pauseState; // @synthesize pauseState=_pauseState;
@property(retain, nonatomic) TKState *finishState; // @synthesize finishState=_finishState;
@property(retain, nonatomic) TKState *abortState; // @synthesize abortState=_abortState;
@property(retain, nonatomic) TKState *prepareState; // @synthesize prepareState=_prepareState;
@property(retain, nonatomic) TKState *recordingState; // @synthesize recordingState=_recordingState;
@property(retain, nonatomic) TKStateMachine *stateMachine; // @synthesize stateMachine=_stateMachine;
@property(nonatomic) __weak KTVElectricalWaveView *humanVoiceWaveView; // @synthesize humanVoiceWaveView=_humanVoiceWaveView;
@property(retain, nonatomic) KTVLyricsView *lyricsView; // @synthesize lyricsView=_lyricsView;
@property(retain, nonatomic) KTVRecordVolumeView *volumeView; // @synthesize volumeView=_volumeView;
@property(nonatomic) __weak KTVAudioFilterSelectView *audioFilterSelectView; // @synthesize audioFilterSelectView=_audioFilterSelectView;
@property(nonatomic) __weak UIButton *reportButton; // @synthesize reportButton=_reportButton;
@property(nonatomic) __weak UIButton *completeButton; // @synthesize completeButton=_completeButton;
@property(nonatomic) __weak KTVRecordStatusDurationView *durationView; // @synthesize durationView=_durationView;
@property(nonatomic) __weak UIButton *closeButton; // @synthesize closeButton=_closeButton;
@property(nonatomic) __weak UIButton *volumeButton; // @synthesize volumeButton=_volumeButton;
@property(nonatomic) __weak UIButton *audiofilterButton; // @synthesize audiofilterButton=_audiofilterButton;
@property(nonatomic) __weak UILabel *songNameLabel; // @synthesize songNameLabel=_songNameLabel;
@property(nonatomic) unsigned long long mode; // @synthesize mode=_mode;
@property(retain, nonatomic) KTVDuet *duet; // @synthesize duet=_duet;
@property(retain, nonatomic) KTVSong *song; // @synthesize song=_song;
@property(nonatomic) int type; // @synthesize type=_type;
- (void).cxx_destruct;
- (void)statsServerEventVideo:(_Bool)arg1 prefix:(id)arg2;
- (void)onNotificationAudioInterrupted:(id)arg1;
- (void)removeInterruptionObserver;
- (void)addInterruptionObserver;
- (id)commonToggleCameraButton;
- (void)popToBeforePrepareViewController;
- (void)pop;
- (void)push;
- (_Bool)isOriginalTrackReady;
- (void)stopResumeCountdownTimer;
- (double)preDeltaForIndex:(long long)arg1;
- (void)applicationDidEnterBackground:(id)arg1;
- (void)applicationWillResignActive:(id)arg1;
- (void)applicationDidBecomeActive:(id)arg1;
- (void)applicationWillEnterForeground:(id)arg1;
- (void)rtmRecord:(id)arg1 didReceiveBuffer:(struct AudioQueueBuffer *)arg2 bufferTime:(int)arg3 sampleRate:(double)arg4 humanDetect:(int)arg5;
- (void)rtmRecord:(id)arg1 didRefreshSample:(float)arg2;
- (void)rtmRecordDidStarted:(id)arg1;
- (void)rtmRecordDidFinished:(id)arg1;
- (void)audioFilterSelectView:(id)arg1 didSelectCellAtIndex:(long long)arg2;
- (void)volumeViewPitchLevelDidChanged:(long long)arg1;
- (void)volumeViewAccompanyVolumeDidChanged:(long long)arg1;
- (void)volumeViewHumanVolumeDidChanged:(long long)arg1;
- (void)startCountDownAnimationForShortPrelude;
- (double)preludeTimeInterval;
- (void)showRestartRecordAlert;
- (void)showCancelRecordAlert;
- (void)completeTouchUpInside:(id)arg1;
- (void)audioFilterSelectTouchUpInside:(id)arg1;
- (_Bool)volumeViewShouldHidePitchArea;
- (void)volumeTouchUpInside:(id)arg1;
- (id)giveUpRecordingAlertButtonTitle;
- (void)closeTouchUpInside:(id)arg1;
- (void)reRecordAtTimepoint:(double)arg1 immediately:(_Bool)arg2 ignoreLrc:(_Bool)arg3 preRecordDelta:(double)arg4;
- (void)completeRecord;
- (void)cancelRecord;
- (void)pauseRecord;
- (void)startRecord:(_Bool)arg1;
- (_Bool)prepareRecord;
- (_Bool)shouldShowPCHeadTips;
- (void)showEarphoneSuggestionView;
- (void)checkEarphonePlugin;
- (void)oberverForPlayerComplete:(id)arg1;
- (void)removeObserverForPlayback;
- (void)addObserverForPlayback;
- (void)initRecordController;
- (void)dealloc;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)didReceiveMemoryWarning;
- (void)viewDidLoad;
- (void)createStateMachine;
- (_Bool)isPausing;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (void)remote_finishRecording;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

