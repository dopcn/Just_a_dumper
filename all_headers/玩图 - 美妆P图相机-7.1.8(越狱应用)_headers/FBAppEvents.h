//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class FBSession, NSMutableDictionary, NSMutableSet, NSRegularExpression, NSTimer;

@interface FBAppEvents : NSObject
{
    _Bool _haveOutstandingPersistedData;
    _Bool _appSupportsImplicitLogging;
    _Bool _haveFetchedAppSettings;
    int _appSupportsAttributionStatus;
    unsigned long long _flushBehavior;
    FBSession *_lastSessionLoggedTo;
    NSTimer *_flushTimer;
    NSTimer *_attributionIDRecheckTimer;
    NSRegularExpression *_eventNameRegex;
    NSMutableSet *_validatedIdentifiers;
    NSMutableDictionary *_appAuthSessions;
    NSMutableDictionary *_anonymousSessions;
}

+ (id)flushReasonToString:(int)arg1;
+ (id)customAudienceThirdPartyIDRequest:(id)arg1;
+ (void)ensureOnMainThread;
+ (id)persistenceFilePath;
+ (void)clearPersistedAppEventData;
+ (id)retrievePersistedAppEventData;
+ (void)persistAppEventsData:(id)arg1;
+ (void)logAndNotify:(id)arg1;
+ (void)logAndNotify:(id)arg1 allowLogAsDeveloperError:(_Bool *)arg2;
+ (long long)unixTimeNow;
+ (id)unaffinitizedSessionFromToken:(id)arg1 appID:(id)arg2;
+ (id)singleton;
+ (void)flush;
+ (void)setFlushBehavior:(unsigned long long)arg1;
+ (unsigned long long)flushBehavior;
+ (void)activateApp;
+ (void)setLimitEventUsage:(_Bool)arg1;
+ (_Bool)limitEventUsage;
+ (void)logConversionPixel:(id)arg1 valueOfPixel:(double)arg2 session:(id)arg3;
+ (void)logPurchase:(double)arg1 currency:(id)arg2 parameters:(id)arg3 session:(id)arg4;
+ (void)logPurchase:(double)arg1 currency:(id)arg2 parameters:(id)arg3;
+ (void)logPurchase:(double)arg1 currency:(id)arg2;
+ (void)logImplicitEvent:(id)arg1 valueToSum:(id)arg2 parameters:(id)arg3 session:(id)arg4;
+ (void)logEvent:(id)arg1 valueToSum:(id)arg2 parameters:(id)arg3 session:(id)arg4;
+ (void)logEvent:(id)arg1 valueToSum:(double)arg2 parameters:(id)arg3;
+ (void)logEvent:(id)arg1 parameters:(id)arg2;
+ (void)logEvent:(id)arg1 valueToSum:(double)arg2;
+ (void)logEvent:(id)arg1;
@property(retain) NSMutableDictionary *anonymousSessions; // @synthesize anonymousSessions=_anonymousSessions;
@property(retain) NSMutableDictionary *appAuthSessions; // @synthesize appAuthSessions=_appAuthSessions;
@property(retain) NSMutableSet *validatedIdentifiers; // @synthesize validatedIdentifiers=_validatedIdentifiers;
@property(retain) NSRegularExpression *eventNameRegex; // @synthesize eventNameRegex=_eventNameRegex;
@property _Bool haveFetchedAppSettings; // @synthesize haveFetchedAppSettings=_haveFetchedAppSettings;
@property _Bool appSupportsImplicitLogging; // @synthesize appSupportsImplicitLogging=_appSupportsImplicitLogging;
@property int appSupportsAttributionStatus; // @synthesize appSupportsAttributionStatus=_appSupportsAttributionStatus;
@property(retain) NSTimer *attributionIDRecheckTimer; // @synthesize attributionIDRecheckTimer=_attributionIDRecheckTimer;
@property(retain) NSTimer *flushTimer; // @synthesize flushTimer=_flushTimer;
@property(retain) FBSession *lastSessionLoggedTo; // @synthesize lastSessionLoggedTo=_lastSessionLoggedTo;
@property _Bool haveOutstandingPersistedData; // @synthesize haveOutstandingPersistedData=_haveOutstandingPersistedData;
@property unsigned long long flushBehavior; // @synthesize flushBehavior=_flushBehavior;
- (id)instanceCustomAudienceThirdPartyIDRequest:(id)arg1;
- (void)persistDataIfNotInFlight;
- (void)applicationTerminating;
- (void)applicationMovingFromActiveState;
- (_Bool)updateAppEventsStateWithPersistedData:(id)arg1;
- (void)applicationDidBecomeActive;
- (void)attributionIDRecheckTimerFired:(id)arg1;
- (void)flushTimerFired:(id)arg1;
- (void)handleActivitiesPostCompletion:(id)arg1 loggingEntry:(id)arg2 session:(id)arg3;
- (id)sessionToSendRequestTo:(id)arg1;
- (_Bool)doesSessionHaveUserToken:(id)arg1;
- (void)appendAttributionAndAdvertiserIDs:(id)arg1 session:(id)arg2;
- (void)flushOnMainQueue:(int)arg1 session:(id)arg2;
- (void)flush:(int)arg1 session:(id)arg2;
- (void)instanceFlush:(int)arg1;
- (void)instanceLogEvent:(id)arg1 valueToSum:(id)arg2 parameters:(id)arg3 isImplicitlyLogged:(_Bool)arg4 session:(id)arg5;
- (_Bool)regexValidateIdentifier:(id)arg1;
- (_Bool)validateIdentifier:(id)arg1;
- (id)init;

@end

