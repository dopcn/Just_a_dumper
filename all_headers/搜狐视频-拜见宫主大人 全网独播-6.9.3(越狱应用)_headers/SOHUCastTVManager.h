//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

#import "SOHUPlayerProtocol-Protocol.h"
#import "SOHUVideoPlayControlDelegate-Protocol.h"
#import "SOHUVideoPlayerControlViewChangeDelegate-Protocol.h"

@class NSString, NSURL, SHPlayerVideoItem, SOHUVideoPlayerController, UIView;
@protocol SHVideoPlayerDelegate, VideoDataManager;

@interface SOHUCastTVManager : NSObject <SOHUVideoPlayerControlViewChangeDelegate, SOHUVideoPlayControlDelegate, SOHUPlayerProtocol>
{
    _Bool HDMIVideoActive;
    _Bool preLoadDidFinsih;
    _Bool _isDLNAPlaying;
    _Bool _isAirPlayActive;
    id <SHVideoPlayerDelegate> playerDelegate;
    double _currentPlaybackTime;
    double _volume;
    long long videoDownloadSpeed;
    long long playerState;
    long long _playbackState;
    double _duration;
    long long scalingMode;
    UIView *view;
    long long bufferingProgress;
    NSURL *contentURL;
    double initialPlaybackTime;
    id <VideoDataManager> _videoDataManager;
    SHPlayerVideoItem *_currentPlayerItem;
    double _startPlaybackTime;
    double _playerDuration;
    SHPlayerVideoItem *_videoPlayerPlayItem;
    SOHUVideoPlayerController *_videoPlayerVC;
    struct CGSize naturalSize;
}

@property(retain, nonatomic) SOHUVideoPlayerController *videoPlayerVC; // @synthesize videoPlayerVC=_videoPlayerVC;
@property(nonatomic) _Bool isAirPlayActive; // @synthesize isAirPlayActive=_isAirPlayActive;
@property(retain, nonatomic) SHPlayerVideoItem *videoPlayerPlayItem; // @synthesize videoPlayerPlayItem=_videoPlayerPlayItem;
@property(nonatomic) double playerDuration; // @synthesize playerDuration=_playerDuration;
@property(nonatomic) double startPlaybackTime; // @synthesize startPlaybackTime=_startPlaybackTime;
@property(nonatomic) _Bool isDLNAPlaying; // @synthesize isDLNAPlaying=_isDLNAPlaying;
@property(retain, nonatomic) SHPlayerVideoItem *currentPlayerItem; // @synthesize currentPlayerItem=_currentPlayerItem;
@property(retain, nonatomic) id <VideoDataManager> videoDataManager; // @synthesize videoDataManager=_videoDataManager;
@property(nonatomic) double initialPlaybackTime; // @synthesize initialPlaybackTime;
@property(copy, nonatomic) NSURL *contentURL; // @synthesize contentURL;
@property(nonatomic) long long bufferingProgress; // @synthesize bufferingProgress;
@property(readonly, nonatomic) UIView *view; // @synthesize view;
@property(nonatomic) _Bool preLoadDidFinsih; // @synthesize preLoadDidFinsih;
@property(nonatomic) long long scalingMode; // @synthesize scalingMode;
@property(readonly, nonatomic, getter=isHDMIvideoActive) _Bool HDMIVideoActive; // @synthesize HDMIVideoActive;
@property(readonly, nonatomic) struct CGSize naturalSize; // @synthesize naturalSize;
@property(nonatomic) long long playbackState; // @synthesize playbackState=_playbackState;
@property(nonatomic) long long playerState; // @synthesize playerState;
@property(readonly, nonatomic) long long videoDownloadSpeed; // @synthesize videoDownloadSpeed;
@property(nonatomic) double volume; // @synthesize volume=_volume;
@property(nonatomic) __weak id <SHVideoPlayerDelegate> playerDelegate; // @synthesize playerDelegate;
- (void).cxx_destruct;
@property(readonly, nonatomic) double duration; // @synthesize duration=_duration;
@property(nonatomic) double currentPlaybackTime; // @synthesize currentPlaybackTime=_currentPlaybackTime;
- (void)stopPlay;
- (void)stopHDMIVideo;
- (void)startupHDMIVideo;
- (void)playVideoFromPlaybackTime:(double)arg1 withNewDefinition:(_Bool)arg2;
- (void)playVideo:(id)arg1 withPlaybackTime:(double)arg2;
- (long long)getPlayerLoadState;
- (void)exitPlayer:(long long)arg1;
- (double)downloadDuration;
- (void)pause;
- (void)play;
- (void)getDLNAPlayState:(CDUnknownBlockType)arg1;
- (void)airPlayActiveDidChanged;
- (void)videoPlayerViewModeDidChangeMode:(id)arg1;
- (void)videoPlayerViewModeWillChangeMode:(id)arg1;
- (void)requestStopDLNAServer;
- (void)airPlayStateChanged:(id)arg1;
- (void)removeMonitorAirPlayState;
- (void)monitorAirPlayState;
- (void)videoPlayerDidRotateWithViewMode:(long long)arg1;
- (void)videoPlayerWillRotateWithViewMode:(long long)arg1;
- (void)videoPlayerRotateWithViewMode:(long long)arg1;
- (void)updatePlaybackState:(long long)arg1;
- (void)removeDLNASearchVC;
- (void)showCastTVPanel;
- (void)destoryAirPlay;
- (void)destory;
- (void)dealloc;
- (id)init;
- (void)destoryAirPlayExit;
- (void)showAirPlayExit;
@property(copy, nonatomic) CDUnknownBlockType playState;
- (_Bool)shouldEnableDLNAButton;
- (void)setDLNAVolumeTo:(double)arg1;
- (void)seekDLNATimeTo:(double)arg1;
- (void)exitDLNA;
- (void)pauseDLNA;
- (void)playDLNA;
- (void)changeDLNA;
- (void)requestVideoURLForDLNA;
- (void)videoPlayerDidReceiveURLForDLNA:(id)arg1;
- (void)onGetDlnaSource:(id)arg1;
- (void)loadPlayerItemWithVideoID:(long long)arg1 site:(long long)arg2;
- (void)fetchVideoURLForDLNAWithOriginURL:(id)arg1 vid:(id)arg2 site:(id)arg3 defType:(long long)arg4;
- (void)searchDLNADevice;
@property(nonatomic) _Bool isTapPlay;
@property(nonatomic) double dlnaDuration;
@property(nonatomic) double dlnaCurrentTime;
@property(nonatomic) long long playerProtocolType;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

