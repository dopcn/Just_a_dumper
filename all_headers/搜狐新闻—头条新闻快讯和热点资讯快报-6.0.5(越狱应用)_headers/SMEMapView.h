//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <UIKit/UIView.h>

#import "SMECameraDelegate-Protocol.h"
#import "SMEMapViewGestureDelegate-Protocol.h"
#import "SMEMapViewportDelegate-Protocol.h"

@class EAGLView, NSString, SMEAnnotationContainnerView, SMECamera, SMEGestureRecognizer, SMEGpsView, SMEMapConfig, SMEMapController, SMEOverlayContainer, SMEProjection, SMEPyramid, SMEScaleView, SMEUISettings, UIButton, UIGestureRecognizer;
@protocol SMEMapViewDelegate, SMEMapViewGestureDelegate, SMEMapViewportDelegate;

@interface SMEMapView : UIView <SMECameraDelegate, SMEMapViewportDelegate, SMEMapViewGestureDelegate>
{
    _Bool inited;
    SMEGestureRecognizer *gestureRecognizer;
    UIView *gestureHost;
    _Bool dirty;
    CDUnknownFunctionPointerType captureCallback;
    EAGLView *innerView;
    struct CGRect _captureRect;
    CDUnknownBlockType _captureBlock;
    double _threeholdOfvisibleRectChangeInterval;
    double _lastVisibleMapRectChangeTime;
    _Bool _buildingVisible;
    _Bool trafficEventVisible;
    _Bool _debugMode;
    _Bool _enableRotateZ;
    _Bool _enableRotateX;
    _Bool _enableZoomCenter;
    _Bool _enableScroll;
    _Bool _enableZoom;
    float scale;
    float visOffsetL;
    float visOffsetR;
    float visOffsetT;
    float visOffsetB;
    int _powerLevel;
    void *nativeMapView;
    SMEMapController *_mapController;
    SMECamera *_camera;
    SMEProjection *_projection;
    SMEOverlayContainer *_overlayContainer;
    SMEPyramid *_pyramid;
    SMEGpsView *_gpsView;
    SMEUISettings *_uisettings;
    id <SMEMapViewportDelegate> _viewportListener;
    id <SMEMapViewDelegate> _delegate;
    SMEMapConfig *_mapConfig;
    SMEAnnotationContainnerView *_annotationviewContainerView;
    UIButton *_compassView;
    SMEScaleView *_scaleView;
    struct CGPoint _zoomCenter;
}

+ (_Bool)isDebug;
+ (void)setDebug:(_Bool)arg1;
+ (void)initialize;
+ (id)mapVersion;
@property(nonatomic) int powerLevel; // @synthesize powerLevel=_powerLevel;
@property(retain, nonatomic) SMEScaleView *scaleView; // @synthesize scaleView=_scaleView;
@property(retain, nonatomic) UIButton *compassView; // @synthesize compassView=_compassView;
@property(nonatomic) _Bool enableZoom; // @synthesize enableZoom=_enableZoom;
@property(nonatomic) _Bool enableScroll; // @synthesize enableScroll=_enableScroll;
@property(nonatomic) struct CGPoint zoomCenter; // @synthesize zoomCenter=_zoomCenter;
@property(nonatomic) _Bool enableZoomCenter; // @synthesize enableZoomCenter=_enableZoomCenter;
@property(nonatomic) _Bool enableRotateX; // @synthesize enableRotateX=_enableRotateX;
@property(nonatomic) _Bool enableRotateZ; // @synthesize enableRotateZ=_enableRotateZ;
@property(retain, nonatomic) SMEAnnotationContainnerView *annotationviewContainerView; // @synthesize annotationviewContainerView=_annotationviewContainerView;
@property(readonly, nonatomic) SMEMapConfig *mapConfig; // @synthesize mapConfig=_mapConfig;
@property(nonatomic) float visOffsetB; // @synthesize visOffsetB;
@property(nonatomic) float visOffsetT; // @synthesize visOffsetT;
@property(nonatomic) float visOffsetR; // @synthesize visOffsetR;
@property(nonatomic) float visOffsetL; // @synthesize visOffsetL;
@property(nonatomic) _Bool trafficEventVisible; // @synthesize trafficEventVisible;
@property(nonatomic) id <SMEMapViewDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) id <SMEMapViewportDelegate> viewportListener; // @synthesize viewportListener=_viewportListener;
@property(readonly, nonatomic) UIGestureRecognizer *gestureRecongizer; // @synthesize gestureRecongizer=gestureRecognizer;
@property(retain, nonatomic) SMECamera *camera; // @synthesize camera=_camera;
@property(nonatomic) float scale; // @synthesize scale;
- (struct vImage_Buffer)captureInternal;
- (void)setCaptureRect:(struct CGRect)arg1 callback:(CDUnknownBlockType)arg2;
- (void)capture:(CDUnknownFunctionPointerType)arg1;
@property(nonatomic) _Bool debugMode; // @synthesize debugMode=_debugMode;
- (_Bool)setStyleDataSource:(id)arg1;
- (void)setupCompassView;
- (void)setupScaleView;
- (double)angleBetweenMercatorAndECity;
- (void)setVisibleOffsetTop:(float)arg1 Bottom:(float)arg2 Left:(float)arg3 Right:(float)arg4;
- (float)getVisOffsetB;
- (float)getVisOffsetT;
- (float)getVisOffsetR;
- (float)getVisOffsetL;
- (CDStruct_02837cd9)convertRect:(struct CGRect)arg1 toMapRectFromView:(id)arg2;
- (struct CGRect)convertMapRect:(CDStruct_02837cd9)arg1 toRectToView:(id)arg2;
- (CDStruct_c3b9c2ee)convertPoint:(struct CGPoint)arg1 toMapPointFromView:(id)arg2;
- (struct CGPoint)convertMapPoint:(CDStruct_c3b9c2ee)arg1 toPointToView:(id)arg2;
- (CDStruct_02837cd9)visibleMapRect;
- (CDStruct_c3b9c2ee)centerCoordinate;
- (void)setMapViewAngle:(double)arg1 animated:(_Bool)arg2;
- (_Bool)isTouching;
- (void)onTouch:(int)arg1:(int)arg2:(int)arg3:(int)arg4;
- (void)doCapturePerFrame;
- (void)drawGlFrame:(int)arg1:(int)arg2;
- (void)notifyRefresh;
- (void)notifyDraw;
- (void)stopAnimation;
- (void)startAnimation;
- (void)layoutSubviews;
- (void)setGestureHost:(id)arg1;
- (void)dealloc;
- (void)setupMapView;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)onMaptypeDidChanged:(id)arg1;
- (void)longClickAt:(struct CGPoint)arg1;
- (void)viewportChangeEnd;
- (void)viewportChangeBegin;
- (void)coordinateSystemDidChange;
- (void)visibleMapRectDidChanged;
- (void)rotationXDidChangedTo:(double)arg1;
- (void)rotationZDidChangedTo:(double)arg1;
- (void)locationDidChangedToZ:(double)arg1;
- (void)locationDidChangedToX:(double)arg1 Y:(double)arg2;
@property(nonatomic) long long animationFrameInterval;
- (void)setSkyBoxImage:(id)arg1;
@property(nonatomic) id <SMEMapViewGestureDelegate> gestureDelegate;
@property(readonly, nonatomic) void *nativeMapView; // @synthesize nativeMapView;
- (id)gestureRecognizer;
@property(readonly, nonatomic) SMEUISettings *uisettings; // @synthesize uisettings=_uisettings;
@property(readonly, nonatomic) SMEGpsView *gpsView; // @synthesize gpsView=_gpsView;
@property(readonly, nonatomic) SMEPyramid *pyramid; // @synthesize pyramid=_pyramid;
@property(readonly, nonatomic) SMEProjection *projection; // @synthesize projection=_projection;
@property(readonly, nonatomic) SMEOverlayContainer *overlayContainer; // @synthesize overlayContainer=_overlayContainer;
@property(readonly, nonatomic) SMEMapController *mapController; // @synthesize mapController=_mapController;
@property(nonatomic) int gridColor;
@property(nonatomic) int clearColor;
- (_Bool)isTrafficEventVisible;
- (void)notifyTouched;
@property(nonatomic) _Bool buildingVisible; // @synthesize buildingVisible=_buildingVisible;
- (_Bool)clearCache;
- (void)stopRender;
- (void)startRender;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

