//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "MJUIViewController.h"

@class AvatarDynamicModel, AvatarViewController, CADisplayLink, CCNode, CCScene, CCSprite, NSMutableArray, NSString, SkeletonAnimation, UIImageView, UIView;
@protocol MJLAvatarAnimationDelegate;

@interface EGWSceneViewController : MJUIViewController
{
    float _blurImageViewCurrentAlpha;
    float _opacity;
    SkeletonAnimation *_avatarSprite;
    CCNode *_weatherNode;
    UIView *_containView;
    UIView *_containBgView;
    UIView *_weatherAvatarView;
    UIImageView *_blurImageView;
    UIImageView *_placeholderImageView;
    AvatarViewController *_avatarViewController;
    id <MJLAvatarAnimationDelegate> _avatarPlayDelegate;
    AvatarDynamicModel *_avatarDynamicModel;
    long long _animationStatus;
    CCScene *_weatherScene;
    NSString *_currentSceneName;
    NSString *_currentSceneId;
    NSString *_nextSceneName;
    NSString *_nextSceneId;
    CADisplayLink *_displayLink;
    NSMutableArray *_mutEmtterLayers;
    CADisplayLink *_weatherDisplayLink;
    CADisplayLink *_weatherHideDisplayLink;
    CCSprite *_propsSprite;
}

@property(retain, nonatomic) CCSprite *propsSprite; // @synthesize propsSprite=_propsSprite;
@property(retain, nonatomic) CADisplayLink *weatherHideDisplayLink; // @synthesize weatherHideDisplayLink=_weatherHideDisplayLink;
@property(retain, nonatomic) CADisplayLink *weatherDisplayLink; // @synthesize weatherDisplayLink=_weatherDisplayLink;
@property(nonatomic) float opacity; // @synthesize opacity=_opacity;
@property(nonatomic) float blurImageViewCurrentAlpha; // @synthesize blurImageViewCurrentAlpha=_blurImageViewCurrentAlpha;
@property(retain, nonatomic) NSMutableArray *mutEmtterLayers; // @synthesize mutEmtterLayers=_mutEmtterLayers;
@property(retain, nonatomic) CADisplayLink *displayLink; // @synthesize displayLink=_displayLink;
@property(copy, nonatomic) NSString *nextSceneId; // @synthesize nextSceneId=_nextSceneId;
@property(copy, nonatomic) NSString *nextSceneName; // @synthesize nextSceneName=_nextSceneName;
@property(copy, nonatomic) NSString *currentSceneId; // @synthesize currentSceneId=_currentSceneId;
@property(copy, nonatomic) NSString *currentSceneName; // @synthesize currentSceneName=_currentSceneName;
@property(retain, nonatomic) CCScene *weatherScene; // @synthesize weatherScene=_weatherScene;
@property(nonatomic) long long animationStatus; // @synthesize animationStatus=_animationStatus;
@property(retain, nonatomic) AvatarDynamicModel *avatarDynamicModel; // @synthesize avatarDynamicModel=_avatarDynamicModel;
@property(nonatomic) __weak id <MJLAvatarAnimationDelegate> avatarPlayDelegate; // @synthesize avatarPlayDelegate=_avatarPlayDelegate;
@property(retain, nonatomic) AvatarViewController *avatarViewController; // @synthesize avatarViewController=_avatarViewController;
@property(retain, nonatomic) UIImageView *placeholderImageView; // @synthesize placeholderImageView=_placeholderImageView;
@property(retain, nonatomic) UIImageView *blurImageView; // @synthesize blurImageView=_blurImageView;
@property(retain, nonatomic) UIView *weatherAvatarView; // @synthesize weatherAvatarView=_weatherAvatarView;
@property(retain, nonatomic) UIView *containBgView; // @synthesize containBgView=_containBgView;
@property(retain, nonatomic) UIView *containView; // @synthesize containView=_containView;
@property(retain, nonatomic) CCNode *weatherNode; // @synthesize weatherNode=_weatherNode;
@property(retain, nonatomic) SkeletonAnimation *avatarSprite; // @synthesize avatarSprite=_avatarSprite;
- (void).cxx_destruct;
- (void)removeEgg:(id)arg1;
- (id)touchInEasterEgg:(struct CGPoint)arg1;
- (void)showEggWithSceneId:(id)arg1 sceneView:(id)arg2 sceneName:(id)arg3 updateScene:(_Bool)arg4;
- (void)hideWeatherAvatar:(_Bool)arg1;
- (_Bool)isUseAdBackground;
- (void)setWeatherSceneHidden:(_Bool)arg1;
- (void)p_drawWeatherHideAnimation;
- (void)p_drawWeatherAnimation;
- (id)p_getCurrentSkinName;
- (id)p_getCurrentAnimationName;
- (void)resetAvatarAnimationState;
- (_Bool)p_isSameAnimations:(id)arg1;
- (_Bool)p_isNeedPlayAnimation:(id)arg1;
- (_Bool)p_haveAnimation:(id)arg1;
- (_Bool)p_haveSkin:(id)arg1;
- (void)changeSkin:(id)arg1;
- (void)p_equipAttachment:(id)arg1 skinName:(id)arg2 isAdd:(_Bool)arg3;
- (void)p_removeOnceAnimationFromArray:(id)arg1;
- (id)p_randomAnimations:(id)arg1;
- (id)p_getRepeatAnimations:(id)arg1;
- (void)p_playAnimations:(id)arg1 anisDelays:(id)arg2 repeat:(_Bool)arg3 repeatDelay:(long long)arg4;
- (_Bool)isSameAvatarResourse:(id)arg1;
- (void)updateAvatarUI;
- (void)updateAvatarAnimation:(id)arg1;
- (void)showWelcomeAnimation;
- (void)p_cleanAnimationData;
- (void)cleanPropsSprite;
- (void)removeAnimationAvatar;
- (void)cleanADAvatarData:(id)arg1;
- (void)setupPropsSpritewithImagePath:(id)arg1 point:(struct CGPoint)arg2 scale:(double)arg3;
- (void)buildAvatar:(long long)arg1 skelonJsonPath:(id)arg2 atlasPath:(id)arg3 skinName:(id)arg4;
- (void)setupAnimationAvatarWithZorder:(long long)arg1;
- (void)setupAvatarWithSkelonJsonPath:(id)arg1 atlasPath:(id)arg2 skinName:(id)arg3;
- (void)setupAnimationAvatarForScreenShot;
- (void)setupAnimationAvatar;
- (void)p_backgroundError:(id)arg1;
- (void)p_applicationWillResignActive;
- (void)p_clearUnusedScene;
- (id)p_getSceneblurImageWihtSceneName:(id)arg1;
- (void)p_playAnimation;
- (void)p_changeSceneOpacityWithSceneId:(id)arg1 opacity:(double)arg2;
- (void)p_drawScene;
- (id)screenshotWithStartNode:(id)arg1;
- (id)scenarioStaticImage;
- (void)hideEmitterLayer;
- (_Bool)p_IsHideEmitterLayer;
- (void)showEmitterLayerIfEnable;
- (_Bool)shoulChangeLayerHiddenForEmitterLayer:(id)arg1;
- (void)onlyHoldEmitterLayerForCurrentSceneID:(id)arg1;
- (id)emitterForSceneID:(id)arg1;
- (void)addEmitterLayerIfNeedForSceneID:(id)arg1;
- (void)changeSceneBlurOpacity:(double)arg1;
- (void)updateWeatherSceneBlurImageWithSceneId:(id)arg1 needAnimation:(_Bool)arg2;
- (void)changeEmitterLayerOpacityWithOpacity:(double)arg1 timeScale:(double)arg2 layer:(id)arg3;
- (void)changeEmitterLayerOpacityWithSceneName:(id)arg1 opacity:(double)arg2 timeScale:(double)arg3;
- (void)removeAllSceneWithoutSceneId:(id)arg1;
- (void)removeSceneWithSceneName:(id)arg1;
- (void)afreshAddSceneViewIfNeeded;
- (void)stopAnimation;
- (void)pauseAnimation;
- (void)updateWeatherSceneWithSceneId:(id)arg1 animation:(_Bool)arg2;
- (void)setupWeatherSceneWithSceneId:(id)arg1;
- (void)addObserver;
- (void)didReceiveMemoryWarning;
- (void)dealloc;
- (void)viewDidLoad;

@end

