//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "XYDEventDispatcher.h"

@class AdUpdateIndictor, BasicNetworkController, BatchNativeAPIAdServerProxy, NSLock, NSMutableDictionary, XAdManagerContext, XBatchAdCreativeAssetDownloader, XNativeAdManagerState, XNativeAdResponsePackage;

@interface XNativeAdManager : XYDEventDispatcher
{
    XNativeAdManagerState *mState;
    NSMutableDictionary *mNativeASData;
    XNativeAdResponsePackage *mNativeAdResponsePKG;
    XAdManagerContext *managerContext;
    BasicNetworkController *mNetworkController;
    AdUpdateIndictor *mAdUpdateIndictor;
    BatchNativeAPIAdServerProxy *mBatchNativeAPIAdServerProxy;
    XBatchAdCreativeAssetDownloader *mBatchAdCreativeAssetDownloader;
    _Bool isAppBackground;
    _Bool isStartDownloadingRequestFired;
    NSLock *downloadLock;
    double startTime;
    _Bool _forcePauseDownloading;
    _Bool _mAllowNativeAdServing;
    _Bool _mAllowStartDownloading;
    _Bool _hasCalledNativeStartDownloader;
    int _sleepSecondsBeforeWriteJson;
    long long _costTime;
}

+ (id)NATIVE_AD_SERVER_DOWNLOAD_ERROR;
+ (id)NATIVE_AD_SERVER_DOWNLOAD_COMPLETE;
+ (id)TAG;
+ (id)DEFAULT_NATIVE_AS_RESPONSE_OK;
+ (id)DEFAULT_RESPONSE_ERR;
+ (id)SUPPORTED_AD_SLOT_TYPES;
+ (id)NATIVE_AD_SERVER_START_SUCCESS;
+ (id)NATIVE_AD_SERVER_START_FAILED;
+ (id)getInstance;
+ (id)sharedInstance;
+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (void)initialize;
@property int sleepSecondsBeforeWriteJson; // @synthesize sleepSecondsBeforeWriteJson=_sleepSecondsBeforeWriteJson;
@property long long costTime; // @synthesize costTime=_costTime;
@property _Bool hasCalledNativeStartDownloader; // @synthesize hasCalledNativeStartDownloader=_hasCalledNativeStartDownloader;
@property _Bool mAllowStartDownloading; // @synthesize mAllowStartDownloading=_mAllowStartDownloading;
@property _Bool mAllowNativeAdServing; // @synthesize mAllowNativeAdServing=_mAllowNativeAdServing;
@property _Bool forcePauseDownloading; // @synthesize forcePauseDownloading=_forcePauseDownloading;
- (void).cxx_destruct;
- (float)getClearedAdSize;
- (_Bool)clearOfflineAds;
- (void)stopNetworkListener;
- (void)onDestory;
- (void)onStop;
- (void)onPause;
- (void)onResume;
- (void)onRestart;
- (void)onStart;
- (void)onCreate;
- (id)getstate;
- (id)getDisplayAd;
- (id)getPauserollAd;
- (id)getPrerollAd;
- (_Bool)cancelDownloading;
- (_Bool)resumeDownloading;
- (_Bool)pauseDownloading;
- (void)startDownloadingRequest;
- (void)initAdUpdateIndictor;
- (void)clearNativeAds;
- (void)readNativeAdResponse;
- (void)onXAdSlotEnd:(id)arg1;
- (void)onXAdSlotPlayingAtCuepoint:(id)arg1 cuePoint:(int)arg2;
- (void)onXAdSlotStart:(id)arg1;
- (void)setPID:(id)arg1;
- (void)setSite:(id)arg1;
- (id)generateURLs4NativeTracking:(id)arg1;
- (void)startNativeAdLoader;
- (_Bool)syncObject:(_Bool)arg1;
- (void)startNativeAdServer;
- (void)refreshNativeAdServer:(_Bool)arg1 dispatchAdServingSuccess:(_Bool)arg2;
- (void)runRefreshNativeAdServerOnCurrentThread:(id)arg1;
- (void)setGUID:(id)arg1;
- (void)setAppVersion:(id)arg1;
- (void)setRST:(id)arg1;
- (void)setCookie:(id)arg1;
- (void)setUserAgent:(id)arg1;
- (void)setVideoDuration:(int)arg1;
- (id)getNativeAdAssetFolderPath;
- (void)mockATMPath:(id)arg1;
- (void)setTracking;
- (void)setDocumentPath:(id)arg1;
- (void)setAssetPath:(id)arg1;
- (void)setContentPath:(id)arg1;
- (void)setMockAdInterval:(long long)arg1;
- (void)setPauserollMockAdServer:(id)arg1;
- (void)setDisplayMockAdServer:(id)arg1;
- (void)setPrerollMockAdServer:(id)arg1;
- (void)setOpenUDID:(id)arg1;
- (void)batchAPIProxyASRequestDone:(id)arg1;
- (void)batchAPIProxyASRequestStarted:(id)arg1;
- (void)batchDownloadEventCompleted:(id)arg1;
- (void)batchDownloadEventStarted:(id)arg1;
- (void)setMock_FORMAT_NATIVE_RESPONSE:(_Bool)arg1;
- (long long)getNativeASResponseRefresingCostTime;
- (void)networkStatusListener:(id)arg1;
- (void)SETMOCK_MIN_FREE_SIZE:(int)arg1;
- (void)setMock_MAX_NATIVE_VIDEO_AD_NUM:(int)arg1;
- (void)appDidBecomeActive:(id)arg1;
- (void)appDidEnterBackground:(id)arg1;
- (id)init;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

