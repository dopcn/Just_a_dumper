//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@interface MVMediaTimingFunction : NSObject
{
    int _type;
}

+ (id)functionWithType:(int)arg1;
@property(nonatomic) int type; // @synthesize type=_type;
- (id)initWithType:(int)arg1;
- (float)interpolateBySlice:(float)arg1 start:(float)arg2 end:(float)arg3;
- (float)easeInEaseOutCircularInterpolateBySlice:(float)arg1 start:(float)arg2 end:(float)arg3;
- (float)easeOutCircularInterpolateBySlice:(float)arg1 start:(float)arg2 end:(float)arg3;
- (float)easeInCircularInterpolateBySlice:(float)arg1 start:(float)arg2 end:(float)arg3;
- (float)easeInEaseOutExpInterpolateBySlice:(float)arg1 start:(float)arg2 end:(float)arg3;
- (float)easeOutExpInterpolateBySlice:(float)arg1 start:(float)arg2 end:(float)arg3;
- (float)easeInExpInterpolateBySlice:(float)arg1 start:(float)arg2 end:(float)arg3;
- (float)easeInEaseOutSinInterpolateBySlice:(float)arg1 start:(float)arg2 end:(float)arg3;
- (float)easeOutSinInterpolateBySlice:(float)arg1 start:(float)arg2 end:(float)arg3;
- (float)easeInSinInterpolateBySlice:(float)arg1 start:(float)arg2 end:(float)arg3;
- (float)easeInEaseOutQuinticInterpolateBySlice:(float)arg1 start:(float)arg2 end:(float)arg3;
- (float)easeOutQuinticInterpolateBySlice:(float)arg1 start:(float)arg2 end:(float)arg3;
- (float)easeInQuinticInterpolateBySlice:(float)arg1 start:(float)arg2 end:(float)arg3;
- (float)easeInEaseOutQuarticInterpolateBySlice:(float)arg1 start:(float)arg2 end:(float)arg3;
- (float)easeOutQuarticInterpolateBySlice:(float)arg1 start:(float)arg2 end:(float)arg3;
- (float)easeInQuarticInterpolateBySlice:(float)arg1 start:(float)arg2 end:(float)arg3;
- (float)easeInEaseOutCubicInterpolateBySlice:(float)arg1 start:(float)arg2 end:(float)arg3;
- (float)easeOutCubicInterpolateBySlice:(float)arg1 start:(float)arg2 end:(float)arg3;
- (float)easeInCubicInterpolateBySlice:(float)arg1 start:(float)arg2 end:(float)arg3;
- (float)easeInEaseOutQuadraticInterpolateBySlice:(float)arg1 start:(float)arg2 end:(float)arg3;
- (float)easeOutQuadraticInterpolateBySlice:(float)arg1 start:(float)arg2 end:(float)arg3;
- (float)easeInQuadraticInterpolateBySlice:(float)arg1 start:(float)arg2 end:(float)arg3;
- (float)linearInterpolateBySlice:(float)arg1 start:(float)arg2 end:(float)arg3;
- (float)normalizeValue:(float)arg1;

@end

