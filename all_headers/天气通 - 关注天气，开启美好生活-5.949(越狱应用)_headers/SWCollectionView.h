//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <UIKit/UICollectionView.h>

#import "SWCollectionViewCellDelegate-Protocol.h"

@class NSString, SWListProvider, UIViewController, _SWReusableViewControllerPool;
@protocol SWControllerCollectionViewDataSource;

@interface SWCollectionView : UICollectionView <SWCollectionViewCellDelegate>
{
    _Bool _shouldDelayReload;
    _Bool _shouldReloadAfterDelay;
    UIViewController *_containerViewController;
    SWListProvider *_listProvider;
    _SWReusableViewControllerPool *_pool;
    struct UIEdgeInsets _cellContentEdgeInsets;
}

@property(retain, nonatomic) _SWReusableViewControllerPool *pool; // @synthesize pool=_pool;
@property(nonatomic) _Bool shouldReloadAfterDelay; // @synthesize shouldReloadAfterDelay=_shouldReloadAfterDelay;
@property(nonatomic) _Bool shouldDelayReload; // @synthesize shouldDelayReload=_shouldDelayReload;
@property(nonatomic) struct UIEdgeInsets cellContentEdgeInsets; // @synthesize cellContentEdgeInsets=_cellContentEdgeInsets;
@property(nonatomic) __weak SWListProvider *listProvider; // @synthesize listProvider=_listProvider;
@property(nonatomic) __weak UIViewController *containerViewController; // @synthesize containerViewController=_containerViewController;
- (void).cxx_destruct;
- (id)dequeueReusableViewControllerWithReuseIdentifier:(id)arg1 forIndexPath:(id)arg2;
- (void)reloadData;
- (void)reloadDataRightNow;
- (void)_scrollToTopFromTouchAtScreenLocation:(struct CGPoint)arg1 resultHandler:(id)arg2;
- (void)_hostViewController:(id)arg1 withHostCell:(id)arg2;
- (void)_unhostViewController:(id)arg1;
- (void)registerCellsWithProvider:(id)arg1;
- (void)didEndDisplayingCell:(id)arg1;
- (id)dequeueReusableCellWithReuseIdentifier:(id)arg1 forIndexPath:(id)arg2;
- (id)initWithFrame:(struct CGRect)arg1 collectionViewLayout:(id)arg2;

// Remaining properties
@property(nonatomic) __weak id <SWControllerCollectionViewDataSource> dataSource; // @dynamic dataSource;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

