//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "PainterProtocol-Protocol.h"

@class GLProgram, GLTexture, MTGLProgram, NSMutableArray, NSString, UIColor, UIImage;
@protocol CanvasProtocol;

@interface MagicPainter : NSObject <PainterProtocol>
{
    MTGLProgram *_colorProgram;
    struct CGPoint _first;
    struct CGPoint _last;
    GLProgram *_program;
    GLTexture *_imageTexture;
    GLTexture *_drawTexture;
    NSMutableArray *_points;
    id <CanvasProtocol> _canvas;
    int _blendFuncSource;
    int _blendFuncDestination;
    float _opacity;
    int _units_per_plot;
    _Bool _needSurfaceColor;
    int _source_x_blocks;
    int _source_y_blocks;
    float _currentPointSize;
    double _lastPointTime;
    float _currentPaintRate;
    float _middlePaintRate;
    float _lastPaintRate;
    GLProgram *_program2;
    struct CGSize _bufferSize;
    unsigned int fboHandle;
    GLTexture *_originTexture;
    int srcIndex;
    _Bool isUseOwnBuffer;
    _Bool endFlag;
    _Bool needSaveIndex;
    union _GLKMatrix4 modelViewMatrix;
    union _GLKMatrix4 projectionMatrix;
    unsigned int fboTex;
    _Bool _bIsAngleRandom;
    union _GLKVector2 _prevVector;
    double _lengthAns;
    _Bool _fireFlag;
    unsigned short *indexBuffer;
    union _GLKVector2 *vertexBuffer;
    union _GLKVector4 *colorBuffer;
    union _GLKVector2 *texCoordBuffer;
    union _GLKVector2 *shadowVertexBuffer;
    unsigned long long nscount;
    NSMutableArray *_drawPoints;
    float _minPointSize;
    float _maxPointSize;
    unsigned long long _mode;
    UIColor *_color;
    UIImage *_image;
    NSString *_bufferFileDirectory;
}

@property(copy, nonatomic) NSString *bufferFileDirectory; // @synthesize bufferFileDirectory=_bufferFileDirectory;
@property(retain, nonatomic) UIImage *image; // @synthesize image=_image;
@property(retain, nonatomic) UIColor *color; // @synthesize color=_color;
@property(nonatomic) unsigned long long mode; // @synthesize mode=_mode;
- (void).cxx_destruct;
- (_Bool)loadShadersWithName:(id)arg1 fshName:(id)arg2;
- (_Bool)loadShadersWithName:(id)arg1;
- (_Bool)loadShader2WithVName:(id)arg1 fName:(id)arg2;
- (void)clear;
- (void)calculateQuadCurveFrom:(struct CGPoint)arg1 to:(struct CGPoint)arg2 withControl:(struct CGPoint)arg3 fromRate:(float)arg4 toRate:(float)arg5;
- (void)drawWithBlend;
- (void)calculateSnapPneQuadCurveForm:(struct CGPoint)arg1 to:(struct CGPoint)arg2 isFirst:(_Bool)arg3;
- (void)addPoint:(struct CGPoint)arg1;
- (void)paintWithFBOSize:(struct CGSize)arg1 imageRect:(struct CGRect)arg2;
- (void)renderToCanvas;
- (void)setCanvas:(id)arg1;
- (void)endPaint;
- (void)resetPainter;
- (void)cancelPainter;
- (void)clearFramebuffer;
- (void)paintDown;
- (void)paintTo:(struct CGPoint)arg1;
- (void)paintUp;
- (void)updateWithDelta:(float)arg1;
- (void)show;
- (void)resetBuffer:(int)arg1;
- (void)saveBuffer:(int)arg1;
- (void)useFBO;
- (id)initWithMode:(unsigned long long)arg1 size:(struct CGSize)arg2;
- (void)dealloc;
- (float)maxPointSize;
- (void)setMaxPointSize:(float)arg1;
- (float)minPointSize;
- (void)setMinPointSize:(float)arg1;
- (unsigned long long)drawCount;
- (unsigned short *)indexBuffer;
- (union _GLKVector2 *)texCoordBuffer;
- (union _GLKVector2 *)vertexBuffer;
- (void)cleanOldPoint;
- (float)maxPointSize;
- (void)setMaxPointSize:(float)arg1;
- (float)minPointSize;
- (void)setMinPointSize:(float)arg1;
- (unsigned long long)drawCount;
- (unsigned short *)indexBuffer;
- (union _GLKVector2 *)texCoordBuffer;
- (union _GLKVector2 *)vertexBuffer;
- (void)cleanOldPoint;
- (float)maxPointSize;
- (void)setMaxPointSize:(float)arg1;
- (float)minPointSize;
- (void)setMinPointSize:(float)arg1;
- (unsigned long long)drawCount;
- (unsigned short *)indexBuffer;
- (union _GLKVector2 *)texCoordBuffer;
- (union _GLKVector2 *)vertexBuffer;
- (void)cleanOldPoint;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

