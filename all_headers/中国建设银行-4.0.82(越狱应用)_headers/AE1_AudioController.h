//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

@class MPVolumeView, NSTimer;

@interface AE1_AudioController : NSObject
{
    int objAudioEventCode;
    _Bool isAddedListener_AudioRouteChange;
    _Bool isAddedListener_AudioInputAvailable;
    _Bool isAddedListener_ServerDied;
    _Bool isAudioBeingInterrupted;
    float originalVol_headset;
    MPVolumeView *objMPVolumeView;
    NSTimer *volPollingTimer;
    _Bool detectDeviceChange;
    _Bool PollingDetect_isEnablePolling;
    _Bool isDevicePlugged;
    _Bool isControllingAudioVol;
    int PollingDetect_wrongRouteCount_Headphone;
    double requiredAudioVolume;
    _Bool isEnablePollingVolumeInBackground;
    _Bool isEnableRestoreVolumeInBackground;
}

+ (void)ForceResetMagRecorderHasAudioSessionInitializedAfterKillMediaserverd;
+ (_Bool)automaticallyNotifiesObserversForKey:(id)arg1;
+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (id)sharedController;
@property(retain, nonatomic) NSTimer *volPollingTimer; // @synthesize volPollingTimer;
@property(retain, nonatomic) MPVolumeView *objMPVolumeView; // @synthesize objMPVolumeView;
@property(nonatomic) double requiredAudioVolume; // @synthesize requiredAudioVolume;
@property(nonatomic) _Bool isAudioBeingInterrupted; // @synthesize isAudioBeingInterrupted;
@property(nonatomic) int PollingDetect_wrongRouteCount_Headphone; // @synthesize PollingDetect_wrongRouteCount_Headphone;
@property(nonatomic) int objAudioEventCode; // @synthesize objAudioEventCode;
- (_Bool)isIosVersionLargerOrEqual:(id)arg1;
- (void)enableRestoreVolumeInBackground:(_Bool)arg1;
- (void)enablePollingVolumeInBackground:(_Bool)arg1;
- (void)TriggerKvo_AudioEventWithEventCode:(int)arg1;
- (void)TriggerKvo_AudioEvent;
- (void)removePropertyListener;
- (_Bool)deactivateAudioSession;
- (_Bool)activateAudioSession;
- (void)pollingDetectDevice;
- (void)startPollingDetectDevice;
- (void)stopPollingDetectDevice;
- (void)announceUnpluggedByRouteChange;
- (void)announcePluggedByRouteChange;
- (_Bool)isDevicePresent;
- (void)setDetectDeviceChange:(_Bool)arg1;
- (int)CheckAudioRouteType;
- (int)CheckAudioInputAvailable;
- (_Bool)isAudioInputAvailable_AVAudioSession;
- (_Bool)IsHeadSetPluggedIn;
- (_Bool)isHeadsetPluggedIn_AVAudioSession;
- (_Bool)IsOtherAudioIsPlaying;
- (void)onAudioSessionInterrupted:(id)arg1;
- (float)getCurrentVolume:(int)arg1;
- (void)restoreAudioVolume;
- (void)saveOriginalVol:(id)arg1;
- (void)updateSystemVolume:(float)arg1;
- (void)updateAudioVolume:(double)arg1 callFrom:(id)arg2;
- (void)setupAudioVolume:(double)arg1;
- (void)performSelector_pollingUpdateAudioVolume;
- (void)startPollingUpdateAudioVolume:(id)arg1;
- (void)stopPollingUpdateAudioVolume:(id)arg1;
- (void)stopPollingUpdateAudioVolume;
- (void)removeVolumeViewWithDelay;
- (void)showSystemVolumePopupAndRestoreVolume:(id)arg1;
- (void)hideSystemVolumePopupAndSaveCurrentVolume:(id)arg1;
- (void)updateIsControllingAudioVol:(_Bool)arg1 callFrom:(id)arg2;
- (_Bool)isVol0AndVol1TheSame;
- (void)removeVolumeView:(_Bool)arg1 callFrom:(id)arg2;
- (void)addVolumeView;
- (void)setupAudioSession;
- (void)notif_volumeChanged:(id)arg1;
- (void)dealloc;
- (id)init;
- (id)getAudioEngineVersion;
- (_Bool)isAllowMicrophoneUsage;
- (id)autorelease;
- (oneway void)release;
- (unsigned long long)retainCount;
- (id)retain;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

