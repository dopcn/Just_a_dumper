//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

#import "AuthClient-Protocol.h"
#import "EntCoreClient-Protocol.h"
#import "ReachabilityClient-Protocol.h"

@class BlockUploadTask, NSDate, NSString, UIImage, YYWebResourceDownloadOperation;
@protocol OS_dispatch_queue;

@interface YYTVSpeechSongManager : NSObject <AuthClient, EntCoreClient, ReachabilityClient>
{
    _Bool _sendingUploadHTTPReq;
    BlockUploadTask *_currentUploadTask;
    YYWebResourceDownloadOperation *_currentDownloadOp;
    NSObject<OS_dispatch_queue> *_speechSongIOQueue;
    double _currentTuningProgress;
    NSDate *_currentTuneStartDate;
    UIImage *_currentSpeechSongSnapshot;
}

+ (id)shareInstance;
@property(nonatomic) _Bool sendingUploadHTTPReq; // @synthesize sendingUploadHTTPReq=_sendingUploadHTTPReq;
@property(retain, nonatomic) UIImage *currentSpeechSongSnapshot; // @synthesize currentSpeechSongSnapshot=_currentSpeechSongSnapshot;
@property(retain, nonatomic) NSDate *currentTuneStartDate; // @synthesize currentTuneStartDate=_currentTuneStartDate;
@property(nonatomic) double currentTuningProgress; // @synthesize currentTuningProgress=_currentTuningProgress;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *speechSongIOQueue; // @synthesize speechSongIOQueue=_speechSongIOQueue;
@property(retain, nonatomic) YYWebResourceDownloadOperation *currentDownloadOp; // @synthesize currentDownloadOp=_currentDownloadOp;
@property(nonatomic) __weak BlockUploadTask *currentUploadTask; // @synthesize currentUploadTask=_currentUploadTask;
- (void).cxx_destruct;
- (void)onKickOff;
- (void)onLogout;
- (void)onLoginSucceed:(long long)arg1;
- (void)onCurrentAccountChanged:(long long)arg1;
- (unsigned long long)_correctStateForState:(unsigned long long)arg1;
- (id)_getScreenshotOfVideoAtPath:(id)arg1;
- (void)handleSpeechSongBroadcast:(id)arg1;
- (void)onReceive:(id)arg1 maxType:(unsigned short)arg2 miniType:(unsigned short)arg3;
- (void)reachabilityDidChange:(long long)arg1;
- (id)_speechSongInfoDictWithInfo:(id)arg1;
- (id)_getUserSpeechSong;
- (id)unsafeReadCurrentSpeechSong;
- (void)safeReadWriteCurrentSpeechSong:(CDUnknownBlockType)arg1;
- (void)cleanup;
- (id)parseMusics:(id)arg1;
- (id)generateTunedAudioNameWithUntunedName:(id)arg1;
- (id)getSpeechSongPathWithName:(id)arg1;
- (void)handleTunedDownloadFailureWithInfo:(id)arg1;
- (void)handleUntunedUploadFailureWithInfo:(id)arg1 errorDesc:(id)arg2;
- (id)genUUIDWithUid:(unsigned long long)arg1;
- (void)onTuningCompleteWithId:(long long)arg1 url:(id)arg2;
- (void)requestTuningWithSpeechSongInfo:(id)arg1 bs2Url:(id)arg2;
- (void)_doUploadUntunedSpeechSongWithInfo:(id)arg1;
- (void)onDownloadTunedSpeechSongInfo:(id)arg1 filePath:(id)arg2;
- (void)cancelCurrentTuningSpeechSongWithCompletion:(CDUnknownBlockType)arg1;
- (void)_doRemoveSpeechSong:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)removeCurrentSpeechSongWithCompletion:(CDUnknownBlockType)arg1;
- (_Bool)isDownloadableState:(unsigned long long)arg1;
- (void)downloadCurrentTunedSpeechSong;
- (void)uploadAndTuneCurrentUntunedSpeechSong;
- (_Bool)createSpeechSongWithVideo:(id)arg1 audio:(id)arg2 config:(id)arg3 referenceTinyVideoInfo:(id)arg4;
- (void)refreshCurrentTunningSpeechSongProgress;
- (id)currentSpeechSongConfig;
- (id)currentSpeechSongInfoDict;
- (unsigned long long)currentSpeechSongState;
- (id)tinyVideoInfoFromSpeechSongInfoDict:(id)arg1 songConfig:(id)arg2;
- (void)requestSongListWithOffset:(unsigned long long)arg1 count:(unsigned long long)arg2 completion:(CDUnknownBlockType)arg3;
- (void)unregisterNotifications;
- (void)registerNotifications;
- (void)dealloc;
- (id)initPrivate;
- (id)speechSongPublishViewController;
- (void)gotoSpeechSongPublishWithRecorder;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

