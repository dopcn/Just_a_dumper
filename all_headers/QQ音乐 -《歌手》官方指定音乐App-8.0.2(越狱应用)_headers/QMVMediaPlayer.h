//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

#import "QMMVAVPlayerDelegate-Protocol.h"
#import "QMVAdPlayerDelegate-Protocol.h"
#import "TADMediaManagerDelegate-Protocol.h"

@class AVPictureInPictureController, AVPlayerItem, MVContainerView, NSArray, NSMutableArray, NSString, NSTimer, QMMVAVPlayer, QMVMediaViewController, QMVTipView, TADMediaManager, UIButton, UIView, UIViewController;
@protocol QMVMediaPlayerDelegate;

@interface QMVMediaPlayer : NSObject <QMMVAVPlayerDelegate, TADMediaManagerDelegate, QMVAdPlayerDelegate>
{
    _Bool _isFullScreen;
    _Bool _isLive;
    _Bool _screenLock;
    _Bool _fullScreenLock;
    _Bool _switchScreenLock;
    _Bool _isShowTipView;
    _Bool _autoCleanCache;
    _Bool _needObserverVideoLayer;
    _Bool _isVideoFirstFrameLoaded;
    _Bool _playAfterAd;
    _Bool _isShowaAd;
    _Bool _activeAirPlay;
    _Bool _seekAction;
    _Bool _hasPlaying;
    _Bool _isEnterBackGround;
    _Bool _forceSeek;
    _Bool _isDownloadErr;
    _Bool _isSwitchScreening;
    _Bool _isMute;
    _Bool _airPlayStart;
    int _defaultMediaFormat;
    int _videoPlayerStatus;
    int _currentClarity;
    int _currentMediaType;
    id <QMVMediaPlayerDelegate> _playerDelegate;
    QMVMediaViewController *_presentVC;
    NSString *_videoTitle;
    UIViewController *_presentViewController;
    NSString *_singerID;
    NSString *_videoGravity;
    QMMVAVPlayer *_avPlayer;
    TADMediaManager *_adMediaManager;
    AVPlayerItem *_avPlayerItem;
    MVContainerView *_controlContainerView;
    UIView *_smallCustomUI;
    UIView *_mainScreenUI;
    NSString *_vid;
    NSMutableArray *_videoUrls;
    NSArray *_clarityList;
    UIView *_attachView;
    QMVTipView *_tipView;
    double _startPosition;
    double _downloadSpeed;
    NSTimer *_updateDownloadSpeedTimer;
    long long _currentPlayerMode;
    long long _errCode;
    NSString *_videoCachePath;
    unsigned long long _landViewReTryCount;
    NSTimer *_checkFullScreenTimer;
    AVPictureInPictureController *_pipViewController;
    unsigned long long _retryCount;
    UIButton *_returnBtn;
    long long _adStatus;
    NSTimer *_adSafeTimer;
}

+ (id)sharedInstance;
+ (_Bool)createFolderIfNotExist:(id)arg1;
+ (id)getDocumentsPath;
+ (id)getDefaultSavePath;
+ (void)initializeQMVPlayer;
@property(retain, nonatomic) NSTimer *adSafeTimer; // @synthesize adSafeTimer=_adSafeTimer;
@property(nonatomic) long long adStatus; // @synthesize adStatus=_adStatus;
@property(retain, nonatomic) UIButton *returnBtn; // @synthesize returnBtn=_returnBtn;
@property(nonatomic) unsigned long long retryCount; // @synthesize retryCount=_retryCount;
@property(nonatomic) _Bool airPlayStart; // @synthesize airPlayStart=_airPlayStart;
@property(retain, nonatomic) AVPictureInPictureController *pipViewController; // @synthesize pipViewController=_pipViewController;
@property(nonatomic) _Bool isMute; // @synthesize isMute=_isMute;
@property(nonatomic) _Bool isSwitchScreening; // @synthesize isSwitchScreening=_isSwitchScreening;
@property(retain, nonatomic) NSTimer *checkFullScreenTimer; // @synthesize checkFullScreenTimer=_checkFullScreenTimer;
@property(nonatomic) unsigned long long landViewReTryCount; // @synthesize landViewReTryCount=_landViewReTryCount;
@property(retain, nonatomic) NSString *videoCachePath; // @synthesize videoCachePath=_videoCachePath;
@property(nonatomic) _Bool isDownloadErr; // @synthesize isDownloadErr=_isDownloadErr;
@property(nonatomic) _Bool forceSeek; // @synthesize forceSeek=_forceSeek;
@property(nonatomic) _Bool isEnterBackGround; // @synthesize isEnterBackGround=_isEnterBackGround;
@property(nonatomic) _Bool hasPlaying; // @synthesize hasPlaying=_hasPlaying;
@property(nonatomic) _Bool seekAction; // @synthesize seekAction=_seekAction;
@property(nonatomic) _Bool activeAirPlay; // @synthesize activeAirPlay=_activeAirPlay;
@property(nonatomic) long long errCode; // @synthesize errCode=_errCode;
@property(nonatomic) _Bool isShowaAd; // @synthesize isShowaAd=_isShowaAd;
@property(nonatomic) long long currentPlayerMode; // @synthesize currentPlayerMode=_currentPlayerMode;
@property(nonatomic) _Bool playAfterAd; // @synthesize playAfterAd=_playAfterAd;
@property(retain, nonatomic) NSTimer *updateDownloadSpeedTimer; // @synthesize updateDownloadSpeedTimer=_updateDownloadSpeedTimer;
@property(nonatomic) double downloadSpeed; // @synthesize downloadSpeed=_downloadSpeed;
@property(nonatomic) double startPosition; // @synthesize startPosition=_startPosition;
@property(retain, nonatomic) QMVTipView *tipView; // @synthesize tipView=_tipView;
@property(nonatomic) __weak UIView *attachView; // @synthesize attachView=_attachView;
@property(retain, nonatomic) NSArray *clarityList; // @synthesize clarityList=_clarityList;
@property(retain, nonatomic) NSMutableArray *videoUrls; // @synthesize videoUrls=_videoUrls;
@property(retain, nonatomic) NSString *vid; // @synthesize vid=_vid;
@property(nonatomic) int currentMediaType; // @synthesize currentMediaType=_currentMediaType;
@property(nonatomic) int currentClarity; // @synthesize currentClarity=_currentClarity;
@property(nonatomic) __weak UIView *mainScreenUI; // @synthesize mainScreenUI=_mainScreenUI;
@property(nonatomic) __weak UIView *smallCustomUI; // @synthesize smallCustomUI=_smallCustomUI;
@property(nonatomic) _Bool isVideoFirstFrameLoaded; // @synthesize isVideoFirstFrameLoaded=_isVideoFirstFrameLoaded;
@property(retain, nonatomic) MVContainerView *controlContainerView; // @synthesize controlContainerView=_controlContainerView;
@property(nonatomic) int videoPlayerStatus; // @synthesize videoPlayerStatus=_videoPlayerStatus;
@property(retain, nonatomic) AVPlayerItem *avPlayerItem; // @synthesize avPlayerItem=_avPlayerItem;
@property(retain, nonatomic) TADMediaManager *adMediaManager; // @synthesize adMediaManager=_adMediaManager;
@property(retain, nonatomic) QMMVAVPlayer *avPlayer; // @synthesize avPlayer=_avPlayer;
@property(nonatomic) _Bool needObserverVideoLayer; // @synthesize needObserverVideoLayer=_needObserverVideoLayer;
@property(retain, nonatomic) NSString *videoGravity; // @synthesize videoGravity=_videoGravity;
@property(nonatomic) _Bool autoCleanCache; // @synthesize autoCleanCache=_autoCleanCache;
@property(nonatomic) _Bool isShowTipView; // @synthesize isShowTipView=_isShowTipView;
@property(nonatomic) _Bool switchScreenLock; // @synthesize switchScreenLock=_switchScreenLock;
@property(nonatomic) _Bool fullScreenLock; // @synthesize fullScreenLock=_fullScreenLock;
@property(nonatomic) _Bool screenLock; // @synthesize screenLock=_screenLock;
@property(retain, nonatomic) NSString *singerID; // @synthesize singerID=_singerID;
@property(nonatomic) __weak UIViewController *presentViewController; // @synthesize presentViewController=_presentViewController;
@property(nonatomic) _Bool isLive; // @synthesize isLive=_isLive;
@property(retain, nonatomic) NSString *videoTitle; // @synthesize videoTitle=_videoTitle;
@property(nonatomic) int defaultMediaFormat; // @synthesize defaultMediaFormat=_defaultMediaFormat;
@property(nonatomic) _Bool isFullScreen; // @synthesize isFullScreen=_isFullScreen;
@property(retain, nonatomic) QMVMediaViewController *presentVC; // @synthesize presentVC=_presentVC;
@property(nonatomic) __weak id <QMVMediaPlayerDelegate> playerDelegate; // @synthesize playerDelegate=_playerDelegate;
- (void).cxx_destruct;
- (void)qqliveLog:(id)arg1 state:(long long)arg2;
- (double)adManagerGetMovieTime:(id)arg1;
- (void)adManagerOnVipLoginClick:(id)arg1;
- (void)adManager:(id)arg1 onFullScreenClicked:(_Bool)arg2;
- (void)adManager:(id)arg1 onLandingViewStateChange:(_Bool)arg2;
- (void)adManager:(id)arg1 adPlayViewPresent:(long long)arg2;
- (void)adManager:(id)arg1 adBufferFinish:(long long)arg2;
- (void)adManager:(id)arg1 adPlayFailed:(long long)arg2 error:(id)arg3;
- (void)adManager:(id)arg1 adPlayFinish:(long long)arg2;
- (void)adManager:(id)arg1 adPlayReady:(long long)arg2;
- (id)adManagerCreatePlayer:(id)arg1;
- (void)resumeAdPlay;
- (void)pauseAdPlay;
- (_Bool)isPlayingAd;
- (void)updateAdRetunBtn;
- (void)switchToSmallAction;
- (void)initAdRetunBtn;
- (void)loadAdVideo:(id)arg1 coverID:(id)arg2 live:(_Bool)arg3 mediaType:(int)arg4;
- (void)removeAdShow;
- (id)getCurrentVipStr;
- (void)skipAdertisement;
- (void)advertisementEnable:(_Bool)arg1;
- (_Bool)isLandingViewAppear;
@property(readonly, nonatomic) int state;
- (unsigned long long)supportedInterfaceOrientations;
- (_Bool)isPIPSuspended;
- (_Bool)isPIPPossible;
- (_Bool)isPIPSupported;
- (_Bool)isPIPActive;
- (id)getCurrentPIPController;
- (void)stopPIPMode;
- (void)startPIPMode;
- (_Bool)shouldAutorotate;
@property(readonly, nonatomic) NSArray *mediaFormatList;
- (void)stopCaptureImageM3U8;
- (void)resumeCaptureImageM3U8;
- (void)pauseCaptureImageM3U8;
- (void)startCaptureImageM3U8:(int)arg1;
- (_Bool)hasStartCaptureImage;
- (id)getEndImage;
- (id)getVideoScreenShotAtTime:(CDStruct_1b6d18a9)arg1;
- (void)removeCustomPlayerUI:(_Bool)arg1;
- (id)customPlayerUI:(_Bool)arg1;
- (void)addCustomMainPlayerUI:(id)arg1;
- (void)addCustomSmallPlayerUI:(id)arg1;
@property(readonly, nonatomic) _Bool isAirPlayActive;
- (void)activeAirPlay:(_Bool)arg1;
- (_Bool)isPlayerMuted;
- (void)setPlayerMute:(_Bool)arg1;
- (void)forceChangeCurrentMediaFormat:(int)arg1;
- (void)playOtherMediaFormat:(int)arg1;
- (void)seekTo:(double)arg1 completionHandler:(CDUnknownBlockType)arg2;
@property(readonly, nonatomic) double playableDuration;
@property(readonly, nonatomic) double duration;
@property(readonly, nonatomic) double currentPlaybackTime;
@property(readonly, nonatomic) int currentMediaFormat;
- (void)playInterrupt;
- (void)stop;
- (void)pauseWithAD;
- (void)pause;
- (void)play;
- (void)fullScreenBlock:(_Bool)arg1;
- (void)fullScreenTimer:(id)arg1;
- (void)switchFullScreen:(_Bool)arg1 withAnimation:(_Bool)arg2;
- (void)switchFullScreen:(_Bool)arg1;
- (void)checkRotateLandscapeResult:(long long)arg1;
- (void)openMediaPlayerWithUrls:(id)arg1 durations:(id)arg2 live:(_Bool)arg3 videoID:(id)arg4 clarity:(id)arg5 mediaType:(int)arg6 startPosition:(double)arg7;
- (void)checkCachePath:(id)arg1 url:(id)arg2 fileExt:(id)arg3;
- (void)clearAllCacheFile;
- (void)dismissMediaPlayer;
- (void)presentMediaPlayerBlock;
- (void)presentMediaPlayerWithViewController:(id)arg1;
- (void)removeAttachView;
- (void)attachMediaPlayerWithView:(id)arg1 smallPlayerFrame:(struct CGRect)arg2;
- (void)setPlayerBgColor:(id)arg1;
- (void)setPlayerFrame:(struct CGRect)arg1;
- (void)setVideoPath:(id)arg1;
- (void)recoverStreamPlay;
- (unsigned long long)getFullfileSize;
- (id)hasfirstPieceCacheData;
- (id)getCachePathKey;
- (id)addRequestFileNamePrefixString:(id)arg1;
- (id)urlSpareHost;
- (id)urlExpireDate;
- (id)retryUrlFilter:(id)arg1;
- (void)downloadingSpeed:(double)arg1;
- (_Bool)isNetOk;
- (void)loadingDataError:(int)arg1 errCode:(long long)arg2;
- (void)updateDownloadingSpeed:(id)arg1;
- (void)updateTipPosition;
- (void)showErrorTips:(int)arg1 errCode:(long long)arg2;
- (void)removeTipsView;
- (void)addLoadingView;
- (void)updateCurrentCustomUI;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)periodicTimeObserver:(CDStruct_1b6d18a9)arg1;
- (_Bool)controlDownloadByPlayer;
- (id)willCreateAVURLAssetWithUrl:(id)arg1;
- (id)willPlayUrl:(id)arg1 isAD:(_Bool)arg2;
- (void)playerItemChange:(id)arg1;
- (void)playerStateChange:(int)arg1;
- (void)setPlayerView:(id)arg1;
- (void)configAVPlayer;
- (void)showErrorTipCheck:(id)arg1;
- (void)downloadDataError:(id)arg1;
- (void)downloadDataLengthChange:(id)arg1;
- (void)detectOrientation:(id)arg1;
- (void)appDidBecomeActive:(id)arg1;
- (void)appWillResignActive:(id)arg1;
- (void)appWillEnterForground:(id)arg1;
- (void)appDidEnterBackground:(id)arg1;
- (void)interruption:(id)arg1;
- (void)audioRouteChangeListenerCallback:(id)arg1;
- (void)addNotificationObserver;
- (void)initTipsView;
- (void)initPlayVC;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

