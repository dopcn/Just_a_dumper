//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "ShenMaSpeechAudioEncoderDelegate-Protocol.h"
#import "ShenMaSpeechAudioRecorderDelegate-Protocol.h"
#import "ShenMaSpeechAudioUploaderDelegate-Protocol.h"
#import "ShenMaSpeechMuteCheckerDelegate-Protocol.h"
#import "ShenMaSpeechSampleBlockDelegate-Protocol.h"

@class CADisplayLink, NSMutableData, NSString, NSTimer, ShenMaFakeRecorder, ShenMaSpeechAudioEncoder, ShenMaSpeechAudioUploader, ShenMaSpeechBlockMaker, ShenMaSpeechMuteChecker, ShenMaSpeechWatchDog;
@protocol ShenMaSpeechAudioRecorderProtocol, ShenMaSpeechRecognizerDelegate;

@interface ShenMaSpeechRecognizer : NSObject <ShenMaSpeechAudioRecorderDelegate, ShenMaSpeechAudioEncoderDelegate, ShenMaSpeechAudioUploaderDelegate, ShenMaSpeechMuteCheckerDelegate, ShenMaSpeechSampleBlockDelegate>
{
    _Bool _enableAutoEnd;
    _Bool _debugMode;
    _Bool _tipSoundComplete;
    _Bool _enableLog;
    _Bool _hasRecordingVoice;
    _Bool _recognizingVoice;
    _Bool _vadError;
    _Bool _isFirstRecording;
    _Bool _enableWatchDog;
    NSString *_appId;
    NSString *_securetKey;
    double _powerListeningDuration;
    double _outTime;
    id <ShenMaSpeechRecognizerDelegate> _delegate;
    NSString *_recordDirctoryPath;
    NSString *_pcmTrackName;
    id <ShenMaSpeechAudioRecorderProtocol> _recorder;
    ShenMaSpeechAudioEncoder *_encoder;
    ShenMaSpeechAudioUploader *_uploader;
    ShenMaSpeechMuteChecker *_muteChecker;
    ShenMaSpeechBlockMaker *_blockMaker;
    NSString *_requestId;
    CADisplayLink *_powerChangedTimer;
    NSTimer *_speechOutTimer;
    NSMutableData *_recordData;
    ShenMaSpeechWatchDog *_watchDog;
    ShenMaFakeRecorder *_fakeRecorder;
}

+ (_Bool)revertSpeechEnvironment;
+ (_Bool)hasHeadset;
+ (_Bool)setupSpeechEnvironment;
+ (id)version;
@property(retain, nonatomic) ShenMaFakeRecorder *fakeRecorder; // @synthesize fakeRecorder=_fakeRecorder;
@property(retain, nonatomic) ShenMaSpeechWatchDog *watchDog; // @synthesize watchDog=_watchDog;
@property(nonatomic) _Bool enableWatchDog; // @synthesize enableWatchDog=_enableWatchDog;
@property(retain, nonatomic) NSMutableData *recordData; // @synthesize recordData=_recordData;
@property(nonatomic) _Bool isFirstRecording; // @synthesize isFirstRecording=_isFirstRecording;
@property(nonatomic) _Bool vadError; // @synthesize vadError=_vadError;
@property(nonatomic) _Bool recognizingVoice; // @synthesize recognizingVoice=_recognizingVoice;
@property(nonatomic) _Bool hasRecordingVoice; // @synthesize hasRecordingVoice=_hasRecordingVoice;
@property(nonatomic) _Bool enableLog; // @synthesize enableLog=_enableLog;
@property(retain, nonatomic) NSTimer *speechOutTimer; // @synthesize speechOutTimer=_speechOutTimer;
@property(retain, nonatomic) CADisplayLink *powerChangedTimer; // @synthesize powerChangedTimer=_powerChangedTimer;
@property(copy, nonatomic) NSString *requestId; // @synthesize requestId=_requestId;
@property(retain, nonatomic) ShenMaSpeechBlockMaker *blockMaker; // @synthesize blockMaker=_blockMaker;
@property(retain, nonatomic) ShenMaSpeechMuteChecker *muteChecker; // @synthesize muteChecker=_muteChecker;
@property(retain, nonatomic) ShenMaSpeechAudioUploader *uploader; // @synthesize uploader=_uploader;
@property(retain, nonatomic) ShenMaSpeechAudioEncoder *encoder; // @synthesize encoder=_encoder;
@property(retain, nonatomic) id <ShenMaSpeechAudioRecorderProtocol> recorder; // @synthesize recorder=_recorder;
@property(copy, nonatomic) NSString *pcmTrackName; // @synthesize pcmTrackName=_pcmTrackName;
@property(copy, nonatomic) NSString *recordDirctoryPath; // @synthesize recordDirctoryPath=_recordDirctoryPath;
@property(nonatomic) _Bool tipSoundComplete; // @synthesize tipSoundComplete=_tipSoundComplete;
@property(nonatomic) __weak id <ShenMaSpeechRecognizerDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) _Bool debugMode; // @synthesize debugMode=_debugMode;
@property(nonatomic) _Bool enableAutoEnd; // @synthesize enableAutoEnd=_enableAutoEnd;
@property(nonatomic) double outTime; // @synthesize outTime=_outTime;
@property(nonatomic) double powerListeningDuration; // @synthesize powerListeningDuration=_powerListeningDuration;
@property(copy, nonatomic) NSString *securetKey; // @synthesize securetKey=_securetKey;
@property(copy, nonatomic) NSString *appId; // @synthesize appId=_appId;
- (void).cxx_destruct;
- (void)voiceEnd:(_Bool)arg1;
- (void)ShenMaSpeechAudioUploader:(id)arg1 part:(id)arg2;
- (void)ShenMaSpeechAudioUploader:(id)arg1 failed:(long long)arg2 smErrCode:(long long)arg3 protocol:(id)arg4;
- (void)ShenMaSpeechAudioUploader:(id)arg1 successed:(id)arg2;
- (void)blockDataReady:(id)arg1;
- (void)ShenMaSpeechAudioEncoder:(id)arg1 failed:(long long)arg2;
- (void)ShenMaSpeechAudioEncoder:(id)arg1 partBuffer:(id)arg2 requestId:(id)arg3 isLast:(_Bool)arg4;
- (void)ShenMaSpeechAudioRecorderShouldCancel:(id)arg1;
- (void)ShenMaSpeechAudioRecorder:(id)arg1 failed:(long long)arg2;
- (void)ShenMaSpeechAudioRecorder:(id)arg1 partBuffer:(id)arg2 isLastOne:(_Bool)arg3;
- (void)saveRecordDataToDisk;
- (void)appendToRecordData:(id)arg1;
- (void)speechTimeOut;
- (void)powerChangedTimeOut;
@property(nonatomic) long long connectionMode;
@property(nonatomic) double autoEndRecordingTime;
- (_Bool)isStartedWatchDog;
- (void)stopWatchDog;
- (void)startWatchDog;
- (void)setBestCount:(unsigned long long)arg1;
- (void)setProductDicParams:(id)arg1;
- (void)setProductParams:(id)arg1;
- (void)setDeviceId:(id)arg1;
- (_Bool)isWorking;
- (double)voicePower;
- (double)recordedTime;
- (void)cancel;
- (void)stopRecording;
- (_Bool)startRecording;
- (_Bool)prepare;
- (void)dealloc;
- (id)initWithAppId:(id)arg1 securetKey:(id)arg2 enableLog:(_Bool)arg3;
- (id)initWithAppId:(id)arg1 securetKey:(id)arg2 encryptor:(id)arg3 enableLog:(_Bool)arg4;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

