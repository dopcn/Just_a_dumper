//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "NSMutableCopying-Protocol.h"

@class ASIHTTPRequest, BeforeVideoAdItem, BrowserParamter, DLSeamlessAVPlayer, HttpVideoListRequestHandler, NSArray, NSDate, NSMutableArray, NSMutableDictionary, NSString, OnlineVideoRecord, RelevantInfo, ReportModel_vv, VIPDrmInfo;
@protocol OS_dispatch_queue, PlayParameInfoRequestDelegate;

@interface PlayParameInfo : NSObject <NSMutableCopying>
{
    int playerType;
    int playSourceType;
    int bSupportVideoSource;
    NSString *albumID;
    NSString *movieID;
    NSString *typeID;
    NSString *title;
    NSString *wid;
    NSString *aid;
    NSString *dzone;
    NSMutableArray *sitesArray;
    NSString *img;
    NSString *seqIntro;
    NSMutableArray *introArray;
    NSString *sequence;
    long long videoIndex;
    NSMutableArray *videoArray;
    NSString *site;
    NSMutableArray *playlist_array;
    long long preOrNextButtonDirction;
    NSString *module;
    NSString *failSequence;
    NSDate *tryDate;
    _Bool reportedTryvv;
    double timeInterval;
    NSString *vType;
    NSString *vCode;
    NSString *aCode;
    int bps;
    NSString *fps;
    NSString *resolution;
    double flr;
    HttpVideoListRequestHandler *_requestHandler;
    id <PlayParameInfoRequestDelegate> delegate;
    int screenMode3D;
    _Bool checkedHistory;
    int crackUrlType;
    long long mid;
    int is_pay;
    NSMutableDictionary *pay_info;
    NSObject<OS_dispatch_queue> *_serialQueue;
    NSMutableArray *_failSitesArray;
    _Bool _isCrackUrlError;
    NSString *changesource;
    _Bool isRunning;
    _Bool isFromDetailRecommand;
    _Bool currentSeqOpenLeftEye;
    _Bool currentSeqOpenRightEar;
    _Bool currentSeqOpen3D;
    _Bool _isAfterVideoAdvertVodChange;
    _Bool _isAutoVideoPlayEndToAfterVideoAdvert;
    _Bool _isManualSeekEndToAfterVideoAdvert;
    _Bool _isChangingDefinitionOrSite;
    _Bool _isHaveLowDefinition;
    _Bool _isHaveStandardDefinition;
    _Bool _isHaveHighDefinition;
    _Bool _isHaveSuperDefinition;
    _Bool _isHaveVIPCGQDefinition;
    _Bool _isSkipHead;
    _Bool _isSkipTail;
    _Bool _SKIP_HEAD_TAIL;
    _Bool _isCancle;
    _Bool _needRetryDownload;
    int mBeforeAdComplete;
    int mPlayParameInfoCode;
    int mShowDanmu;
    int mPlayP2PSourceProgress;
    int _changeSuccessType;
    NSString *vid;
    double preTimeInterval;
    NSDate *csTryDate;
    double parseTimeInterval;
    double loadingTimeInterval;
    NSString *pano;
    NSMutableArray *seqHas;
    long long tryNumber;
    ASIHTTPRequest *httpRequest;
    OnlineVideoRecord *_historyVideoRecord;
    NSArray *continuousPlayVideoList;
    long long continuousPlayVideoIndex;
    NSString *ugcColumnID;
    NSString *pgcerID;
    NSArray *pgcVideosPlayList;
    long long pQtpOutTime;
    double mPlayedDuration;
    VIPDrmInfo *mVIPDrmInfo;
    NSString *payMovieGuid;
    long long cstype;
    unsigned long long _currentPlayStage;
    unsigned long long _mPlayStyle;
    NSArray *_info_sites_mode;
    NSString *_info_last_seq;
    NSArray *_info_trailers;
    NSArray *_videos_is_pay;
    RelevantInfo *_relevant;
    BrowserParamter *_mBrowserParamter;
    NSString *_mCaptionXmlUrl;
    NSString *_mDefinition;
    NSString *_definitionTrying;
    NSString *_siteTrying;
    NSString *_movieType;
    NSString *_oldSite;
    NSString *_siteUserChoose;
    NSString *_definitionUserChoose;
    double _mainpart_start;
    double _mainpart_end;
    ASIHTTPRequest *_payInfoRequest;
    ASIHTTPRequest *_drmRequest;
    NSDate *_pauseDate;
    double _pauseTime;
    unsigned long long _dataFrom;
    NSString *_playCode;
    NSString *_shareUrl;
    NSString *_playbackSpeed;
    double _currentPlayRate;
    double _currentPlayTotalDuration;
    ReportModel_vv *_vvReportExtentedModel;
    BeforeVideoAdItem *_afterVideoAdvertItem;
    DLSeamlessAVPlayer *_afterVideoAdvertResDownloader;
}

@property(nonatomic) _Bool needRetryDownload; // @synthesize needRetryDownload=_needRetryDownload;
@property(retain, nonatomic) DLSeamlessAVPlayer *afterVideoAdvertResDownloader; // @synthesize afterVideoAdvertResDownloader=_afterVideoAdvertResDownloader;
@property(retain, nonatomic) BeforeVideoAdItem *afterVideoAdvertItem; // @synthesize afterVideoAdvertItem=_afterVideoAdvertItem;
@property(retain, nonatomic) ReportModel_vv *vvReportExtentedModel; // @synthesize vvReportExtentedModel=_vvReportExtentedModel;
@property(nonatomic) double currentPlayTotalDuration; // @synthesize currentPlayTotalDuration=_currentPlayTotalDuration;
@property(nonatomic) double currentPlayRate; // @synthesize currentPlayRate=_currentPlayRate;
@property(nonatomic) NSString *playbackSpeed; // @synthesize playbackSpeed=_playbackSpeed;
@property(copy, nonatomic) NSString *shareUrl; // @synthesize shareUrl=_shareUrl;
@property(copy, nonatomic) NSString *playCode; // @synthesize playCode=_playCode;
@property(nonatomic) unsigned long long dataFrom; // @synthesize dataFrom=_dataFrom;
@property(nonatomic) double pauseTime; // @synthesize pauseTime=_pauseTime;
@property(retain, nonatomic) NSDate *pauseDate; // @synthesize pauseDate=_pauseDate;
@property(nonatomic) _Bool isCancle; // @synthesize isCancle=_isCancle;
@property(retain, nonatomic) ASIHTTPRequest *drmRequest; // @synthesize drmRequest=_drmRequest;
@property(retain, nonatomic) ASIHTTPRequest *payInfoRequest; // @synthesize payInfoRequest=_payInfoRequest;
@property(nonatomic) double mainpart_end; // @synthesize mainpart_end=_mainpart_end;
@property(nonatomic) double mainpart_start; // @synthesize mainpart_start=_mainpart_start;
@property(nonatomic) _Bool SKIP_HEAD_TAIL; // @synthesize SKIP_HEAD_TAIL=_SKIP_HEAD_TAIL;
@property(nonatomic) _Bool isSkipTail; // @synthesize isSkipTail=_isSkipTail;
@property(nonatomic) _Bool isSkipHead; // @synthesize isSkipHead=_isSkipHead;
@property(nonatomic) _Bool isHaveVIPCGQDefinition; // @synthesize isHaveVIPCGQDefinition=_isHaveVIPCGQDefinition;
@property(nonatomic) _Bool isHaveSuperDefinition; // @synthesize isHaveSuperDefinition=_isHaveSuperDefinition;
@property(nonatomic) _Bool isHaveHighDefinition; // @synthesize isHaveHighDefinition=_isHaveHighDefinition;
@property(nonatomic) _Bool isHaveStandardDefinition; // @synthesize isHaveStandardDefinition=_isHaveStandardDefinition;
@property(nonatomic) _Bool isHaveLowDefinition; // @synthesize isHaveLowDefinition=_isHaveLowDefinition;
@property(nonatomic) int changeSuccessType; // @synthesize changeSuccessType=_changeSuccessType;
@property(copy, nonatomic) NSString *definitionUserChoose; // @synthesize definitionUserChoose=_definitionUserChoose;
@property(copy, nonatomic) NSString *siteUserChoose; // @synthesize siteUserChoose=_siteUserChoose;
@property(copy, nonatomic) NSString *oldSite; // @synthesize oldSite=_oldSite;
@property(nonatomic) _Bool isChangingDefinitionOrSite; // @synthesize isChangingDefinitionOrSite=_isChangingDefinitionOrSite;
@property(copy, nonatomic) NSString *movieType; // @synthesize movieType=_movieType;
@property(copy, nonatomic) NSString *siteTrying; // @synthesize siteTrying=_siteTrying;
@property(copy, nonatomic) NSString *definitionTrying; // @synthesize definitionTrying=_definitionTrying;
@property(copy, nonatomic) NSString *mDefinition; // @synthesize mDefinition=_mDefinition;
@property(copy, nonatomic) NSString *mCaptionXmlUrl; // @synthesize mCaptionXmlUrl=_mCaptionXmlUrl;
@property(retain, nonatomic) BrowserParamter *mBrowserParamter; // @synthesize mBrowserParamter=_mBrowserParamter;
@property(retain, nonatomic) RelevantInfo *relevant; // @synthesize relevant=_relevant;
@property(retain, nonatomic) NSArray *videos_is_pay; // @synthesize videos_is_pay=_videos_is_pay;
@property(retain, nonatomic) NSArray *info_trailers; // @synthesize info_trailers=_info_trailers;
@property(copy, nonatomic) NSString *info_last_seq; // @synthesize info_last_seq=_info_last_seq;
@property(retain, nonatomic) NSArray *info_sites_mode; // @synthesize info_sites_mode=_info_sites_mode;
@property(nonatomic) unsigned long long mPlayStyle; // @synthesize mPlayStyle=_mPlayStyle;
@property(nonatomic) _Bool isManualSeekEndToAfterVideoAdvert; // @synthesize isManualSeekEndToAfterVideoAdvert=_isManualSeekEndToAfterVideoAdvert;
@property(nonatomic) _Bool isAutoVideoPlayEndToAfterVideoAdvert; // @synthesize isAutoVideoPlayEndToAfterVideoAdvert=_isAutoVideoPlayEndToAfterVideoAdvert;
@property(nonatomic) _Bool isAfterVideoAdvertVodChange; // @synthesize isAfterVideoAdvertVodChange=_isAfterVideoAdvertVodChange;
@property(nonatomic) unsigned long long currentPlayStage; // @synthesize currentPlayStage=_currentPlayStage;
@property(retain, nonatomic) NSString *changesource; // @synthesize changesource;
@property(nonatomic) long long cstype; // @synthesize cstype;
@property(retain, nonatomic) NSString *payMovieGuid; // @synthesize payMovieGuid;
@property(retain, nonatomic) VIPDrmInfo *mVIPDrmInfo; // @synthesize mVIPDrmInfo;
@property(retain, nonatomic) NSMutableDictionary *pay_info; // @synthesize pay_info;
@property(nonatomic) int is_pay; // @synthesize is_pay;
@property(nonatomic) long long mid; // @synthesize mid;
@property(nonatomic) double mPlayedDuration; // @synthesize mPlayedDuration;
@property(nonatomic) int mPlayP2PSourceProgress; // @synthesize mPlayP2PSourceProgress;
@property(nonatomic) int mShowDanmu; // @synthesize mShowDanmu;
@property(nonatomic) long long pQtpOutTime; // @synthesize pQtpOutTime;
@property(nonatomic) int mPlayParameInfoCode; // @synthesize mPlayParameInfoCode;
@property(nonatomic) int mBeforeAdComplete; // @synthesize mBeforeAdComplete;
@property(retain, nonatomic) NSArray *pgcVideosPlayList; // @synthesize pgcVideosPlayList;
@property(copy, nonatomic) NSString *pgcerID; // @synthesize pgcerID;
@property(copy, nonatomic) NSString *ugcColumnID; // @synthesize ugcColumnID;
@property(nonatomic) long long continuousPlayVideoIndex; // @synthesize continuousPlayVideoIndex;
@property(retain, nonatomic) NSArray *continuousPlayVideoList; // @synthesize continuousPlayVideoList;
@property(nonatomic) _Bool currentSeqOpen3D; // @synthesize currentSeqOpen3D;
@property(nonatomic) _Bool currentSeqOpenRightEar; // @synthesize currentSeqOpenRightEar;
@property(nonatomic) _Bool currentSeqOpenLeftEye; // @synthesize currentSeqOpenLeftEye;
@property(nonatomic) int crackUrlType; // @synthesize crackUrlType;
@property(nonatomic) _Bool isFromDetailRecommand; // @synthesize isFromDetailRecommand;
@property(nonatomic) _Bool checkedHistory; // @synthesize checkedHistory;
@property(nonatomic) int screenMode3D; // @synthesize screenMode3D;
@property(retain, nonatomic) OnlineVideoRecord *_historyVideoRecord; // @synthesize _historyVideoRecord;
@property(retain, nonatomic) ASIHTTPRequest *httpRequest; // @synthesize httpRequest;
@property(nonatomic) _Bool isRunning; // @synthesize isRunning;
@property(nonatomic) long long tryNumber; // @synthesize tryNumber;
@property(nonatomic) id <PlayParameInfoRequestDelegate> delegate; // @synthesize delegate;
@property(nonatomic) _Bool reportedTryvv; // @synthesize reportedTryvv;
@property(retain, nonatomic) NSMutableArray *introArray; // @synthesize introArray;
@property(retain, nonatomic) NSString *seqIntro; // @synthesize seqIntro;
@property(retain, nonatomic) NSMutableArray *seqHas; // @synthesize seqHas;
@property(copy, nonatomic) NSString *pano; // @synthesize pano;
@property(nonatomic) double flr; // @synthesize flr;
@property(retain, nonatomic) NSString *resolution; // @synthesize resolution;
@property(retain, nonatomic) NSString *fps; // @synthesize fps;
@property(nonatomic) int bps; // @synthesize bps;
@property(retain, nonatomic) NSString *aCode; // @synthesize aCode;
@property(retain, nonatomic) NSString *vCode; // @synthesize vCode;
@property(retain, nonatomic) NSString *vType; // @synthesize vType;
@property(nonatomic) double loadingTimeInterval; // @synthesize loadingTimeInterval;
@property(nonatomic) double parseTimeInterval; // @synthesize parseTimeInterval;
@property(retain, nonatomic) NSDate *csTryDate; // @synthesize csTryDate;
@property(nonatomic) double preTimeInterval; // @synthesize preTimeInterval;
@property(nonatomic) double timeInterval; // @synthesize timeInterval;
@property(retain, nonatomic) NSDate *tryDate; // @synthesize tryDate;
@property(retain, nonatomic) NSString *failSequence; // @synthesize failSequence;
@property(retain, nonatomic) NSString *module; // @synthesize module;
@property(nonatomic) long long preOrNextButtonDirction; // @synthesize preOrNextButtonDirction;
@property(retain, nonatomic) NSMutableArray *playlist_array; // @synthesize playlist_array;
@property(retain, nonatomic) NSString *vid; // @synthesize vid;
@property(retain, nonatomic) NSString *site; // @synthesize site;
@property(retain, nonatomic) NSMutableArray *videoArray; // @synthesize videoArray;
@property(nonatomic) long long videoIndex; // @synthesize videoIndex;
@property(retain, nonatomic) NSString *sequence; // @synthesize sequence;
@property(retain, nonatomic) NSString *img; // @synthesize img;
@property(retain, nonatomic) NSMutableArray *sitesArray; // @synthesize sitesArray;
@property(retain, nonatomic) NSString *dzone; // @synthesize dzone;
@property(retain, nonatomic) NSString *aid; // @synthesize aid;
@property(retain, nonatomic) NSString *wid; // @synthesize wid;
@property(retain, nonatomic) NSString *title; // @synthesize title;
@property(retain, nonatomic) NSString *typeID; // @synthesize typeID;
@property(retain, nonatomic) NSString *movieID; // @synthesize movieID;
@property(retain, nonatomic) NSString *albumID; // @synthesize albumID;
@property(nonatomic) int bSupportVideoSource; // @synthesize bSupportVideoSource;
@property(nonatomic) int playSourceType; // @synthesize playSourceType;
@property(nonatomic) int playerType; // @synthesize playerType;
- (void)requestOtherInfoWhenHasAlbumId;
- (void)downloadAfterVideoAdvertRes;
- (_Bool)isPlayingAfterVideoAdvert;
- (void)retryDownloadAfterVideoAdvertRes;
- (_Bool)checkAfterVideoAdvert;
- (void)requestAfterVideo;
- (void)afterVideoAdvertConsult;
- (_Bool)isNeedFireAfterVideoAdvertConsult;
- (_Bool)isCacheVideo;
- (_Bool)IsContinuousPlay;
- (_Bool)IsUserVideo;
- (_Bool)IsShowXuanJi;
- (_Bool)isSameTypeWithCrackUrlType:(id)arg1;
- (void)reportQtpPlayTry:(id)arg1 index:(int)arg2;
- (_Bool)checkBeforeVideoAdvert;
- (void)requestVideoplayListInfoFinishedWithCode:(int)arg1;
- (void)resetQTPState;
- (id)serialQueue;
- (id)checkDownloadComplteRecordWithSite:(id)arg1;
- (id)getOnLinePlayRecord:(id)arg1;
- (void)checkOnLinePlayRecordWithAlbumID:(id)arg1 Seq:(id)arg2;
- (void)fillParameInfo:(id)arg1;
- (void)analysePlayParameInfoWithStormBox:(id)arg1;
- (_Bool)handleCrackVideoUrl:(id)arg1 site:(id)arg2;
- (_Bool)isNeedToBrowserPlayWithSite:(id)arg1;
- (id)getChangeResultTips;
- (_Bool)isCrackFailOfSite:(id)arg1 withDefinition:(id)arg2;
- (void)crackFailOfSite:(id)arg1 withDefinition:(id)arg2;
- (_Bool)isHaveDefinition:(id)arg1 ofSite:(id)arg2;
- (_Bool)isHaveDefinition:(id)arg1;
- (void)onlineCatpionXmlUrl:(id)arg1;
- (id)handleRequestVideoMinfo;
- (_Bool)requestVideoListIntro;
- (void)checkPlaySequenceAndHistory;
- (id)handleRequestVideoList;
- (void)cancle;
- (void)requestVideoplayListInfo;
- (void)constructLocalPlaylist;
- (id)getLocalPlayVideoUrlList:(double *)arg1;
- (double)getLocalPlayedDuration:(id)arg1;
- (_Bool)constructNormalUrlPlayList;
- (void)setDefinitionFailWithCurrentSite;
- (int)autoSwitchSite;
- (_Bool)autoSwitchMovieType;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)init;
- (void)requestDrmInfoFailed:(id)arg1;
- (void)requestDrmInfoSuccess:(id)arg1;
- (void)requestDrmInfo:(id)arg1 param:(id)arg2;
- (void)requestDrmInfoWithVID:(id)arg1;
- (void)requestDrmInfo:(id)arg1;
- (void)requestPayInfoFailed:(id)arg1;
- (void)requestPayInfoSuccess:(id)arg1;
- (void)requestPayInfo;
- (id)constructPGCVideos:(id)arg1;
- (void)handlePGCVideosList;
- (id)constructChannelVideoList:(id)arg1;
- (id)constructNewsVideoList:(id)arg1;
- (id)handleRequestUGCVideoList;
- (_Bool)serverCrackVideoUrl:(id)arg1;
- (_Bool)clientCrackVideoUrl:(id)arg1;
- (_Bool)handleCrackVideoUrl:(id)arg1;

@end

