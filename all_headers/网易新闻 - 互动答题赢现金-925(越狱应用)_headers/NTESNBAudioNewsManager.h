//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class DOUAudioStreamer, NSArray, NSString, NSTimer, NTESNetRequest;
@protocol NTESNBAudioNewsManagerDelegate, NTESNBHDAudioNewsManagerDelegate, SDWebImageOperation;

@interface NTESNBAudioNewsManager : NSObject
{
    NTESNetRequest *_audioListRequest;
    NTESNetRequest *_audioInfoRequest;
    id <SDWebImageOperation> _coverDownloadOperation;
    DOUAudioStreamer *_streamer;
    NSTimer *_timer;
    long long _retryCount;
    _Bool _isHistoryList;
    NSArray *_tracks;
    long long _currentIndex;
    NSString *_playListTitle;
    NSArray *_playList;
    id <NTESNBAudioNewsManagerDelegate> _delegate;
    id <NTESNBAudioNewsManagerDelegate> _miniPlayerDelegate;
    id <NTESNBHDAudioNewsManagerDelegate> _hdDelegate;
}

+ (id)sharedManager;
@property(nonatomic) __weak id <NTESNBHDAudioNewsManagerDelegate> hdDelegate; // @synthesize hdDelegate=_hdDelegate;
@property(nonatomic) __weak id <NTESNBAudioNewsManagerDelegate> miniPlayerDelegate; // @synthesize miniPlayerDelegate=_miniPlayerDelegate;
@property(nonatomic) __weak id <NTESNBAudioNewsManagerDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) _Bool isHistoryList; // @synthesize isHistoryList=_isHistoryList;
@property(retain, nonatomic) NSArray *playList; // @synthesize playList=_playList;
@property(retain, nonatomic) NSString *playListTitle; // @synthesize playListTitle=_playListTitle;
@property(readonly, nonatomic) long long currentIndex; // @synthesize currentIndex=_currentIndex;
@property(retain, nonatomic) NSArray *tracks; // @synthesize tracks=_tracks;
- (void).cxx_destruct;
- (void)audioMiniPlayerPlaying;
- (void)saveRecentHistory:(id)arg1;
- (void)clearAllRecentPlayedChannelsHistory;
- (void)removeRecentPlayedChannel:(id)arg1;
- (void)cacheRecentPlayedChannel:(id)arg1;
- (id)recentPlayedChannelsHistory;
- (_Bool)containsTrack:(id)arg1;
- (id)currentTrack;
- (_Bool)isPLayingTrack:(id)arg1;
- (_Bool)isPlayingTrackID:(id)arg1;
- (id)updatePlayListWithTrack:(id)arg1;
- (id)firstTrackFromDictionary:(id)arg1;
- (void)insertData:(id)arg1 toCacheFile:(id)arg2;
- (void)insertAudioNewsChannelListWithCategoryId:(id)arg1 data:(id)arg2;
- (void)insertAudioNewsCategoryIndexToCache:(id)arg1;
- (id)verifiedAudioNewsCategoriesFromOrigin:(id)arg1;
- (id)downloadAudioNewsListWithTID:(id)arg1 offset:(long long)arg2 len:(long long)arg3 completion:(CDUnknownBlockType)arg4 failure:(CDUnknownBlockType)arg5;
- (id)downloadAudioNewsInfoWithDocID:(id)arg1 completion:(CDUnknownBlockType)arg2 failure:(CDUnknownBlockType)arg3;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)_updatePlayListStatus:(unsigned long long)arg1;
- (void)_updateBufferingStatus;
- (void)_updateStatus;
- (void)_timerAction:(id)arg1;
- (void)_setupHintForStreamer;
- (void)_cleanStreamer;
- (void)updateLockScreenWithTrack:(id)arg1;
- (void)handleRemoteControlEvent:(id)arg1;
- (_Bool)isPaused;
- (_Bool)isPlaying;
- (void)setCurrentPlayTime:(double)arg1;
- (void)stop;
- (void)playPrevious;
- (void)playNext;
- (void)playListTrackAtIndex:(long long)arg1;
- (void)pauseOrContinue;
- (void)pause;
- (void)play;
- (void)playAtIndex:(long long)arg1;
- (void)_updateUIWithCoverImage;
- (void)_updateCoverUIForFirstTime:(_Bool)arg1;
- (void)clean;
- (void)triggleAllUIDelegates;
- (void)updateWithPlayListIndex:(long long)arg1;
- (void)cancelInfoAndListRequestsForTrackIDUpdate;
- (void)updateWithTrackID:(id)arg1 loadHistoryList:(_Bool)arg2;
- (void)updateWithTracks:(id)arg1 currentIndex:(long long)arg2;
- (void)dealloc;
- (id)init;

@end

