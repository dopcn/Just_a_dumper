//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

#import "KSAudioPlayerProtocol-Protocol.h"
#import "ProtocolHostDelegate-Protocol.h"
#import "QMEmptyAudioPlayerDelegate-Protocol.h"

@class KSSongInfo, ListBase, NSString, QMEmptyAudioPlayer, QMSongInfo;
@protocol KSAudioPlayerDelegate;

@interface QPlayPlayer : NSObject <ProtocolHostDelegate, QMEmptyAudioPlayerDelegate, KSAudioPlayerProtocol>
{
    id <KSAudioPlayerDelegate> _delegate;
    _Bool _manualProcessInterrup;
    _Bool _pauseOnHeadPhoneOut;
    double _songDuration;
    unsigned long long _playerState;
    ListBase *lastQPlaylist;
    double delaySeekPos;
    unsigned long long delaySeekSongId;
    _Bool isPlayListChanged;
    double firstBufferTime;
    double startBufTimeStamp;
    _Bool isFirstBuffering;
    double startPlayTimeStamp;
    double continuousPlayTime;
    QMEmptyAudioPlayer *emptyPlayer;
    QMSongInfo *_currentQMSong;
}

@property(retain, nonatomic) QMSongInfo *currentQMSong; // @synthesize currentQMSong=_currentQMSong;
@property(nonatomic) _Bool pauseOnHeadPhoneOut; // @synthesize pauseOnHeadPhoneOut=_pauseOnHeadPhoneOut;
@property(nonatomic) _Bool manualProcessInterrup; // @synthesize manualProcessInterrup=_manualProcessInterrup;
@property(nonatomic) __weak id <KSAudioPlayerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)onEmptyAudioPlayer:(id)arg1 StatusChanged:(unsigned long long)arg2;
- (void)destroyEmptyPlayer;
- (void)createEmptyPlayer:(id)arg1;
- (void)hostCallBackWithWorkProtocol:(id)arg1 protocolError:(id)arg2;
- (void)resetCalculatePlayTime;
- (void)pauseCalculatePlayTime;
- (void)startCalculatePlayTime;
- (void)resetHourglass;
- (void)tryGetLyric:(id)arg1;
- (void)trySyncPlayingSong;
- (void)onSpeakerCurrentTrackChange:(id)arg1;
- (void)onQPlayerStateChange:(unsigned long long)arg1 track:(id)arg2;
- (void)onCurrentQPlaySpeakerChange:(id)arg1;
- (int)getCurrentPlayingSongRateType;
- (void)tryDelaySeek:(unsigned long long)arg1;
- (void)setSeekTimeAfterPlay:(double)arg1;
- (void)setStatus:(unsigned long long)arg1 qplayTrack:(id)arg2;
- (_Bool)isSameWithPlayingList;
- (void)clearPlayList;
- (void)onNotifyNextSongsQueueChanged:(id)arg1;
- (void)onNofityLogout:(id)arg1;
- (void)playListDidChange:(id)arg1;
- (_Bool)updatePlayList:(unsigned long long)arg1;
- (_Bool)playSongInQueue:(id)arg1;
- (_Bool)playSingleSong:(id)arg1;
- (_Bool)play:(id)arg1 seekTime:(unsigned long long)arg2;
- (_Bool)play:(id)arg1;
- (void)seek:(double)arg1;
- (void)resume;
- (void)pause;
- (void)stop;
@property(readonly, nonatomic) KSSongInfo *curSong;
- (unsigned long long)errType;
- (id)errDetail;
- (id)dataProviderDetail;
- (double)firstBufTime;
@property(readonly, nonatomic) double playTimeWithNoPause;
@property(readonly, nonatomic) double curTime;
@property(readonly, nonatomic) unsigned int secondCacheCnt;
@property(readonly, nonatomic) double cacheProgress;
@property(readonly, nonatomic) double duration;
@property(readonly, nonatomic) unsigned long long status;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

