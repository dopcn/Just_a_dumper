//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

@interface QZEVVideoTools : NSObject
{
}

+ (CDStruct_1b6d18a9)durationOfVideoAtPath:(id)arg1 timeRange:(CDStruct_e83c9415)arg2;
+ (CDStruct_1b6d18a9)durationOfAsset:(id)arg1 timeRange:(CDStruct_e83c9415)arg2;
+ (id)getDeviceName;
+ (id)authorInfo;
+ (id)metaDataForAsset:(id)arg1;
+ (void)saveOutputVideoWithAsset:(id)arg1 toFilePath:(id)arg2 videoSettings:(id)arg3 audioSettings:(id)arg4 audioMix:(id)arg5 completion:(CDUnknownBlockType)arg6;
+ (void)saveOutputVideoWithAsset:(id)arg1 toFilePath:(id)arg2 completion:(CDUnknownBlockType)arg3;
+ (id)mergeVideoFile:(id)arg1 andAudioFile:(id)arg2 videoSpeed:(double)arg3;
+ (id)videoMaskImageWithModel:(id)arg1 size:(struct CGSize)arg2;
+ (id)makeCoverImageForAsset:(id)arg1 atTime:(double)arg2;
+ (id)makeCoverImageForVideoWithPath:(id)arg1 atTime:(double)arg2;
+ (id)lastFrameOfVideo:(id)arg1;
+ (id)makeImageWithImageGenerator:(id)arg1 atTime:(CDStruct_1b6d18a9)arg2;
+ (struct CGSize)resolutionForVideoSize:(struct CGSize)arg1 limitedByResolution:(long long)arg2;
+ (struct CGSize)resolutionForVideoSize:(struct CGSize)arg1 limitedByLongestEdge:(double)arg2;
+ (id)videoCompositionWithAsset:(id)arg1 videoSetting:(id)arg2;
+ (id)assetCompositionWithVideoItems:(id)arg1;
+ (id)assetCompositionWithVideoItems:(id)arg1 containsMediaTypes:(id)arg2;
+ (struct CGAffineTransform)preferredTransformForTrack:(id)arg1 renderingToSize:(struct CGSize)arg2;
+ (struct CGSize)preferredRenderSizeForTrack:(id)arg1;
+ (id)instructionOfTransform:(struct CGAffineTransform)arg1 forTrack:(id)arg2 timeRange:(CDStruct_e83c9415)arg3;
+ (_Bool)insertTimeRange:(CDStruct_e83c9415)arg1 ofTrack:(id)arg2 toCompositionTrack:(id)arg3 atTime:(CDStruct_1b6d18a9)arg4 scaleToDuration:(CDStruct_1b6d18a9)arg5;
+ (_Bool)mediaTypes:(id)arg1 containsMediaType:(id)arg2;
+ (void)printParamsOfVideo:(id)arg1;
+ (id)exportVideoWithVideoItem:(id)arg1 videoSetting:(id)arg2 outputFile:(id)arg3 completion:(CDUnknownBlockType)arg4;
+ (void)finishExportingVideoWithOutputFile:(id)arg1 error:(id)arg2 callback:(CDUnknownBlockType)arg3;
+ (_Bool)isValidVideoOutputSettings:(id)arg1;

@end

