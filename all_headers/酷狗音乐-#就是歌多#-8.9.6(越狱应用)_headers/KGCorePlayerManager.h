//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "KGPlayerManager.h"

#import "KGCorePlayerListenerProtocol-Protocol.h"
#import "KGCoreRecordListenerProtocol-Protocol.h"

@class EQValue, IpodDecoder, KGAVPlayer, NSLock, NSNumber, NSRecursiveLock, NSString, NSTimer, TypeInfo;

@interface KGCorePlayerManager : KGPlayerManager <KGCorePlayerListenerProtocol, KGCoreRecordListenerProtocol>
{
    void *_recordcontroller;
    NSTimer *_fmTimer;
    double _fmFlow;
    double _tempFmFlow;
    float _volume;
    int _audioType;
    struct PlayController *_playC;
    struct RecordController *_recorderC;
    struct KGCorePlayerListener *_listener;
    struct KGCorePlayerListener *_recordInnerPlayerListener;
    struct KGCoreRecordListener *_recordListener;
    NSRecursiveLock *_playcontrollerLock;
    NSLock *_recordcontrollerLock;
    TypeInfo *_typeinfo;
    IpodDecoder *_ipodDecoder;
    KGAVPlayer *_avplayer;
}

+ (void)exchangeClass:(Class)arg1 selector:(SEL)arg2 withClass:(Class)arg3 selector:(SEL)arg4;
@property(retain, nonatomic) KGAVPlayer *avplayer; // @synthesize avplayer=_avplayer;
@property(retain, nonatomic) IpodDecoder *ipodDecoder; // @synthesize ipodDecoder=_ipodDecoder;
@property(retain, nonatomic) TypeInfo *typeinfo; // @synthesize typeinfo=_typeinfo;
- (void).cxx_destruct;
- (void)dealloc;
- (void)pre_dealloc;
- (void)removeListener;
- (void)setFadeInEnable:(_Bool)arg1;
- (int)audioType;
- (void)setDecodeInfo:(void *)arg1;
- (void *)getAudioParam;
- (void)setAudioNoCache:(_Bool)arg1;
- (void)setPlayVideoIsActive:(_Bool)arg1;
- (void)setPlaySpeedParam:(double)arg1 normalCacheTime:(double)arg2 minSpeed:(int)arg3 normalSpeed:(int)arg4 useSpeedUp:(_Bool)arg5;
- (void)setRenderRedisplayConfig:(int)arg1 fms:(int)arg2 bms:(int)arg3 ams:(int)arg4;
- (void)setStuckTimeOut:(int)arg1 video:(int)arg2;
- (void)getproxySize;
- (_Bool)addAudioEffect:(void *)arg1 trackIndex:(int)arg2;
- (void)setMoveStep:(int)arg1 trackindex:(int)arg2;
- (void)setCanUseSeekByte:(_Bool)arg1;
- (void)removeAudioEffect:(void *)arg1 trackIndex:(int)arg2;
- (void)setAudioPipe:(void *)arg1 andType:(int)arg2;
- (void)setAudioPipe:(void *)arg1;
- (void)setRecordInnerPlayerListener:(void *)arg1;
- (void)setRecordListener:(void *)arg1;
- (void)setListener:(void *)arg1;
- (void)startConvertForBeautifyVoice:(id)arg1 destPath:(id)arg2;
- (void)startConvertWithSourcePath:(id)arg1 andDestPath:(id)arg2 formatType:(int)arg3 voicePath:(id)arg4;
- (void)startConvertWithSourcePath:(id)arg1 andDestPath:(id)arg2 formatType:(int)arg3 voicePath:(id)arg4 unSourcePlayStarts:(id)arg5 unSourcePlayends:(id)arg6 startsRecord:(id)arg7 endsRecord:(id)arg8;
- (void)startConvertWithSourcePath:(id)arg1 andDestPath:(id)arg2;
- (void)setRenderContext:(void *)arg1;
- (int)render;
- (void)setAreaWithXValue:(int)arg1 yValue:(int)arg2 widthValue:(int)arg3 andHeightValue:(int)arg4;
- (void)setDisplay;
- (_Bool)isExtendAudioTrackEnabled;
- (void)enableExtendAudioTrack:(_Bool)arg1;
- (int)getAudioTrackCount;
- (void)setVoiceMoveStep:(int)arg1 track:(int)arg2;
- (void)setVoiceMoveStep:(int)arg1;
- (void)setBalance:(float)arg1 rValue:(float)arg2;
- (void)setVolumeRate:(float)arg1 andPrate:(float)arg2;
- (void)setVolume:(float)arg1 andTrackIndex:(int)arg2;
- (float)getVolumnParameters;
- (void)setVolumeRatio:(double)arg1;
- (void)setPersistentVolume:(float)arg1;
- (void)setVolume:(float)arg1;
- (void)setLoopCount:(int)arg1;
- (int)getLoopCount;
- (void)setRTMPTimeout:(int)arg1;
- (void)setProxyServer:(id)arg1 andPort:(int)arg2;
- (void)setUnicomProxy:(id)arg1;
- (unsigned long long)getStatus;
- (float)volume;
- (double)rtmpAccompanyPosition;
- (double)position;
- (double)duration;
- (void)sendCommand:(unsigned long long)arg1;
- (_Bool)isPlaying;
- (void)seekTo:(double)arg1;
- (void)stop;
- (void)pause;
- (void)start;
- (void)prepareAsync;
- (void)setDataSourceWithPath:(id)arg1 typeInfo:(id)arg2 audioType:(int)arg3 start:(double)arg4 end:(double)arg5 withSample_rate:(int)arg6 withChannels:(int)arg7;
- (void)setDataSourceForChorus:(id)arg1 typeInfo:(id)arg2 startPosition:(long long)arg3 endPosition:(long long)arg4 unSourcePlayStarts:(id)arg5 unSourcePlayends:(id)arg6 startsRecord:(id)arg7 endsRecord:(id)arg8;
- (void)setDataSource:(void *)arg1 typeInfo:(id)arg2 audioType:(int)arg3 start:(double)arg4 end:(double)arg5;
- (void)setDataSource:(void *)arg1 typeInfo:(id)arg2 start:(double)arg3 end:(double)arg4;
- (void)setDataSource:(void *)arg1 typeInfo:(id)arg2;
- (void)setDataSourceWithPath:(id)arg1 typeInfo:(id)arg2 audioType:(int)arg3 start:(double)arg4 end:(double)arg5;
- (void)setDataSourceWithPath:(id)arg1 typeInfo:(id)arg2 start:(double)arg3 end:(double)arg4;
- (void)setDataSourceWithPath:(id)arg1 typeInfo:(id)arg2;
- (void)recordMessageChange:(long long)arg1 extOne:(int)arg2 extTwo:(int)arg3 extra:(const char *)arg4 extraLength:(int)arg5;
- (void)playerLoadState:(int)arg1;
- (void)playerProgressPercent:(id)arg1 current:(id)arg2 total:(id)arg3;
- (void)playerPlayablePercent:(id)arg1 current:(id)arg2 total:(id)arg3;
- (void)playerMessageChange:(unsigned long long)arg1 extOne:(int)arg2 extTwo:(int)arg3 extra:(const char *)arg4 extraLength:(int)arg5 userInfo:(id)arg6;
- (const char *)MyUTF8String:(id)arg1;
- (void)deleteRecordC;
- (void)deletePlayC;
- (void)initPlayController;
- (id)init;
@property(retain, nonatomic) NSNumber *trackPlayerBeginTimeSeque;
- (long long)currentPlaySongSize:(id)arg1;
- (id)currentPlaySongHash:(id)arg1;
- (long long)getKGTrackInfoDownloaded;
- (id)getKGTrackInfoExtString;
- (id)getKGTrackMediaProbeInfo;
- (id)getKGTrackMediaInfo;
- (id)genWorker;
- (void)playerMessageChangeStatic:(unsigned long long)arg1 extOne:(int)arg2 extTwo:(int)arg3 extra:(const char *)arg4 extraLength:(int)arg5 userInfo:(id)arg6;
- (id)getMetaInfo;
- (void)removeRecordListener;
- (void)playEffectFile:(const char *)arg1;
- (void)resumePlay;
- (void)setRecordPathByStream:(const char *)arg1 farmattype:(int)arg2 streamBase:(void *)arg3 startMs:(long long)arg4 endMs:(long long)arg5;
- (void)addAudioEffectForMixer:(void *)arg1 trackIndex:(int)arg2;
- (void)setRecordContextType:(int)arg1;
- (void)setSmartAccompany:(_Bool)arg1;
- (void)setPlayVolumeForZegoMixer:(int)arg1;
- (void)zegoCallback:(char *)arg1 size:(int)arg2 samplerate:(int)arg3 channels:(int)arg4;
- (void)setRecordByZEGO:(int)arg1 channels:(int)arg2;
- (_Bool)isRecording;
- (int)getUVdB;
- (void)setEarBack:(_Bool)arg1;
- (void)setErrBackVolume:(float)arg1;
- (void)setRecordAudioPipe:(void *)arg1;
- (void)setRealPause:(_Bool)arg1;
- (void)setVivoFlag:(_Bool)arg1;
- (void)enableScoring:(_Bool)arg1;
- (void)getAudioScore:(int *)arg1;
- (int)immediatelyDisplay;
- (void)initGetScore:(int *)arg1 size:(int)arg2;
- (void)render:(void *)arg1 size:(int)arg2 widthTexture:(int)arg3 heightTexture:(int)arg4;
- (void)setRecodeDisplayArea:(int)arg1 y:(int)arg2 width:(int)arg3 height:(int)arg4;
- (char *)allocPicBuffer:(int)arg1;
- (void)initRecordVideo:(_Bool)arg1;
- (void)setPlaySpeed:(int)arg1;
- (double)getVolumeRatio;
- (void)resumePartRecord:(long long)arg1 destpath:(const char *)arg2 hasvivokaraoke:(_Bool)arg3;
- (void)pausePartRecord;
- (void)setFilterType:(int)arg1 enablegaussfilter:(_Bool)arg2;
- (void)setRotation:(int)arg1 flipHorizontal:(int)arg2 flipVertical:(int)arg3;
- (_Bool)isAudioTrackEnabled:(int)arg1;
- (void)enableAudioTrack:(int)arg1 trackindex:(int)arg2;
- (_Bool)isExtendAccompanyAudioTrackEnabled;
- (void)enableAccompanyExtendAudioTrack:(_Bool)arg1;
- (int)getAccompanyAudioTrackCount;
- (void)setHeadsetMode:(_Bool)arg1;
- (_Bool)addRecorderAudioEffect:(void *)arg1;
- (_Bool)addAccompanyAudioEffect:(void *)arg1 trackindex:(int)arg2;
- (void)setMusicVolumeForKuqunRtmp:(int)arg1 levelVolume:(int)arg2;
- (void)setRecordVolumeForMixer:(int)arg1;
- (void)setPlayVolumeForMixer:(int)arg1;
- (void)setVolumeAndTrackIndex:(float)arg1 index:(int)arg2;
- (float)getRecordVolumeRate;
- (float)getPlayVolumeRate;
- (long long)accompanyDuration;
- (long long)accompanyPosition;
- (void)stopPlayAccompaniment;
- (void)seekToPlayAccompaniment:(long long)arg1;
- (unsigned long long)getStatusPlayAccompaniment;
- (void)pausePlayAccompaniment;
- (void)startPlayAccompaniment;
- (void)prepareAsyncPlayAccompaniment;
- (void)sendMetaDataForRtmp:(const char *)arg1;
- (void)startAccompanyForRtmp;
- (void)setAccompanyForRtmp:(const char *)arg1;
- (void)setStreamBase:(void *)arg1 typeInfo:(id)arg2 startMs:(long long)arg3 endMs:(long long)arg4;
- (void)setDataSourceForRecord:(const char *)arg1 startMs:(long long)arg2 endMs:(long long)arg3;
- (void)setDataSourceForRecord:(const char *)arg1;
- (void)stopRecord;
- (void)resumeRecord:(_Bool)arg1;
- (void)resumeRecord;
- (void)pauseRecord;
- (void)startRecord:(_Bool)arg1;
- (void)startRecord;
- (void)prepareRecordAsyn;
- (void)setRecordPathWithRecordParam:(void *)arg1;
- (void)setRecordPath:(const char *)arg1 formattype:(int)arg2 accompany:(const char *)arg3 startMs:(long long)arg4 endMs:(long long)arg5;
- (void)setRecordPath:(const char *)arg1 formattype:(int)arg2;
- (void *)getRecordController;
- (int)getRecordStatus;
- (void)isMute:(_Bool)arg1;
- (void)setComment:(char *)arg1;
- (void)setLowendDevice;
- (void)initRecordController;
- (void)setOperationQueue:(id)arg1;
- (id)operationQueue;
- (void)setEffectLock:(id)arg1;
- (id)effectLock;
- (void)setVirtualizerEffect:(struct VirtualizerEffect *)arg1;
- (struct VirtualizerEffect *)virtualizerEffect;
- (void)setViper3dEffect:(struct ViPER3DEffect *)arg1;
- (struct ViPER3DEffect *)viper3dEffect;
- (void)setViper4androidEffect:(struct Viper4androidEffect *)arg1;
- (struct Viper4androidEffect *)viper4androidEffect;
- (void)setIireq10Effect:(struct Iireq10Effect *)arg1;
- (struct Iireq10Effect *)iireq10Effect;
- (void)setBassEffect:(struct BassEffect *)arg1;
- (struct BassEffect *)bassEffect;
- (void)setSurroundEffect:(struct SurroundEffect *)arg1;
- (struct SurroundEffect *)surroundEffect;
- (void)setIireq:(struct IIREqualizer *)arg1;
- (struct IIREqualizer *)iireq;
- (void)setVolumeBoostEffect:(struct VolumeBoostEffect *)arg1;
- (struct VolumeBoostEffect *)volumeBoostEffect;
- (void)setOldSurroundEffect:(struct OldSurroundEffect *)arg1;
- (struct OldSurroundEffect *)oldSurroundEffect;
- (void)setBassBoostEffect:(struct BassBoostEffect *)arg1;
- (struct BassBoostEffect *)bassBoostEffect;
@property(nonatomic) _Bool virtualizer;
@property(nonatomic) _Bool viper3d;
@property(nonatomic) _Bool viper4Android;
@property(nonatomic) _Bool dynamicBass;
@property(nonatomic) _Bool clearVoice;
@property(nonatomic) _Bool useLibAudioEffx;
@property(nonatomic) double volumeBoostEnergy;
@property(nonatomic) double balance;
@property(nonatomic) double bass;
@property(nonatomic) double surround;
@property(retain, nonatomic) EQValue *eqValue;
- (_Bool)writeVPFWithParameter:(id)arg1 WithVpfFileUrl:(id)arg2;
- (void)p_getOutputVolumeWithVPFFileWriter:(struct VPFFileWriter *)arg1 VPFParameter:(id)arg2;
- (void)p_getTUBEWithVPFFileWriter:(struct VPFFileWriter *)arg1 VPFParameter:(id)arg2;
- (void)p_getCUREWithVPFFileWriter:(struct VPFFileWriter *)arg1 VPFParameter:(id)arg2;
- (void)p_getAGCWithVPFFileWriter:(struct VPFFileWriter *)arg1 VPFParameter:(id)arg2;
- (void)p_getFetcompWithVPFFileWriter:(struct VPFFileWriter *)arg1 VPFParameter:(id)arg2;
- (void)p_getFirEqWithVPFFileWriter:(struct VPFFileWriter *)arg1 VPFParameter:(id)arg2;
- (void)p_getREVBWithVPFFileWriter:(struct VPFFileWriter *)arg1 VPFParameter:(id)arg2;
- (void)p_getVHEWithVPFFileWriter:(struct VPFFileWriter *)arg1 VPFParameter:(id)arg2;
- (void)p_getColmWithVPFFileWriter:(struct VPFFileWriter *)arg1 VPFParameter:(id)arg2;
- (void)p_getViperClarityWithVPFFileWriter:(struct VPFFileWriter *)arg1 VPFParameter:(id)arg2;
- (void)p_getViperBassWithVPFFileWriter:(struct VPFFileWriter *)arg1 VPFParameter:(id)arg2;
- (id)getVPFParameterWithVpfFileUrl:(id)arg1;
- (void)setViper3dDistance:(int)arg1;
- (void)setViper3dRotationSpeed:(int)arg1;
- (void)ViPERCommandSetAsync:(int)arg1 withParam1:(int)arg2 withFloatArrParam2:(float *)arg3 withFloatArrParam3:(float *)arg4;
- (void)ViPERCommandSetAsync:(int)arg1 withParam1:(int)arg2 withCharArrParam2:(char *)arg3;
- (void)ViPERCommandSetAsync:(int)arg1 withParam1:(int)arg2 withIntParam2:(int)arg3;
- (void)ViPERCommandSetAsync:(int)arg1 withParam1:(int)arg2;
- (void)resetV4ADefault;
- (void)currentViper4AndroidVpfAndIrsFile:(id *)arg1 irsFilePtr:(id *)arg2;
- (_Bool)setViper4AndroidWithVpfAndIrsFile:(id)arg1 irsFile:(id)arg2;
- (void)setWyfParam:(double)arg1 radio:(double)arg2 maxGain:(double)arg3;
- (void)processEffect:(struct AudioEffect *)arg1;
- (void)resumeViperEffect;
- (void)resumeSettingEQ;
- (void)removeAllEffect;
- (void)addAllEffect;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

