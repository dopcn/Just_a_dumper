//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

@class MirrorOpenGLFrameBuffer, NSMutableArray;
@protocol MirrorOpenGLProtocol;

@interface MirrorOpenGLNode : NSObject
{
    NSMutableArray *_targets;
    NSMutableArray *_targetTextureIndices;
    MirrorOpenGLFrameBuffer *_outputFramebuffer;
    _Bool _allTargetsWantMonochromeData;
    _Bool _usingNextFrameForImageCapture;
    struct CGSize _inputTextureSize;
    struct CGSize _cachedMaximumOutputSize;
    struct CGSize _forcedMaximumSize;
    _Bool _overrideInputSize;
    _Bool _shouldIgnoreUpdatesToThisTarget;
    _Bool _enabled;
    id <MirrorOpenGLProtocol> _targetToIgnoreForUpdates;
    CDUnknownBlockType _frameProcessingCompletionBlock;
    struct MirrorTextureOptions _outputTextureOptions;
}

@property(nonatomic) _Bool enabled; // @synthesize enabled=_enabled;
@property(nonatomic) _Bool shouldIgnoreUpdatesToThisTarget; // @synthesize shouldIgnoreUpdatesToThisTarget=_shouldIgnoreUpdatesToThisTarget;
@property(copy, nonatomic) CDUnknownBlockType frameProcessingCompletionBlock; // @synthesize frameProcessingCompletionBlock=_frameProcessingCompletionBlock;
@property(nonatomic) struct CGSize cachedMaximumOutputSize; // @synthesize cachedMaximumOutputSize=_cachedMaximumOutputSize;
@property(nonatomic) id <MirrorOpenGLProtocol> targetToIgnoreForUpdates; // @synthesize targetToIgnoreForUpdates=_targetToIgnoreForUpdates;
@property(readonly, nonatomic) NSMutableArray *targetTextureIndices; // @synthesize targetTextureIndices=_targetTextureIndices;
@property(retain, nonatomic) MirrorOpenGLFrameBuffer *outputFramebuffer; // @synthesize outputFramebuffer=_outputFramebuffer;
@property(nonatomic) struct MirrorTextureOptions outputTextureOptions; // @synthesize outputTextureOptions=_outputTextureOptions;
- (void).cxx_destruct;
- (void)dealloc;
- (_Bool)shouldUpdatesSimpleBufferToThisTarget;
- (void)forceProcessingAtSizeRespectingAspectRatio:(struct CGSize)arg1;
- (void)forceProcessingAtSize:(struct CGSize)arg1;
- (struct CGImage *)newCGImageFromCurrentlyProcessedOutput;
- (void)removeAllTargets;
- (void)removeTarget:(id)arg1;
- (void)addTarget:(id)arg1 atTextureLocation:(long long)arg2;
- (void)addTarget:(id)arg1;
- (void)setInputFramebufferForTarget:(id)arg1 atIndex:(long long)arg2;
- (void)removeOutputFramebuffer;
- (id)framebufferForOutput;
- (id)targets;
- (id)init;

@end

