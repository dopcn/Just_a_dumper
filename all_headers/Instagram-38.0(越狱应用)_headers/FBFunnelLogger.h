//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class FBFunnelRegistry, FBFunnelReliabilityStatsCollector, NSMutableDictionary, NSString;
@protocol FBFunnelLoggerDecider, FBFunnelLoggerIntegrationDelegate, OS_dispatch_queue;

@interface FBFunnelLogger : NSObject
{
    NSObject<OS_dispatch_queue> *_queue;
    NSMutableDictionary *_funnels;
    id <FBFunnelLoggerIntegrationDelegate> _funnelLoggerIntegrationDelegate;
    FBFunnelRegistry *_funnelRegistry;
    FBFunnelReliabilityStatsCollector *_statsCollector;
    NSString *_persistedFunnelPath;
    NSString *_persistedFunnelDirectoryPath;
    _Bool _fbFunnelDataLossEnabled;
    id <FBFunnelLoggerDecider> _funnelLoggerDecider;
}

+ (id)sharedFunnelLogger;
@property(nonatomic) _Bool fbFunnelDataLossEnabled; // @synthesize fbFunnelDataLossEnabled=_fbFunnelDataLossEnabled;
@property(nonatomic) __weak id <FBFunnelLoggerDecider> funnelLoggerDecider; // @synthesize funnelLoggerDecider=_funnelLoggerDecider;
- (void).cxx_destruct;
- (_Bool)setRandomTestingPersistedFilePath;
- (id)internalQueue;
- (void)_reportNilFunnelProperties:(id)arg1;
- (void)_reportNilValue:(id)arg1 actionName:(id)arg2 funnel:(id)arg3;
- (void)_reportInvalidValueType:(id)arg1 actionName:(id)arg2 funnel:(id)arg3;
- (id)persistedFunnelDirectoryPath;
- (id)persistedFunnelPath;
- (void)_loadPersistedFunnels;
- (void)loadPersistedFunnels;
- (void)dealloc;
- (void)removePersistedFileIfExists;
- (void)_persistUnfinishedFunnels;
- (void)_handleApplicationDidEnterBackground:(id)arg1 timestamp:(double)arg2;
- (void)handleApplicationDidEnterBackground:(id)arg1;
- (int)getFunnelSize:(id)arg1;
- (void)_recordFunnelStatus:(unsigned long long)arg1;
- (void)_cancelFunnel:(id)arg1;
- (void)cancelFunnel:(id)arg1;
- (void)cancelFunnelInConcurrentMode:(id)arg1 instanceID:(unsigned long long)arg2;
- (void)_sendAnalyticsEventForFunnel:(id)arg1;
- (void)_endPseudoFunnel:(id)arg1 timestamp:(double)arg2;
- (void)_endFunnel:(id)arg1 reason:(unsigned long long)arg2 timestamp:(double)arg3;
- (void)endFunnelInConcurrentMode:(id)arg1 instanceID:(unsigned long long)arg2 callback:(CDUnknownBlockType)arg3;
- (void)endFunnel:(id)arg1 callback:(CDUnknownBlockType)arg2;
- (void)endFunnel:(id)arg1 timestamp:(double)arg2;
- (void)endFunnel:(id)arg1;
- (void)endFunnelInConcurrentMode:(id)arg1 instanceID:(unsigned long long)arg2;
- (void)_addActionToFunnel:(id)arg1 actionName:(id)arg2 tag:(id)arg3 actionPayload:(id)arg4 timestamp:(double)arg5;
- (void)addActionToFunnel:(id)arg1 actionName:(id)arg2 tag:(id)arg3 actionPayload:(id)arg4 timestamp:(double)arg5;
- (void)addActionToFunnel:(id)arg1 actionName:(id)arg2 tag:(id)arg3 actionPayload:(id)arg4;
- (void)addActionToFunnelInConcurrentMode:(id)arg1 instanceID:(unsigned long long)arg2 actionName:(id)arg3 tag:(id)arg4 actionPayload:(id)arg5;
- (void)addActionToFunnel:(id)arg1 actionName:(id)arg2 tag:(id)arg3;
- (void)addActionToFunnelInConcurrentMode:(id)arg1 instanceID:(unsigned long long)arg2 actionName:(id)arg3 tag:(id)arg4;
- (void)_addTagToFunnel:(id)arg1 tag:(id)arg2 timestamp:(double)arg3;
- (void)addTagToFunnel:(id)arg1 tag:(id)arg2;
- (void)addTagToFunnelInConcurrentMode:(id)arg1 instanceID:(unsigned long long)arg2 tag:(id)arg3;
- (void)_startFunnel:(id)arg1 instanceID:(unsigned long long)arg2 funnelKey:(id)arg3 bypassSampling:(_Bool)arg4 startUnixTime:(double)arg5 timestamp:(double)arg6;
- (void)startFunnelInConcurrentMode_DEV_MODE:(id)arg1 instanceID:(unsigned long long)arg2;
- (void)startFunnel_DEV_MODE:(id)arg1;
- (void)startFunnel:(id)arg1 startUnixTime:(double)arg2 timestamp:(double)arg3;
- (void)startFunnelInConcurrentMode:(id)arg1 instanceID:(unsigned long long)arg2;
- (void)startFunnel:(id)arg1;
- (id)_createNewInstanceForFunnel:(id)arg1 instanceID:(unsigned long long)arg2 funnelKey:(id)arg3;
- (id)_getFunnelKeyFromFunnel:(id)arg1 instanceID:(unsigned long long)arg2;
- (id)initWithFunnelLoggerIntegrationDelegate:(id)arg1 funnelRegistry:(id)arg2;

@end

