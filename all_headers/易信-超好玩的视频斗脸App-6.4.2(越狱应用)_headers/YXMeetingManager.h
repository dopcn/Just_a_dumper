//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "NRTCDelegate-Protocol.h"
#import "TimerHolderDelegate-Protocol.h"

@class NSMutableArray, NSMutableDictionary, NSString, TimerHolder, YXMeetingSession, YXUIViewController;
@protocol YXMeetingCallKitDelegate;

@interface YXMeetingManager : NSObject <NRTCDelegate, TimerHolderDelegate>
{
    YXMeetingSession *_currentMeetingSession;
    NSMutableArray *_checkList;
    NSMutableDictionary *_connectionTimeoutUsrs;
    _Bool _ready;
    _Bool _endMeetingInitiative;
    YXUIViewController *_minimizedVC;
    id <YXMeetingCallKitDelegate> _callKitDelegate;
    TimerHolder *_memberCheckTimer;
    TimerHolder *_connectionTimeoutTimer;
}

+ (id)sharedManager;
@property(retain, nonatomic) TimerHolder *connectionTimeoutTimer; // @synthesize connectionTimeoutTimer=_connectionTimeoutTimer;
@property(retain, nonatomic) TimerHolder *memberCheckTimer; // @synthesize memberCheckTimer=_memberCheckTimer;
@property(nonatomic) _Bool endMeetingInitiative; // @synthesize endMeetingInitiative=_endMeetingInitiative;
@property(nonatomic) __weak id <YXMeetingCallKitDelegate> callKitDelegate; // @synthesize callKitDelegate=_callKitDelegate;
@property(retain, nonatomic) YXUIViewController *minimizedVC; // @synthesize minimizedVC=_minimizedVC;
@property(nonatomic) _Bool ready; // @synthesize ready=_ready;
@property(readonly, nonatomic) YXMeetingSession *currentMeetingSession; // @synthesize currentMeetingSession=_currentMeetingSession;
- (void).cxx_destruct;
- (void)delegateCloseChatUIFromCallKit;
- (void)onKickoutNotification:(id)arg1;
- (void)onLogoutNotification:(id)arg1;
- (void)onAudioSessionInterruption:(id)arg1;
- (void)switchVideoQuality;
- (void)addMeetingEndMsgLogWithChannelName:(id)arg1 callType:(unsigned long long)arg2 teamID:(id)arg3 timetag:(long long)arg4;
- (void)addRejectMsgLogWithChannelName:(id)arg1 callType:(unsigned long long)arg2 teamID:(id)arg3 timetag:(long long)arg4;
- (_Bool)checkMeetingStartNotifyValid:(id)arg1;
- (void)addToCheckList:(id)arg1;
- (id)formatRecordName:(id)arg1;
- (void)closeCurrentSession:(_Bool)arg1 isMySelf:(_Bool)arg2;
- (_Bool)removeMemberWhenTimeout:(id)arg1;
- (void)onTimerHolderFire:(id)arg1;
- (void)onSpeakingUsersReport:(id)arg1;
- (void)onMyVolumeUpdate:(unsigned short)arg1;
- (void)onError:(id)arg1 channel:(id)arg2;
- (void)onUserLeft:(long long)arg1 reason:(unsigned long long)arg2 channel:(id)arg3;
- (void)onRemoteI420:(id)arg1 uid:(long long)arg2 channel:(id)arg3;
- (void)onLocalPreview:(id)arg1;
- (void)onUserJoined:(long long)arg1 channel:(id)arg2;
- (void)onJoinedChannel:(id)arg1 info:(id)arg2;
- (void)enterForeground:(id)arg1;
- (void)onMeetingMemberAcceptNotify:(id)arg1;
- (void)onMeetingMemberExitNotify:(id)arg1;
- (void)onMeetingRejectNotify:(id)arg1;
- (void)onMeetingMemberKickNotify:(id)arg1;
- (void)onMeetingControlNotify:(id)arg1;
- (void)onMeetingInviteNotify:(id)arg1;
- (void)onStartMeetingPushNotify:(id)arg1;
- (void)onStartMeetingNotify:(id)arg1;
- (void)onInviteMembersResponse:(id)arg1;
- (void)onAcceptMeetingResponse:(id)arg1;
- (void)onStartMeetingResponse:(id)arg1;
- (void)recvStartMeetingNotifyWithDelegate:(id)arg1;
- (void)maximizeMeeting;
- (void)minimizeMeeting;
- (void)kickMeetingMembers:(id)arg1 force:(_Bool)arg2;
- (void)meetingSessionControl:(unsigned long long)arg1 channelName:(id)arg2;
- (void)endMeeting:(id)arg1;
- (void)acceptMeeting:(id)arg1;
- (void)rejectMeeting:(id)arg1 timeout:(_Bool)arg2;
- (void)inviteMeetingMembers:(id)arg1;
- (void)exitMeeting:(id)arg1 timeout:(_Bool)arg2;
- (void)exitMeeting:(id)arg1 timeout:(_Bool)arg2 isMyHangUp:(_Bool)arg3;
- (void)startMeeting:(unsigned long long)arg1 env:(unsigned long long)arg2 members:(id)arg3 teamID:(id)arg4 withDelegate:(id)arg5;
@property(readonly, nonatomic) _Bool isMeetingBusy;
- (void)addEventListenners;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

