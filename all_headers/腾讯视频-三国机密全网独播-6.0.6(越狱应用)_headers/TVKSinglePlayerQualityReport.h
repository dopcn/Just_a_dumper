//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

#import "TVKMediaPlayerInfoEventProtocol-Protocol.h"

@class NSString, TVKMediaInfo, TVKMediaPlayInfo, TVKMediaPlayerInfoEventSender;

@interface TVKSinglePlayerQualityReport : NSObject <TVKMediaPlayerInfoEventProtocol>
{
    _Bool _isAllowProcess;
    _Bool _started;
    _Bool _isFirstCreatePlayer;
    _Bool _isAdPreparing;
    int _videoPlayerState;
    int _playerType;
    int _noHevcrea;
    int _softhevclv;
    int _hwhevclv;
    int _venctype;
    TVKMediaPlayerInfoEventSender *_playerInfoEventSender;
    double _currentPlayBackTime;
    TVKMediaInfo *_mediaInfo;
    TVKMediaPlayInfo *_videoInfo;
    unsigned long long _mediaPlayerMgrStatus;
    double _playduration;
    double _videoDuration;
    long long _openTime;
    long long _vInfoStartTime;
    long long _vInfoEndTime;
    long long _setUrlTime;
    long long _onPreparedTime;
    long long _createPlayerStartTime;
    long long _createPlayerEndTime;
    long long _startTime;
    long long _getStreamInfoEndTime;
    long long _shouleReportNum;
    long long _reportNum;
    long long _adCgiingTime;
    long long _adCgiedTime;
    long long _adPreParedTime;
    NSString *_guid;
    NSString *_uip;
    long long _downloadkit;
    long long _freeType;
    long long _network;
    NSString *_deviceName;
    NSString *_resolution;
    NSString *_osver;
    NSString *_appver;
    NSString *_playerver;
    long long _playType;
    long long _confid;
    NSString *_platform;
    NSString *_vid;
    long long _type;
    long long _step;
    long long _getvinforesms;
    long long _starttofirstpic;
    long long _openurltoprems;
    long long _readheadtms;
    long long _vinfotoplayer;
    long long _createplayerms;
    long long _adcgims;
    long long _preparetostart;
    long long _isplayad;
    long long _aderrcode;
    long long _adplayerr;
    NSString *_defn;
    long long _playtype;
    long long _sysrea;
    long long _audionosync;
    long long _videonosync;
    long long _skipframe;
    long long _decmode;
    long long _subdecmode;
    long long _decmoderea;
    long long _rendermode;
    long long _dobly;
    long long _logotype;
    NSString *_flowid;
    long long _totle;
}

@property(nonatomic) long long totle; // @synthesize totle=_totle;
@property(retain, nonatomic) NSString *flowid; // @synthesize flowid=_flowid;
@property(nonatomic) long long logotype; // @synthesize logotype=_logotype;
@property(nonatomic) long long dobly; // @synthesize dobly=_dobly;
@property(nonatomic) long long rendermode; // @synthesize rendermode=_rendermode;
@property(nonatomic) long long decmoderea; // @synthesize decmoderea=_decmoderea;
@property(nonatomic) long long subdecmode; // @synthesize subdecmode=_subdecmode;
@property(nonatomic) long long decmode; // @synthesize decmode=_decmode;
@property(nonatomic) long long skipframe; // @synthesize skipframe=_skipframe;
@property(nonatomic) long long videonosync; // @synthesize videonosync=_videonosync;
@property(nonatomic) long long audionosync; // @synthesize audionosync=_audionosync;
@property(nonatomic) int venctype; // @synthesize venctype=_venctype;
@property(nonatomic) long long sysrea; // @synthesize sysrea=_sysrea;
@property(nonatomic) long long playtype; // @synthesize playtype=_playtype;
@property(nonatomic) int hwhevclv; // @synthesize hwhevclv=_hwhevclv;
@property(nonatomic) int softhevclv; // @synthesize softhevclv=_softhevclv;
@property(copy, nonatomic) NSString *defn; // @synthesize defn=_defn;
@property(nonatomic) long long adplayerr; // @synthesize adplayerr=_adplayerr;
@property(nonatomic) long long aderrcode; // @synthesize aderrcode=_aderrcode;
@property(nonatomic) long long isplayad; // @synthesize isplayad=_isplayad;
@property(nonatomic) long long preparetostart; // @synthesize preparetostart=_preparetostart;
@property(nonatomic) long long adcgims; // @synthesize adcgims=_adcgims;
@property(nonatomic) long long createplayerms; // @synthesize createplayerms=_createplayerms;
@property(nonatomic) long long vinfotoplayer; // @synthesize vinfotoplayer=_vinfotoplayer;
@property(nonatomic) long long readheadtms; // @synthesize readheadtms=_readheadtms;
@property(nonatomic) long long openurltoprems; // @synthesize openurltoprems=_openurltoprems;
@property(nonatomic) long long starttofirstpic; // @synthesize starttofirstpic=_starttofirstpic;
@property(nonatomic) long long getvinforesms; // @synthesize getvinforesms=_getvinforesms;
@property(nonatomic) long long step; // @synthesize step=_step;
@property(nonatomic) int noHevcrea; // @synthesize noHevcrea=_noHevcrea;
@property(nonatomic) int playerType; // @synthesize playerType=_playerType;
@property(nonatomic) long long type; // @synthesize type=_type;
@property(copy, nonatomic) NSString *vid; // @synthesize vid=_vid;
@property(copy, nonatomic) NSString *platform; // @synthesize platform=_platform;
@property(nonatomic) long long confid; // @synthesize confid=_confid;
@property(nonatomic) long long playType; // @synthesize playType=_playType;
@property(copy, nonatomic) NSString *playerver; // @synthesize playerver=_playerver;
@property(copy, nonatomic) NSString *appver; // @synthesize appver=_appver;
@property(copy, nonatomic) NSString *osver; // @synthesize osver=_osver;
@property(copy, nonatomic) NSString *resolution; // @synthesize resolution=_resolution;
@property(copy, nonatomic) NSString *deviceName; // @synthesize deviceName=_deviceName;
@property(nonatomic) long long network; // @synthesize network=_network;
@property(nonatomic) long long freeType; // @synthesize freeType=_freeType;
@property(nonatomic) long long downloadkit; // @synthesize downloadkit=_downloadkit;
@property(copy, nonatomic) NSString *uip; // @synthesize uip=_uip;
@property(copy, nonatomic) NSString *guid; // @synthesize guid=_guid;
@property(nonatomic) long long adPreParedTime; // @synthesize adPreParedTime=_adPreParedTime;
@property(nonatomic) _Bool isAdPreparing; // @synthesize isAdPreparing=_isAdPreparing;
@property(nonatomic) long long adCgiedTime; // @synthesize adCgiedTime=_adCgiedTime;
@property(nonatomic) long long adCgiingTime; // @synthesize adCgiingTime=_adCgiingTime;
@property(nonatomic) long long reportNum; // @synthesize reportNum=_reportNum;
@property(nonatomic) _Bool isFirstCreatePlayer; // @synthesize isFirstCreatePlayer=_isFirstCreatePlayer;
@property(nonatomic) long long shouleReportNum; // @synthesize shouleReportNum=_shouleReportNum;
@property(nonatomic) long long getStreamInfoEndTime; // @synthesize getStreamInfoEndTime=_getStreamInfoEndTime;
@property(nonatomic) long long startTime; // @synthesize startTime=_startTime;
@property(nonatomic) long long createPlayerEndTime; // @synthesize createPlayerEndTime=_createPlayerEndTime;
@property(nonatomic) long long createPlayerStartTime; // @synthesize createPlayerStartTime=_createPlayerStartTime;
@property(nonatomic) long long onPreparedTime; // @synthesize onPreparedTime=_onPreparedTime;
@property(nonatomic) long long setUrlTime; // @synthesize setUrlTime=_setUrlTime;
@property(nonatomic) long long vInfoEndTime; // @synthesize vInfoEndTime=_vInfoEndTime;
@property(nonatomic) long long vInfoStartTime; // @synthesize vInfoStartTime=_vInfoStartTime;
@property(nonatomic) long long openTime; // @synthesize openTime=_openTime;
@property(nonatomic) double videoDuration; // @synthesize videoDuration=_videoDuration;
@property(nonatomic) double playduration; // @synthesize playduration=_playduration;
@property(nonatomic) unsigned long long mediaPlayerMgrStatus; // @synthesize mediaPlayerMgrStatus=_mediaPlayerMgrStatus;
@property(retain, nonatomic) TVKMediaPlayInfo *videoInfo; // @synthesize videoInfo=_videoInfo;
@property(retain, nonatomic) TVKMediaInfo *mediaInfo; // @synthesize mediaInfo=_mediaInfo;
@property(nonatomic) double currentPlayBackTime; // @synthesize currentPlayBackTime=_currentPlayBackTime;
@property(nonatomic) int videoPlayerState; // @synthesize videoPlayerState=_videoPlayerState;
@property(retain, nonatomic) TVKMediaPlayerInfoEventSender *playerInfoEventSender; // @synthesize playerInfoEventSender=_playerInfoEventSender;
@property(nonatomic) _Bool started; // @synthesize started=_started;
@property(nonatomic) _Bool isAllowProcess; // @synthesize isAllowProcess=_isAllowProcess;
- (void).cxx_destruct;
- (long long)currentTime;
- (void)didMediaPlayerInfoChanged:(int)arg1 userInfo:(id)arg2;
- (void)report:(id)arg1;
- (void)newVerAdStateChangedWithUserInfo:(id)arg1;
- (void)playerStateChangedWithUserInfo:(id)arg1;
- (void)processStartGetVinfo:(id)arg1;
- (void)processVideoDidFinishedWithUserInfo:(id)arg1;
- (void)playerErrorWithUserInfo:(id)arg1;
- (void)stopPlayerWithUserInfo:(id)arg1;
- (void)pausePlayerWithUserInfo:(id)arg1;
- (void)startPlayerWithUserInfo:(id)arg1;
- (void)finishVinfoWithUserInfo:(id)arg1;
- (void)updateVideoInfoWithUserInfo:(id)arg1;
- (void)videoDecoderModeDidChange:(id)arg1;
- (void)videoPlayerTypeChangedWithUserInfo:(id)arg1;
- (void)skipLotsOfFramesInOneUnitOfTime:(id)arg1;
- (void)openFileComplete:(id)arg1;
- (void)playerItSelfOnPrepared:(id)arg1;
- (void)setPlayerUrlStartWithInfo:(id)arg1;
- (void)playerCreatEnd:(id)arg1;
- (void)playerCreatStart:(id)arg1;
- (void)openMediaplayerEventWithInfo:(id)arg1;
- (void)resetAllReportInfo;
- (void)resetPlayerReportInfo;
- (void)endMonitor;
- (void)startMonitorWithPlayerInfoEventSender:(id)arg1;
- (id)init;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

