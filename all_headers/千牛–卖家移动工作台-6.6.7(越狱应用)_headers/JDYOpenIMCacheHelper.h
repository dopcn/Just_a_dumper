//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

@class JDYLRUMemoryCache;

@interface JDYOpenIMCacheHelper : NSObject
{
    JDYLRUMemoryCache *_userCache;
    JDYLRUMemoryCache *_tribeCache;
    JDYLRUMemoryCache *_messageCache;
    JDYLRUMemoryCache *_tribeMessageCache;
    JDYLRUMemoryCache *_imageSizeCache;
    JDYLRUMemoryCache *_gifCache;
    JDYLRUMemoryCache *_defaultCache;
    JDYLRUMemoryCache *_templeteCellHeightCache;
}

@property(retain, nonatomic) JDYLRUMemoryCache *templeteCellHeightCache; // @synthesize templeteCellHeightCache=_templeteCellHeightCache;
@property(retain, nonatomic) JDYLRUMemoryCache *defaultCache; // @synthesize defaultCache=_defaultCache;
@property(retain, nonatomic) JDYLRUMemoryCache *gifCache; // @synthesize gifCache=_gifCache;
@property(retain, nonatomic) JDYLRUMemoryCache *imageSizeCache; // @synthesize imageSizeCache=_imageSizeCache;
@property(retain, nonatomic) JDYLRUMemoryCache *tribeMessageCache; // @synthesize tribeMessageCache=_tribeMessageCache;
@property(retain, nonatomic) JDYLRUMemoryCache *messageCache; // @synthesize messageCache=_messageCache;
@property(retain, nonatomic) JDYLRUMemoryCache *tribeCache; // @synthesize tribeCache=_tribeCache;
@property(retain, nonatomic) JDYLRUMemoryCache *userCache; // @synthesize userCache=_userCache;
- (void).cxx_destruct;
- (void)storeTempleteCellHeight:(double)arg1 forMessage:(id)arg2;
- (id)templeteCellHeight:(id)arg1;
- (void)storeParseResult:(id)arg1 forMessageId:(id)arg2;
- (id)parseResultForMessageId:(id)arg1;
- (void)removeObjectWithName:(id)arg1;
- (void)storeObject:(id)arg1 withName:(id)arg2;
- (id)objectWithName:(id)arg1;
- (id)getPerson:(id)arg1;
- (void)storePerson:(id)arg1 userId:(id)arg2;
- (id)getImageSize:(id)arg1;
- (void)storeImageSize:(id)arg1 messageId:(id)arg2;
- (id)getTribeMessagePraseResult:(id)arg1;
- (void)storeTribeMessagePraseResult:(id)arg1 messageId:(id)arg2;
- (id)getMessagePraseResult:(id)arg1;
- (void)storeMessagePraseResult:(id)arg1 messageId:(id)arg2;
- (id)printInstanceMemoryCost;
- (void)resetCache;
- (id)init;

@end

