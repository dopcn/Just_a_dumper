//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "NSObject-Protocol.h"

@class MBCMaterialDownloadManager, MTARFilterManager, MTCamera, MTCameraFaceEngine, MTFilterControl, NSString, UIImage;

@protocol MBCCameraCapturingConfigurationProtocol <NSObject>
@property(nonatomic, getter=isTriggerFlipCameraActionManually) _Bool triggerFlipCameraActionManually;
@property(nonatomic) _Bool addWaterMarkStatistics;
@property(nonatomic) _Bool showQuickTakePhotoModeSwitch;
@property(nonatomic, getter=isQuickTakePhotoModeEnabled) _Bool quickTakePhotoModeEnabled;
@property(copy, nonatomic) CDUnknownBlockType lastFilterDidRenderFirstFrameBlock;
@property(nonatomic) _Bool createPreviewSnapshotBeforeCapture;
@property(nonatomic) _Bool autoActiveCameraModeResponder;
@property(nonatomic) _Bool mayUseARPlayingMusic;
@property(nonatomic) _Bool autoClean;
@property(nonatomic, getter=isMusicPlayingSupported) _Bool musicPlayingSupported;
@property(nonatomic, getter=isUsingNewPreviewSolution) _Bool usingNewPreviewSolution;
@property(readonly, nonatomic, getter=isCaptureCameraButtonExclusiveTouch) _Bool captureCameraButtonExclusiveTouch;
@property(nonatomic) long long triggerTakePhotoAction;
@property(nonatomic, getter=isMicrophonePermissionAlertTipShowd) _Bool microphonePermissionAlertTipShowd;
@property(nonatomic, getter=isCountingDown) _Bool countingDown;
@property(nonatomic, getter=isTakePhotoViaTouchEnabled) _Bool takePhotoViaTouchEnabled;
@property(nonatomic) long long delayCaptureMode;
@property(copy, nonatomic) NSString *strVideoFilePath;
@property(nonatomic) long long flashState;
@property(nonatomic, getter=isFrontCameraPreviewMirrorEnabled) _Bool frontCameraPreviewMirrorEnabled;
@property(nonatomic, getter=isSilentTakePhotoModeEnabled) _Bool silentTakePhotoModeEnabled;
@property(copy, nonatomic) CDUnknownBlockType worksThatAfterGuidesViewAllShowed;
@property(nonatomic) unsigned long long lightState;
@property(readonly, nonatomic) double ratioOffset;
@property(nonatomic) double faceLightLevel;
@property(retain, nonatomic) MTCameraFaceEngine *faceEngine;
@property(retain, nonatomic) MTARFilterManager *arFilterManager;
@property(copy, nonatomic) NSString *strFaceLiftConfigFilePath;
@property(nonatomic, getter=isPickImageFlow) _Bool pickImageFlow;
@property(nonatomic) _Bool shouldIgnoreCameraFocusEvent;
@property(nonatomic) _Bool shouldIgnoreCameraPreviewTouchEvent;
@property(nonatomic) _Bool showNoDetectedFacesTipsView;
@property(retain, nonatomic) NSString *bottomRightButtonText;
@property(retain, nonatomic) NSString *bottomRightButtonHighlightedImageName;
@property(retain, nonatomic) NSString *bottomRightButtonNormalImageName;
@property(retain, nonatomic) NSString *bottomLeftButtonText;
@property(retain, nonatomic) NSString *bottomLeftButtonHighlightedImageName;
@property(retain, nonatomic) NSString *bottomLeftButtonNormalImageName;
@property(nonatomic) _Bool shouldShowBottomRightButton;
@property(nonatomic) _Bool shouldShowBottomLeftButton;
@property(nonatomic) _Bool shouldShowTopControlsBar;
@property(retain, nonatomic) MTFilterControl *filterControl;
@property(retain, nonatomic) MTCamera *camera;
@property(copy, nonatomic) NSString *strCameraSessionPreset;
@property(nonatomic, getter=isNeedToFoucsOnFace) _Bool needToFoucsOnFace;
@property(nonatomic, getter=isCapturingPhoto) _Bool capturingPhoto;
@property(nonatomic, getter=isRecordingVideo) _Bool recordingVideo;
@property(nonatomic) double previewScale;
@property(nonatomic) struct CGSize previewSize;
@property(nonatomic) struct CGRect arMaterialShowRect;
@property(readonly, nonatomic, getter=isFullScreenRatio) _Bool fullScreenRatio;
@property(nonatomic) long long ratio;
@property(nonatomic) long long cameraPosition;
- (_Bool)canCreatePreviewSnapshotBeforeCapture;
- (void)forceFillARFilterManager;
- (MTARFilterManager *)createDefaultARFilterManager;
- (void)forceFillFilterControl;
- (MTFilterControl *)createDefaultFilterControl;
- (void)forceFillCamera;
- (void)setupCamera:(MTCamera *)arg1;
- (MTCamera *)createDefaultCamera;
- (NSString *)defaultCameraSessionPreset;
- (NSString *)cameraSessionPresetWithRatioType:(long long)arg1;
- (_Bool)cleanShinyAccordingToFrontCameraPresenting:(_Bool)arg1;

@optional
@property(nonatomic) _Bool shouldUpdateMaterialViewDataSource;
@property(retain, nonatomic) id selectedCategoryFilter;
@property(retain, nonatomic) id selectedMaterialFilter;
@property(retain, nonatomic) id specifiedMaterialFilter;
@property(retain, nonatomic) id selectedCategory;
@property(retain, nonatomic) id selectedMaterial;
@property(retain, nonatomic) id specifiedMaterial;
@property(nonatomic) _Bool shouldShowSlider;
@property(retain, nonatomic) UIImage *sliderMusicSwitchButtonHighlightedStateImage;
@property(retain, nonatomic) UIImage *sliderMusicSwitchButtonNormalStateImage;
@property(nonatomic, getter=isSliderMusicSwitchButtonEnabled) _Bool sliderMusicSwitchButtonEnabled;
@property(nonatomic) _Bool shouldShowSliderMusicSwitch;
@property(nonatomic) _Bool shouldShowSliderDisplaySwitch;
- (MBCMaterialDownloadManager *)materialFilterDownloadManager;
- (MBCMaterialDownloadManager *)materialDownloadManager;
- (NSString *)selectedMaterialName;
- (NSString *)selectedMaterialFilterName;
@end

