//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "QingRequestOperation.h"

#import "QingRequestOperationDelegate-Protocol.h"

@class NSArray, NSMutableArray, NSObject, NSString, QingError, QingSession;

@interface GetRoamingRecordsOperation : QingRequestOperation <QingRequestOperationDelegate>
{
    _Bool _onlyCache;
    _Bool _needClearCache;
    _Bool _isGrounding;
    _Bool _newAllowCache;
    int _count;
    int _loopCount;
    QingSession *_session;
    long long _since_opversion;
    QingError *_error;
    SEL _didFinishedSelector;
    SEL _didFailedSelector;
    NSObject *_delegate;
    NSArray *_roamingRecords;
    long long _sort_opversion;
    NSObject *_currentRequest;
    NSMutableArray *_remoteResults;
    NSMutableArray *_localResults;
    NSMutableArray *_innerRecordResults;
}

@property(nonatomic) _Bool newAllowCache; // @synthesize newAllowCache=_newAllowCache;
@property(retain, nonatomic) NSMutableArray *innerRecordResults; // @synthesize innerRecordResults=_innerRecordResults;
@property(nonatomic) _Bool isGrounding; // @synthesize isGrounding=_isGrounding;
@property(retain, nonatomic) NSMutableArray *localResults; // @synthesize localResults=_localResults;
@property(nonatomic) _Bool needClearCache; // @synthesize needClearCache=_needClearCache;
@property(nonatomic) int loopCount; // @synthesize loopCount=_loopCount;
@property(retain, nonatomic) NSMutableArray *remoteResults; // @synthesize remoteResults=_remoteResults;
@property(nonatomic) __weak NSObject *currentRequest; // @synthesize currentRequest=_currentRequest;
@property(nonatomic) long long sort_opversion; // @synthesize sort_opversion=_sort_opversion;
@property(retain, nonatomic) NSArray *roamingRecords; // @synthesize roamingRecords=_roamingRecords;
@property(nonatomic) __weak NSObject *delegate; // @synthesize delegate=_delegate;
@property(nonatomic) SEL didFailedSelector; // @synthesize didFailedSelector=_didFailedSelector;
@property(nonatomic) SEL didFinishedSelector; // @synthesize didFinishedSelector=_didFinishedSelector;
@property(retain, nonatomic) QingError *error; // @synthesize error=_error;
@property(nonatomic) _Bool onlyCache; // @synthesize onlyCache=_onlyCache;
@property(nonatomic) int count; // @synthesize count=_count;
@property(nonatomic) long long since_opversion; // @synthesize since_opversion=_since_opversion;
@property(nonatomic) __weak QingSession *session; // @synthesize session=_session;
- (void).cxx_destruct;
- (void)printRoamingRecords;
- (void)printReturnCount;
- (void)cb_fail;
- (void)cb_finish;
- (void)clearRoamingCache;
- (int)amplitudeCount:(int)arg1;
- (void)mergeRecordFromCache;
- (void)handleRemoteResult;
- (void)handleRemoteExceptionWithSartOpv:(long long)arg1 error:(id)arg2;
- (void)removeBreakpoint:(long long)arg1;
- (void)addBreakpoint:(long long)arg1;
- (_Bool)isNeedSetBreakpoint:(id)arg1;
- (long long)getSotrTime;
- (void)markEndTag:(long long)arg1;
- (_Bool)checkEndTag:(long long)arg1;
- (long long)offsetGapOpv:(long long)arg1 offsetValue:(int)arg2;
- (_Bool)getRoamingInfosWithoutCacheWithSinOpv:(long long)arg1 count:(int)arg2;
- (void)fillGapWithRoamingInfos:(id)arg1 endOpv:(long long)arg2;
- (_Bool)handleRoamingInfoGapWithStartOpv:(long long)arg1 endOpv:(long long)arg2 count:(int)arg3;
- (_Bool)getRoamingInfosWithCacheWithSinOpv:(long long)arg1 count:(int)arg2;
- (void)requestNetRoamingRecordsWithoutCache;
- (void)requestNetRoamingRecordsWithCache;
- (void)requestNetRoamingRecords;
- (void)requestCaheRoamingRecords;
- (void)requestRemoteRoamingInfos;
- (void)sortRoamingRecords:(id)arg1;
- (void)handleFinalResult;
- (void)catchException:(id)arg1;
- (void)execute;
- (void)cancel;
- (id)initWithSession:(id)arg1 since_opversion:(long long)arg2 count:(int)arg3 onlyCache:(_Bool)arg4;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

