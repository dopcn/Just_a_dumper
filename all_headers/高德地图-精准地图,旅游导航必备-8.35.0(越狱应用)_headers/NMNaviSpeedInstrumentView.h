//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "LTMBaseView.h"

@class CABasicAnimation, CAGradientLayer, CALayer, CAShapeLayer, NSArray, UIBezierPath, UIImageView;

@interface NMNaviSpeedInstrumentView : LTMBaseView
{
    _Bool _isThreeColorMixed;
    float _radius;
    float _lineWidth;
    float _startAngle;
    float _endAngle;
    float _linearM;
    float _linearS;
    double _minValue;
    double _maxValue;
    CAGradientLayer *_gradientlayerL;
    CAGradientLayer *_gradientlayerR;
    CALayer *_sumLayer;
    CAShapeLayer *_shapelayer;
    NSArray *_colorArrayLeft;
    NSArray *_colorArrayRight;
    UIBezierPath *_bezierPath;
    CABasicAnimation *_animation;
    double _sAngle;
    double _eAngle;
    UIImageView *_speedInstrumentPointer;
    UIImageView *_dashboardImage;
    UIImageView *_dashboardBackgroundImage;
    struct CGPoint _point;
    struct CGRect _rectL;
    struct CGRect _rectR;
}

@property(retain, nonatomic) UIImageView *dashboardBackgroundImage; // @synthesize dashboardBackgroundImage=_dashboardBackgroundImage;
@property(retain, nonatomic) UIImageView *dashboardImage; // @synthesize dashboardImage=_dashboardImage;
@property(retain, nonatomic) UIImageView *speedInstrumentPointer; // @synthesize speedInstrumentPointer=_speedInstrumentPointer;
@property(nonatomic) double eAngle; // @synthesize eAngle=_eAngle;
@property(nonatomic) double sAngle; // @synthesize sAngle=_sAngle;
@property(retain, nonatomic) CABasicAnimation *animation; // @synthesize animation=_animation;
@property(retain, nonatomic) UIBezierPath *bezierPath; // @synthesize bezierPath=_bezierPath;
@property(retain, nonatomic) NSArray *colorArrayRight; // @synthesize colorArrayRight=_colorArrayRight;
@property(retain, nonatomic) NSArray *colorArrayLeft; // @synthesize colorArrayLeft=_colorArrayLeft;
@property(retain, nonatomic) CAShapeLayer *shapelayer; // @synthesize shapelayer=_shapelayer;
@property(retain, nonatomic) CALayer *sumLayer; // @synthesize sumLayer=_sumLayer;
@property(retain, nonatomic) CAGradientLayer *gradientlayerR; // @synthesize gradientlayerR=_gradientlayerR;
@property(retain, nonatomic) CAGradientLayer *gradientlayerL; // @synthesize gradientlayerL=_gradientlayerL;
@property(nonatomic) struct CGRect rectR; // @synthesize rectR=_rectR;
@property(nonatomic) struct CGRect rectL; // @synthesize rectL=_rectL;
@property(nonatomic) float linearS; // @synthesize linearS=_linearS;
@property(nonatomic) double maxValue; // @synthesize maxValue=_maxValue;
@property(nonatomic) double minValue; // @synthesize minValue=_minValue;
@property(nonatomic) _Bool isThreeColorMixed; // @synthesize isThreeColorMixed=_isThreeColorMixed;
@property(nonatomic) float linearM; // @synthesize linearM=_linearM;
@property(nonatomic) float endAngle; // @synthesize endAngle=_endAngle;
@property(nonatomic) float startAngle; // @synthesize startAngle=_startAngle;
@property(nonatomic) struct CGPoint point; // @synthesize point=_point;
@property(nonatomic) float lineWidth; // @synthesize lineWidth=_lineWidth;
@property(nonatomic) float radius; // @synthesize radius=_radius;
- (void).cxx_destruct;
- (void)reloadNMData;
- (void)configModifyZoneWithLeftColor:(id)arg1 rightColor:(id)arg2;
- (void)drawRect:(struct CGRect)arg1;
- (void)transformPointer;
- (void)updateToLandscapeSize;
- (void)updateToPortraitSize;
- (void)initUIViews;
- (id)initWithFrame:(struct CGRect)arg1;

@end

