//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

@interface Geometry : NSObject
{
    _Bool _leftBufferReady;
    _Bool _rightBufferReady;
    _Bool _isVideo;
    int _numIndices;
    int _numVertices;
    unsigned int _leftVertexArrayID;
    unsigned int _leftVertexBufferID;
    unsigned int _leftVertexIndicesBufferID;
    unsigned int _leftVertexTexCoordID;
    unsigned int _rightVertexArrayID;
    unsigned int _rightVertexBufferID;
    unsigned int _rightVertexIndicesBufferID;
    unsigned int _rightVertexTexCoordID;
    int _positionSlot;
    int _texCoordSlot;
    int _textureUniformRGB;
    int _textureUniformOldRGB;
    int _textureUniformAlpha;
    int _textureUniformY;
    int _textureUniformUV;
    int _mvpMatrix;
    int _renderType;
    float _alpha;
    float *_vertices;
    float *_rightVertices;
    float *_textureCoord;
    float *_rightTextureCoord;
    unsigned short *_indices;
}

@property(nonatomic) float alpha; // @synthesize alpha=_alpha;
@property(nonatomic) int renderType; // @synthesize renderType=_renderType;
@property(nonatomic) _Bool isVideo; // @synthesize isVideo=_isVideo;
@property(nonatomic) int mvpMatrix; // @synthesize mvpMatrix=_mvpMatrix;
@property(nonatomic) int textureUniformUV; // @synthesize textureUniformUV=_textureUniformUV;
@property(nonatomic) int textureUniformY; // @synthesize textureUniformY=_textureUniformY;
@property(nonatomic) int textureUniformAlpha; // @synthesize textureUniformAlpha=_textureUniformAlpha;
@property(nonatomic) int textureUniformOldRGB; // @synthesize textureUniformOldRGB=_textureUniformOldRGB;
@property(nonatomic) int textureUniformRGB; // @synthesize textureUniformRGB=_textureUniformRGB;
@property(nonatomic) int texCoordSlot; // @synthesize texCoordSlot=_texCoordSlot;
@property(nonatomic) int positionSlot; // @synthesize positionSlot=_positionSlot;
@property(nonatomic) _Bool rightBufferReady; // @synthesize rightBufferReady=_rightBufferReady;
@property(nonatomic) unsigned int rightVertexTexCoordID; // @synthesize rightVertexTexCoordID=_rightVertexTexCoordID;
@property(nonatomic) unsigned int rightVertexIndicesBufferID; // @synthesize rightVertexIndicesBufferID=_rightVertexIndicesBufferID;
@property(nonatomic) unsigned int rightVertexBufferID; // @synthesize rightVertexBufferID=_rightVertexBufferID;
@property(nonatomic) unsigned int rightVertexArrayID; // @synthesize rightVertexArrayID=_rightVertexArrayID;
@property(nonatomic) _Bool leftBufferReady; // @synthesize leftBufferReady=_leftBufferReady;
@property(nonatomic) unsigned int leftVertexTexCoordID; // @synthesize leftVertexTexCoordID=_leftVertexTexCoordID;
@property(nonatomic) unsigned int leftVertexIndicesBufferID; // @synthesize leftVertexIndicesBufferID=_leftVertexIndicesBufferID;
@property(nonatomic) unsigned int leftVertexBufferID; // @synthesize leftVertexBufferID=_leftVertexBufferID;
@property(nonatomic) unsigned int leftVertexArrayID; // @synthesize leftVertexArrayID=_leftVertexArrayID;
@property int numVertices; // @synthesize numVertices=_numVertices;
@property int numIndices; // @synthesize numIndices=_numIndices;
@property unsigned short *indices; // @synthesize indices=_indices;
@property float *rightTextureCoord; // @synthesize rightTextureCoord=_rightTextureCoord;
@property float *textureCoord; // @synthesize textureCoord=_textureCoord;
@property float *rightVertices; // @synthesize rightVertices=_rightVertices;
@property float *vertices; // @synthesize vertices=_vertices;
- (void)setVideoDisplayDetails:(int)arg1;
- (void)drawEye:(int)arg1 inContext:(struct VRContext)arg2;
- (id)initWithRendType:(int)arg1 videoOrImage:(_Bool)arg2;
- (void)dealloc;
- (void)releaseVAO;
- (void)setRendType:(int)arg1;
- (void)genericDrawWithMvpMatrix:(union _GLKMatrix4)arg1 eye:(int)arg2;
- (void)releaseRightVAO;
- (void)releaseLeftOrFullVAO;
- (void)rebindRightVAO;
- (void)rebindLeftOrFullVAO;
- (void)createRightVAO;
- (void)createLeftOrFullVAO;
- (void)createVAO;

@end

