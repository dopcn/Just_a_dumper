//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "MMUIViewController.h"

#import "EnterpriseConnectorLogicDelegate-Protocol.h"
#import "H5GameScrollActionSheetDelegate-Protocol.h"
#import "IUiUtilExt-Protocol.h"
#import "MMExposeViewControllerDelegate-Protocol.h"
#import "MMJSApiVerifyMgrDelegate-Protocol.h"
#import "MMScrollActionSheetDelegate-Protocol.h"
#import "MMTipsViewControllerDelegate-Protocol.h"
#import "MMWebSearchViewDelegate-Protocol.h"
#import "MMWebViewFontFloatViewDelegate-Protocol.h"
#import "UIAlertViewDelegate-Protocol.h"
#import "UIGestureRecognizerDelegate-Protocol.h"
#import "UIScrollViewDelegate-Protocol.h"
#import "WCActionSheetDelegate-Protocol.h"
#import "WCForceTouchPopProtocol-Protocol.h"
#import "WXCustomWebViewControllerProtocol-Protocol.h"
#import "WebViewA8KeyLogicDelegate-Protocol.h"
#import "WebViewJSLogicDelegate-Protocol.h"
#import "YYWebViewDelegate-Protocol.h"

@class CContact, EnterpriseConnectorLogic, MMJSApiVerifyMgr, MMScrollActionSheet, MMTimer, MMTipsViewController, MMURLHandler, MMWebCustomLog, MMWebProgressBar, MMWebViewPluginScheduler, MMWebViewPresetUI, NSMutableArray, NSMutableDictionary, NSMutableSet, NSString, NSURLRequest, UIButton, UIImageView, UILabel, UILongPressGestureRecognizer, UIView, UIViewController, WCDeepLinkHandler, WKWebView, WebViewA8KeyLogicImpl, WebViewJSLogicImpl, WebViewMenuCustomizeLogic, WebViewOAuthLogic, WebViewTimeProfileData;
@protocol MMWebViewDelegate, YYWebViewInterface;

@interface MMWebViewController : MMUIViewController <MMWebSearchViewDelegate, MMScrollActionSheetDelegate, EnterpriseConnectorLogicDelegate, MMExposeViewControllerDelegate, H5GameScrollActionSheetDelegate, WCForceTouchPopProtocol, UIGestureRecognizerDelegate, IUiUtilExt, MMTipsViewControllerDelegate, WCActionSheetDelegate, UIAlertViewDelegate, MMWebViewFontFloatViewDelegate, WebViewA8KeyLogicDelegate, WebViewJSLogicDelegate, UIScrollViewDelegate, MMJSApiVerifyMgrDelegate, YYWebViewDelegate, WXCustomWebViewControllerProtocol>
{
    WKWebView<YYWebViewInterface> *webView;
    MMURLHandler *m_urlHandler;
    NSString *m_initUrl;
    WebViewA8KeyLogicImpl *m_a8KeyLogicImpl;
    WebViewJSLogicImpl *m_jsLogicImpl;
    unsigned int m_uiBackCount;
    _Bool m_isPageDidLoaded;
    UIButton *m_loadFailView;
    NSMutableArray *m_actionSheetRow1;
    NSMutableArray *m_actionSheetRow2;
    MMScrollActionSheet *m_scrollActionSheet;
    WebViewMenuCustomizeLogic *m_menuCustomizeLogic;
    NSMutableDictionary *m_jsInitInfo;
    WCDeepLinkHandler *m_deepLinkHandler;
    EnterpriseConnectorLogic *m_enterpriseConnectorLogic;
    _Bool m_isScrollMenuScroll;
    MMJSApiVerifyMgr *m_apiVerifyMgr;
    CDUnknownBlockType _OnInitReadyNotifyBlock;
    CDUnknownBlockType m_blockOnWebViewWillReturn;
    _Bool _bIsHideShareMenuByJsApi;
    UILabel *m_previewTopBar;
    UIView *m_previewTopBarBg;
    _Bool m_isPreviewing;
    _Bool m_isFinishLoaded;
    UIView *_previewSourceView;
    UIViewController *_previewFromController;
    _Bool m_bShowOnNewMainFrameBanner;
    _Bool m_bReadingArticleBanner;
    _Bool m_bPreloadInMem;
    _Bool m_isPageLoadFail;
    _Bool m_bFullScreen;
    UILongPressGestureRecognizer *m_longPressGestureRecognizer;
    vector_ecc2264a _pIDKeyList;
    _Bool _bIsDraggingScroll;
    NSMutableSet *m_jsTempAllowApiCalls;
    WebViewTimeProfileData *m_webTimeProfileData;
    id <MMWebViewDelegate> m_delegate;
    _Bool m_bAutoSetTitle;
    _Bool m_disalbeStartLoadGetA8Key;
    _Bool m_bShouldForcedRotationToPortrait;
    unsigned int m_stat_enterTime;
    long long m_loadingCount;
    _Bool m_openAllPermission;
    NSString *m_jump;
    _Bool m_viewDidAppear;
    NSString *m_oLoadingUrl;
    _Bool m_bHasAnimated;
    _Bool m_bIFrame;
    NSString *_httpHeadReferer;
    double _fLastStartOffsetY;
    NSMutableArray *_arrRouteUrl;
    unsigned int _startTime;
    _Bool _bIsBackForwardNavigationType;
    _Bool _bIsViewHasAppeared;
    NSString *_lastURL;
    MMTipsViewController *tipsAlertJumpAppstoreVC;
    _Bool _bIsAutoLoginMode;
    _Bool _alwayIntercept;
    _Bool _bHasInitNotification;
    _Bool _newWebLoading;
    _Bool m_bIsPortraitBeforeOpenUrl;
    _Bool _m_bIsStatusBarBlack;
    _Bool _m_bUseColorfulNavBar;
    _Bool _m_canCache;
    _Bool _m_bDeepLink;
    _Bool _m_bUserHasClickLink;
    _Bool _m_bIsDelayPushWebView;
    _Bool _m_bIsRestrictAppstore;
    _Bool _m_isLanscape;
    _Bool _m_bIsJsapiUploadVideoUploading;
    _Bool _reportInstantly;
    _Bool _m_bPreloadInMem;
    _Bool _bIsForceShowCloseButton;
    _Bool _m_isDisableShareMenu;
    _Bool _bHasTriggerOpenUrl;
    _Bool _bIsReportSchemeWickedAlready;
    _Bool _bIsAlreadyReloadWebviewFromJsapi;
    _Bool _m_bHasFinishLoadOnce;
    NSMutableDictionary *m_extraInfo;
    MMWebViewPluginScheduler *_pluginScheduler;
    CContact *_brandContact;
    MMWebProgressBar *_m_progressBar;
    UIView *_m_navBarView;
    UILabel *_m_addressLabel;
    MMWebViewPresetUI *_presetUI;
    MMWebCustomLog *_customLog;
    long long _reportId;
    NSMutableArray *_reportFormatDataList;
    unsigned long long _reportBeginTime;
    unsigned long long _reportDesinatedBeginTime;
    NSMutableArray *_visibleStateArray;
    MMTimer *_wepkgLoadingTimer;
    CDUnknownBlockType _interceptCloseBlock;
    UIView *_tailBgView;
    UIImageView *_m_addressBarView;
    UILabel *_m_deeplinkRedirecting;
    WebViewOAuthLogic *_oauthLogic;
    NSString *_jumpAppStoreUrl;
    NSString *_encodeSchemeStr;
    long long _useSchemeCount;
}

@property(nonatomic) _Bool m_bHasFinishLoadOnce; // @synthesize m_bHasFinishLoadOnce=_m_bHasFinishLoadOnce;
@property(nonatomic) _Bool bIsAlreadyReloadWebviewFromJsapi; // @synthesize bIsAlreadyReloadWebviewFromJsapi=_bIsAlreadyReloadWebviewFromJsapi;
@property(nonatomic) _Bool bIsReportSchemeWickedAlready; // @synthesize bIsReportSchemeWickedAlready=_bIsReportSchemeWickedAlready;
@property(nonatomic) _Bool bHasTriggerOpenUrl; // @synthesize bHasTriggerOpenUrl=_bHasTriggerOpenUrl;
@property(nonatomic) long long useSchemeCount; // @synthesize useSchemeCount=_useSchemeCount;
@property(retain, nonatomic) NSString *encodeSchemeStr; // @synthesize encodeSchemeStr=_encodeSchemeStr;
@property(retain, nonatomic) NSString *jumpAppStoreUrl; // @synthesize jumpAppStoreUrl=_jumpAppStoreUrl;
@property(retain, nonatomic) WebViewOAuthLogic *oauthLogic; // @synthesize oauthLogic=_oauthLogic;
@property(retain, nonatomic) UILabel *m_deeplinkRedirecting; // @synthesize m_deeplinkRedirecting=_m_deeplinkRedirecting;
@property(retain, nonatomic) UIImageView *m_addressBarView; // @synthesize m_addressBarView=_m_addressBarView;
@property(retain, nonatomic) UIView *tailBgView; // @synthesize tailBgView=_tailBgView;
@property(nonatomic) _Bool m_isDisableShareMenu; // @synthesize m_isDisableShareMenu=_m_isDisableShareMenu;
@property(nonatomic) _Bool bIsForceShowCloseButton; // @synthesize bIsForceShowCloseButton=_bIsForceShowCloseButton;
@property(nonatomic) _Bool m_bPreloadInMem; // @synthesize m_bPreloadInMem=_m_bPreloadInMem;
@property(copy, nonatomic) CDUnknownBlockType interceptCloseBlock; // @synthesize interceptCloseBlock=_interceptCloseBlock;
@property(retain, nonatomic) MMTimer *wepkgLoadingTimer; // @synthesize wepkgLoadingTimer=_wepkgLoadingTimer;
@property(retain, nonatomic) NSMutableArray *visibleStateArray; // @synthesize visibleStateArray=_visibleStateArray;
@property(nonatomic) unsigned long long reportDesinatedBeginTime; // @synthesize reportDesinatedBeginTime=_reportDesinatedBeginTime;
@property(nonatomic) unsigned long long reportBeginTime; // @synthesize reportBeginTime=_reportBeginTime;
@property(retain, nonatomic) NSMutableArray *reportFormatDataList; // @synthesize reportFormatDataList=_reportFormatDataList;
@property(nonatomic) _Bool reportInstantly; // @synthesize reportInstantly=_reportInstantly;
@property(nonatomic) long long reportId; // @synthesize reportId=_reportId;
@property(retain, nonatomic) MMWebCustomLog *customLog; // @synthesize customLog=_customLog;
@property(retain, nonatomic) MMWebViewPresetUI *presetUI; // @synthesize presetUI=_presetUI;
@property(nonatomic) _Bool m_bIsJsapiUploadVideoUploading; // @synthesize m_bIsJsapiUploadVideoUploading=_m_bIsJsapiUploadVideoUploading;
@property(nonatomic) _Bool m_isLanscape; // @synthesize m_isLanscape=_m_isLanscape;
@property(nonatomic) _Bool m_bIsRestrictAppstore; // @synthesize m_bIsRestrictAppstore=_m_bIsRestrictAppstore;
@property(nonatomic) _Bool m_bIsDelayPushWebView; // @synthesize m_bIsDelayPushWebView=_m_bIsDelayPushWebView;
@property(retain, nonatomic) UILabel *m_addressLabel; // @synthesize m_addressLabel=_m_addressLabel;
@property(retain, nonatomic) UIView *m_navBarView; // @synthesize m_navBarView=_m_navBarView;
@property(retain, nonatomic) MMWebProgressBar *m_progressBar; // @synthesize m_progressBar=_m_progressBar;
@property(nonatomic) _Bool m_bUserHasClickLink; // @synthesize m_bUserHasClickLink=_m_bUserHasClickLink;
@property(retain, nonatomic) CContact *brandContact; // @synthesize brandContact=_brandContact;
@property(nonatomic) _Bool m_bDeepLink; // @synthesize m_bDeepLink=_m_bDeepLink;
@property(nonatomic) _Bool m_canCache; // @synthesize m_canCache=_m_canCache;
@property(retain, nonatomic) MMWebViewPluginScheduler *pluginScheduler; // @synthesize pluginScheduler=_pluginScheduler;
@property(nonatomic) _Bool m_bUseColorfulNavBar; // @synthesize m_bUseColorfulNavBar=_m_bUseColorfulNavBar;
@property(nonatomic) _Bool m_bIsStatusBarBlack; // @synthesize m_bIsStatusBarBlack=_m_bIsStatusBarBlack;
@property(nonatomic) _Bool m_bReadingArticleBanner; // @synthesize m_bReadingArticleBanner;
@property(nonatomic) _Bool m_bShowOnNewMainFrameBanner; // @synthesize m_bShowOnNewMainFrameBanner;
@property(nonatomic) _Bool m_bIsPortraitBeforeOpenUrl; // @synthesize m_bIsPortraitBeforeOpenUrl;
@property(readonly, nonatomic) _Bool m_isPreviewing; // @synthesize m_isPreviewing;
@property(readonly, nonatomic) NSString *m_initUrl; // @synthesize m_initUrl;
@property(retain, nonatomic) NSMutableDictionary *m_extraInfo; // @synthesize m_extraInfo;
@property(readonly, nonatomic) WebViewA8KeyLogicImpl *m_a8KeyLogicImpl; // @synthesize m_a8KeyLogicImpl;
@property(readonly, nonatomic) WebViewJSLogicImpl *m_jsLogicImpl; // @synthesize m_jsLogicImpl;
@property(nonatomic) __weak id <MMWebViewDelegate> m_delegate; // @synthesize m_delegate;
@property(retain, nonatomic) WKWebView<YYWebViewInterface> *webView; // @synthesize webView;
- (id).cxx_construct;
- (void).cxx_destruct;
- (id)getCurrentOfflinePageA8KeyData;
- (id)tagForCurrentPage;
- (void)forceShowCloseButton;
- (void)interceptClose;
- (_Bool)shouldInterceptClose;
- (void)configInterceptClose:(CDUnknownBlockType)arg1 alwayIntercept:(_Bool)arg2;
- (void)configInterceptClose:(CDUnknownBlockType)arg1;
- (void)setNotifyWillReturnBlock:(CDUnknownBlockType)arg1;
- (void)setDelayLoadActionBlock:(CDUnknownBlockType)arg1;
- (id)getLeftBarButton;
- (void)tryStartOutlinkDetect;
- (unsigned char)getPermissionWithName:(id)arg1;
- (void)sendGetA8KeyEvent:(id)arg1;
- (void)removeSendAppMessageJsapiTempAllowAuthority;
- (void)sendEventToJSBridge:(id)arg1 Param:(id)arg2;
- (void)doJsApiInitEvent;
- (void)setCurrentUrl:(id)arg1;
- (unsigned int)getCurrentScene;
- (_Bool)isContentOriginal;
- (_Bool)isCanShowAllMenus;
- (_Bool)isPageDidLoad;
- (id)getCurrentUrl;
- (void)stopForcedRotationToPortrait;
- (void)startForcedRotationToPortrait;
- (id)getWebViewTimeProfileData;
- (void)permitTempAccessOfJSApi:(id)arg1;
- (void)shareToFB;
- (void)immediateDismissWebViewController;
- (void)dismissWebViewController;
- (void)setDisableWebAlertView:(_Bool)arg1;
- (_Bool)isMenuAction:(id)arg1;
- (id)getRequestingOrCurrentUrl;
- (void)onSelectFont:(unsigned int)arg1;
- (_Bool)shoudDelaySetFont;
- (void)cleanJSAPIDelegate;
- (unsigned long long)supportedInterfaceOrientations;
- (_Bool)forcedRotationToPortrait;
- (void)stopWepkgLoadingView;
- (void)delaySetFontsWithSize:(id)arg1;
- (id)getUrlPermission:(id)arg1;
- (_Bool)hasUrlPermission:(id)arg1;
- (id)getLastUrl;
- (id)getRoutUrls;
- (unsigned int)GetGeneralBitSetForUrl:(id)arg1;
- (_Bool)IsBitsetSet:(unsigned int)arg1 forUrl:(id)arg2;
- (_Bool)allowShowAppMsgTailName;
- (_Bool)allowCallJsapiBeforeLoad;
- (_Bool)allowFayByImage;
- (_Bool)allowShareByImage;
- (_Bool)allowScanQRCodeByImage;
- (unsigned int)GetPermissionBitSet3;
- (unsigned int)GetPermissionBitSet2;
- (unsigned int)GetPermissionBitSet;
- (unsigned long long)GetDeepLinkBitSet;
@property(readonly, nonatomic) _Bool m_bOfflinePage;
- (id)getInitUrl;
- (id)getShareUrl;
- (id)getCurrentAppId;
- (void)shouldShowGoBackBtn;
- (void)setSwipeBackInteractiveEnable:(_Bool)arg1;
- (void)setPublisher:(id)arg1;
- (void)setTitle:(id)arg1;
- (_Bool)isViewDidAppear;
- (id)extraInfo;
- (void)setExtraInfoValue:(id)arg1 forKey:(id)arg2;
- (void)setDisableShareMenu:(_Bool)arg1;
- (void)setAutoSetTitle:(_Bool)arg1;
- (void)startupPreVerifyJSAPI:(id)arg1 failHandleBlock:(CDUnknownBlockType)arg2;
- (void)OnClose;
- (void)backToAppIfNeed;
- (void)OnReturn;
- (void)doBackActionCleanWithType:(_Bool)arg1;
- (void)onClickFailView:(id)arg1;
- (void)done:(id)arg1;
- (void)notifyToJSBridgeVisibilityChanged:(_Bool)arg1;
- (void)loadHTMLString:(id)arg1 baseURL:(id)arg2;
- (void)goToURL:(id)arg1;
- (void)goForward;
- (void)goBack;
- (void)stop;
- (void)reload;
- (void)StartLoadWeb;
- (_Bool)gestureRecognizer:(id)arg1 shouldRequireFailureOfGestureRecognizer:(id)arg2;
- (_Bool)gestureRecognizer:(id)arg1 shouldBeRequiredToFailByGestureRecognizer:(id)arg2;
- (_Bool)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
- (_Bool)gestureRecognizerShouldBegin:(id)arg1;
- (void)scrollViewDidEndScrollingAnimation:(id)arg1;
- (void)scrollViewDidScroll:(id)arg1;
- (void)scrollViewWillBeginDecelerating:(id)arg1;
- (void)scrollViewDidEndDragging:(id)arg1 willDecelerate:(_Bool)arg2;
- (void)scrollViewWillBeginDragging:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)applicationWillEnterForeground;
- (void)applicationDidEnterBackground;
- (void)applicationWillResignActive;
- (void)keyboardDidShow:(id)arg1;
- (void)onMenuControllerDidShow:(id)arg1;
- (void)onMenuControllerDidHide:(id)arg1;
- (void)removeNotificationAndObservers;
- (void)initNotificationAndObservers;
- (void)kvReportJSCall:(id)arg1 withParam:(id)arg2;
- (id)getJSFunctionDef:(id)arg1;
- (void)onShowAutoOAuthViewWithSchemeUrl:(id)arg1 Success:(_Bool)arg2 Wording:(id)arg3 HeadImgUrl:(id)arg4;
- (void)onStartGetA8Key;
- (void)saveJSAPIPermissionsInOfflineCache:(id)arg1 url:(id)arg2;
- (void)saveJSAPIPermissions:(id)arg1 url:(id)arg2;
- (void)saveJSAPIAuthInfo:(id)arg1;
- (void)onJumpToEmoticonDetailViewController:(id)arg1;
- (void)onJumpToViewController:(id)arg1;
- (void)onJumpToSafariWithUrl:(id)arg1;
- (void)onUpdatedPermisson;
- (void)onGetA8KeyWithMediaAutoPlay;
- (void)onGetA8Key:(_Bool)arg1 ReqUrl:(id)arg2 Reason:(int)arg3;
- (id)webviewController;
- (void)handleMonitorMessage:(id)arg1 params:(id)arg2;
- (void)onCopy:(id)arg1;
- (_Bool)isTempAccessOfJSApiPermitted:(id)arg1;
- (void)onPageStateChange:(id)arg1;
- (id)getAuthorizedMonitorEvents:(id)arg1;
- (void)processJSAPICall:(id)arg1 funcDef:(id)arg2 funcBlock:(CDUnknownBlockType)arg3 failHandleBlock:(CDUnknownBlockType)arg4 apiPermission:(unsigned char)arg5;
- (unsigned char)getJSApiPermission:(id)arg1;
- (_Bool)isGetingA8Key;
- (id)getCurrentWebviewViewController;
- (_Bool)isSvrErrorTipForbidden;
- (void)willDisappear;
- (void)initDeepLinkConfig;
- (id)getVCWithDeepLinkName:(id)arg1;
- (_Bool)useBlackStatusbar;
- (_Bool)useTransparentNavibar;
- (void)willAnimateRotationToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (void)willRotateToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (void)didRotateFromInterfaceOrientation:(long long)arg1;
- (void)viewWillPop:(_Bool)arg1;
- (void)viewWillPresent:(_Bool)arg1;
- (void)viewWillPush:(_Bool)arg1;
- (void)willDismissAndShow;
- (void)viewDidBeDismissed:(_Bool)arg1;
- (void)viewWillBeDismissed:(_Bool)arg1;
- (void)viewDidBePoped:(_Bool)arg1;
- (void)viewWillBePoped:(_Bool)arg1;
- (void)viewWillBePushed:(_Bool)arg1;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)didAppear;
- (void)willAppear;
- (void)viewDidAppear:(_Bool)arg1;
- (void)dealloc;
- (void)viewDidLoad;
- (id)getWXHookScriptStr;
- (id)getPreInjectScriptStr;
- (_Bool)allowsAutoMediaPlay;
- (_Bool)allowsInlineMediaPlay;
- (void)webViewDidReceiveResponse:(id)arg1;
- (void)webviewDidReceiveScriptMessage:(id)arg1 handler:(id)arg2;
- (void)webViewContentProcessDidTerminate:(id)arg1;
- (void)webView:(id)arg1 didFailLoadWithError:(id)arg2;
- (void)recordArrRouteUrl:(id)arg1;
- (void)webViewDidFinishLoad:(id)arg1;
- (void)webViewDidStartLoad:(id)arg1;
- (_Bool)tryHandleHttpRefer:(id)arg1;
- (_Bool)trySyncGetA8KeyRequest:(id)arg1;
- (_Bool)webView:(id)arg1 shouldStartLoadWithRequest:(id)arg2 navigationType:(long long)arg3 isMainFrame:(_Bool)arg4;
- (void)initCustomHandler:(id)arg1;
- (void)initJsInitInfo:(id)arg1;
- (void)initWebView:(id)arg1;
- (void)initWebViewA8key:(id)arg1;
- (void)initCustomParams:(id)arg1;
- (void)internalInitWithUrl:(id)arg1 presentModal:(_Bool)arg2 extraInfo:(id)arg3;
- (id)initWithURL:(id)arg1 presentModal:(_Bool)arg2 extraInfo:(id)arg3 referer:(id)arg4;
- (id)initWithURL:(id)arg1 presentModal:(_Bool)arg2 extraInfo:(id)arg3 delegate:(id)arg4;
- (id)initWithURL:(id)arg1 presentModal:(_Bool)arg2 extraInfo:(id)arg3;
- (unsigned long long)getOneSectionTime:(unsigned long long)arg1 EndTime:(unsigned long long)arg2 ReportEndTime:(unsigned long long)arg3;
- (unsigned long long)calcAllVisibleTimeDuration:(unsigned long long)arg1;
- (long long)getTimeToAdd:(id)arg1;
- (id)processingPlaceHolder:(id)arg1 PlaceHolder:(id)arg2 TimeDuration:(unsigned long long)arg3;
- (void)reportTimeEnd;
- (_Bool)addWebviewVisibleState:(_Bool)arg1 Reason:(id)arg2;
- (void)reportTimeBegin;
- (_Bool)isGamePage;
- (void)onTapBlurEffectView;
- (void)onFinalBackButtonClick:(id)arg1;
- (void)didEndSearch:(id)arg1;
- (void)willEndSearch:(id)arg1;
- (void)didBeginSearch:(id)arg1;
- (void)willBeginSearch:(id)arg1;
- (void)cancelWebSearchAnimated:(_Bool)arg1;
- (_Bool)isWebSearchActive;
- (void)prepareHistoryWebSearchForBrandContact:(id)arg1;
- (void)restoreDefaultBackgroundColorAndCleanFooterBounceColor;
- (void)setCustomBackgroundColor:(id)arg1;
- (void)setDisableWebViewScrollViewBounces;
- (void)setPayTitle:(id)arg1;
- (void)resetStatusBarFromWebSearch;
- (void)setDisableProgressView:(_Bool)arg1;
- (void)setUIDisableShareMenu:(_Bool)arg1;
- (void)setFullScreen:(_Bool)arg1;
- (void)hideLoadFailView;
- (void)relayoutLoadFailView;
- (void)showLoadFailView:(unsigned int)arg1 errorCode:(long long)arg2;
- (void)handleUIWillAnimateRotationToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (void)handleUIwillRotateToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (void)setShareBarItem:(id)arg1;
- (void)updateRightBarButtonWithURL:(id)arg1;
- (void)setTailBackGroundColor:(id)arg1;
- (void)restoreToDefaultNavBar;
- (void)setNavBarBgColor:(id)arg1;
- (void)restoreAddressBar;
- (void)initAddressBarView;
- (void)initDeeplinkRedirectingView;
- (void)initNavBarView;
- (void)handlePresetUI;
- (void)initPresentNavigaionBarItem:(id)arg1;
- (void)configNavigationBarItem;
- (void)initProgressView;
- (void)initCommonViewWithUrl:(id)arg1 presentModal:(_Bool)arg2;
- (void)webViewFrameDidChange:(struct CGRect)arg1;
- (void)accessDeepLink:(id)arg1 Url:(id)arg2;
- (void)jumpDeepLink:(id)arg1;
- (_Bool)canAccessDeepLink:(id)arg1 Url:(id)arg2;
- (void)hideAllNonBaseMenuItem;
- (void)showAllNonBaseMenuItem;
- (void)showMenuitemBatch:(id)arg1;
- (void)hideMenuitemBatch:(id)arg1;
- (void)modifyPermissionValue:(id)arg1 permissionValue:(unsigned char)arg2;
- (void)clearWebviewCacheAndCookie:(_Bool)arg1;
- (void)cleanWebCacheFromReloadMenuAction;
- (void)doCleanCookiesForUrl:(id)arg1;
- (void)cleanCookiesIfNeed;
- (void)handleOnShowAutoOAuthViewWithSchemeUrl:(id)arg1 Success:(_Bool)arg2 Wording:(id)arg3 HeadImgUrl:(id)arg4;
- (void)handleOAuth:(id)arg1;
- (_Bool)needHandleNativeOAuth:(id)arg1;
- (void)setEnterpriseConnectorLogic:(id)arg1;
- (id)getEnterpriseConnectorLogic;
- (_Bool)checkAutoMediaPlayFor:(id)arg1 withRegStr:(id)arg2;
- (void)doDNS;
- (_Bool)judgeAllowsAutoMediaPlay;
- (id)getOperationButtonImageNameWithURL:(id)arg1;
- (id)getJumpOutAppStoreAlertTitleWithUrl:(id)arg1;
- (id)getWebviewBannerTitle;
- (id)getAddressBarHostText:(id)arg1;
- (void)showJSLog:(id)arg1;
- (void)showSearchTextKeyboard;
- (void)removeAllHighlights;
- (void)highlightAllOccurencesOfString:(id)arg1 searchIndex:(unsigned long long)arg2;
- (void)injectSearchInPageJS;
- (void)tryLogWebViewJumpOut;
- (void)logUseWebviewSchemeToJumpWithUrl:(id)arg1;
- (void)handleClickTipsBtn:(id)arg1 Index:(long long)arg2 withText:(id)arg3;
- (void)handleClickEmptyBackgroundViewToHideTips;
- (void)showAlertBeforeJumpAppStoreWithUrl:(id)arg1;
- (void)delayPopForAppStore;
- (void)delayHandleUrl:(id)arg1;
- (void)handleScanQrCodeUrl:(id)arg1;
- (_Bool)shouldHandleScanQrCodeUrl:(id)arg1;
- (void)handleJumpUrl:(id)arg1;
- (_Bool)shouldHandleJumpUrl:(id)arg1;
- (void)handleJumpProfileUrl:(id)arg1;
- (_Bool)shouldHandleJumpProfileUrl:(id)arg1;
- (void)handleUrlHandler:(id)arg1;
- (void)handleAppStroeUrlString:(id)arg1;
- (void)handleFeedBackWithUrlString:(id)arg1;
- (_Bool)shouldHandleDlFeedBackRange:(id)arg1;
- (void)handleDeepLinkWithUrlString:(id)arg1;
- (void)promptForAuthInfo:(id)arg1;
- (void)checkApiAuthorization:(id)arg1;
- (void)startWebSearch:(id)arg1;
- (void)doSearch:(id)arg1;
- (void)setCustomMenu;
- (void)reportFailToLoadCachePage;
- (void)reportLoadPageTime:(double)arg1 url:(id)arg2;
- (void)reportDidFailLoadWebView:(id)arg1 loadingUrl:(id)arg2 error:(id)arg3;
- (void)reportDidFinishedLoadWebView:(id)arg1 loadingUrl:(id)arg2;
- (void)reportShouldStartHttpsUrl:(id)arg1;
- (void)reportJSCall:(id)arg1 withParam:(id)arg2;
- (void)tryReportMonitorMessage:(id)arg1 params:(id)arg2;
- (void)reportCopyContent:(id)arg1;
- (void)reportIDKeyForWKWebViewTerminateBackground;
- (void)reportIDKeyForWKWebViewTerminateForceground;
- (void)reportIDKeyForLoadFinish:(long long)arg1;
- (void)reportIDKeyForSystemError:(long long)arg1;
- (void)reportIDKeyForAllRequest;
- (void)logFeature11576WithOpType:(unsigned int)arg1;
- (void)onLongPressOnWebview:(id)arg1;
- (void)enableLongPressDetect;
- (_Bool)isShowMenuItem:(id)arg1;
- (_Bool)isAuthMonitor:(id)arg1 event:(id)arg2;
- (void)reportWhenClickMenuWithActionType:(unsigned long long)arg1;
- (void)onExposeComplete;
- (void)showEnterpriseConnectResult:(id)arg1;
- (void)onEnterpriseConnectFail:(id)arg1;
- (void)onEnterpriseConnectSucceed:(id)arg1;
- (void)onEnterpriseSelectChat:(id)arg1 brand:(id)arg2 logic:(id)arg3;
- (void)onEnterpriseSelectBrand:(id)arg1 logic:(id)arg2;
- (void)onWebViewEditTag;
- (void)onWebViewDelete;
- (void)actionSheet:(id)arg1 clickedButtonAtIndex:(long long)arg2;
- (void)scrollActionSheetWillDismiss:(id)arg1;
- (void)scrollActionSheetDidScroll:(id)arg1;
- (void)logFeature11577WithOpType:(unsigned long long)arg1;
- (void)didSelecteMenuItem:(id)arg1;
- (void)scrollActionSheet:(id)arg1 didSelecteItem:(id)arg2;
- (void)setupRow1;
- (void)setupRow2;
- (void)setupIconActionSheetCells;
- (void)addWebviewSearchButtonWithArray:(id)arg1;
- (void)setupPreShowIconActionSheet;
- (void)AddMemuData:(id)arg1 toRow:(id)arg2;
- (void)setupCustomMenuForJD;
- (void)addJSCustomMenuData:(id)arg1;
- (void)showCustomActionSheet:(id)arg1;
- (void)showH5GameCustomMenu:(id)arg1 OrientationLocked:(_Bool)arg2;
- (void)onOperate:(id)arg1;
- (void)addH5GameExtraButton:(id)arg1;
- (void)addViewBrandContactButtonWithArrary:(id)arg1;
- (void)addReadArticleButtonWithArrary:(id)arg1;
- (void)addCancleOrBackToNewMainFrameButtonWithArrary:(id)arg1;
- (void)addQQBrowserButtonWithArrary:(id)arg1;
- (void)addShareToWeWorkButtonWithArray:(id)arg1;
- (void)addShareToQZoneButtonWithArray:(id)arg1;
- (void)addShareToQQButtonWithArray:(id)arg1;
- (void)addShareToWeReadButtonWithArray:(id)arg1;
- (void)addExposeButtonWithArray:(id)arg1;
- (void)addAdjustFontButtonWithArray:(id)arg1;
- (void)addFavouriteButtonWithArray:(id)arg1;
- (void)addCopyToPasteboardButtonWithArray:(id)arg1;
- (void)addSendToEnterpriseWithArray:(id)arg1;
- (void)addOpenInSafariButtonWithArray:(id)arg1;
- (void)addRefreshButtonWithArray:(id)arg1;
- (void)addSupportBrandToMenuAtEndOf:(id)arg1;
- (id)AddNewActionSheetCell2Array:(id)arg1 WithText:(id)arg2 WithImage:(id)arg3;
- (void)doSearchInPage;
- (void)readMode;
- (void)hideChangeFont;
- (void)exposeArticle;
- (void)showChangeFont:(unsigned int)arg1;
- (void)copyToPasteBoard;
- (void)openWithQQBrowser;
- (void)openWithSafari;
- (void)jumpToInstallUrl:(id)arg1;
- (void)shareWithAppMessage:(id)arg1;
- (_Bool)isEnableCustom:(id)arg1 domainPathList:(id)arg2;
- (void)sendToEnterprise;
- (void)shareWithEmail;
- (void)shareToWeWork;
- (void)shareToQZone;
- (void)shareToWeibo;
- (void)shareToQQ;
- (void)shareToWeRead;
- (void)shareToFaceBook;
- (void)shareToTimeline;
- (void)setFontWithSize:(long long)arg1;
- (void)log3DTouchWebViewActionFeatureWithOpType:(id)arg1;
- (id)previewActionItems;
- (id)initForwardPreviewWithURL:(id)arg1 presentModal:(_Bool)arg2 extraInfo:(id)arg3;
- (void)setPreviewFrame:(struct CGRect)arg1;
- (void)setPreviewTopBar:(id)arg1;
- (id)initForPreviewWithURL:(id)arg1 presentModal:(_Bool)arg2 extraInfo:(id)arg3;
- (void)commitViewController;
- (_Bool)canPop;
@property(nonatomic) __weak UIView *previewSourceView;
@property(nonatomic) __weak UIViewController *previewFromController;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly, nonatomic) NSURLRequest *request;
@property(readonly) Class superclass;

@end

