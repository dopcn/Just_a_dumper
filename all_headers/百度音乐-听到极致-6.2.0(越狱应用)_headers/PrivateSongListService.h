//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

@class NSArray, NSMutableDictionary;

@interface PrivateSongListService : NSObject
{
    _Bool _needShowFirstAlert;
    _Bool _isGetList;
    _Bool _isSync;
    int _fetchListindex;
    NSArray *_saveListLocalListArray;
    CDUnknownBlockType _saveListSuccessBlock;
    CDUnknownBlockType _saveListFailureBlock;
    long long _saveListSuccessNum;
    long long _uploadListIndex;
    long long _fetchListSongIndex;
    NSMutableDictionary *_playlistIDs;
}

+ (void)closeCover;
+ (void)showCoverWithTitle:(id)arg1;
+ (void)showCover;
+ (void)showOnlyWifiReachableTip;
+ (void)showNotReachableTip;
+ (_Bool)isOnlyWifi;
+ (_Bool)isNotReachable;
+ (void)loginWithBlock:(CDUnknownBlockType)arg1;
+ (_Bool)isLogin;
+ (id)fetchReachableOnlyWifiReachableInfo;
+ (id)fetchReachableNotReachableInfo;
+ (void)purgeSharedInstance;
+ (id)sharedInstance;
+ (id)sharedInstanceSynch;
+ (id)sharedInstanceNoSynch;
@property(retain, nonatomic) NSMutableDictionary *playlistIDs; // @synthesize playlistIDs=_playlistIDs;
@property int fetchListindex; // @synthesize fetchListindex=_fetchListindex;
@property long long fetchListSongIndex; // @synthesize fetchListSongIndex=_fetchListSongIndex;
@property long long uploadListIndex; // @synthesize uploadListIndex=_uploadListIndex;
@property long long saveListSuccessNum; // @synthesize saveListSuccessNum=_saveListSuccessNum;
@property(copy, nonatomic) CDUnknownBlockType saveListFailureBlock; // @synthesize saveListFailureBlock=_saveListFailureBlock;
@property(copy, nonatomic) CDUnknownBlockType saveListSuccessBlock; // @synthesize saveListSuccessBlock=_saveListSuccessBlock;
@property(retain, nonatomic) NSArray *saveListLocalListArray; // @synthesize saveListLocalListArray=_saveListLocalListArray;
@property _Bool isSync; // @synthesize isSync=_isSync;
@property(nonatomic) _Bool isGetList; // @synthesize isGetList=_isGetList;
@property(nonatomic) _Bool needShowFirstAlert; // @synthesize needShowFirstAlert=_needShowFirstAlert;
- (void).cxx_destruct;
- (void)cancelAll;
- (void)reachabilityChanged:(id)arg1;
- (void)popAddtracksVC:(id)arg1;
- (void)realDoAddTracks:(id)arg1;
- (void)doAddTracks:(id)arg1;
- (void)addSongToList:(id)arg1;
- (void)cancelFetchListSong;
- (void)refreshSelfCreatSongListSongOrder:(id)arg1;
- (void)getListSongWithListID:(id)arg1;
- (void)getListSongWithListID:(id)arg1 success:(CDUnknownBlockType)arg2 failure:(CDUnknownBlockType)arg3;
- (void)fetchListSongWithListID:(id)arg1 resultModel:(id)arg2 success:(CDUnknownBlockType)arg3 failure:(CDUnknownBlockType)arg4;
- (void)doFetchListSongWithListID:(id)arg1 success:(CDUnknownBlockType)arg2 failure:(CDUnknownBlockType)arg3;
- (void)doDeleteListSongWithListID:(id)arg1 songIDArray:(id)arg2 success:(CDUnknownBlockType)arg3 failure:(CDUnknownBlockType)arg4;
- (void)deleteListSongWithListID:(id)arg1 songIDArray:(id)arg2 success:(CDUnknownBlockType)arg3 failure:(CDUnknownBlockType)arg4;
- (void)addListSongTotalFullLimitAlert:(id)arg1;
- (void)addListSongLimitAlertWithAction:(CDUnknownBlockType)arg1;
- (void)nextAddSongs:(id)arg1 songIDArray:(id)arg2 index:(long long)arg3 model:(id)arg4 success:(CDUnknownBlockType)arg5 failure:(CDUnknownBlockType)arg6;
- (void)doAddListSongWithListID:(id)arg1 songIDArray:(id)arg2 success:(CDUnknownBlockType)arg3 failure:(CDUnknownBlockType)arg4;
- (void)addListSongWithListID:(id)arg1 songIDArray:(id)arg2 success:(CDUnknownBlockType)arg3 failure:(CDUnknownBlockType)arg4;
- (void)cancelGetList;
- (void)doFetchListSuccess:(CDUnknownBlockType)arg1 failure:(CDUnknownBlockType)arg2;
- (void)fetchListSuccess:(CDUnknownBlockType)arg1 failure:(CDUnknownBlockType)arg2;
- (void)getList;
- (void)getListSuccess:(CDUnknownBlockType)arg1 failure:(CDUnknownBlockType)arg2;
- (void)getList:(id)arg1 success:(CDUnknownBlockType)arg2 failure:(CDUnknownBlockType)arg3;
- (void)doUpdateListWithTitle:(id)arg1 listID:(id)arg2 success:(CDUnknownBlockType)arg3 failure:(CDUnknownBlockType)arg4;
- (void)updateListWithTitle:(id)arg1 listID:(id)arg2 success:(CDUnknownBlockType)arg3 failure:(CDUnknownBlockType)arg4;
- (void)doDeleteListWithID:(id)arg1 success:(CDUnknownBlockType)arg2 failure:(CDUnknownBlockType)arg3;
- (void)deleteListWithID:(id)arg1 success:(CDUnknownBlockType)arg2 failure:(CDUnknownBlockType)arg3;
- (void)syncSelfCreatSongListUpdateList;
- (void)doSyncPrivateSongList;
- (void)doShowSyncAlertSuccess:(CDUnknownBlockType)arg1 failure:(CDUnknownBlockType)arg2;
- (void)syncTimeout:(CDUnknownBlockType)arg1;
- (void)showSyncAlertSuccess:(CDUnknownBlockType)arg1 failure:(CDUnknownBlockType)arg2;
- (void)showPrivateSongListAlert;
- (void)syncPrivateSongList;
- (void)cancelSaveList;
- (id)findChangePlaylistid:(id)arg1;
- (void)getSaveListResult:(id)arg1 totalCount:(long long)arg2;
- (void)doSyncPrivateSongListWithTitle:(id)arg1 songIDArray:(id)arg2 playListID:(id)arg3 totalCount:(long long)arg4;
- (void)uploadSingList:(id)arg1;
- (void)uploadNextList;
- (void)syncListSuccess:(CDUnknownBlockType)arg1 failure:(CDUnknownBlockType)arg2;
- (void)showLimitAlert:(id)arg1;
- (void)addListLimitAlert;
- (void)doAddListWithTitle:(id)arg1 success:(CDUnknownBlockType)arg2 failure:(CDUnknownBlockType)arg3;
- (void)addListWithTitle:(id)arg1 success:(CDUnknownBlockType)arg2 failure:(CDUnknownBlockType)arg3;
- (void)dealloc;
- (id)init;

@end

