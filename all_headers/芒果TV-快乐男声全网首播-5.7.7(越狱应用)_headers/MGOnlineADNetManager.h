//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "MGADNetManager.h"

#import "HNVideoQueuePlayerDelegate-Protocol.h"
#import "MGVideoQueuePlayerViewDataSource-Protocol.h"
#import "MGVideoQueuePlayerViewDelegate-Protocol.h"

@class FBKVOController, MGADAFHTTPSessionManager, MGADMidModel, MGDVInlineVideoAd, MGDVVideoAdServingTemplate, MGInlineAdsRequest, MGPauseAdsHandler, MGVideoQueuePlayerViewTemple, MgMiVideoSourceInfo, NSDate, NSNumber, NSString, NSTimer, YYThreadSafeArray;

@interface MGOnlineADNetManager : MGADNetManager <HNVideoQueuePlayerDelegate, MGVideoQueuePlayerViewDelegate, MGVideoQueuePlayerViewDataSource>
{
    MGADAFHTTPSessionManager *_sessionManager;
    FBKVOController *_KVOController;
    YYThreadSafeArray *_adMidList;
    YYThreadSafeArray *_cornerADs;
    NSNumber *_videoID;
    _Bool _isAllDownload;
    _Bool _isAllowPlay;
    _Bool _isPlayerDismissed;
    _Bool _isLoadMidAD;
    _Bool _isChangeCacheModel;
    int _surplusTime;
    int _suspendTime;
    int _midRollTime;
    int _previousTime;
    double _currentADTime;
    double _currentTotalTime;
    NSTimer *_adTimer;
    long long _playTicket;
    MGVideoQueuePlayerViewTemple *_adView;
    MGADMidModel *_currentMidModl;
    double _AdStartTime;
    long long _currentTime;
    long long _surplusAdIndex;
    long long _currentAdNum;
    int _isPostMoreAdMonitor;
    int _currentAdIndex;
    _Bool _isFirstPlay;
    NSDate *_detailDate;
    int _bufferCount;
    MgMiVideoSourceInfo *videoinfo;
    MGPauseAdsHandler *_pauseAdsHandler;
    MGDVVideoAdServingTemplate *_adTemplate;
    MgMiVideoSourceInfo *_videoinfo;
    NSString *_url;
    MGDVInlineVideoAd *_currentAdVideo;
    YYThreadSafeArray *_adList;
    unsigned long long _adIndex;
    MGInlineAdsRequest *_adRequest;
    unsigned long long _adPlayTicket;
}

@property(nonatomic) unsigned long long adPlayTicket; // @synthesize adPlayTicket=_adPlayTicket;
@property(retain, nonatomic) MGInlineAdsRequest *adRequest; // @synthesize adRequest=_adRequest;
@property(nonatomic) unsigned long long adIndex; // @synthesize adIndex=_adIndex;
@property(retain, nonatomic) YYThreadSafeArray *adList; // @synthesize adList=_adList;
@property(retain, nonatomic) MGDVInlineVideoAd *currentAdVideo; // @synthesize currentAdVideo=_currentAdVideo;
@property(retain, nonatomic) NSString *url; // @synthesize url=_url;
@property(retain, nonatomic) FBKVOController *KVOController; // @synthesize KVOController=_KVOController;
@property(retain, nonatomic) MgMiVideoSourceInfo *videoinfo; // @synthesize videoinfo=_videoinfo;
@property(retain, nonatomic) NSTimer *adTimer; // @synthesize adTimer=_adTimer;
- (_Bool)isAllowPlay;
@property(retain, nonatomic) MGDVVideoAdServingTemplate *adTemplate; // @synthesize adTemplate=_adTemplate;
- (void).cxx_destruct;
- (void)postPlayQualityWithEvent:(id)arg1 Status:(id)arg2 Url:(id)arg3 ErrorCode:(id)arg4 ex:(id)arg5 requestDate:(id)arg6 uuid:(id)arg7 type:(id)arg8 z:(id)arg9;
- (void)replaceCarrierUrls:(id)arg1;
- (void)removeMidErrorModelIndex:(id)arg1 midModel:(id)arg2;
- (void)removeErrorIndex:(id)arg1;
- (id)getVideoAdWithUrl:(id)arg1;
- (id)getAdURLListWithList:(id)arg1;
- (id)getAdListWithList:(id)arg1;
- (id)buildPostDict;
- (id)getImpressionWithArray:(id)arg1;
- (id)buildParamtersString:(id)arg1;
- (void)postADMoreMonitorWithNum:(unsigned long long)arg1 time:(double)arg2;
- (void)clickPauseAD:(id)arg1;
- (id)MGADViewWebviewForUrl:(id)arg1 andSize:(struct CGSize)arg2;
- (void)MGADViewInteractiveEvent:(long long)arg1 adInfo:(id)arg2;
- (void)MGADViewButtonEvent:(long long)arg1 adInfo:(id)arg2;
- (id)getCurrentAd;
- (void)queueVideoPlayerAllDownloadFinished:(id)arg1;
- (void)handleQueueErrorCode:(int)arg1 surplusPlayerItemNum:(unsigned long long)arg2 customMessage:(id)arg3 FilePath:(id)arg4;
- (void)queueVideoPlayer:(id)arg1 surplusPlayerItemNum:(unsigned long long)arg2;
- (void)queueVideoPlayer:(id)arg1 surplusPlayerItemNum:(unsigned long long)arg2 time:(double)arg3 TotalNum:(int)arg4;
- (_Bool)shouldQueueVideoPlayer:(id)arg1;
- (void)queueVideoPlayer:(id)arg1 OldState:(int)arg2 NewState:(int)arg3;
- (_Bool)shouldQueueVideoPlayer:(id)arg1 changeStateTo:(int)arg2;
- (void)showCornerADDetail:(id)arg1;
- (_Bool)needShowCornerADDetail:(id)arg1;
- (id)isExistCornerAD:(int)arg1;
- (id)isExistCornerAD;
- (void)playMid;
- (void)loadMidPlayerItem:(id)arg1;
- (void)loadMidAD:(id)arg1;
- (_Bool)isExistMidAD:(int)arg1;
- (void)loadMidADTemplate:(id)arg1;
- (void)initMidAD;
- (void)clearMidAD;
- (_Bool)adTicket:(int)arg1 Count:(int *)arg2;
- (_Bool)isShowPauseAD;
- (void)trackHidePauseAd:(id)arg1;
- (void)removePauseAdView;
- (void)showPauseAD:(int)arg1;
- (void)hideADDetail;
- (void)clickWelfare;
- (void)clickVIPSkipAD;
- (void)clickLandingADDetail:(id)arg1;
- (void)clickADDetail;
- (void)setIsAllowPlay:(_Bool)arg1;
- (void)closeADTimeTick;
- (void)exitADPlay;
- (void)contentComplete;
- (void)adlost:(long long)arg1 subModuleType:(int)arg2;
- (void)hideADView;
- (void)playerOver;
- (void)handleAllDownloadFinished;
- (void)volumeChange:(id)arg1;
- (void)closeADplayer;
- (void)loadFrontPlayerItem;
- (void)playAD;
- (void)startADsFromQueue;
- (void)adTimeTick;
- (void)requestFailure:(long long)arg1 error:(id)arg2 requestDate:(id)arg3 uuid:(id)arg4 requestUrl:(id)arg5 z:(id)arg6;
- (void)requestSuccsess:(long long)arg1 ResponseObject:(id)arg2 ptype:(id)arg3 requestDate:(id)arg4 uuid:(id)arg5 requestUrl:(id)arg6;
- (void)applyAd:(id)arg1 ptype:(id)arg2;
- (void)applyFloatAd:(id)arg1;
- (void)applyMidAd:(id)arg1;
- (void)applyAD:(id)arg1 videoSource:(id)arg2;
- (void)applyAD:(id)arg1 adRequest:(id)arg2;
- (void)setAdShowModel:(int)arg1;
- (void)enterForeground;
- (void)enterBackground;
- (void)becomeActive;
- (void)resignActive;
- (void)observeNetworkChanged:(id)arg1;
- (void)removeObservers;
- (void)addObservers;
- (void)clearOperation;
- (void)dealloc;
- (id)initWithPlayerView:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

