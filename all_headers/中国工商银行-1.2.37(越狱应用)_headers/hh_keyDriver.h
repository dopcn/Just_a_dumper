//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <UIKit/UIViewController.h>

@class HDZB_AlertView, HDZB_BTWaitViewController, HDZB_ChooseDevController, HDZB_PairView, HDZB_WaitCertController, HDZB_WaitController, HDZB_WaitNewController, HDZB_WaitUserPairView, HDZB_getPinView, UIAlertView, UILabel;

@interface hh_keyDriver : UIViewController
{
    UIAlertView *alertViewForWaiting;
    HDZB_WaitController *waitController;
    HDZB_WaitNewController *newWaitController;
    HDZB_WaitCertController *certWaitController;
    HDZB_AlertView *alertView;
    UILabel *connectLable;
    struct CGRect rect;
    _Bool isNew;
    HDZB_WaitUserPairView *waitPairView;
    HDZB_PairView *pairView;
    HDZB_ChooseDevController *chooseDev;
    id chooseDevDelegate;
    HDZB_BTWaitViewController *btWaitView;
    id controller;
    HDZB_getPinView *view;
}

+ (_Bool)checkIsIphonex;
+ (id)sharedWaitController;
+ (id)shareViewTest:(_Bool)arg1 pare:(id)arg2;
+ (id)shareView:(_Bool)arg1 pare:(id)arg2;
+ (id)shareDriver;
+ (int)sharedKeyType:(int)arg1;
+ (void)setKeySN:(id)arg1;
@property(retain, nonatomic) HDZB_getPinView *view; // @synthesize view;
@property(retain, nonatomic) id controller; // @synthesize controller;
- (void).cxx_destruct;
- (id)getApplicationName;
- (void)waitForMoment;
- (int)GetPINOld:(int)arg1 _pin:(id)arg2;
- (int)HH_getInitUserPin:(int)arg1 userPin:(id)arg2;
- (int)GetPINNew:(int)arg1 _pin:(id)arg2;
- (_Bool)getSoftPadOpen;
- (void)closeNewPinView:(_Bool)arg1;
- (int)HDZB_GetPin:(_Bool)arg1 pinType:(int)arg2 alg:(int)arg3 pin:(id)arg4;
- (void)AudioPlugin:(id)arg1;
- (int)isPinValid:(id)arg1;
- (void)closeDev;
- (void)realCloseDev;
- (long long)LcdSignDataForTest:(id)arg1 canConvert:(_Bool)arg2 _parent:(id)arg3 plainData:(id)arg4 userPin:(id)arg5 hash:(int)arg6 publicKeyBit:(int)arg7 index:(unsigned char)arg8 so:(int)arg9 signResult:(id)arg10;
- (long long)CommenSignData:(unsigned char)arg1 _soID:(int)arg2 oriData:(id)arg3 signDecKey:(id)arg4 userPin:(id)arg5 signCert:(id)arg6 publicKeyBit:(int)arg7 signResult:(id)arg8;
- (long long)setSecurityKeyFlag;
- (long long)getUserOperation;
- (long long)setCertIndex:(int)arg1 _certLength:(int)arg2;
- (long long)setKeyID:(int)arg1 idData:(id)arg2;
- (long long)getKeyID:(int)arg1 IDData:(id *)arg2;
- (long long)setCertLable:(int)arg1 lableData:(id)arg2;
- (long long)initCardData:(id)arg1;
- (long long)getPubkeyLable:(int)arg1 lableData:(id)arg2;
- (int)writeCert:(int)arg1 isGM:(_Bool)arg2 certData:(id)arg3;
- (int)GetOffsetForPublicKeyModulusInCert:(const struct ByteArray *)arg1;
- (int)checkPubKeyLen:(char *)arg1;
- (int)FindConWithModulus:(int)arg1 pubkeyList:(id)arg2;
- (long long)CertSignData:(unsigned char)arg1 hashType:(int)arg2 soID:(int)arg3 keyBit:(int)arg4 oriData:(id)arg5 userPin:(id)arg6 signResult:(id)arg7;
- (int)convertAlg2PadAlg:(int)arg1;
- (long long)getPublicKey:(int)arg1 keyLength:(int)arg2 pubKey:(id)arg3;
- (long long)setKeyIndex:(int)arg1 _isSM2:(_Bool)arg2 _bit:(int)arg3;
- (long long)setContainer:(int)arg1 containerName:(id)arg2;
- (long long)generateGMKeyPairs:(int)arg1 isGM:(_Bool)arg2 ALG:(int)arg3 keyUsage:(int)arg4 hashUsage:(int)arg5 userPin:(id)arg6;
- (long long)setPubkeyLable:(int)arg1 lableData:(id)arg2;
- (long long)createCertFile:(int)arg1 certMaxLength:(int)arg2 userPin:(id)arg3;
- (long long)generateKeyPairs:(int)arg1 keyBit:(int)arg2 userPin:(id)arg3;
- (long long)LcdSignData:(id)arg1 canConvert:(_Bool)arg2 _parent:(id)arg3 signDecKey:(id)arg4 plainData:(id)arg5 userPin:(id)arg6 signCert:(id)arg7 publicKeyBit:(int)arg8 hash:(int)arg9 index:(unsigned char)arg10 so:(int)arg11 signResult:(id)arg12;
- (void)MessageBoxThread:(id)arg1;
- (long long)parseX509Certificates:(id)arg1 PropertyType:(int)arg2 PropertyValue:(id)arg3;
- (long long)ChangePassword:(_Bool)arg1 oldPin:(id)arg2 newPin:(id)arg3;
- (void)waitActive;
- (long long)VerifyPassword:(_Bool)arg1 psw:(id)arg2;
- (void)endShowTip:(_Bool)arg1;
- (void)endCertShow;
- (void)refreshCertShowTip:(id)arg1;
- (_Bool)startCertShowTip:(id)arg1;
- (_Bool)startShowTip:(id)arg1;
- (_Bool)startInitPinTip;
- (_Bool)startShowPinTip;
- (_Bool)startChangePinTip;
- (_Bool)isSystem7orHeighter;
- (_Bool)startWaitingTip;
- (long long)getPublicKeyBit:(int)arg1 _ibt:(int *)arg2;
- (long long)setLanguage:(int)arg1 charSet:(int)arg2;
- (long long)getPinTime:(int *)arg1;
- (long long)isConnected:(_Bool *)arg1;
- (long long)getPublicKeyC:(unsigned char)arg1 _pubKeySoid:(unsigned char)arg2 _bit:(int)arg3 publicKey:(id)arg4;
- (long long)checkSNandCert:(id)arg1 signCode:(int)arg2 signCertCN:(id)arg3 _so:(int *)arg4 _conFile:(struct _CON_FILE *)arg5 certData:(id)arg6 needCheck:(_Bool)arg7 readKeySN:(id *)arg8;
- (long long)getZ:(unsigned char)arg1 _so:(unsigned char)arg2 _zData:(id)arg3;
- (long long)getAllCertForSign:(id)arg1;
- (long long)checkSNandCertForState:(id)arg1 signCode:(int)arg2 signCertCN:(id)arg3 certData:(id)arg4 _certType:(int *)arg5 _keyType:(int *)arg6 _so:(int *)arg7 _conFile:(struct _CON_FILE *)arg8 needCheck:(int)arg9 useage:(_Bool)arg10 readKeySN:(id *)arg11;
- (long long)getSNForTest;
- (long long)getSNForInfo:(_Bool)arg1 _tryTime:(int)arg2 _sn:(id)arg3;
- (long long)enumBTDevice:(id)arg1;
- (long long)getKeyTypeAndCanConvert:(int *)arg1 _canConvert:(_Bool *)arg2;
- (int)checkDeviceOpen:(id)arg1 needReOpen:(_Bool)arg2;
- (void)showErrorMsg:(int)arg1;
- (_Bool)checkAudio;
- (void)showMicError;
- (void)unInit:(_Bool)arg1;
- (void)MessageBox:(id)arg1;
- (void)showBTError;
- (void)removeToastWithView:(id)arg1;
- (void)addToastWithString;
- (void)makeConnectLable;
- (void)pairState:(id)arg1;
- (void)stopScan;
- (void)rescranfDev;
- (_Bool)stopScanView;
- (void)chooseDev:(id)arg1;
- (void)stopDevView:(id)arg1;
- (void)addDevView:(id)arg1;
- (void)showWaitDevView;
- (void)copeScan:(id)arg1;
- (void)pairStateOld:(id)arg1;
- (void)closePair:(id)arg1;
- (void)pairStateNew:(id)arg1;
- (void)closeErrorPairView:(id)arg1;
- (void)dealloc;
- (id)init;

@end

