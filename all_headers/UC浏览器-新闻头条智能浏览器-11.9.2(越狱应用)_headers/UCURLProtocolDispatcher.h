//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <CFNetwork/NSURLProtocol.h>

#import "DispatcherClientProtocol-Protocol.h"
#import "UCURLProtocolClient-Protocol.h"

@class HttpURLCacheProxyClient, NSCachedURLResponse, NSInvocationOperation, NSMutableURLRequestState, NSString, NSThread, NSURL, UCHTTPURLRequest, UCURLProtocolDispatcherPausableHelper;
@protocol UCURLProtocol;

@interface UCURLProtocolDispatcher : NSURLProtocol <UCURLProtocolClient, DispatcherClientProtocol>
{
    int m_conState;
    _Bool isCanceled;
    _Bool isStarted;
    _Bool m_isSyncRequest;
    long long m_canHandleReqState;
    _Bool m_isPreProtocolPrepareMode;
    UCURLProtocolDispatcherPausableHelper *m_pausableHelper;
    _Bool m_isSupportPauseRequest;
    int _requestType;
    id <UCURLProtocol> m_currentProtocol;
    UCHTTPURLRequest *m_originalRequest;
    NSCachedURLResponse *m_originalCachedResponse;
    NSURL *m_orignalURL;
    NSInvocationOperation *m_pendingOperation;
    id _reqId;
    id _lastResponseProtocol;
    HttpURLCacheProxyClient *_cacheProxyClient;
    Class _asyncQueryProtocolClass;
    NSString *_asyncQueryProtocolClassKey;
    NSThread *_callBackThread;
    NSString *_callBackRunloopMode;
    NSMutableURLRequestState *_requestState;
}

+ (void)insertProtocol:(id)arg1 betweenParentProtocol:(id)arg2 andChildProtocol:(id)arg3;
+ (void)excludedRequestFromUCProtocol:(id)arg1;
+ (Class)peekDispatchWithRequest:(id)arg1;
+ (id)dispatchWithRequest:(id)arg1 client:(id)arg2;
+ (id)dispatchSpecialContentTypeWithRequest:(id)arg1 withResponse:(id)arg2 client:(id)arg3;
+ (id)tryRedispatchToOtherProtocolWithRequest:(id)arg1 withResponse:(id)arg2 orgProtocol:(id)arg3;
+ (void)setSingletonProtocolKey:(id)arg1 ForRequest:(id)arg2;
+ (Class)classInRequest:(id)arg1 testKey:(id)arg2;
+ (void)unregisterClassWithKey:(id)arg1;
+ (_Bool)registerClass:(Class)arg1 withKey:(id)arg2;
+ (void)setCheckPriorityKey:(id)arg1;
+ (void)setDispatchPriorityKey:(id)arg1;
+ (_Bool)requestIsCacheEquivalent:(id)arg1 toRequest:(id)arg2;
+ (id)canonicalRequestForRequest:(id)arg1;
+ (_Bool)canInitWithRequest:(id)arg1;
+ (void)tryStatisticSystemProxyType:(struct __CFDictionary *)arg1 autoEnabled:(_Bool)arg2;
+ (id)currentPacRefUrl;
+ (_Bool)isProtocolSupportedScheme:(id)arg1;
+ (void)printAllPropertyKeyForRequest:(id)arg1;
@property(retain, nonatomic) NSMutableURLRequestState *requestState; // @synthesize requestState=_requestState;
@property(retain, nonatomic) NSString *callBackRunloopMode; // @synthesize callBackRunloopMode=_callBackRunloopMode;
@property(retain, nonatomic) NSThread *callBackThread; // @synthesize callBackThread=_callBackThread;
@property(retain, nonatomic) NSString *asyncQueryProtocolClassKey; // @synthesize asyncQueryProtocolClassKey=_asyncQueryProtocolClassKey;
@property(retain, nonatomic) Class asyncQueryProtocolClass; // @synthesize asyncQueryProtocolClass=_asyncQueryProtocolClass;
@property(retain, nonatomic) HttpURLCacheProxyClient *cacheProxyClient; // @synthesize cacheProxyClient=_cacheProxyClient;
@property(nonatomic) __weak id lastResponseProtocol; // @synthesize lastResponseProtocol=_lastResponseProtocol;
@property(retain, nonatomic) id reqId; // @synthesize reqId=_reqId;
@property(retain, nonatomic) NSInvocationOperation *pendingOperation; // @synthesize pendingOperation=m_pendingOperation;
@property(nonatomic) int requestType; // @synthesize requestType=_requestType;
@property(retain, nonatomic) NSURL *orignalURL; // @synthesize orignalURL=m_orignalURL;
@property(retain, nonatomic) NSCachedURLResponse *originalCachedResponse; // @synthesize originalCachedResponse=m_originalCachedResponse;
@property(retain, nonatomic) UCHTTPURLRequest *originalRequest; // @synthesize originalRequest=m_originalRequest;
@property(retain, nonatomic) id <UCURLProtocol> currentProtocol; // @synthesize currentProtocol=m_currentProtocol;
- (void).cxx_destruct;
- (void)convertInvoke:(SEL)arg1;
- (void)__uc_stat__requestStatusChangeUnexpectWithParams:(id)arg1;
- (_Bool)onRequestStatusChangeUnexpectWithStatus:(int)arg1 targetState:(int)arg2 protocol:(id)arg3;
- (void)cleanAsyncRequest;
- (void)asyncQueryHandleRequestCallBack:(_Bool)arg1;
- (void)ClientDidCancelAuthenticationChallenge:(id)arg1;
- (void)ClientDidReceiveAuthenticationChallenge:(id)arg1;
- (void)client:(id)arg1 cachedResponseIsValid:(id)arg2;
- (void)client:(id)arg1 didFailWithError:(id)arg2;
- (void)clientDidFinishLoading:(id)arg1;
- (void)client:(id)arg1 didLoadData:(id)arg2;
- (void)client:(id)arg1 didReceiveResponse:(id)arg2 cacheStoragePolicy:(unsigned long long)arg3;
- (void)client:(id)arg1 wasRedirectedToRequest:(id)arg2 redirectResponse:(id)arg3;
- (void)markStatusCodeWithResponse:(id)arg1;
- (void)markStartLoadingFinish;
- (void)__uc_stat____HEADBEAT__onMainReqStartLoading;
- (void)markStartLoading;
- (void)markInitRequestTime;
- (void)postFail:(id)arg1;
- (_Bool)handleErrorRequest;
- (void)URLProtocol:(id)arg1 didCancelAuthenticationChallenge:(id)arg2;
- (void)URLProtocol:(id)arg1 didReceiveAuthenticationChallenge:(id)arg2;
- (void)URLProtocol:(id)arg1 didFailWithError:(id)arg2;
- (void)URLProtocolDidFinishLoading:(id)arg1;
- (void)URLProtocol:(id)arg1 didLoadData:(id)arg2;
- (void)URLProtocol:(id)arg1 didReceiveResponse:(id)arg2 shouldCacheResponse:(_Bool)arg3;
- (void)URLProtocol:(id)arg1 cachedResponseIsValid:(id)arg2;
- (void)URLProtocol:(id)arg1 wasRedirectedToRequest:(id)arg2 redirectResponse:(id)arg3;
- (void)stopLoading;
- (void)startLoading;
- (void)cancelAll;
- (void)startLoadingImmediately;
- (void)startLoadingImmediatelyDelayCallBack;
- (void)doSendNormalRequest;
- (void)sendingNormalRequest;
- (void)prepareRequest;
- (void)recordRunloopConfig;
- (_Bool)isSyncRequest;
- (id)rootClient;
- (void)dealloc;
- (_Bool)decideProtocolsForRequest:(id)arg1;
- (void)initProtocolRequest;
- (void)removeWebKitValidatorOnMainFrameReq:(id)arg1;
- (void)fixWebKitRequestSceneIfNeed:(id)arg1;
- (void)addUsingNetworkTypeIfNeed;
- (void)addUAIfNeed;
- (id)initWithRequest:(id)arg1 cachedResponse:(id)arg2 client:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

