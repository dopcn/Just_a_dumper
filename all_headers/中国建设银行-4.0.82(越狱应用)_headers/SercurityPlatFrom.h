//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

@interface SercurityPlatFrom : NSObject
{
}

+ (id)signature:(int)arg1 input:(id)arg2 pin:(id)arg3 appID:(id)arg4 containerId:(id)arg5;
+ (id)pinByHash:(id)arg1;
+ (void)checkPinErrorCount:(id)arg1 ciperEquipmentID:(id)arg2 deviceID:(id)arg3;
+ (id)getSignatureByDevKey:(id)arg1;
+ (id)getEncryptByServerCert:(id)arg1;
+ (id)symEncrypt:(long long)arg1 input:(id)arg2 mod:(long long)arg3 IV:(id)arg4 Key:(id)arg5;
+ (id)symDecrypt:(long long)arg1 cipher:(id)arg2 mod:(long long)arg3 IV:(id)arg4 Key:(id)arg5;
+ (id)getciperDeciveID;
+ (id)getRandomKey:(long long)arg1;
+ (long long)getLastErrorCode;
+ (id)getHash:(int)arg1 src:(id)arg2;
+ (long long)fileDecrypt:(int)arg1 filePath:(id)arg2 symKey:(id)arg3 rsPath:(id)arg4 deleteSrc:(unsigned char)arg5;
+ (long long)fileEncrypt:(int)arg1 filePath:(id)arg2 encryptPath:(id)arg3 symKey:(id)arg4 deleteSrc:(unsigned char)arg5;
+ (long long)unLockPinWithContainerID:(id)arg1;
+ (long long)checkPin:(id)arg1 containerID:(id)arg2;
+ (int)getPinLeftTimes:(id)arg1;
+ (void)modPin:(id)arg1 newPin:(id)arg2 containerID:(id)arg3 algorithm:(long long)arg4 success:(CDUnknownBlockType)arg5;
+ (long long)delCertByCId:(int)arg1 appId:(id)arg2 containerId:(id)arg3;
+ (long long)destroyAllCerts:(id)arg1 containerId:(id)arg2;
+ (long long)destroyAll:(id)arg1;
+ (long long)verifySignature:(int)arg1 pubKey:(id)arg2 src:(id)arg3 sign:(id)arg4;
+ (long long)verifySignature:(int)arg1 cert:(id)arg2 src:(id)arg3 sign:(id)arg4;
+ (void)signature:(int)arg1 input:(id)arg2 pin:(id)arg3 appID:(id)arg4 containerId:(id)arg5 success:(CDUnknownBlockType)arg6;
+ (id)getSignatureByDevKey_Base64Encode:(id)arg1;
+ (id)asyDecrypt:(int)arg1 encryptData:(id)arg2 pin:(id)arg3 containerId:(id)arg4;
+ (id)asyEncrypt:(int)arg1 publicKey:(id)arg2 input:(id)arg3;
+ (id)asyEncrypt:(int)arg1 cert:(id)arg2 input:(id)arg3;
+ (id)symDecrypt:(int)arg1 symkey:(id)arg2 input:(id)arg3;
+ (id)symEncrypt:(int)arg1 symkey:(id)arg2 input:(id)arg3;
+ (id)updateCert:(id)arg1 pin:(id)arg2 containerID:(id)arg3 algorithm:(int)arg4;
+ (id)sendUpdateCertStatusReq:(id)arg1 containerID:(id)arg2 isClearCipherEquipmentId:(id)arg3;
+ (long long)judgeSignCertOverdueWithAppID:(id)arg1 containerID:(id)arg2 serverTime:(id)arg3;
+ (id)analysisCert:(id)arg1;
+ (id)getCert:(id)arg1 certType:(int)arg2 containerId:(id)arg3;
+ (id)getContainerIdList:(id)arg1 devID:(id)arg2;
+ (long long)importCertInfo:(id)arg1 algorithm:(int)arg2 containerId:(id)arg3 pin:(id)arg4 signatureCert:(id)arg5 encryptCert:(id)arg6 p7:(id)arg7 p7Algorithm:(int)arg8;
+ (long long)importCertInfo_SH:(id)arg1 algorithm:(int)arg2 containerId:(id)arg3 pin:(id)arg4 signatureCert:(id)arg5 encryptCert:(id)arg6 p7:(id)arg7 p7Algorithm:(int)arg8;
+ (id)generateCSR:(id)arg1 appID:(id)arg2 pin:(id)arg3 algorithm:(int)arg4 containerId:(id)arg5;
+ (void)applyCert:(id)arg1 appID:(id)arg2 pin:(id)arg3 algorithm:(int)arg4 phoneModels:(id)arg5 manufacturer:(id)arg6 iOSVersion:(id)arg7 caflag:(id)arg8 containerID:(id)arg9 success:(CDUnknownBlockType)arg10;
+ (id)generateKeyPair:(id)arg1 algorithm:(int)arg2 pin:(id)arg3 containerID:(id)arg4;
+ (void)initService:(id)arg1 andUserID:(id)arg2 serviceURL:(id)arg3 timeOut:(int)arg4 success:(CDUnknownBlockType)arg5;
+ (void)initCoreptSDK;

@end

