//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

#import "MLMediaDataConsumer-Protocol.h"
#import "MLMediaSource-Protocol.h"

@class CADisplayLink, GPUImageFilterPipeline, MLAudioMixer, MLCVPixelBufferPool, MLGPUImageCVPixelBufferInput, MLGPUImageCVPixelBufferOutput, MLMediaSampleBufferUtilty, MTIContext, MTIMultilayerCompositingFilter, NSHashTable, NSMapTable, NSOperationQueue, NSString;
@protocol MLMediaSource, OS_dispatch_queue, OS_dispatch_source;

@interface MLMultipleMediaCombine : NSObject <MLMediaSource, MLMediaDataConsumer>
{
    _Bool _lowPerformanceDevice;
    int _videoFrameRate;
    int _audioTrackId;
    NSHashTable *_dataConsumers;
    CADisplayLink *_displayLink;
    struct __CVBuffer *_emptyPixelBuffer;
    struct __CVBuffer *_backgroundPixelBuffer;
    NSObject<OS_dispatch_queue> *_pixelBufferOutputQueue;
    MLGPUImageCVPixelBufferInput *_pixelBufferInput;
    MLGPUImageCVPixelBufferOutput *_pixelBufferOutput;
    GPUImageFilterPipeline *_filterPipeLine;
    NSMapTable *_mediaCombineUnits;
    MLAudioMixer *_audioMixer;
    NSObject<OS_dispatch_queue> *_slienceQueue;
    NSObject<OS_dispatch_source> *_slienceTimer;
    MLMediaSampleBufferUtilty *_mediaSampleBufferUtilty;
    id <MLMediaSource> _backgroundMediaSource;
    NSOperationQueue *_mtiProcessQueue;
    MTIMultilayerCompositingFilter *_mtiCompositiongFilter;
    MTIContext *_mtiContext;
    MLCVPixelBufferPool *_pixelBufferPool;
    unsigned long long _processorType;
    struct __CVBuffer *_lastRenderdPixelBuffer;
    struct CGSize _videoSize;
    CDStruct_1b6d18a9 _slienceAudioExternalTime;
}

@property(nonatomic) struct __CVBuffer *lastRenderdPixelBuffer; // @synthesize lastRenderdPixelBuffer=_lastRenderdPixelBuffer;
@property(nonatomic) unsigned long long processorType; // @synthesize processorType=_processorType;
@property(nonatomic) _Bool lowPerformanceDevice; // @synthesize lowPerformanceDevice=_lowPerformanceDevice;
@property(retain, nonatomic) MLCVPixelBufferPool *pixelBufferPool; // @synthesize pixelBufferPool=_pixelBufferPool;
@property(retain, nonatomic) MTIContext *mtiContext; // @synthesize mtiContext=_mtiContext;
@property(retain, nonatomic) MTIMultilayerCompositingFilter *mtiCompositiongFilter; // @synthesize mtiCompositiongFilter=_mtiCompositiongFilter;
@property(retain, nonatomic) NSOperationQueue *mtiProcessQueue; // @synthesize mtiProcessQueue=_mtiProcessQueue;
@property(nonatomic) __weak id <MLMediaSource> backgroundMediaSource; // @synthesize backgroundMediaSource=_backgroundMediaSource;
@property(retain, nonatomic) MLMediaSampleBufferUtilty *mediaSampleBufferUtilty; // @synthesize mediaSampleBufferUtilty=_mediaSampleBufferUtilty;
@property(nonatomic) int audioTrackId; // @synthesize audioTrackId=_audioTrackId;
@property(nonatomic) CDStruct_1b6d18a9 slienceAudioExternalTime; // @synthesize slienceAudioExternalTime=_slienceAudioExternalTime;
@property(retain, nonatomic) NSObject<OS_dispatch_source> *slienceTimer; // @synthesize slienceTimer=_slienceTimer;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *slienceQueue; // @synthesize slienceQueue=_slienceQueue;
@property(retain, nonatomic) MLAudioMixer *audioMixer; // @synthesize audioMixer=_audioMixer;
@property(retain, nonatomic) NSMapTable *mediaCombineUnits; // @synthesize mediaCombineUnits=_mediaCombineUnits;
@property(retain, nonatomic) GPUImageFilterPipeline *filterPipeLine; // @synthesize filterPipeLine=_filterPipeLine;
@property(retain, nonatomic) MLGPUImageCVPixelBufferOutput *pixelBufferOutput; // @synthesize pixelBufferOutput=_pixelBufferOutput;
@property(retain, nonatomic) MLGPUImageCVPixelBufferInput *pixelBufferInput; // @synthesize pixelBufferInput=_pixelBufferInput;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *pixelBufferOutputQueue; // @synthesize pixelBufferOutputQueue=_pixelBufferOutputQueue;
@property(nonatomic) int videoFrameRate; // @synthesize videoFrameRate=_videoFrameRate;
@property(nonatomic) struct __CVBuffer *backgroundPixelBuffer; // @synthesize backgroundPixelBuffer=_backgroundPixelBuffer;
@property(nonatomic) struct __CVBuffer *emptyPixelBuffer; // @synthesize emptyPixelBuffer=_emptyPixelBuffer;
@property(retain, nonatomic) CADisplayLink *displayLink; // @synthesize displayLink=_displayLink;
@property(retain, nonatomic) NSHashTable *dataConsumers; // @synthesize dataConsumers=_dataConsumers;
@property(nonatomic) struct CGSize videoSize; // @synthesize videoSize=_videoSize;
- (void).cxx_destruct;
- (void)informDataConsumersAboutNewAudioFrame:(struct opaqueCMSampleBuffer *)arg1;
- (void)informDataConsumersAboutNewVideoFrame:(struct opaqueCMSampleBuffer *)arg1;
- (void)mediaSource:(id)arg1 didOutputAudioSampleBuffer:(struct opaqueCMSampleBuffer *)arg2;
- (void)mediaSource:(id)arg1 didOutputVideoSampleBuffer:(struct opaqueCMSampleBuffer *)arg2;
- (void)removeDataConsumer:(id)arg1;
- (void)addDataConsumer:(id)arg1;
- (void)handleDisplayLink;
- (void)informDataConsumersAboutNewVideoFrameWithPixelBuffer:(struct __CVBuffer *)arg1 frameTime:(CDStruct_1b6d18a9)arg2;
- (void)releaseDisplayLink;
- (void)createDisplayLinkWithFrameRate:(int)arg1;
- (void)releaseEmptyPixelBuffer;
- (void)createEmptyPixelBuffer;
- (void)removeMediaCombineUnitFilterGroup:(id)arg1;
- (void)addMediaCombineUnitFilterGroup:(id)arg1;
- (void)updateCombineBackgroundWith:(id)arg1;
- (void)setBackgroundVideoSource:(id)arg1;
- (void)removeVideoSource:(id)arg1;
- (void)addVideoSource:(id)arg1 withFrame:(struct CGRect)arg2;
- (void)initAudioMixer;
- (void)addSlienceAudioPacket;
- (void)initSlienceAudio;
- (void)stopCombine;
- (void)dealloc;
- (id)initWithVideoSize:(struct CGSize)arg1 frameRate:(int)arg2;
- (id)initWithVideoSize:(struct CGSize)arg1 frameRate:(int)arg2 processorType:(unsigned long long)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

