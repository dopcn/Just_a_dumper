//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#pragma mark Function Pointers and Blocks

typedef void (*CDUnknownFunctionPointerType)(void); // return type and parameters are unknown

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct AVAppAsyncStatistic {
    unsigned long long size;
    long long buf_backwards;
    long long buf_forwards;
    long long buf_capacity;
};

struct AVMessage {
    int what;
    int arg1;
    int arg2;
    void *obj;
    void *opaque;
    CDUnknownFunctionPointerType free_l;
    struct AVMessage *next;
};

struct AppInfo {
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field1;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field2;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field3;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field4;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field5;
    struct map<std::basic_string<char>, std::basic_string<char>, std::less<std::basic_string<char>>, std::allocator<std::pair<const std::basic_string<char>, std::basic_string<char>>>> _field6;
};

struct AppSession {
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field1;
    struct vector<std::basic_string<char>, std::allocator<std::basic_string<char>>> _field2;
};

struct Attachment {
    char _field1;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field2;
    vector_a7fb0c12 _field3;
};

struct AuthToken {
    int _field1;
    vector_a7fb0c12 _field2;
    vector_a7fb0c12 _field3;
    int _field4;
};

struct CClassAny;

struct CGAffineTransform {
    double a;
    double b;
    double c;
    double d;
    double tx;
    double ty;
};

struct CGPoint {
    double x;
    double y;
};

struct CGRect {
    struct CGPoint origin;
    struct CGSize size;
};

struct CGSize {
    double width;
    double height;
};

struct CLLocationCoordinate2D {
    double _field1;
    double _field2;
};

struct CNNAddPadingPara {
    int padHeight;
    int padWidth;
};

struct CNNConvolutionPara {
    int numGroup;
    int inputChannel;
    int outputChannel;
    int kernelHeight;
    int kernelWidth;
    int strideHeight;
    int strideWidth;
    int padHeight;
    int padWidth;
    int dilationHeight;
    int dilationWidth;
    int outputPadHeight;
    int outputPadWidth;
};

struct CNNDimension {
    int num;
    int channel;
    int height;
    int width;
    int padHeight;
    int padWidth;
    int packedWidth;
};

struct CRefCount;

struct CScopeCall {
    struct CRefCount *m_phost;
    struct CClassAny *m_preal;
    struct CRefCount *m_call__m_arg;
    unsigned int *m_prslt;
};

struct Cache {
    CDUnknownFunctionPointerType *_field1;
    struct Rep *_field2;
};

struct Cleanup {
    CDUnknownFunctionPointerType _field1;
    void *_field2;
    void *_field3;
    struct Cleanup *_field4;
};

struct ColorConvertPara {
    int type;
    float scale0;
    float scale1;
    float scale2;
};

struct CvHaarClassifierCascade {
    int _field1;
    int _field2;
    struct CvSize _field3;
    struct CvSize _field4;
    double _field5;
    struct CvHaarStageClassifier *_field6;
    struct CvHidHaarClassifierCascade *_field7;
};

struct CvHaarStageClassifier;

struct CvHidHaarClassifierCascade;

struct CvRect {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
};

struct CvSize {
    int _field1;
    int _field2;
};

struct DB {
    CDUnknownFunctionPointerType *_field1;
};

struct ExceptionUpload {
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field1;
    long long _field2;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field3;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field4;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field5;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field6;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field7;
    struct map<std::basic_string<char>, std::basic_string<char>, std::less<std::basic_string<char>>, std::allocator<std::pair<const std::basic_string<char>, std::basic_string<char>>>> _field8;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field9;
    struct AppSession _field10;
    int _field11;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field12;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field13;
    struct AppInfo _field14;
    struct vector<rqd::AppInfo, std::allocator<rqd::AppInfo>> _field15;
    struct vector<rqd::AppInfo, std::allocator<rqd::AppInfo>> _field16;
    struct vector<rqd::Attachment, std::allocator<rqd::Attachment>> _field17;
    struct map<std::basic_string<char>, std::basic_string<char>, std::less<std::basic_string<char>>, std::allocator<std::pair<const std::basic_string<char>, std::basic_string<char>>>> _field18;
    struct map<std::basic_string<char>, std::basic_string<char>, std::less<std::basic_string<char>>, std::allocator<std::pair<const std::basic_string<char>, std::basic_string<char>>>> _field19;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field20;
    _Bool _field21;
};

struct ExceptionUploadPackage {
    struct vector<rqd::ExceptionUpload, std::allocator<rqd::ExceptionUpload>> _field1;
};

struct FFPlayer;

struct FaceAlignParam {
    int _field1;
    int _field2;
};

struct FaceDetectionParam {
    int min_face_size;
    int max_face_size;
    float scale_factor;
    _Bool big_face_only;
    float cls_threshold;
    float nms_threshold;
    float final_threshold;
    int num_threads;
    int pre_resize_size;
    _Bool non_square_rect;
    int big_face_only_ext_scales;
};

struct FileCommitReq {
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field1;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field2;
    vector_a7fb0c12 _field3;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field4;
};

struct FileControlReq {
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field1;
    struct AuthToken _field2;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field3;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field4;
    int _field5;
    long long _field6;
    struct stEnvironment _field7;
    int _field8;
    vector_a7fb0c12 _field9;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field10;
    _Bool _field11;
    int _field12;
};

struct FileUploadControlReq {
    vector_a7fb0c12 _field1;
};

struct FilterPolicy {
    CDUnknownFunctionPointerType *_field1;
};

struct GPUMatrix4x4 {
    struct GPUVector4 one;
    struct GPUVector4 two;
    struct GPUVector4 three;
    struct GPUVector4 four;
};

struct GPUTextureOptions {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned int _field6;
    unsigned int _field7;
    _Bool _field8;
};

struct GPUVector3 {
    float one;
    float two;
    float three;
};

struct GPUVector4 {
    float one;
    float two;
    float three;
    float four;
};

struct HFGLTextureOptions {
    unsigned int minFilter;
    unsigned int magFilter;
    unsigned int wrapS;
    unsigned int wrapT;
    unsigned int glFormat;
    unsigned int iosFormat;
    unsigned int type;
};

struct HandClassify;

struct IjkMediaPlayer {
    int _field1;
    struct _opaque_pthread_mutex_t _field2;
    struct FFPlayer *_field3;
    CDUnknownFunctionPointerType _field4;
    struct _opaque_pthread_t *_field5;
    struct SDL_Thread *_field6;
    struct SDL_Thread _field7;
    int _field8;
    char *_field9;
    void *_field10;
    int _field11;
    int _field12;
    int _field13;
    long long _field14;
};

struct Iterator {
    CDUnknownFunctionPointerType *_field1;
    struct Cleanup _field2;
};

struct JceInputStream<analyticstaf::BufferReader> {
    char *_field1;
    unsigned long long _field2;
    unsigned long long _field3;
};

struct JceInputStream<wnstaf::BufferReader> {
    char *_field1;
    unsigned long long _field2;
    unsigned long long _field3;
};

struct JceOutputStream<analyticstaf::BufferWriter> {
    char *_field1;
    unsigned long long _field2;
    unsigned long long _field3;
};

struct JceOutputStream<wnstaf::BufferWriter> {
    char *_field1;
    unsigned long long _field2;
    unsigned long long _field3;
};

struct LevelDBOptions {
    _Bool _field1;
    _Bool _field2;
    _Bool _field3;
    _Bool _field4;
    _Bool _field5;
    int _field6;
    unsigned long long _field7;
};

struct MSize {
    int *_field1;
};

struct MStep {
    unsigned long long *_field1;
    unsigned long long _field2[2];
};

struct MTLFloat2 {
    float _field1;
    float _field2;
};

struct MTLFloat3 {
    float x;
    float y;
    float z;
};

struct MTLFloat4 {
    float x;
    float y;
    float z;
    float w;
};

struct MTLFloat4x4 {
    struct MTLFloat4 v1;
    struct MTLFloat4 v2;
    struct MTLFloat4 v3;
    struct MTLFloat4 v4;
};

struct MTLUInt2 {
    unsigned int x;
    unsigned int y;
};

struct MakeBorderPara {
    int left;
    int top;
    int right;
    int bottom;
};

struct Mat {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
    char *_field5;
    int *_field6;
    char *_field7;
    char *_field8;
    char *_field9;
    struct MatAllocator *_field10;
    struct MSize _field11;
    struct MStep _field12;
};

struct MatAllocator;

struct MessageLooper {
    CDUnknownFunctionPointerType _field1;
    CDUnknownFunctionPointerType _field2;
    struct MessageQueue *_field3;
    struct _opaque_pthread_t *_field4;
};

struct MessageQueue;

struct MixPkg {
    struct map<int, std::vector<char, std::allocator<char>>, std::less<int>, std::allocator<std::pair<const int, std::vector<char, std::allocator<char>>>>> _field1;
};

struct MultiPicInfo {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
};

struct PLCrashHostInfoVersion {
    unsigned long long major;
    unsigned long long minor;
    unsigned long long revision;
};

struct PLCrashReporterCallbacks {
    unsigned short _field1;
    void *_field2;
    CDUnknownFunctionPointerType _field3;
};

struct PicExtendInfo {
    int _field1;
    struct vector<UploadSDK::FileUpload::QuanInfo, std::allocator<UploadSDK::FileUpload::QuanInfo>> _field2;
    struct map<std::basic_string<char>, std::basic_string<char>, std::less<std::basic_string<char>>, std::allocator<std::pair<const std::basic_string<char>, std::basic_string<char>>>> _field3;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field4;
    struct map<std::basic_string<char>, std::basic_string<char>, std::less<std::basic_string<char>>, std::allocator<std::pair<const std::basic_string<char>, std::basic_string<char>>>> _field5;
};

struct Point_<float>;

struct PreuploadPicInfo {
    struct UploadPicInfoReq _field1;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field2;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field3;
    long long _field4;
    int _field5;
    int _field6;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field7;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field8;
    int _field9;
    int _field10;
    long long _field11;
};

struct PtsPostProc;

struct QZEVPlane {
    struct SCNVector3 point;
    struct SCNVector3 normal;
};

struct QZVideoFileProperty {
    long long _field1;
    long long _field2;
    long long _field3;
    long long _field4;
};

struct QuanInfo;

struct RFunction;

struct ROperation {
    CDUnknownFunctionPointerType *_field1;
    double **_field2;
    double *_field3;
    struct RFunction **_field4;
    char _field5;
    int _field6;
    struct ROperation *_field7;
    struct ROperation *_field8;
    double _field9;
    struct RVar *_field10;
    double *_field11;
    struct RFunction *_field12;
};

struct RVar;

struct RapidnetInstance {
    CDUnknownFunctionPointerType *_field1;
    struct rpdnet_base *_field2;
};

struct ReadOptions {
    _Bool verify_checksums;
    _Bool fill_cache;
    struct Snapshot *snapshot;
};

struct Rep;

struct RequestPkg {
    int _field1;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field2;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field3;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field4;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field5;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field6;
    int _field7;
    vector_a7fb0c12 _field8;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field9;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field10;
    struct map<std::basic_string<char>, std::basic_string<char>, std::less<std::basic_string<char>>, std::allocator<std::pair<const std::basic_string<char>, std::basic_string<char>>>> _field11;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field12;
    long long _field13;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field14;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field15;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field16;
    long long _field17;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field18;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field19;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field20;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field21;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field22;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field23;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field24;
};

struct ResizePara {
    float scaleX;
    float scaleY;
    int inputFormat;
    int outputFormat;
};

struct ResponsePkg {
    char _field1;
    int _field2;
    vector_a7fb0c12 _field3;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field4;
    long long _field5;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field6;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field7;
};

struct SCNVector3 {
    float x;
    float y;
    float z;
};

struct SDL_AudioSpec {
    int freq;
    unsigned short format;
    unsigned char channels;
    unsigned char silence;
    unsigned short samples;
    unsigned short padding;
    unsigned int size;
    CDUnknownFunctionPointerType callback;
    void *userdata;
};

struct SDL_Class;

struct SDL_Thread {
    struct _opaque_pthread_t *_field1;
    CDUnknownFunctionPointerType _field2;
    CDUnknownFunctionPointerType _field3;
    void *_field4;
    char _field5[32];
    int _field6;
};

struct SDL_VoutOverlay {
    int _field1;
    int _field2;
    unsigned int _field3;
    int _field4;
    unsigned short *_field5;
    char **_field6;
    int _field7;
    int _field8;
    int _field9;
    int _field10;
    struct SDL_Class *_field11;
    struct SDL_VoutOverlay_Opaque *_field12;
    CDUnknownFunctionPointerType _field13;
    CDUnknownFunctionPointerType _field14;
    CDUnknownFunctionPointerType _field15;
    CDUnknownFunctionPointerType _field16;
    CDUnknownFunctionPointerType _field17;
};

struct SDL_VoutOverlay_Opaque;

struct SegmentPostprocessPara {
    int width;
    int height;
};

struct SegmentPreprocessPara {
    int outputWidth;
    int outputHeight;
    int padWidth;
    int padHeight;
    int flipX;
    int flipY;
};

struct ShuoshuoInfoReq {
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field1;
    int _field2;
    long long _field3;
    vector_a7fb0c12 _field4;
    struct vector<UploadSDK::FileUpload::ShuoshuoPicInfo, std::allocator<UploadSDK::FileUpload::ShuoshuoPicInfo>> _field5;
};

struct ShuoshuoPicInfo;

struct Snapshot {
    CDUnknownFunctionPointerType *_field1;
};

struct SummaryInfo {
    long long _field1;
    char _field2;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field3;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field4;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field5;
    struct map<std::basic_string<char>, std::basic_string<char>, std::less<std::basic_string<char>>, std::allocator<std::pair<const std::basic_string<char>, std::basic_string<char>>>> _field6;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field7;
    _Bool _field8;
};

struct SvcRequestHead {
    short _field1;
    long long _field2;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field3;
    int _field4;
    vector_a7fb0c12 _field5;
    int _field6;
    int _field7;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field8;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field9;
    long long _field10;
    long long _field11;
    int _field12;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field13;
    int _field14;
    int _field15;
    int _field16;
    vector_a7fb0c12 _field17;
    int _field18;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field19;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field20;
    long long _field21;
    int _field22;
    int _field23;
    int _field24;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field25;
    int _field26;
    int _field27;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field28;
    int _field29;
    struct map<std::basic_string<char>, std::vector<char, std::allocator<char>>, std::less<std::basic_string<char>>, std::allocator<std::pair<const std::basic_string<char>, std::vector<char, std::allocator<char>>>>> _field30;
    int _field31;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field32;
    struct WeiyunUpload _field33;
    int _field34;
    struct map<std::basic_string<char>, std::basic_string<char>, std::less<std::basic_string<char>>, std::allocator<std::pair<const std::basic_string<char>, std::basic_string<char>>>> _field35;
};

struct TC_FaceAlignmentRunner {
    struct UFA *_field1;
    struct PtsPostProc *_field2;
    struct YTFaceRefiner *_field3;
    _Bool _field4;
    struct FaceAlignParam _field5;
};

struct UFA;

struct UIEdgeInsets {
    double top;
    double left;
    double bottom;
    double right;
};

struct UIOffset {
    double horizontal;
    double vertical;
};

struct UniPacket<wnstaf::BufferWriter, wnstaf::BufferReader, std::allocator> {
    short _field1;
    char _field2;
    int _field3;
    int _field4;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field5;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field6;
    vector_a7fb0c12 _field7;
    int _field8;
    struct map<std::basic_string<char>, std::basic_string<char>, std::less<std::basic_string<char>>, std::allocator<std::pair<const std::basic_string<char>, std::basic_string<char>>>> _field9;
    struct map<std::basic_string<char>, std::basic_string<char>, std::less<std::basic_string<char>>, std::allocator<std::pair<const std::basic_string<char>, std::basic_string<char>>>> _field10;
    struct map<std::basic_string<char>, std::map<std::basic_string<char>, std::vector<char, std::allocator<char>>, std::less<std::basic_string<char>>, std::allocator<std::pair<std::basic_string<char>, std::vector<char, std::allocator<char>>>>>, std::less<std::basic_string<char>>, std::allocator<std::pair<std::basic_string<char>, std::map<std::basic_string<char>, std::vector<char, std::allocator<char>>, std::less<std::basic_string<char>>, std::allocator<std::pair<std::basic_string<char>, std::vector<char, std::allocator<char>>>>>>>> _field11;
    struct JceInputStream<wnstaf::BufferReader> _field12;
    struct JceOutputStream<wnstaf::BufferWriter> _field13;
};

struct UploadPicInfoReq {
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field1;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field2;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field3;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field4;
    int _field5;
    int _field6;
    int _field7;
    int _field8;
    long long _field9;
    struct MultiPicInfo _field10;
    struct PicExtendInfo _field11;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field12;
    int _field13;
    int _field14;
    int _field15;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field16;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field17;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field18;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field19;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field20;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field21;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field22;
    int _field23;
    long long _field24;
    struct map<std::basic_string<char>, std::basic_string<char>, std::less<std::basic_string<char>>, std::allocator<std::pair<const std::basic_string<char>, std::basic_string<char>>>> _field25;
    int _field26;
    struct stPoi _field27;
    struct stWaterTemplate _field28;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field29;
    int _field30;
    vector_a7fb0c12 _field31;
    struct map<std::basic_string<char>, std::basic_string<char>, std::less<std::basic_string<char>>, std::allocator<std::pair<const std::basic_string<char>, std::basic_string<char>>>> _field32;
};

struct UploadPicInfoRsp {
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field1;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field2;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field3;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field4;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field5;
    int _field6;
    int _field7;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field8;
    int _field9;
    int _field10;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field11;
    int _field12;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field13;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field14;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field15;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field16;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field17;
    struct stWaterTemplate _field18;
    int _field19;
    vector_a7fb0c12 _field20;
};

struct UploadReq {
    unsigned int _field1;
    int _field2;
    unsigned short _field3;
    vector_a7fb0c12 _field4;
    int _field5;
    unsigned int _field6;
    unsigned int _field7;
    unsigned int _field8;
    vector_a7fb0c12 _field9;
};

struct UploadUpsInfoReq {
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field1;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field2;
    int _field3;
    vector_a7fb0c12 _field4;
    int _field5;
    int _field6;
    char _field7;
    int _field8;
    int _field9;
    long long _field10;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field11;
    unsigned int _field12;
    unsigned int _field13;
    struct map<std::basic_string<char>, std::vector<char, std::allocator<char>>, std::less<std::basic_string<char>>, std::allocator<std::pair<const std::basic_string<char>, std::vector<char, std::allocator<char>>>>> _field14;
};

struct UploadUpsInfoRsp {
    int _field1;
    vector_a7fb0c12 _field2;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field3;
    int _field4;
    int _field5;
    int _field6;
    struct map<unsigned int, std::basic_string<char>, std::less<unsigned int>, std::allocator<std::pair<const unsigned int, std::basic_string<char>>>> _field7;
};

struct UploadVideoInfoReq {
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field1;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field2;
    int _field3;
    long long _field4;
    int _field5;
    vector_a7fb0c12 _field6;
    int _field7;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field8;
    int _field9;
    int _field10;
    int _field11;
};

struct UseInfo {
    long long prevActiveTime;
    long long prevInActiveTime;
    long long prevUseTime;
    _Bool isCrashed;
};

struct UserInfoPackage {
    char _field1;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field2;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field3;
    struct vector<rqd::SummaryInfo, std::allocator<rqd::SummaryInfo>> _field4;
    struct map<std::basic_string<char>, std::basic_string<char>, std::less<std::basic_string<char>>, std::allocator<std::pair<const std::basic_string<char>, std::basic_string<char>>>> _field5;
};

struct WBSDKJKConstBuffer {
    struct WBSDKJKConstPtrRange _field1;
};

struct WBSDKJKConstPtrRange {
    char *_field1;
    unsigned long long _field2;
};

struct WBSDKJKEncodeCache {
    id _field1;
    unsigned long long _field2;
    unsigned long long _field3;
};

struct WBSDKJKEncodeState {
    struct WBSDKJKManagedBuffer _field1;
    struct WBSDKJKManagedBuffer _field2;
    unsigned long long _field3;
    struct WBSDKJKFastClassLookup _field4;
    struct WBSDKJKEncodeCache _field5[1024];
    unsigned long long _field6;
    unsigned long long _field7;
    unsigned long long _field8;
    id _field9;
    id _field10;
    SEL _field11;
    CDUnknownFunctionPointerType _field12;
    CDUnknownBlockType _field13;
};

struct WBSDKJKFastClassLookup {
    void *_field1;
    void *_field2;
    void *_field3;
    void *_field4;
    void *_field5;
};

struct WBSDKJKHashTableEntry {
    unsigned long long _field1;
    id _field2;
    id _field3;
};

struct WBSDKJKManagedBuffer {
    struct WBSDKJKPtrRange _field1;
    unsigned long long _field2;
    unsigned long long _field3;
};

struct WBSDKJKObjCImpCache {
    Class _field1;
    CDUnknownFunctionPointerType _field2;
    CDUnknownFunctionPointerType _field3;
};

struct WBSDKJKObjectStack {
    void **_field1;
    void **_field2;
    unsigned long long *_field3;
    unsigned long long _field4;
    unsigned long long _field5;
    unsigned long long _field6;
    unsigned long long _field7;
};

struct WBSDKJKParseState {
    unsigned long long _field1;
    struct WBSDKJKConstBuffer _field2;
    unsigned long long _field3;
    unsigned long long _field4;
    unsigned long long _field5;
    unsigned long long _field6;
    unsigned long long _field7;
    unsigned long long _field8;
    struct WBSDKJKParseToken _field9;
    struct WBSDKJKObjectStack _field10;
    struct WBSDKJKTokenCache _field11;
    struct WBSDKJKObjCImpCache _field12;
    id _field13;
    int _field14;
    _Bool _field15;
};

struct WBSDKJKParseToken {
    struct WBSDKJKConstPtrRange _field1;
    unsigned long long _field2;
    struct WBSDKJKTokenValue _field3;
    struct WBSDKJKManagedBuffer _field4;
};

struct WBSDKJKPtrRange {
    char *_field1;
    unsigned long long _field2;
};

struct WBSDKJKTokenCache {
    struct WBSDKJKTokenCacheItem *_field1;
    unsigned long long _field2;
    unsigned int _field3;
    unsigned char _field4[1024];
};

struct WBSDKJKTokenCacheItem;

struct WBSDKJKTokenValue {
    struct WBSDKJKConstPtrRange _field1;
    unsigned long long _field2;
    unsigned long long _field3;
    union {
        long long _field1;
        unsigned long long _field2;
        double _field3;
    } _field4;
    struct WBSDKJKTokenCacheItem *_field5;
};

struct WeiyunUpload {
    vector_a7fb0c12 _field1;
    vector_a7fb0c12 _field2;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field3;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field4;
    unsigned int _field5;
};

struct WnsLoginCallback;

struct WnsLoginManager;

struct WnsOCDataSource;

struct WnsUniversalSDK;

struct WriteBatch {
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> rep_;
};

struct WriteOptions {
    _Bool sync;
};

struct YTFaceRefiner;

struct YTHandAlignmentSdk {
    struct YtHandBoxAlignmentSdk *_field1;
};

struct YtHandBox {
    float x;
    float y;
    float width;
    float height;
    float confidence;
};

struct YtHandBoxAlignmentSdk;

struct YtHandClassifySdk {
    struct HandClassify *_field1;
};

struct YtHandDetection;

struct YtHandDetectionSdk {
    struct YtHandDetection *_field1;
};

struct _Alloc_hider {
    char *_M_p;
};

struct _Callback_list;

struct _Image {
    char *_field1;
    unsigned long long _field2;
    int _field3;
    int _field4;
    int _field5;
    int _field6;
    int _field7;
    int _field8;
    struct _ImageMarker *_field9;
};

struct _ImageInfo {
    int flag;
    int orientation;
    double overallScale;
    struct CGSize size;
};

struct _ImageMarker;

struct _Impl;

struct _IplImage {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
    int _field5;
    char _field6[4];
    char _field7[4];
    int _field8;
    int _field9;
    int _field10;
    int _field11;
    int _field12;
    struct _IplROI *_field13;
    struct _IplImage *_field14;
    void *_field15;
    struct _IplTileInfo *_field16;
    int _field17;
    char *_field18;
    int _field19;
    int _field20[4];
    int _field21[4];
    char *_field22;
};

struct _IplROI;

struct _IplTileInfo;

struct _NSRange {
    unsigned long long location;
    unsigned long long length;
};

struct _PLCrashReportDecoder {
    struct _Plcrash__CrashReport *_field1;
};

struct _Plcrash__CrashReport {
    struct _ProtobufCMessage _field1;
    struct _Plcrash__CrashReport__SystemInfo *_field2;
    struct _Plcrash__CrashReport__ApplicationInfo *_field3;
    unsigned long long _field4;
    struct _Plcrash__CrashReport__Thread **_field5;
    unsigned long long _field6;
    struct _Plcrash__CrashReport__BinaryImage **_field7;
    struct _Plcrash__CrashReport__Exception *_field8;
    struct _Plcrash__CrashReport__Signal *_field9;
    struct _Plcrash__CrashReport__ProcessInfo *_field10;
    struct _Plcrash__CrashReport__MachineInfo *_field11;
    struct _Plcrash__CrashReport__ReportInfo *_field12;
};

struct _Plcrash__CrashReport__ApplicationInfo {
    struct _ProtobufCMessage _field1;
    char *_field2;
    char *_field3;
    char *_field4;
};

struct _Plcrash__CrashReport__BinaryImage;

struct _Plcrash__CrashReport__Exception {
    struct _ProtobufCMessage _field1;
    char *_field2;
    char *_field3;
    unsigned long long _field4;
    struct _Plcrash__CrashReport__Thread__StackFrame **_field5;
};

struct _Plcrash__CrashReport__MachineInfo {
    struct _ProtobufCMessage _field1;
    char *_field2;
    struct _Plcrash__CrashReport__Processor *_field3;
    unsigned int _field4;
    unsigned int _field5;
};

struct _Plcrash__CrashReport__ProcessInfo {
    struct _ProtobufCMessage _field1;
    char *_field2;
    unsigned int _field3;
    char *_field4;
    char *_field5;
    unsigned int _field6;
    int _field7;
    int _field8;
    unsigned long long _field9;
};

struct _Plcrash__CrashReport__Processor {
    struct _ProtobufCMessage _field1;
    int _field2;
    int _field3;
    unsigned long long _field4;
    unsigned long long _field5;
};

struct _Plcrash__CrashReport__ReportInfo;

struct _Plcrash__CrashReport__Signal {
    struct _ProtobufCMessage _field1;
    char *_field2;
    char *_field3;
    unsigned long long _field4;
    struct _Plcrash__CrashReport__Signal__MachException *_field5;
};

struct _Plcrash__CrashReport__Signal__MachException {
    struct _ProtobufCMessage _field1;
    unsigned long long _field2;
    unsigned long long _field3;
    unsigned long long *_field4;
};

struct _Plcrash__CrashReport__Symbol {
    struct _ProtobufCMessage _field1;
    char *_field2;
    unsigned long long _field3;
    int _field4;
    unsigned long long _field5;
};

struct _Plcrash__CrashReport__SystemInfo {
    struct _ProtobufCMessage _field1;
    int _field2;
    int _field3;
    char *_field4;
    int _field5;
    long long _field6;
    char *_field7;
};

struct _Plcrash__CrashReport__Thread;

struct _Plcrash__CrashReport__Thread__StackFrame {
    struct _ProtobufCMessage _field1;
    unsigned long long _field2;
    struct _Plcrash__CrashReport__Symbol *_field3;
};

struct _ProtobufCMessage {
    struct _ProtobufCMessageDescriptor *_field1;
    unsigned int _field2;
    struct _ProtobufCMessageUnknownField *_field3;
};

struct _ProtobufCMessageDescriptor;

struct _ProtobufCMessageUnknownField;

struct _QZEVMediaTime {
    double value;
    double timestamp;
};

struct _QZEVMediaTimeAnchor {
    double _field1;
    long long _field2;
};

struct _QZEVMediaTimeRange {
    double _field1;
    double _field2;
};

struct _Rb_tree<int, std::pair<const int, std::vector<char, std::allocator<char>>>, std::_Select1st<std::pair<const int, std::vector<char, std::allocator<char>>>>, std::less<int>, std::allocator<std::pair<const int, std::vector<char, std::allocator<char>>>>> {
    struct _Rb_tree_impl<std::less<int>, false> _field1;
};

struct _Rb_tree<std::basic_string<char>, std::pair<const std::basic_string<char>, int>, std::_Select1st<std::pair<const std::basic_string<char>, int>>, std::less<std::basic_string<char>>, std::allocator<std::pair<const std::basic_string<char>, int>>> {
    struct _Rb_tree_impl<std::less<std::basic_string<char>>, false> _M_impl;
};

struct _Rb_tree<std::basic_string<char>, std::pair<const std::basic_string<char>, std::basic_string<char>>, std::_Select1st<std::pair<const std::basic_string<char>, std::basic_string<char>>>, std::less<std::basic_string<char>>, std::allocator<std::pair<const std::basic_string<char>, std::basic_string<char>>>> {
    struct _Rb_tree_impl<std::less<std::basic_string<char>>, false> _field1;
};

struct _Rb_tree<std::basic_string<char>, std::pair<const std::basic_string<char>, std::map<std::basic_string<char>, std::vector<char, std::allocator<char>>, std::less<std::basic_string<char>>, std::allocator<std::pair<std::basic_string<char>, std::vector<char, std::allocator<char>>>>>>, std::_Select1st<std::pair<const std::basic_string<char>, std::map<std::basic_string<char>, std::vector<char, std::allocator<char>>, std::less<std::basic_string<char>>, std::allocator<std::pair<std::basic_string<char>, std::vector<char, std::allocator<char>>>>>>>, std::less<std::basic_string<char>>, std::allocator<std::pair<const std::basic_string<char>, std::map<std::basic_string<char>, std::vector<char, std::allocator<char>>, std::less<std::basic_string<char>>, std::allocator<std::pair<std::basic_string<char>, std::vector<char, std::allocator<char>>>>>>>> {
    struct _Rb_tree_impl<std::less<std::basic_string<char>>, false> _field1;
};

struct _Rb_tree<std::basic_string<char>, std::pair<const std::basic_string<char>, std::vector<char, std::allocator<char>>>, std::_Select1st<std::pair<const std::basic_string<char>, std::vector<char, std::allocator<char>>>>, std::less<std::basic_string<char>>, std::allocator<std::pair<const std::basic_string<char>, std::vector<char, std::allocator<char>>>>> {
    struct _Rb_tree_impl<std::less<std::basic_string<char>>, false> _field1;
};

struct _Rb_tree<unsigned int, std::pair<const unsigned int, std::basic_string<char>>, std::_Select1st<std::pair<const unsigned int, std::basic_string<char>>>, std::less<unsigned int>, std::allocator<std::pair<const unsigned int, std::basic_string<char>>>> {
    struct _Rb_tree_impl<std::less<unsigned int>, false> _field1;
};

struct _Rb_tree_impl<std::less<int>, false> {
    struct less<int> _field1;
    struct _Rb_tree_node_base _field2;
    unsigned long long _field3;
};

struct _Rb_tree_impl<std::less<std::basic_string<char>>, false> {
    struct less<std::basic_string<char>> _M_key_compare;
    struct _Rb_tree_node_base _M_header;
    unsigned long long _M_node_count;
};

struct _Rb_tree_impl<std::less<unsigned int>, false> {
    struct less<unsigned int> _field1;
    struct _Rb_tree_node_base _field2;
    unsigned long long _field3;
};

struct _Rb_tree_node_base {
    int _M_color;
    struct _Rb_tree_node_base *_M_parent;
    struct _Rb_tree_node_base *_M_left;
    struct _Rb_tree_node_base *_M_right;
};

struct _Rect {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
};

struct _TC_FaceProfile {
    vector_31509e0c points;
};

struct _TC_FaceShape {
    struct _TC_FaceProfile faceProfile;
    struct _TC_LeftEyebrow leftEyebrow;
    struct _TC_RightEyebrow rightEyebrow;
    struct _TC_LeftEye leftEye;
    struct _TC_RightEye rightEye;
    struct _TC_Nose nose;
    struct _TC_Mouth mouth;
    struct _TC_Pupil pupil;
};

struct _TC_LeftEye {
    vector_31509e0c points;
};

struct _TC_LeftEyebrow {
    vector_31509e0c points;
};

struct _TC_Mouth {
    vector_31509e0c points;
};

struct _TC_Nose {
    vector_31509e0c points;
};

struct _TC_Pupil {
    vector_31509e0c points;
};

struct _TC_RightEye {
    vector_31509e0c points;
};

struct _TC_RightEyebrow {
    vector_31509e0c points;
};

struct _Words {
    void *_M_pword;
    long long _M_iword;
};

struct __sFILE {
    char *_field1;
    int _field2;
    int _field3;
    short _field4;
    short _field5;
    struct __sbuf _field6;
    int _field7;
    void *_field8;
    CDUnknownFunctionPointerType _field9;
    CDUnknownFunctionPointerType _field10;
    CDUnknownFunctionPointerType _field11;
    CDUnknownFunctionPointerType _field12;
    struct __sbuf _field13;
    struct __sFILEX *_field14;
    int _field15;
    unsigned char _field16[3];
    unsigned char _field17[1];
    struct __sbuf _field18;
    int _field19;
    long long _field20;
};

struct __sbuf {
    char *_field1;
    int _field2;
};

struct __shared_weak_count;

struct _opaque_pthread_mutex_t {
    long long __sig;
    char __opaque[56];
};

struct _opaque_pthread_t;

struct basic_filebuf<char, std::char_traits<char>> {
    CDUnknownFunctionPointerType *_vptr$basic_streambuf;
    char *_M_in_beg;
    char *_M_in_cur;
    char *_M_in_end;
    char *_M_out_beg;
    char *_M_out_cur;
    char *_M_out_end;
    struct locale _M_buf_locale;
    struct _opaque_pthread_mutex_t _M_lock;
    struct __basic_file<char> {
        struct __sFILE *_M_cfile;
        _Bool _M_cfile_created;
    } _M_file;
    int _M_mode;
    CDUnion_96f6e1fe _M_state_beg;
    CDUnion_96f6e1fe _M_state_cur;
    CDUnion_96f6e1fe _M_state_last;
    char *_M_buf;
    unsigned long long _M_buf_size;
    _Bool _M_buf_allocated;
    _Bool _M_reading;
    _Bool _M_writing;
    char _M_pback;
    char *_M_pback_cur_save;
    char *_M_pback_end_save;
    _Bool _M_pback_init;
    struct codecvt<char, char, __mbstate_t> *_M_codecvt;
    char *_M_ext_buf;
    long long _M_ext_buf_size;
    char *_M_ext_next;
    char *_M_ext_end;
};

struct basic_fstream<char, std::char_traits<char>> {
    CDUnknownFunctionPointerType *_vptr$basic_istream;
    long long _M_gcount;
    CDUnknownFunctionPointerType *_vptr$basic_ostream;
    struct basic_filebuf<char, std::char_traits<char>> _M_filebuf;
    CDUnknownFunctionPointerType *_vptr$ios_base;
    long long _M_precision;
    long long _M_width;
    int _M_flags;
    int _M_exception;
    int _M_streambuf_state;
    struct _Callback_list *_M_callbacks;
    struct _Words _M_word_zero;
    struct _Words _M_local_word[8];
    int _M_word_size;
    struct _Words *_M_word;
    struct locale _M_ios_locale;
    struct basic_ostream<char, std::char_traits<char>> *_M_tie;
    char _M_fill;
    _Bool _M_fill_init;
    struct basic_streambuf<char, std::char_traits<char>> *_M_streambuf;
    struct ctype<char> *_M_ctype;
    struct num_put<char, std::ostreambuf_iterator<char, std::char_traits<char>>> *_M_num_put;
    struct num_get<char, std::istreambuf_iterator<char, std::char_traits<char>>> *_M_num_get;
};

struct basic_ostream<char, std::char_traits<char>>;

struct basic_streambuf<char, std::char_traits<char>>;

struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
    struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
        struct __rep {
            union {
                struct __long {
                    char *__data_;
                    unsigned long long __size_;
                    unsigned long long __cap_;
                } __l;
                struct __short {
                    char __data_[23];
                    struct {
                        unsigned char __size_;
                    } ;
                } __s;
                struct __raw {
                    unsigned long long __words[3];
                } __r;
            } ;
        } __first_;
    } __r_;
};

struct basic_string<char, std::char_traits<char>, std::allocator<char>> {
    struct _Alloc_hider _M_dataplus;
};

struct bignum_st;

struct bn_blinding_st;

struct bn_mont_ctx_st;

struct codecvt<char, char, __mbstate_t>;

struct crypto_ex_data_st {
    struct stack_st_void *_field1;
    int _field2;
};

struct ctype<char>;

struct curl_slist {
    char *_field1;
    struct curl_slist *_field2;
};

struct engine_st;

struct in6_addr {
    union {
        unsigned char _field1[16];
        unsigned short _field2[8];
        unsigned int _field3[4];
    } _field1;
};

struct in_addr {
    unsigned int _field1;
};

struct internal_state;

struct layer_param {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    int _field3;
    int _field4;
    int _field5;
    int _field6;
    int _field7;
    int _field8;
    int _field9;
    int _field10;
    int _field11;
};

struct layer_res {
    CDUnknownFunctionPointerType *_field1;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field2;
    int _field3;
};

struct less<int>;

struct less<std::basic_string<char>>;

struct less<unsigned int>;

struct locale {
    struct _Impl *_M_impl;
};

struct map<int, std::vector<char, std::allocator<char>>, std::less<int>, std::allocator<std::pair<const int, std::vector<char, std::allocator<char>>>>> {
    struct _Rb_tree<int, std::pair<const int, std::vector<char, std::allocator<char>>>, std::_Select1st<std::pair<const int, std::vector<char, std::allocator<char>>>>, std::less<int>, std::allocator<std::pair<const int, std::vector<char, std::allocator<char>>>>> _field1;
};

struct map<std::basic_string<char>, int, std::less<std::basic_string<char>>, std::allocator<std::pair<const std::basic_string<char>, int>>> {
    struct _Rb_tree<std::basic_string<char>, std::pair<const std::basic_string<char>, int>, std::_Select1st<std::pair<const std::basic_string<char>, int>>, std::less<std::basic_string<char>>, std::allocator<std::pair<const std::basic_string<char>, int>>> _M_t;
};

struct map<std::basic_string<char>, std::basic_string<char>, std::less<std::basic_string<char>>, std::allocator<std::pair<const std::basic_string<char>, std::basic_string<char>>>> {
    struct _Rb_tree<std::basic_string<char>, std::pair<const std::basic_string<char>, std::basic_string<char>>, std::_Select1st<std::pair<const std::basic_string<char>, std::basic_string<char>>>, std::less<std::basic_string<char>>, std::allocator<std::pair<const std::basic_string<char>, std::basic_string<char>>>> _field1;
};

struct map<std::basic_string<char>, std::map<std::basic_string<char>, std::vector<char, std::allocator<char>>, std::less<std::basic_string<char>>, std::allocator<std::pair<std::basic_string<char>, std::vector<char, std::allocator<char>>>>>, std::less<std::basic_string<char>>, std::allocator<std::pair<std::basic_string<char>, std::map<std::basic_string<char>, std::vector<char, std::allocator<char>>, std::less<std::basic_string<char>>, std::allocator<std::pair<std::basic_string<char>, std::vector<char, std::allocator<char>>>>>>>> {
    struct _Rb_tree<std::basic_string<char>, std::pair<const std::basic_string<char>, std::map<std::basic_string<char>, std::vector<char, std::allocator<char>>, std::less<std::basic_string<char>>, std::allocator<std::pair<std::basic_string<char>, std::vector<char, std::allocator<char>>>>>>, std::_Select1st<std::pair<const std::basic_string<char>, std::map<std::basic_string<char>, std::vector<char, std::allocator<char>>, std::less<std::basic_string<char>>, std::allocator<std::pair<std::basic_string<char>, std::vector<char, std::allocator<char>>>>>>>, std::less<std::basic_string<char>>, std::allocator<std::pair<const std::basic_string<char>, std::map<std::basic_string<char>, std::vector<char, std::allocator<char>>, std::less<std::basic_string<char>>, std::allocator<std::pair<std::basic_string<char>, std::vector<char, std::allocator<char>>>>>>>> _field1;
};

struct map<std::basic_string<char>, std::vector<char, std::allocator<char>>, std::less<std::basic_string<char>>, std::allocator<std::pair<const std::basic_string<char>, std::vector<char, std::allocator<char>>>>> {
    struct _Rb_tree<std::basic_string<char>, std::pair<const std::basic_string<char>, std::vector<char, std::allocator<char>>>, std::_Select1st<std::pair<const std::basic_string<char>, std::vector<char, std::allocator<char>>>>, std::less<std::basic_string<char>>, std::allocator<std::pair<const std::basic_string<char>, std::vector<char, std::allocator<char>>>>> _field1;
};

struct map<unsigned int, std::basic_string<char>, std::less<unsigned int>, std::allocator<std::pair<const unsigned int, std::basic_string<char>>>> {
    struct _Rb_tree<unsigned int, std::pair<const unsigned int, std::basic_string<char>>, std::_Select1st<std::pair<const unsigned int, std::basic_string<char>>>, std::less<unsigned int>, std::allocator<std::pair<const unsigned int, std::basic_string<char>>>> _field1;
};

struct num_get<char, std::istreambuf_iterator<char, std::char_traits<char>>>;

struct num_put<char, std::ostreambuf_iterator<char, std::char_traits<char>>>;

struct plcrash_async_allocator;

struct plcrash_exception_server_context {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    CDUnknownFunctionPointerType _field5;
    void *_field6;
    struct _opaque_pthread_mutex_t _field7;
    struct _opaque_pthread_cond_t {
        long long _field1;
        char _field2[40];
    } _field8;
    unsigned int _field9;
    _Bool _field10;
};

struct plcrash_log_writer {
    struct plcrash_async_allocator *_field1;
    int _field2;
    struct {
        _Bool _field1;
        unsigned char _field2[16];
    } _field3;
    struct {
        char *_field1;
        char *_field2;
    } _field4;
    struct {
        char *_field1;
        unsigned long long _field2;
        unsigned long long _field3;
        unsigned int _field4;
        unsigned int _field5;
    } _field5;
    struct {
        char *_field1;
        char *_field2;
        char *_field3;
    } _field6;
    struct {
        char *_field1;
        int _field2;
        char *_field3;
        long long _field4;
        char *_field5;
        int _field6;
        _Bool _field7;
    } _field7;
    struct {
        _Bool _field1;
        char *_field2;
        char *_field3;
        void **_field4;
        unsigned long long _field5;
    } _field8;
};

struct plcrash_mach_exception_port_set {
    unsigned int count;
    unsigned int masks[14];
    unsigned int ports[14];
    int behaviors[14];
    int flavors[14];
};

struct rapidnet {
    struct rpd_ctrl *_field1;
};

struct rpd_ctrl;

struct rpd_layer_info {
    int _field1;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field2;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field3;
    vector_e0f2bd7e _field4;
    vector_e0f2bd7e _field5;
    struct layer_param *_field6;
};

struct rpd_net_param {
    int _field1;
    int _field2;
    int _field3;
    struct rpd_blob<float> {
        int _field1[4];
        float *_field2;
        struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field3;
    } _field4;
    int _field5;
    int _field6;
};

struct rpdnet_base;

struct rsa_meth_st;

struct rsa_st {
    int _field1;
    long long _field2;
    struct rsa_meth_st *_field3;
    struct engine_st *_field4;
    struct bignum_st *_field5;
    struct bignum_st *_field6;
    struct bignum_st *_field7;
    struct bignum_st *_field8;
    struct bignum_st *_field9;
    struct bignum_st *_field10;
    struct bignum_st *_field11;
    struct bignum_st *_field12;
    struct crypto_ex_data_st _field13;
    int _field14;
    int _field15;
    struct bn_mont_ctx_st *_field16;
    struct bn_mont_ctx_st *_field17;
    struct bn_mont_ctx_st *_field18;
    char *_field19;
    struct bn_blinding_st *_field20;
    struct bn_blinding_st *_field21;
};

struct shared_ptr<WnsLoginCallback> {
    struct WnsLoginCallback *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<WnsLoginManager> {
    struct WnsLoginManager *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<WnsOCDataSource> {
    struct WnsOCDataSource *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<WnsUniversalSDK> {
    struct WnsUniversalSDK *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct sockaddr {
    unsigned char _field1;
    unsigned char _field2;
    char _field3[14];
};

struct sockaddr_in {
    unsigned char _field1;
    unsigned char _field2;
    unsigned short _field3;
    struct in_addr _field4;
    char _field5[8];
};

struct sockaddr_in6 {
    unsigned char _field1;
    unsigned char _field2;
    unsigned short _field3;
    unsigned int _field4;
    struct in6_addr _field5;
    unsigned int _field6;
};

struct sockaddr_un {
    unsigned char _field1;
    unsigned char _field2;
    char _field3[104];
};

struct stEnvironment {
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field1;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field2;
    int _field3;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field4;
    unsigned int _field5;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field6;
    int _field7;
    int _field8;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field9;
};

struct stPoi {
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field1;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field2;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field3;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field4;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field5;
    int _field6;
    int _field7;
};

struct stResult {
    int _field1;
    int _field2;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field3;
};

struct stWaterTemplate {
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field1;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field2;
};

struct stack_st_void;

struct timeval {
    long long tv_sec;
    int tv_usec;
};

struct vector<RVar *, std::allocator<RVar *>> {
    struct _Vector_impl {
        struct RVar **_M_start;
        struct RVar **_M_finish;
        struct RVar **_M_end_of_storage;
    } _M_impl;
};

struct vector<UploadSDK::FileUpload::QuanInfo, std::allocator<UploadSDK::FileUpload::QuanInfo>> {
    struct _Vector_impl {
        struct QuanInfo *_field1;
        struct QuanInfo *_field2;
        struct QuanInfo *_field3;
    } _field1;
};

struct vector<UploadSDK::FileUpload::ShuoshuoPicInfo, std::allocator<UploadSDK::FileUpload::ShuoshuoPicInfo>> {
    struct _Vector_impl {
        struct ShuoshuoPicInfo *_field1;
        struct ShuoshuoPicInfo *_field2;
        struct ShuoshuoPicInfo *_field3;
    } _field1;
};

struct vector<_GLKVector3, std::allocator<_GLKVector3>> {
    struct _Vector_impl {
        union _GLKVector3 *_M_start;
        union _GLKVector3 *_M_finish;
        union _GLKVector3 *_M_end_of_storage;
    } _M_impl;
};

struct vector<char, std::allocator<char>> {
    struct _Vector_impl {
        char *_field1;
        char *_field2;
        char *_field3;
    } _field1;
};

struct vector<cv::Point_<float>, std::__1::allocator<cv::Point_<float>>> {
    struct Point_<float> *__begin_;
    struct Point_<float> *__end_;
    struct __compressed_pair<cv::Point_<float>*, std::__1::allocator<cv::Point_<float>>> {
        struct Point_<float> *__first_;
    } __end_cap_;
};

struct vector<int, std::__1::allocator<int>> {
    int *__begin_;
    int *__end_;
    struct __compressed_pair<int *, std::__1::allocator<int>> {
        int *__first_;
    } __end_cap_;
};

struct vector<int, std::allocator<int>> {
    struct _Vector_impl {
        int *_M_start;
        int *_M_finish;
        int *_M_end_of_storage;
    } _M_impl;
};

struct vector<rqd::AppInfo, std::allocator<rqd::AppInfo>> {
    struct _Vector_impl {
        struct AppInfo *_field1;
        struct AppInfo *_field2;
        struct AppInfo *_field3;
    } _field1;
};

struct vector<rqd::Attachment, std::allocator<rqd::Attachment>> {
    struct _Vector_impl {
        struct Attachment *_field1;
        struct Attachment *_field2;
        struct Attachment *_field3;
    } _field1;
};

struct vector<rqd::ExceptionUpload, std::allocator<rqd::ExceptionUpload>> {
    struct _Vector_impl {
        struct ExceptionUpload *_field1;
        struct ExceptionUpload *_field2;
        struct ExceptionUpload *_field3;
    } _field1;
};

struct vector<rqd::SummaryInfo, std::allocator<rqd::SummaryInfo>> {
    struct _Vector_impl {
        struct SummaryInfo *_field1;
        struct SummaryInfo *_field2;
        struct SummaryInfo *_field3;
    } _field1;
};

struct vector<std::basic_string<char>, std::allocator<std::basic_string<char>>> {
    struct _Vector_impl {
        struct basic_string<char, std::char_traits<char>, std::allocator<char>> *_field1;
        struct basic_string<char, std::char_traits<char>, std::allocator<char>> *_field2;
        struct basic_string<char, std::char_traits<char>, std::allocator<char>> *_field3;
    } _field1;
};

struct vector<unsigned long, std::allocator<unsigned long>> {
    struct _Vector_impl {
        unsigned long long *_M_start;
        unsigned long long *_M_finish;
        unsigned long long *_M_end_of_storage;
    } _M_impl;
};

struct z_stream_s {
    char *next_in;
    unsigned int avail_in;
    unsigned long long total_in;
    char *next_out;
    unsigned int avail_out;
    unsigned long long total_out;
    char *msg;
    struct internal_state *state;
    CDUnknownFunctionPointerType zalloc;
    CDUnknownFunctionPointerType zfree;
    void *opaque;
    int data_type;
    unsigned long long adler;
    unsigned long long reserved;
};

#if 0
// Names with conflicting types:
typedef struct ?<float> {
    int _field1[4];
    float *_field2;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field3;
} rpd_blob_7829e9d7;

typedef struct ?<float> {
    int shape_[4];
    float *data_;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> blob_name_;
} rpd_blob_0492df85;

#endif

#pragma mark Typedef'd Structures

typedef struct {
    SEL _field1;
    SEL _field2;
    SEL _field3;
} CDStruct_0348af7d;

typedef struct {
    unsigned char _field1;
    unsigned int _field2;
    unsigned short _field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned char _field6;
    unsigned short _field7;
    char _field8[1];
    unsigned int _field9;
} CDStruct_a53ae8cd;

typedef struct {
    unsigned long long width;
    unsigned long long height;
    unsigned long long depth;
} CDStruct_da2e99ad;

typedef struct {
    unsigned long long _field1;
    id *_field2;
    unsigned long long *_field3;
    unsigned long long _field4[5];
} CDStruct_70511ce9;

typedef struct {
    unsigned short wCmd;
    unsigned short wSubCmd;
    short wRst;
    unsigned int dwUsed;
    unsigned int dwCalUsed;
    unsigned short wTry;
    unsigned char acHostName[32];
    unsigned char acHostIp[32];
    unsigned short wPort;
    unsigned char cConn;
    unsigned char cNetType;
    unsigned char cNetwork;
    unsigned char cEncryptType;
    unsigned char acErrorStr[64];
    unsigned short wSendDataLen;
    unsigned short wResvDataLen;
} CDStruct_7a5a57b9;

typedef struct {
    char acHostName[32];
    unsigned short wPort;
    unsigned short wTimeout;
} CDStruct_93d23b61;

typedef struct {
    char *_field1;
    void **_field2;
    unsigned int _field3;
    int _field4;
} CDStruct_19471fff;

typedef struct {
    double m11;
    double m12;
    double m13;
    double m21;
    double m22;
    double m23;
    double m31;
    double m32;
    double m33;
} CDStruct_2d7b3170;

typedef struct {
    double red;
    double green;
    double blue;
    double alpha;
} CDStruct_3ead2808;

typedef struct {
    double _field1;
    double _field2;
} CDStruct_c3b9c2ee;

typedef struct {
    int width;
    int height;
} CDStruct_79c71658;

typedef struct {
    long long version;
    void *info;
    CDUnknownFunctionPointerType retain;
    CDUnknownFunctionPointerType release;
    CDUnknownFunctionPointerType copyDescription;
} CDStruct_4210025a;

typedef struct {
    long long value;
    int timescale;
    unsigned int flags;
    long long epoch;
} CDStruct_1b6d18a9;

typedef struct CDStruct_183601bc;

typedef struct {
    CDStruct_1b6d18a9 frameTime;
    unsigned long long rotationMode;
    _Bool frameCheckDisabled;
    _Bool hasReceivedFrame;
    _Bool hasSetTarget;
} CDStruct_9f9bca67;

typedef struct {
    CDStruct_1b6d18a9 start;
    CDStruct_1b6d18a9 duration;
} CDStruct_e83c9415;

typedef struct {
    struct CGPoint _field1;
    struct CGPoint _field2;
} CDStruct_e3b9714e;

typedef struct {
    _Bool _field1;
    _Bool _field2;
    struct CGRect _field3;
    struct CGRect _field4;
    double _field5;
    long long _field6;
    unsigned long long _field7;
} CDStruct_902a08d0;

// Ambiguous groups
typedef struct {
    float _field1;
    float _field2;
    float _field3;
    float _field4;
} CDStruct_818bb265;

typedef struct {
    float red;
    float green;
    float blue;
    float alpha;
} CDStruct_0b1c536a;

typedef struct JceInputStream<analyticstaf::BufferReader> {
    char *_field1;
    unsigned long long _field2;
    unsigned long long _field3;
} JceInputStream_f07640a9;

typedef struct JceOutputStream<analyticstaf::BufferWriter> {
    char *_field1;
    unsigned long long _field2;
    unsigned long long _field3;
} JceOutputStream_31132a5e;

typedef struct UniPacket<wnstaf::BufferWriter, wnstaf::BufferReader, std::allocator> {
    short _field1;
    char _field2;
    int _field3;
    int _field4;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field5;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field6;
    vector_a7fb0c12 _field7;
    int _field8;
    struct map<std::basic_string<char>, std::basic_string<char>, std::less<std::basic_string<char>>, std::allocator<std::pair<const std::basic_string<char>, std::basic_string<char>>>> _field9;
    struct map<std::basic_string<char>, std::basic_string<char>, std::less<std::basic_string<char>>, std::allocator<std::pair<const std::basic_string<char>, std::basic_string<char>>>> _field10;
    struct map<std::basic_string<char>, std::map<std::basic_string<char>, std::vector<char, std::allocator<char>>, std::less<std::basic_string<char>>, std::allocator<std::pair<std::basic_string<char>, std::vector<char, std::allocator<char>>>>>, std::less<std::basic_string<char>>, std::allocator<std::pair<std::basic_string<char>, std::map<std::basic_string<char>, std::vector<char, std::allocator<char>>, std::less<std::basic_string<char>>, std::allocator<std::pair<std::basic_string<char>, std::vector<char, std::allocator<char>>>>>>>> _field11;
    struct JceInputStream<wnstaf::BufferReader> _field12;
    struct JceOutputStream<wnstaf::BufferWriter> _field13;
} UniPacket_40935657;

typedef struct shared_ptr<WnsLoginManager> {
    struct WnsLoginManager *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_5f4e74c2;

typedef struct shared_ptr<WnsUniversalSDK> {
    struct WnsUniversalSDK *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_04581389;

typedef struct vector<char, std::allocator<char>> {
    struct _Vector_impl {
        char *_field1;
        char *_field2;
        char *_field3;
    } _field1;
} vector_a7fb0c12;

typedef struct vector<cv::Point_<float>, std::__1::allocator<cv::Point_<float>>> {
    struct Point_<float> *__begin_;
    struct Point_<float> *__end_;
    struct __compressed_pair<cv::Point_<float>*, std::__1::allocator<cv::Point_<float>>> {
        struct Point_<float> *__first_;
    } __end_cap_;
} vector_31509e0c;

typedef struct vector<int, std::__1::allocator<int>> {
    int *__begin_;
    int *__end_;
    struct __compressed_pair<int *, std::__1::allocator<int>> {
        int *__first_;
    } __end_cap_;
} vector_e0f2bd7e;

#pragma mark Named Unions

union _GLKMatrix4 {
    struct {
        float m00;
        float m01;
        float m02;
        float m03;
        float m10;
        float m11;
        float m12;
        float m13;
        float m20;
        float m21;
        float m22;
        float m23;
        float m30;
        float m31;
        float m32;
        float m33;
    } ;
    float m[16];
};

union _GLKVector2 {
    struct {
        float x;
        float y;
    } ;
    struct {
        float s;
        float t;
    } ;
    float v[2];
};

union _GLKVector3 {
    struct {
        float x;
        float y;
        float z;
    } ;
    struct {
        float r;
        float g;
        float b;
    } ;
    struct {
        float s;
        float t;
        float p;
    } ;
    float v[3];
};

union _GLKVector4 {
    struct {
        float x;
        float y;
        float z;
        float w;
    } ;
    struct {
        float r;
        float g;
        float b;
        float a;
    } ;
    struct {
        float s;
        float t;
        float p;
        float q;
    } ;
    float v[4];
};

#pragma mark Typedef'd Unions

typedef union {
    char __mbstate8[128];
    long long _mbstateL;
} CDUnion_96f6e1fe;

