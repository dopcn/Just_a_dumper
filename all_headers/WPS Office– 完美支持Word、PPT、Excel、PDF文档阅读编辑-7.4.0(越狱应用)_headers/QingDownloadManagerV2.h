//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "QingDownloadTaskEntityDelegate-Protocol.h"

@class NSMutableArray, NSOperationQueue, NSString, QingDownloadMonitor;
@protocol QingDownloadManagerDelegateV2;

@interface QingDownloadManagerV2 : NSObject <QingDownloadTaskEntityDelegate>
{
    _Bool _isStartDelay;
    _Bool _delayDone;
    id <QingDownloadManagerDelegateV2> _delegate;
    QingDownloadMonitor<QingDownloadManagerDelegateV2> *_tasksMonitor;
    NSMutableArray *_high_lev_runningTasks;
    NSMutableArray *_high_lev_waitingTasks;
    NSMutableArray *_low_lev_runningTasks;
    NSMutableArray *_low_lev_waitingTasks;
    NSOperationQueue *_tasksQueue;
    NSMutableArray *_delayTasks;
}

+ (id)sharedManager;
@property(retain) NSMutableArray *delayTasks; // @synthesize delayTasks=_delayTasks;
@property _Bool delayDone; // @synthesize delayDone=_delayDone;
@property _Bool isStartDelay; // @synthesize isStartDelay=_isStartDelay;
@property(retain) NSOperationQueue *tasksQueue; // @synthesize tasksQueue=_tasksQueue;
@property(retain) NSMutableArray *low_lev_waitingTasks; // @synthesize low_lev_waitingTasks=_low_lev_waitingTasks;
@property(retain) NSMutableArray *low_lev_runningTasks; // @synthesize low_lev_runningTasks=_low_lev_runningTasks;
@property(retain) NSMutableArray *high_lev_waitingTasks; // @synthesize high_lev_waitingTasks=_high_lev_waitingTasks;
@property(retain) NSMutableArray *high_lev_runningTasks; // @synthesize high_lev_runningTasks=_high_lev_runningTasks;
@property(retain) QingDownloadMonitor<QingDownloadManagerDelegateV2> *tasksMonitor; // @synthesize tasksMonitor=_tasksMonitor;
@property(nonatomic) __weak id <QingDownloadManagerDelegateV2> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)networkDidChanged:(id)arg1;
- (void)addDelay:(id)arg1 delay:(long long)arg2;
- (void)startDelay;
- (void)stopDelay;
- (long long)nextDelayTime:(long long)arg1;
- (void)delayTimeoutWithEntity:(id)arg1;
- (void)delayTimeoutWithObject:(id)arg1;
- (void)downloadStageFinished:(unsigned long long)arg1 error:(id)arg2 byTaskEntity:(id)arg3;
- (void)downloadProgress:(float)arg1 totalReceiveBytes:(long long)arg2 byTaskEntity:(id)arg3;
- (void)downloadDidFinishedByTaskEntity:(id)arg1;
- (void)downloadDidFailed:(id)arg1 byTaskEntity:(id)arg2;
- (void)downloadDidStartedByTaskEntity:(id)arg1;
- (void)cancelAll;
- (void)cancelHistoryByHistoryID:(id)arg1;
- (void)cancelFileByFileID:(id)arg1;
- (void)cancelByTaskID:(id)arg1;
- (void)pauseHistoryByHistoryID:(id)arg1;
- (void)pauseFileByFileID:(id)arg1;
- (void)pauseByTaskID:(id)arg1;
- (void)cbim_prog:(float)arg1 totalReceBytes:(long long)arg2 byBasket:(id)arg3;
- (void)cbim_finish:(id)arg1;
- (void)cbim_fail:(id)arg1 byBasket:(id)arg2;
- (void)cbim_start:(id)arg1;
- (void)cbim_change:(long long)arg1 byBasket:(id)arg2;
- (void)resumeDownload:(id)arg1;
- (void)addHistoryDownload:(id)arg1;
- (void)addFileDownload:(id)arg1;
- (id)historyDownloadTaskInfoByHistoryID:(id)arg1;
- (id)fileDownloadTaskInfoByFileID:(id)arg1;
- (_Bool)isTask3GDownloadByTaskID:(id)arg1;
- (void)deleteFile:(id)arg1 fileid:(id)arg2 fver:(long long)arg3;
- (void)execTask:(id)arg1 basket:(id)arg2;
- (_Bool)dispatchTask:(id)arg1 basket:(id)arg2 lev:(unsigned long long)arg3;
- (void)removeEntityByTaskID:(id)arg1;
- (void)removeEntityIn:(id)arg1 byTaskID:(id)arg2;
- (void)removeAllEntity;
- (id)lowLevEntityByTaskID:(id)arg1;
- (id)highLevEntityByTaskID:(id)arg1;
- (id)entityByTaskID:(id)arg1 queue:(id *)arg2;
- (id)entityByTaskID:(id)arg1;
- (id)entityIn:(id)arg1 byTaskID:(id)arg2;
- (void)updateTasksQueue;
- (_Bool)isWaitingTaskStillUpdateToRunning:(id)arg1;
- (void)updateLowLevelTasksQueue;
- (void)updateHighLevelTasksQueue;
- (void)arrangeTasksQueue:(id)arg1;
- (void)addTask:(id)arg1 toLev:(unsigned long long)arg2;
- (_Bool)isRunningQueue:(id)arg1;
- (id)init;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

