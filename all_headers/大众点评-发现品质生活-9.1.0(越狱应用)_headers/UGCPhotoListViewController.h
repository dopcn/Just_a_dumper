//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "NVViewController.h"

#import "UICollectionViewDataSource-Protocol.h"
#import "UICollectionViewDelegateFlowLayout-Protocol.h"
#import "UIImagePickerControllerDelegate-Protocol.h"
#import "UINavigationControllerDelegate-Protocol.h"

@class NSArray, NSMutableArray, NSString, UGCButtonWithBadgeNumber, UGCPhotoCollection, UGCPhotoLibrary, UIButton, UICollectionView, UIView;

@interface UGCPhotoListViewController : NVViewController <UICollectionViewDataSource, UICollectionViewDelegateFlowLayout, UIImagePickerControllerDelegate, UINavigationControllerDelegate>
{
    _Bool _autoPop;
    unsigned long long _maxNum;
    CDUnknownBlockType _photoPickerDidFinishPick;
    CDUnknownBlockType _photoPickerDidCancelPick;
    UICollectionView *_collectionView;
    UGCPhotoCollection *_activeCollection;
    UGCPhotoLibrary *_photoLibrary;
    NSArray *_photoAlbums;
    UGCButtonWithBadgeNumber *_nextButton;
    NSString *_nextButtonTitle;
    UIView *_toolBar;
    UIButton *_previewButton;
    double _cellWidth;
    NSMutableArray *_selectedPhotos;
}

@property(retain, nonatomic) NSMutableArray *selectedPhotos; // @synthesize selectedPhotos=_selectedPhotos;
@property(nonatomic) double cellWidth; // @synthesize cellWidth=_cellWidth;
@property(retain, nonatomic) UIButton *previewButton; // @synthesize previewButton=_previewButton;
@property(retain, nonatomic) UIView *toolBar; // @synthesize toolBar=_toolBar;
@property(retain, nonatomic) NSString *nextButtonTitle; // @synthesize nextButtonTitle=_nextButtonTitle;
@property(retain, nonatomic) UGCButtonWithBadgeNumber *nextButton; // @synthesize nextButton=_nextButton;
@property(retain, nonatomic) NSArray *photoAlbums; // @synthesize photoAlbums=_photoAlbums;
@property(retain, nonatomic) UGCPhotoLibrary *photoLibrary; // @synthesize photoLibrary=_photoLibrary;
@property(retain, nonatomic) UGCPhotoCollection *activeCollection; // @synthesize activeCollection=_activeCollection;
@property(retain, nonatomic) UICollectionView *collectionView; // @synthesize collectionView=_collectionView;
@property(copy, nonatomic) CDUnknownBlockType photoPickerDidCancelPick; // @synthesize photoPickerDidCancelPick=_photoPickerDidCancelPick;
@property(copy, nonatomic) CDUnknownBlockType photoPickerDidFinishPick; // @synthesize photoPickerDidFinishPick=_photoPickerDidFinishPick;
@property(nonatomic) _Bool autoPop; // @synthesize autoPop=_autoPop;
@property(nonatomic) unsigned long long maxNum; // @synthesize maxNum=_maxNum;
- (void).cxx_destruct;
- (void)reloadAlbumAndSelectPhoto:(id)arg1;
- (void)imagePickerController:(id)arg1 didFinishPickingMediaWithInfo:(id)arg2;
- (void)showPreviewWithIndex:(id)arg1;
- (void)nextButtonClicked;
- (void)popSelfWithAnimation:(id)arg1;
- (void)openCamera;
- (void)openPreview;
- (_Bool)deselectAsset:(id)arg1;
- (_Bool)selectAsset:(id)arg1;
- (void)collectionView:(id)arg1 didSelectItemAtIndexPath:(id)arg2;
- (id)collectionView:(id)arg1 cellForItemAtIndexPath:(id)arg2;
- (long long)collectionView:(id)arg1 numberOfItemsInSection:(long long)arg2;
- (long long)numberOfSectionsInCollectionView:(id)arg1;
- (void)preloadAssetsFromCollectionAndSetActive:(id)arg1;
- (void)setFirstActiveCollection;
- (void)getAlbums;
- (void)requestPermissionAndFetchData;
- (void)viewWillDisappear:(_Bool)arg1;
- (id)getPureColorImageWithSize:(struct CGSize)arg1 andColor:(id)arg2 andCornerRadius:(double)arg3;
- (void)createToolBar;
- (void)back;
- (void)createNavigationItem;
- (void)showLimitToast;
- (void)showAlbumSelectPage:(id)arg1;
- (void)updateTitleWithTitle:(id)arg1;
- (void)updateTitleView;
- (void)viewDidLoad;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)selectPicCountChange;
- (void)viewDidLayoutSubviews;
- (_Bool)isSelectPhotoWithIdentifier:(id)arg1;
- (id)init;
- (id)initWithSelectedPhotos:(id)arg1 andMaxSelectedNum:(unsigned long long)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

