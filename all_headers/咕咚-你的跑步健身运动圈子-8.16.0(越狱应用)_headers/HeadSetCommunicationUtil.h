//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

#import "HiJackDelegate-Protocol.h"
#import "ICommunication-Protocol.h"

@class CDDeviceBindData, HiJackMgr, NSArray, NSData, NSDictionary, NSMutableDictionary, NSString, NSTimer;
@protocol HeadSetCommunicationUtilDelegate;

@interface HeadSetCommunicationUtil : NSObject <HiJackDelegate, ICommunication>
{
    _Bool _isAllowSound;
    _Bool _isConnectingForBinding;
    _Bool _isConnected;
    unsigned char _currentControllByte;
    _Bool _hasFailManchester;
    _Bool _hasFailFSK;
    _Bool _hasFailSoundIndexOnce;
    int _isNowCancelOrTimeout;
    int _missionID;
    int _soundIndexConnectTryCount;
    int _modeConnectTryCount;
    id <HeadSetCommunicationUtilDelegate> _delegate;
    CDDeviceBindData *_bindDevice;
    NSDictionary *_nowHandlingMission;
    NSMutableDictionary *_nowWantedDataAndReceiveState;
    HiJackMgr *_hijackMgr;
    NSTimer *_receiveTimeout;
    NSArray *_nowCommand;
    NSTimer *_missionTimeout;
    SEL _mediumSelector;
    long long _totalCommandsCount;
    NSData *_currentReceiveData;
}

+ (void)backToMonitorCommunication;
+ (void)cancelMonitorCommunication;
+ (id)sharedHeadSetCommunicationUtil;
@property(nonatomic) _Bool hasFailSoundIndexOnce; // @synthesize hasFailSoundIndexOnce=_hasFailSoundIndexOnce;
@property(nonatomic) _Bool hasFailFSK; // @synthesize hasFailFSK=_hasFailFSK;
@property(nonatomic) _Bool hasFailManchester; // @synthesize hasFailManchester=_hasFailManchester;
@property(nonatomic) int modeConnectTryCount; // @synthesize modeConnectTryCount=_modeConnectTryCount;
@property(nonatomic) int soundIndexConnectTryCount; // @synthesize soundIndexConnectTryCount=_soundIndexConnectTryCount;
@property(nonatomic) int missionID; // @synthesize missionID=_missionID;
@property(nonatomic) unsigned char currentControllByte; // @synthesize currentControllByte=_currentControllByte;
@property(retain, nonatomic) NSData *currentReceiveData; // @synthesize currentReceiveData=_currentReceiveData;
@property long long totalCommandsCount; // @synthesize totalCommandsCount=_totalCommandsCount;
@property SEL mediumSelector; // @synthesize mediumSelector=_mediumSelector;
@property(retain) NSTimer *missionTimeout; // @synthesize missionTimeout=_missionTimeout;
@property(retain) NSArray *nowCommand; // @synthesize nowCommand=_nowCommand;
@property(retain) NSTimer *receiveTimeout; // @synthesize receiveTimeout=_receiveTimeout;
@property(retain) HiJackMgr *hijackMgr; // @synthesize hijackMgr=_hijackMgr;
@property(retain) NSMutableDictionary *nowWantedDataAndReceiveState; // @synthesize nowWantedDataAndReceiveState=_nowWantedDataAndReceiveState;
@property(retain) NSDictionary *nowHandlingMission; // @synthesize nowHandlingMission=_nowHandlingMission;
@property _Bool isConnected; // @synthesize isConnected=_isConnected;
@property(retain, nonatomic) CDDeviceBindData *bindDevice; // @synthesize bindDevice=_bindDevice;
@property(nonatomic) _Bool isConnectingForBinding; // @synthesize isConnectingForBinding=_isConnectingForBinding;
@property(nonatomic) _Bool isAllowSound; // @synthesize isAllowSound=_isAllowSound;
@property int isNowCancelOrTimeout; // @synthesize isNowCancelOrTimeout=_isNowCancelOrTimeout;
@property id <HeadSetCommunicationUtilDelegate> delegate; // @synthesize delegate=_delegate;
- (void)dealloc;
- (_Bool)isDeviceBond;
- (_Bool)isHeadSetOutPlugIn;
- (void)cancelConnection;
- (void)manchesterFailHandler;
- (_Bool)isAllHeadSetFail;
- (void)connectionComplete:(id)arg1;
- (int)anotherHeadSetConnectMode:(int)arg1;
- (int)anotherSoundIndex:(int)arg1;
- (void)blankCallBack:(id)arg1;
- (void)setAlertAlarmInfo:(SEL)arg1 byTarget:(id)arg2;
- (void)setDeviceTime:(SEL)arg1 byTarget:(id)arg2;
- (void)updateDeviceDateTime:(char *)arg1 withCallback:(SEL)arg2 byTarget:(id)arg3;
- (void)obtainDeviceTime:(SEL)arg1 byTarget:(id)arg2;
- (void)clearSportsData:(SEL)arg1 byTarget:(id)arg2;
- (void)obtainSportsData:(SEL)arg1 byTarget:(id)arg2;
- (void)setUserInfo:(SEL)arg1 byTarget:(id)arg2;
- (void)updateRingUserInfoWithBytes:(char *)arg1 withCallback:(SEL)arg2 byTarget:(id)arg3;
- (void)updateDeviceUserInfoWithBytes:(char *)arg1 withCallback:(SEL)arg2 byTarget:(id)arg3;
- (void)obtainDeviceInfo:(SEL)arg1 byTarget:(id)arg2;
- (void)obtainDeviceUserInfo:(SEL)arg1 byTarget:(id)arg2;
- (void)obtainDataFrameCount:(SEL)arg1 byTarget:(id)arg2;
- (void)obtainDeviceID:(SEL)arg1 byTarget:(id)arg2;
- (void)obtainTypeAndVersion:(SEL)arg1 byTarget:(id)arg2;
- (void)simplyRegularSendCommand:(char *)arg1 commandLength:(long long)arg2 withSelector:(SEL)arg3 byTarget:(id)arg4;
- (void)connectDevice:(SEL)arg1 byTarget:(id)arg2;
- (void)obtainConnectionCommand:(SEL)arg1 byTarget:(id)arg2;
- (void)obtainConnection:(SEL)arg1 byTarget:(id)arg2;
- (void)obtainDataMediumCallback:(id)arg1;
- (void)connectionMediumCallback:(id)arg1;
- (id)bytesToArray:(char *)arg1 withLength:(long long)arg2;
- (void)cancelMission;
- (void)prepareNewMission:(id)arg1 withSelector:(SEL)arg2 callbackTarget:(id)arg3 missionTimeoutSeconds:(int)arg4 mediumSelector:(SEL)arg5;
- (int)receive:(unsigned char)arg1;
- (void)receiveFinish:(id)arg1;
- (void)setReceiveCurrentIndex:(int)arg1;
- (void)setReceiveDataLength:(int)arg1;
- (void)setReceiveState:(int)arg1;
- (void)applicationWillResignActive;
- (id)init;
- (void)proceedMission;
- (void)defaultMediumCallback;
- (void)completeMission;
- (void)missionTimeoutHanler;
- (void)missionCancelHanler;
- (void)receiveTimeOut:(id)arg1;
- (void)reSendCommand;
- (void)sendCommand:(id)arg1 withTimeOut:(float)arg2;
- (id)dataFromCommandArray:(id)arg1;
- (void)blankWantedDataAndReceiveState;
- (void)resetWantedDataAndReceiveState;
- (void)resetState;
- (void)performCallBack:(_Bool)arg1;
- (void)setMissionStateTimeout;
- (_Bool)isNowHandelingMission;
- (_Bool)isDeviceConnected;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

