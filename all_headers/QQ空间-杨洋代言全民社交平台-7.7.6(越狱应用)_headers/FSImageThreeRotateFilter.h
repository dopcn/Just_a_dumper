//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "FSEImageWrapFilter.h"

@class GPUImageAlphaBlendFilter, GPUImageTransformFilter, NSMutableArray;

@interface FSImageThreeRotateFilter : FSEImageWrapFilter
{
    NSMutableArray *_bufferList;
    GPUImageTransformFilter *_transform_up;
    GPUImageTransformFilter *_transform_middle;
    GPUImageTransformFilter *_transform_down;
    GPUImageAlphaBlendFilter *_alphaBlendFilter1;
    GPUImageAlphaBlendFilter *_alphaBlendFilter2;
    GPUImageAlphaBlendFilter *_alphaBlendFilter3;
    struct CGAffineTransform _trans_up;
    struct CGAffineTransform _trans_middle;
    struct CGAffineTransform _trans_down;
}

@property(retain, nonatomic) GPUImageAlphaBlendFilter *alphaBlendFilter3; // @synthesize alphaBlendFilter3=_alphaBlendFilter3;
@property(retain, nonatomic) GPUImageAlphaBlendFilter *alphaBlendFilter2; // @synthesize alphaBlendFilter2=_alphaBlendFilter2;
@property(retain, nonatomic) GPUImageAlphaBlendFilter *alphaBlendFilter1; // @synthesize alphaBlendFilter1=_alphaBlendFilter1;
@property(retain, nonatomic) GPUImageTransformFilter *transform_down; // @synthesize transform_down=_transform_down;
@property(retain, nonatomic) GPUImageTransformFilter *transform_middle; // @synthesize transform_middle=_transform_middle;
@property(retain, nonatomic) GPUImageTransformFilter *transform_up; // @synthesize transform_up=_transform_up;
@property(retain, nonatomic) NSMutableArray *bufferList; // @synthesize bufferList=_bufferList;
@property(nonatomic) struct CGAffineTransform trans_down; // @synthesize trans_down=_trans_down;
@property(nonatomic) struct CGAffineTransform trans_middle; // @synthesize trans_middle=_trans_middle;
@property(nonatomic) struct CGAffineTransform trans_up; // @synthesize trans_up=_trans_up;
- (void).cxx_destruct;
- (void)updateMixWithAlpha1:(double)arg1 alpha2:(double)arg2 alpha3:(double)arg3;
- (id)imageFromCurrentFramebufferWithOrientation:(long long)arg1;
- (id)imageFromCurrentFramebuffer;
- (id)framebufferForOutput;
- (void)useNextFrameForImageCapture;
- (void)setFrameProcessingCompletionBlock:(CDUnknownBlockType)arg1;
- (void)removeTarget:(id)arg1;
- (void)addTarget:(id)arg1;
- (void)newFrameReadyAtTime:(CDStruct_1b6d18a9)arg1 atIndex:(long long)arg2;
- (void)removeAllCachedFrames;
- (void)removeAllTargets;
- (void)dealloc;
- (void)cleanFilter;
- (void)buildupFilter;
- (id)init;

@end

