//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

@class MGLMapView, NSMutableArray, NSMutableDictionary, NSTimer, UILabel;

@interface CDRunGroundManager : NSObject
{
    _Bool _canShowAnnotationAndPolygon;
    MGLMapView *_mapView;
    long long _showType;
    NSMutableDictionary *_hotMap;
    NSMutableArray *_hotSymbolAnnotationList;
    long long _choosedPopUserIndex;
    NSMutableDictionary *_groundMap;
    NSMutableArray *_groundPolygonList;
    NSMutableArray *_groundSymbolAnnotationList;
    NSMutableArray *_groundDetailAnnotationList;
    NSMutableDictionary *_trackMap;
    NSMutableArray *_trackList;
    NSMutableDictionary *_raceMap;
    NSMutableArray *_raceList;
    UILabel *_labelLoadingTitle;
    NSTimer *_changeTitleTimer;
}

+ (id)shareInstance;
@property(retain, nonatomic) NSTimer *changeTitleTimer; // @synthesize changeTitleTimer=_changeTitleTimer;
@property(retain, nonatomic) UILabel *labelLoadingTitle; // @synthesize labelLoadingTitle=_labelLoadingTitle;
@property(nonatomic) _Bool canShowAnnotationAndPolygon; // @synthesize canShowAnnotationAndPolygon=_canShowAnnotationAndPolygon;
@property(retain, nonatomic) NSMutableArray *raceList; // @synthesize raceList=_raceList;
@property(retain, nonatomic) NSMutableDictionary *raceMap; // @synthesize raceMap=_raceMap;
@property(retain, nonatomic) NSMutableArray *trackList; // @synthesize trackList=_trackList;
@property(retain, nonatomic) NSMutableDictionary *trackMap; // @synthesize trackMap=_trackMap;
@property(retain, nonatomic) NSMutableArray *groundDetailAnnotationList; // @synthesize groundDetailAnnotationList=_groundDetailAnnotationList;
@property(retain, nonatomic) NSMutableArray *groundSymbolAnnotationList; // @synthesize groundSymbolAnnotationList=_groundSymbolAnnotationList;
@property(retain, nonatomic) NSMutableArray *groundPolygonList; // @synthesize groundPolygonList=_groundPolygonList;
@property(retain, nonatomic) NSMutableDictionary *groundMap; // @synthesize groundMap=_groundMap;
@property(nonatomic) long long choosedPopUserIndex; // @synthesize choosedPopUserIndex=_choosedPopUserIndex;
@property(retain, nonatomic) NSMutableArray *hotSymbolAnnotationList; // @synthesize hotSymbolAnnotationList=_hotSymbolAnnotationList;
@property(retain, nonatomic) NSMutableDictionary *hotMap; // @synthesize hotMap=_hotMap;
@property(nonatomic) long long showType; // @synthesize showType=_showType;
@property(nonatomic) __weak MGLMapView *mapView; // @synthesize mapView=_mapView;
- (void).cxx_destruct;
- (void)pauseMapboxLocate;
- (void)resumeMapboxLocate;
- (struct CGPoint)convertCoordinateToPoint:(struct CLLocationCoordinate2D)arg1;
- (id)getRandomPointsInRegion:(id)arg1 centerPoint:(struct CGPoint)arg2 count:(long long)arg3;
- (_Bool)judgeCanLoadAnnounce;
- (id)getFirstDayOfNowWeek;
- (struct CLLocationCoordinate2D *)getCoordinatesFromPoints:(id)arg1;
- (struct MGLCoordinateBounds)getShowRegionForPoints:(id)arg1;
- (void)hideLoadingZoneView:(id)arg1;
- (void)changeLoadingTitle;
- (void)showLoadingZoneView:(id)arg1;
- (void)hideLoadingView:(id)arg1;
- (void)showLoadingView:(id)arg1 withText:(id)arg2;
- (void)showLoadingView:(id)arg1;
- (id)getUpdatedArrowArray;
- (void)hideHotAnnotations;
- (void)showHotAnnotations;
- (void)hideGroundAnnotations;
- (void)showGroundAnnotations;
- (void)hideGroundMGLPolygons;
- (void)showGroundMGLPolygons;
- (void)hideRaceAnnotation;
- (void)showRaceAnnotation;
- (void)hideTrackAnnotation;
- (void)showTrackAnnotation;
- (void)initRaceList:(id)arg1;
- (void)initTrackList:(id)arg1;
- (void)initHotList:(id)arg1;
- (void)initGroundList:(id)arg1;
- (id)getNearestGround;
- (_Bool)judgePointIn:(id)arg1 withPoint:(struct CGPoint)arg2;
- (double)getDistanceFromLocation:(id)arg1 toLocation:(id)arg2;
- (double)getDistanceFromMineToLocation:(id)arg1;
- (double)getScale;
- (void)hideNowAnnotationPolygon;
- (void)showNowAnnotationPolygon;
- (void)updateAnnotationAndPolygon:(_Bool)arg1 withType:(long long)arg2;
- (struct CLLocationCoordinate2D)getUserLocation;
- (void)bindMapView:(id)arg1;
- (void)updateHotTime;
- (_Bool)canLoadHot;
- (void)clearAll;
- (id)init;

@end

