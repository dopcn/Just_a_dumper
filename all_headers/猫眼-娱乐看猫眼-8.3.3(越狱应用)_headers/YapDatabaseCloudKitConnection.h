//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "YapDatabaseExtensionConnection.h"

@class NSMutableDictionary, NSMutableSet, YapCache, YapDatabaseCloudKit, YapDatabaseConnection;

@interface YapDatabaseCloudKitConnection : YapDatabaseExtensionConnection
{
    id sharedKeySetForInternalChangeset;
    YapDatabaseCloudKit *parent;
    YapDatabaseConnection *databaseConnection;
    YapCache *cleanMappingTableInfoCache;
    YapCache *cleanRecordTableInfoCache;
    NSMutableDictionary *dirtyMappingTableInfoDict;
    NSMutableDictionary *dirtyRecordTableInfoDict;
    YapCache *recordKeysCache;
    _Bool reset;
    _Bool isOperationCompletionTransaction;
    _Bool isOperationPartialCompletionTransaction;
    NSMutableDictionary *pendingAttachRequests;
    NSMutableSet *changeset_deletedRowids;
    NSMutableSet *changeset_deletedHashes;
    NSMutableDictionary *changeset_mappingTableInfo;
    NSMutableDictionary *changeset_recordTableInfo;
    struct sqlite3_stmt *mappingTable_insertStatement;
    struct sqlite3_stmt *mappingTable_updateForRowidStatement;
    struct sqlite3_stmt *mappingTable_getInfoForRowidStatement;
    struct sqlite3_stmt *mappingTable_enumerateForHashStatement;
    struct sqlite3_stmt *mappingTable_removeForRowidStatement;
    struct sqlite3_stmt *mappingTable_removeAllStatement;
    struct sqlite3_stmt *recordTable_insertStatement;
    struct sqlite3_stmt *recordTable_updateOwnerCountStatement;
    struct sqlite3_stmt *recordTable_updateMetadataStatement;
    struct sqlite3_stmt *recordTable_updateRecordStatement;
    struct sqlite3_stmt *recordTable_getInfoForHashStatement;
    struct sqlite3_stmt *recordTable_getOwnerCountForHashStatement;
    struct sqlite3_stmt *recordTable_getCountForHashStatement;
    struct sqlite3_stmt *recordTable_enumerateStatement;
    struct sqlite3_stmt *recordTable_removeForHashStatement;
    struct sqlite3_stmt *recordTable_removeAllStatement;
    struct sqlite3_stmt *queueTable_insertStatement;
    struct sqlite3_stmt *queueTable_updateDeletedRecordIDsStatement;
    struct sqlite3_stmt *queueTable_updateModifiedRecordsStatement;
    struct sqlite3_stmt *queueTable_updateBothStatement;
    struct sqlite3_stmt *queueTable_removeForUuidStatement;
    struct sqlite3_stmt *queueTable_removeAllStatement;
}

@property(readonly, nonatomic) YapDatabaseCloudKit *cloudKit; // @synthesize cloudKit=parent;
- (void).cxx_destruct;
- (struct sqlite3_stmt *)queueTable_removeAllStatement;
- (struct sqlite3_stmt *)queueTable_removeForUuidStatement;
- (struct sqlite3_stmt *)queueTable_updateModifiedRecordsStatement;
- (struct sqlite3_stmt *)queueTable_updateBothStatement;
- (struct sqlite3_stmt *)queueTable_updateDeletedRecordIDsStatement;
- (struct sqlite3_stmt *)queueTable_insertStatement;
- (struct sqlite3_stmt *)recordTable_removeAllStatement;
- (struct sqlite3_stmt *)recordTable_removeForHashStatement;
- (struct sqlite3_stmt *)recordTable_enumerateStatement;
- (struct sqlite3_stmt *)recordTable_getCountForHashStatement;
- (struct sqlite3_stmt *)recordTable_getOwnerCountForHashStatement;
- (struct sqlite3_stmt *)recordTable_getInfoForHashStatement;
- (struct sqlite3_stmt *)recordTable_updateRecordStatement;
- (struct sqlite3_stmt *)recordTable_updateMetadataStatement;
- (struct sqlite3_stmt *)recordTable_updateOwnerCountStatement;
- (struct sqlite3_stmt *)recordTable_insertStatement;
- (struct sqlite3_stmt *)mappingTable_removeAllStatement;
- (struct sqlite3_stmt *)mappingTable_removeForRowidStatement;
- (struct sqlite3_stmt *)mappingTable_enumerateForHashStatement;
- (struct sqlite3_stmt *)mappingTable_getInfoForRowidStatement;
- (struct sqlite3_stmt *)mappingTable_updateForRowidStatement;
- (struct sqlite3_stmt *)mappingTable_insertStatement;
- (void)prepareStatement:(struct sqlite3_stmt **)arg1 withString:(id)arg2 caller:(SEL)arg3;
- (void)processChangeset:(id)arg1;
- (void)getInternalChangeset:(id *)arg1 externalChangeset:(id *)arg2 hasDiskChanges:(_Bool *)arg3;
- (id)internalChangesetKeys;
- (void)postRollbackCleanup;
- (void)postCommitCleanup;
- (void)prepareForReadWriteTransaction;
- (id)newReadWriteTransaction:(id)arg1;
- (id)newReadTransaction:(id)arg1;
- (id)extension;
- (void)_flushMemoryWithFlags:(unsigned long long)arg1;
- (void)_flushStatements;
- (void)dealloc;
- (id)initWithParent:(id)arg1 databaseConnection:(id)arg2;

@end

