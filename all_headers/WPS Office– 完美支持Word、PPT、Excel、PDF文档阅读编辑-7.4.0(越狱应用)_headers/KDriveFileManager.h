//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "CloudDriveOperationDelegate-Protocol.h"
#import "KDriveDownloadFileDelegate-Protocol.h"
#import "KFileDownloadViewDelegate-Protocol.h"
#import "KFileListViewControllerDelegate-Protocol.h"
#import "KMessageAlertViewDelegate-Protocol.h"
#import "KUserChooseDialogViewDelegate-Protocol.h"
#import "MBProgressHUDDelegate-Protocol.h"
#import "NSFileManagerDelegate-Protocol.h"

@class CloudDriveOperation, NSArray, NSMutableArray, NSRecursiveLock, NSString, NSTimer, UIAlertView, UIViewController, ZipFile;
@protocol KDriveFileManagerDelegate, NSObject;

@interface KDriveFileManager : NSObject <KMessageAlertViewDelegate, MBProgressHUDDelegate, KFileListViewControllerDelegate, NSFileManagerDelegate, KUserChooseDialogViewDelegate, KFileDownloadViewDelegate, CloudDriveOperationDelegate, KDriveDownloadFileDelegate>
{
    NSMutableArray *_fileListArray;
    NSString *_root;
    NSString *_curPath;
    _Bool _bRoot;
    _Bool _bUpdateOperation;
    unsigned long long _selectedRow;
    NSString *_userInfoString;
    _Bool _bWait;
    _Bool _bCover;
    int _chooseUpdateType;
    long long _uploadSuccessFilesCount;
    long long _uploadSuccessFilesSize;
    NSMutableArray *_needUploadFilesArray;
    NSMutableArray *_notNeedUploadFilesArray;
    NSMutableArray *_uploadFilesFailedArray;
    NSString *_currentCloudDriveName;
    CloudDriveOperation *_cloudOperation;
    _Bool _isOpenDownloadFile;
    _Bool _isOnlyFolder;
    _Bool _bLoadDownloadFile;
    _Bool _abortUnzip;
    _Bool _locked;
    int _sortType;
    int _sortKind;
    id <KDriveFileManagerDelegate> _delegate;
    id <KDriveFileManagerDelegate> _downloadViewDelegate;
    NSMutableArray *_bypassedListArray;
    NSString *_loadingCloudPath;
    NSArray *_filters;
    CDUnknownBlockType _sortComparator;
    UIViewController *_rootViewController;
    id _currentDownloadFile;
    NSString *_currentDownloadPath;
    id <NSObject> _lastDeleteFile;
    long long _lastDeleteFileRow;
    id _currentDir;
    CDUnknownBlockType _shareBlock;
    CDUnknownBlockType _loadBlock;
    NSString *_zipFileName;
    NSString *_zipPassword;
    ZipFile *_zipFile;
    UIAlertView *_progressAlertView;
    double _unzipFileCount;
    double _currentUnzipPercent;
    NSString *_currentUnzipFileName;
    NSTimer *_unzipProgressTimer;
    NSRecursiveLock *_locker;
    CloudDriveOperation *_refreshOpr;
}

+ (_Bool)isFileName:(id)arg1 inExternFilters:(id)arg2;
+ (long long)compareFile:(id)arg1 withFile:(id)arg2 sortType:(int)arg3 sortKind:(int)arg4;
+ (_Bool)checkFileName:(id)arg1 withFilter:(id)arg2;
+ (id)originalFolderForLocalizedName:(id)arg1;
+ (id)filterLocalizedFolderName:(id)arg1;
+ (_Bool)isSystemFolder:(id)arg1;
+ (void)setIsDownloadingFile:(_Bool)arg1;
+ (_Bool)isDownloadingFile;
+ (_Bool)deleteDataBaseFileInfoByPath:(id)arg1;
+ (_Bool)isEnableWIFI;
+ (_Bool)isEnableNetwork;
@property(retain, nonatomic) CloudDriveOperation *refreshOpr; // @synthesize refreshOpr=_refreshOpr;
@property(nonatomic) _Bool locked; // @synthesize locked=_locked;
@property(retain, nonatomic) NSRecursiveLock *locker; // @synthesize locker=_locker;
@property(retain, nonatomic) NSTimer *unzipProgressTimer; // @synthesize unzipProgressTimer=_unzipProgressTimer;
@property(retain, nonatomic) NSString *currentUnzipFileName; // @synthesize currentUnzipFileName=_currentUnzipFileName;
@property(nonatomic) double currentUnzipPercent; // @synthesize currentUnzipPercent=_currentUnzipPercent;
@property(nonatomic) double unzipFileCount; // @synthesize unzipFileCount=_unzipFileCount;
@property(retain, nonatomic) UIAlertView *progressAlertView; // @synthesize progressAlertView=_progressAlertView;
@property(nonatomic) _Bool abortUnzip; // @synthesize abortUnzip=_abortUnzip;
@property(retain, nonatomic) ZipFile *zipFile; // @synthesize zipFile=_zipFile;
@property(copy, nonatomic) NSString *zipPassword; // @synthesize zipPassword=_zipPassword;
@property(copy, nonatomic) NSString *zipFileName; // @synthesize zipFileName=_zipFileName;
@property(copy, nonatomic) CDUnknownBlockType loadBlock; // @synthesize loadBlock=_loadBlock;
@property(copy, nonatomic) CDUnknownBlockType shareBlock; // @synthesize shareBlock=_shareBlock;
@property(retain, nonatomic) id currentDir; // @synthesize currentDir=_currentDir;
@property(nonatomic) long long lastDeleteFileRow; // @synthesize lastDeleteFileRow=_lastDeleteFileRow;
@property(retain, nonatomic) id <NSObject> lastDeleteFile; // @synthesize lastDeleteFile=_lastDeleteFile;
@property(retain, nonatomic) NSString *currentDownloadPath; // @synthesize currentDownloadPath=_currentDownloadPath;
@property(retain, nonatomic) id currentDownloadFile; // @synthesize currentDownloadFile=_currentDownloadFile;
@property(nonatomic) UIViewController *rootViewController; // @synthesize rootViewController=_rootViewController;
@property(nonatomic) int sortKind; // @synthesize sortKind=_sortKind;
@property(nonatomic) int sortType; // @synthesize sortType=_sortType;
@property(copy, nonatomic) CDUnknownBlockType sortComparator; // @synthesize sortComparator=_sortComparator;
@property(retain, nonatomic) NSArray *filters; // @synthesize filters=_filters;
@property(retain, nonatomic) NSString *loadingCloudPath; // @synthesize loadingCloudPath=_loadingCloudPath;
@property(nonatomic) _Bool bLoadDownloadFile; // @synthesize bLoadDownloadFile=_bLoadDownloadFile;
@property(nonatomic) int chooseUpdateType; // @synthesize chooseUpdateType=_chooseUpdateType;
@property(retain, nonatomic) NSMutableArray *bypassedListArray; // @synthesize bypassedListArray=_bypassedListArray;
@property(nonatomic) _Bool isOnlyFolder; // @synthesize isOnlyFolder=_isOnlyFolder;
@property(nonatomic) _Bool isOpenDownloadFile; // @synthesize isOpenDownloadFile=_isOpenDownloadFile;
@property(retain, nonatomic) NSString *currentCloudDriveName; // @synthesize currentCloudDriveName=_currentCloudDriveName;
@property(nonatomic) long long uploadSuccessFilesSize; // @synthesize uploadSuccessFilesSize=_uploadSuccessFilesSize;
@property(nonatomic) long long uploadSuccessFilesCount; // @synthesize uploadSuccessFilesCount=_uploadSuccessFilesCount;
@property(retain, nonatomic) CloudDriveOperation *cloudOperation; // @synthesize cloudOperation=_cloudOperation;
@property(retain, nonatomic) NSMutableArray *uploadFilesFailedArray; // @synthesize uploadFilesFailedArray=_uploadFilesFailedArray;
@property(retain, nonatomic) NSMutableArray *notNeedUploadFilesArray; // @synthesize notNeedUploadFilesArray=_notNeedUploadFilesArray;
@property(retain, nonatomic) NSMutableArray *needUploadFilesArray; // @synthesize needUploadFilesArray=_needUploadFilesArray;
@property(nonatomic) _Bool bCover; // @synthesize bCover=_bCover;
@property(nonatomic) _Bool bWait; // @synthesize bWait=_bWait;
@property(retain, nonatomic) NSString *userInfoString; // @synthesize userInfoString=_userInfoString;
@property(nonatomic) _Bool bRoot; // @synthesize bRoot=_bRoot;
@property(nonatomic) unsigned long long selectedRow; // @synthesize selectedRow=_selectedRow;
@property(retain, nonatomic) NSString *curPath; // @synthesize curPath=_curPath;
@property(retain, nonatomic) NSString *root; // @synthesize root=_root;
@property(retain, nonatomic) NSMutableArray *fileListArray; // @synthesize fileListArray=_fileListArray;
@property(nonatomic) __weak id <KDriveFileManagerDelegate> downloadViewDelegate; // @synthesize downloadViewDelegate=_downloadViewDelegate;
@property(nonatomic) __weak id <KDriveFileManagerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)insertDatabaseWithFile:(id)arg1 parent:(id)arg2;
- (void)checkUpdatedFileInfo:(id)arg1;
- (void)refreshFileWithPath:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)insertFileIntoDatabase:(id)arg1 parent:(id)arg2;
- (void)checkFileStatus:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)cancelLastDelete;
- (void)confirmLastDelete;
- (void)deleteFileAtRow:(long long)arg1;
- (void)cloudDriveOperation:(id)arg1 uploadFile:(id)arg2 progress:(float)arg3;
- (void)cloudDriveOperation:(id)arg1 cancelUploadFile:(id)arg2;
- (void)cloudDriveOperation:(id)arg1 endUploadFile:(id)arg2 result:(int)arg3;
- (void)cloudDriveOperation:(id)arg1 beginUploadFile:(id)arg2;
- (void)doCancelDownload;
- (_Bool)isNeedUpdateWithFullPath:(id)arg1;
- (id)getDriveTableWithDriveName:(id)arg1;
- (void)callDelegateDidUploadFilesWithSuccessCount:(long long)arg1 allFilesSize:(long long)arg2;
- (id)parserFileInfoFromDBTableRecords:(id)arg1;
- (id)getUploadFilesFailed;
- (id)getNotNeedUploadFiles;
- (id)getNeedUploadFiles;
- (long long)getNeedUpdateFilesFromDBTable:(id)arg1;
- (void)updateDownloadFilesFromDBTable:(id)arg1;
- (id)getAbsoluteDrivePathWithDriveName:(id)arg1;
- (id)getLocalDriveCompletePath:(id)arg1;
- (void)endUploadFile;
- (void)uploadFile:(id)arg1;
- (void)beginUploadFiles:(id)arg1;
- (_Bool)createFolder:(id)arg1 error:(id *)arg2;
- (id)messageForOperationCode:(int)arg1;
- (_Bool)renameSelectedRow:(long long)arg1 filename:(id)arg2 error:(id *)arg3;
- (void)moveSelectedRows:(id)arg1 toPath:(id)arg2;
- (void)copySelectedRows:(id)arg1 toPath:(id)arg2;
- (void)deleteSelectedRows:(id)arg1;
- (void)refreshTableDataSource;
- (void)openFileSelected:(unsigned long long)arg1;
- (void)logoutAccount;
- (id)getFilesWithPath:(id)arg1;
- (id)getCurrentPath;
- (id)getFileAtIndex:(long long)arg1;
- (unsigned long long)getFilesCount;
- (void)endLoading;
- (void)startLoading;
- (_Bool)isFileDownloaded:(id)arg1;
- (void)setCellProperty:(id)arg1 withRow:(unsigned long long)arg2;
- (void)userChooseDialogView:(id)arg1 buttonIndex:(long long)arg2;
- (void)createShareLinkForRow:(long long)arg1 completion:(CDUnknownBlockType)arg2;
- (int)isLatestFileInDatabase:(id)arg1;
- (id)localFilePath:(id)arg1;
- (id)getFileInfo:(id)arg1;
- (id)identifierForFile:(id)arg1;
- (id)cloudInfoForPath:(id)arg1;
- (id)cachePathWithName:(id)arg1;
- (_Bool)isNeedUpdateFile;
- (void)alterDBManager:(id)arg1 srcTablename:(id)arg2 dstTablename:(id)arg3;
- (void)alterDBManager:(id)arg1 originalTableName:(id)arg2 destTableName:(id)arg3;
- (void)moveSubPathsFileManager:(id)arg1 srcPath:(id)arg2 dstPath:(id)arg3;
- (void)moveDriveFiles:(id)arg1 fromPath:(id)arg2 toPath:(id)arg3;
- (void)copyDriveFiles:(id)arg1 fromPath:(id)arg2 toPath:(id)arg3;
- (void)deleteDriveFiles:(id)arg1;
- (void)deleteAllDownloadedFiles;
- (void)deleteDownloadedFile:(id)arg1;
- (id)_dbTableName;
- (_Bool)onlyChooseFolder;
- (void)reloadFilters;
- (void)handleFileList:(id)arg1 comparator:(CDUnknownBlockType)arg2;
- (_Bool)isFolder:(id)arg1;
- (id)fileListCategorySort:(id)arg1 comparator:(CDUnknownBlockType)arg2;
- (void)showAlertMessage:(id)arg1 code:(long long)arg2;
- (long long)getSelectedRow;
- (void)reloginToGetAuthorizeToken;
- (id)getCurrentLocalSavePath;
- (id)getLocalSavePath;
- (id)getLocalSavePathForCloudDrive:(id)arg1;
- (void)updateDriveDataWithPath:(id)arg1;
- (void)backToPreDiretory;
- (void)sortFileArray:(id)arg1;
- (void)cancelAllRequest;
- (void)clearAllUserData:(id)arg1;
- (id)filterFormatForFileNameArray:(id)arg1;
- (id)getLocalFileListWithPath:(id)arg1;
- (void)sortResultWithType:(int)arg1 kind:(int)arg2;
- (CDUnknownBlockType)getSortComparator;
- (void)loadFileListFromLocalPath:(id)arg1;
- (void)loadFileListWithPath:(id)arg1 onlyFolder:(_Bool)arg2 hidden:(id)arg3;
- (void)loadFileListWithPath:(id)arg1;
- (void)loadFileListWithRoot;
- (void)doNotificationTableViewReload;
- (void)finishedDownload:(id)arg1;
- (void)cancelDownload;
- (void)download:(id)arg1 curPath:(id)arg2;
- (void)download:(id)arg1;
- (void)downloadFile:(id)arg1;
- (void)loadFileInfoFromCloud:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)deleteFile:(id)arg1;
- (void)openFile:(id)arg1;
- (void)refreshDataAndReloadView:(id)arg1;
- (void)openFileWithFullPath:(id)arg1 readOnly:(_Bool)arg2;
- (void)openFileWithFullPath:(id)arg1;
- (id)getDriveLocalPathWithFullPath:(id)arg1;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

