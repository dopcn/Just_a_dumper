//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "NewPlayingListBaseVC.h"

#import "QMLiveShowPlayingSongCellDelegate-Protocol.h"

@class NSMutableSet, NSString, QMLiveRoom, SongInfo, TTFadeSwitch, UIButton, UIImageView, UILabel;
@protocol NewPlayingListLiveShowVCDelegate;

@interface NewPlayingListLiveShowVC : NewPlayingListBaseVC <QMLiveShowPlayingSongCellDelegate>
{
    long long _streamType;
    id <NewPlayingListLiveShowVCDelegate> _playingListLiveShowVCDelegate;
    QMLiveRoom *_liveRoom;
    long long _ownerType;
    TTFadeSwitch *_lyricSwitch;
    NSMutableSet *_lovedSongsSet;
    SongInfo *_selectedSong;
    UIButton *_managerSongButton;
    UIButton *_addSongButton;
    UIButton *_pauseOrPlayButton;
    UIButton *_playNextButton;
    UILabel *_songNumLabel;
    UIImageView *_lyricDisabelImageView;
    UIButton *_placeHoldButton;
}

@property(retain, nonatomic) UIButton *placeHoldButton; // @synthesize placeHoldButton=_placeHoldButton;
@property(retain, nonatomic) UIImageView *lyricDisabelImageView; // @synthesize lyricDisabelImageView=_lyricDisabelImageView;
@property(retain, nonatomic) UILabel *songNumLabel; // @synthesize songNumLabel=_songNumLabel;
@property(retain, nonatomic) UIButton *playNextButton; // @synthesize playNextButton=_playNextButton;
@property(retain, nonatomic) UIButton *pauseOrPlayButton; // @synthesize pauseOrPlayButton=_pauseOrPlayButton;
@property(retain, nonatomic) UIButton *addSongButton; // @synthesize addSongButton=_addSongButton;
@property(retain, nonatomic) UIButton *managerSongButton; // @synthesize managerSongButton=_managerSongButton;
@property(retain, nonatomic) SongInfo *selectedSong; // @synthesize selectedSong=_selectedSong;
@property(retain, nonatomic) NSMutableSet *lovedSongsSet; // @synthesize lovedSongsSet=_lovedSongsSet;
@property(retain, nonatomic) TTFadeSwitch *lyricSwitch; // @synthesize lyricSwitch=_lyricSwitch;
@property(nonatomic) long long ownerType; // @synthesize ownerType=_ownerType;
@property(retain, nonatomic) QMLiveRoom *liveRoom; // @synthesize liveRoom=_liveRoom;
@property(nonatomic) __weak id <NewPlayingListLiveShowVCDelegate> playingListLiveShowVCDelegate; // @synthesize playingListLiveShowVCDelegate=_playingListLiveShowVCDelegate;
@property(nonatomic) long long streamType; // @synthesize streamType=_streamType;
- (void).cxx_destruct;
- (void)clickLoveButtonWithSong:(id)arg1;
- (void)deleteSongFromLiveShowPlayList:(id)arg1;
- (int)assetsTypeForObject:(struct ObjectWithExpInfo *)arg1;
- (id)getObjectWithExpInfoAtIndexPathes:(id)arg1;
- (void)scrollToCurrentPlayingSong;
- (void)refreshPlaylistStatus;
- (void)_showMessageWhileDone:(id)arg1;
- (id)_formatAddSongsToFolderMsgWithErrorCollectType:(int)arg1 collectInfo:(id)arg2 folderId:(int)arg3 iconType:(long long *)arg4;
- (void)reportLoveSong:(id)arg1;
- (void)_onCollectSuccess:(id)arg1;
- (void)onNotifyCollectEdit:(id)arg1;
- (void)addSongsToCollect:(id)arg1;
- (void)deleteLoveSong;
- (void)addOrDeleteLoveSong;
- (void)addLoveSongToMyList:(_Bool)arg1;
- (_Bool)isLovedSong:(id)arg1;
- (void)buildLovedData;
- (id)getSongIdentifier:(id)arg1;
- (void)delayHiddenPlayingList;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (void)managerSongButtonClicked:(id)arg1;
- (void)addSongButtonClicked:(id)arg1;
- (void)playNextClicked:(id)arg1;
- (void)playOrPauseButtonClicked:(id)arg1;
- (void)refreshPlayButtonImagebyPlaying:(_Bool)arg1;
- (id)allSongs;
- (void)fetchAllSongs;
- (void)onPlaySongStatusNotify:(id)arg1;
- (void)onSongDownloadFailedErr:(id)arg1;
- (void)buildHeadView;
- (void)handleControlView;
- (void)buildPlaceHoldButton;
- (void)buildLyricSwitch;
- (_Bool)isHeaderViewExist;
- (void)buildView;
- (void)didReceiveMemoryWarning;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

