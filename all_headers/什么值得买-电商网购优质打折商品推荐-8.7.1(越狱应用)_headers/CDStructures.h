//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

@class GPBMessage, NSData, NSOutputStream, NSString, TAGPBArray, TAGPBGeneratedMessage;

#pragma mark Function Pointers and Blocks

typedef void (*CDUnknownFunctionPointerType)(void); // return type and parameters are unknown

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct AQPlayer {
    struct OpaqueAudioQueue *_field1;
    struct AudioQueueBuffer *_field2[3];
    struct OpaqueAudioFileID *_field3;
    struct __CFString *_field4;
    struct CAStreamBasicDescription _field5;
    unsigned char _field6;
    unsigned int _field7;
    long long _field8;
    unsigned int _field9;
    unsigned char _field10;
    unsigned char _field11;
    unsigned char _field12;
};

struct AQRecorder {
    unsigned long long _field1;
    _Bool _field2;
    struct OpaqueAudioQueue *_field3;
    struct AudioQueueBuffer *_field4[3];
    struct OpaqueAudioFileID *_field5;
    long long _field6;
    struct CAStreamBasicDescription _field7;
    struct CAStreamBasicDescription _field8;
    unsigned char _field9;
    struct SpeechEnhancer<YSF_NIM::NoiseEstimater_MMSE, YSF_NIM::SpectrumRestorer_MMSE> *_field10;
    struct AudioEncoder *_field11;
    id _field12;
    struct __sFILE *_field13;
    int _field14;
};

struct AVMessage {
    int what;
    int arg1;
    int arg2;
    struct AVMessage *next;
};

struct AppInfo {
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field1;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field2;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field3;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field4;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field5;
    struct map<std::basic_string<char>, std::basic_string<char>, std::less<std::basic_string<char>>, std::allocator<std::pair<const std::basic_string<char>, std::basic_string<char>>>> _field6;
};

struct AppSession {
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field1;
    vector_9cd42a6f _field2;
};

struct Attachment {
    char _field1;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field2;
    struct vector<char, std::allocator<char>> _field3;
};

struct AudioEncoder;

struct AudioQueueBuffer;

struct AudioStreamBasicDescription {
    double mSampleRate;
    unsigned int mFormatID;
    unsigned int mFormatFlags;
    unsigned int mBytesPerPacket;
    unsigned int mFramesPerPacket;
    unsigned int mBytesPerFrame;
    unsigned int mChannelsPerFrame;
    unsigned int mBitsPerChannel;
    unsigned int mReserved;
};

struct CAStreamBasicDescription {
    double _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned int _field6;
    unsigned int _field7;
    unsigned int _field8;
    unsigned int _field9;
};

struct CBTeamParam {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    int _field3;
    int _field4;
    struct any _field5;
};

struct CGAffineTransform {
    double a;
    double b;
    double c;
    double d;
    double tx;
    double ty;
};

struct CGPoint {
    double x;
    double y;
};

struct CGRect {
    struct CGPoint origin;
    struct CGSize size;
};

struct CGSize {
    double width;
    double height;
};

struct CGVector {
    double dx;
    double dy;
};

struct CH264Encoder;

struct CLLocationCoordinate2D {
    double latitude;
    double longitude;
};

struct CNetworkEvent {
    CDUnknownFunctionPointerType *_field1;
    basic_string_a490aa4c _field2;
    struct CQQUin _field3;
    basic_string_a490aa4c _field4;
};

struct CNetworkRequestSO {
    CDUnknownFunctionPointerType *_field1;
    struct CNetworkEvent _field2;
    int _field3;
    int _field4;
    int _field5;
    int _field6;
    int _field7;
    _Bool _field8;
    char _field9;
    char _field10;
    char _field11;
    char _field12;
    basic_string_a490aa4c _field13;
    int _field14;
    int _field15;
    _Bool _field16;
    int _field17;
    long long _field18;
    long long _field19;
    _Bool _field20;
};

struct CNetworkResponseSO {
    CDUnknownFunctionPointerType *_field1;
    struct CNetworkEvent _field2;
    int _field3;
    int _field4;
    basic_string_a490aa4c _field5;
};

struct CQQUin {
    CDUnknownFunctionPointerType *_field1;
    char _field2;
    basic_string_a490aa4c _field3;
};

struct CTXH264EncThread {
    CDUnknownFunctionPointerType *_field1;
    struct TXMutex _field2;
    struct _opaque_pthread_t *_field3;
    basic_string_a490aa4c _field4;
    _Bool _field5;
    _Bool _field6;
    struct queue<TXMessageThread<CTXH264EncThread>::TXMsgTask, std::__1::deque<TXMessageThread<CTXH264EncThread>::TXMsgTask, std::__1::allocator<TXMessageThread<CTXH264EncThread>::TXMsgTask>>> _field7;
    struct list<TXMessageThread<CTXH264EncThread>::TXMsgTask, std::__1::allocator<TXMessageThread<CTXH264EncThread>::TXMsgTask>> _field8;
    struct queue<tag_encode_data *, std::__1::deque<tag_encode_data *, std::__1::allocator<tag_encode_data *>>> _field9;
    int _field10;
    int _field11;
    int _field12;
    int _field13;
    int _field14;
    int _field15;
    int _field16;
    _Bool _field17;
    int _field18;
    basic_string_a490aa4c _field19;
    struct IRTMPVideoEncoderNotify *_field20;
    _Bool _field21;
    int _field22;
    unsigned long long _field23;
    unsigned long long _field24;
    int _field25;
    int _field26;
    struct CH264Encoder *_field27;
};

struct CVoicePlayer {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    _Bool _field3;
    _Bool _field4;
    unsigned int _field5;
    unsigned int _field6;
    unsigned int _field7;
    unsigned int _field8;
    unsigned int _field9;
    unsigned int _field10;
    struct OpaqueAudioQueue *_field11;
    struct AudioQueueBuffer **_field12;
    struct _opaque_pthread_mutex_t _field13;
    id _field14;
    struct list<CVoicePlayer::tagAudioData, std::__1::allocator<CVoicePlayer::tagAudioData>> _field15;
    id _field16;
    id _field17;
    basic_string_a490aa4c _field18;
    _Bool _field19;
};

struct CustomElem {
    basic_string_a490aa4c _field1;
    basic_string_a490aa4c _field2;
    basic_string_a490aa4c _field3;
    basic_string_a490aa4c _field4;
};

struct Draft {
    struct vector<imcore::Elem, std::__1::allocator<imcore::Elem>> elems;
    basic_string_a490aa4c user_define;
    unsigned long long uint64_edit_time;
};

struct Elem {
    basic_string_a490aa4c _field1;
    int _field2;
    struct TextElem _field3;
    struct ImageElem _field4;
    struct SoundElem _field5;
    struct CustomElem _field6;
    struct FileElem _field7;
    struct GroupTipsElem _field8;
    struct FaceElem _field9;
    struct LocationElem _field10;
    struct GroupReportElem _field11;
    struct ProfileChangeElem _field12;
    struct FriendChangeElem _field13;
    struct VideoElem _field14;
    basic_string_a490aa4c _field15;
};

struct ExceptionUpload {
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field1;
    long long _field2;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field3;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field4;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field5;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field6;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field7;
    struct map<std::basic_string<char>, std::basic_string<char>, std::less<std::basic_string<char>>, std::allocator<std::pair<const std::basic_string<char>, std::basic_string<char>>>> _field8;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field9;
    struct AppSession _field10;
    int _field11;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field12;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field13;
    struct AppInfo _field14;
    struct vector<rqd::AppInfo, std::allocator<rqd::AppInfo>> _field15;
    struct vector<rqd::AppInfo, std::allocator<rqd::AppInfo>> _field16;
    struct vector<rqd::Attachment, std::allocator<rqd::Attachment>> _field17;
    struct map<std::basic_string<char>, std::basic_string<char>, std::less<std::basic_string<char>>, std::allocator<std::pair<const std::basic_string<char>, std::basic_string<char>>>> _field18;
    struct map<std::basic_string<char>, std::basic_string<char>, std::less<std::basic_string<char>>, std::allocator<std::pair<const std::basic_string<char>, std::basic_string<char>>>> _field19;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field20;
    _Bool _field21;
};

struct ExceptionUploadPackage {
    struct vector<rqd::ExceptionUpload, std::allocator<rqd::ExceptionUpload>> _field1;
};

struct FIRReachabilityApi {
    CDUnknownFunctionPointerType _field1;
    CDUnknownFunctionPointerType _field2;
    CDUnknownFunctionPointerType _field3;
    CDUnknownFunctionPointerType _field4;
    CDUnknownFunctionPointerType _field5;
};

struct FaceElem {
    int _field1;
    basic_string_a490aa4c _field2;
};

struct FileElem {
    basic_string_a490aa4c _field1;
    basic_string_a490aa4c _field2;
    long long _field3;
    int _field4;
    basic_string_a490aa4c _field5;
    int _field6;
    int _field7;
    struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> _field8;
};

struct FriendChangeElem {
    unsigned int _field1;
    struct vector<imcore::FriendChangeUserInfo, std::__1::allocator<imcore::FriendChangeUserInfo>> _field2;
    unsigned long long _field3;
    unsigned long long _field4;
    unsigned long long _field5;
};

struct FriendChangeUserInfo;

struct FriendProfile {
    basic_string_a490aa4c _field1;
    basic_string_a490aa4c _field2;
    basic_string_a490aa4c _field3;
    basic_string_a490aa4c _field4;
    struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> _field5;
    basic_string_a490aa4c _field6;
    basic_string_a490aa4c _field7;
    unsigned int _field8;
    unsigned int _field9;
    int _field10;
    struct map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char>>>> _field11;
    unsigned long long _field12;
    unsigned long long _field13;
    basic_string_a490aa4c _field14;
    basic_string_a490aa4c _field15;
    basic_string_a490aa4c _field16;
    basic_string_a490aa4c _field17;
    unsigned long long _field18;
};

struct GADAdSize {
    struct CGSize size;
    unsigned long long flags;
};

struct GAIReachabilityApi {
    CDUnknownFunctionPointerType _field1;
    CDUnknownFunctionPointerType _field2;
    CDUnknownFunctionPointerType _field3;
    CDUnknownFunctionPointerType _field4;
    CDUnknownFunctionPointerType _field5;
};

struct GPBCodedInputStreamState {
    char *bytes;
    unsigned long long bufferSize;
    unsigned long long bufferPos;
    unsigned long long currentLimit;
    int lastTag;
    unsigned long long recursionDepth;
};

struct GPBExtensionDescription {
    CDUnion_88782d86 _field1;
    char *_field2;
    char *_field3;
    char *_field4;
    CDUnknownFunctionPointerType _field5;
    int _field6;
    unsigned char _field7;
    unsigned char _field8;
};

struct GPBExtensionRange {
    unsigned int _field1;
    unsigned int _field2;
};

struct GPBMessageFieldDescription {
    char *_field1;
    union {
        char *_field1;
        CDUnknownFunctionPointerType _field2;
        CDUnknownFunctionPointerType _field3;
    } _field2;
    unsigned int _field3;
    int _field4;
    unsigned int _field5;
    unsigned short _field6;
    unsigned char _field7;
};

struct GPBMessage_Storage {
    unsigned int _field1[0];
};

struct GPBOutputBufferState {
    char *bytes;
    unsigned long long size;
    unsigned long long position;
    NSOutputStream *output;
};

struct GroupCacheInfo {
    struct GroupDetailInfo _field1;
    struct GroupSelfInfo _field2;
};

struct GroupDetailInfo {
    basic_string_a490aa4c _field1;
    basic_string_a490aa4c _field2;
    basic_string_a490aa4c _field3;
    basic_string_a490aa4c _field4;
    basic_string_a490aa4c _field5;
    basic_string_a490aa4c _field6;
    basic_string_a490aa4c _field7;
    unsigned long long _field8;
    unsigned int _field9;
    unsigned int _field10;
    unsigned int _field11;
    unsigned int _field12;
    unsigned int _field13;
    unsigned int _field14;
    unsigned int _field15;
    unsigned int _field16;
    unsigned int _field17;
    unsigned int _field18;
    int _field19;
    int _field20;
    struct Msg _field21;
    struct map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char>>>> _field22;
};

struct GroupReportElem {
    unsigned int _field1;
    basic_string_a490aa4c _field2;
    basic_string_a490aa4c _field3;
    basic_string_a490aa4c _field4;
    unsigned long long _field5;
    basic_string_a490aa4c _field6;
    basic_string_a490aa4c _field7;
    basic_string_a490aa4c _field8;
    struct FriendProfile _field9;
    struct GroupTipsMemberInfo _field10;
    basic_string_a490aa4c _field11;
};

struct GroupSelfInfo {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
};

struct GroupTipsElem {
    int _field1;
    basic_string_a490aa4c _field2;
    basic_string_a490aa4c _field3;
    basic_string_a490aa4c _field4;
    unsigned int _field5;
    struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> _field6;
    struct vector<imcore::GroupTipsElem_GroupInfo, std::__1::allocator<imcore::GroupTipsElem_GroupInfo>> _field7;
    struct vector<imcore::GroupTipsElem_MemberInfo, std::__1::allocator<imcore::GroupTipsElem_MemberInfo>> _field8;
    struct FriendProfile _field9;
    struct GroupTipsMemberInfo _field10;
    struct map<std::__1::basic_string<char>, imcore::FriendProfile, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, imcore::FriendProfile>>> _field11;
    struct map<std::__1::basic_string<char>, imcore::GroupTipsMemberInfo, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, imcore::GroupTipsMemberInfo>>> _field12;
    unsigned int _field13;
    basic_string_a490aa4c _field14;
};

struct GroupTipsElem_GroupInfo;

struct GroupTipsElem_MemberInfo;

struct GroupTipsMemberInfo {
    basic_string_a490aa4c _field1;
    int _field2;
    int _field3;
    basic_string_a490aa4c _field4;
    struct map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char>>>> _field5;
};

struct HRColorPickerStyle {
    float _field1;
    float _field2;
    float _field3;
    int _field4;
    int _field5;
    float _field6;
    float _field7;
};

struct IMSFDataDelegate {
    CDUnknownFunctionPointerType *_field1;
};

struct IMSFHttpSysEngineImplEvent {
    CDUnknownFunctionPointerType *_field1;
};

struct IMSFNetEnvEvent {
    CDUnknownFunctionPointerType *_field1;
};

struct IMSFTcpEngineEvent {
    CDUnknownFunctionPointerType *_field1;
};

struct IRTMPVideoEncoderNotify;

struct ImageElem {
    basic_string_a490aa4c _field1;
    int _field2;
    int _field3;
    int _field4;
    int _field5;
    int _field6;
    int _field7;
    int _field8;
    int _field9;
    int _field10;
    basic_string_a490aa4c _field11;
    basic_string_a490aa4c _field12;
    basic_string_a490aa4c _field13;
    int _field14;
    int _field15;
    int _field16;
};

struct JceInputStream<analyticstaf::BufferReader> {
    char *_field1;
    unsigned long long _field2;
    unsigned long long _field3;
};

struct JceOutputStream<analyticstaf::BufferWriter> {
    char *_field1;
    unsigned long long _field2;
    unsigned long long _field3;
};

struct LocationElem {
    basic_string_a490aa4c _field1;
    double _field2;
    double _field3;
};

struct MicCaptureAudioMixNotify {
    CDUnknownFunctionPointerType *_field1;
    struct TXAECAudioPlayer _field2;
    CDUnknownBlockType _field3;
    CDUnknownBlockType _field4;
    CDUnknownBlockType _field5;
    CDUnknownBlockType _field6;
};

struct MixPkg {
    struct map<int, std::vector<char, std::allocator<char>>, std::less<int>, std::allocator<std::pair<const int, std::vector<char, std::allocator<char>>>>> _field1;
};

struct Msg {
    struct shared_ptr<imcore::MsgNode> msg_;
};

struct MsgNode;

struct NSMutableArray {
    Class _field1;
};

struct NSMutableDictionary {
    Class _field1;
};

struct NSString {
    Class _field1;
};

struct OpaqueAudioFileID;

struct OpaqueAudioQueue;

struct ProfileChangeElem {
    unsigned int _field1;
    basic_string_a490aa4c _field2;
    basic_string_a490aa4c _field3;
};

struct Property {
    CDUnknownFunctionPointerType *_field1;
    struct map<unsigned int, std::basic_string<char>, std::less<unsigned int>, std::allocator<std::pair<const unsigned int, std::basic_string<char>>>> _field2;
};

struct RequestPkg {
    int _field1;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field2;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field3;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field4;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field5;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field6;
    int _field7;
    struct vector<char, std::allocator<char>> _field8;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field9;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field10;
    struct map<std::basic_string<char>, std::basic_string<char>, std::less<std::basic_string<char>>, std::allocator<std::pair<const std::basic_string<char>, std::basic_string<char>>>> _field11;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field12;
    long long _field13;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field14;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field15;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field16;
    long long _field17;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field18;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field19;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field20;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field21;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field22;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field23;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field24;
};

struct ResponsePkg {
    char _field1;
    int _field2;
    struct vector<char, std::allocator<char>> _field3;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field4;
    long long _field5;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field6;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field7;
};

struct SDL_AudioSpec {
    int freq;
    unsigned short format;
    unsigned char channels;
    unsigned char silence;
    unsigned short samples;
    unsigned short padding;
    unsigned int size;
    CDUnknownFunctionPointerType callback;
    void *userdata;
};

struct Session {
    struct shared_ptr<imcore::SessionNode> _field1;
};

struct SessionNode;

struct SidewayHttpNetworkModule {
    void *_field1[100];
    id _field2;
    _Bool _field3;
    struct {
        int _field1;
        int _field2;
        int _field3;
        int _field4;
        int _field5;
    } _field4;
    int _field5;
    int _field6;
    long long _field7;
    _Bool _field8;
    struct set<std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::basic_string<char>>> _field9;
};

struct SoundElem {
    basic_string_a490aa4c _field1;
    int _field2;
    int _field3;
    int _field4;
    basic_string_a490aa4c _field5;
    int _field6;
    int _field7;
    struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> _field8;
};

struct SpeechEnhancer<YSF_NIM::NoiseEstimater_MMSE, YSF_NIM::SpectrumRestorer_MMSE>;

struct SummaryInfo {
    long long _field1;
    char _field2;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field3;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field4;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field5;
    struct map<std::basic_string<char>, std::basic_string<char>, std::less<std::basic_string<char>>, std::allocator<std::pair<const std::basic_string<char>, std::basic_string<char>>>> _field6;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field7;
    _Bool _field8;
};

struct TAGPBExtensionDescription {
    char *_field1;
    int _field2;
    char *_field3;
    int _field4;
    CDUnion_3de46016 _field5;
    char *_field6;
    unsigned int _field7;
    char *_field8;
};

struct TAGPBInputBufferState {
    char *bytes;
    unsigned long long bufferSize;
    unsigned long long bufferPos;
    unsigned long long currentLimit;
};

struct TAGPBMessageEnumDescription {
    char *_field1;
};

struct TAGPBMessageEnumValueDescription {
    char *_field1;
    int _field2;
};

struct TAGPBMessageExtensionRangeDescription {
    unsigned int _field1;
    unsigned int _field2;
};

struct TAGPBMessageFieldDescription {
    char *_field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    int _field5;
    unsigned long long _field6;
    char *_field7;
    CDUnion_3de46016 _field8;
    union {
        char *_field1;
        CDUnknownFunctionPointerType _field2;
    } _field9;
};

struct TAGPBOutputBufferState {
    char *bytes;
    unsigned long long size;
    unsigned long long position;
    NSOutputStream *output;
};

struct TTimerCallBack {
    CDUnknownFunctionPointerType _field1;
    void *_field2;
};

struct TXAECAudioPlayer {
    CDUnknownFunctionPointerType *_vptr$TXAECAudioUnitNotify;
    unsigned int m_nChannelsPerFrame;
    unsigned int m_nSampleRate;
    unsigned int m_nDropThreshold;
    unsigned int m_nStopDropThreshold;
    struct _opaque_pthread_mutex_t m_mutex;
    struct list<TXAECAudioPlayer::tagAudioData, std::__1::allocator<TXAECAudioPlayer::tagAudioData>> m_listAudioData;
    basic_string_a490aa4c m_strStreamUrl;
    _Bool m_bIsLivePlayType;
    _Bool m_bMute;
    _Bool m_bIsPlaying;
    _Bool m_bPausePlay;
};

struct TXAECAudioRecorder {
    CDUnknownFunctionPointerType *_vptr$TXAECAudioUnitNotify;
    unsigned char m_pRecordData[2048];
    unsigned int m_nRecordDataLen;
    struct TXMutex m_RecorderMutex;
    _Bool m_bMute;
    _Bool m_bPauseRecord;
    CDUnknownBlockType m_CaptureOuthandler;
};

struct TXAECAudioUnitNotify {
    CDUnknownFunctionPointerType *_field1;
};

struct TXGPUMatrix3x3 {
    struct TXGPUVector3 one;
    struct TXGPUVector3 two;
    struct TXGPUVector3 three;
};

struct TXGPUMatrix4x4 {
    struct TXGPUVector4 one;
    struct TXGPUVector4 two;
    struct TXGPUVector4 three;
    struct TXGPUVector4 four;
};

struct TXGPUTextureOptions {
    unsigned int minFilter;
    unsigned int magFilter;
    unsigned int wrapS;
    unsigned int wrapT;
    unsigned int internalFormat;
    unsigned int format;
    unsigned int type;
    unsigned int fiterId;
};

struct TXGPUVector2 {
    float _field1;
    float _field2;
};

struct TXGPUVector3 {
    float one;
    float two;
    float three;
};

struct TXGPUVector4 {
    float one;
    float two;
    float three;
    float four;
};

struct TXHTTPUrl {
    basic_string_a490aa4c _field1;
    basic_string_a490aa4c _field2;
    int _field3;
    struct map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char>>>> _field4;
};

struct TXMsgTask;

struct TXMutex {
    struct _opaque_pthread_mutex_t mMutex;
};

struct TXVODAudioPlayer {
    CDUnknownFunctionPointerType *_field1;
    void *_field2;
};

struct TextElem {
    basic_string_a490aa4c _field1;
};

struct UIColor {
    Class _field1;
};

struct UIEdgeInsets {
    double top;
    double left;
    double bottom;
    double right;
};

struct ULKLayoutMeasureSpec {
    double _field1;
    long long _field2;
};

struct ULKLayoutMeasuredDimension {
    double _field1;
    long long _field2;
};

struct ULKLayoutMeasuredSize {
    struct ULKLayoutMeasuredDimension _field1;
    struct ULKLayoutMeasuredDimension _field2;
};

struct ULKLayoutMeasuredWidthHeightState {
    long long _field1;
    long long _field2;
};

struct UseInfo {
    long long prevActiveTime;
    long long prevInActiveTime;
    long long prevUseTime;
    _Bool isCrashed;
};

struct UserInfoPackage {
    char _field1;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field2;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field3;
    struct vector<rqd::SummaryInfo, std::allocator<rqd::SummaryInfo>> _field4;
    struct map<std::basic_string<char>, std::basic_string<char>, std::less<std::basic_string<char>>, std::allocator<std::pair<const std::basic_string<char>, std::basic_string<char>>>> _field5;
};

struct VideoElem {
    basic_string_a490aa4c _field1;
    basic_string_a490aa4c _field2;
    unsigned int _field3;
    int _field4;
    basic_string_a490aa4c _field5;
    unsigned int _field6;
    unsigned int _field7;
    basic_string_a490aa4c _field8;
    int _field9;
    struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> _field10;
    basic_string_a490aa4c _field11;
    unsigned int _field12;
    unsigned int _field13;
    unsigned int _field14;
    basic_string_a490aa4c _field15;
    int _field16;
    struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> _field17;
};

struct WBSDKJKConstBuffer {
    struct WBSDKJKConstPtrRange _field1;
};

struct WBSDKJKConstPtrRange {
    char *_field1;
    unsigned long long _field2;
};

struct WBSDKJKEncodeCache {
    id _field1;
    unsigned long long _field2;
    unsigned long long _field3;
};

struct WBSDKJKEncodeState {
    struct WBSDKJKManagedBuffer _field1;
    struct WBSDKJKManagedBuffer _field2;
    unsigned long long _field3;
    struct WBSDKJKFastClassLookup _field4;
    struct WBSDKJKEncodeCache _field5[1024];
    unsigned long long _field6;
    unsigned long long _field7;
    unsigned long long _field8;
    id _field9;
    id _field10;
    SEL _field11;
    CDUnknownFunctionPointerType _field12;
    CDUnknownBlockType _field13;
};

struct WBSDKJKFastClassLookup {
    void *_field1;
    void *_field2;
    void *_field3;
    void *_field4;
    void *_field5;
};

struct WBSDKJKHashTableEntry {
    unsigned long long _field1;
    id _field2;
    id _field3;
};

struct WBSDKJKManagedBuffer {
    struct WBSDKJKPtrRange _field1;
    unsigned long long _field2;
    unsigned long long _field3;
};

struct WBSDKJKObjCImpCache {
    Class _field1;
    CDUnknownFunctionPointerType _field2;
    CDUnknownFunctionPointerType _field3;
};

struct WBSDKJKObjectStack {
    void **_field1;
    void **_field2;
    unsigned long long *_field3;
    unsigned long long _field4;
    unsigned long long _field5;
    unsigned long long _field6;
    unsigned long long _field7;
};

struct WBSDKJKParseState {
    unsigned long long _field1;
    struct WBSDKJKConstBuffer _field2;
    unsigned long long _field3;
    unsigned long long _field4;
    unsigned long long _field5;
    unsigned long long _field6;
    unsigned long long _field7;
    unsigned long long _field8;
    struct WBSDKJKParseToken _field9;
    struct WBSDKJKObjectStack _field10;
    struct WBSDKJKTokenCache _field11;
    struct WBSDKJKObjCImpCache _field12;
    id _field13;
    int _field14;
    _Bool _field15;
};

struct WBSDKJKParseToken {
    struct WBSDKJKConstPtrRange _field1;
    unsigned long long _field2;
    struct WBSDKJKTokenValue _field3;
    struct WBSDKJKManagedBuffer _field4;
};

struct WBSDKJKPtrRange {
    char *_field1;
    unsigned long long _field2;
};

struct WBSDKJKTokenCache {
    struct WBSDKJKTokenCacheItem *_field1;
    unsigned long long _field2;
    unsigned int _field3;
    unsigned char _field4[1024];
};

struct WBSDKJKTokenCacheItem;

struct WBSDKJKTokenValue {
    struct WBSDKJKConstPtrRange _field1;
    unsigned long long _field2;
    unsigned long long _field3;
    union {
        long long _field1;
        unsigned long long _field2;
        double _field3;
    } _field4;
    struct WBSDKJKTokenCacheItem *_field5;
};

struct _Alloc_hider {
    char *_field1;
};

struct _List_impl {
    struct _List_node_base _field1;
};

struct _List_node_base {
    struct _List_node_base *_field1;
    struct _List_node_base *_field2;
};

struct _NSRange {
    unsigned long long location;
    unsigned long long length;
};

struct _Rb_tree<int, std::pair<const int, std::vector<char, std::allocator<char>>>, std::_Select1st<std::pair<const int, std::vector<char, std::allocator<char>>>>, std::less<int>, std::allocator<std::pair<const int, std::vector<char, std::allocator<char>>>>> {
    struct _Rb_tree_impl<std::less<int>, false> _field1;
};

struct _Rb_tree<std::basic_string<char>, std::pair<const std::basic_string<char>, std::basic_string<char>>, std::_Select1st<std::pair<const std::basic_string<char>, std::basic_string<char>>>, std::less<std::basic_string<char>>, std::allocator<std::pair<const std::basic_string<char>, std::basic_string<char>>>> {
    struct _Rb_tree_impl<std::less<std::basic_string<char>>, false> _field1;
};

struct _Rb_tree<unsigned int, std::pair<const unsigned int, std::basic_string<char>>, std::_Select1st<std::pair<const unsigned int, std::basic_string<char>>>, std::less<unsigned int>, std::allocator<std::pair<const unsigned int, std::basic_string<char>>>> {
    struct _Rb_tree_impl<std::less<unsigned int>, false> _field1;
};

struct _Rb_tree_impl<std::less<int>, false> {
    struct less<int> _field1;
    struct _Rb_tree_node_base _field2;
    unsigned long long _field3;
};

struct _Rb_tree_impl<std::less<std::basic_string<char>>, false> {
    struct less<std::basic_string<char>> _field1;
    struct _Rb_tree_node_base _field2;
    unsigned long long _field3;
};

struct _Rb_tree_impl<std::less<unsigned int>, false> {
    struct less<unsigned int> _field1;
    struct _Rb_tree_node_base _field2;
    unsigned long long _field3;
};

struct _Rb_tree_node_base {
    int _field1;
    struct _Rb_tree_node_base *_field2;
    struct _Rb_tree_node_base *_field3;
    struct _Rb_tree_node_base *_field4;
};

struct __CFString;

struct __list_node_base<CVoicePlayer::tagAudioData, void *> {
    struct __list_node_base<CVoicePlayer::tagAudioData, void *> *_field1;
    struct __list_node_base<CVoicePlayer::tagAudioData, void *> *_field2;
};

struct __list_node_base<TXAECAudioPlayer::tagAudioData, void *> {
    struct __list_node_base<TXAECAudioPlayer::tagAudioData, void *> *__prev_;
    struct __list_node_base<TXAECAudioPlayer::tagAudioData, void *> *__next_;
};

struct __list_node_base<TXMessageThread<CTXH264EncThread>::TXMsgTask, void *> {
    struct __list_node_base<TXMessageThread<CTXH264EncThread>::TXMsgTask, void *> *_field1;
    struct __list_node_base<TXMessageThread<CTXH264EncThread>::TXMsgTask, void *> *_field2;
};

struct __list_node_base<audioDataItem, void *> {
    struct __list_node_base<audioDataItem, void *> *__prev_;
    struct __list_node_base<audioDataItem, void *> *__next_;
};

struct __shared_weak_count;

struct __tree_end_node<std::__1::__tree_node_base<void *>*> {
    struct __tree_node_base<void *> *__left_;
};

struct _opaque_pthread_mutex_t {
    long long __sig;
    char __opaque[56];
};

struct _opaque_pthread_rwlock_t {
    long long __sig;
    char __opaque[192];
};

struct _xmlDoc;

struct _xmlHashTable;

struct _xmlNode;

struct _xmlParserInput;

struct _xmlParserNodeInfo;

struct _xmlSAXHandler {
    CDUnknownFunctionPointerType internalSubset;
    CDUnknownFunctionPointerType isStandalone;
    CDUnknownFunctionPointerType hasInternalSubset;
    CDUnknownFunctionPointerType hasExternalSubset;
    CDUnknownFunctionPointerType resolveEntity;
    CDUnknownFunctionPointerType getEntity;
    CDUnknownFunctionPointerType entityDecl;
    CDUnknownFunctionPointerType notationDecl;
    CDUnknownFunctionPointerType attributeDecl;
    CDUnknownFunctionPointerType elementDecl;
    CDUnknownFunctionPointerType unparsedEntityDecl;
    CDUnknownFunctionPointerType setDocumentLocator;
    CDUnknownFunctionPointerType startDocument;
    CDUnknownFunctionPointerType endDocument;
    CDUnknownFunctionPointerType startElement;
    CDUnknownFunctionPointerType endElement;
    CDUnknownFunctionPointerType reference;
    CDUnknownFunctionPointerType characters;
    CDUnknownFunctionPointerType ignorableWhitespace;
    CDUnknownFunctionPointerType processingInstruction;
    CDUnknownFunctionPointerType comment;
    CDUnknownFunctionPointerType warning;
    CDUnknownFunctionPointerType error;
    CDUnknownFunctionPointerType fatalError;
    CDUnknownFunctionPointerType getParameterEntity;
    CDUnknownFunctionPointerType cdataBlock;
    CDUnknownFunctionPointerType externalSubset;
    unsigned int initialized;
    void *_private;
    CDUnknownFunctionPointerType startElementNs;
    CDUnknownFunctionPointerType endElementNs;
    CDUnknownFunctionPointerType serror;
};

struct _xmlValidState;

struct any {
    struct placeholder *_field1;
};

struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
    struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
        struct __rep {
            union {
                struct __long {
                    char *__data_;
                    unsigned long long __size_;
                    unsigned long long __cap_;
                } __l;
                struct __short {
                    char __data_[23];
                    struct {
                        unsigned char __size_;
                    } ;
                } __s;
                struct __raw {
                    unsigned long long __words[3];
                } __r;
            } ;
        } __first_;
    } __r_;
};

struct basic_string<char, std::char_traits<char>, std::allocator<char>> {
    struct _Alloc_hider _field1;
};

struct deque<TXMessageThread<CTXH264EncThread>::TXMsgTask, std::__1::allocator<TXMessageThread<CTXH264EncThread>::TXMsgTask>> {
    struct __split_buffer<TXMessageThread<CTXH264EncThread>::TXMsgTask *, std::__1::allocator<TXMessageThread<CTXH264EncThread>::TXMsgTask *>> {
        struct TXMsgTask **_field1;
        struct TXMsgTask **_field2;
        struct TXMsgTask **_field3;
        struct __compressed_pair<TXMessageThread<CTXH264EncThread>::TXMsgTask **, std::__1::allocator<TXMessageThread<CTXH264EncThread>::TXMsgTask *>> {
            struct TXMsgTask **_field1;
        } _field4;
    } _field1;
    unsigned long long _field2;
    struct __compressed_pair<unsigned long, std::__1::allocator<TXMessageThread<CTXH264EncThread>::TXMsgTask>> {
        unsigned long long _field1;
    } _field3;
};

struct deque<tag_encode_data *, std::__1::allocator<tag_encode_data *>> {
    struct __split_buffer<tag_encode_data **, std::__1::allocator<tag_encode_data **>> {
        struct tag_encode_data ***_field1;
        struct tag_encode_data ***_field2;
        struct tag_encode_data ***_field3;
        struct __compressed_pair<tag_encode_data ***, std::__1::allocator<tag_encode_data **>> {
            struct tag_encode_data ***_field1;
        } _field4;
    } _field1;
    unsigned long long _field2;
    struct __compressed_pair<unsigned long, std::__1::allocator<tag_encode_data *>> {
        unsigned long long _field1;
    } _field3;
};

struct in6_addr {
    union {
        unsigned char _field1[16];
        unsigned short _field2[8];
        unsigned int _field3[4];
    } _field1;
};

struct in_addr {
    unsigned int _field1;
};

struct less<int>;

struct less<std::basic_string<char>>;

struct less<unsigned int>;

struct list<CVoicePlayer::tagAudioData, std::__1::allocator<CVoicePlayer::tagAudioData>> {
    struct __list_node_base<CVoicePlayer::tagAudioData, void *> _field1;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<CVoicePlayer::tagAudioData, void *>>> {
        unsigned long long _field1;
    } _field2;
};

struct list<TXAECAudioPlayer::tagAudioData, std::__1::allocator<TXAECAudioPlayer::tagAudioData>> {
    struct __list_node_base<TXAECAudioPlayer::tagAudioData, void *> __end_;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<TXAECAudioPlayer::tagAudioData, void *>>> {
        unsigned long long __first_;
    } __size_alloc_;
};

struct list<TXMessageThread<CTXH264EncThread>::TXMsgTask, std::__1::allocator<TXMessageThread<CTXH264EncThread>::TXMsgTask>> {
    struct __list_node_base<TXMessageThread<CTXH264EncThread>::TXMsgTask, void *> _field1;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<TXMessageThread<CTXH264EncThread>::TXMsgTask, void *>>> {
        unsigned long long _field1;
    } _field2;
};

struct list<audioDataItem, std::__1::allocator<audioDataItem>> {
    struct __list_node_base<audioDataItem, void *> __end_;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<audioDataItem, void *>>> {
        unsigned long long __first_;
    } __size_alloc_;
};

struct list<std::basic_string<char>, std::allocator<std::basic_string<char>>> {
    struct _List_impl _field1;
};

struct map<int, std::vector<char, std::allocator<char>>, std::less<int>, std::allocator<std::pair<const int, std::vector<char, std::allocator<char>>>>> {
    struct _Rb_tree<int, std::pair<const int, std::vector<char, std::allocator<char>>>, std::_Select1st<std::pair<const int, std::vector<char, std::allocator<char>>>>, std::less<int>, std::allocator<std::pair<const int, std::vector<char, std::allocator<char>>>>> _field1;
};

struct map<std::__1::basic_string<char>, imcore::FriendProfile, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, imcore::FriendProfile>>> {
    struct __tree<std::__1::__value_type<std::__1::basic_string<char>, imcore::FriendProfile>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, imcore::FriendProfile>, std::__1::less<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, imcore::FriendProfile>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, imcore::FriendProfile>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, imcore::FriendProfile>, std::__1::less<std::__1::basic_string<char>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::basic_string<char>, imcore::GroupTipsMemberInfo, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, imcore::GroupTipsMemberInfo>>> {
    struct __tree<std::__1::__value_type<std::__1::basic_string<char>, imcore::GroupTipsMemberInfo>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, imcore::GroupTipsMemberInfo>, std::__1::less<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, imcore::GroupTipsMemberInfo>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, imcore::GroupTipsMemberInfo>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, imcore::GroupTipsMemberInfo>, std::__1::less<std::__1::basic_string<char>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::basic_string<char>, long, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, long>>> {
    struct __tree<std::__1::__value_type<std::__1::basic_string<char>, long>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, long>, std::__1::less<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, long>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, long>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, long>, std::__1::less<std::__1::basic_string<char>>, true>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char>>>> {
    struct __tree<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::less<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::less<std::__1::basic_string<char>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<std::basic_string<char>, std::basic_string<char>, std::less<std::basic_string<char>>, std::allocator<std::pair<const std::basic_string<char>, std::basic_string<char>>>> {
    struct _Rb_tree<std::basic_string<char>, std::pair<const std::basic_string<char>, std::basic_string<char>>, std::_Select1st<std::pair<const std::basic_string<char>, std::basic_string<char>>>, std::less<std::basic_string<char>>, std::allocator<std::pair<const std::basic_string<char>, std::basic_string<char>>>> _field1;
};

struct map<unsigned int, std::basic_string<char>, std::less<unsigned int>, std::allocator<std::pair<const unsigned int, std::basic_string<char>>>> {
    struct _Rb_tree<unsigned int, std::pair<const unsigned int, std::basic_string<char>>, std::_Select1st<std::pair<const unsigned int, std::basic_string<char>>>, std::less<unsigned int>, std::allocator<std::pair<const unsigned int, std::basic_string<char>>>> _field1;
};

struct placeholder;

struct queue<TXMessageThread<CTXH264EncThread>::TXMsgTask, std::__1::deque<TXMessageThread<CTXH264EncThread>::TXMsgTask, std::__1::allocator<TXMessageThread<CTXH264EncThread>::TXMsgTask>>> {
    struct deque<TXMessageThread<CTXH264EncThread>::TXMsgTask, std::__1::allocator<TXMessageThread<CTXH264EncThread>::TXMsgTask>> _field1;
};

struct queue<tag_encode_data *, std::__1::deque<tag_encode_data *, std::__1::allocator<tag_encode_data *>>> {
    struct deque<tag_encode_data *, std::__1::allocator<tag_encode_data *>> _field1;
};

struct set<TXAECAudioUnitNotify *, std::__1::less<TXAECAudioUnitNotify *>, std::__1::allocator<TXAECAudioUnitNotify *>> {
    struct __tree<TXAECAudioUnitNotify *, std::__1::less<TXAECAudioUnitNotify *>, std::__1::allocator<TXAECAudioUnitNotify *>> {
        struct __tree_node<TXAECAudioUnitNotify *, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<TXAECAudioUnitNotify *, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::less<TXAECAudioUnitNotify *>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct set<std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::basic_string<char>>> {
    struct __tree<std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::basic_string<char>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::basic_string<char>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::less<std::__1::basic_string<char>>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct shared_ptr<imcore::MsgNode> {
    struct MsgNode *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<imcore::SessionNode> {
    struct SessionNode *_field1;
    struct __shared_weak_count *_field2;
};

struct sockaddr {
    unsigned char _field1;
    unsigned char _field2;
    char _field3[14];
};

struct sockaddr_in {
    unsigned char _field1;
    unsigned char _field2;
    unsigned short _field3;
    struct in_addr _field4;
    char _field5[8];
};

struct sockaddr_in6 {
    unsigned char _field1;
    unsigned char _field2;
    unsigned short _field3;
    unsigned int _field4;
    struct in6_addr _field5;
    unsigned int _field6;
};

struct sockaddr_un {
    unsigned char _field1;
    unsigned char _field2;
    char _field3[104];
};

struct tag_encode_data;

struct tag_frame_info {
    int nPOCType;
    int nFrameType;
    int nFrameIndex;
    int nFramePOC;
    char *pcData;
    int nDataLen;
    int nFrameAngle;
    int nRefFrameIndex;
    unsigned int nTimeStamp;
};

struct tag_video_frame {
    int nFramePOC;
    int nFrameType;
    struct __CVBuffer *imageBuffer;
    struct tag_video_frame *next;
};

struct timeval {
    long long tv_sec;
    int tv_usec;
};

struct tm_unz_s {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned int _field6;
};

struct tm_zip_s {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned int _field6;
};

struct unz_file_info_s {
    unsigned long long _field1;
    unsigned long long _field2;
    unsigned long long _field3;
    unsigned long long _field4;
    unsigned long long _field5;
    unsigned long long _field6;
    unsigned long long _field7;
    unsigned long long _field8;
    unsigned long long _field9;
    unsigned long long _field10;
    unsigned long long _field11;
    unsigned long long _field12;
    unsigned long long _field13;
    unsigned long long _field14;
    struct tm_unz_s _field15;
};

struct unz_global_info_s {
    unsigned long long _field1;
    unsigned long long _field2;
    unsigned long long _field3;
};

struct uregex;

struct vector<char, std::allocator<char>> {
    struct _Vector_impl {
        char *_field1;
        char *_field2;
        char *_field3;
    } _field1;
};

struct vector<imcore::Elem, std::__1::allocator<imcore::Elem>> {
    struct Elem *__begin_;
    struct Elem *__end_;
    struct __compressed_pair<imcore::Elem *, std::__1::allocator<imcore::Elem>> {
        struct Elem *__first_;
    } __end_cap_;
};

struct vector<imcore::FriendChangeUserInfo, std::__1::allocator<imcore::FriendChangeUserInfo>> {
    struct FriendChangeUserInfo *_field1;
    struct FriendChangeUserInfo *_field2;
    struct __compressed_pair<imcore::FriendChangeUserInfo *, std::__1::allocator<imcore::FriendChangeUserInfo>> {
        struct FriendChangeUserInfo *_field1;
    } _field3;
};

struct vector<imcore::GroupTipsElem_GroupInfo, std::__1::allocator<imcore::GroupTipsElem_GroupInfo>> {
    struct GroupTipsElem_GroupInfo *_field1;
    struct GroupTipsElem_GroupInfo *_field2;
    struct __compressed_pair<imcore::GroupTipsElem_GroupInfo *, std::__1::allocator<imcore::GroupTipsElem_GroupInfo>> {
        struct GroupTipsElem_GroupInfo *_field1;
    } _field3;
};

struct vector<imcore::GroupTipsElem_MemberInfo, std::__1::allocator<imcore::GroupTipsElem_MemberInfo>> {
    struct GroupTipsElem_MemberInfo *_field1;
    struct GroupTipsElem_MemberInfo *_field2;
    struct __compressed_pair<imcore::GroupTipsElem_MemberInfo *, std::__1::allocator<imcore::GroupTipsElem_MemberInfo>> {
        struct GroupTipsElem_MemberInfo *_field1;
    } _field3;
};

struct vector<rqd::AppInfo, std::allocator<rqd::AppInfo>> {
    struct _Vector_impl {
        struct AppInfo *_field1;
        struct AppInfo *_field2;
        struct AppInfo *_field3;
    } _field1;
};

struct vector<rqd::Attachment, std::allocator<rqd::Attachment>> {
    struct _Vector_impl {
        struct Attachment *_field1;
        struct Attachment *_field2;
        struct Attachment *_field3;
    } _field1;
};

struct vector<rqd::ExceptionUpload, std::allocator<rqd::ExceptionUpload>> {
    struct _Vector_impl {
        struct ExceptionUpload *_field1;
        struct ExceptionUpload *_field2;
        struct ExceptionUpload *_field3;
    } _field1;
};

struct vector<rqd::SummaryInfo, std::allocator<rqd::SummaryInfo>> {
    struct _Vector_impl {
        struct SummaryInfo *_field1;
        struct SummaryInfo *_field2;
        struct SummaryInfo *_field3;
    } _field1;
};

struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> {
    basic_string_a490aa4c *_field1;
    basic_string_a490aa4c *_field2;
    struct __compressed_pair<std::__1::basic_string<char>*, std::__1::allocator<std::__1::basic_string<char>>> {
        basic_string_a490aa4c *_field1;
    } _field3;
};

struct vector<std::basic_string<char>, std::allocator<std::basic_string<char>>> {
    struct _Vector_impl {
        struct basic_string<char, std::char_traits<char>, std::allocator<char>> *_field1;
        struct basic_string<char, std::char_traits<char>, std::allocator<char>> *_field2;
        struct basic_string<char, std::char_traits<char>, std::allocator<char>> *_field3;
    } _field1;
};

struct vector<unsigned long, std::allocator<unsigned long>> {
    struct _Vector_impl {
        unsigned long long *_M_start;
        unsigned long long *_M_finish;
        unsigned long long *_M_end_of_storage;
    } _M_impl;
};

struct vector<ysf_nim_biz::Property, std::allocator<ysf_nim_biz::Property>> {
    struct _Vector_impl {
        struct Property *_field1;
        struct Property *_field2;
        struct Property *_field3;
    } _field1;
};

#pragma mark Typedef'd Structures

typedef struct {
    unsigned long long _field1;
    id *_field2;
    unsigned long long *_field3;
    unsigned long long _field4[5];
} CDStruct_70511ce9;

typedef struct {
    unsigned short wCmd;
    unsigned short wSubCmd;
    short wRst;
    unsigned int dwUsed;
    unsigned int dwCalUsed;
    unsigned short wTry;
    unsigned char acHostName[32];
    unsigned char acHostIp[32];
    unsigned short wPort;
    unsigned char cConn;
    unsigned char cNetType;
    unsigned char cNetwork;
    unsigned char acErrorStr[64];
    unsigned short wSendDataLen;
    unsigned short wResvDataLen;
} CDStruct_34f44c17;

typedef struct {
    void **_field1;
    int *_field2;
    char *_field3;
} CDStruct_e1a27b1c;

typedef struct {
    void *_field1;
    unsigned int _field2;
} CDStruct_f8bc7150;

typedef struct {
    unsigned int isShowingAlert:1;
} CDStruct_b441f22a;

typedef struct {
    double _field1;
    double _field2;
} CDStruct_c3b9c2ee;

typedef struct {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
    double _field5;
    double _field6;
    double _field7;
    double _field8;
    double _field9;
} CDStruct_27b5ccfc;

typedef struct {
    long long version;
    void *info;
    CDUnknownFunctionPointerType retain;
    CDUnknownFunctionPointerType release;
    CDUnknownFunctionPointerType copyDescription;
} CDStruct_4210025a;

typedef struct {
    long long value;
    int timescale;
    unsigned int flags;
    long long epoch;
} CDStruct_1b6d18a9;

typedef struct {
    long long majorVersion;
    long long minorVersion;
    long long patchVersion;
} CDStruct_f6aba300;

typedef struct {
    long long _field1;
    long long _field2;
} CDStruct_912cb5d2;

typedef struct {
    CDStruct_1b6d18a9 _field1;
    CDStruct_1b6d18a9 _field2;
    CDStruct_1b6d18a9 _field3;
} CDStruct_d2aef016;

typedef struct {
    struct tm_zip_s _field1;
    unsigned long long _field2;
    unsigned long long _field3;
    unsigned long long _field4;
} CDStruct_192a48cb;

typedef struct {
    _Bool _field1;
    _Bool _field2;
    struct CGRect _field3;
    struct CGRect _field4;
    double _field5;
    long long _field6;
    unsigned long long _field7;
} CDStruct_902a08d0;

// Ambiguous groups
typedef struct {
    float _field1;
    float _field2;
    float _field3;
} CDStruct_869f9c67;

typedef struct {
    float r;
    float g;
    float b;
} CDStruct_3ac9af65;

typedef struct JceInputStream<analyticstaf::BufferReader> {
    char *_field1;
    unsigned long long _field2;
    unsigned long long _field3;
} JceInputStream_f07640a9;

typedef struct JceOutputStream<analyticstaf::BufferWriter> {
    char *_field1;
    unsigned long long _field2;
    unsigned long long _field3;
} JceOutputStream_31132a5e;

typedef struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
    struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
        struct __rep {
            union {
                struct __long {
                    char *__data_;
                    unsigned long long __size_;
                    unsigned long long __cap_;
                } __l;
                struct __short {
                    char __data_[23];
                    struct {
                        unsigned char __size_;
                    } ;
                } __s;
                struct __raw {
                    unsigned long long __words[3];
                } __r;
            } ;
        } __first_;
    } __r_;
} basic_string_a490aa4c;

typedef struct list<audioDataItem, std::__1::allocator<audioDataItem>> {
    struct __list_node_base<audioDataItem, void *> __end_;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<audioDataItem, void *>>> {
        unsigned long long __first_;
    } __size_alloc_;
} list_3624f97a;

typedef struct list<std::basic_string<char>, std::allocator<std::basic_string<char>>> {
    struct _List_impl _field1;
} list_4877c72b;

typedef struct vector<std::basic_string<char>, std::allocator<std::basic_string<char>>> {
    struct _Vector_impl {
        struct basic_string<char, std::char_traits<char>, std::allocator<char>> *_field1;
        struct basic_string<char, std::char_traits<char>, std::allocator<char>> *_field2;
        struct basic_string<char, std::char_traits<char>, std::allocator<char>> *_field3;
    } _field1;
} vector_9cd42a6f;

typedef struct vector<ysf_nim_biz::Property, std::allocator<ysf_nim_biz::Property>> {
    struct _Vector_impl {
        struct Property *_field1;
        struct Property *_field2;
        struct Property *_field3;
    } _field1;
} vector_1991ec76;

#pragma mark Named Unions

union _GLKMatrix4 {
    struct {
        float m00;
        float m01;
        float m02;
        float m03;
        float m10;
        float m11;
        float m12;
        float m13;
        float m20;
        float m21;
        float m22;
        float m23;
        float m30;
        float m31;
        float m32;
        float m33;
    } ;
    float m[16];
};

#pragma mark Typedef'd Unions

typedef union {
    _Bool valueBool;
    unsigned int valueFixed32;
    int valueSFixed32;
    float valueFloat;
    unsigned long long valueFixed64;
    long long valueSFixed64;
    double valueDouble;
    int valueInt32;
    long long valueInt64;
    int valueSInt32;
    long long valueSInt64;
    unsigned int valueUInt32;
    unsigned long long valueUInt64;
    NSData *valueData;
    NSString *valueString;
    TAGPBGeneratedMessage *valueMessage;
    TAGPBGeneratedMessage *valueGroup;
    int valueEnum;
    TAGPBArray *valueArray;
    id valueObject;
} CDUnion_3de46016;

typedef union {
    _Bool valueBool;
    int valueInt32;
    long long valueInt64;
    unsigned int valueUInt32;
    unsigned long long valueUInt64;
    float valueFloat;
    double valueDouble;
    NSData *valueData;
    NSString *valueString;
    GPBMessage *valueMessage;
    int valueEnum;
} CDUnion_88782d86;

