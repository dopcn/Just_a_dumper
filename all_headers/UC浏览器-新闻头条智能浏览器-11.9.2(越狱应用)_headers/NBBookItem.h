//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "NBBookShelfItem.h"

@class NBFSChapterItem, NBPADiscountInfo, NSMutableDictionary, NSString;

@interface NBBookItem : NBBookShelfItem
{
    _Bool _isPreset;
    _Bool _isWifiAutoDownloadEnable;
    _Bool _hasSMSource;
    _Bool _isDeleted;
    _Bool _shouldShowBluePointTips;
    _Bool _shouldShowUpdateCornerMark;
    _Bool _needConvertReadingProgress;
    _Bool _hasIncrChapterUpdate;
    _Bool _hasChapterCorrection;
    _Bool _isAutoBuy;
    _Bool _hadAutoBuyActiveBefore;
    _Bool _isTimeLimitFreeChange;
    _Bool _readingProgressChapterHasBuy;
    _Bool _isOffShelf;
    _Bool _isNeedUpdateBookInfo;
    _Bool _isBuy;
    int _top;
    float _bagTrySize;
    NSString *_catalogUrl;
    NBFSChapterItem *_readingProgressItem;
    long long _siteType;
    NSString *_siteName;
    NSString *_novelId;
    NSMutableDictionary *_extInfo;
    long long _readingCount;
    NSString *_pageURL;
    NSString *_refURL;
    NSString *_epubContentKey;
    NSString *_coverBackgroundColor;
    long long _readingProgressFileOffset;
    NSString *_readingProgressChapterName;
    NSString *_readingProgressContentKey;
    long long _readingProgressCid;
    NSString *_readingProgressCdnUrl;
    long long _readingProgressChapterIndex;
    long long _readingProgressPageIndex;
    NSString *_offlineBookFileName;
    NSString *_offlineDownloadUrl;
    NSString *_offlineDownloadSize;
    NSString *_offlineDownloadHostUrl;
    long long _offlineMaxChapterId;
    NSString *_lastChapterCorrectionTime;
    long long _lastChapterId;
    NSString *_lastChapterName;
    NSString *_lastChapterContentKey;
    long long _incrChapterUpdateCount;
    long long _contentCorrectionFileOffset;
    NSString *_bookId;
    NSString *_userId;
    NSString *_bagTryUrl;
    NBPADiscountInfo *_disInfo;
    NSString *_anyUpTime;
    long long _cacheState;
    long long _chapterNum;
    long long _extReadingProgressCid;
    NSString *_miguBookId;
    NSString *_lastUpdateBookInfoTime;
    NSString *_txtFilePath;
    long long _copyrightAlertCount;
    long long _updateSourceVersion;
    long long _updateSourceFaildCount;
}

@property(nonatomic) long long updateSourceFaildCount; // @synthesize updateSourceFaildCount=_updateSourceFaildCount;
@property(nonatomic) long long updateSourceVersion; // @synthesize updateSourceVersion=_updateSourceVersion;
@property(nonatomic) long long copyrightAlertCount; // @synthesize copyrightAlertCount=_copyrightAlertCount;
@property(copy, nonatomic) NSString *txtFilePath; // @synthesize txtFilePath=_txtFilePath;
@property(copy, nonatomic) NSString *lastUpdateBookInfoTime; // @synthesize lastUpdateBookInfoTime=_lastUpdateBookInfoTime;
@property(copy, nonatomic) NSString *miguBookId; // @synthesize miguBookId=_miguBookId;
@property(nonatomic) long long extReadingProgressCid; // @synthesize extReadingProgressCid=_extReadingProgressCid;
@property(nonatomic) _Bool isBuy; // @synthesize isBuy=_isBuy;
@property(nonatomic) _Bool isNeedUpdateBookInfo; // @synthesize isNeedUpdateBookInfo=_isNeedUpdateBookInfo;
@property(nonatomic) _Bool isOffShelf; // @synthesize isOffShelf=_isOffShelf;
@property(nonatomic) long long chapterNum; // @synthesize chapterNum=_chapterNum;
@property(nonatomic) float bagTrySize; // @synthesize bagTrySize=_bagTrySize;
@property(nonatomic) _Bool readingProgressChapterHasBuy; // @synthesize readingProgressChapterHasBuy=_readingProgressChapterHasBuy;
@property(nonatomic) long long cacheState; // @synthesize cacheState=_cacheState;
@property(nonatomic) _Bool isTimeLimitFreeChange; // @synthesize isTimeLimitFreeChange=_isTimeLimitFreeChange;
@property(nonatomic) _Bool hadAutoBuyActiveBefore; // @synthesize hadAutoBuyActiveBefore=_hadAutoBuyActiveBefore;
@property(nonatomic) _Bool isAutoBuy; // @synthesize isAutoBuy=_isAutoBuy;
@property(copy, nonatomic) NSString *anyUpTime; // @synthesize anyUpTime=_anyUpTime;
@property(copy, nonatomic) NBPADiscountInfo *disInfo; // @synthesize disInfo=_disInfo;
@property(copy, nonatomic) NSString *bagTryUrl; // @synthesize bagTryUrl=_bagTryUrl;
@property(copy, nonatomic) NSString *userId; // @synthesize userId=_userId;
@property(copy, nonatomic) NSString *bookId; // @synthesize bookId=_bookId;
@property(nonatomic) long long contentCorrectionFileOffset; // @synthesize contentCorrectionFileOffset=_contentCorrectionFileOffset;
@property(nonatomic) int top; // @synthesize top=_top;
@property(nonatomic) long long incrChapterUpdateCount; // @synthesize incrChapterUpdateCount=_incrChapterUpdateCount;
@property(nonatomic) _Bool hasChapterCorrection; // @synthesize hasChapterCorrection=_hasChapterCorrection;
@property(nonatomic) _Bool hasIncrChapterUpdate; // @synthesize hasIncrChapterUpdate=_hasIncrChapterUpdate;
@property(copy, nonatomic) NSString *lastChapterContentKey; // @synthesize lastChapterContentKey=_lastChapterContentKey;
@property(copy, nonatomic) NSString *lastChapterName; // @synthesize lastChapterName=_lastChapterName;
@property(nonatomic) long long lastChapterId; // @synthesize lastChapterId=_lastChapterId;
@property(copy, nonatomic) NSString *lastChapterCorrectionTime; // @synthesize lastChapterCorrectionTime=_lastChapterCorrectionTime;
@property(nonatomic) long long offlineMaxChapterId; // @synthesize offlineMaxChapterId=_offlineMaxChapterId;
@property(copy, nonatomic) NSString *offlineDownloadHostUrl; // @synthesize offlineDownloadHostUrl=_offlineDownloadHostUrl;
@property(copy, nonatomic) NSString *offlineDownloadSize; // @synthesize offlineDownloadSize=_offlineDownloadSize;
@property(copy, nonatomic) NSString *offlineDownloadUrl; // @synthesize offlineDownloadUrl=_offlineDownloadUrl;
@property(copy, nonatomic) NSString *offlineBookFileName; // @synthesize offlineBookFileName=_offlineBookFileName;
@property(nonatomic) long long readingProgressPageIndex; // @synthesize readingProgressPageIndex=_readingProgressPageIndex;
@property(nonatomic) long long readingProgressChapterIndex; // @synthesize readingProgressChapterIndex=_readingProgressChapterIndex;
@property(copy, nonatomic) NSString *readingProgressCdnUrl; // @synthesize readingProgressCdnUrl=_readingProgressCdnUrl;
@property(nonatomic) long long readingProgressCid; // @synthesize readingProgressCid=_readingProgressCid;
@property(copy, nonatomic) NSString *readingProgressContentKey; // @synthesize readingProgressContentKey=_readingProgressContentKey;
@property(copy, nonatomic) NSString *readingProgressChapterName; // @synthesize readingProgressChapterName=_readingProgressChapterName;
@property(nonatomic) long long readingProgressFileOffset; // @synthesize readingProgressFileOffset=_readingProgressFileOffset;
@property(nonatomic) _Bool needConvertReadingProgress; // @synthesize needConvertReadingProgress=_needConvertReadingProgress;
@property(nonatomic) _Bool shouldShowUpdateCornerMark; // @synthesize shouldShowUpdateCornerMark=_shouldShowUpdateCornerMark;
@property(nonatomic) _Bool shouldShowBluePointTips; // @synthesize shouldShowBluePointTips=_shouldShowBluePointTips;
@property(copy, nonatomic) NSString *coverBackgroundColor; // @synthesize coverBackgroundColor=_coverBackgroundColor;
@property(copy, nonatomic) NSString *epubContentKey; // @synthesize epubContentKey=_epubContentKey;
@property(copy, nonatomic) NSString *refURL; // @synthesize refURL=_refURL;
@property(copy, nonatomic) NSString *pageURL; // @synthesize pageURL=_pageURL;
@property(nonatomic) long long readingCount; // @synthesize readingCount=_readingCount;
@property(nonatomic) _Bool isDeleted; // @synthesize isDeleted=_isDeleted;
@property(retain, nonatomic) NSMutableDictionary *extInfo; // @synthesize extInfo=_extInfo;
@property(copy, nonatomic) NSString *novelId; // @synthesize novelId=_novelId;
@property(copy, nonatomic) NSString *siteName; // @synthesize siteName=_siteName;
@property(nonatomic) long long siteType; // @synthesize siteType=_siteType;
@property(nonatomic) _Bool hasSMSource; // @synthesize hasSMSource=_hasSMSource;
@property(retain, nonatomic) NBFSChapterItem *readingProgressItem; // @synthesize readingProgressItem=_readingProgressItem;
@property(copy, nonatomic) NSString *catalogUrl; // @synthesize catalogUrl=_catalogUrl;
@property(nonatomic) _Bool isWifiAutoDownloadEnable; // @synthesize isWifiAutoDownloadEnable=_isWifiAutoDownloadEnable;
@property(nonatomic) _Bool isPreset; // @synthesize isPreset=_isPreset;
- (long long)getItemEpubType;
- (id)recentChapterId;
- (_Bool)isSQEpubPacketReady;
- (_Bool)isWapNovel;
- (id)getPAOfflineDocumentFilePathNewVersionAdapted;
- (id)getPAOfflineDocumentFilePath;
- (id)getPAOfflineFilePath;
- (id)getPATryBagFilePath;
- (void)savePAOfflineFileFromPath:(id)arg1;
- (id)displayCoverTitle;
- (id)displayTitle;
- (void)internalSetValue:(id)arg1 forKey:(id)arg2;
- (id)internalValueForKey:(id)arg1;
- (_Bool)isTxtFileInNovelBoxDirectory;
- (_Bool)isTxtFileExist;
- (_Bool)hasOfflineIncrUpdate;
- (_Bool)hasRead;
- (id)saveUncompressedOfflineBookFileFromPath:(id)arg1 fileType:(long long)arg2;
- (id)getExtenstionForOfflineFileType:(long long)arg1;
- (id)getUncompressedOfflineBookFileFullPath;
- (long long)getUncompressedOfflineBookType;
- (_Bool)hasUnCompressedOfflineFile;
- (void)savePATryBagFileFromPath:(id)arg1;
- (id)getSMCompressedOfflineFilePath;
- (void)saveSMCompressedOfflineFileFromPath:(id)arg1;
- (unsigned long long)getOfflineDownloadSizeInBytes;
- (_Bool)isOffline;
- (void)removeBookDirectories;
- (id)ePubUnzipDirectory;
- (id)ePubZipPacketDirectory;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)init;

@end

