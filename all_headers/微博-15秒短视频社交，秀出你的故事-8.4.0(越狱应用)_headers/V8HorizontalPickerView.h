//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <UIKit/UIView.h>

#import "UIScrollViewDelegate-Protocol.h"

@class CAGradientLayer, NSMutableArray, NSString, UIColor, UIFont, UIScrollView;
@protocol V8HorizontalPickerViewDataSource, V8HorizontalPickerViewDelegate;

@interface V8HorizontalPickerView : UIView <UIScrollViewDelegate>
{
    UIScrollView *_scrollView;
    CAGradientLayer *_upgradientLayer;
    CAGradientLayer *_downgradientLayer;
    _Bool _showLine;
    _Bool _shouldVertical;
    _Bool _dataHasBeenLoaded;
    _Bool _scrollSizeHasBeenSet;
    _Bool _scrollingBasedOnUserInteraction;
    int _indicatorPosition;
    id <V8HorizontalPickerViewDataSource> _dataSource;
    id <V8HorizontalPickerViewDelegate> _delegate;
    long long _numberOfElements;
    long long _currentSelectedIndex;
    UIFont *_elementFont;
    UIFont *_selectedElementFont;
    UIColor *_textColor;
    UIColor *_selectedTextColor;
    UIView *_selectionIndicatorView;
    UIView *_leftEdgeView;
    UIView *_rightEdgeView;
    UIView *_leftScrollEdgeView;
    UIView *_rightScrollEdgeView;
    double _scrollEdgeViewPadding;
    NSMutableArray *_elementWidths;
    long long _elementPadding;
    long long _firstVisibleElement;
    long long _lastVisibleElement;
    struct CGPoint _selectionPoint;
    struct UIEdgeInsets _edgeInsetsForTouch;
}

@property(nonatomic) long long lastVisibleElement; // @synthesize lastVisibleElement=_lastVisibleElement;
@property(nonatomic) long long firstVisibleElement; // @synthesize firstVisibleElement=_firstVisibleElement;
@property(nonatomic) _Bool scrollingBasedOnUserInteraction; // @synthesize scrollingBasedOnUserInteraction=_scrollingBasedOnUserInteraction;
@property(nonatomic) _Bool scrollSizeHasBeenSet; // @synthesize scrollSizeHasBeenSet=_scrollSizeHasBeenSet;
@property(nonatomic) _Bool dataHasBeenLoaded; // @synthesize dataHasBeenLoaded=_dataHasBeenLoaded;
@property(nonatomic) long long elementPadding; // @synthesize elementPadding=_elementPadding;
@property(retain, nonatomic) NSMutableArray *elementWidths; // @synthesize elementWidths=_elementWidths;
@property(nonatomic) _Bool shouldVertical; // @synthesize shouldVertical=_shouldVertical;
@property(nonatomic) _Bool showLine; // @synthesize showLine=_showLine;
@property(nonatomic) double scrollEdgeViewPadding; // @synthesize scrollEdgeViewPadding=_scrollEdgeViewPadding;
@property(retain, nonatomic) UIView *rightScrollEdgeView; // @synthesize rightScrollEdgeView=_rightScrollEdgeView;
@property(retain, nonatomic) UIView *leftScrollEdgeView; // @synthesize leftScrollEdgeView=_leftScrollEdgeView;
@property(retain, nonatomic) UIView *rightEdgeView; // @synthesize rightEdgeView=_rightEdgeView;
@property(retain, nonatomic) UIView *leftEdgeView; // @synthesize leftEdgeView=_leftEdgeView;
@property(nonatomic) int indicatorPosition; // @synthesize indicatorPosition=_indicatorPosition;
@property(retain, nonatomic) UIView *selectionIndicatorView; // @synthesize selectionIndicatorView=_selectionIndicatorView;
@property(nonatomic) struct CGPoint selectionPoint; // @synthesize selectionPoint=_selectionPoint;
@property(retain, nonatomic) UIColor *selectedTextColor; // @synthesize selectedTextColor=_selectedTextColor;
@property(retain, nonatomic) UIColor *textColor; // @synthesize textColor=_textColor;
@property(retain, nonatomic) UIFont *selectedElementFont; // @synthesize selectedElementFont=_selectedElementFont;
@property(retain, nonatomic) UIFont *elementFont; // @synthesize elementFont=_elementFont;
@property(readonly, nonatomic) long long currentSelectedIndex; // @synthesize currentSelectedIndex=_currentSelectedIndex;
@property(readonly, nonatomic) long long numberOfElements; // @synthesize numberOfElements=_numberOfElements;
@property(nonatomic) __weak id <V8HorizontalPickerViewDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) __weak id <V8HorizontalPickerViewDataSource> dataSource; // @synthesize dataSource=_dataSource;
@property(nonatomic) struct UIEdgeInsets edgeInsetsForTouch; // @synthesize edgeInsetsForTouch=_edgeInsetsForTouch;
- (void).cxx_destruct;
- (_Bool)pointInside:(struct CGPoint)arg1 withEvent:(id)arg2;
- (void)scrollViewWillEndDragging:(id)arg1 withVelocity:(struct CGPoint)arg2 targetContentOffset:(inout struct CGPoint *)arg3;
- (void)scrollViewTapped:(id)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (void)scrollToElementNearestToCenter;
- (long long)elementContainingPoint:(struct CGPoint)arg1;
- (long long)nearestElementToPoint:(struct CGPoint)arg1;
- (long long)nearestElementToCenter;
- (struct CGPoint)currentCenter;
- (double)rightScrollEdgeWidth;
- (struct CGRect)frameForRightScrollEdgeView;
- (double)leftScrollEdgeWidth;
- (struct CGRect)frameForLeftScrollEdgeView;
- (struct CGRect)frameForElementAtIndex:(long long)arg1;
- (long long)centerOfElementAtIndex:(long long)arg1;
- (long long)indexForElement:(id)arg1;
- (long long)tagForElementAtIndex:(long long)arg1;
- (long long)offsetForElementAtIndex:(long long)arg1;
- (void)updateScrollContentInset;
- (void)setTotalWidthOfScrollContent;
- (void)getElementWidthsFromDelegate;
- (void)getNumberOfElementsFromDataSource;
- (id)labelForForElementAtIndex:(long long)arg1 withTitle:(id)arg2;
- (void)drawPositionIndicator;
- (void)addScrollView;
- (void)scrollViewDidEndScrollingAnimation:(id)arg1;
- (void)scrollViewDidEndDecelerating:(id)arg1;
- (void)scrollViewDidEndDragging:(id)arg1 willDecelerate:(_Bool)arg2;
- (void)scrollViewWillBeginDragging:(id)arg1;
- (void)scrollViewDidScroll:(id)arg1;
- (void)scrollToElement:(long long)arg1 animated:(_Bool)arg2;
- (void)collectData;
- (void)reloadData;
- (void)setFrame:(struct CGRect)arg1;
- (void)setBackgroundColor:(id)arg1;
- (void)layoutSubviews;
- (void)initSetup;
- (void)dealloc;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

