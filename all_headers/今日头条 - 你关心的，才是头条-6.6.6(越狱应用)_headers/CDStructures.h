//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

@class GPBMessage, NSArray, NSData, NSMutableArray, NSOutputStream, NSString, Protocol;

#pragma mark Function Pointers and Blocks

typedef void (*CDUnknownFunctionPointerType)(void); // return type and parameters are unknown

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct APPWRAPPER {
    void *_field1;
    CDUnknownFunctionPointerType _field2;
    CDUnknownFunctionPointerType _field3;
    CDUnknownFunctionPointerType _field4;
};

struct AVBufferCallback;

struct AVFilter;

struct AVHandler;

struct AVLooper;

struct AVNode;

struct AVProcessor;

struct AVQueue<com::ss::ttm::AVBuffer *> {
    _Bool _field1;
    struct AVNode *_field2;
    struct AVNode *_field3;
    struct AVNode *_field4;
    struct AVNode *_field5;
    struct AVNode *_field6;
    struct _opaque_pthread_mutex_t _field7;
    struct _opaque_pthread_cond_t _field8;
    int _field9;
    int _field10;
    int _field11;
    int _field12;
    int _field13;
    char *_field14;
    struct AVBufferCallback *_field15;
    int _field16;
};

struct AVRationalN {
    int _field1;
    int _field2;
};

struct AVSource {
    CDUnknownFunctionPointerType *_field1;
    CDUnknownFunctionPointerType *_field2;
    int _field3;
    int _field4;
    int _field5;
    int _field6;
    _Bool _field7;
    char *_field8;
    struct AVSource *_field9;
    struct AVHandler *_field10;
};

struct AVStack<com::ss::ttm::AVBuffer *> {
    _Bool _field1;
    struct AVNode *_field2;
    struct AVNode *_field3;
    struct AVNode *_field4;
    struct AVNode *_field5;
    struct AVNode *_field6;
    struct _opaque_pthread_mutex_t _field7;
    struct _opaque_pthread_cond_t _field8;
    int _field9;
    int _field10;
    int _field11;
    int _field12;
    int _field13;
    char *_field14;
};

struct AVTHREAD_INFO {
    CDUnknownFunctionPointerType _field1;
    CDUnknownFunctionPointerType _field2;
    void *_field3;
};

struct AVThread {
    int _field1;
    char *_field2;
    struct _opaque_pthread_t *_field3;
    struct _opaque_pthread_mutex_t _field4;
    struct _opaque_pthread_cond_t _field5;
    struct _opaque_pthread_mutex_t _field6;
    struct _opaque_pthread_cond_t _field7;
    _Bool _field8;
    struct AVProcessor *_field9;
    struct AVTHREAD_INFO _field10;
};

struct AVWindow {
    struct UIView *_field1;
    CDUnknownFunctionPointerType _field2;
    CDUnknownFunctionPointerType _field3;
    CDUnknownFunctionPointerType _field4;
    CDUnknownFunctionPointerType _field5;
    CDUnknownFunctionPointerType _field6;
    CDUnknownFunctionPointerType _field7;
    CDUnknownFunctionPointerType _field8;
    CDUnknownFunctionPointerType _field9;
    CDUnknownFunctionPointerType _field10;
    void *_field11;
    int _field12;
    int _field13;
    int _field14;
    id _field15;
    float _field16;
};

struct Acceleration {
    CDUnknownFunctionPointerType *_field1;
    unsigned int _field2;
    unsigned int _field3;
    int _field4;
    void *_field5;
    _Bool _field6;
    unsigned int _field7;
    _Bool _field8;
    double _field9;
    double _field10;
    double _field11;
    double _field12;
};

struct ActionManager;

struct AppDelegate {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
};

struct Arena;

struct ArenaStringPtr {
    basic_string_7c0a1c0b *_field1;
};

struct AspectTransform;

struct AudioBuffer {
    unsigned int _field1;
    unsigned int _field2;
    void *_field3;
};

struct AudioBufferList {
    unsigned int _field1;
    struct AudioBuffer _field2[1];
};

struct AudioComponentDescription {
    unsigned int componentType;
    unsigned int componentSubType;
    unsigned int componentManufacturer;
    unsigned int componentFlags;
    unsigned int componentFlagsMask;
};

struct AudioStreamBasicDescription {
    double mSampleRate;
    unsigned int mFormatID;
    unsigned int mFormatFlags;
    unsigned int mBytesPerPacket;
    unsigned int mFramesPerPacket;
    unsigned int mBytesPerFrame;
    unsigned int mChannelsPerFrame;
    unsigned int mBitsPerChannel;
    unsigned int mReserved;
};

struct AudioStreamPacketDescription {
    long long _field1;
    unsigned int _field2;
    unsigned int _field3;
};

struct AudioTimeStamp {
    double mSampleTime;
    unsigned long long mHostTime;
    double mRateScalar;
    unsigned long long mWordClockTime;
    struct SMPTETime mSMPTETime;
    unsigned int mFlags;
    unsigned int mReserved;
};

struct AuthChallengeInfo {
    long long _field1;
    _Bool _field2;
    struct Origin _field3;
    basic_string_7c0a1c0b _field4;
    basic_string_7c0a1c0b _field5;
};

struct AuthCredentials {
    struct basic_string<unsigned short, base::string16_char_traits, std::__1::allocator<unsigned short>> _field1;
    struct basic_string<unsigned short, base::string16_char_traits, std::__1::allocator<unsigned short>> _field2;
};

struct BindStateBase;

struct CATransform3D {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
    double _field5;
    double _field6;
    double _field7;
    double _field8;
    double _field9;
    double _field10;
    double _field11;
    double _field12;
    double _field13;
    double _field14;
    double _field15;
    double _field16;
};

struct CC_SHA256state_st {
    unsigned int _field1[2];
    unsigned int _field2[8];
    unsigned int _field3[16];
};

struct CGAffineTransform {
    double a;
    double b;
    double c;
    double d;
    double tx;
    double ty;
};

struct CGColor;

struct CGPoint {
    double x;
    double y;
};

struct CGRect {
    struct CGPoint origin;
    struct CGSize size;
};

struct CGSize {
    double width;
    double height;
};

struct CGVector {
    double _field1;
    double _field2;
};

struct CLLocationCoordinate2D {
    double latitude;
    double longitude;
};

struct CLSMachOFile {
    int fd;
    unsigned long long mappedSize;
    void *mappedFile;
};

struct CLSMachOSlice {
    void *startAddress;
    int cputype;
    int cpusubtype;
};

struct Callback<void (bool, const std::__1::basic_string<base::char16, base::string16_char_traits>&, const std::__1::basic_string<base::char16, base::string16_char_traits>&), base::internal::CopyMode::Copyable, base::internal::RepeatMode::Repeating> {
    struct scoped_refptr<base::internal::BindStateBase> _field1;
};

struct Callback<void (int), base::internal::CopyMode::Copyable, base::internal::RepeatMode::Repeating> {
    struct scoped_refptr<base::internal::BindStateBase> _field1;
};

struct CallbackObject;

struct Camera;

struct CertVerifier;

struct Color3B {
    unsigned char _field1;
    unsigned char _field2;
    unsigned char _field3;
};

struct Component {
    int _field1;
    int _field2;
};

struct ComponentContainer;

struct ConnectTiming {
    struct TimeTicks _field1;
    struct TimeTicks _field2;
    struct TimeTicks _field3;
    struct TimeTicks _field4;
    struct TimeTicks _field5;
    struct TimeTicks _field6;
};

struct ConnectionParams;

struct CookieStore;

struct CronetEnvironment {
    _Bool _field1;
    _Bool _field2;
    basic_string_7c0a1c0b _field3;
    basic_string_7c0a1c0b _field4;
    basic_string_7c0a1c0b _field5;
    int _field6;
    struct list<net::HostPortPair, std::__1::allocator<net::HostPortPair>> _field7;
    struct unique_ptr<base::Thread, std::__1::default_delete<base::Thread>> _field8;
    struct unique_ptr<base::Thread, std::__1::default_delete<base::Thread>> _field9;
    struct unique_ptr<base::Thread, std::__1::default_delete<base::Thread>> _field10;
    struct unique_ptr<base::Thread, std::__1::default_delete<base::Thread>> _field11;
    struct scoped_refptr<base::SequencedTaskRunner> _field12;
    struct unique_ptr<net::CertVerifier, std::__1::default_delete<net::CertVerifier>> _field13;
    struct unique_ptr<net::CookieStore, std::__1::default_delete<net::CookieStore>> _field14;
    struct unique_ptr<net::URLRequestContext, std::__1::default_delete<net::URLRequestContext>> _field15;
    struct scoped_refptr<net::URLRequestContextGetter> _field16;
    basic_string_7c0a1c0b _field17;
    _Bool _field18;
    struct unique_ptr<net::NetLog, std::__1::default_delete<net::NetLog>> _field19;
    struct unique_ptr<net::WriteToFileNetLogObserver, std::__1::default_delete<net::WriteToFileNetLogObserver>> _field20;
    _Bool _field21;
    _Bool _field22;
    struct TTNetworkDelegate *_field23;
    struct unique_ptr<net::ProxyConfigService, std::__1::default_delete<net::ProxyConfigService>> _field24;
    struct unique_ptr<base::PowerMonitor, std::__1::default_delete<base::PowerMonitor>> _field25;
    int _field26;
};

struct DSPSplitComplex {
    float *realp;
    float *imagp;
};

struct DanmakuMessage {
    CDUnknownFunctionPointerType *_field1;
    unsigned int _field2;
    unsigned int _field3;
    int _field4;
    void *_field5;
    _Bool _field6;
    unsigned int _field7;
    _Bool _field8;
    long long _field9;
    basic_string_7c0a1c0b _field10;
    int _field11;
    struct UserInfo *_field12;
};

struct Delegate;

struct DiggMessage {
    CDUnknownFunctionPointerType *_field1;
    unsigned int _field2;
    unsigned int _field3;
    int _field4;
    void *_field5;
    _Bool _field6;
    unsigned int _field7;
    _Bool _field8;
    long long _field9;
    unsigned int _field10;
};

struct Director;

struct EventDispatcher;

struct EventListenerTouchOneByOne;

struct Flag;

struct Frame {
    CDUnknownFunctionPointerType *_field1;
    struct ArenaStringPtr _field2;
    struct Arena *_field3;
    unsigned int _field4[1];
    int _field5;
    unsigned long long _field6;
    unsigned long long _field7;
    int _field8;
    int _field9;
    struct RepeatedPtrField<pbbp2::Frame_ExtendedEntry> _field10;
    struct ArenaStringPtr _field11;
    struct ArenaStringPtr _field12;
    struct ArenaStringPtr _field13;
};

struct GLProgramState;

struct GPBCodedInputStreamState {
    char *bytes;
    unsigned long long bufferSize;
    unsigned long long bufferPos;
    unsigned long long currentLimit;
    int lastTag;
    unsigned long long recursionDepth;
};

struct GPBExtensionDescription {
    CDUnion_88782d86 _field1;
    char *_field2;
    char *_field3;
    char *_field4;
    CDUnknownFunctionPointerType _field5;
    int _field6;
    unsigned char _field7;
    unsigned char _field8;
};

struct GPBExtensionRange {
    unsigned int _field1;
    unsigned int _field2;
};

struct GPBMessageFieldDescription {
    char *_field1;
    union {
        char *_field1;
        CDUnknownFunctionPointerType _field2;
        CDUnknownFunctionPointerType _field3;
    } _field2;
    unsigned int _field3;
    int _field4;
    unsigned int _field5;
    unsigned short _field6;
    unsigned char _field7;
};

struct GPBMessage_Storage {
    unsigned int _field1[0];
};

struct GPBOutputBufferState {
    char *bytes;
    unsigned long long size;
    unsigned long long position;
    NSOutputStream *output;
};

struct GPUByteColorVector {
    unsigned char _field1;
    unsigned char _field2;
    unsigned char _field3;
    unsigned char _field4;
};

struct GURL {
    basic_string_7c0a1c0b _field1;
    _Bool _field2;
    struct Parsed _field3;
    struct unique_ptr<GURL, std::__1::default_delete<GURL>> _field4;
};

struct GestureGiftMessage {
    CDUnknownFunctionPointerType *_field1;
    unsigned int _field2;
    unsigned int _field3;
    int _field4;
    void *_field5;
    _Bool _field6;
    unsigned int _field7;
    _Bool _field8;
    long long _field9;
    struct UserInfo *_field10;
    struct UserInfo *_field11;
    basic_string_7c0a1c0b _field12;
    float _field13;
    float _field14;
    struct Vector<live::GestureGiftPoint *> _field15;
};

struct GestureGiftPoint;

struct GiftMessage {
    CDUnknownFunctionPointerType *_field1;
    unsigned int _field2;
    unsigned int _field3;
    int _field4;
    void *_field5;
    _Bool _field6;
    unsigned int _field7;
    _Bool _field8;
    long long _field9;
    int _field10;
    int _field11;
    basic_string_7c0a1c0b _field12;
    basic_string_7c0a1c0b _field13;
    basic_string_7c0a1c0b _field14;
    _Bool _field15;
    struct UserInfo *_field16;
    struct UserInfo *_field17;
    int _field18;
    _Bool _field19;
    basic_string_7c0a1c0b _field20;
    basic_string_7c0a1c0b _field21;
    _Bool _field22;
};

struct HTSCROPRECT {
    double xPos;
    double yPos;
    double xScale;
    double yScale;
};

struct HTSGPUMatrix3x3 {
    struct HTSGPUVector3 _field1;
    struct HTSGPUVector3 _field2;
    struct HTSGPUVector3 _field3;
};

struct HTSGPUMatrix4x4 {
    struct HTSGPUVector4 _field1;
    struct HTSGPUVector4 _field2;
    struct HTSGPUVector4 _field3;
    struct HTSGPUVector4 _field4;
};

struct HTSGPUTextureOptions {
    unsigned int minFilter;
    unsigned int magFilter;
    unsigned int wrapS;
    unsigned int wrapT;
    unsigned int internalFormat;
    unsigned int format;
    unsigned int type;
};

struct HTSGPUVector3 {
    float _field1;
    float _field2;
    float _field3;
};

struct HTSGPUVector4 {
    float _field1;
    float _field2;
    float _field3;
    float _field4;
};

struct HashValue;

struct HeaderKeyValuePair;

struct HostPortPair {
    basic_string_7c0a1c0b _field1;
    unsigned short _field2;
};

struct HttpProtocolHandlerCore {
    CDUnknownFunctionPointerType *_field1;
    long long _field2;
    struct ThreadChecker _field3;
    id _field4;
    struct scoped_refptr<net::IOBuffer> _field5;
    struct scoped_nsobject<NSMutableURLRequest> _field6;
    struct scoped_nsobject<CRWHTTPStreamDelegate> _field7;
    struct vector<std::__1::unique_ptr<net::UploadElementReader, std::__1::default_delete<net::UploadElementReader>>, std::__1::allocator<std::__1::unique_ptr<net::UploadElementReader, std::__1::default_delete<net::UploadElementReader>>>> _field8;
    struct URLRequest *_field9;
    struct WeakPtr<net::RequestTracker> _field10;
};

struct HttpRequestHeaders {
    struct vector<net::HttpRequestHeaders::HeaderKeyValuePair, std::__1::allocator<net::HttpRequestHeaders::HeaderKeyValuePair>> _field1;
};

struct HttpResponseHeaders;

struct HttpResponseInfo {
    _Bool _field1;
    int _field2;
    _Bool _field3;
    _Bool _field4;
    _Bool _field5;
    _Bool _field6;
    _Bool _field7;
    struct ProxyServer _field8;
    _Bool _field9;
    _Bool _field10;
    _Bool _field11;
    struct HostPortPair _field12;
    basic_string_7c0a1c0b _field13;
    int _field14;
    struct Time _field15;
    struct Time _field16;
    struct scoped_refptr<net::AuthChallengeInfo> _field17;
    struct scoped_refptr<net::SSLCertRequestInfo> _field18;
    struct SSLInfo _field19;
    struct scoped_refptr<net::HttpResponseHeaders> _field20;
    struct HttpVaryData _field21;
    struct scoped_refptr<net::IOBufferWithSize> _field22;
};

struct HttpVaryData {
    struct MD5Digest _field1;
    _Bool _field2;
};

struct IAudioMixer;

struct ICMPHeader {
    unsigned char _field1;
    unsigned char _field2;
    unsigned short _field3;
    unsigned short _field4;
    unsigned short _field5;
};

struct IESIndensityParam_t {
    float indensity;
    float smoothIndensity;
    float whiteIndensity;
};

struct IOBuffer;

struct IOBufferWithSize;

struct IOutput;

struct IOutputSession;

struct ITransform;

struct IVideoMixer;

struct LOT_Subpath {
    int _field1;
    double _field2;
    struct CGPoint _field3;
    struct CGPoint _field4;
    struct CGPoint _field5;
    struct LOT_Subpath *_field6;
};

struct LeakTracker<net::URLRequest>;

struct LoadTimingInfo {
    _Bool _field1;
    unsigned int _field2;
    struct Time _field3;
    struct TimeTicks _field4;
    struct TimeTicks _field5;
    struct TimeTicks _field6;
    struct ConnectTiming _field7;
    struct TimeTicks _field8;
    struct TimeTicks _field9;
    struct TimeTicks _field10;
    struct TimeTicks _field11;
    struct TimeTicks _field12;
};

struct MD5Digest {
    unsigned char _field1[16];
};

struct Map<int, cocos2d::ui::LayoutParameter *> {
    struct unordered_map<int, cocos2d::ui::LayoutParameter *, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, cocos2d::ui::LayoutParameter *>>> _field1;
};

struct Mat4 {
    float _field1[16];
};

struct MediaWriter {
    CDUnknownFunctionPointerType *_field1;
    CDUnknownFunctionPointerType *_field2;
    int _field3;
    int _field4;
    int _field5;
    int _field6;
    _Bool _field7;
    char *_field8;
    struct AVSource *_field9;
    struct AVHandler *_field10;
    CDUnknownFunctionPointerType *_field11;
    CDUnknownFunctionPointerType *_field12;
    void *_field13;
    CDUnknownFunctionPointerType _field14;
    CDUnknownFunctionPointerType _field15;
    struct AVHandler *_field16;
    struct AVLooper *_field17;
    struct AVSource *_field18[3];
    struct AVSource *_field19[3];
    struct AVSource *_field20;
    char *_field21[3];
    char *_field22;
    int _field23[3];
    int _field24[3];
    struct AVRationalN _field25;
    int _field26;
    int _field27;
    int _field28;
    int _field29;
    int _field30;
    int _field31[4];
};

struct MetalRender {
    CDUnknownFunctionPointerType *_field1;
    CDUnknownFunctionPointerType *_field2;
    int _field3;
    int _field4;
    int _field5;
    int _field6;
    _Bool _field7;
    char *_field8;
    struct AVSource *_field9;
    struct AVHandler *_field10;
    struct AVWindow *_field11;
    int _field12;
    int _field13;
    int _field14;
    int _field15;
    int _field16;
    int _field17;
    int _field18;
    int _field19[8];
    int _field20;
    int _field21;
    _Bool _field22;
    int _field23;
    int _field24;
    int _field25;
    int _field26;
    float _field27;
    id _field28;
    id _field29;
    id _field30;
    id _field31;
    id _field32;
    id _field33;
    id _field34;
    id _field35;
    id _field36;
    struct __CVMetalTextureCache *_field37;
    id _field38[9];
    id _field39[3];
    struct {
        double _field1;
        double _field2;
        double _field3;
        double _field4;
        double _field5;
        double _field6;
    } _field40;
    struct __CVBuffer *_field41[3];
    struct _opaque_pthread_mutex_t _field42;
    struct _opaque_pthread_cond_t _field43;
};

struct MicSource {
    CDUnknownFunctionPointerType *_field1;
    struct weak_ptr<videocore::iOS::MicSource> _field2;
    id _field3;
    struct OpaqueAudioComponentInstance *_field4;
    struct OpaqueAudioComponent *_field5;
    double _field6;
    int _field7;
    struct weak_ptr<videocore::IOutput> _field8;
};

struct ModuleData;

struct NSDictionary {
    Class _field1;
};

struct NSMutableArray {
    Class _field1;
};

struct NSMutableDictionary {
    Class _field1;
};

struct NSURL {
    Class _field1;
    id _field2;
    id _field3;
    void *_field4;
    void *_field5;
};

struct NativeRefreshScheduler {
    CDUnknownFunctionPointerType *_field1;
    unsigned int _field2;
    unsigned int _field3;
    int _field4;
    void *_field5;
    _Bool _field6;
    unsigned int _field7;
    _Bool _field8;
    CDUnknownBlockType _field9;
};

struct NetLog;

struct NetLogSource {
    int _field1;
    unsigned int _field2;
};

struct NetLogWithSource {
    struct NetLogSource _field1;
    struct NetLog *_field2;
    int _field3;
};

struct NetworkDelegate;

struct Node;

struct OCSPVerifyResult {
    int _field1;
    int _field2;
};

struct OpaqueAudioComponent;

struct OpaqueAudioComponentInstance;

struct OpaqueAudioFileID;

struct Optional<url::Origin> {
    struct OptionalStorage<url::Origin, false> _field1;
};

struct OptionalStorage<url::Origin, false> {
    _Bool _field1;
    union {
        char _field1;
        struct Origin _field2;
    } _field2;
};

struct Origin {
    struct SchemeHostPort _field1;
    _Bool _field2;
    basic_string_7c0a1c0b _field3;
};

struct PCMWriter {
    CDUnknownFunctionPointerType *_field1;
    CDUnknownFunctionPointerType *_field2;
    int _field3;
    int _field4;
    int _field5;
    int _field6;
    _Bool _field7;
    char *_field8;
    struct AVSource *_field9;
    struct AVHandler *_field10;
    CDUnknownFunctionPointerType *_field11;
    int _field12;
    int _field13;
    struct AVQueue<com::ss::ttm::AVBuffer *> _field14;
    struct AVStack<com::ss::ttm::AVBuffer *> _field15;
    struct AVThread _field16;
    _Bool _field17;
    struct __sFILE *_field18;
    char *_field19;
    struct AVFilter *_field20;
    int _field21;
    int _field22;
    int _field23;
    int _field24;
    int _field25;
};

struct Parsed {
    struct Component _field1;
    struct Component _field2;
    struct Component _field3;
    struct Component _field4;
    struct Component _field5;
    struct Component _field6;
    struct Component _field7;
    struct Component _field8;
    _Bool _field9;
    struct Parsed *_field10;
};

struct PixelBufferOutput;

struct PixelBufferSource;

struct PositionTransform;

struct PowerMonitor;

struct ProxyConfigService;

struct ProxyServer {
    int _field1;
    struct HostPortPair _field2;
};

struct PushManager;

struct PushObserver;

struct Quaternion {
    float _field1;
    float _field2;
    float _field3;
    float _field4;
};

struct RCTJSCWrapper {
    CDUnknownFunctionPointerType _field1;
    CDUnknownFunctionPointerType _field2;
    CDUnknownFunctionPointerType _field3;
    CDUnknownFunctionPointerType _field4;
    CDUnknownFunctionPointerType _field5;
    CDUnknownFunctionPointerType _field6;
    CDUnknownFunctionPointerType _field7;
    CDUnknownFunctionPointerType _field8;
    CDUnknownFunctionPointerType _field9;
    CDUnknownFunctionPointerType _field10;
    CDUnknownFunctionPointerType _field11;
    CDUnknownFunctionPointerType _field12;
    CDUnknownFunctionPointerType _field13;
    CDUnknownFunctionPointerType _field14;
    Class _field15;
    Class _field16;
};

struct RCTJSContextData {
    _Bool _field1;
    id _field2;
    id _field3;
    struct RCTJSCWrapper *_field4;
};

struct RandomAccessBundleData {
    struct unique_ptr<__sFILE, int (*)(__sFILE *)> bundle;
    unsigned long long baseOffset;
    unsigned long long numTableEntries;
    struct unique_ptr<ModuleData [], std::__1::default_delete<ModuleData []>> table;
};

struct Ref;

struct RenderMsgReceiver {
    CDUnknownFunctionPointerType *_field1;
    id _field2;
};

struct Rep;

struct RepeatedPtrField<pbbp2::Frame_ExtendedEntry> {
    struct Arena *_field1;
    int _field2;
    int _field3;
    struct Rep *_field4;
};

struct RequestTracker;

struct SMPTETime {
    short mSubframes;
    short mSubframeDivisor;
    unsigned int mCounter;
    unsigned int mType;
    unsigned int mFlags;
    short mHours;
    short mMinutes;
    short mSeconds;
    short mFrames;
};

struct SSLCertRequestInfo;

struct SSLInfo {
    struct scoped_refptr<net::X509Certificate> _field1;
    struct scoped_refptr<net::X509Certificate> _field2;
    unsigned int _field3;
    int _field4;
    unsigned short _field5;
    int _field6;
    _Bool _field7;
    _Bool _field8;
    _Bool _field9;
    _Bool _field10;
    _Bool _field11;
    int _field12;
    int _field13;
    struct vector<net::HashValue, std::__1::allocator<net::HashValue>> _field14;
    basic_string_7c0a1c0b _field15;
    struct vector<net::SignedCertificateTimestampAndStatus, std::__1::allocator<net::SignedCertificateTimestampAndStatus>> _field16;
    _Bool _field17;
    int _field18;
    int _field19;
    struct OCSPVerifyResult _field20;
};

struct Scheduler;

struct SchemeHostPort {
    basic_string_7c0a1c0b _field1;
    basic_string_7c0a1c0b _field2;
    unsigned short _field3;
};

struct SequenceChecker;

struct SequencedTaskRunner;

struct SignedCertificateTimestampAndStatus;

struct Size {
    float _field1;
    float _field2;
};

struct Split;

struct StreamSession {
    CDUnknownFunctionPointerType *_field1;
    void *_field2;
    void *_field3;
    void *_field4;
    void *_field5;
    struct function<void (videocore::IStreamSession &, long, int)> _field6;
    long long _field7;
    basic_string_7c0a1c0b _field8;
    int _field9;
};

struct TTAudioSource {
    CDUnknownFunctionPointerType *_field1;
    struct weak_ptr<videocore::iOS::TTAudioSource> _field2;
    id _field3;
    struct OpaqueAudioComponentInstance *_field4;
    struct OpaqueAudioComponent *_field5;
    double _field6;
    int _field7;
    struct weak_ptr<videocore::IOutput> _field8;
};

struct TTFetcherDelegate;

struct TTNetworkDelegate;

struct TTVideoSource;

struct Thread;

struct ThreadChecker;

struct Time {
    long long us_;
};

struct TimeTicks {
    long long _field1;
};

struct UIColor {
    Class _field1;
};

struct UIEdgeInsets {
    double top;
    double left;
    double bottom;
    double right;
};

struct UIOffset {
    double horizontal;
    double vertical;
};

struct UIView {
    Class _field1;
};

struct URLFetcher {
    CDUnknownFunctionPointerType *_field1;
};

struct URLRequest {
    CDUnknownFunctionPointerType *_field1;
    struct map<const void *, std::__1::unique_ptr<base::SupportsUserData::Data, std::__1::default_delete<base::SupportsUserData::Data>>, std::__1::less<const void *>, std::__1::allocator<std::__1::pair<const void *const, std::__1::unique_ptr<base::SupportsUserData::Data, std::__1::default_delete<base::SupportsUserData::Data>>>>> _field2;
    struct SequenceChecker _field3;
    struct URLRequestContext *_field4;
    struct NetworkDelegate *_field5;
    struct NetLogWithSource _field6;
    struct unique_ptr<net::URLRequestJob, std::__1::default_delete<net::URLRequestJob>> _field7;
    struct unique_ptr<net::UploadDataStream, std::__1::default_delete<net::UploadDataStream>> _field8;
    struct vector<GURL, std::__1::allocator<GURL>> _field9;
    struct GURL _field10;
    struct Optional<url::Origin> _field11;
    struct GURL _field12;
    basic_string_7c0a1c0b _field13;
    basic_string_7c0a1c0b _field14;
    int _field15;
    basic_string_7c0a1c0b _field16;
    int _field17;
    struct HttpRequestHeaders _field18;
    int _field19;
    struct Delegate *_field20;
    struct URLRequestStatus _field21;
    struct HttpResponseInfo _field22;
    _Bool _field23;
    _Bool _field24;
    int _field25;
    struct UploadProgress _field26;
    int _field27;
    unsigned long long _field28;
    _Bool _field29;
    basic_string_7c0a1c0b _field30;
    _Bool _field31;
    struct LeakTracker<net::URLRequest> _field32;
    struct Callback<void (int), base::internal::CopyMode::Copyable, base::internal::RepeatMode::Repeating> _field33;
    _Bool _field34;
    struct AuthCredentials _field35;
    struct scoped_refptr<net::AuthChallengeInfo> _field36;
    long long _field37;
    struct TimeTicks _field38;
    struct LoadTimingInfo _field39;
    struct ProxyServer _field40;
    int _field41;
    _Bool _field42;
};

struct URLRequestContext;

struct URLRequestContextGetter;

struct URLRequestJob;

struct URLRequestStatus {
    int _field1;
    int _field2;
};

struct UploadDataStream;

struct UploadProgress {
    unsigned long long _field1;
    unsigned long long _field2;
};

struct UserEnterMessage {
    CDUnknownFunctionPointerType *_field1;
    unsigned int _field2;
    unsigned int _field3;
    int _field4;
    void *_field5;
    _Bool _field6;
    unsigned int _field7;
    _Bool _field8;
    long long _field9;
    int _field10;
    struct UserInfo *_field11;
    basic_string_7c0a1c0b _field12;
};

struct UserInfo {
    CDUnknownFunctionPointerType *_field1;
    unsigned int _field2;
    unsigned int _field3;
    int _field4;
    void *_field5;
    _Bool _field6;
    unsigned int _field7;
    _Bool _field8;
    long long _field9;
    basic_string_7c0a1c0b _field10;
    basic_string_7c0a1c0b _field11;
    basic_string_7c0a1c0b _field12;
    basic_string_7c0a1c0b _field13;
    basic_string_7c0a1c0b _field14;
    int _field15;
    long long _field16;
};

struct Vec2 {
    float _field1;
    float _field2;
};

struct Vector<cocos2d::Node *> {
    struct vector<cocos2d::Node *, std::__1::allocator<cocos2d::Node *>> _field1;
};

struct Vector<live::GestureGiftPoint *> {
    struct vector<live::GestureGiftPoint *, std::__1::allocator<live::GestureGiftPoint *>> _field1;
};

struct VideoPlayer {
    CDUnknownFunctionPointerType *_field1;
    unsigned int _field2;
    unsigned int _field3;
    int _field4;
    void *_field5;
    _Bool _field6;
    unsigned int _field7;
    _Bool _field8;
    float _field9;
    float _field10;
    float _field11;
    float _field12;
    struct Quaternion _field13;
    float _field14;
    float _field15;
    float _field16;
    struct Vec2 _field17;
    float _field18;
    struct Vec2 _field19;
    _Bool _field20;
    _Bool _field21;
    float _field22;
    float _field23;
    struct Vec2 _field24;
    struct Vec2 _field25;
    struct Size _field26;
    _Bool _field27;
    struct Mat4 _field28;
    struct Mat4 _field29;
    _Bool _field30;
    struct Mat4 _field31;
    _Bool _field32;
    struct Mat4 _field33;
    _Bool _field34;
    _Bool _field35;
    int _field36;
    float _field37;
    struct Vector<cocos2d::Node *> _field38;
    struct Node *_field39;
    struct Director *_field40;
    int _field41;
    basic_string_7c0a1c0b _field42;
    unsigned long long _field43;
    void *_field44;
    struct Ref *_field45;
    struct GLProgramState *_field46;
    int _field47;
    struct Scheduler *_field48;
    struct ActionManager *_field49;
    struct EventDispatcher *_field50;
    _Bool _field51;
    _Bool _field52;
    _Bool _field53;
    _Bool _field54;
    _Bool _field55;
    int _field56;
    int _field57;
    int _field58;
    struct ComponentContainer *_field59;
    unsigned char _field60;
    unsigned char _field61;
    struct Color3B _field62;
    struct Color3B _field63;
    _Bool _field64;
    _Bool _field65;
    unsigned short _field66;
    struct function<void ()> _field67;
    struct function<void ()> _field68;
    struct function<void ()> _field69;
    struct function<void ()> _field70;
    struct Vector<cocos2d::Node *> _field71;
    _Bool _field72;
    CDUnknownFunctionPointerType *_field73;
    struct function<void (cocos2d::ui::Widget *, cocos2d::ui::Widget *)> _field74;
    struct function<cocos2d::ui::Widget *(cocos2d::ui::Widget::FocusDirection)> _field75;
    _Bool _field76;
    _Bool _field77;
    _Bool _field78;
    _Bool _field79;
    _Bool _field80;
    _Bool _field81;
    _Bool _field82;
    _Bool _field83;
    _Bool _field84;
    int _field85;
    int _field86;
    int _field87;
    int _field88;
    struct Size _field89;
    struct Vec2 _field90;
    struct Vec2 _field91;
    _Bool _field92;
    struct Camera *_field93;
    struct EventListenerTouchOneByOne *_field94;
    struct Vec2 _field95;
    struct Vec2 _field96;
    struct Vec2 _field97;
    _Bool _field98;
    _Bool _field99;
    struct Map<int, cocos2d::ui::LayoutParameter *> _field100;
    int _field101;
    _Bool _field102;
    _Bool _field103;
    struct Ref *_field104;
    struct function<void (cocos2d::Ref *, cocos2d::ui::Widget::TouchEventType)> _field105;
    struct function<void (cocos2d::Ref *)> _field106;
    struct function<void (cocos2d::Ref *, int)> _field107;
    basic_string_7c0a1c0b _field108;
    basic_string_7c0a1c0b _field109;
    _Bool _field110;
    _Bool _field111;
    _Bool _field112;
    _Bool _field113;
    basic_string_7c0a1c0b _field114;
    int _field115;
    int _field116;
    struct function<void (cocos2d::Ref *, cocos2d::experimental::ui::VideoPlayer::EventType)> _field117;
    void *_field118;
};

struct WBSDKJKConstBuffer {
    struct WBSDKJKConstPtrRange _field1;
};

struct WBSDKJKConstPtrRange {
    char *_field1;
    unsigned long long _field2;
};

struct WBSDKJKEncodeCache {
    id _field1;
    unsigned long long _field2;
    unsigned long long _field3;
};

struct WBSDKJKEncodeState {
    struct WBSDKJKManagedBuffer _field1;
    struct WBSDKJKManagedBuffer _field2;
    unsigned long long _field3;
    struct WBSDKJKFastClassLookup _field4;
    struct WBSDKJKEncodeCache _field5[1024];
    unsigned long long _field6;
    unsigned long long _field7;
    unsigned long long _field8;
    id _field9;
    id _field10;
    SEL _field11;
    CDUnknownFunctionPointerType _field12;
    CDUnknownBlockType _field13;
};

struct WBSDKJKFastClassLookup {
    void *_field1;
    void *_field2;
    void *_field3;
    void *_field4;
    void *_field5;
};

struct WBSDKJKHashTableEntry {
    unsigned long long _field1;
    id _field2;
    id _field3;
};

struct WBSDKJKManagedBuffer {
    struct WBSDKJKPtrRange _field1;
    unsigned long long _field2;
    unsigned long long _field3;
};

struct WBSDKJKObjCImpCache {
    Class _field1;
    CDUnknownFunctionPointerType _field2;
    CDUnknownFunctionPointerType _field3;
};

struct WBSDKJKObjectStack {
    void **_field1;
    void **_field2;
    unsigned long long *_field3;
    unsigned long long _field4;
    unsigned long long _field5;
    unsigned long long _field6;
    unsigned long long _field7;
};

struct WBSDKJKParseState {
    unsigned long long _field1;
    struct WBSDKJKConstBuffer _field2;
    unsigned long long _field3;
    unsigned long long _field4;
    unsigned long long _field5;
    unsigned long long _field6;
    unsigned long long _field7;
    unsigned long long _field8;
    struct WBSDKJKParseToken _field9;
    struct WBSDKJKObjectStack _field10;
    struct WBSDKJKTokenCache _field11;
    struct WBSDKJKObjCImpCache _field12;
    id _field13;
    int _field14;
    _Bool _field15;
};

struct WBSDKJKParseToken {
    struct WBSDKJKConstPtrRange _field1;
    unsigned long long _field2;
    struct WBSDKJKTokenValue _field3;
    struct WBSDKJKManagedBuffer _field4;
};

struct WBSDKJKPtrRange {
    char *_field1;
    unsigned long long _field2;
};

struct WBSDKJKTokenCache {
    struct WBSDKJKTokenCacheItem *_field1;
    unsigned long long _field2;
    unsigned int _field3;
    unsigned char _field4[1024];
};

struct WBSDKJKTokenCacheItem;

struct WBSDKJKTokenValue {
    struct WBSDKJKConstPtrRange _field1;
    unsigned long long _field2;
    unsigned long long _field3;
    union {
        long long _field1;
        unsigned long long _field2;
        double _field3;
    } _field4;
    struct WBSDKJKTokenCacheItem *_field5;
};

struct WeakContainer;

struct WeakPtr<net::RequestTracker> {
    struct WeakReference _field1;
    struct RequestTracker *_field2;
};

struct WeakReference {
    struct scoped_refptr<const base::internal::WeakReference::Flag> _field1;
};

struct WebPData {
    char *_field1;
    unsigned long long _field2;
};

struct WebPIterator {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
    int _field5;
    int _field6;
    int _field7;
    int _field8;
    int _field9;
    struct WebPData _field10;
    int _field11;
    int _field12;
    unsigned int _field13[2];
    void *_field14;
};

struct WriteToFileNetLogObserver;

struct X509Certificate;

struct YGValue {
    float _field1;
    int _field2;
};

struct YUVCapture {
    CDUnknownFunctionPointerType *_field1;
    CDUnknownFunctionPointerType *_field2;
    int _field3;
    int _field4;
    int _field5;
    int _field6;
    _Bool _field7;
    char *_field8;
    struct AVSource *_field9;
    struct AVHandler *_field10;
    void *_field11;
    CDUnknownFunctionPointerType _field12;
};

struct YUVWriter {
    CDUnknownFunctionPointerType *_field1;
    CDUnknownFunctionPointerType *_field2;
    int _field3;
    int _field4;
    int _field5;
    int _field6;
    _Bool _field7;
    char *_field8;
    struct AVSource *_field9;
    struct AVHandler *_field10;
    CDUnknownFunctionPointerType *_field11;
    int _field12;
    int _field13;
    struct AVQueue<com::ss::ttm::AVBuffer *> _field14;
    struct AVStack<com::ss::ttm::AVBuffer *> _field15;
    struct AVThread _field16;
    _Bool _field17;
    struct __sFILE *_field18;
    char *_field19;
    struct AVFilter *_field20;
    int _field21[4];
    int _field22[4];
    int _field23;
    int _field24;
    int _field25;
    int _field26;
    int _field27;
    struct AVRationalN _field28;
};

struct _FileHashComputationContext {
    CDUnknownFunctionPointerType _field1;
    CDUnknownFunctionPointerType _field2;
    CDUnknownFunctionPointerType _field3;
    unsigned long long _field4;
    char **_field5;
};

struct _IESFileMD5HashComputationContext {
    CDUnknownFunctionPointerType _field1;
    CDUnknownFunctionPointerType _field2;
    CDUnknownFunctionPointerType _field3;
    unsigned long long _field4;
    char **_field5;
};

struct _NSRange {
    unsigned long long location;
    unsigned long long length;
};

struct _RNCryptorKeyDerivationSettings {
    unsigned long long keySize;
    unsigned long long saltSize;
    unsigned int PBKDFAlgorithm;
    unsigned int PRF;
    unsigned int rounds;
    _Bool hasV2Password;
};

struct _RNCryptorSettings {
    unsigned int algorithm;
    unsigned long long blockSize;
    unsigned long long IVSize;
    unsigned int options;
    unsigned int HMACAlgorithm;
    unsigned long long HMACLength;
    struct _RNCryptorKeyDerivationSettings keySettings;
    struct _RNCryptorKeyDerivationSettings HMACKeySettings;
};

struct _TTLFileHashComputationContext {
    CDUnknownFunctionPointerType _field1;
    CDUnknownFunctionPointerType _field2;
    CDUnknownFunctionPointerType _field3;
    unsigned long long _field4;
    char **_field5;
};

struct __audio_level_monitor_t {
    _Bool monitoringEnabled;
    double meanAccumulator;
    double chanMeanAccumulator[16];
    int meanBlockCount;
    int chanMeanBlockCount;
    float chanPeak[16];
    float chanAverage[16];
    float peak;
    float average;
    void *floatConverter;
    struct AudioBufferList *scratchBuffer;
    int channels;
    _Bool reset;
};

struct __callback_table_t {
    int count;
    struct __callback_t {
        void *callback;
        void *userInfo;
        unsigned char flags;
    } callbacks[15];
};

struct __channel_t {
    int _field1;
    void *_field2;
    void *_field3;
    struct _channel_group_t *_field4;
    _Bool _field5;
    float _field6;
    float _field7;
    _Bool _field8;
    struct AudioStreamBasicDescription _field9;
    struct __callback_table_t _field10;
    struct AudioTimeStamp _field11;
    _Bool _field12;
    void *_field13;
    void *_field14;
    void *_field15;
    struct AudioBufferList *_field16;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, cocos2d::ui::LayoutParameter *>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, cocos2d::ui::LayoutParameter *>, void *>*> *_field1;
};

struct __list_node_base<net::HostPortPair, void *> {
    struct __list_node_base<net::HostPortPair, void *> *_field1;
    struct __list_node_base<net::HostPortPair, void *> *_field2;
};

struct __raw {
    unsigned long long _field1[3];
};

struct __sFILE;

struct __shared_weak_count;

struct __tree_end_node<std::__1::__tree_node_base<void *>*> {
    struct __tree_node_base<void *> *__left_;
};

struct _channel_group_t {
    struct __channel_t *_field1;
    int _field2;
    struct OpaqueAudioComponentInstance *_field3;
    struct __channel_t *_field4[100];
    int _field5;
    int _field6;
    struct OpaqueAudioComponentInstance *_field7;
    struct __audio_level_monitor_t _field8;
};

struct _opaque_pthread_cond_t {
    long long __sig;
    char __opaque[40];
};

struct _opaque_pthread_mutex_t {
    long long __sig;
    char __opaque[56];
};

struct _opaque_pthread_t {
    long long _field1;
    struct __darwin_pthread_handler_rec *_field2;
    char _field3[8176];
};

struct _schedule_t {
    void *block;
    void *responseBlock;
    unsigned long long time;
    int context;
    void *identifier;
};

struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
    struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
        struct __rep {
            union {
                struct __long {
                    char *_field1;
                    unsigned long long _field2;
                    unsigned long long _field3;
                } _field1;
                struct __short {
                    char _field1[23];
                    struct {
                        unsigned char _field1;
                    } _field2;
                } _field2;
                struct __raw _field3;
            } _field1;
        } _field1;
    } _field1;
};

struct basic_string<unsigned short, base::string16_char_traits, std::__1::allocator<unsigned short>> {
    struct __compressed_pair<std::__1::basic_string<unsigned short, base::string16_char_traits, std::__1::allocator<unsigned short>>::__rep, std::__1::allocator<unsigned short>> {
        struct __rep {
            union {
                struct __long {
                    unsigned short *_field1;
                    unsigned long long _field2;
                    unsigned long long _field3;
                } _field1;
                struct __short {
                    unsigned short _field1[11];
                    struct {
                        unsigned char _field1[1];
                        unsigned char _field2;
                    } _field2;
                } _field2;
                struct __raw _field3;
            } _field1;
        } _field1;
    } _field1;
};

struct data_segment {
    void *_field1;
    unsigned long long _field2;
    struct data_segment *_field3;
};

struct duration<long long, std::__1::ratio<1, 1000000000>> {
    long long __rep_;
};

struct function<bool (std::__1::basic_string<char>)> {
    struct type __buf_;
    struct __base<bool (std::__1::basic_string<char>)> *__f_;
};

struct function<cocos2d::ui::Widget *(cocos2d::ui::Widget::FocusDirection)> {
    struct type _field1;
    struct __base<cocos2d::ui::Widget *(cocos2d::ui::Widget::FocusDirection)> *_field2;
};

struct function<void ()> {
    struct type _field1;
    struct __base<void ()> *_field2;
};

struct function<void (cocos2d::Ref *)> {
    struct type _field1;
    struct __base<void (cocos2d::Ref *)> *_field2;
};

struct function<void (cocos2d::Ref *, cocos2d::experimental::ui::VideoPlayer::EventType)> {
    struct type _field1;
    struct __base<void (cocos2d::Ref *, cocos2d::experimental::ui::VideoPlayer::EventType)> *_field2;
};

struct function<void (cocos2d::Ref *, cocos2d::ui::Widget::TouchEventType)> {
    struct type _field1;
    struct __base<void (cocos2d::Ref *, cocos2d::ui::Widget::TouchEventType)> *_field2;
};

struct function<void (cocos2d::Ref *, int)> {
    struct type _field1;
    struct __base<void (cocos2d::Ref *, int)> *_field2;
};

struct function<void (cocos2d::ui::Widget *, cocos2d::ui::Widget *)> {
    struct type _field1;
    struct __base<void (cocos2d::ui::Widget *, cocos2d::ui::Widget *)> *_field2;
};

struct function<void (std::__1::basic_string<char>)> {
    struct type __buf_;
    struct __base<void (std::__1::basic_string<char>)> *__f_;
};

struct function<void (videocore::IStreamSession &, long, int)> {
    struct type _field1;
    struct __base<void (videocore::IStreamSession &, long, int)> *_field2;
};

struct in6_addr {
    union {
        unsigned char _field1[16];
        unsigned short _field2[8];
        unsigned int _field3[4];
    } _field1;
};

struct in_addr {
    unsigned int _field1;
};

struct list<net::HostPortPair, std::__1::allocator<net::HostPortPair>> {
    struct __list_node_base<net::HostPortPair, void *> _field1;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<net::HostPortPair, void *>>> {
        unsigned long long _field1;
    } _field2;
};

struct map<const void *, std::__1::unique_ptr<base::SupportsUserData::Data, std::__1::default_delete<base::SupportsUserData::Data>>, std::__1::less<const void *>, std::__1::allocator<std::__1::pair<const void *const, std::__1::unique_ptr<base::SupportsUserData::Data, std::__1::default_delete<base::SupportsUserData::Data>>>>> {
    struct __tree<std::__1::__value_type<const void *, std::__1::unique_ptr<base::SupportsUserData::Data, std::__1::default_delete<base::SupportsUserData::Data>>>, std::__1::__map_value_compare<const void *, std::__1::__value_type<const void *, std::__1::unique_ptr<base::SupportsUserData::Data, std::__1::default_delete<base::SupportsUserData::Data>>>, std::__1::less<const void *>, true>, std::__1::allocator<std::__1::__value_type<const void *, std::__1::unique_ptr<base::SupportsUserData::Data, std::__1::default_delete<base::SupportsUserData::Data>>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<const void *, std::__1::unique_ptr<base::SupportsUserData::Data, std::__1::default_delete<base::SupportsUserData::Data>>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<const void *, std::__1::__value_type<const void *, std::__1::unique_ptr<base::SupportsUserData::Data, std::__1::default_delete<base::SupportsUserData::Data>>>, std::__1::less<const void *>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char>>>>;

struct map<std::__1::basic_string<char>, void *, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, void *>>> {
    struct __tree<std::__1::__value_type<std::__1::basic_string<char>, void *>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, void *>, std::__1::less<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, void *>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, void *>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, void *>, std::__1::less<std::__1::basic_string<char>>, true>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct mutex {
    struct _opaque_pthread_mutex_t __m_;
};

struct objc_method_description {
    SEL _field1;
    char *_field2;
};

struct scoped_nsobject<CRWHTTPStreamDelegate> {
    id _field1;
};

struct scoped_nsobject<NSArray> {
    NSArray *object_;
};

struct scoped_nsobject<NSMutableArray> {
    NSMutableArray *object_;
};

struct scoped_nsobject<NSMutableURLRequest> {
    id _field1;
};

struct scoped_nsobject<NSString> {
    NSString *object_;
};

struct scoped_nsobject<Protocol> {
    Protocol *object_;
};

struct scoped_nsprotocol<Class> {
    Class object_;
};

struct scoped_nsprotocol<id<CRNHTTPProtocolHandlerProxy>> {
    id object_;
};

struct scoped_nsprotocol<id<CRNNetworkClientProtocol>> {
    id object_;
};

struct scoped_refptr<TTFetcherDelegate> {
    struct TTFetcherDelegate *ptr_;
};

struct scoped_refptr<base::SequencedTaskRunner> {
    struct SequencedTaskRunner *_field1;
};

struct scoped_refptr<base::WeakContainer> {
    struct WeakContainer *ptr_;
};

struct scoped_refptr<base::internal::BindStateBase> {
    struct BindStateBase *_field1;
};

struct scoped_refptr<const base::internal::WeakReference::Flag> {
    struct Flag *_field1;
};

struct scoped_refptr<net::AuthChallengeInfo> {
    struct AuthChallengeInfo *_field1;
};

struct scoped_refptr<net::HttpProtocolHandlerCore> {
    struct HttpProtocolHandlerCore *ptr_;
};

struct scoped_refptr<net::HttpResponseHeaders> {
    struct HttpResponseHeaders *_field1;
};

struct scoped_refptr<net::IOBuffer> {
    struct IOBuffer *_field1;
};

struct scoped_refptr<net::IOBufferWithSize> {
    struct IOBufferWithSize *_field1;
};

struct scoped_refptr<net::SSLCertRequestInfo> {
    struct SSLCertRequestInfo *_field1;
};

struct scoped_refptr<net::URLRequestContextGetter> {
    struct URLRequestContextGetter *_field1;
};

struct scoped_refptr<net::X509Certificate> {
    struct X509Certificate *_field1;
};

struct shared_ptr<PushObserver> {
    struct PushObserver *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<com::bytedance::push::CallbackObject> {
    struct CallbackObject *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<com::bytedance::push::PushManager::ConnectionParams> {
    struct ConnectionParams *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<com::bytedance::push::PushManager> {
    struct PushManager *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char>>>>> {
    struct map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char>>>> *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<videocore::Apple::PixelBufferSource> {
    struct PixelBufferSource *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<videocore::AspectTransform> {
    struct AspectTransform *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<videocore::IAudioMixer> {
    struct IAudioMixer *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<videocore::IOutputSession> {
    struct IOutputSession *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<videocore::ITransform> {
    struct ITransform *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<videocore::IVideoMixer> {
    struct IVideoMixer *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<videocore::PositionTransform> {
    struct PositionTransform *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<videocore::Split> {
    struct Split *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<videocore::iOS::MicSource> {
    struct MicSource *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<videocore::iOS::TTAudioSource> {
    struct TTAudioSource *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<videocore::iOS::TTVideoSource> {
    struct TTVideoSource *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<videocore::simpleApi::PixelBufferOutput> {
    struct PixelBufferOutput *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct sockaddr {
    unsigned char _field1;
    unsigned char _field2;
    char _field3[14];
};

struct sockaddr_in {
    unsigned char _field1;
    unsigned char _field2;
    unsigned short _field3;
    struct in_addr _field4;
    char _field5[8];
};

struct sockaddr_in6 {
    unsigned char _field1;
    unsigned char _field2;
    unsigned short _field3;
    unsigned int _field4;
    struct in6_addr _field5;
    unsigned int _field6;
};

struct sockaddr_un {
    unsigned char _field1;
    unsigned char _field2;
    char _field3[104];
};

struct st_image_t {
    char *data;
    int pixel_format;
    int width;
    int height;
    int stride;
    struct st_time_t time_stamp;
};

struct st_mobile_106_t {
    struct st_rect_t rect;
    float score;
    struct st_pointf_t points_array[106];
    float visibility_array[106];
    float yaw;
    float pitch;
    float roll;
    float eye_dist;
    int ID;
};

struct st_mobile_face_action_t {
    struct st_mobile_106_t face;
    unsigned int face_action;
};

struct st_mobile_hand_action_t {
    struct st_rect_t hand;
    struct st_pointi_t key_point;
    float hand_score;
    unsigned int hand_action;
    float hand_action_score;
};

struct st_mobile_human_action_t {
    struct st_mobile_face_action_t faces[10];
    int face_count;
    struct st_mobile_hand_action_t hands[1];
    int hand_count;
    struct st_image_t background;
    int background_result;
};

struct st_pointf_t {
    float x;
    float y;
};

struct st_pointi_t {
    int x;
    int y;
};

struct st_rect_t {
    int left;
    int top;
    int right;
    int bottom;
};

struct st_time_t {
    long long tv_sec;
    long long tv_usec;
};

struct stream_engine {
    void *_field1;
    void *_field2;
};

struct time_point<std::__1::chrono::steady_clock, std::__1::chrono::duration<long long, std::__1::ratio<1, 1000000000>>> {
    struct duration<long long, std::__1::ratio<1, 1000000000>> __d_;
};

struct timeval {
    long long _field1;
    int _field2;
};

struct tm_zip_s {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned int _field6;
};

struct type {
    unsigned char __lx[24];
};

struct unique_ptr<GURL, std::__1::default_delete<GURL>> {
    struct __compressed_pair<GURL *, std::__1::default_delete<GURL>> {
        struct GURL *_field1;
    } _field1;
};

struct unique_ptr<ModuleData [], std::__1::default_delete<ModuleData []>> {
    struct __compressed_pair<ModuleData *, std::__1::default_delete<ModuleData []>> {
        struct ModuleData *__first_;
    } __ptr_;
};

struct unique_ptr<__sFILE, int (*)(__sFILE *)> {
    struct __compressed_pair<__sFILE *, int (*)(__sFILE *)> {
        struct __sFILE *__first_;
        CDUnknownFunctionPointerType __second_;
    } __ptr_;
};

struct unique_ptr<base::PowerMonitor, std::__1::default_delete<base::PowerMonitor>> {
    struct __compressed_pair<base::PowerMonitor *, std::__1::default_delete<base::PowerMonitor>> {
        struct PowerMonitor *_field1;
    } _field1;
};

struct unique_ptr<base::Thread, std::__1::default_delete<base::Thread>> {
    struct __compressed_pair<base::Thread *, std::__1::default_delete<base::Thread>> {
        struct Thread *_field1;
    } _field1;
};

struct unique_ptr<net::CertVerifier, std::__1::default_delete<net::CertVerifier>> {
    struct __compressed_pair<net::CertVerifier *, std::__1::default_delete<net::CertVerifier>> {
        struct CertVerifier *_field1;
    } _field1;
};

struct unique_ptr<net::CookieStore, std::__1::default_delete<net::CookieStore>> {
    struct __compressed_pair<net::CookieStore *, std::__1::default_delete<net::CookieStore>> {
        struct CookieStore *_field1;
    } _field1;
};

struct unique_ptr<net::NetLog, std::__1::default_delete<net::NetLog>> {
    struct __compressed_pair<net::NetLog *, std::__1::default_delete<net::NetLog>> {
        struct NetLog *_field1;
    } _field1;
};

struct unique_ptr<net::ProxyConfigService, std::__1::default_delete<net::ProxyConfigService>> {
    struct __compressed_pair<net::ProxyConfigService *, std::__1::default_delete<net::ProxyConfigService>> {
        struct ProxyConfigService *_field1;
    } _field1;
};

struct unique_ptr<net::URLRequestContext, std::__1::default_delete<net::URLRequestContext>> {
    struct __compressed_pair<net::URLRequestContext *, std::__1::default_delete<net::URLRequestContext>> {
        struct URLRequestContext *_field1;
    } _field1;
};

struct unique_ptr<net::URLRequestJob, std::__1::default_delete<net::URLRequestJob>> {
    struct __compressed_pair<net::URLRequestJob *, std::__1::default_delete<net::URLRequestJob>> {
        struct URLRequestJob *_field1;
    } _field1;
};

struct unique_ptr<net::UploadDataStream, std::__1::default_delete<net::UploadDataStream>> {
    struct __compressed_pair<net::UploadDataStream *, std::__1::default_delete<net::UploadDataStream>> {
        struct UploadDataStream *_field1;
    } _field1;
};

struct unique_ptr<net::UploadElementReader, std::__1::default_delete<net::UploadElementReader>>;

struct unique_ptr<net::WriteToFileNetLogObserver, std::__1::default_delete<net::WriteToFileNetLogObserver>> {
    struct __compressed_pair<net::WriteToFileNetLogObserver *, std::__1::default_delete<net::WriteToFileNetLogObserver>> {
        struct WriteToFileNetLogObserver *_field1;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, cocos2d::ui::LayoutParameter *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, cocos2d::ui::LayoutParameter *>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, cocos2d::ui::LayoutParameter *>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, cocos2d::ui::LayoutParameter *>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, cocos2d::ui::LayoutParameter *>, void *>*> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, cocos2d::ui::LayoutParameter *>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, cocos2d::ui::LayoutParameter *>, void *>*>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unordered_map<int, cocos2d::ui::LayoutParameter *, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, cocos2d::ui::LayoutParameter *>>> {
    struct __hash_table<std::__1::__hash_value_type<int, cocos2d::ui::LayoutParameter *>, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, cocos2d::ui::LayoutParameter *>, std::__1::hash<int>, true>, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, cocos2d::ui::LayoutParameter *>, std::__1::equal_to<int>, true>, std::__1::allocator<std::__1::__hash_value_type<int, cocos2d::ui::LayoutParameter *>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, cocos2d::ui::LayoutParameter *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, cocos2d::ui::LayoutParameter *>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, cocos2d::ui::LayoutParameter *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, cocos2d::ui::LayoutParameter *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, cocos2d::ui::LayoutParameter *>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, cocos2d::ui::LayoutParameter *>, std::__1::hash<int>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, cocos2d::ui::LayoutParameter *>, std::__1::equal_to<int>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct vector<GURL, std::__1::allocator<GURL>> {
    struct GURL *_field1;
    struct GURL *_field2;
    struct __compressed_pair<GURL *, std::__1::allocator<GURL>> {
        struct GURL *_field1;
    } _field3;
};

struct vector<cocos2d::Node *, std::__1::allocator<cocos2d::Node *>> {
    struct Node **_field1;
    struct Node **_field2;
    struct __compressed_pair<cocos2d::Node **, std::__1::allocator<cocos2d::Node *>> {
        struct Node **_field1;
    } _field3;
};

struct vector<id, std::__1::allocator<id>> {
    id *__begin_;
    id *__end_;
    struct __compressed_pair<id *, std::__1::allocator<id>> {
        id *__first_;
    } __end_cap_;
};

struct vector<live::GestureGiftPoint *, std::__1::allocator<live::GestureGiftPoint *>> {
    struct GestureGiftPoint **_field1;
    struct GestureGiftPoint **_field2;
    struct __compressed_pair<live::GestureGiftPoint **, std::__1::allocator<live::GestureGiftPoint *>> {
        struct GestureGiftPoint **_field1;
    } _field3;
};

struct vector<net::HashValue, std::__1::allocator<net::HashValue>> {
    struct HashValue *_field1;
    struct HashValue *_field2;
    struct __compressed_pair<net::HashValue *, std::__1::allocator<net::HashValue>> {
        struct HashValue *_field1;
    } _field3;
};

struct vector<net::HttpRequestHeaders::HeaderKeyValuePair, std::__1::allocator<net::HttpRequestHeaders::HeaderKeyValuePair>> {
    struct HeaderKeyValuePair *_field1;
    struct HeaderKeyValuePair *_field2;
    struct __compressed_pair<net::HttpRequestHeaders::HeaderKeyValuePair *, std::__1::allocator<net::HttpRequestHeaders::HeaderKeyValuePair>> {
        struct HeaderKeyValuePair *_field1;
    } _field3;
};

struct vector<net::SignedCertificateTimestampAndStatus, std::__1::allocator<net::SignedCertificateTimestampAndStatus>> {
    struct SignedCertificateTimestampAndStatus *_field1;
    struct SignedCertificateTimestampAndStatus *_field2;
    struct __compressed_pair<net::SignedCertificateTimestampAndStatus *, std::__1::allocator<net::SignedCertificateTimestampAndStatus>> {
        struct SignedCertificateTimestampAndStatus *_field1;
    } _field3;
};

struct vector<objc_method_description, std::__1::allocator<objc_method_description>> {
    struct objc_method_description *_field1;
    struct objc_method_description *_field2;
    struct __compressed_pair<objc_method_description *, std::__1::allocator<objc_method_description>> {
        struct objc_method_description *_field1;
    } _field3;
};

struct vector<std::__1::unique_ptr<net::UploadElementReader, std::__1::default_delete<net::UploadElementReader>>, std::__1::allocator<std::__1::unique_ptr<net::UploadElementReader, std::__1::default_delete<net::UploadElementReader>>>> {
    struct unique_ptr<net::UploadElementReader, std::__1::default_delete<net::UploadElementReader>> *_field1;
    struct unique_ptr<net::UploadElementReader, std::__1::default_delete<net::UploadElementReader>> *_field2;
    struct __compressed_pair<std::__1::unique_ptr<net::UploadElementReader, std::__1::default_delete<net::UploadElementReader>>*, std::__1::allocator<std::__1::unique_ptr<net::UploadElementReader, std::__1::default_delete<net::UploadElementReader>>>> {
        struct unique_ptr<net::UploadElementReader, std::__1::default_delete<net::UploadElementReader>> *_field1;
    } _field3;
};

struct weak_ptr<videocore::IOutput> {
    struct IOutput *_field1;
    struct __shared_weak_count *_field2;
};

struct weak_ptr<videocore::iOS::MicSource> {
    struct MicSource *_field1;
    struct __shared_weak_count *_field2;
};

struct weak_ptr<videocore::iOS::TTAudioSource> {
    struct TTAudioSource *_field1;
    struct __shared_weak_count *_field2;
};

#if 0
// Names with conflicting types:
typedef struct {
    id _field1;
    id _field2;
    void *_field3;
    void *_field4;
    void *_field5;
} ApApp_41a7cf77;

#endif

#pragma mark Typedef'd Structures

typedef struct {
    _Bool _field1;
    unsigned char _field2;
    _Bool _field3;
    unsigned long long _field4;
} CDStruct_6a6a01a4;

typedef struct {
    unsigned int major;
    unsigned int minor;
    unsigned int bugfix;
} CDStruct_e24ffa00;

typedef struct {
    unsigned long long _field1;
    id *_field2;
    unsigned long long *_field3;
    unsigned long long _field4[5];
} CDStruct_70511ce9;

typedef struct {
    unsigned int ctx[96];
} CDStruct_43cfb2c2;

typedef struct {
    char *_field1;
    void **_field2;
    unsigned int _field3;
    int _field4;
} CDStruct_19471fff;

typedef struct {
    char *_field1;
    char *_field2;
    unsigned int _field3;
    unsigned int _field4;
} CDStruct_4355734a;

typedef struct {
    char *_field1;
    char *_field2;
    int _field3;
    int _field4;
    int _field5;
} CDStruct_0d2672ab;

typedef struct {
    char *_field1;
    void *_field2;
    _Bool _field3;
    void *_field4;
    char *_field5;
    char *_field6;
    char *_field7;
    char *_field8;
    char *_field9;
    unsigned int _field10;
    _Bool _field11;
    _Bool _field12;
    unsigned int _field13;
    unsigned int _field14;
    unsigned int _field15;
    unsigned int _field16;
} CDStruct_1e2a2a70;

typedef struct {
    void *buffer;
    int length;
    int tail;
    int head;
    int fillCount;
    _Bool atomic;
} CDStruct_c5d49230;

typedef struct {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
} CDStruct_d2b197d1;

typedef struct {
    double latitude;
    double longitude;
} CDStruct_2c43369c;

typedef struct {
    long long version;
    void *info;
    CDUnknownFunctionPointerType retain;
    CDUnknownFunctionPointerType release;
    CDUnknownFunctionPointerType copyDescription;
} CDStruct_4210025a;

typedef struct {
    long long value;
    int timescale;
    unsigned int flags;
    long long epoch;
} CDStruct_1b6d18a9;

typedef struct {
    long long _field1;
    int _field2;
} CDStruct_87dc826d;

typedef struct {
    long long _field1;
    long long _field2;
} CDStruct_912cb5d2;

typedef struct CDStruct_183601bc;

typedef struct {
    char _field1[33];
    _Bool _field2;
    CDStruct_e24ffa00 _field3;
    CDStruct_e24ffa00 _field4;
    struct {
        void *_field1;
        unsigned long long _field2;
        void *_field3;
        void *_field4;
        void *_field5;
    } _field5;
    struct CLSMachOSlice _field6;
    long long _field7;
} CDStruct_fad71a87;

typedef struct {
    struct CGColor *_field1;
    struct CGColor *_field2;
    struct CGColor *_field3;
    struct CGColor *_field4;
} CDStruct_a5ac02f4;

typedef struct {
    int _field1;
    CDStruct_183601bc *_field2;
} CDStruct_0552ea46;

typedef struct {
    CDStruct_1b6d18a9 start;
    CDStruct_1b6d18a9 duration;
} CDStruct_e83c9415;

typedef struct {
    struct CLLocationCoordinate2D _field1;
    CDStruct_2c43369c _field2;
} CDStruct_4760c753;

typedef struct {
    struct tm_zip_s _field1;
    unsigned long long _field2;
    unsigned long long _field3;
    unsigned long long _field4;
} CDStruct_192a48cb;

// Template types
typedef struct Callback<void (bool, const std::__1::basic_string<base::char16, base::string16_char_traits>&, const std::__1::basic_string<base::char16, base::string16_char_traits>&), base::internal::CopyMode::Copyable, base::internal::RepeatMode::Repeating> {
    struct scoped_refptr<base::internal::BindStateBase> _field1;
} Callback_118ddb70;

typedef struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
    struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
        struct __rep {
            union {
                struct __long {
                    char *_field1;
                    unsigned long long _field2;
                    unsigned long long _field3;
                } _field1;
                struct __short {
                    char _field1[23];
                    struct {
                        unsigned char _field1;
                    } _field2;
                } _field2;
                struct __raw _field3;
            } _field1;
        } _field1;
    } _field1;
} basic_string_7c0a1c0b;

typedef struct function<bool (std::__1::basic_string<char>)> {
    struct type __buf_;
    struct __base<bool (std::__1::basic_string<char>)> *__f_;
} function_10b5811e;

typedef struct function<void (std::__1::basic_string<char>)> {
    struct type __buf_;
    struct __base<void (std::__1::basic_string<char>)> *__f_;
} function_ef19a04c;

typedef struct scoped_refptr<base::WeakContainer> {
    struct WeakContainer *ptr_;
} scoped_refptr_b6aac36b;

typedef struct scoped_refptr<net::HttpProtocolHandlerCore> {
    struct HttpProtocolHandlerCore *ptr_;
} scoped_refptr_81e0d7bb;

typedef struct shared_ptr<PushObserver> {
    struct PushObserver *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_0641447b;

typedef struct shared_ptr<com::bytedance::push::CallbackObject> {
    struct CallbackObject *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_3ac7bd4d;

typedef struct shared_ptr<com::bytedance::push::PushManager::ConnectionParams> {
    struct ConnectionParams *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_9353e387;

typedef struct shared_ptr<com::bytedance::push::PushManager> {
    struct PushManager *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_08f62c01;

typedef struct shared_ptr<std::__1::map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char>>>>> {
    struct map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char>>>> *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_6eb7ad64;

typedef struct vector<objc_method_description, std::__1::allocator<objc_method_description>> {
    struct objc_method_description *_field1;
    struct objc_method_description *_field2;
    struct __compressed_pair<objc_method_description *, std::__1::allocator<objc_method_description>> {
        struct objc_method_description *_field1;
    } _field3;
} vector_71df529e;

#pragma mark Named Unions

union _GLKMatrix4 {
    struct {
        float m00;
        float m01;
        float m02;
        float m03;
        float m10;
        float m11;
        float m12;
        float m13;
        float m20;
        float m21;
        float m22;
        float m23;
        float m30;
        float m31;
        float m32;
        float m33;
    } ;
    float m[16];
};

#pragma mark Typedef'd Unions

typedef union {
    _Bool valueBool;
    int valueInt32;
    long long valueInt64;
    unsigned int valueUInt32;
    unsigned long long valueUInt64;
    float valueFloat;
    double valueDouble;
    NSData *valueData;
    NSString *valueString;
    GPBMessage *valueMessage;
    int valueEnum;
} CDUnion_88782d86;

