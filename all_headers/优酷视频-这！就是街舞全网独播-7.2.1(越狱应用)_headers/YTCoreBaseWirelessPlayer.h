//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

@class HLPPlayService, NSArray, NSDictionary, NSString;
@protocol YTCoreWirelessPlayerDelegate, YTCoreWirelessPlayerDeviceDelegate;

@interface YTCoreBaseWirelessPlayer : NSObject
{
    double _tpReqTime;
    double _tpReqSuccTime;
    HLPPlayService *_hlpServs;
    _Bool _isEverGetPlayingState;
    _Bool _isHaveGetPlayReqResult;
    _Bool _isNeedNotifyPlayingSuc;
    _Bool _isNeedNotifySuccPlay;
    _Bool _isNeedNotifyTPPlaySuc;
    _Bool _isTriggerFromNowbar;
    _Bool _isEverSendProjReq;
    _Bool _isLivePlaying;
    _Bool _isOneSeg;
    _Bool _isAutoRetryReq;
    _Bool _isProjCustomAd;
    _Bool _isDrmMode;
    double _duration;
    double _played;
    NSArray *_deviceList;
    NSString *_currentDevice;
    NSArray *_deviceInfoList;
    NSArray *_rcsDeviceInfoList;
    NSDictionary *_currentDeviceInfo;
    NSDictionary *_currentUTDeviceInfo;
    NSDictionary *_videoInfoDic;
    NSDictionary *_projReqInfoDic;
    id <YTCoreWirelessPlayerDelegate> _delegate;
    id <YTCoreWirelessPlayerDeviceDelegate> _deviceInfoDelegate;
    long long _playerType;
    double _curPosition;
    NSString *_curPlayingUrl;
    NSString *_lastProjUuid;
    NSString *_lastProjVid;
    NSString *_appVersion;
    NSString *_lastOriUrl;
    NSString *_wifiSSID;
    NSString *_projPage;
}

+ (id)shardeInstance;
@property(nonatomic) _Bool isDrmMode; // @synthesize isDrmMode=_isDrmMode;
@property(nonatomic) _Bool isProjCustomAd; // @synthesize isProjCustomAd=_isProjCustomAd;
@property(nonatomic) _Bool isAutoRetryReq; // @synthesize isAutoRetryReq=_isAutoRetryReq;
@property(nonatomic) _Bool isOneSeg; // @synthesize isOneSeg=_isOneSeg;
@property(nonatomic) _Bool isLivePlaying; // @synthesize isLivePlaying=_isLivePlaying;
@property(retain, nonatomic) NSString *projPage; // @synthesize projPage=_projPage;
@property(retain, nonatomic) NSString *wifiSSID; // @synthesize wifiSSID=_wifiSSID;
@property(nonatomic) _Bool isEverSendProjReq; // @synthesize isEverSendProjReq=_isEverSendProjReq;
@property(retain, nonatomic) NSString *lastOriUrl; // @synthesize lastOriUrl=_lastOriUrl;
@property(retain, nonatomic) NSString *appVersion; // @synthesize appVersion=_appVersion;
@property(retain, nonatomic) NSString *lastProjVid; // @synthesize lastProjVid=_lastProjVid;
@property(retain, nonatomic) NSString *lastProjUuid; // @synthesize lastProjUuid=_lastProjUuid;
@property(retain, nonatomic) NSString *curPlayingUrl; // @synthesize curPlayingUrl=_curPlayingUrl;
@property(nonatomic) _Bool isTriggerFromNowbar; // @synthesize isTriggerFromNowbar=_isTriggerFromNowbar;
@property(nonatomic) _Bool isNeedNotifyTPPlaySuc; // @synthesize isNeedNotifyTPPlaySuc=_isNeedNotifyTPPlaySuc;
@property(nonatomic) _Bool isNeedNotifySuccPlay; // @synthesize isNeedNotifySuccPlay=_isNeedNotifySuccPlay;
@property(nonatomic) _Bool isNeedNotifyPlayingSuc; // @synthesize isNeedNotifyPlayingSuc=_isNeedNotifyPlayingSuc;
@property(nonatomic) _Bool isHaveGetPlayReqResult; // @synthesize isHaveGetPlayReqResult=_isHaveGetPlayReqResult;
@property(nonatomic) _Bool isEverGetPlayingState; // @synthesize isEverGetPlayingState=_isEverGetPlayingState;
@property(nonatomic) double curPosition; // @synthesize curPosition=_curPosition;
@property(readonly, nonatomic) long long playerType; // @synthesize playerType=_playerType;
@property(nonatomic) __weak id <YTCoreWirelessPlayerDeviceDelegate> deviceInfoDelegate; // @synthesize deviceInfoDelegate=_deviceInfoDelegate;
@property(nonatomic) __weak id <YTCoreWirelessPlayerDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) NSDictionary *projReqInfoDic; // @synthesize projReqInfoDic=_projReqInfoDic;
@property(retain, nonatomic) NSDictionary *videoInfoDic; // @synthesize videoInfoDic=_videoInfoDic;
@property(retain, nonatomic) NSDictionary *currentUTDeviceInfo; // @synthesize currentUTDeviceInfo=_currentUTDeviceInfo;
@property(readonly, retain, nonatomic) NSDictionary *currentDeviceInfo; // @synthesize currentDeviceInfo=_currentDeviceInfo;
@property(readonly, retain, nonatomic) NSArray *rcsDeviceInfoList; // @synthesize rcsDeviceInfoList=_rcsDeviceInfoList;
@property(readonly, retain, nonatomic) NSArray *deviceInfoList; // @synthesize deviceInfoList=_deviceInfoList;
@property(readonly, retain, nonatomic) NSString *currentDevice; // @synthesize currentDevice=_currentDevice;
@property(readonly, retain, nonatomic) NSArray *deviceList; // @synthesize deviceList=_deviceList;
@property(readonly, nonatomic) double played; // @synthesize played=_played;
@property(readonly, nonatomic) double duration; // @synthesize duration=_duration;
- (void).cxx_destruct;
- (_Bool)isNeedDisableAd;
- (void)clearProjState;
- (void)tryGetOneSegUrl:(id)arg1 quality:(id)arg2 language:(id)arg3 resultUrlBlcok:(CDUnknownBlockType)arg4;
@property(readonly, nonatomic, getter=isSeeking) _Bool seeking;
@property(readonly, nonatomic, getter=isPausing) _Bool pausing;
@property(readonly, nonatomic, getter=isPlaying) _Bool playing;
- (void)addWifiInfo:(id)arg1;
- (void)doNotifyNoDevDetected;
- (void)notifyNoDevDetected;
- (void)notifyDlnaError:(id)arg1 errorMessage:(id)arg2;
- (void)notifyUTNewDev:(id)arg1;
- (void)addAllCommonUTProperties:(id)arg1;
- (void)notifyAirplayProjError:(id)arg1;
- (void)cancelTryNotifyProjSuccTimeout;
- (void)tryNotifyProjSuccTimeout;
- (void)notifyProjAliveTimeout;
- (void)notifyProjSuccTimeout;
- (void)notifyProjSuccEx:(id)arg1;
- (void)notifyProjSuccPlay;
- (void)notifyProjSucc;
- (void)notifyProjReqResult:(int)arg1;
- (void)notifyProjReqStart:(_Bool)arg1;
- (void)saveProjReqInfo:(id)arg1 quality:(long long)arg2;
- (void)saveVideoInfo:(id)arg1;
- (unsigned long long)getDlnaDevCount;
- (unsigned long long)getTotalDevCount;
- (_Bool)sendAuthenticate:(id)arg1;
- (void)retryPlay;
- (void)changeVolume:(double)arg1;
- (void)stopSearchDevice;
- (void)startSearchDevice;
- (void)seekTo:(double)arg1;
- (void)stopEx:(_Bool)arg1;
- (void)stop;
- (void)pause;
- (void)play;
- (_Bool)startPlayWithURL:(id)arg1 deviceInfo:(id)arg2 videoInfo:(id)arg3 start:(double)arg4 total:(double)arg5;
- (_Bool)startPlayWithURL:(id)arg1 ip:(id)arg2 port:(long long)arg3 start:(double)arg4 total:(double)arg5;
- (_Bool)startPlayWithURL:(id)arg1 device:(id)arg2 start:(double)arg3 total:(double)arg4;
- (void)deInit;

@end

