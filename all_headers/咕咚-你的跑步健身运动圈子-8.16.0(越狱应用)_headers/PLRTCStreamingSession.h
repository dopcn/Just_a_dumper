//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

#import "PLStreamingSessionDelegate-Protocol.h"

@class NSArray, NSDictionary, NSString, NSURL, PLAudioStreamingConfiguration, PLStream, PLStreamingSession, PLVideoStreamingConfiguration;
@protocol OS_dispatch_queue, PLRTCStreamingSessionDelegate;

@interface PLRTCStreamingSession : NSObject <PLStreamingSessionDelegate>
{
    _Bool _idleTimerDisable;
    NSArray *_rtcMixOverlayRectArray;
    NSDictionary *_rtcOption;
    unsigned long long _rtcMinVideoBitrate;
    unsigned long long _rtcMaxVideoBitrate;
    _Bool _muted;
    id <PLRTCStreamingSessionDelegate> _delegate;
    NSObject<OS_dispatch_queue> *_delegateQueue;
    PLStreamingSession *_streamingSession;
    id _rtcSession;
    CDUnknownBlockType _streamDiagnosisResultWithHandler;
}

+ (void)enableRTCLogging;
@property(copy, nonatomic) CDUnknownBlockType streamDiagnosisResultWithHandler; // @synthesize streamDiagnosisResultWithHandler=_streamDiagnosisResultWithHandler;
@property(retain, nonatomic) id rtcSession; // @synthesize rtcSession=_rtcSession;
@property(retain, nonatomic) PLStreamingSession *streamingSession; // @synthesize streamingSession=_streamingSession;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *delegateQueue; // @synthesize delegateQueue=_delegateQueue;
@property(nonatomic) __weak id <PLRTCStreamingSessionDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (id)getDelegateQueue;
- (void)streamingSession:(id)arg1 streamStatusDidUpdate:(id)arg2;
- (void)streamingSession:(id)arg1 didDisconnectWithError:(id)arg2;
- (void)streamingSession:(id)arg1 streamStateDidChange:(unsigned long long)arg2;
- (void)rtcSession:(id)arg1 didGetAudioBuffer:(struct AudioBuffer *)arg2 asbd:(const struct AudioStreamBasicDescription *)arg3;
- (void)rtcSession:(id)arg1 didGetPixelBuffer:(struct __CVBuffer *)arg2;
- (void)rtcSession:(id)arg1 didLeaveConferenceOfUserID:(id)arg2;
- (void)rtcSession:(id)arg1 didJoinConferenceOfUserID:(id)arg2;
- (void)rtcSession:(id)arg1 didKickoutByUserID:(id)arg2;
- (void)rtcSession:(id)arg1 userID:(id)arg2 didDetachRemoteView:(id)arg3;
- (void)rtcSession:(id)arg1 userID:(id)arg2 didAttachRemoteView:(id)arg3;
- (void)rtcSession:(id)arg1 didFailWithError:(id)arg2;
- (void)rtcSession:(id)arg1 stateDidChange:(unsigned long long)arg2;
- (void)postDiagnosisWithCompletionHandler:(CDUnknownBlockType)arg1;
- (id)rtcConfiguration;
- (unsigned long long)rtcMaxVideoBitrate;
- (void)setRtcMaxVideoBitrate:(unsigned long long)arg1;
- (unsigned long long)rtcMinVideoBitrate;
- (void)setRtcMinVideoBitrate:(unsigned long long)arg1;
- (id)rtcOption;
- (void)setRtcOption:(id)arg1;
- (id)rtcMixOverlayRectArray;
- (void)setRtcMixOverlayRectArray:(id)arg1;
- (unsigned long long)rtcParticipantsCount;
- (id)rtcParticipants;
- (unsigned long long)rtcState;
- (_Bool)isRtcRunning;
- (_Bool)isIdleTimerDisable;
- (void)setIdleTimerDisable:(_Bool)arg1;
- (void)setDenoiseOn:(_Bool)arg1;
- (_Bool)isDenoiseOn;
- (unsigned long long)currentCount;
- (unsigned long long)maxCount;
- (void)setMaxCount:(unsigned long long)arg1;
- (double)threshold;
- (void)setThreshold:(double)arg1;
- (_Bool)isMonitorNetworkStateEnasble;
- (void)setMonitorNetworkStateEnable:(_Bool)arg1;
- (_Bool)isDynamicFrameEnable;
- (void)setDynamicFrameEnable:(_Bool)arg1;
- (CDUnknownBlockType)connectionChangeActionCallback;
- (void)setConnectionChangeActionCallback:(CDUnknownBlockType)arg1;
- (CDUnknownBlockType)connectionInterruptionHandler;
- (void)setConnectionInterruptionHandler:(CDUnknownBlockType)arg1;
- (void)disableAdaptiveBitrateControl;
- (void)enableAdaptiveBitrateControlWithMinVideoBitRate:(unsigned long long)arg1;
- (_Bool)isAutoReconnectEnable;
- (void)setAutoReconnectEnable:(_Bool)arg1;
- (int)sendTimeout;
- (void)setSendTimeout:(int)arg1;
@property(nonatomic, getter=isMuted) _Bool muted; // @synthesize muted=_muted;
- (int)receiveTimeout;
- (void)setReceiveTimeout:(int)arg1;
@property(nonatomic) double statusUpdateInterval;
@property(readonly, nonatomic) unsigned long long streamState;
@property(copy, nonatomic) NSURL *pushURL;
@property(retain, nonatomic) PLStream *stream;
@property(readonly, nonatomic) PLAudioStreamingConfiguration *audioStreamingConfiguration;
@property(readonly, nonatomic) PLVideoStreamingConfiguration *videoStreamingConfiguration;
@property(readonly, nonatomic) _Bool isStreamingRunning;
- (void)kickoutUserID:(id)arg1;
- (void)stopConference;
- (void)startConferenceWithRoomName:(id)arg1 userID:(id)arg2 roomToken:(id)arg3 rtcConfiguration:(id)arg4;
- (void)getScreenshotWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)pushAudioBuffer:(struct AudioBuffer *)arg1 asbd:(const struct AudioStreamBasicDescription *)arg2 completion:(CDUnknownBlockType)arg3;
- (void)pushPixelBuffer:(struct __CVBuffer *)arg1 completion:(CDUnknownBlockType)arg2;
- (void)reloadAudioStreamingConfiguration:(id)arg1;
- (void)reloadVideoStreamingConfiguration:(id)arg1;
- (void)stopStreaming;
- (void)restartStreamingWithPushURL:(id)arg1 feedback:(CDUnknownBlockType)arg2;
- (void)restartStreamingWithFeedback:(CDUnknownBlockType)arg1;
- (void)startStreamingWithPushURL:(id)arg1 feedback:(CDUnknownBlockType)arg2;
- (void)startStreamingWithFeedback:(CDUnknownBlockType)arg1;
- (void)destroy;
- (id)initWithVideoStreamingConfiguration:(id)arg1 audioStreamingConfiguration:(id)arg2 stream:(id)arg3 dns:(id)arg4;
- (id)initWithVideoStreamingConfiguration:(id)arg1 audioStreamingConfiguration:(id)arg2 stream:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

