//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "CTRootViewController.h"

#import "CTHotelHybridMapViewDelegate-Protocol.h"
#import "CTHotelListMapBusinessCardViewDelegate-Protocol.h"
#import "CTHotelListViewControllerProtocol-Protocol.h"
#import "CTMapLocationActionViewDelegate-Protocol.h"
#import "CTMapToolViewDelegate-Protocol.h"

@class CTHotelHybridMapView, CTHotelListCacheBean, CTHotelListMapBusinessCardView, CTHotelListMapViewTopTipView, CTMapLocationActionView, CTMapToolView, NSString, UIButton;
@protocol CTHotelListViewControllerDelegate;

@interface CTHotelListMapViewController : CTRootViewController <CTHotelHybridMapViewDelegate, CTHotelListViewControllerProtocol, CTHotelListMapBusinessCardViewDelegate, CTMapLocationActionViewDelegate, CTMapToolViewDelegate>
{
    _Bool _isSearchHotelsWithScreenArea;
    id <CTHotelListViewControllerDelegate> _delegate;
    UIButton *_backButton;
    UIButton *_listButton;
    CTHotelHybridMapView *_mapView;
    CTHotelListMapViewTopTipView *_tipsView;
    CTHotelListMapBusinessCardView *_listCarView;
    CTMapLocationActionView *_locationActionView;
    CTMapToolView *_mapToolView;
}

@property(nonatomic) _Bool isSearchHotelsWithScreenArea; // @synthesize isSearchHotelsWithScreenArea=_isSearchHotelsWithScreenArea;
@property(retain, nonatomic) CTMapToolView *mapToolView; // @synthesize mapToolView=_mapToolView;
@property(retain, nonatomic) CTMapLocationActionView *locationActionView; // @synthesize locationActionView=_locationActionView;
@property(retain, nonatomic) CTHotelListMapBusinessCardView *listCarView; // @synthesize listCarView=_listCarView;
@property(retain, nonatomic) CTHotelListMapViewTopTipView *tipsView; // @synthesize tipsView=_tipsView;
@property(retain, nonatomic) CTHotelHybridMapView *mapView; // @synthesize mapView=_mapView;
@property(nonatomic) __weak UIButton *listButton; // @synthesize listButton=_listButton;
@property(nonatomic) __weak UIButton *backButton; // @synthesize backButton=_backButton;
@property(nonatomic) __weak id <CTHotelListViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)didClickItem:(id)arg1;
- (void)refreshBtnClicked;
- (void)currentLocationBtnClicked;
- (void)listCarView:(id)arg1 autoLayout:(long long)arg2;
- (void)listCarView:(id)arg1 gotoHotelDetail:(id)arg2;
- (void)hiddenListCarView:(_Bool)arg1;
- (id)hotelListData;
- (void)refreshTitle:(id)arg1;
@property(readonly, nonatomic) CTHotelListCacheBean *listCacheBean;
- (void)fetchHotelListAdditionInformation;
- (void)updateHotelListWithListVCType:(int)arg1 sendType:(long long)arg2;
- (void)stopLoading;
- (void)startLoading;
- (void)searchHotelsWithScreenArea;
- (void)mapViewchanged;
- (void)drawCenterAnnInMapViewWithListVCType:(int)arg1 sendType:(long long)arg2 options:(unsigned long long)arg3;
- (id)getcommentPoint:(id)arg1;
- (id)createHotelHybridMapAnnotationWithHotelModel:(id)arg1 state:(id)arg2 isScaleLatLong:(_Bool)arg3;
- (id)boolToString:(_Bool)arg1;
- (void)addBtnTarget;
- (void)listButtonClicked:(id)arg1;
- (void)arBarButtonClicked:(id)arg1;
- (void)backButtonClicked:(id)arg1;
- (void)backBarButtonClicked:(id)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (void)cth_mapView:(id)arg1 zoomLevelDidChanged:(unsigned long long)arg2;
- (void)cth_mapView:(id)arg1 centerCoordinateDidChanged:(struct CLLocationCoordinate2D)arg2;
- (void)createHelpView:(double)arg1;
- (void)cth_mapView:(id)arg1 annotationDeselected:(id)arg2;
- (void)cth_mapView:(id)arg1 annotationDidClicked:(id)arg2;
- (void)cth_mapView:(id)arg1 loadFailedWithTimeInterval:(double)arg2;
- (void)cth_mapView:(id)arg1 loadFinishedWithTimeInterval:(double)arg2;
- (void)createSearchButton;
- (void)createLocationButton;
- (void)updateToolView;
- (void)initBaseView;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

