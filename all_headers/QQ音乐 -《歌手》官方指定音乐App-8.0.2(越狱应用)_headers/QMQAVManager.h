//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

#import "QAVAudioDataDelegate-Protocol.h"
#import "QAVLocalVideoDelegate-Protocol.h"
#import "QAVRemoteVideoDelegate-Protocol.h"
#import "QAVRoomDelegate-Protocol.h"

@class NSData, NSMutableArray, NSMutableData, NSString, QAVAudioFrame, QAVVideoFrame, QMLSRoomInfo, QMQAVAudioDataProvider, QMStatInfo, SingleHourglass;
@protocol KSAudioFileProtocol, OS_dispatch_queue, QAVRoomStateDelegate, QAVStreamVideoDelegate;

@interface QMQAVManager : NSObject <QAVRoomDelegate, QAVAudioDataDelegate, QAVLocalVideoDelegate, QAVRemoteVideoDelegate>
{
    struct CMutex accompnayLock;
    struct CMutex timeStampLock;
    void *_accompanyReadQueueKey;
    struct __sFILE *micOutputFile;
    struct __sFILE *mixOutputFile;
    struct __sFILE *speakerOutputFile;
    struct __sFILE *sendOutputFile;
    struct __sFILE *receiveOutputFile;
    _Bool _isEnteringRoom;
    _Bool _hasEnterRoom;
    _Bool _isLeavingRoom;
    _Bool _enableBeauty;
    _Bool _didEnableCamera;
    _Bool _didEnableMic;
    _Bool _isMenualDisableMic;
    _Bool _hasEnterBackground;
    _Bool _didStartPlayAccompany;
    id <QAVRoomStateDelegate> _roomStateDelegate;
    id <QAVStreamVideoDelegate> _qavVideoDelegate;
    long long _ownerType;
    long long _streamType;
    NSString *_liveIdentifier;
    NSString *_anchorIdentifier;
    long long _accompanyState;
    long long _cameraPosition;
    NSString *_anchorRoleName;
    NSString *_audienceRoleName;
    long long _accompanyVolume;
    long long _voiceDisposeVolume;
    long long _hostAccompanyVolume;
    QMStatInfo *_liveStat;
    SingleHourglass *_liveHourglass;
    long long _lastBeautyValue;
    QAVVideoFrame *_currentVideoFrame;
    QMLSRoomInfo *_roomInfo;
    NSMutableArray *_mixToPlayBuffers;
    NSMutableArray *_mixToSendBuffers;
    NSData *_currentData;
    NSString *_accompanyPath;
    NSObject<OS_dispatch_queue> *_accompanyReadQueue;
    unsigned long long _currentAudioFrameOffset;
    double _accompnayDuration;
    long long _mixToPlaySkipCount;
    id <KSAudioFileProtocol> _audioFile;
    QMQAVAudioDataProvider *_audioDataProvider;
    NSMutableData *_audioBufData;
    QAVAudioFrame *_lastAudioFrameSend;
    QAVAudioFrame *_lastAudioFrameReceived;
    struct AudioStreamBasicDescription _outputFormat;
}

+ (void)destoryContext;
+ (id)sharedContext;
+ (id)sharedManager;
@property(nonatomic) _Bool didStartPlayAccompany; // @synthesize didStartPlayAccompany=_didStartPlayAccompany;
@property(retain, nonatomic) QAVAudioFrame *lastAudioFrameReceived; // @synthesize lastAudioFrameReceived=_lastAudioFrameReceived;
@property(retain, nonatomic) QAVAudioFrame *lastAudioFrameSend; // @synthesize lastAudioFrameSend=_lastAudioFrameSend;
@property(retain, nonatomic) NSMutableData *audioBufData; // @synthesize audioBufData=_audioBufData;
@property(nonatomic) struct AudioStreamBasicDescription outputFormat; // @synthesize outputFormat=_outputFormat;
@property(retain, nonatomic) QMQAVAudioDataProvider *audioDataProvider; // @synthesize audioDataProvider=_audioDataProvider;
@property(retain, nonatomic) id <KSAudioFileProtocol> audioFile; // @synthesize audioFile=_audioFile;
@property(nonatomic) long long mixToPlaySkipCount; // @synthesize mixToPlaySkipCount=_mixToPlaySkipCount;
@property(nonatomic) double accompnayDuration; // @synthesize accompnayDuration=_accompnayDuration;
@property(nonatomic) unsigned long long currentAudioFrameOffset; // @synthesize currentAudioFrameOffset=_currentAudioFrameOffset;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *accompanyReadQueue; // @synthesize accompanyReadQueue=_accompanyReadQueue;
@property(retain, nonatomic) NSString *accompanyPath; // @synthesize accompanyPath=_accompanyPath;
@property(retain, nonatomic) NSData *currentData; // @synthesize currentData=_currentData;
@property(retain, nonatomic) NSMutableArray *mixToSendBuffers; // @synthesize mixToSendBuffers=_mixToSendBuffers;
@property(retain, nonatomic) NSMutableArray *mixToPlayBuffers; // @synthesize mixToPlayBuffers=_mixToPlayBuffers;
@property(retain, nonatomic) QMLSRoomInfo *roomInfo; // @synthesize roomInfo=_roomInfo;
@property(retain, nonatomic) QAVVideoFrame *currentVideoFrame; // @synthesize currentVideoFrame=_currentVideoFrame;
@property(nonatomic) _Bool hasEnterBackground; // @synthesize hasEnterBackground=_hasEnterBackground;
@property(nonatomic) _Bool isMenualDisableMic; // @synthesize isMenualDisableMic=_isMenualDisableMic;
@property(nonatomic) _Bool didEnableMic; // @synthesize didEnableMic=_didEnableMic;
@property(nonatomic) _Bool didEnableCamera; // @synthesize didEnableCamera=_didEnableCamera;
@property(nonatomic) _Bool enableBeauty; // @synthesize enableBeauty=_enableBeauty;
@property(nonatomic) long long lastBeautyValue; // @synthesize lastBeautyValue=_lastBeautyValue;
@property(retain, nonatomic) SingleHourglass *liveHourglass; // @synthesize liveHourglass=_liveHourglass;
@property(retain, nonatomic) QMStatInfo *liveStat; // @synthesize liveStat=_liveStat;
@property(nonatomic) _Bool isLeavingRoom; // @synthesize isLeavingRoom=_isLeavingRoom;
@property(nonatomic) _Bool hasEnterRoom; // @synthesize hasEnterRoom=_hasEnterRoom;
@property(nonatomic) _Bool isEnteringRoom; // @synthesize isEnteringRoom=_isEnteringRoom;
@property(nonatomic) long long hostAccompanyVolume; // @synthesize hostAccompanyVolume=_hostAccompanyVolume;
@property(nonatomic) long long voiceDisposeVolume; // @synthesize voiceDisposeVolume=_voiceDisposeVolume;
@property(nonatomic) long long accompanyVolume; // @synthesize accompanyVolume=_accompanyVolume;
@property(retain, nonatomic) NSString *audienceRoleName; // @synthesize audienceRoleName=_audienceRoleName;
@property(retain, nonatomic) NSString *anchorRoleName; // @synthesize anchorRoleName=_anchorRoleName;
@property(nonatomic) long long cameraPosition; // @synthesize cameraPosition=_cameraPosition;
@property(nonatomic) long long accompanyState; // @synthesize accompanyState=_accompanyState;
@property(retain, nonatomic) NSString *anchorIdentifier; // @synthesize anchorIdentifier=_anchorIdentifier;
@property(retain, nonatomic) NSString *liveIdentifier; // @synthesize liveIdentifier=_liveIdentifier;
@property(nonatomic) long long streamType; // @synthesize streamType=_streamType;
@property(nonatomic) long long ownerType; // @synthesize ownerType=_ownerType;
@property(nonatomic) __weak id <QAVStreamVideoDelegate> qavVideoDelegate; // @synthesize qavVideoDelegate=_qavVideoDelegate;
@property(nonatomic) __weak id <QAVRoomStateDelegate> roomStateDelegate; // @synthesize roomStateDelegate=_roomStateDelegate;
- (id).cxx_construct;
- (void).cxx_destruct;
- (unsigned long long)getAVStatRtt;
- (void)freeOutputFile;
- (struct __sFILE *)openFileByFileName:(id)arg1;
- (void)writeAudioFrameToFile:(id)arg1 type:(long long)arg2;
- (unsigned long long)getCurrentAudioStreamTimeStampSend;
- (unsigned long long)getCurrentAudioStreamTimeStampRecv;
- (void)updateAccompanyProgress;
- (double)getCurrentAccompanyOffset;
- (double)totalTimeOfAudioFile;
- (unsigned long long)lengthOfAudioFile;
- (void)startDecodeAccompanyFile;
- (void)resetAccompany;
- (void)accompanyStateChanged:(long long)arg1;
- (void)stopPLayingAccompany;
- (void)resumeAccompany;
- (void)pauseAccompany;
- (_Bool)startPlayAccompany:(id)arg1;
- (_Bool)unregisterAudioCtrl;
- (_Bool)registerAudioCtrl;
- (id)getStatParm;
- (long long)audioDataDispose:(id)arg1 type:(long long)arg2;
- (long long)audioDataShouInput:(id)arg1 type:(long long)arg2;
- (long long)audioDataComes:(id)arg1 type:(long long)arg2;
- (void)adjustVolumeAfterSwitchMicToEnable:(_Bool)arg1;
- (_Bool)setVolme:(double)arg1 sourceType:(long long)arg2;
- (_Bool)setQAVVoiceDisposeVolume:(long long)arg1;
- (_Bool)setQAVAccompanyVolume:(long long)arg1;
- (void)enableSpeaker:(_Bool)arg1;
- (void)enableMic:(_Bool)arg1 shouldAutoAdjustAccompanyVolume:(_Bool)arg2 isManual:(_Bool)arg3;
- (void)doReport;
- (void)OnVideoPreview:(id)arg1;
- (void)OnLocalVideoRawSampleBuf:(struct opaqueCMSampleBuffer *)arg1 result:(struct opaqueCMSampleBuffer **)arg2;
- (void)OnLocalVideoPreProcess:(id)arg1;
- (void)OnLocalVideoPreview:(id)arg1;
- (void)setBeautyOnEnable:(long long)arg1;
- (_Bool)enableBeauty:(long long)arg1;
- (_Bool)enableDefaultBeauty;
- (_Bool)isBeautyEnabled;
- (long long)getBeauty;
- (_Bool)isSupportBeauty;
- (void)onAudioRouteChangeNotification:(id)arg1;
- (void)onNotifyNetStatusChaneged:(id)arg1;
- (void)cancelAllRemoteVideo;
- (void)requestRemoteVideo:(id)arg1;
- (void)switchCamera:(CDUnknownBlockType)arg1;
- (void)enableCamera:(_Bool)arg1 cameraPos:(long long)arg2 completion:(CDUnknownBlockType)arg3;
- (void)enableCamera:(_Bool)arg1;
- (void)OnSemiAutoRecvCameraVideo:(id)arg1;
- (void)OnSemiAutoRecvScreenVideo:(id)arg1;
- (void)OnSemiAutoRecvMediaVideo:(id)arg1;
- (void)OnHwStateChangeNotify:(_Bool)arg1 isMain:(_Bool)arg2 isSwitchToSoft:(_Bool)arg3 identifier:(id)arg4;
- (void)OnRoomEvent:(int)arg1 subtype:(int)arg2 data:(void *)arg3;
- (void)OnCameraSettingNotify:(int)arg1 Height:(int)arg2 Fps:(int)arg3;
- (void)OnPrivilegeDiffNotify:(int)arg1;
- (void)OnEndpointsUpdateInfo:(long long)arg1 endpointlist:(id)arg2;
- (void)OnRoomDisconnect:(int)arg1 WithErrinfo:(id)arg2;
- (void)OnExitRoomComplete;
- (void)OnEnterRoomComplete:(int)arg1 WithErrinfo:(id)arg2;
- (void)OnSwitchRoomComplete:(int)arg1 WithErrinfo:(id)arg2;
- (void)switchRoom:(id)arg1;
- (void)resumeAudio;
- (void)pauseAudio;
- (_Bool)stopVideoAndAudioCtrl;
- (_Bool)startVideoAndAudioCtrl;
- (void)resetRoomState;
- (void)onRealExitRoom;
- (void)onRealEnterRoom:(id)arg1;
- (void)exitRoom;
- (void)enterRoom:(id)arg1;
- (void)onNotifyLogOut;
- (void)startContext:(CDUnknownBlockType)arg1;
- (void)registerNotification;
- (void)initlizeDefaultVolume;
- (id)init;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

