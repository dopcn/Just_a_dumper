//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "VdiskAuthorizeDelegate-Protocol.h"

@class NSString, VdiskAuthorize, WBNetWorkManager;
@protocol VdiskSessionDelegate;

@interface VdiskSession : NSObject <VdiskAuthorizeDelegate>
{
    NSString *_appKey;
    NSString *_appSecret;
    NSString *_sinaUserID;
    NSString *_userID;
    NSString *_accessToken;
    NSString *_refreshToken;
    double _expireTime;
    NSString *_redirectURI;
    NSString *_appRoot;
    _Bool _isUserExclusive;
    VdiskAuthorize *_authorize;
    WBNetWorkManager *_sinaWeibo;
    id <VdiskSessionDelegate> _delegate;
    int _sessionType;
    NSString *_udid;
}

+ (id)userAgent;
+ (void)setSharedSession:(id)arg1;
+ (id)sharedSession;
@property(retain, nonatomic) NSString *udid; // @synthesize udid=_udid;
@property(readonly, nonatomic) int sessionType; // @synthesize sessionType=_sessionType;
@property(retain, nonatomic) NSString *appRoot; // @synthesize appRoot=_appRoot;
@property(nonatomic) id <VdiskSessionDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) WBNetWorkManager *sinaWeibo; // @synthesize sinaWeibo=_sinaWeibo;
@property(retain, nonatomic) VdiskAuthorize *authorize; // @synthesize authorize=_authorize;
@property(nonatomic) _Bool isUserExclusive; // @synthesize isUserExclusive=_isUserExclusive;
@property(retain, nonatomic) NSString *redirectURI; // @synthesize redirectURI=_redirectURI;
@property(nonatomic) double expireTime; // @synthesize expireTime=_expireTime;
@property(retain, nonatomic) NSString *refreshToken; // @synthesize refreshToken=_refreshToken;
@property(retain, nonatomic) NSString *accessToken; // @synthesize accessToken=_accessToken;
@property(retain, nonatomic) NSString *userID; // @synthesize userID=_userID;
@property(retain, nonatomic) NSString *sinaUserID; // @synthesize sinaUserID=_sinaUserID;
@property(retain, nonatomic) NSString *appSecret; // @synthesize appSecret=_appSecret;
@property(retain, nonatomic) NSString *appKey; // @synthesize appKey=_appKey;
- (void)restClient:(id)arg1 loadAccountInfoFailedWithError:(id)arg2;
- (void)restClient:(id)arg1 loadedAccountInfo:(id)arg2;
- (void)authorizeDidCancel:(id)arg1;
- (void)authorize:(id)arg1 didFailWithError:(id)arg2;
- (void)authorize:(id)arg1 didSucceedWithAccessToken:(id)arg2 refreshToken:(id)arg3 userID:(id)arg4 expiresIn:(long long)arg5;
- (_Bool)isExpired;
- (_Bool)isLinked;
- (void)unlink;
- (void)linkUsingUsername:(id)arg1 password:(id)arg2;
- (void)refreshLink;
- (void)link;
- (void)linkUsingWeiboAccessToken:(id)arg1 userID:(id)arg2 expireTime:(double)arg3 refreshToken:(id)arg4;
- (void)linkWithSessionType:(int)arg1;
- (void)deleteAuthorizeDataInKeychain;
- (void)readAuthorizeDataFromKeychain;
- (void)saveAuthorizeDataToKeychain;
- (id)urlSchemeString;
- (void)dealloc;
- (id)initWithAppKey:(id)arg1 appSecret:(id)arg2 appRoot:(id)arg3 sinaWeibo:(id)arg4;
- (id)initWithAppKey:(id)arg1 appSecret:(id)arg2 appRoot:(id)arg3;
- (void)applicationDidBecomeActive:(id)arg1;
- (void)setupLogger;
- (id)requestHeadersWithAuthorization;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

