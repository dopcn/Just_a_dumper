//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "MTBaseViewController.h"

#import "SAKPortalable-Protocol.h"
#import "TTWebViewDelegate-Protocol.h"
#import "UIGestureRecognizerDelegate-Protocol.h"
#import "UIScrollViewDelegate-Protocol.h"
#import "UIWebViewDelegate-Protocol.h"
#import "WKNavigationDelegate-Protocol.h"
#import "WKUIDelegate-Protocol.h"

@class NSDate, NSDictionary, NSString, NSTimer, NSURL, NVTask, RACDisposable, TTWebViewDebugBar, TTWebViewJSBridge, TTWebViewProgressView, UIButton, UIColor, UIImage, UILabel, UIView;
@protocol SDWebImageOperation, TTWebViewDragRefreshProtocol, TTWebViewErrorViewDelegate, TTWebViewProtocol;

@interface TTWebViewBaseController : MTBaseViewController <UIWebViewDelegate, WKNavigationDelegate, WKUIDelegate, UIGestureRecognizerDelegate, SAKPortalable, TTWebViewDelegate, UIScrollViewDelegate>
{
    _Bool _showDebugLog;
    _Bool _isViewDidAppear;
    _Bool _enableCAT;
    _Bool _enableLongPressSavePicture;
    _Bool _enableSourceLabel;
    _Bool _needHideNavigationBar;
    _Bool _isHideNavigationBarFromJSAPI;
    _Bool _isPresented;
    _Bool _isNested;
    _Bool _enablePersistentConnection;
    _Bool _successFromShark;
    _Bool _enableBackButtonForNoTitleBar;
    _Bool _enableRefresh;
    _Bool _isSavingHTMLImage;
    _Bool _enableAutoLock;
    _Bool _showCustomBack;
    _Bool _isRefreshing;
    _Bool _noCloseBtn;
    _Bool _shouldHideTitleBar;
    _Bool _isSharkTaskRunning;
    _Bool _needReloadWebView;
    TTWebViewJSBridge *_bridge;
    UIView<TTWebViewProtocol> *_webView;
    NSURL *_URL;
    NSString *_rawURLString;
    long long _portal_resultCode;
    NSString *_portal_resultContent;
    NSString *_webTitle;
    NSString *_webSubtitle;
    NSString *_titleAccessibility;
    UIButton *_titleView;
    TTWebViewProgressView *_progressView;
    UIColor *_progressColor;
    TTWebViewDebugBar *_debugBar;
    UIColor *_backgroundColor;
    UIButton *_defaultLLBarButton;
    UIButton *_llBarButton;
    UIButton *_lrBarButton;
    UIButton *_rlBarButton;
    UIButton *_rrBarButton;
    UIColor *_leftButtonNormalTextColor;
    UIColor *_leftButtonHighlightedTextColor;
    UIImage *_backButtonImageForStateNormal;
    UIImage *_backButtonImageForStateHighlighted;
    long long _fixedStatusBarStyle;
    NSDictionary *_titleTextAttributes;
    long long _containerType;
    UIImage *_shareIconImage;
    CDUnknownBlockType _retryActionBlock;
    CDUnknownBlockType _didStartLoadBlock;
    CDUnknownBlockType _didFinishLoadBlock;
    CDUnknownBlockType _didErrorLoadBlock;
    CDUnknownBlockType _customizeBarButtonBlock;
    CDUnknownBlockType _normalBarButtonBlock;
    CDUnknownBlockType _customBarButtonBlock;
    CDUnknownBlockType _customizeTitleViewBlock;
    CDUnknownBlockType _navigationBarHiddenBlock;
    CDUnknownBlockType _customizeURLRequestBlock;
    UIView<TTWebViewDragRefreshProtocol> *_refreshHeaderView;
    NSDate *_monitorTime;
    NSURL *_retryURL;
    UILabel *_sourceLabel;
    id <SDWebImageOperation> _imageOperation;
    long long _currentStatusBarStyle;
    long long _originalStatusBarStyle;
    id <TTWebViewErrorViewDelegate> _errorView;
    NSTimer *_timer;
    NVTask *_sharkTask;
    RACDisposable *_estimatedProgressDisposable;
    CDUnknownBlockType _setTitleImageBlock;
    UIButton *_backButtonForNoTitleBar;
    NSString *_audioSessionCategory;
}

+ (unsigned long long)getWebviewCacheSize;
+ (void)clearAllWebviewCache;
@property(copy, nonatomic) NSString *audioSessionCategory; // @synthesize audioSessionCategory=_audioSessionCategory;
@property(retain, nonatomic) UIButton *backButtonForNoTitleBar; // @synthesize backButtonForNoTitleBar=_backButtonForNoTitleBar;
@property(copy, nonatomic) CDUnknownBlockType setTitleImageBlock; // @synthesize setTitleImageBlock=_setTitleImageBlock;
@property(nonatomic) _Bool needReloadWebView; // @synthesize needReloadWebView=_needReloadWebView;
@property(retain, nonatomic) RACDisposable *estimatedProgressDisposable; // @synthesize estimatedProgressDisposable=_estimatedProgressDisposable;
@property(nonatomic) _Bool isSharkTaskRunning; // @synthesize isSharkTaskRunning=_isSharkTaskRunning;
@property(retain, nonatomic) NVTask *sharkTask; // @synthesize sharkTask=_sharkTask;
@property(retain, nonatomic) NSTimer *timer; // @synthesize timer=_timer;
@property(nonatomic) _Bool shouldHideTitleBar; // @synthesize shouldHideTitleBar=_shouldHideTitleBar;
@property(nonatomic) _Bool noCloseBtn; // @synthesize noCloseBtn=_noCloseBtn;
@property(nonatomic) _Bool isRefreshing; // @synthesize isRefreshing=_isRefreshing;
@property(nonatomic) _Bool showCustomBack; // @synthesize showCustomBack=_showCustomBack;
@property(retain, nonatomic) id <TTWebViewErrorViewDelegate> errorView; // @synthesize errorView=_errorView;
@property(nonatomic) _Bool enableAutoLock; // @synthesize enableAutoLock=_enableAutoLock;
@property(nonatomic) long long originalStatusBarStyle; // @synthesize originalStatusBarStyle=_originalStatusBarStyle;
@property(nonatomic) long long currentStatusBarStyle; // @synthesize currentStatusBarStyle=_currentStatusBarStyle;
@property(nonatomic) _Bool isSavingHTMLImage; // @synthesize isSavingHTMLImage=_isSavingHTMLImage;
@property(retain, nonatomic) id <SDWebImageOperation> imageOperation; // @synthesize imageOperation=_imageOperation;
@property(retain, nonatomic) UILabel *sourceLabel; // @synthesize sourceLabel=_sourceLabel;
@property(retain, nonatomic) NSURL *retryURL; // @synthesize retryURL=_retryURL;
@property(retain, nonatomic) NSDate *monitorTime; // @synthesize monitorTime=_monitorTime;
@property(retain, nonatomic) UIView<TTWebViewDragRefreshProtocol> *refreshHeaderView; // @synthesize refreshHeaderView=_refreshHeaderView;
@property(nonatomic) _Bool enableRefresh; // @synthesize enableRefresh=_enableRefresh;
@property(nonatomic) _Bool enableBackButtonForNoTitleBar; // @synthesize enableBackButtonForNoTitleBar=_enableBackButtonForNoTitleBar;
@property(copy, nonatomic) CDUnknownBlockType customizeURLRequestBlock; // @synthesize customizeURLRequestBlock=_customizeURLRequestBlock;
@property(copy, nonatomic) CDUnknownBlockType navigationBarHiddenBlock; // @synthesize navigationBarHiddenBlock=_navigationBarHiddenBlock;
@property(copy, nonatomic) CDUnknownBlockType customizeTitleViewBlock; // @synthesize customizeTitleViewBlock=_customizeTitleViewBlock;
@property(copy, nonatomic) CDUnknownBlockType customBarButtonBlock; // @synthesize customBarButtonBlock=_customBarButtonBlock;
@property(copy, nonatomic) CDUnknownBlockType normalBarButtonBlock; // @synthesize normalBarButtonBlock=_normalBarButtonBlock;
@property(copy, nonatomic) CDUnknownBlockType customizeBarButtonBlock; // @synthesize customizeBarButtonBlock=_customizeBarButtonBlock;
@property(copy, nonatomic) CDUnknownBlockType didErrorLoadBlock; // @synthesize didErrorLoadBlock=_didErrorLoadBlock;
@property(copy, nonatomic) CDUnknownBlockType didFinishLoadBlock; // @synthesize didFinishLoadBlock=_didFinishLoadBlock;
@property(copy, nonatomic) CDUnknownBlockType didStartLoadBlock; // @synthesize didStartLoadBlock=_didStartLoadBlock;
@property(copy, nonatomic) CDUnknownBlockType retryActionBlock; // @synthesize retryActionBlock=_retryActionBlock;
@property(retain, nonatomic) UIImage *shareIconImage; // @synthesize shareIconImage=_shareIconImage;
@property(nonatomic) long long containerType; // @synthesize containerType=_containerType;
@property(nonatomic) _Bool successFromShark; // @synthesize successFromShark=_successFromShark;
@property(nonatomic) _Bool enablePersistentConnection; // @synthesize enablePersistentConnection=_enablePersistentConnection;
@property(nonatomic) _Bool isNested; // @synthesize isNested=_isNested;
@property(nonatomic) _Bool isPresented; // @synthesize isPresented=_isPresented;
@property(nonatomic) _Bool isHideNavigationBarFromJSAPI; // @synthesize isHideNavigationBarFromJSAPI=_isHideNavigationBarFromJSAPI;
@property(nonatomic) _Bool needHideNavigationBar; // @synthesize needHideNavigationBar=_needHideNavigationBar;
@property(nonatomic) _Bool enableSourceLabel; // @synthesize enableSourceLabel=_enableSourceLabel;
@property(nonatomic) _Bool enableLongPressSavePicture; // @synthesize enableLongPressSavePicture=_enableLongPressSavePicture;
@property(nonatomic) _Bool enableCAT; // @synthesize enableCAT=_enableCAT;
@property(nonatomic) _Bool isViewDidAppear; // @synthesize isViewDidAppear=_isViewDidAppear;
@property(copy, nonatomic) NSDictionary *titleTextAttributes; // @synthesize titleTextAttributes=_titleTextAttributes;
@property(nonatomic) long long fixedStatusBarStyle; // @synthesize fixedStatusBarStyle=_fixedStatusBarStyle;
@property(retain, nonatomic) UIImage *backButtonImageForStateHighlighted; // @synthesize backButtonImageForStateHighlighted=_backButtonImageForStateHighlighted;
@property(retain, nonatomic) UIImage *backButtonImageForStateNormal; // @synthesize backButtonImageForStateNormal=_backButtonImageForStateNormal;
@property(retain, nonatomic) UIColor *leftButtonHighlightedTextColor; // @synthesize leftButtonHighlightedTextColor=_leftButtonHighlightedTextColor;
@property(retain, nonatomic) UIColor *leftButtonNormalTextColor; // @synthesize leftButtonNormalTextColor=_leftButtonNormalTextColor;
@property(retain, nonatomic) UIButton *rrBarButton; // @synthesize rrBarButton=_rrBarButton;
@property(retain, nonatomic) UIButton *rlBarButton; // @synthesize rlBarButton=_rlBarButton;
@property(retain, nonatomic) UIButton *lrBarButton; // @synthesize lrBarButton=_lrBarButton;
@property(retain, nonatomic) UIButton *llBarButton; // @synthesize llBarButton=_llBarButton;
@property(retain, nonatomic) UIButton *defaultLLBarButton; // @synthesize defaultLLBarButton=_defaultLLBarButton;
@property(retain, nonatomic) UIColor *backgroundColor; // @synthesize backgroundColor=_backgroundColor;
@property(nonatomic) _Bool showDebugLog; // @synthesize showDebugLog=_showDebugLog;
@property(retain, nonatomic) TTWebViewDebugBar *debugBar; // @synthesize debugBar=_debugBar;
@property(retain, nonatomic) UIColor *progressColor; // @synthesize progressColor=_progressColor;
@property(retain, nonatomic) TTWebViewProgressView *progressView; // @synthesize progressView=_progressView;
@property(retain, nonatomic) UIButton *titleView; // @synthesize titleView=_titleView;
@property(copy, nonatomic) NSString *titleAccessibility; // @synthesize titleAccessibility=_titleAccessibility;
@property(copy, nonatomic) NSString *webSubtitle; // @synthesize webSubtitle=_webSubtitle;
@property(copy, nonatomic) NSString *webTitle; // @synthesize webTitle=_webTitle;
@property(copy, nonatomic) NSString *portal_resultContent; // @synthesize portal_resultContent=_portal_resultContent;
@property(nonatomic) long long portal_resultCode; // @synthesize portal_resultCode=_portal_resultCode;
@property(copy, nonatomic) NSString *rawURLString; // @synthesize rawURLString=_rawURLString;
@property(retain, nonatomic) NSURL *URL; // @synthesize URL=_URL;
@property(retain, nonatomic) UIView<TTWebViewProtocol> *webView; // @synthesize webView=_webView;
@property(retain, nonatomic) TTWebViewJSBridge *bridge; // @synthesize bridge=_bridge;
- (void).cxx_destruct;
- (void)scrollViewDidEndDragging:(id)arg1 willDecelerate:(_Bool)arg2;
- (void)scrollViewDidScroll:(id)arg1;
- (void)endRefresh;
- (void)tt_webView:(id)arg1 didFailLoadWithError:(id)arg2;
- (_Bool)tt_webView:(id)arg1 shouldStartLoadWithRequest:(id)arg2;
- (void)tt_webViewDidFinishLoad:(id)arg1;
- (void)tt_webViewDidStartLoad:(id)arg1;
- (_Bool)startPersistentConnection:(id)arg1;
- (_Bool)isSchemeHttpOrHttps:(id)arg1;
- (void)loadSharkRequest:(id)arg1;
- (void)cancelSharkTask;
- (long long)tunnelType;
- (void)timeEnded;
- (void)stopTimer;
- (void)startTimer;
- (void)hideErrorView;
- (void)showErrorView;
- (id)catReportURL:(id)arg1;
- (_Bool)shouldStartLoadWithRequest:(id)arg1;
- (void)webViewGoBackAction;
- (void)backToPreviousViewController;
- (void)showNormalBackBarItem;
- (void)showCustomBackBarItem;
- (void)setupNavigationBarLeftAreaButtons;
- (void)reloadWebView;
- (void)image:(id)arg1 didFinishSavingWithError:(id)arg2 contextInfo:(void *)arg3;
- (void)longPressWebView:(id)arg1;
- (void)loadURLRequest:(id)arg1;
- (id)urlRequest;
@property(readonly, nonatomic) NSURL *currentURL;
- (void)setStatusBarStyle:(long long)arg1;
- (id)convertToAttributedStringWithString:(id)arg1;
- (void)titleImageClicked;
- (void)setNavigationTitleImageView:(id)arg1 accessibilityLabel:(id)arg2;
- (void)setTitleImage:(id)arg1 accessibilityLabel:(id)arg2 completed:(CDUnknownBlockType)arg3;
- (void)setTitleImage:(id)arg1 completed:(CDUnknownBlockType)arg2;
- (void)layoutTitleView;
- (void)setWebTitleWithAttributesDictionaryIfNeeded:(id)arg1;
- (void)setAttributeWebTitle:(id)arg1;
- (void)setWebTitle:(id)arg1 subtitle:(id)arg2;
- (id)rootViewController;
- (id)navigatorItem;
- (id)navigator;
- (_Bool)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
@property(readonly, nonatomic) __weak UIView *rawView;
- (void)viewDidLayoutSubviews;
- (void)dealloc;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)appDidEnterBackground;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (id)p_customBackImage;
- (id)p_backImage;
- (void)setButton:(id)arg1 gaLabel:(id)arg2;
- (void)configBarButtonBlock;
- (void)commonInit;
- (void)addProgressBar;
- (long long)webviewContainerType;
- (id)customWebView;
- (void)extraInjectContext:(id)arg1;
- (void)observeJSContext:(id)arg1;
- (void)setTransparentNavigationBar;
- (void)endFullScreen;
- (void)viewDidLoad;
- (id)pageParameter;
- (id)pageDescription;
- (void)setWithURL:(id)arg1;
- (void)handleWithURL:(id)arg1;
- (id)initWithURL:(id)arg1;
- (id)init;
- (void)webView:(id)arg1 didFailLoadWithError:(id)arg2;
- (void)webViewDidFinishLoad:(id)arg1;
- (void)webViewDidStartLoad:(id)arg1;
- (_Bool)webView:(id)arg1 shouldStartLoadWithRequest:(id)arg2 navigationType:(long long)arg3;
- (void)webView:(id)arg1 runJavaScriptTextInputPanelWithPrompt:(id)arg2 defaultText:(id)arg3 initiatedByFrame:(id)arg4 completionHandler:(CDUnknownBlockType)arg5;
- (void)webView:(id)arg1 runJavaScriptConfirmPanelWithMessage:(id)arg2 initiatedByFrame:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)webView:(id)arg1 runJavaScriptAlertPanelWithMessage:(id)arg2 initiatedByFrame:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)webView:(id)arg1 didFailProvisionalNavigation:(id)arg2 withError:(id)arg3;
- (void)webView:(id)arg1 didFinishNavigation:(id)arg2;
- (void)webView:(id)arg1 didStartProvisionalNavigation:(id)arg2;
- (void)webView:(id)arg1 decidePolicyForNavigationAction:(id)arg2 decisionHandler:(CDUnknownBlockType)arg3;
- (void)webViewWebContentProcessDidTerminate:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

