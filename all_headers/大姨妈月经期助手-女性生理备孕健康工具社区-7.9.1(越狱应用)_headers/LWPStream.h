//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "WTLSocketDelegate-Protocol.h"

@class LWPMessageStream, LWPQueue, LWPVia, NSError, NSString, WTLSocket;
@protocol LWPStreamDelegate;

@interface LWPStream : NSObject <WTLSocketDelegate>
{
    WTLSocket *_wtlSocket;
    LWPMessageStream *_messageStream;
    NSString *_sni;
    LWPQueue *_workQueue;
    unsigned long long _type;
    long long _connectIndex;
    _Bool _isReuseConnect;
    unsigned short _localPort;
    int _remotePort;
    id <LWPStreamDelegate> _delegate;
    LWPVia *_serverURL;
    NSString *_remoteHost;
    NSString *_localHost;
    NSError *_lastError;
    NSString *_vhost;
    double _keepAliveInterval;
    double _startConnectTime;
    double _startHandshakeTime;
    double _endConnectTime;
}

@property(readonly, nonatomic) double endConnectTime; // @synthesize endConnectTime=_endConnectTime;
@property(readonly, nonatomic) double startHandshakeTime; // @synthesize startHandshakeTime=_startHandshakeTime;
@property(readonly, nonatomic) double startConnectTime; // @synthesize startConnectTime=_startConnectTime;
@property(nonatomic) double keepAliveInterval; // @synthesize keepAliveInterval=_keepAliveInterval;
@property(copy, nonatomic) NSString *vhost; // @synthesize vhost=_vhost;
@property(retain) NSError *lastError; // @synthesize lastError=_lastError;
@property unsigned short localPort; // @synthesize localPort=_localPort;
@property(retain) NSString *localHost; // @synthesize localHost=_localHost;
@property int remotePort; // @synthesize remotePort=_remotePort;
@property(retain) NSString *remoteHost; // @synthesize remoteHost=_remoteHost;
@property(nonatomic) _Bool isReuseConnect; // @synthesize isReuseConnect=_isReuseConnect;
@property(retain, nonatomic) LWPVia *serverURL; // @synthesize serverURL=_serverURL;
@property(nonatomic) __weak id <LWPStreamDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (double)totalConnectUsage;
- (double)handshakeUsage;
- (double)socketConnectUsage;
- (void)closeWithError:(id)arg1;
- (void)wtlsocketDidSending:(id)arg1 tag:(id)arg2 bytes:(int)arg3;
- (void)wtlsocketDidRecvCtrlExtrlData:(id)arg1 data:(id)arg2;
- (void)wtlsocketDidRecvData:(id)arg1 data:(id)arg2;
- (void)wtlsocketDidReceived:(id)arg1 bytes:(int)arg2;
- (void)wtlsocketDidBroken:(id)arg1 error:(id)arg2;
- (void)wtlsocketDidFailConnect:(id)arg1 error:(id)arg2;
- (void)wtlsocketDidHandshaked:(id)arg1 sessionContext:(id)arg2 sessionReuse:(_Bool)arg3;
- (void)wtlsocket:(id)arg1 triggerHandshakeEvent:(int)arg2;
- (void)wtlsocketDidConnected:(id)arg1;
- (long long)writingBuffSize;
- (void)sendMessage:(id)arg1;
- (void)sendData:(id)arg1;
- (void)sendExtraMessage:(id)arg1;
- (id)extraType2PushMessageUri:(unsigned char)arg1;
- (_Bool)isExtraSendMessage:(id)arg1;
- (_Bool)isExtraPushMessage:(unsigned char)arg1;
- (_Bool)isDisconnected;
- (_Bool)isConnected;
- (void)disconnect;
- (void)reconnect;
- (void)connect:(double)arg1 context:(id)arg2;
- (void)connect:(double)arg1;
- (void)connect;
- (void)connectToHost:(id)arg1 andPort:(int)arg2 withType:(unsigned long long)arg3;
- (void)connectToHostWithLWS:(id)arg1 andPort:(unsigned short)arg2 withSNI:(id)arg3;
- (void)connectToURL:(id)arg1;
- (id)schema;
@property(readonly, copy) NSString *description;
- (void)dealloc;
- (id)initWithQueue:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

