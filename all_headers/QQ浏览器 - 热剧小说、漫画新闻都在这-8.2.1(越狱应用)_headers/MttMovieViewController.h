//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "MttBaseViewController.h"

#import "AirTransferDelegate-Protocol.h"
#import "BaseMoviePlayerDelegate-Protocol.h"
#import "MovieInfoObtainer-Protocol.h"
#import "MttAirTransferAlertViewDelegate-Protocol.h"
#import "MttSkinChangeable-Protocol.h"

@class MovieInfoObtainer, MttVideoPlayItem, MttVideoSnifferEngineDataSource, NSString, NSURL, UIViewController, Video, VideoCenterService, VideoSnifferEngine;
@protocol BaseMoviePlayer><AirTransferDelegate, MovieInfoObtainer, MovieInfoObtainerDelegate;

@interface MttMovieViewController : MttBaseViewController <BaseMoviePlayerDelegate, MttSkinChangeable, MovieInfoObtainer, AirTransferDelegate, MttAirTransferAlertViewDelegate>
{
    _Bool _hasVideoInfo;
    _Bool _isStarted;
    _Bool _isViewLoaded;
    double _startTime;
    double _startProgress;
    MovieInfoObtainer *_obtainerStrong;
    _Bool _hasObtained;
    _Bool _closeWithoutAnimation;
    NSURL *_obtainedMovieURL;
    id <MovieInfoObtainerDelegate> movieInfoObtainerDelegate;
    UIViewController<BaseMoviePlayer><AirTransferDelegate> *_videoController;
    NSURL *_movieURL;
    VideoCenterService *_videoCenterService;
    VideoSnifferEngine *_videoSnifferEngine;
    MttVideoSnifferEngineDataSource *_videoSnifferEngineDataSource;
    id <MovieInfoObtainer> _movieInfoObtainer;
    double _startPlayProgress;
    NSString *_videoSrcFromWK;
    Video *_localVideo;
    MttVideoPlayItem *_playerItem;
    NSString *_webURL;
    double _playStartTime;
    CDStruct_6a564687 _obtainedProgressInfo;
}

+ (id)getPresentedMovieControllerFromController:(id)arg1;
+ (_Bool)isShowingMovie;
+ (id)descriptionByUrlForDownLoad:(id)arg1;
+ (_Bool)isURLInBlackList:(id)arg1;
@property(nonatomic) double playStartTime; // @synthesize playStartTime=_playStartTime;
@property(copy, nonatomic) NSString *webURL; // @synthesize webURL=_webURL;
@property(retain, nonatomic) MttVideoPlayItem *playerItem; // @synthesize playerItem=_playerItem;
@property(retain, nonatomic) Video *localVideo; // @synthesize localVideo=_localVideo;
@property(retain, nonatomic) NSString *videoSrcFromWK; // @synthesize videoSrcFromWK=_videoSrcFromWK;
@property(nonatomic) double startPlayProgress; // @synthesize startPlayProgress=_startPlayProgress;
@property(nonatomic) __weak id <MovieInfoObtainer> movieInfoObtainer; // @synthesize movieInfoObtainer=_movieInfoObtainer;
@property(nonatomic) _Bool closeWithoutAnimation; // @synthesize closeWithoutAnimation=_closeWithoutAnimation;
@property(retain, nonatomic) MttVideoSnifferEngineDataSource *videoSnifferEngineDataSource; // @synthesize videoSnifferEngineDataSource=_videoSnifferEngineDataSource;
@property(retain, nonatomic) VideoSnifferEngine *videoSnifferEngine; // @synthesize videoSnifferEngine=_videoSnifferEngine;
@property(retain, nonatomic) VideoCenterService *videoCenterService; // @synthesize videoCenterService=_videoCenterService;
@property(readonly, nonatomic) NSURL *movieURL; // @synthesize movieURL=_movieURL;
@property(retain, nonatomic) UIViewController<BaseMoviePlayer><AirTransferDelegate> *videoController; // @synthesize videoController=_videoController;
@property(readonly, nonatomic) _Bool hasObtained; // @synthesize hasObtained=_hasObtained;
@property(nonatomic) __weak id <MovieInfoObtainerDelegate> movieInfoObtainerDelegate; // @synthesize movieInfoObtainerDelegate;
@property(readonly, nonatomic) CDStruct_6a564687 obtainedProgressInfo; // @synthesize obtainedProgressInfo=_obtainedProgressInfo;
@property(readonly, nonatomic) NSURL *obtainedMovieURL; // @synthesize obtainedMovieURL=_obtainedMovieURL;
- (void).cxx_destruct;
- (unsigned long long)playingVideoType;
- (id)videoTitle;
- (_Bool)isPlayingLocalVideo;
- (id)videoPageURL;
- (double)playTotalTime;
- (double)realPlayTime;
- (long long)videoTotalTime;
- (void)dismissRecommandWebView;
- (void)notifySniffDoneWithVideoSource:(id)arg1 clarityCount:(long long)arg2 isFromSourceUrl:(_Bool)arg3;
- (void)startObtainMovieInfo;
- (void)checkAndScreenShot;
- (void)getThumnailByFFmpegLib;
- (void)getThumnailByPlayerCore;
- (void)refreshSkinWithMode:(long long)arg1;
- (void)autoAdjustBrightness;
- (void)presentVCs:(id)arg1;
- (void)exitHandlerWithError:(_Bool)arg1;
- (void)quitAndVisitUrl:(id)arg1;
- (void)prepareAndPlayWithWebURL:(id)arg1 sourceURL:(id)arg2 title:(id)arg3 subtitle:(id)arg4;
- (void)cancelTransferFile;
- (void)setupExtraHandlers;
- (void)setupDownloader;
- (void)reportFeedsVideoAdInfo:(id)arg1;
- (void)recordVideoPlayInfo:(id)arg1 error:(_Bool)arg2;
- (id)createVideoStatPlayItem;
- (void)baseMoviePlayer:(id)arg1 didGetVideoGroup:(id)arg2;
- (void)baseMoviePlayerShouldEnterMiniPlay:(id)arg1;
- (void)baseMoviePlayerShouldEnterFullScreen:(id)arg1;
- (void)baseMoviePlayerDidError:(id)arg1;
- (void)baseMoviePlayerDidEnd:(id)arg1;
- (void)baseMoviePlayerDidStart:(id)arg1;
- (void)reportCircleLiveLog:(id)arg1 withVideoPlayer:(id)arg2;
- (void)setupTVDramaManager:(id)arg1 suggestedTitle:(id)arg2;
- (id)currentDramaURL;
- (void)setTitle:(id)arg1 subtitle:(id)arg2;
- (void)playMovie;
- (void)appDidEnterBackground:(id)arg1;
- (void)appWillEnterForground:(id)arg1;
- (void)dealloc;
- (void)createVideoController;
- (void)configureWithURL:(id)arg1 startProgress:(double)arg2;
- (id)initWithMovieInfoObtainer:(id)arg1;
- (void)playVideo:(id)arg1;
- (void)playLocalMovie;
- (void)playLocalFile:(id)arg1;
- (void)willPlayNextItem;
- (void)playVideoItem:(id)arg1;
- (unsigned long long)supportedInterfaceOrientations;
- (_Bool)shouldAutorotate;
- (_Bool)shouldAutorotateToInterfaceOrientation:(long long)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (id)childViewControllerForStatusBarStyle;
- (id)childViewControllerForStatusBarHidden;
- (_Bool)prefersStatusBarHidden;
- (void)viewDidLayoutSubviews;
- (void)viewDidLoad;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

