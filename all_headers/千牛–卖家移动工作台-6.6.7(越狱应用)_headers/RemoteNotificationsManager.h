//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "JDYMUSBObject.h"

@class MTMonitorError, NSDate, NSDictionary, NSError, NSMutableDictionary, NSString, QNUnifiedLoginLogic;

@interface RemoteNotificationsManager : JDYMUSBObject
{
    NSMutableDictionary *_lastPushHealthAotuCheckTimestamp;
    _Bool _isProcessing;
    _Bool _isHistoryToCurrent;
    _Bool _hasDeviceTokenChanged;
    _Bool _stashPayloadStatus;
    NSString *_deviceTokenStr;
    NSError *_registerDeviceTokenErr;
    double _registDeviceTokenCacheTime;
    QNUnifiedLoginLogic *_loginLogic;
    NSDate *_firstFailedTime;
    MTMonitorError *_firstFailedError;
    unsigned long long _afterFirstFailedCount;
    NSDictionary *_stashPayload;
}

+ (id)shareManager;
@property(nonatomic) _Bool stashPayloadStatus; // @synthesize stashPayloadStatus=_stashPayloadStatus;
@property(retain, nonatomic) NSDictionary *stashPayload; // @synthesize stashPayload=_stashPayload;
@property(nonatomic) unsigned long long afterFirstFailedCount; // @synthesize afterFirstFailedCount=_afterFirstFailedCount;
@property(retain, nonatomic) MTMonitorError *firstFailedError; // @synthesize firstFailedError=_firstFailedError;
@property(retain, nonatomic) NSDate *firstFailedTime; // @synthesize firstFailedTime=_firstFailedTime;
@property(nonatomic) _Bool hasDeviceTokenChanged; // @synthesize hasDeviceTokenChanged=_hasDeviceTokenChanged;
@property(nonatomic) _Bool isHistoryToCurrent; // @synthesize isHistoryToCurrent=_isHistoryToCurrent;
@property(retain, nonatomic) QNUnifiedLoginLogic *loginLogic; // @synthesize loginLogic=_loginLogic;
@property(nonatomic) double registDeviceTokenCacheTime; // @synthesize registDeviceTokenCacheTime=_registDeviceTokenCacheTime;
@property(retain, nonatomic) NSError *registerDeviceTokenErr; // @synthesize registerDeviceTokenErr=_registerDeviceTokenErr;
@property(nonatomic) _Bool isProcessing; // @synthesize isProcessing=_isProcessing;
@property(retain, nonatomic) NSString *deviceTokenStr; // @synthesize deviceTokenStr=_deviceTokenStr;
- (void).cxx_destruct;
- (void)initForIMLocalPush;
- (id)getReceiveMsgUserContext:(id)arg1;
- (_Bool)isPushTime:(id)arg1;
- (id)_fetchPushSound:(id)arg1 settingEntity:(id)arg2;
- (_Bool)handleIMLocalPush:(id)arg1;
- (void)disableServerPushWithContext:(id)arg1 callbackBlock:(CDUnknownBlockType)arg2 closeAll:(_Bool)arg3;
- (void)disableServerPushWithContext:(id)arg1 callbackBlock:(CDUnknownBlockType)arg2;
- (void)enableServerPushWithBackgroundUserContexts:(id)arg1 inUserContext:(id)arg2 finishBlock:(CDUnknownBlockType)arg3;
- (void)disableChatPushWithContext:(id)arg1 callbackBlock:(CDUnknownBlockType)arg2;
- (void)enableChatPushWithContext:(id)arg1 andLight:(_Bool)arg2 callbackBlock:(CDUnknownBlockType)arg3;
- (void)openChatViewControllerWithChatVC:(id)arg1;
- (void)openTBTribeChatController:(id)arg1;
- (void)openChatController:(id)arg1;
- (void)handleWXRedirect:(id)arg1;
- (id)parserOldNotifyMsg:(id)arg1;
- (id)parserWWNickFromOldNotifyMsg:(id)arg1 withDomain:(id)arg2;
- (void)openMsgByTopic:(id)arg1 type:(long long)arg2 msgId:(id)arg3;
- (void)requestMsgProtocolWithBizId:(id)arg1 topic:(id)arg2 callback:(CDUnknownBlockType)arg3;
- (void)optimalRequestProtocolWithId:(id)arg1 topic:(id)arg2 callback:(CDUnknownBlockType)arg3;
- (void)processDefaultActionForPayload:(id)arg1;
- (void)processForAction:(id)arg1 msgType:(id)arg2 bizId:(id)arg3;
- (_Bool)isActionValid:(id)arg1;
- (void)makeSoundOnForegroundForSoundType:(id)arg1 withUserId:(id)arg2;
- (void)preprocessPayloadOnForeground:(id)arg1 forBackAccount:(id)arg2;
- (void)preprocessPayloadFromBackground:(id)arg1 forBackAccount:(id)arg2;
- (void)processYWOpenIMForUserLongNick:(id)arg1 conversation:(id)arg2 isFromBackground:(_Bool)arg3;
- (void)preprocessPayload:(id)arg1 forBackAccount:(id)arg2 isFromBackground:(_Bool)arg3;
- (void)preprocessPayloadOnForeground:(id)arg1 forForeAccount:(id)arg2;
- (void)preprocessPayloadFromBackground:(id)arg1 forForeAccount:(id)arg2;
- (void)preprocessPayload:(id)arg1 forForeAccount:(id)arg2 isFromBackground:(_Bool)arg3;
- (void)processRemoteNotificationPayload:(id)arg1 isFromBackground:(_Bool)arg2;
- (void)safeProcessRemoteNotificationPayload:(id)arg1 isFromBackground:(_Bool)arg2;
- (void)trackForPayload:(id)arg1 isForeAccount:(_Bool)arg2 isFromBackground:(_Bool)arg3;
- (void)onDataLoadingFinish:(id)arg1;
- (void)stashPayload:(id)arg1 andIsFromBackground:(_Bool)arg2;
- (void)feedbackSucToServer:(id)arg1;
- (void)didFailToRegisterToAPNSWithError:(id)arg1;
- (void)didRegisterToAPNSWithDeviceToken:(id)arg1;
- (void)registerAllUserContextToServer;
- (void)registerToAPNSIfNeed;
- (void)registerToAPNS;
- (void)processPushHealthCheckResult:(id)arg1;
- (void)autoPushHealthCheck;
- (void)onUserContextAdded:(id)arg1;
- (void)onUserContextChangedFrom:(id)arg1 to:(id)arg2;
- (void)dealloc;
- (id)init;

@end

