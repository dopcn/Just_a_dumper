//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "JDYMUSBViewController.h"

#import "JDYCPHandlable-Protocol.h"
#import "JDYFloatingCoordinatorHandler-Protocol.h"
#import "NBAVPlayerViewDelegate-Protocol.h"
#import "UIGestureRecognizerDelegate-Protocol.h"
#import "UIScrollViewDelegate-Protocol.h"

@class NBAVPlayerViewController, NBLiveVideoDataManager, NSDate, NSDictionary, NSLayoutConstraint, NSMutableArray, NSString, NSTimer, QAPApp, QAPAppPage, QAPQianniuNativeViewController, QNCustAlertView, UIButton, UIImageView, UILabel;

@interface NBLiveVideoViewControllerV2 : JDYMUSBViewController <UIScrollViewDelegate, NBAVPlayerViewDelegate, UIGestureRecognizerDelegate, JDYCPHandlable, JDYFloatingCoordinatorHandler>
{
    _Bool _preNavigationBarHidden;
    _Bool _isLoading;
    _Bool _landscapeInitialize;
    _Bool _qapViewReady;
    _Bool _showMsg;
    _Bool _showTrafficTip;
    float _smallWindowResumeSeekTime;
    NSString *_bizId;
    long long _clipIndex;
    long long _refreshVersion;
    NSLayoutConstraint *_tipTileBottomConstraint;
    NSLayoutConstraint *_refreshButtonBottomConstraint;
    NSLayoutConstraint *_tipBgHeightConstraint;
    UIButton *_refreshButton;
    NBLiveVideoDataManager *_dataManager;
    UIButton *_backButton;
    UILabel *_tipTitle;
    UIImageView *_defaultVideoTipBackground;
    NBAVPlayerViewController *_playViewController;
    NSLayoutConstraint *_topConstraint;
    long long _JitterToastCount;
    NSDate *_lastToastTime;
    long long _preInterfaceOrientation;
    QAPQianniuNativeViewController *_qapCtrl;
    QAPAppPage *_qapPage;
    QAPApp *_qapApp;
    NSDate *_liveOpenTime;
    QNCustAlertView *_jittAlert;
    unsigned long long _startStatus;
    NSTimer *_liveVideoDataTimer;
    NSMutableArray *_liveVideoDataArr;
    NSDictionary *_qapPageInfo;
}

+ (id)instanceWithBizParam:(id)arg1 success:(CDUnknownBlockType)arg2 fail:(CDUnknownBlockType)arg3 inUserContext:(id)arg4;
@property(nonatomic) _Bool showTrafficTip; // @synthesize showTrafficTip=_showTrafficTip;
@property(nonatomic) _Bool showMsg; // @synthesize showMsg=_showMsg;
@property(retain, nonatomic) NSDictionary *qapPageInfo; // @synthesize qapPageInfo=_qapPageInfo;
@property(nonatomic) _Bool qapViewReady; // @synthesize qapViewReady=_qapViewReady;
@property(retain, nonatomic) NSMutableArray *liveVideoDataArr; // @synthesize liveVideoDataArr=_liveVideoDataArr;
@property(retain, nonatomic) NSTimer *liveVideoDataTimer; // @synthesize liveVideoDataTimer=_liveVideoDataTimer;
@property(nonatomic) unsigned long long startStatus; // @synthesize startStatus=_startStatus;
@property(retain, nonatomic) QNCustAlertView *jittAlert; // @synthesize jittAlert=_jittAlert;
@property(retain, nonatomic) NSDate *liveOpenTime; // @synthesize liveOpenTime=_liveOpenTime;
@property(retain, nonatomic) QAPApp *qapApp; // @synthesize qapApp=_qapApp;
@property(retain, nonatomic) QAPAppPage *qapPage; // @synthesize qapPage=_qapPage;
@property(retain, nonatomic) QAPQianniuNativeViewController *qapCtrl; // @synthesize qapCtrl=_qapCtrl;
@property(nonatomic) _Bool landscapeInitialize; // @synthesize landscapeInitialize=_landscapeInitialize;
@property(nonatomic) long long preInterfaceOrientation; // @synthesize preInterfaceOrientation=_preInterfaceOrientation;
@property(retain, nonatomic) NSDate *lastToastTime; // @synthesize lastToastTime=_lastToastTime;
@property(nonatomic) long long JitterToastCount; // @synthesize JitterToastCount=_JitterToastCount;
@property(retain, nonatomic) NSLayoutConstraint *topConstraint; // @synthesize topConstraint=_topConstraint;
@property(nonatomic) _Bool isLoading; // @synthesize isLoading=_isLoading;
@property(retain, nonatomic) NBAVPlayerViewController *playViewController; // @synthesize playViewController=_playViewController;
@property(retain, nonatomic) UIImageView *defaultVideoTipBackground; // @synthesize defaultVideoTipBackground=_defaultVideoTipBackground;
@property(retain, nonatomic) UILabel *tipTitle; // @synthesize tipTitle=_tipTitle;
@property(nonatomic) _Bool preNavigationBarHidden; // @synthesize preNavigationBarHidden=_preNavigationBarHidden;
@property(retain, nonatomic) UIButton *backButton; // @synthesize backButton=_backButton;
@property(retain, nonatomic) NBLiveVideoDataManager *dataManager; // @synthesize dataManager=_dataManager;
@property(retain, nonatomic) UIButton *refreshButton; // @synthesize refreshButton=_refreshButton;
@property(retain, nonatomic) NSLayoutConstraint *tipBgHeightConstraint; // @synthesize tipBgHeightConstraint=_tipBgHeightConstraint;
@property(retain, nonatomic) NSLayoutConstraint *refreshButtonBottomConstraint; // @synthesize refreshButtonBottomConstraint=_refreshButtonBottomConstraint;
@property(retain, nonatomic) NSLayoutConstraint *tipTileBottomConstraint; // @synthesize tipTileBottomConstraint=_tipTileBottomConstraint;
@property(nonatomic) long long refreshVersion; // @synthesize refreshVersion=_refreshVersion;
@property(nonatomic) long long clipIndex; // @synthesize clipIndex=_clipIndex;
@property(nonatomic) float smallWindowResumeSeekTime; // @synthesize smallWindowResumeSeekTime=_smallWindowResumeSeekTime;
@property(retain, nonatomic) NSString *bizId; // @synthesize bizId=_bizId;
- (void).cxx_destruct;
- (void)moviePlayBackDidFinish:(id)arg1;
- (void)updateLiveVideoData;
- (void)floatingCoordinator:(id)arg1 trackFloatingTime:(id)arg2;
- (_Bool)shouldFloatingCoordinator:(id)arg1 sorptionForView:(id)arg2 at:(struct CGPoint)arg3;
- (void)didFloatingCoordinator:(id)arg1 releaseDragFloatView:(id)arg2 at:(struct CGPoint)arg3;
- (void)didFloatingCoordinator:(id)arg1 startDragFloatView:(id)arg2 at:(struct CGPoint)arg3;
- (void)didFloatingCoordinator:(id)arg1 dragView:(id)arg2 from:(struct CGPoint)arg3 to:(struct CGPoint)arg4;
- (void)didFloatingCoordinator:(id)arg1 transerView:(id)arg2 from:(struct CGRect)arg3 to:(struct CGRect)arg4 isRestore:(_Bool)arg5;
- (void)didFloatingCoordinator:(id)arg1 closeFloatView:(id)arg2;
- (_Bool)shouldFloatingCoordinator:(id)arg1 showCloseClickedToView:(id)arg2;
- (_Bool)shouldFloatingCoordinator:(id)arg1 responseForCloseClickedToView:(id)arg2;
- (void)didFloatingCoordinator:(id)arg1 tapFloatView:(id)arg2;
- (void)openH5CommentRequestSwitch:(_Bool)arg1;
- (void)willRotateToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (_Bool)shouldAutorotate;
- (unsigned long long)supportedInterfaceOrientations;
- (void)forceRefreshVideoWithVersion:(long long)arg1 url:(id)arg2;
- (void)updateLiveVideoWithStatus:(long long)arg1 url:(id)arg2;
- (void)refreshAction:(id)arg1;
- (void)backAction:(id)arg1;
- (void)didReceiveMemoryWarning;
- (double)widthHeightRatio;
- (void)loadView;
- (void)updateLiveStatusWithEntity:(id)arg1;
- (void)changeResolutinByNetStatus:(long long)arg1;
- (void)openPlayer;
- (void)postOpenPlayer;
- (void)updateErrorVideoUIWithStatus:(long long)arg1;
- (void)requestData;
- (void)changeResolutionWithResolution:(id)arg1 needShowToast:(_Bool)arg2;
- (void)avPlayerHappenedJitter;
- (void)avPlayerChangeResolution:(id)arg1;
- (void)syncCardComponentId:(long long)arg1;
- (_Bool)needShowCardComponent:(id)arg1;
- (void)showCardComponent:(id)arg1;
- (void)avPlayerRequestComment:(CDUnknownBlockType)arg1;
- (void)avPlayerSendComment:(id)arg1;
- (void)avPlayerRefreshClick;
- (void)avPlayerBackBtnClick;
- (void)handleNotificationForFullscreen:(id)arg1;
- (void)addAccessoryViewController:(id)arg1;
- (void)openPageUrl:(id)arg1 withAppKey:(id)arg2 uuid:(id)arg3 param:(id)arg4;
- (void)openApp:(id)arg1 withUUID:(id)arg2 param:(id)arg3;
- (void)openConfigAppAsAccessory:(_Bool)arg1;
- (void)openBuiltInAppAsDefaultAccessory;
- (void)instanceQAPLiveRoom;
- (void)viewDidLoad;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)onUserContextWillAutoReset;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)dealloc;
- (long long)preferredStatusBarStyle;
- (_Bool)prefersStatusBarHidden;
- (void)doSwitchPlay;
- (void)switchClip:(long long)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

