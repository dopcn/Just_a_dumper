//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "MQQAlertViewDelegate-Protocol.h"
#import "MQQTodayNetSpeedManagerDelegate-Protocol.h"

@class MQQENBDownloadOperation, MQQENBUploadOperation, MQQENCAlbum, NSArray, NSDictionary, NSError, NSMutableArray, NSMutableIndexSet, NSString;
@protocol MQQPhotoTaskManagerDelegate, OS_dispatch_queue, OS_dispatch_semaphore;

@interface MQQPhotoTask : NSObject <MQQAlertViewDelegate, MQQTodayNetSpeedManagerDelegate>
{
    NSArray *_photos;
    NSMutableArray *_successPhotos;
    unsigned long long _successCount;
    unsigned long long _failCount;
    unsigned long long _duplicatedCount;
    NSError *_brokenError;
    double _estimatedLeftTime;
    NSObject<OS_dispatch_queue> *_queue;
    NSObject<OS_dispatch_semaphore> *_semaphore;
    id _currentPhoto;
    long long _taskType;
    long long _status;
    double starTime;
    double endTime;
    NSMutableIndexSet *_finishIndexSet;
    NSMutableArray *_photoQueue;
    long long _currentNetworkType;
    long long _totalSize;
    long long _leftSize;
    _Bool _canEstimateLeftTime;
    _Bool _canUpdateSpeed;
    _Bool _isUploadSpeed;
    long long _speedIgnoredCount;
    long long _uploadSpeed;
    long long _lastUploadSpeed;
    long long _averageUploadSpeed;
    double _currentTaskBeginTime;
    int _currentCloudAssetRequestID;
    id <MQQPhotoTaskManagerDelegate> _delegate;
    unsigned long long _failCountInDownloadingCloudAsset;
    NSDictionary *_enbAlbumDict;
    MQQENBUploadOperation *_enbUploadOperation;
    MQQENBDownloadOperation *_enbDownloadOperation;
    MQQENCAlbum *_encryptAlbum;
}

@property(retain, nonatomic) MQQENCAlbum *encryptAlbum; // @synthesize encryptAlbum=_encryptAlbum;
@property(retain, nonatomic) MQQENBDownloadOperation *enbDownloadOperation; // @synthesize enbDownloadOperation=_enbDownloadOperation;
@property(retain, nonatomic) MQQENBUploadOperation *enbUploadOperation; // @synthesize enbUploadOperation=_enbUploadOperation;
@property(retain, nonatomic) NSDictionary *enbAlbumDict; // @synthesize enbAlbumDict=_enbAlbumDict;
@property(nonatomic) int currentCloudAssetRequestID; // @synthesize currentCloudAssetRequestID=_currentCloudAssetRequestID;
@property(retain, nonatomic) NSMutableArray *photoQueue; // @synthesize photoQueue=_photoQueue;
@property(nonatomic) double estimatedLeftTime; // @synthesize estimatedLeftTime=_estimatedLeftTime;
@property(nonatomic) unsigned long long failCountInDownloadingCloudAsset; // @synthesize failCountInDownloadingCloudAsset=_failCountInDownloadingCloudAsset;
@property(nonatomic) id <MQQPhotoTaskManagerDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) long long taskType; // @synthesize taskType=_taskType;
@property(nonatomic) unsigned long long duplicatedCount; // @synthesize duplicatedCount=_duplicatedCount;
@property(nonatomic) unsigned long long failCount; // @synthesize failCount=_failCount;
@property(nonatomic) unsigned long long successCount; // @synthesize successCount=_successCount;
@property(retain, nonatomic) id currentPhoto; // @synthesize currentPhoto=_currentPhoto;
@property(retain, nonatomic) NSMutableArray *successPhotos; // @synthesize successPhotos=_successPhotos;
@property(retain, nonatomic) NSArray *photos; // @synthesize photos=_photos;
- (void)alertWithMessage:(id)arg1;
- (void)aTaskDidDownloadCloudAsset:(id)arg1;
- (void)aTaskIsDownloadingCloudAsset:(id)arg1 progress:(double)arg2;
- (void)aTaskWillDownloadCloudAsset:(id)arg1;
- (void)requestCurrentCloudAssetWithProgressHandler:(CDUnknownBlockType)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (int)requestVideoAssetInCloud:(id)arg1 withProgressHandler:(CDUnknownBlockType)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (int)requestImageAssetInCloud:(id)arg1 withProgressHandler:(CDUnknownBlockType)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)updateEstimatedLeftTime;
- (long long)sizeOfPhoto:(id)arg1;
- (long long)totalSizeWithPhotoArray:(id)arg1;
- (void)calculateTotalSizeAsynchronously;
- (void)netSpeedManagerDidUpdateSpeed:(id)arg1;
- (void)startMonitorNetSpeed;
- (void)networkDidChange:(id)arg1;
- (void)endTasks;
- (void)didCancelTasks;
- (void)didCompleteTasks;
- (void)beginTasks;
- (void)aTaskProcessedWithPercentage:(double)arg1;
- (void)aTaskFailWithCurrentPhoto:(id)arg1;
- (void)aTaskFail;
- (void)aTaskFailInDownloadCloudAsset;
- (void)aTaskSucceedWithCurrentPhoto:(id)arg1;
- (void)aTaskSucceed;
- (void)aTaskBegin;
- (void)cancel;
- (void)resume;
- (void)pause;
- (void)handleMutiplePhotosWithTaskType:(long long)arg1;
- (void)handleNextPhoto;
@property(retain, nonatomic) NSMutableIndexSet *finishIndexSet; // @synthesize finishIndexSet=_finishIndexSet;
@property(nonatomic) long long status; // @synthesize status=_status;
@property(readonly, nonatomic) NSArray *waitingPhotos;
- (unsigned long long)processedCount;
- (void)dealloc;
- (id)initWithPhotos:(id)arg1;
- (id)init;
- (void)enb_downloadPhotos;
- (void)enb_uploadPhotos;
- (void)enb_downloadCurrentPhoto;
- (void)enb_uploadCurrentPhoto;
- (void)deleteEncryptedPhotos;
- (void)decryptPhotos;
- (void)encryptAssetsInAlbum:(id)arg1;
- (void)deleteCurrentEncryptedPhoto;
- (void)encryptedVideo:(id)arg1 didFinishSavingWithError:(id)arg2 contextInfo:(void *)arg3;
- (void)encryptedImage:(id)arg1 didFinishSavingWithError:(id)arg2 contextInfo:(void *)arg3;
- (void)decryptCurrentPhoto;
- (float)simulatedProgressWhenCrypting:(int)arg1;
- (_Bool)encryptAsset:(id)arg1 inAlbum:(id)arg2 error:(id *)arg3 currentPhoto:(id)arg4;
- (void)encryptCurrentAssets;
- (void)encryptCurrentAssetsWithCurrentPhoto:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

