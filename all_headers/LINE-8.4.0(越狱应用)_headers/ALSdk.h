//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

@class ALAdService, ALConnectionManager, ALDataCollector, ALEventService, ALFileManager, ALLogManager, ALNativeAdService, ALPersistentPostbackManager, ALPostbackService, ALPreloadedAdManager, ALPreloadedNativeAdManager, ALSdkSettings, ALSettingsManager, ALStatsManager, ALTargetingData, ALTaskManager, NSString;

@interface ALSdk : NSObject
{
    _Bool _initializing;
    _Bool _enabled;
    _Bool _networkError;
    NSString *_sdkKey;
    ALSdkSettings *_settings;
    ALAdService *_adService;
    ALNativeAdService *_nativeAdService;
    ALPostbackService *_postbackService;
    ALEventService *_eventService;
    ALTargetingData *_targetingData;
    ALLogManager *_logManager;
    ALTaskManager *_taskManager;
    ALSettingsManager *_settingsManager;
    ALConnectionManager *_connectionManager;
    ALStatsManager *_statsManager;
    ALFileManager *_fileManager;
    ALPreloadedAdManager *_preloadedAdManager;
    ALPreloadedNativeAdManager *_preloadedNativeAdManager;
    ALDataCollector *_dataCollector;
    ALPersistentPostbackManager *_persistentPostbackManager;
}

+ (id)version;
+ (id)sharedWithKey:(id)arg1 settings:(id)arg2;
+ (id)sharedWithKey:(id)arg1;
+ (id)shared;
+ (void)initializeSdk;
+ (void)initialize;
@property(getter=isNetworkError) _Bool networkError; // @synthesize networkError=_networkError;
@property(getter=isEnabled) _Bool enabled; // @synthesize enabled=_enabled;
@property(getter=isInitializing) _Bool initializing; // @synthesize initializing=_initializing;
@property(retain, nonatomic) ALPersistentPostbackManager *persistentPostbackManager; // @synthesize persistentPostbackManager=_persistentPostbackManager;
@property(retain, nonatomic) ALDataCollector *dataCollector; // @synthesize dataCollector=_dataCollector;
@property(retain, nonatomic) ALPreloadedNativeAdManager *preloadedNativeAdManager; // @synthesize preloadedNativeAdManager=_preloadedNativeAdManager;
@property(retain, nonatomic) ALPreloadedAdManager *preloadedAdManager; // @synthesize preloadedAdManager=_preloadedAdManager;
@property(retain, nonatomic) ALFileManager *fileManager; // @synthesize fileManager=_fileManager;
@property(retain, nonatomic) ALStatsManager *statsManager; // @synthesize statsManager=_statsManager;
@property(retain, nonatomic) ALConnectionManager *connectionManager; // @synthesize connectionManager=_connectionManager;
@property(retain, nonatomic) ALSettingsManager *settingsManager; // @synthesize settingsManager=_settingsManager;
@property(retain, nonatomic) ALTaskManager *taskManager; // @synthesize taskManager=_taskManager;
@property(retain, nonatomic) ALLogManager *logManager; // @synthesize logManager=_logManager;
@property(retain, nonatomic) ALTargetingData *targetingData; // @synthesize targetingData=_targetingData;
@property(retain, nonatomic) ALEventService *eventService; // @synthesize eventService=_eventService;
@property(retain, nonatomic) ALPostbackService *postbackService; // @synthesize postbackService=_postbackService;
@property(retain, nonatomic) ALNativeAdService *nativeAdService; // @synthesize nativeAdService=_nativeAdService;
@property(retain, nonatomic) ALAdService *adService; // @synthesize adService=_adService;
@property(retain, nonatomic) ALSdkSettings *settings; // @synthesize settings=_settings;
@property(retain, nonatomic) NSString *sdkKey; // @synthesize sdkKey=_sdkKey;
- (void).cxx_destruct;
- (void)initializeSdk;
- (void)setPluginVersion:(id)arg1;
- (void)handleSdkUpdate;
- (id)initWithKey:(id)arg1 usingSettings:(id)arg2;
@property(getter=isEnabledAndInitialized) _Bool enabledAndInitialized; // @dynamic enabledAndInitialized;
- (void)resetSdkState;
- (void)markNetworkError;
- (void)markInitialized:(_Bool)arg1;
- (void)attemptInitialize;
- (id)constraintsForKeys:(id)arg1 variableBindings:(id)arg2;
- (id)numberForKey:(long long)arg1;
- (_Bool)boolForKey:(long long)arg1;
- (double)timeIntervalForKey:(long long)arg1;
- (long long)integerForKey:(long long)arg1;
- (id)stringForKey:(long long)arg1;

@end

