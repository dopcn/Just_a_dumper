//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <UIKit/UIView.h>

#import "QMChorusSliderDelegate-Protocol.h"
#import "QMWordingViewDelegate-Protocol.h"
#import "UIGestureRecognizerDelegate-Protocol.h"

@class NSMutableArray, NSString, QMChorusSlider, QMCircleProgressBar, QMIndividuationAlertItem, QMLyricDisplayView, QMPlaySkinConfig, QMPlayerSkinItem, QMWordingTipsView, SongInfo, UIButton, UIImage, UIImageView, UILabel;
@protocol QMCustomPlayingViewDelegate;

@interface QMCustomPlayerView : UIView <UIGestureRecognizerDelegate, QMWordingViewDelegate, QMChorusSliderDelegate>
{
    _Bool _loved;
    _Bool _isPlaying;
    _Bool _isSliderUse;
    _Bool _isSliderUsing;
    _Bool _displayPlayTimeWhenDrag;
    _Bool _oneLineLyricShouldDisplaySingerOnIdle;
    float _songProgress;
    id <QMCustomPlayingViewDelegate> _playDelegate;
    QMPlaySkinConfig *_skinConfig;
    SongInfo *_song;
    QMPlayerSkinItem *_skinItem;
    UIImage *_albumImage;
    unsigned long long _currentPlayState;
    QMChorusSlider *_chorusSlider;
    UIButton *_loveButton;
    UIImageView *_loveImageView;
    UIButton *_playOrPauseButton;
    UILabel *_songNameLabel;
    UILabel *_singerNameLabel;
    UILabel *_lyricLabel;
    UILabel *_playTimeLabel;
    UILabel *_durationLabel;
    QMLyricDisplayView *_lyricDisplayView;
    NSMutableArray *_curLyric;
    QMCircleProgressBar *_circleProgressBar;
    UIImageView *_albumImageView;
    QMWordingTipsView *_switchPlayerTipView;
    QMWordingTipsView *_lyricViewTipView;
    QMWordingTipsView *_greenOperationTipView;
    QMIndividuationAlertItem *_individuationAlertItem;
}

@property(retain, nonatomic) QMIndividuationAlertItem *individuationAlertItem; // @synthesize individuationAlertItem=_individuationAlertItem;
@property(retain, nonatomic) QMWordingTipsView *greenOperationTipView; // @synthesize greenOperationTipView=_greenOperationTipView;
@property(retain, nonatomic) QMWordingTipsView *lyricViewTipView; // @synthesize lyricViewTipView=_lyricViewTipView;
@property(retain, nonatomic) QMWordingTipsView *switchPlayerTipView; // @synthesize switchPlayerTipView=_switchPlayerTipView;
@property(retain, nonatomic) UIImageView *albumImageView; // @synthesize albumImageView=_albumImageView;
@property(retain, nonatomic) QMCircleProgressBar *circleProgressBar; // @synthesize circleProgressBar=_circleProgressBar;
@property(retain, nonatomic) NSMutableArray *curLyric; // @synthesize curLyric=_curLyric;
@property(retain, nonatomic) QMLyricDisplayView *lyricDisplayView; // @synthesize lyricDisplayView=_lyricDisplayView;
@property(retain, nonatomic) UILabel *durationLabel; // @synthesize durationLabel=_durationLabel;
@property(retain, nonatomic) UILabel *playTimeLabel; // @synthesize playTimeLabel=_playTimeLabel;
@property(retain, nonatomic) UILabel *lyricLabel; // @synthesize lyricLabel=_lyricLabel;
@property(retain, nonatomic) UILabel *singerNameLabel; // @synthesize singerNameLabel=_singerNameLabel;
@property(retain, nonatomic) UILabel *songNameLabel; // @synthesize songNameLabel=_songNameLabel;
@property(retain, nonatomic) UIButton *playOrPauseButton; // @synthesize playOrPauseButton=_playOrPauseButton;
@property(retain, nonatomic) UIImageView *loveImageView; // @synthesize loveImageView=_loveImageView;
@property(retain, nonatomic) UIButton *loveButton; // @synthesize loveButton=_loveButton;
@property(retain, nonatomic) QMChorusSlider *chorusSlider; // @synthesize chorusSlider=_chorusSlider;
@property(nonatomic) unsigned long long currentPlayState; // @synthesize currentPlayState=_currentPlayState;
@property(nonatomic) _Bool oneLineLyricShouldDisplaySingerOnIdle; // @synthesize oneLineLyricShouldDisplaySingerOnIdle=_oneLineLyricShouldDisplaySingerOnIdle;
@property(nonatomic) _Bool displayPlayTimeWhenDrag; // @synthesize displayPlayTimeWhenDrag=_displayPlayTimeWhenDrag;
@property(nonatomic) _Bool isSliderUsing; // @synthesize isSliderUsing=_isSliderUsing;
@property(nonatomic) _Bool isSliderUse; // @synthesize isSliderUse=_isSliderUse;
@property(retain, nonatomic) UIImage *albumImage; // @synthesize albumImage=_albumImage;
@property(nonatomic) _Bool isPlaying; // @synthesize isPlaying=_isPlaying;
@property(nonatomic) _Bool loved; // @synthesize loved=_loved;
@property(retain, nonatomic) QMPlayerSkinItem *skinItem; // @synthesize skinItem=_skinItem;
@property(nonatomic) float songProgress; // @synthesize songProgress=_songProgress;
@property(retain, nonatomic) SongInfo *song; // @synthesize song=_song;
@property(retain, nonatomic) QMPlaySkinConfig *skinConfig; // @synthesize skinConfig=_skinConfig;
@property(retain, nonatomic) id <QMCustomPlayingViewDelegate> playDelegate; // @synthesize playDelegate=_playDelegate;
- (void).cxx_destruct;
- (id)getImage:(id)arg1;
- (id)generateSingerLabelText:(id)arg1;
- (_Bool)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;
- (void)setDuration:(id)arg1;
- (void)setPlayTime:(id)arg1;
- (void)setPlayState:(unsigned long long)arg1;
- (void)setBufferPercent:(double)arg1 startPercent:(double)arg2 songDuration:(double)arg3;
- (void)clearLyric;
- (void)updateMoveNextLyricText:(id)arg1;
- (void)updateMiniLyricProgress:(double)arg1;
- (void)updateLyricData:(id)arg1 State:(unsigned long long)arg2;
- (id)getLyricData:(id)arg1;
- (void)didClickedTipsView:(id)arg1;
- (_Bool)shouldDisplayPlayTimeWhenDrag;
- (void)didDragChorusSlider:(id)arg1;
- (void)didTouchCancelChorusSlider:(id)arg1;
- (void)didTouchUpChorusSlider:(id)arg1;
- (void)didTouchDownChorusSlider:(id)arg1;
- (void)chorusSlider:(id)arg1 valueChanged:(float)arg2;
- (void)QMChorusSliderTapGesture:(id)arg1 location:(struct CGPoint)arg2 tapChorusPoint:(_Bool)arg3;
- (id)getData:(id)arg1 ForName:(id)arg2 key:(id)arg3;
- (void)updateLoveImageViewLoved:(_Bool)arg1;
- (void)updateLoveButtonLoved:(_Bool)arg1;
- (void)updateCircleProgressBar:(float)arg1;
- (void)updateProgressBar:(float)arg1;
- (void)resetLyricWaitingState;
- (void)resumeLayer:(id)arg1;
- (void)pauseLayer:(id)arg1;
- (void)updatePlayState:(unsigned long long)arg1;
- (void)hide:(_Bool)arg1;
- (void)show:(_Bool)arg1;
- (void)viewDidHide;
- (void)viewDidShow;
- (void)downloadBtnTapped;
- (void)albumViewTapped;
- (void)lyricAreaTapped;
- (void)blankAreaTapped:(id)arg1;
- (void)moreBtnTapped:(id)arg1;
- (void)switchPlayerBtnTapped:(id)arg1;
- (void)backBtnTapped:(id)arg1;
- (void)loveBtnClicked:(id)arg1;
- (void)shareBtnTapped:(id)arg1;
- (void)playPreBtnTapped:(id)arg1;
- (void)playNextBtnTapped:(id)arg1;
- (void)playBtnTapped:(id)arg1;
- (void)updatePlayOrPauseButton:(_Bool)arg1;
- (void)reloadAllMutableDatasource;
- (void)reloadDatasourceForView:(id)arg1;
- (void)connectDatasource:(id)arg1 view:(id)arg2;
- (void)addAccessibiltyToView:(id)arg1 byAction:(id)arg2;
- (void)addActionSheetTapGestureToView:(id)arg1;
- (void)connectButtonTargetAction:(id)arg1;
- (void)addSubviewsForViewDicts:(id)arg1 parentView:(id)arg2;
- (void)addAnimation:(id)arg1 toView:(id)arg2;
- (void)removePlayStateAnimations;
- (void)addPlayStateAnimationByPlayState:(unsigned long long)arg1;
- (void)reloadPlayStateAnimations;
- (void)addTapJumpLyricToView:(id)arg1;
- (void)addSwipeDownToExit;
- (void)addSwipeLeftToLyricViewGesture;
- (void)addDefaultGesture;
- (void)addHitarea:(id)arg1;
- (void)handleAnimation:(id)arg1;
- (void)handleAction:(id)arg1;
- (void)dispatchButtonAction:(id)arg1;
- (void)updateViewFromTriggerDict:(id)arg1;
- (void)handleTrigger:(long long)arg1;
- (void)removeAllTips;
- (void)removeTip:(id)arg1 delay:(long long)arg2;
- (void)showGreenOpearationTip:(id)arg1;
- (void)showSwitchPlayerTip;
- (void)showLyricViewTip;
- (void)loadViews;
- (void)removeAllSubviews;
- (void)cleanSkin;
- (void)changeSkin:(id)arg1 skinConfig:(id)arg2;
- (id)gestureRecognizerForType:(id)arg1;
- (void)tapHandler:(id)arg1;
- (void)swipeDownHandler:(id)arg1;
- (void)swipeUpHandler:(id)arg1;
- (void)swipeRightHandler:(id)arg1;
- (void)swipeLeftHandler:(id)arg1;
- (void)touchUpHandler:(id)arg1;
- (void)touchDownHandler:(id)arg1;
- (void)createTrigger:(id)arg1 type:(id)arg2 forHitarea:(id)arg3;
- (void)createHitView:(id)arg1 forTarget:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

