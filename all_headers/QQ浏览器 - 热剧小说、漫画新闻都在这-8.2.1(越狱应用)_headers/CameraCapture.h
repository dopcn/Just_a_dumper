//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "AVCaptureAudioDataOutputSampleBufferDelegate-Protocol.h"
#import "AVCaptureMetadataOutputObjectsDelegate-Protocol.h"
#import "AVCaptureVideoDataOutputSampleBufferDelegate-Protocol.h"

@class AVAssetWriter, AVAssetWriterInput, AVAssetWriterInputPixelBufferAdaptor, AVCaptureAudioDataOutput, AVCaptureDevice, AVCaptureDeviceInput, AVCaptureMetadataOutput, AVCaptureSession, AVCaptureStillImageOutput, AVCaptureVideoDataOutput, AVCaptureVideoPreviewLayer, CIContext, GLKView, NSString, UIImage;
@protocol CameraCaptureDelegate, OS_dispatch_queue;

@interface CameraCapture : NSObject <AVCaptureVideoDataOutputSampleBufferDelegate, AVCaptureAudioDataOutputSampleBufferDelegate, AVCaptureMetadataOutputObjectsDelegate>
{
    AVCaptureSession *m_pSession;
    AVCaptureVideoPreviewLayer *m_aVCaptureVideoPreviewLayer;
    AVCaptureDevice *m_pCaptureDevice;
    _Bool m_stopCaptureImage;
    _Bool _isSessionStop;
    AVCaptureMetadataOutput *_metadataOutput;
    _Bool _useDeviceOrientation;
    _Bool _recordFailed;
    _Bool _isFirstWrite;
    _Bool _isRecording;
    _Bool _isScreenRecording;
    _Bool _isSupportRecord;
    id <CameraCaptureDelegate> delegate;
    NSString *_cameraQuality;
    unsigned long long _position;
    struct opaqueCMSampleBuffer *_sampleBufferRef;
    AVCaptureStillImageOutput *_stillImageOutput;
    AVCaptureDeviceInput *_videoDeviceInput;
    AVCaptureVideoDataOutput *_videoOutput;
    AVCaptureDeviceInput *_audioMicInput;
    AVCaptureAudioDataOutput *_audioOutput;
    AVAssetWriterInput *_audioInput;
    AVAssetWriterInput *_videoInput;
    AVAssetWriter *_writer;
    AVAssetWriterInputPixelBufferAdaptor *_pixelBufferAdaptor;
    UIImage *_captureImage;
    NSObject<OS_dispatch_queue> *_avQueue;
    NSString *_outputPath;
    UIImage *_currentImage;
    GLKView *_glView;
    CIContext *_ciContext;
    NSString *_videoPath;
    UIImage *_previewImage;
    struct CGSize _outputSize;
    struct CGRect _drawRect;
    struct CGRect _glCropRect;
}

+ (_Bool)isRearCameraAvailable;
+ (_Bool)isFrontCameraAvailable;
+ (void)requestCameraPermission:(CDUnknownBlockType)arg1;
+ (id)imageDataFromSampleBuffer:(struct opaqueCMSampleBuffer *)arg1 compressionQuality:(double)arg2;
+ (id)imageFromSampleBuffer:(struct opaqueCMSampleBuffer *)arg1;
+ (id)imageByScalingPixel:(struct CGSize)arg1 withSourceImage:(id)arg2;
@property(retain, nonatomic) UIImage *previewImage; // @synthesize previewImage=_previewImage;
@property(retain, nonatomic) NSString *videoPath; // @synthesize videoPath=_videoPath;
@property(nonatomic) _Bool isSupportRecord; // @synthesize isSupportRecord=_isSupportRecord;
@property struct CGRect glCropRect; // @synthesize glCropRect=_glCropRect;
@property(nonatomic) struct CGRect drawRect; // @synthesize drawRect=_drawRect;
@property(retain, nonatomic) CIContext *ciContext; // @synthesize ciContext=_ciContext;
@property(retain, nonatomic) GLKView *glView; // @synthesize glView=_glView;
@property(retain, nonatomic) UIImage *currentImage; // @synthesize currentImage=_currentImage;
@property _Bool isScreenRecording; // @synthesize isScreenRecording=_isScreenRecording;
@property _Bool isRecording; // @synthesize isRecording=_isRecording;
@property _Bool isFirstWrite; // @synthesize isFirstWrite=_isFirstWrite;
@property(copy, nonatomic) NSString *outputPath; // @synthesize outputPath=_outputPath;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *avQueue; // @synthesize avQueue=_avQueue;
@property(retain) UIImage *captureImage; // @synthesize captureImage=_captureImage;
@property(retain, nonatomic) AVAssetWriterInputPixelBufferAdaptor *pixelBufferAdaptor; // @synthesize pixelBufferAdaptor=_pixelBufferAdaptor;
@property(retain, nonatomic) AVAssetWriter *writer; // @synthesize writer=_writer;
@property(retain, nonatomic) AVAssetWriterInput *videoInput; // @synthesize videoInput=_videoInput;
@property(retain, nonatomic) AVAssetWriterInput *audioInput; // @synthesize audioInput=_audioInput;
@property(retain, nonatomic) AVCaptureAudioDataOutput *audioOutput; // @synthesize audioOutput=_audioOutput;
@property(retain, nonatomic) AVCaptureDeviceInput *audioMicInput; // @synthesize audioMicInput=_audioMicInput;
@property(nonatomic) struct CGSize outputSize; // @synthesize outputSize=_outputSize;
@property(retain, nonatomic) AVCaptureVideoDataOutput *videoOutput; // @synthesize videoOutput=_videoOutput;
@property(retain, nonatomic) AVCaptureDeviceInput *videoDeviceInput; // @synthesize videoDeviceInput=_videoDeviceInput;
@property(nonatomic) _Bool recordFailed; // @synthesize recordFailed=_recordFailed;
@property(retain, nonatomic) AVCaptureStillImageOutput *stillImageOutput; // @synthesize stillImageOutput=_stillImageOutput;
@property(nonatomic) _Bool useDeviceOrientation; // @synthesize useDeviceOrientation=_useDeviceOrientation;
@property struct opaqueCMSampleBuffer *sampleBufferRef; // @synthesize sampleBufferRef=_sampleBufferRef;
@property(nonatomic) unsigned long long position; // @synthesize position=_position;
@property(copy, nonatomic) NSString *cameraQuality; // @synthesize cameraQuality=_cameraQuality;
@property(nonatomic) __weak id <CameraCaptureDelegate> delegate; // @synthesize delegate;
- (void).cxx_destruct;
- (void)captureOutput:(id)arg1 didOutputMetadataObjects:(id)arg2 fromConnection:(id)arg3;
- (void)captureOutput:(id)arg1 didOutputSampleBuffer:(struct opaqueCMSampleBuffer *)arg2 fromConnection:(id)arg3;
- (id)videoPreviewFrorSampleBuffer:(struct opaqueCMSampleBuffer *)arg1;
- (struct __CVBuffer *)pixelBufferFromCGImage:(struct CGImage *)arg1;
- (struct __CVBuffer *)pixedlBufferFromCGImage:(struct CGImage *)arg1;
- (id)imageFromView:(id)arg1;
- (void)appendVideoWithTime:(CDStruct_1b6d18a9)arg1;
- (id)videoImage;
- (void)captureImageEverySecond:(struct opaqueCMSampleBuffer *)arg1;
- (void)initAudioInput;
- (void)initVideoInPut;
- (void)setupWritter;
- (id)cropImage:(id)arg1 usingPreviewLayer:(id)arg2;
- (long long)orientationForConnection;
- (id)captureConnection;
- (_Bool)startFocus;
- (id)cameraWithPosition:(long long)arg1;
- (void)setupGLViewWithFrame:(struct CGRect)arg1;
- (void)setupAudio;
- (void)addVideoWatermarkWithCompletion:(CDUnknownBlockType)arg1;
- (id)firstFrameWithVideoURL:(id)arg1 size:(struct CGSize)arg2;
- (void)dealloc;
- (struct CGAffineTransform)transformForOrientation:(long long)arg1 devicePosition:(long long)arg2;
- (void)stopScreenRecordingWithCompletion:(CDUnknownBlockType)arg1;
- (void)startScreenRecordingWithCompletion:(CDUnknownBlockType)arg1;
- (id)currentVideoPath;
- (void)stopRecordingWithCompletion:(CDUnknownBlockType)arg1;
- (void)startRecording;
- (struct CGRect)cropRect;
- (id)captureImageDataWithCompressionQuality:(double)arg1;
- (void)capture:(CDUnknownBlockType)arg1 exactSeenImage:(_Bool)arg2 fixOrientation:(_Bool)arg3;
- (_Bool)isRunning;
- (_Bool)isStopping;
- (void)stopCamera;
- (void)start:(CDUnknownBlockType)arg1;
- (void)setRenderViewFrame:(struct CGRect)arg1 orientation:(long long)arg2;
- (id)renderViewLayer;
- (id)getAVCaptureVideoPreviewLayer;
- (id)initWithQuality:(id)arg1 position:(unsigned long long)arg2 initQrcode:(_Bool)arg3 shouldSupportRecord:(_Bool)arg4;
- (id)initWithQuality:(id)arg1 position:(unsigned long long)arg2 shouldSupportRecord:(_Bool)arg3;
- (id)initWithQuality:(id)arg1 position:(unsigned long long)arg2 initQrcode:(_Bool)arg3;
- (id)initWithQuality:(id)arg1 position:(unsigned long long)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

