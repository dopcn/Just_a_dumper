//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "NSCopying-Protocol.h"

@class BFCancellationTokenSource, NSString, PFMutableQueryState;

@interface PFQuery : NSObject <NSCopying>
{
    BFCancellationTokenSource *_cancellationTokenSource;
    PFMutableQueryState *_state;
}

+ (id)_getCurrentUserForQueryState:(id)arg1;
+ (id)queryController;
+ (void)clearAllCachedResults;
+ (id)queryForUser;
+ (id)orQueryWithSubqueries:(id)arg1;
+ (id)queryWithClassName:(id)arg1 predicate:(id)arg2;
+ (id)queryWithClassName:(id)arg1;
+ (id)queryWithClassName:(id)arg1 normalizedPredicate:(id)arg2;
+ (void)assertKeyPathConstant:(id)arg1;
+ (id)getUserObjectWithId:(id)arg1 error:(id *)arg2;
+ (id)getUserObjectWithId:(id)arg1;
+ (id)getObjectOfClass:(id)arg1 objectId:(id)arg2 error:(id *)arg3;
+ (id)getObjectOfClass:(id)arg1 objectId:(id)arg2;
@property(retain, nonatomic) PFMutableQueryState *state; // @synthesize state=_state;
- (void).cxx_destruct;
- (void)_validateQueryState;
- (id)_queryStateCopyWithCachePolicy:(unsigned char)arg1;
- (id)_queryStateCopy;
- (id)ignoreACLs;
- (id)fromPinWithName:(id)arg1;
- (id)fromPin;
- (id)fromLocalDatastore;
- (void)_checkPinningEnabled:(_Bool)arg1;
- (void)clearCachedResult;
@property(readonly, nonatomic) _Bool hasCachedResult;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)cancel;
- (id)_countObjectsAsyncForQueryState:(id)arg1 after:(id)arg2;
- (void)countObjectsInBackgroundWithBlock:(CDUnknownBlockType)arg1;
- (id)countObjectsInBackground;
- (id)_getFirstObjectAsyncWithCachePolicy:(unsigned char)arg1 after:(id)arg2;
- (void)getFirstObjectInBackgroundWithBlock:(CDUnknownBlockType)arg1;
- (id)getFirstObjectInBackground;
- (id)_findObjectsAsyncForQueryState:(id)arg1 after:(id)arg2;
- (void)findObjectsInBackgroundWithBlock:(CDUnknownBlockType)arg1;
- (id)findObjectsInBackground;
- (id)_getObjectWithIdAsync:(id)arg1 cachePolicy:(unsigned char)arg2 after:(id)arg3;
- (void)getObjectInBackgroundWithId:(id)arg1 block:(CDUnknownBlockType)arg2;
- (id)getObjectInBackgroundWithId:(id)arg1;
- (void)markAsRunning:(id)arg1;
- (void)checkIfCommandIsRunning;
- (void)whereComparisonPredicate:(id)arg1;
- (id)selectKeys:(id)arg1;
- (id)includeKeys:(id)arg1;
- (id)includeKey:(id)arg1;
- (void)redirectClassNameForKey:(id)arg1;
- (id)whereRelatedToObject:(id)arg1 fromKey:(id)arg2;
- (id)whereKey:(id)arg1 doesNotMatchKey:(id)arg2 inQuery:(id)arg3;
- (id)whereKey:(id)arg1 matchesKey:(id)arg2 inQuery:(id)arg3;
- (id)whereKey:(id)arg1 doesNotMatchQuery:(id)arg2;
- (id)whereKey:(id)arg1 matchesQuery:(id)arg2;
- (id)whereKeyDoesNotExist:(id)arg1;
- (id)whereKeyExists:(id)arg1;
- (id)whereKey:(id)arg1 hasSuffix:(id)arg2;
- (id)whereKey:(id)arg1 hasPrefix:(id)arg2;
- (id)whereKey:(id)arg1 containsString:(id)arg2;
- (id)whereKey:(id)arg1 matchesRegex:(id)arg2 modifiers:(id)arg3;
- (id)whereKey:(id)arg1 matchesRegex:(id)arg2;
- (id)whereKey:(id)arg1 withinGeoBoxFromSouthwest:(id)arg2 toNortheast:(id)arg3;
- (id)whereKey:(id)arg1 nearGeoPoint:(id)arg2 withinKilometers:(double)arg3;
- (id)whereKey:(id)arg1 nearGeoPoint:(id)arg2 withinMiles:(double)arg3;
- (id)whereKey:(id)arg1 nearGeoPoint:(id)arg2 withinRadians:(double)arg3;
- (id)whereKey:(id)arg1 nearGeoPoint:(id)arg2;
- (id)whereKey:(id)arg1 containsAllObjectsInArray:(id)arg2;
- (id)whereKey:(id)arg1 notContainedIn:(id)arg2;
- (id)whereKey:(id)arg1 containedIn:(id)arg2;
- (id)whereKey:(id)arg1 notEqualTo:(id)arg2;
- (id)whereKey:(id)arg1 lessThanOrEqualTo:(id)arg2;
- (id)whereKey:(id)arg1 lessThan:(id)arg2;
- (id)whereKey:(id)arg1 greaterThanOrEqualTo:(id)arg2;
- (id)whereKey:(id)arg1 greaterThan:(id)arg2;
- (id)whereKey:(id)arg1 equalTo:(id)arg2;
- (id)whereKey:(id)arg1 condition:(id)arg2 object:(id)arg3;
- (id)orderBySortDescriptors:(id)arg1;
- (id)orderBySortDescriptor:(id)arg1;
- (id)addDescendingOrder:(id)arg1;
- (id)orderByDescending:(id)arg1;
- (id)addAscendingOrder:(id)arg1;
- (id)orderByAscending:(id)arg1;
@property(nonatomic) _Bool trace;
@property(nonatomic) double maxCacheAge;
@property(nonatomic) unsigned char cachePolicy;
@property(nonatomic) long long skip;
@property(nonatomic) long long limit;
@property(retain, nonatomic) NSString *parseClassName;
- (id)initWithClassName:(id)arg1;
- (id)initWithState:(id)arg1;
- (void)arrayResultTimeoutTimer:(id)arg1;
- (void)objectResultTimeoutTimer:(id)arg1;
- (void)Help_getObjectInBackgroundWithId:(id)arg1 block:(CDUnknownBlockType)arg2;
- (void)Help_getObjectInBackgroundWithId:(id)arg1 block:(CDUnknownBlockType)arg2 isCache:(_Bool)arg3;
- (void)Help_findObjectsInBackgroundWithBlock:(CDUnknownBlockType)arg1;
- (void)Help_findObjectsInBackgroundWithBlock:(CDUnknownBlockType)arg1 isCache:(_Bool)arg2;
- (void)Help_countObjectsInBackgroundWithBlock:(CDUnknownBlockType)arg1;
- (void)Help_countObjectsInBackgroundWithBlock:(CDUnknownBlockType)arg1 withTotalNumber:(long long)arg2 isCache:(_Bool)arg3;
- (void)Help_hasNewDataWithBlock:(CDUnknownBlockType)arg1;
- (long long)countObjects:(id *)arg1;
- (long long)countObjects;
- (id)getFirstObject:(id *)arg1;
- (id)getFirstObject;
- (id)findObjects:(id *)arg1;
- (id)findObjects;
- (id)getObjectWithId:(id)arg1 error:(id *)arg2;
- (id)getObjectWithId:(id)arg1;
- (void)countObjectsInBackgroundWithTarget:(id)arg1 selector:(SEL)arg2;
- (void)getFirstObjectInBackgroundWithTarget:(id)arg1 selector:(SEL)arg2;
- (void)findObjectsInBackgroundWithTarget:(id)arg1 selector:(SEL)arg2;
- (void)getObjectInBackgroundWithId:(id)arg1 target:(id)arg2 selector:(SEL)arg3;

@end

