//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "LMBaseModel.h"

#import "LMAudioSubEntityProtocol-Protocol.h"
#import "LMDownloadable-Protocol.h"
#import "LMPlayable-Protocol.h"

@class NSString;

@interface LMProgrammeAudio : LMBaseModel <LMPlayable, LMDownloadable, LMAudioSubEntityProtocol>
{
    long long _aId;
    long long _programmeId;
    NSString *_name;
    NSString *_url;
    long long _length;
    long long _size;
    long long _section;
    double _insertDBTime;
    double _downloadProgress;
    long long _downloadStatus;
    double _playTime;
    NSString *_cover;
    double _onlineTime;
    long long _hasBuy;
    long long _payType;
    long long _strategy;
    long long _pageNum;
}

+ (id)convertToBaseModel:(id)arg1;
+ (id)modelWithDict:(id)arg1;
+ (id)getProgrammeAudioListWithDataSource:(id)arg1 programmeId:(long long)arg2;
+ (_Bool)updateAudioUrl:(id)arg1 programmeId:(long long)arg2 audioId:(long long)arg3;
+ (double)queryProgrammeSectionLastUpdateTimeWithId:(long long)arg1 pageNum:(long long)arg2;
+ (_Bool)checkProgrammeSectionIsExistWithId:(long long)arg1 pageNum:(long long)arg2;
+ (_Bool)updateWholeProgrammeBuyStatus:(long long)arg1 programmeId:(long long)arg2;
+ (_Bool)updateWholeProgrammePayType:(long long)arg1 programmeId:(long long)arg2;
+ (_Bool)updateAudioPayType:(long long)arg1 buyStatus:(long long)arg2 programmeId:(long long)arg3 exceptAudioIdArray:(id)arg4;
+ (_Bool)updateAudioBuyStatus:(long long)arg1 programmeId:(long long)arg2 exceptAudioIdArray:(id)arg3;
+ (_Bool)updateAudioPayType:(long long)arg1 programmeId:(long long)arg2 audioIdArray:(id)arg3;
+ (_Bool)resetStrategyByAudioId:(long long)arg1 programmeId:(long long)arg2;
+ (_Bool)updateProgrammeAudioBuyStatus:(long long)arg1 programmeId:(long long)arg2 audioIdArray:(id)arg3;
+ (_Bool)deleteAllPurchasedProgrammeAudio;
+ (_Bool)invalidProgrammeAudioById:(long long)arg1;
+ (_Bool)deleteAudiosByProgrammeId:(long long)arg1 pageNum:(long long)arg2;
+ (_Bool)deleteAudiosByProgrammeId:(long long)arg1;
+ (_Bool)saveProgrammeAudioCoverUrlToDB:(id)arg1 programmeId:(long long)arg2 audioId:(long long)arg3;
+ (_Bool)saveProgrammeAudioToDB:(id)arg1 programmeId:(long long)arg2 pageNum:(long long)arg3;
+ (id)queryAudioFromDBWithProgrammeId:(long long)arg1 audioId:(long long)arg2;
+ (id)queryProgrammeAudioFromDBWithId:(long long)arg1 pageNum:(long long)arg2;
@property(nonatomic) long long pageNum; // @synthesize pageNum=_pageNum;
@property(nonatomic) long long strategy; // @synthesize strategy=_strategy;
@property(nonatomic) long long payType; // @synthesize payType=_payType;
@property(nonatomic) long long hasBuy; // @synthesize hasBuy=_hasBuy;
@property(nonatomic) double onlineTime; // @synthesize onlineTime=_onlineTime;
@property(retain, nonatomic) NSString *cover; // @synthesize cover=_cover;
@property(nonatomic) double playTime; // @synthesize playTime=_playTime;
@property(nonatomic) long long downloadStatus; // @synthesize downloadStatus=_downloadStatus;
@property(nonatomic) double downloadProgress; // @synthesize downloadProgress=_downloadProgress;
@property(nonatomic) double insertDBTime; // @synthesize insertDBTime=_insertDBTime;
@property(nonatomic) long long section; // @synthesize section=_section;
@property(nonatomic) long long size; // @synthesize size=_size;
@property(nonatomic) long long length; // @synthesize length=_length;
@property(copy, nonatomic) NSString *url; // @synthesize url=_url;
@property(copy, nonatomic) NSString *name; // @synthesize name=_name;
@property(nonatomic) long long programmeId; // @synthesize programmeId=_programmeId;
@property(nonatomic) long long aId; // @synthesize aId=_aId;
- (void).cxx_destruct;
- (long long)entityType;
- (id)convertToDownloadItem;
- (id)convertToPlayItem;
- (_Bool)isEqual:(id)arg1;
- (id)initWithDict:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

