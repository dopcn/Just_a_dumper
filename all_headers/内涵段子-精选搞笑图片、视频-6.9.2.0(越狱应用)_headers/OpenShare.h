//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

#import "WKNavigationDelegate-Protocol.h"

@class NSString;

@interface OpenShare : NSObject <WKNavigationDelegate>
{
    CDUnknownBlockType _authSuccess;
    CDUnknownBlockType _authFail;
}

+ (id)dataWithImage:(id)arg1 scale:(struct CGSize)arg2;
+ (id)dataWithImage:(id)arg1;
+ (id)screenshot;
+ (id)urlDecode:(id)arg1;
+ (id)base64AndUrlEncode:(id)arg1;
+ (id)generalPasteboardData:(id)arg1 encoding:(unsigned long long)arg2;
+ (void)setGeneralPasteboard:(id)arg1 Value:(id)arg2 encoding:(unsigned long long)arg3;
+ (id)CFBundleIdentifier;
+ (id)CFBundleDisplayName;
+ (id)base64Decode:(id)arg1;
+ (id)base64Encode:(id)arg1;
+ (id)parseUrl:(id)arg1;
+ (_Bool)beginAuth:(id)arg1 Success:(CDUnknownBlockType)arg2 Fail:(CDUnknownBlockType)arg3;
+ (_Bool)beginShare:(id)arg1 Message:(id)arg2 Success:(CDUnknownBlockType)arg3 Fail:(CDUnknownBlockType)arg4;
+ (CDUnknownBlockType)authFailCallback;
+ (CDUnknownBlockType)authSuccessCallback;
+ (id)message;
+ (void)setMessage:(id)arg1;
+ (void)setReturnedData:(id)arg1;
+ (id)returnedData;
+ (id)returnedURL;
+ (void)setShareFailCallback:(CDUnknownBlockType)arg1;
+ (void)setShareSuccessCallback:(CDUnknownBlockType)arg1;
+ (CDUnknownBlockType)shareFailCallback;
+ (CDUnknownBlockType)shareSuccessCallback;
+ (_Bool)handleOpenURL:(id)arg1;
+ (_Bool)canOpen:(id)arg1;
+ (void)openURL:(id)arg1;
+ (id)keyFor:(id)arg1;
+ (void)set:(id)arg1 Keys:(id)arg2;
+ (id)shared;
+ (void)chatInQQGroup:(id)arg1;
+ (void)chatWithQQNumber:(id)arg1;
+ (_Bool)QQ_handleOpenURL;
+ (id)genShareUrl:(id)arg1 to:(int)arg2;
+ (void)QQAuth:(id)arg1 Success:(CDUnknownBlockType)arg2 Fail:(CDUnknownBlockType)arg3;
+ (void)shareToQQDataline:(id)arg1 Success:(CDUnknownBlockType)arg2 Fail:(CDUnknownBlockType)arg3;
+ (void)shareToQQFavorites:(id)arg1 Success:(CDUnknownBlockType)arg2 Fail:(CDUnknownBlockType)arg3;
+ (void)shareToQQZone:(id)arg1 Success:(CDUnknownBlockType)arg2 Fail:(CDUnknownBlockType)arg3;
+ (void)shareToQQFriends:(id)arg1 Success:(CDUnknownBlockType)arg2 Fail:(CDUnknownBlockType)arg3;
+ (_Bool)isQQInstalled;
+ (void)connectQQWithAppId:(id)arg1;
+ (_Bool)Weibo_handleOpenURL;
+ (void)WeiboAuth:(id)arg1 redirectURI:(id)arg2 Success:(CDUnknownBlockType)arg3 Fail:(CDUnknownBlockType)arg4;
+ (void)shareToWeibo:(id)arg1 Success:(CDUnknownBlockType)arg2 Fail:(CDUnknownBlockType)arg3;
+ (_Bool)isWeiboInstalled;
+ (void)connectWeiboWithAppKey:(id)arg1 appSecret:(id)arg2 redirectURI:(id)arg3;
+ (void)connectWeiboWithAppKey:(id)arg1;
+ (_Bool)Weixin_handleOpenURL;
+ (void)WeixinAuth:(id)arg1 Success:(CDUnknownBlockType)arg2 Fail:(CDUnknownBlockType)arg3;
+ (id)genWeixinShareUrl:(id)arg1 to:(int)arg2;
+ (void)shareToWeixinFavorite:(id)arg1 Success:(CDUnknownBlockType)arg2 Fail:(CDUnknownBlockType)arg3;
+ (void)shareToWeixinTimeline:(id)arg1 Success:(CDUnknownBlockType)arg2 Fail:(CDUnknownBlockType)arg3;
+ (void)shareToWeixinSession:(id)arg1 Success:(CDUnknownBlockType)arg2 Fail:(CDUnknownBlockType)arg3;
+ (_Bool)isWeixinInstalled;
+ (void)connectWeixinWithAppId:(id)arg1;
@property(copy, nonatomic) CDUnknownBlockType authFail; // @synthesize authFail=_authFail;
@property(copy, nonatomic) CDUnknownBlockType authSuccess; // @synthesize authSuccess=_authSuccess;
- (void).cxx_destruct;
- (void)webView:(id)arg1 didReceiveServerRedirectForProvisionalNavigation:(id)arg2;
- (void)webView:(id)arg1 didFailProvisionalNavigation:(id)arg2 withError:(id)arg3;
- (void)webView:(id)arg1 didFinishNavigation:(id)arg2;
- (void)webView:(id)arg1 didStartProvisionalNavigation:(id)arg2;
- (void)addWebViewByURL:(id)arg1;
- (void)activityIndicatorViewAction:(id)arg1 stop:(_Bool)arg2;
- (void)hideWebView:(id)arg1 withOAuthDic:(id)arg2;
- (id)scaleImage:(id)arg1 toSize:(struct CGSize)arg2;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

