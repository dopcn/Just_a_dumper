//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "LKPBaseOperation.h"

@class AVAssetExportSession, LKPAPIOperation, LKPAssetMediaIO, LKPContentDataInfo, LKPContentInfo, LKPOBSOperation, NSArray, NSError, NSNumber, NSString, NSTimer;
@protocol LKPUploadOperationDelegate;

@interface LKPUploadOperation : LKPBaseOperation
{
    long long _currentUploadIndex;
    long long _totalCount;
    long long _opType;
    LKPContentDataInfo *_currentContentItem;
    long long _retryCount;
    NSTimer *_retryTimer;
    _Bool _stopUploadFlag;
    _Bool _failStatusDoNotSaveToDB;
    _Bool _forceCancelAleadyCalled;
    LKPOBSOperation *_obsOperation;
    LKPAPIOperation *_apiOperation;
    LKPAssetMediaIO *_assetMediaIO;
    AVAssetExportSession *_videoExportSession;
    NSTimer *_videoEncodeTimer;
    CDStruct_e83c9415 _videoEncodeTrimTimeRange;
    NSNumber *_revisionForTagSync;
    NSArray *_tagInfosForTagSync;
    _Bool _needRetry;
    NSString *_clientID;
    long long _syncType;
    id <LKPUploadOperationDelegate> _delegate;
    LKPContentInfo *_contentInfo;
    NSError *_error;
}

@property(retain, nonatomic) NSError *error; // @synthesize error=_error;
@property(retain, nonatomic) LKPContentInfo *contentInfo; // @synthesize contentInfo=_contentInfo;
@property(nonatomic) __weak id <LKPUploadOperationDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) _Bool needRetry; // @synthesize needRetry=_needRetry;
@property(nonatomic) long long syncType; // @synthesize syncType=_syncType;
@property(retain, nonatomic) NSString *clientID; // @synthesize clientID=_clientID;
@property(readonly, nonatomic) long long opType; // @synthesize opType=_opType;
- (void).cxx_destruct;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (_Bool)needToStopUpload;
- (void)cleanRetryTimer;
- (void)retryScheduleTimerStart;
- (void)timerFired:(id)arg1;
- (void)resetRetry;
- (void)setRetry;
- (void)checkRetryErrorCondition:(long long)arg1;
- (id)description;
- (void)didComplete:(id)arg1;
- (void)stopOperation;
- (void)didFail:(id)arg1;
- (void)didCancel;
- (void)willStart;
- (void)didItemCompleteDelegate:(id)arg1;
- (void)didProgressDelegate:(float)arg1;
- (void)updateObsInfoWithContentItem:(id)arg1;
- (void)conflictContentComplete:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)updateContentCompleteOnlyStatus:(CDUnknownBlockType)arg1;
- (void)updateContentComplete:(CDUnknownBlockType)arg1;
- (void)updateContentStatus:(long long)arg1 syncType:(long long)arg2 error:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)syncApiCall;
- (void)createContent:(id)arg1;
- (void)conflictContent:(_Bool)arg1;
- (void)didCompleteAndCallServerAPI;
- (void)syncContentDataInfo:(id)arg1;
- (void)syncContentDataInfo;
- (void)didItemComplete:(id)arg1;
- (void)didLocalFileItemFail:(id)arg1 error:(id)arg2;
- (void)didLocalFileItemFailAndCheckRetry:(id)arg1 error:(id)arg2;
- (void)didItemOBSAPIFail:(id)arg1 error:(id)arg2;
- (void)didItemCancel:(id)arg1;
- (void)willItemUploadStart:(id)arg1;
- (void)didItemProgress:(id)arg1 progress:(float)arg2;
- (void)cancelOperation;
- (void)cancelItem:(id)arg1;
- (void)cancel;
- (void)forceCancel;
- (void)uploadSuccess:(id)arg1 objectId:(id)arg2;
- (void)copy:(id)arg1 sourcePath:(id)arg2;
- (_Bool)isObsCopyUpload:(id)arg1;
- (void)upload:(id)arg1 offset:(unsigned long long)arg2;
- (void)uploadLocalFile:(id)arg1;
- (void)uploadLocalFile:(id)arg1 contentItem:(id)arg2;
- (id)convertErrorCode:(id)arg1;
- (id)makeError:(long long)arg1 userInfo:(id)arg2;
- (id)makeError:(long long)arg1;
- (void)uploadLocalVideoFile:(id)arg1;
- (void)uploadAssetFile:(id)arg1 contentItem:(id)arg2;
- (void)uploadStart:(id)arg1;
- (void)retryUpload;
- (void)nextUpload;
- (void)main;
- (void)setContentInfo:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (id)getCurrentContentInfo;
- (void)dealloc;
- (id)initWithContentInfo:(id)arg1 opType:(long long)arg2 delegate:(id)arg3;

@end

