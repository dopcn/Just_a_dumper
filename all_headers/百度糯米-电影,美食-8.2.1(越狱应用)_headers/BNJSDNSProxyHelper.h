//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

@class NSArray, NSDate, QMSafeMutableDictionary;

@interface BNJSDNSProxyHelper : NSObject
{
    _Bool _enable;
    _Bool _isDNSRequest;
    double _durationCacheTime;
    NSDate *_lastRenewDate;
    QMSafeMutableDictionary *_cacheDomainIpMap;
    QMSafeMutableDictionary *_cacheFailureIpPool;
    NSArray *_listDNSParseAPIIp;
    QMSafeMutableDictionary *_cacheAllDomainIpMap;
    QMSafeMutableDictionary *_ip2DomianMaps;
}

+ (id)sharedHelper;
@property(retain, nonatomic) QMSafeMutableDictionary *ip2DomianMaps; // @synthesize ip2DomianMaps=_ip2DomianMaps;
@property(retain, nonatomic) QMSafeMutableDictionary *cacheAllDomainIpMap; // @synthesize cacheAllDomainIpMap=_cacheAllDomainIpMap;
@property(nonatomic) _Bool isDNSRequest; // @synthesize isDNSRequest=_isDNSRequest;
@property(retain, nonatomic) NSArray *listDNSParseAPIIp; // @synthesize listDNSParseAPIIp=_listDNSParseAPIIp;
@property(retain, nonatomic) QMSafeMutableDictionary *cacheFailureIpPool; // @synthesize cacheFailureIpPool=_cacheFailureIpPool;
@property(retain, nonatomic) QMSafeMutableDictionary *cacheDomainIpMap; // @synthesize cacheDomainIpMap=_cacheDomainIpMap;
@property(retain, nonatomic) NSDate *lastRenewDate; // @synthesize lastRenewDate=_lastRenewDate;
@property(nonatomic) double durationCacheTime; // @synthesize durationCacheTime=_durationCacheTime;
@property(nonatomic, getter=isEnable) _Bool enable; // @synthesize enable=_enable;
- (void).cxx_destruct;
- (void)actionNetworkTypeDidChanged:(id)arg1;
- (_Bool)checkIpMapExpireOnSendRequest;
- (void)doOnApplicationResume;
- (void)renewIpMap;
- (void)clearIpMap;
- (_Bool)isIpMapExpire;
- (id)domiansForIp:(id)arg1;
- (_Bool)isValidIp:(id)arg1 withDomain:(id)arg2;
- (void)addIpIntoFailurePool:(id)arg1 withDomain:(id)arg2;
- (_Bool)addFailureCounter:(id)arg1 withDomain:(id)arg2;
- (void)addIp:(id)arg1 withDomain:(id)arg2;
- (id)optimumIpForDomain:(id)arg1;
- (id)init;
- (void)dealloc;

@end

