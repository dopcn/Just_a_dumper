//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

@class AVPlayerItem, AVPlayerLayer, NSString, QLMiniVideoDownLoadProxy, QLZAVPlayer, UIView;

@interface QLMiniVideoPlayer : NSObject
{
    long long mStatusObservePairs;
    long long mPlayEndObservePairs;
    long long mPlayerPlayStatus;
    double _opacity;
    UIView *_hostView;
    NSString *_videoReportKey;
    long long _playerSequence;
    QLZAVPlayer *_player;
    AVPlayerLayer *_playerLayer;
    AVPlayerItem *_currentPlayerItem;
    NSString *_cacheVid;
    unsigned long long _sequenceId;
    QLMiniVideoDownLoadProxy *_downloadProxy;
    CDUnknownBlockType _monitorBlock;
    struct CGRect _cacheFrame;
}

@property(copy, nonatomic) CDUnknownBlockType monitorBlock; // @synthesize monitorBlock=_monitorBlock;
@property(retain, nonatomic) QLMiniVideoDownLoadProxy *downloadProxy; // @synthesize downloadProxy=_downloadProxy;
@property(nonatomic) unsigned long long sequenceId; // @synthesize sequenceId=_sequenceId;
@property(retain, nonatomic) NSString *cacheVid; // @synthesize cacheVid=_cacheVid;
@property(nonatomic) struct CGRect cacheFrame; // @synthesize cacheFrame=_cacheFrame;
@property(retain, nonatomic) AVPlayerItem *currentPlayerItem; // @synthesize currentPlayerItem=_currentPlayerItem;
@property(retain, nonatomic) AVPlayerLayer *playerLayer; // @synthesize playerLayer=_playerLayer;
@property(retain, nonatomic) QLZAVPlayer *player; // @synthesize player=_player;
@property(nonatomic) long long playerSequence; // @synthesize playerSequence=_playerSequence;
@property(retain, nonatomic) NSString *videoReportKey; // @synthesize videoReportKey=_videoReportKey;
@property(nonatomic) __weak UIView *hostView; // @synthesize hostView=_hostView;
@property(nonatomic, setter=setOpacity:) double opacity; // @synthesize opacity=_opacity;
- (void).cxx_destruct;
- (id)itemPath:(id)arg1;
- (void)reportSmallVideoPlayCount:(long long)arg1 withVid:(id)arg2;
- (void)feedBackDownloadState:(unsigned long long)arg1 vid:(id)arg2;
- (void)removeAVPlayerItemDidPlayToEndTimeNotification;
- (void)addAVPlayerItemDidPlayToEndTimeNotification;
- (void)removeStatusObserverForCurrentPlayerItem;
- (void)addStatusObserverForCurrentPlayerItem;
- (_Bool)synchronizePlayerItem;
- (id)correspondPlayerItem;
@property(nonatomic, setter=setPlayerFrame:) struct CGRect frame; // @dynamic frame;
- (void)removeFromHostView;
- (void)movePlayerToHostView:(id)arg1;
- (void)onPlayerItemDidPlayToEndTimeNotification:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)seekToTime:(CDStruct_1b6d18a9)arg1 andPlay:(_Bool)arg2;
- (void)seekToTime:(CDStruct_1b6d18a9)arg1;
- (void)setMuted:(_Bool)arg1;
- (void)notifyActionToMonitorWhenPlayOrPauseDone:(_Bool)arg1;
- (void)notifyActionToMonitorPlayOrPausePreparing:(_Bool)arg1;
- (void)restartPlayerWhenAVPlayerItemStatusReadyToPlay;
- (void)controlPlayerPlay:(_Bool)arg1 needNotify:(_Bool)arg2;
- (void)pauseAndNotify:(_Bool)arg1;
- (void)pause;
- (_Bool)playWithVid:(id)arg1 needNotify:(_Bool)arg2;
- (_Bool)playWithVid:(id)arg1;
- (_Bool)playAndNotify:(_Bool)arg1;
- (_Bool)play;
- (void)configureMonitorBlock:(CDUnknownBlockType)arg1;
- (void)cleanUP_monitorBlock;
- (void)reinitial_videoInfo;
- (void)cleanUp;
- (_Bool)validatePlayer;
- (_Bool)readyToPlay;
- (void)replaceVideoWithAVAsset:(id)arg1;
- (void)replaceVideoWithVid:(id)arg1;
@property(readonly, nonatomic, getter=readCurrentPlayerItemStatus) long long playerItemStatus;
- (void)release_ownAVPlayer;
- (void)allocate_aAVPlayer;
- (id)initWithVideoId:(id)arg1 monitorBlock:(CDUnknownBlockType)arg2;
- (id)initWithFrame:(struct CGRect)arg1 monitorBlock:(CDUnknownBlockType)arg2;
- (void)dealloc;

@end

