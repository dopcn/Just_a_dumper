//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "AVAsynchronousKeyValueLoading-Protocol.h"
#import "FNFAVAsset-Protocol.h"
#import "FNFAVPlayerItem-Protocol.h"
#import "FNFAssetForPlayer-Protocol.h"
#import "FNFDashErrorHandling-Protocol.h"
#import "FNFDashFrameSequencerDelegate-Protocol.h"
#import "FNFDashPlaylistManagerDelegate-Protocol.h"
#import "FNFInfoForLoopableAsset-Protocol.h"
#import "FNFLiveAVPlayerAsset-Protocol.h"

@class AVAudioMix, FNFAssetResourceLoader, FNFDashErrorListener, FNFDashPlaylist, FNFDashVideoPlayerMetadata, NSArray, NSMutableSet, NSString;
@protocol FNFBandwidthProvider, FNFDashFrameSequencing><FNFDashChunkManagerDelegate, FNFDashPlaylistManaging, OS_dispatch_queue;

@interface FNFFuryAsset : NSObject <FNFDashErrorHandling, FNFDashFrameSequencerDelegate, FNFDashPlaylistManagerDelegate, AVAsynchronousKeyValueLoading, FNFAVAsset, FNFAVPlayerItem, FNFAssetForPlayer, FNFInfoForLoopableAsset, FNFLiveAVPlayerAsset>
{
    unsigned char _state;
    struct FNFDashConfig _config;
    FNFDashVideoPlayerMetadata *_playerMetadata;
    FNFAssetResourceLoader *_resourceLoader;
    FNFDashPlaylist *_playlist;
    id <FNFBandwidthProvider> _bandwidthProvider;
    NSArray *_chunkManagers;
    id <FNFDashFrameSequencing><FNFDashChunkManagerDelegate> _frameSequencer;
    id <FNFDashPlaylistManaging> _playlistManager;
    FNFDashErrorListener *_errorListener;
    CDUnknownBlockType _assetLoadedHandler;
    _Bool _videoTrackLoaded;
    _Bool _audioTrackLoaded;
    CDStruct_1b6d18a9 _currentPlaybackTime;
    CDStruct_1b6d18a9 _latestAudioFrameAbsoluteDts;
    NSMutableSet *_warningReported;
    _Bool _sentDryStreamNotification;
    NSString *_servingRepresentationIds[2];
    _Bool _async;
    NSObject<OS_dispatch_queue> *_dispatchQueue;
}

- (void).cxx_destruct;
- (id)_containerFormatInStringForTrack:(long long)arg1;
- (id)_servingRepresentation:(long long)arg1;
- (void)_updateUndryStreamStatus;
- (void)_updateDryStreamStatus;
- (_Bool)_seekToPosition:(CDStruct_1b6d18a9)arg1;
- (_Bool)_loadedAllTracks;
- (id)_createChunkManagersWithPlaylist:(id)arg1;
- (void)_handleFirstPlaylist:(id)arg1;
- (_Bool)_canPlayDashPlaylist:(id)arg1;
- (void)_setAssetState:(unsigned char)arg1;
- (void)playlistLoaded:(id)arg1;
- (void)durationChanged;
- (void)timeLoadedChanged;
- (void)headerParsed:(id)arg1;
- (void)didWarnWithError:(id)arg1;
- (void)didFailWithError:(id)arg1;
- (void)setPlayerSize:(struct CGSize)arg1;
- (id)qualityLabel;
- (_Bool)isAbrEnabled;
- (unsigned int)availableQualitiesCount;
- (double)elapsedVideoTimestamp;
- (double)nextLiveAudioTimestamp;
- (CDStruct_1b6d18a9)videoTrackDuration;
- (_Bool)isDurationFinal;
- (_Bool)decompressedFramebuffer;
- (id)debugDetails;
- (struct CGAffineTransform)preferredTransform;
- (CDStruct_1b6d18a9)timeAfterSeek;
- (void)playbackStarted;
- (void)playbackPauseRequested:(int)arg1;
- (_Bool)resetAssetToBeginningIfNeeded;
- (_Bool)seekToPosition:(CDStruct_1b6d18a9)arg1;
- (_Bool)shouldBufferVideoAsSoonAsPossible;
- (_Bool)shouldRestartAfterStalling;
- (_Bool)shouldPauseForStallingWithNextCheckCallback:(CDUnknownBlockType)arg1 stallReason:(int)arg2;
- (void)updatePlaybackTime:(CDStruct_1b6d18a9)arg1;
- (void)advanceFrameForTrack:(long long)arg1;
- (const char *)currentFrameDataForTrack:(long long)arg1;
- (struct FNFFrameMetadata)currentFrameMetadataForTrack:(long long)arg1;
- (_Bool)trackHasMoreFrames:(long long)arg1;
- (id)mpdAccessibilityDescription;
- (id)audioRepresentationId;
- (id)representationId;
@property(readonly, nonatomic) int pauseReason;
@property(readonly, nonatomic) CDStruct_1b6d18a9 minBufferTime;
@property(readonly, nonatomic) CDStruct_1b6d18a9 maxBufferTime;
- (void)addErrorToLog:(id)arg1 shouldStopPlayback:(_Bool)arg2;
- (_Bool)containsTrack:(long long)arg1;
- (id)audioChannelConfiguration;
- (id)projection;
- (id)audioStreamExtraParameters;
- (struct AudioStreamBasicDescription)asbd;
- (struct opaqueCMFormatDescription *)formatDesc;
- (void)requestErrorNotificationIfNeeded;
- (void)requestTimeLoadedUpdate;
- (void)addOutput:(id)arg1;
@property(copy, nonatomic) AVAudioMix *audioMix;
- (CDStruct_1b6d18a9)currentTime;
@property(readonly, copy, nonatomic) NSArray *loadedTimeRanges;
@property(readonly, nonatomic) long long status;
- (void)asyncLoadNextQualitySelectionWithHandler:(CDUnknownBlockType)arg1 onQueue:(id)arg2;
- (void)asyncLoadCurrentQualityWithHandler:(CDUnknownBlockType)arg1 onQueue:(id)arg2;
- (void)asyncLoadAvailableQualitiesWithHandler:(CDUnknownBlockType)arg1 onQueue:(id)arg2;
- (_Bool)isPlaybackLikelyToKeepUp;
- (_Bool)isPlaybackBufferFull;
- (id)asset;
- (id)accessLog;
- (id)tracksWithMediaType:(id)arg1;
- (void)cancelLoading;
- (id)resourceHost;
- (id)audioCodec;
- (id)audioContainerFormat;
- (id)videoContainerFormat;
- (id)resourceLoader;
- (struct CGSize)naturalSize;
- (CDStruct_1b6d18a9)duration;
- (long long)statusOfValueForKey:(id)arg1 error:(id *)arg2;
- (void)loadValuesAsynchronouslyForKeys:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
@property(readonly, copy) NSString *description;
- (id)initWithConfig:(struct FNFDashConfig)arg1 mpdData:(id)arg2 mpdUrl:(id)arg3 bandwidthProvider:(id)arg4 userSelectedQuality:(id)arg5 chunkManager:(id)arg6 frameSequencer:(id)arg7 playlistManager:(id)arg8 async:(_Bool)arg9;
- (id)initWithConfig:(struct FNFDashConfig)arg1 mpdData:(id)arg2 mpdUrl:(id)arg3 bandwidthProvider:(id)arg4;
- (id)initWithConfig:(struct FNFDashConfig)arg1 mpdData:(id)arg2 mpdUrl:(id)arg3 bandwidthProvider:(id)arg4 userSelectedQuality:(id)arg5;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

