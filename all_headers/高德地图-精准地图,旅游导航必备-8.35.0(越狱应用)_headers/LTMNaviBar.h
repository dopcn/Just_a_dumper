//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "NMBaseNaviBarView.h"

#import "LTMNaviBarViewProtocol-Protocol.h"

@class LTMBaseView, NSMutableArray, NSString, UIImageView, UILabel, UIView;
@protocol LTMAJXNaviBarDelegate, LTMNaviBarTouchDelegate;

@interface LTMNaviBar : NMBaseNaviBarView <LTMNaviBarViewProtocol>
{
    UIImageView *_bgView;
    UIView *_bottomLine;
    LTMBaseView *_titleView;
    NSMutableArray *_leftButtons;
    NSMutableArray *_rightButtons;
    _Bool _hasBackBtn;
    _Bool _isContainSafeArea;
    _Bool _containNoStatusbar;
    int _naviBarTheme;
    id <LTMNaviBarTouchDelegate> _touchEventDelegate;
    id <LTMAJXNaviBarDelegate> _ajxNaviBarDelegate;
    UILabel *_titleLabel;
    UILabel *_subTitleLabel;
    CDUnknownBlockType _buttonBlock;
    CDUnknownBlockType _bgColorChangeBlock;
    struct UIEdgeInsets _titleEdgeInsets;
}

+ (id)naviBar_d14_Title:(id)arg1 RightText:(id)arg2;
+ (id)naviBar_d12_Title:(id)arg1 RightImage:(id)arg2;
+ (id)naviBar_d10_Title:(id)arg1;
+ (id)naviBar_d9_Title:(id)arg1 LeftText:(id)arg2 RightText:(id)arg3;
+ (id)naviBar_d6_Title:(id)arg1 SubTitle:(id)arg2 RightImage:(id)arg3;
+ (id)naviBar_d4_Title:(id)arg1 RightImage1:(id)arg2 RightImage2:(id)arg3;
+ (id)naviBar_d3_Title:(id)arg1 LeftImage:(id)arg2;
+ (id)naviBar_d2_Title:(id)arg1 RightImage1:(id)arg2 RightImage2:(id)arg3;
+ (id)naviBar_d1_Title:(id)arg1 RightImage:(id)arg2;
+ (id)naviBar_c1_Title:(id)arg1 RightText:(id)arg2;
+ (id)naviBar_c_Title:(id)arg1 RightText:(id)arg2;
+ (id)naviBar_b_Title:(id)arg1;
+ (id)naviBar_a2_RightImage:(id)arg1 TabTitles:(id)arg2;
+ (id)naviBar_a1_RightImage:(id)arg1 TabTitles:(id)arg2;
+ (id)naviBar_a_RightText:(id)arg1 TabImages:(id)arg2;
@property(copy, nonatomic) CDUnknownBlockType bgColorChangeBlock; // @synthesize bgColorChangeBlock=_bgColorChangeBlock;
@property(copy, nonatomic) CDUnknownBlockType buttonBlock; // @synthesize buttonBlock=_buttonBlock;
@property(nonatomic) int naviBarTheme; // @synthesize naviBarTheme=_naviBarTheme;
@property(nonatomic) struct UIEdgeInsets titleEdgeInsets; // @synthesize titleEdgeInsets=_titleEdgeInsets;
@property(readonly, nonatomic) UILabel *subTitleLabel; // @synthesize subTitleLabel=_subTitleLabel;
@property(readonly, nonatomic) UILabel *titleLabel; // @synthesize titleLabel=_titleLabel;
@property(nonatomic) __weak id <LTMAJXNaviBarDelegate> ajxNaviBarDelegate; // @synthesize ajxNaviBarDelegate=_ajxNaviBarDelegate;
@property(nonatomic) __weak id <LTMNaviBarTouchDelegate> touchEventDelegate; // @synthesize touchEventDelegate=_touchEventDelegate;
@property(nonatomic) _Bool containNoStatusbar; // @synthesize containNoStatusbar=_containNoStatusbar;
@property(readonly, nonatomic) UIView *bottomLine; // @synthesize bottomLine=_bottomLine;
- (void).cxx_destruct;
- (void)touchesCancelled:(id)arg1 withEvent:(id)arg2;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (void)touchesMoved:(id)arg1 withEvent:(id)arg2;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (void)setContainSafeArea:(_Bool)arg1;
- (void)buttonAction:(id)arg1;
- (void)setNaviBarBackgroundColor:(id)arg1;
- (void)setBackgroundImage:(id)arg1;
- (void)setBackgroundImageName:(id)arg1;
- (void)setShadowVisible:(_Bool)arg1;
- (void)setTitleView:(id)arg1;
- (void)setSubTitleText:(id)arg1;
- (void)setTitleText:(id)arg1;
- (id)rightButtonByIndex:(long long)arg1;
- (id)leftButtonByIndex:(long long)arg1;
- (id)addRightButtonByTitle:(id)arg1 textColor:(id)arg2;
- (id)addRightButtonByImage:(id)arg1;
- (id)addLeftButtonByImage:(id)arg1;
- (id)addRightButtonByTitle:(id)arg1;
- (id)addLeftButtonByTitle:(id)arg1;
- (id)addRightButton;
- (id)addLeftButton;
- (id)addLeftBackButton;
- (void)layoutSubviews;
- (void)updateToLandscapeSize;
- (void)updateToPortraitSize;
- (void)updateLayoutSize;
- (void)updateNMTheme;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)initUI;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

