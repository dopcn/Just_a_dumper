//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "MTBaseViewController.h"

#import "MTPageViewDelegate-Protocol.h"

@class HTKMerchantPhotosSegmentedControl, MTPageView, NSIndexPath, NSString, SAKFetchedResultsController, UIButton, UILabel, UITapGestureRecognizer;

@interface HTKMerchantPhotoDetailViewController : MTBaseViewController <MTPageViewDelegate>
{
    _Bool _isTravelAlbum;
    CDUnknownBlockType _didClickSaveToAlbumButton;
    CDUnknownBlockType _didClickSegmentControlTab;
    CDUnknownBlockType _didAlbumPageChanged;
    MTPageView *_pageView;
    HTKMerchantPhotosSegmentedControl *_segmentedControl;
    SAKFetchedResultsController *_photosResults;
    NSIndexPath *_indexPath;
    UITapGestureRecognizer *_singleTap;
    UIButton *_saveToAlbumButton;
    UILabel *_countLabel;
    UILabel *_descLabel;
    UILabel *_lastImagePromptLabel;
    NSString *_refTitle;
    NSString *_photoWidthStr;
    long long _albumType;
}

@property(nonatomic) long long albumType; // @synthesize albumType=_albumType;
@property(nonatomic) _Bool isTravelAlbum; // @synthesize isTravelAlbum=_isTravelAlbum;
@property(retain, nonatomic) NSString *photoWidthStr; // @synthesize photoWidthStr=_photoWidthStr;
@property(retain, nonatomic) NSString *refTitle; // @synthesize refTitle=_refTitle;
@property(retain, nonatomic) UILabel *lastImagePromptLabel; // @synthesize lastImagePromptLabel=_lastImagePromptLabel;
@property(retain, nonatomic) UILabel *descLabel; // @synthesize descLabel=_descLabel;
@property(retain, nonatomic) UILabel *countLabel; // @synthesize countLabel=_countLabel;
@property(retain, nonatomic) UIButton *saveToAlbumButton; // @synthesize saveToAlbumButton=_saveToAlbumButton;
@property(retain, nonatomic) UITapGestureRecognizer *singleTap; // @synthesize singleTap=_singleTap;
@property(retain, nonatomic) NSIndexPath *indexPath; // @synthesize indexPath=_indexPath;
@property(retain, nonatomic) SAKFetchedResultsController *photosResults; // @synthesize photosResults=_photosResults;
@property(retain, nonatomic) HTKMerchantPhotosSegmentedControl *segmentedControl; // @synthesize segmentedControl=_segmentedControl;
@property(retain, nonatomic) MTPageView *pageView; // @synthesize pageView=_pageView;
@property(copy, nonatomic) CDUnknownBlockType didAlbumPageChanged; // @synthesize didAlbumPageChanged=_didAlbumPageChanged;
@property(copy, nonatomic) CDUnknownBlockType didClickSegmentControlTab; // @synthesize didClickSegmentControlTab=_didClickSegmentControlTab;
@property(copy, nonatomic) CDUnknownBlockType didClickSaveToAlbumButton; // @synthesize didClickSaveToAlbumButton=_didClickSaveToAlbumButton;
- (void).cxx_destruct;
- (void)segmentDidChanged:(id)arg1;
- (void)pageIndexDidChangeInPageView:(id)arg1;
- (id)pageView:(id)arg1 viewForPageAtIndex:(unsigned long long)arg2;
- (unsigned long long)numberOfPagesInPageView:(id)arg1;
- (void)updateLabels;
- (unsigned long long)getPageIndexWithIndexPath:(id)arg1;
- (id)getIndexPathWithPageIndex:(unsigned long long)arg1;
- (void)didTouchSaveToAlbumButton;
- (void)didRotateFromInterfaceOrientation:(long long)arg1;
- (void)willAnimateRotationToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (void)didSingleTap;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)defineLayout;
- (void)defineViews;
- (void)viewDidLoad;
- (void)setPhotoWidth:(long long)arg1;
- (id)initWithUrlArray:(id)arg1 andIndex:(long long)arg2;
- (id)initWithPhotosArray:(id)arg1 andIndex:(long long)arg2;
- (id)initWithResults:(id)arg1 andIndexPath:(id)arg2 andIstravelAlbum:(_Bool)arg3;
- (id)initWithResults:(id)arg1 indexPath:(id)arg2 albumType:(long long)arg3;
- (id)initWithResults:(id)arg1 andIndexPath:(id)arg2 andRefTitle:(id)arg3;
- (id)initWithResults:(id)arg1 andIndexPath:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

