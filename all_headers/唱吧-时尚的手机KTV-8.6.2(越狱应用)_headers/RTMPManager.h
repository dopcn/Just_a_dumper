//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "KTVAUGraphRecorderLivingDelegate-Protocol.h"
#import "RTMPAudioDecoderDelegate-Protocol.h"
#import "RTMPAudioStreamPlayerDelegate-Protocol.h"

@class Buffer, KTVAUGraphRecorderLiving, KTVLiveSong, KTVResampler, NSDate, NSMutableData, NSString, NSThread, NSTimer, RTMPAudioDecoder, RTMPAudioStreamPlayer;
@protocol OS_dispatch_queue, RTMPManagerDelegate;

@interface RTMPManager : NSObject <KTVAUGraphRecorderLivingDelegate, RTMPAudioStreamPlayerDelegate, RTMPAudioDecoderDelegate>
{
    CDUnknownBlockType rtmpTimerBlock;
    CDUnknownBlockType rtmpDataReceivedBlock;
    _Bool _audioSessionIsInterrupted;
    int _echo;
    float _userVolumeRate;
    float _sourceVolumeRate;
    NSObject<RTMPManagerDelegate> *_delegate;
    KTVAUGraphRecorderLiving *_recorder;
    double _currentSourceDuration;
    KTVLiveSong *_currentPublishSong;
    NSMutableData *_audioData;
    NSMutableData *_sourceData;
    NSMutableData *_playData;
    RTMPAudioStreamPlayer *_rtmpPlayer;
    RTMPAudioDecoder *_sourceDecoder;
    NSString *_rtmpPublishUrl;
    NSString *_rtmpPlayUrl;
    NSString *_rtmpPlayRetryUrl;
    NSString *_currentRecordPath;
    Buffer *_sourceBuffer;
    Buffer *_recordBuffer;
    Buffer *_playBuffer;
    long long _rtmpPlayerPlayedTime;
    NSTimer *_timeOutTimer;
    NSThread *_rtmpGetThread;
    NSThread *_rtmpPublishThread;
    long long _bufferDuration;
    long long _interruptPlayedTime;
    NSDate *_interruptTime;
    KTVResampler *_ktvResampler;
    NSObject<OS_dispatch_queue> *_scoreQueue;
}

+ (id)sharedInstance;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *scoreQueue; // @synthesize scoreQueue=_scoreQueue;
@property(retain, nonatomic) KTVResampler *ktvResampler; // @synthesize ktvResampler=_ktvResampler;
@property(retain, nonatomic) NSDate *interruptTime; // @synthesize interruptTime=_interruptTime;
@property(nonatomic) long long interruptPlayedTime; // @synthesize interruptPlayedTime=_interruptPlayedTime;
@property(nonatomic) _Bool audioSessionIsInterrupted; // @synthesize audioSessionIsInterrupted=_audioSessionIsInterrupted;
@property(nonatomic) long long bufferDuration; // @synthesize bufferDuration=_bufferDuration;
@property(retain, nonatomic) NSThread *rtmpPublishThread; // @synthesize rtmpPublishThread=_rtmpPublishThread;
@property(retain) NSThread *rtmpGetThread; // @synthesize rtmpGetThread=_rtmpGetThread;
@property(retain, nonatomic) NSTimer *timeOutTimer; // @synthesize timeOutTimer=_timeOutTimer;
@property(nonatomic) long long rtmpPlayerPlayedTime; // @synthesize rtmpPlayerPlayedTime=_rtmpPlayerPlayedTime;
@property(retain, nonatomic) Buffer *playBuffer; // @synthesize playBuffer=_playBuffer;
@property(retain, nonatomic) Buffer *recordBuffer; // @synthesize recordBuffer=_recordBuffer;
@property(retain, nonatomic) Buffer *sourceBuffer; // @synthesize sourceBuffer=_sourceBuffer;
@property(retain, nonatomic) NSString *currentRecordPath; // @synthesize currentRecordPath=_currentRecordPath;
@property(retain, nonatomic) NSString *rtmpPlayRetryUrl; // @synthesize rtmpPlayRetryUrl=_rtmpPlayRetryUrl;
@property(retain, nonatomic) NSString *rtmpPlayUrl; // @synthesize rtmpPlayUrl=_rtmpPlayUrl;
@property(retain, nonatomic) NSString *rtmpPublishUrl; // @synthesize rtmpPublishUrl=_rtmpPublishUrl;
@property(retain, nonatomic) RTMPAudioDecoder *sourceDecoder; // @synthesize sourceDecoder=_sourceDecoder;
@property(retain, nonatomic) RTMPAudioStreamPlayer *rtmpPlayer; // @synthesize rtmpPlayer=_rtmpPlayer;
@property(retain, nonatomic) NSMutableData *playData; // @synthesize playData=_playData;
@property(retain, nonatomic) NSMutableData *sourceData; // @synthesize sourceData=_sourceData;
@property(retain, nonatomic) NSMutableData *audioData; // @synthesize audioData=_audioData;
@property(retain, nonatomic) KTVLiveSong *currentPublishSong; // @synthesize currentPublishSong=_currentPublishSong;
@property(nonatomic) double currentSourceDuration; // @synthesize currentSourceDuration=_currentSourceDuration;
@property(nonatomic) float sourceVolumeRate; // @synthesize sourceVolumeRate=_sourceVolumeRate;
@property(nonatomic) float userVolumeRate; // @synthesize userVolumeRate=_userVolumeRate;
@property(nonatomic) int echo; // @synthesize echo=_echo;
@property(retain, nonatomic) KTVAUGraphRecorderLiving *recorder; // @synthesize recorder=_recorder;
@property(nonatomic) __weak NSObject<RTMPManagerDelegate> *delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)setRTMPDataReceivedBlock:(CDUnknownBlockType)arg1;
- (void)setSourcePlayerVolume:(float)arg1;
- (void)setCurrentRecordUserVolume:(float)arg1;
- (id)currentReverbParam;
- (void)setFreeReverb:(float)arg1 space:(float)arg2;
- (void)setCurrentRecordEcho:(int)arg1;
@property(nonatomic) long long currentPitchLevel;
- (void)reportRTMPPlayFailure;
- (void)reportPublishedFailure;
- (void)publishDataToRtmp;
- (void)startRtmpPublishThread;
- (void)stopRtmpPublishThread;
- (void)startRtmpPlayer:(id)arg1;
- (long long)getRtmpData:(id)arg1;
- (void)getRtmpDataOrRetry;
- (void)startRtmpGetThread;
- (void)stopRtmpGetThread;
- (void)stopRtmpGetThreadWithNoWait;
- (id)setOrReturnPlayData:(const void *)arg1 length:(unsigned long long)arg2 isget:(_Bool)arg3;
- (id)setOrReturnSourceData:(const void *)arg1 length:(unsigned long long)arg2 isget:(_Bool)arg3;
- (id)setOrReturnAudioData:(id)arg1 size:(int)arg2 isget:(_Bool)arg3;
- (void)streamPlayerFiredTimer:(id)arg1;
- (void)hideLoading;
- (void)showLoading;
- (unsigned int)player:(id)arg1 didReadBuffer:(struct AudioQueueBuffer **)arg2;
- (void)recordInterrupted;
- (void)didRecieveVocalData:(id)arg1 bufferTime:(long long)arg2 sampleRate:(double)arg3 dB:(double)arg4;
- (void)recordDidReceiveBuffer:(struct AudioBuffer)arg1;
- (short)TPMixSamples:(short)arg1 b:(short)arg2;
- (void)fileDecodeFinished;
- (void)checkTimeOut;
- (void)stopTimeOutTimer;
- (void)startTimeOutTimer;
- (void)stopRecord;
- (void)startRecord;
- (void)initRecord;
- (void)startPlayAndRecord:(id)arg1;
- (void)stopRtmpPlayAndPublish;
- (void)stopRtmpPlayWithNoWait;
- (void)stopRtmpPlay;
- (void)stopRtmpPlayWithWait:(_Bool)arg1;
- (void)startPlay:(id)arg1;
- (void)startPlay:(id)arg1 retryUrl:(id)arg2 dataReceivedBlock:(CDUnknownBlockType)arg3;
- (void)stopRtmpPublish;
- (void)setRtmpPlayerTimerBlock:(CDUnknownBlockType)arg1;
- (void)setRecorderPlayTimerBlock:(CDUnknownBlockType)arg1;
- (void)startPublish:(id)arg1 sourceSong:(id)arg2 bitrate:(long long)arg3 bufferDuration:(long long)arg4;
- (void)applicationWillEnterForegroundNotificationSelector;
- (void)audioSessionDidChangeInterruptionType:(id)arg1;
- (void)dealloc;
- (id)init;

@end

