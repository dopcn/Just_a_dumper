//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "MTTableViewController.h"

#import "JSDismissiveTextViewDelegate-Protocol.h"
#import "JSMessageInputViewDelegate-Protocol.h"
#import "UITextViewDelegate-Protocol.h"

@class JSMessageInputView, NSLayoutConstraint, NSString, UITableView, UITapGestureRecognizer, UIView;

@interface MTTableViewControllerWithInputBar : MTTableViewController <UITextViewDelegate, JSMessageInputViewDelegate, JSDismissiveTextViewDelegate>
{
    float _oldY;
    float _oldInputBarHeight;
    _Bool _isDataLoadSuccess;
    _Bool _inputBarAutoVisibleWhenUserScroll;
    _Bool _isViewAppearing;
    UITableView *_contentTableView;
    UIView *_bottomInputBar;
    NSLayoutConstraint *_inputBarBottomConstraint;
    NSLayoutConstraint *_inputBarHeightConstraint;
    NSLayoutConstraint *_tableViewTopConstraint;
    JSMessageInputView *_inputMessageView;
    double _oldNaviaBarAlphaValue;
    double _previousTextViewContentHeight;
    UITapGestureRecognizer *_tapGestureRecognizer;
    double _oldNavibarAlpha;
    struct UIEdgeInsets _originalTableViewContentInset;
}

@property(readonly, nonatomic) _Bool isViewAppearing; // @synthesize isViewAppearing=_isViewAppearing;
@property(nonatomic) double oldNavibarAlpha; // @synthesize oldNavibarAlpha=_oldNavibarAlpha;
@property(nonatomic) _Bool inputBarAutoVisibleWhenUserScroll; // @synthesize inputBarAutoVisibleWhenUserScroll=_inputBarAutoVisibleWhenUserScroll;
@property(retain, nonatomic) UITapGestureRecognizer *tapGestureRecognizer; // @synthesize tapGestureRecognizer=_tapGestureRecognizer;
@property(nonatomic) double previousTextViewContentHeight; // @synthesize previousTextViewContentHeight=_previousTextViewContentHeight;
@property(nonatomic) _Bool isDataLoadSuccess; // @synthesize isDataLoadSuccess=_isDataLoadSuccess;
@property(nonatomic) double oldNaviaBarAlphaValue; // @synthesize oldNaviaBarAlphaValue=_oldNaviaBarAlphaValue;
@property(readonly, nonatomic) struct UIEdgeInsets originalTableViewContentInset; // @synthesize originalTableViewContentInset=_originalTableViewContentInset;
@property(retain, nonatomic) JSMessageInputView *inputMessageView; // @synthesize inputMessageView=_inputMessageView;
@property(nonatomic) __weak NSLayoutConstraint *tableViewTopConstraint; // @synthesize tableViewTopConstraint=_tableViewTopConstraint;
@property(nonatomic) __weak NSLayoutConstraint *inputBarHeightConstraint; // @synthesize inputBarHeightConstraint=_inputBarHeightConstraint;
@property(nonatomic) __weak NSLayoutConstraint *inputBarBottomConstraint; // @synthesize inputBarBottomConstraint=_inputBarBottomConstraint;
@property(retain, nonatomic) UIView *bottomInputBar; // @synthesize bottomInputBar=_bottomInputBar;
@property(retain, nonatomic) UITableView *contentTableView; // @synthesize contentTableView=_contentTableView;
- (void).cxx_destruct;
- (void)resetInputWhenShareActionHappen;
- (void)resetInputBarState;
- (void)sendRequst;
- (unsigned long long)sectionIndexToShowInputBar;
- (void)scrollToBottomAnimated:(_Bool)arg1;
- (void)updateInputBarState;
- (void)didBeginDragging:(id)arg1;
- (void)keyboardWillDisappear:(_Bool)arg1 withBounds:(struct CGRect)arg2;
- (void)keyboardWillAppear:(_Bool)arg1 withBounds:(struct CGRect)arg2;
- (void)resizeForKeyboard:(id)arg1 appearing:(_Bool)arg2;
- (void)keyboardWillHide:(id)arg1;
- (void)keyboardDidHide:(id)arg1;
- (void)keyboardWillShow:(id)arg1;
- (void)textViewDidChange:(id)arg1;
- (void)textViewDidEndEditing:(id)arg1;
- (void)textViewDidBeginEditing:(id)arg1;
- (_Bool)textViewShouldBeginEditing:(id)arg1;
- (void)scrollViewDidScroll:(id)arg1;
- (void)tapAction:(id)arg1;
- (void)onSendBtnPressed:(id)arg1;
- (void)backAction:(id)arg1;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (void)createInputMessageView;
- (id)defaultSendButton;
- (void)mt_createViews;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

