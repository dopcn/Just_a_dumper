//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

#import "BNNaviRoutePlanDelegate-Protocol.h"
#import "BNNaviUIManagerDelegate-Protocol.h"
#import "UIAlertViewDelegate-Protocol.h"

@class BNSearchController, BNUGCUploadPage, BNaviMapBridgeStatus, MapView, NSDictionary, NSString;

@interface BNaviMapBridge : NSObject <BNNaviRoutePlanDelegate, BNNaviUIManagerDelegate, UIAlertViewDelegate>
{
    struct CGRect _mapViewOriginFrame;
    _Bool _naviComFromTool;
    _Bool _bHasEnter;
    _Bool _bEnterWalkNavi;
    _Bool _isAutoEntranceDriveCarModel;
    int _initStatus;
    MapView *_mapView;
    long long _unCurRequestID;
    BNSearchController *_searchController;
    BNaviMapBridgeStatus *_status;
    long long _recaculateTimes;
    NSDictionary *_userInfo;
    BNUGCUploadPage *_page;
}

+ (_Bool)isNaviSearchPage;
+ (void)releaseInstance;
+ (id)getInstance;
@property(nonatomic) __weak BNUGCUploadPage *page; // @synthesize page=_page;
@property(retain, nonatomic) NSDictionary *userInfo; // @synthesize userInfo=_userInfo;
@property(nonatomic) long long recaculateTimes; // @synthesize recaculateTimes=_recaculateTimes;
@property(nonatomic) _Bool isAutoEntranceDriveCarModel; // @synthesize isAutoEntranceDriveCarModel=_isAutoEntranceDriveCarModel;
@property(retain, nonatomic) BNaviMapBridgeStatus *status; // @synthesize status=_status;
@property(retain, nonatomic) BNSearchController *searchController; // @synthesize searchController=_searchController;
@property(nonatomic) long long unCurRequestID; // @synthesize unCurRequestID=_unCurRequestID;
@property(retain, nonatomic) MapView *mapView; // @synthesize mapView=_mapView;
@property(readonly, nonatomic) int initStatus; // @synthesize initStatus=_initStatus;
- (void).cxx_destruct;
- (id)absorbRequestWithParams:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)pushUgcDetailPageWithUserInfo:(id)arg1 presentController:(id)arg2;
- (void)pushUgcUploadPageWithUserInfo:(id)arg1 presentController:(id)arg2;
- (void)pushPageWithUserInfo:(id)arg1;
- (id)ugcUploadButtonView;
- (id)ugcPageName;
- (void)onHandleStartRouteplan:(id)arg1;
- (void)RequestStatistics:(_Bool)arg1;
- (void)onHandleEnterNaviFromRouteDetail;
- (void)delayStopNaviServices;
- (void)destroyTTSPlayerAndNaviViewController;
- (void)onHandleChangeStatus;
- (void)checkIfNeedEnterOtherPage:(id)arg1;
- (void)restoreMapAppStatus:(int)arg1;
- (void)saveMapAppStatus:(int)arg1;
- (void)gotoDriveCarView;
- (int)gotoLightNaviProcess:(id)arg1 routePlanURL:(id)arg2 routePlanMode:(int)arg3 andNaviType:(int)arg4 andNaviNeedParams:(id)arg5 mrsl:(id)arg6 extParam:(id)arg7;
- (int)gotoLightNaviPage:(int)arg1 naviNodes:(id)arg2 andNaviNeedParams:(id)arg3 mrsl:(id)arg4 extParam:(id)arg5;
- (int)gotoLightNaviPage:(int)arg1 andNaviNeedParams:(id)arg2 mrsl:(id)arg3 extParam:(id)arg4;
- (_Bool)isInNaviPage;
- (void)BNaviMapNaviBtnPressed;
- (void)BNaviMapNaviPageWillAppear;
- (void)exitNaviComponentPageWithBlock:(CDUnknownBlockType)arg1;
- (_Bool)canExitNaviComponentPageWithURL:(id)arg1;
- (_Bool)isNaviComponentPage;
- (void)removeLastRoute;
- (id)trExtraUrlParam;
- (void)onHandeRoutePlanCancel:(id)arg1;
- (void)OnhandleRoutePlan:(id)arg1;
- (void)searchRevoke;
- (void)searchPoiByRouteWithSearchMode:(int)arg1 searchWord:(id)arg2 searchSubWord:(id)arg3 searchRange:(unsigned long long)arg4 sortType:(long long)arg5 poiCount:(long long)arg6 pageNumber:(long long)arg7 complete:(CDUnknownBlockType)arg8;
- (void)searchPoiByRouteForMapResultPbWithSearchMode:(int)arg1 searchWord:(id)arg2 searchRange:(unsigned long long)arg3 sortType:(long long)arg4 routeMrsl:(id)arg5 poiCount:(long long)arg6 pageNumber:(long long)arg7 complete:(CDUnknownBlockType)arg8;
- (_Bool)downloadCityMapData:(long long)arg1;
- (_Bool)isDataExist;
- (long long)sendRoutePlanUrl:(id)arg1;
- (id)getRoutePlanUrl;
- (_Bool)checkIsDataReady;
- (void)stopNaviServices;
- (void)startNaviServices;
- (_Bool)naviRoutePlanComFrom:(_Bool)arg1;
- (void)onExitPage:(int)arg1 extraInfo:(id)arg2;
- (void)routePlanDidUserCanceled:(id)arg1;
- (void)routePlanDidFailedWithError:(id)arg1 andUserInfo:(id)arg2;
- (void)routePlanDidFinished:(id)arg1;
- (void)handleRoutePlanFinish:(int)arg1 userInfo:(id)arg2;
- (int)gotoNaviPage:(int)arg1 andNaviNeedParams:(id)arg2 mrsl:(id)arg3 params:(id)arg4;
- (_Bool)checkCanRoutePlan;
- (_Bool)onMapDataImported;
- (_Bool)onMapDataDownloaded;
- (_Bool)showPage:(int)arg1 isNeedLandscape:(_Bool)arg2 extParam:(id)arg3;
- (_Bool)beforeEnterPage:(int)arg1;
- (void)onMapSettingReset;
- (void)startOfflineNaviResDownloadEnginee;
- (void)initNaviServices:(CDUnknownBlockType)arg1 fail:(CDUnknownBlockType)arg2;
- (void)doInitNaviStatusFinish;
- (void)initNaviServices;
- (_Bool)gotoPoiPickerPage:(_Bool)arg1 poiList:(id)arg2 subPoiList:(id)arg3;
- (_Bool)gotoRouteEvaluatePage:(_Bool)arg1 extParam:(id)arg2;
- (_Bool)gotoNaviDigitDogPage:(_Bool)arg1 extParam:(id)arg2;
- (_Bool)gotoNaviDownloadPage:(_Bool)arg1 extParam:(id)arg2;
- (_Bool)gotoCustomVoicePage:(_Bool)arg1 extParam:(id)arg2;
- (_Bool)gotoNaviLimitLinePage:(_Bool)arg1 extParam:(id)arg2;
- (_Bool)gotoNaviSettingPage:(_Bool)arg1 extParam:(id)arg2;
- (_Bool)gotoNaviRouteDetailPage:(_Bool)arg1 extParam:(id)arg2;
- (void)startRoutePlan:(id)arg1 enterNaviSameTime:(id)arg2;
- (int)gotoNaviPage:(int)arg1 andNaviNeedParams:(id)arg2 mrsl:(id)arg3 extParam:(id)arg4;
- (int)gotoNaviProcess:(id)arg1 routePlanURL:(id)arg2 routePlanMode:(int)arg3 andNaviType:(int)arg4 andNaviNeedParams:(id)arg5 mrsl:(id)arg6 extParam:(id)arg7;
- (void)dealloc;
- (id)init;
- (void)onHandlePreStartWalkNavi:(id)arg1;
- (void)onHandleStartWalkNavi:(id)arg1;
- (struct BMPoint)BNPositionToBMPoint:(id)arg1;
- (void)routePlanForEnterLightNavi;
- (void)guideRouteDataFail;
- (void)guideRouteDataSuccess;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

