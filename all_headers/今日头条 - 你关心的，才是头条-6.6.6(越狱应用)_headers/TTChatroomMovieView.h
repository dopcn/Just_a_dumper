//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "SSViewBase.h"

#import "ExploreMovieManagerDelegate-Protocol.h"
#import "SSMoviePlayerControllerDelegate-Protocol.h"
#import "SSMoviePlayerTrackManagerDelegate-Protocol.h"
#import "TTChatroomMoviePlayerControllerDelegate-Protocol.h"
#import "TTMovieFullscreenProtocol-Protocol.h"
#import "TTMovieFullscreenViewControllerDelegate-Protocol.h"
#import "TTVideoRotateViewProtocol-Protocol.h"
#import "UIViewControllerTransitioningDelegate-Protocol.h"

@class ExploreMovieManager, ExploreMovieViewTracker, ExploreOrderedData, ExploreVideoModel, NSDictionary, NSIndexPath, NSString, TTChatroomMovieNetTrafficView, TTChatroomMoviePlayerController, TTChatroomMovieViewModel, TTGroupModel, TTMovieFullscreenViewController, TTVAudioActiveCenter, TTVideoRotateScreenController, TTVideoURLRequestInfo, UITableView, UIView;
@protocol TTChatroomMovieViewDelegate;

@interface TTChatroomMovieView : SSViewBase <SSMoviePlayerControllerDelegate, TTChatroomMoviePlayerControllerDelegate, ExploreMovieManagerDelegate, SSMoviePlayerTrackManagerDelegate, UIViewControllerTransitioningDelegate, TTMovieFullscreenViewControllerDelegate, TTMovieFullscreenProtocol, TTVideoRotateViewProtocol>
{
    _Bool _enableRotate;
    _Bool _noNetWorkIndicator;
    _Bool _isPlaybackEnded;
    _Bool _hasSendTrackLog;
    int _playURLIndex;
    _Bool _resignActive;
    _Bool _isPausedBeforeResignActive;
    _Bool _isPrepared;
    _Bool _isPauseOnNetworkChanged;
    _Bool _hasPlayLocalFailed;
    _Bool _isShowingConnectAlert;
    _Bool _isNormalDetailMovieView;
    double _playRequestTimestamp;
    _Bool _shouldExitFullScreenLater;
    _Bool _autoPause;
    _Bool _userPause;
    _Bool _viewIsAppear;
    _Bool _isNewRotate;
    _Bool _hasMovieFatherCell;
    _Bool _isFullScreenButtonAction;
    _Bool _showDetailButtonWhenFinished;
    _Bool _stopMovieWhenFinished;
    _Bool _pauseMovieWhenEnterForground;
    _Bool _alwaysHideTitleBarView;
    _Bool _alwaysTouchScreenToExit;
    _Bool _stayFullScreenWhenFinished;
    _Bool _needsSeekToTimeWhenStart;
    _Bool _shouldShowNewFinishUI;
    _Bool _isRotateAnimating;
    _Bool _enableMultiResolution;
    _Bool _forbidFullScreenWhenPresentAd;
    _Bool _forbidLayout;
    _Bool _showedOneFrame;
    _Bool _isStoppedAfterDelay;
    _Bool _isStoped;
    _Bool _isSwitchMultiResolution;
    _Bool _isPlaying;
    _Bool _alwaysShowDetailButton;
    _Bool _liveVideoRestartOnce;
    _Bool _currentHasShownTrafficView;
    _Bool _connectChange;
    UITableView *_movieFatherCellTableView;
    NSIndexPath *_movieFatherCellIndexPath;
    UIView *_movieFatherView;
    UITableView *_baseTableView;
    NSIndexPath *_indexPath;
    UIView *_rotateSuperView;
    id <TTChatroomMovieViewDelegate> _movieViewDelegate;
    ExploreMovieViewTracker *_tracker;
    TTChatroomMoviePlayerController *_moviePlayerController;
    ExploreOrderedData *_movieDelegateData;
    double _fetchURLTime;
    CDUnknownBlockType _didExitFullScreenHandler;
    CDUnknownBlockType _clickPlayButtonToPlayBlock;
    CDUnknownBlockType _playStartBlock;
    CDUnknownBlockType _willPlayableBlock;
    CDUnknownBlockType _willFinishBlock;
    CDUnknownBlockType _willAttemptRoateBlock;
    TTVideoURLRequestInfo *_urlRequestInfo;
    ExploreMovieManager *_movieManager;
    ExploreVideoModel *_letvVideoModel;
    TTGroupModel *_gModel;
    NSString *_aID;
    NSString *_cID;
    NSDictionary *_logoImageDict;
    CDUnknownBlockType _videoFinishBlock;
    TTChatroomMovieViewModel *_videoModel;
    TTMovieFullscreenViewController *_fullscreenViewController;
    TTVideoRotateScreenController *_rotateController;
    TTChatroomMovieNetTrafficView *_trafficView;
    TTVAudioActiveCenter *_activeCenter;
    struct CGRect _movieInFatherViewFrame;
    struct CGRect _rotateViewRect;
}

+ (_Bool)hasShownTrafficView;
+ (void)stopAllExploreMovieView;
+ (void)removeAllExploreMovieView;
+ (void)changeAlwaysCloseAlert;
+ (void)setSelectedDefinitionType:(unsigned long long)arg1;
+ (unsigned long long)selectedDefinitionType;
@property(nonatomic) _Bool connectChange; // @synthesize connectChange=_connectChange;
@property(nonatomic) _Bool currentHasShownTrafficView; // @synthesize currentHasShownTrafficView=_currentHasShownTrafficView;
@property(retain, nonatomic) TTVAudioActiveCenter *activeCenter; // @synthesize activeCenter=_activeCenter;
@property(retain, nonatomic) TTChatroomMovieNetTrafficView *trafficView; // @synthesize trafficView=_trafficView;
@property(retain, nonatomic) TTVideoRotateScreenController *rotateController; // @synthesize rotateController=_rotateController;
@property(nonatomic) __weak TTMovieFullscreenViewController *fullscreenViewController; // @synthesize fullscreenViewController=_fullscreenViewController;
@property(retain, nonatomic) TTChatroomMovieViewModel *videoModel; // @synthesize videoModel=_videoModel;
@property(nonatomic) _Bool liveVideoRestartOnce; // @synthesize liveVideoRestartOnce=_liveVideoRestartOnce;
@property(copy, nonatomic) CDUnknownBlockType videoFinishBlock; // @synthesize videoFinishBlock=_videoFinishBlock;
@property(nonatomic) _Bool alwaysShowDetailButton; // @synthesize alwaysShowDetailButton=_alwaysShowDetailButton;
@property(nonatomic) _Bool isPlaying; // @synthesize isPlaying=_isPlaying;
@property(retain, nonatomic) NSDictionary *logoImageDict; // @synthesize logoImageDict=_logoImageDict;
@property(nonatomic) _Bool isSwitchMultiResolution; // @synthesize isSwitchMultiResolution=_isSwitchMultiResolution;
@property(nonatomic) _Bool isStoped; // @synthesize isStoped=_isStoped;
@property(nonatomic) _Bool isStoppedAfterDelay; // @synthesize isStoppedAfterDelay=_isStoppedAfterDelay;
@property(nonatomic) _Bool showedOneFrame; // @synthesize showedOneFrame=_showedOneFrame;
@property(copy, nonatomic) NSString *cID; // @synthesize cID=_cID;
@property(copy, nonatomic) NSString *aID; // @synthesize aID=_aID;
@property(retain, nonatomic) TTGroupModel *gModel; // @synthesize gModel=_gModel;
@property(retain, nonatomic) ExploreVideoModel *letvVideoModel; // @synthesize letvVideoModel=_letvVideoModel;
@property(retain, nonatomic) ExploreMovieManager *movieManager; // @synthesize movieManager=_movieManager;
@property(retain, nonatomic) TTVideoURLRequestInfo *urlRequestInfo; // @synthesize urlRequestInfo=_urlRequestInfo;
@property(nonatomic) _Bool forbidLayout; // @synthesize forbidLayout=_forbidLayout;
@property(copy, nonatomic) CDUnknownBlockType willAttemptRoateBlock; // @synthesize willAttemptRoateBlock=_willAttemptRoateBlock;
@property(copy, nonatomic) CDUnknownBlockType willFinishBlock; // @synthesize willFinishBlock=_willFinishBlock;
@property(copy, nonatomic) CDUnknownBlockType willPlayableBlock; // @synthesize willPlayableBlock=_willPlayableBlock;
@property(copy, nonatomic) CDUnknownBlockType playStartBlock; // @synthesize playStartBlock=_playStartBlock;
@property(copy, nonatomic) CDUnknownBlockType clickPlayButtonToPlayBlock; // @synthesize clickPlayButtonToPlayBlock=_clickPlayButtonToPlayBlock;
@property(copy, nonatomic) CDUnknownBlockType didExitFullScreenHandler; // @synthesize didExitFullScreenHandler=_didExitFullScreenHandler;
@property(nonatomic) _Bool forbidFullScreenWhenPresentAd; // @synthesize forbidFullScreenWhenPresentAd=_forbidFullScreenWhenPresentAd;
@property(nonatomic) _Bool enableMultiResolution; // @synthesize enableMultiResolution=_enableMultiResolution;
@property(nonatomic) _Bool isRotateAnimating; // @synthesize isRotateAnimating=_isRotateAnimating;
@property(readonly, nonatomic) double fetchURLTime; // @synthesize fetchURLTime=_fetchURLTime;
@property(nonatomic) _Bool shouldShowNewFinishUI; // @synthesize shouldShowNewFinishUI=_shouldShowNewFinishUI;
@property(nonatomic) _Bool needsSeekToTimeWhenStart; // @synthesize needsSeekToTimeWhenStart=_needsSeekToTimeWhenStart;
@property(nonatomic) _Bool stayFullScreenWhenFinished; // @synthesize stayFullScreenWhenFinished=_stayFullScreenWhenFinished;
@property(nonatomic) _Bool alwaysTouchScreenToExit; // @synthesize alwaysTouchScreenToExit=_alwaysTouchScreenToExit;
@property(nonatomic) _Bool alwaysHideTitleBarView; // @synthesize alwaysHideTitleBarView=_alwaysHideTitleBarView;
@property(nonatomic) _Bool pauseMovieWhenEnterForground; // @synthesize pauseMovieWhenEnterForground=_pauseMovieWhenEnterForground;
@property(nonatomic) _Bool stopMovieWhenFinished; // @synthesize stopMovieWhenFinished=_stopMovieWhenFinished;
@property(nonatomic) _Bool showDetailButtonWhenFinished; // @synthesize showDetailButtonWhenFinished=_showDetailButtonWhenFinished;
@property(readonly, nonatomic) _Bool autoPause; // @synthesize autoPause=_autoPause;
@property(retain, nonatomic) ExploreOrderedData *movieDelegateData; // @synthesize movieDelegateData=_movieDelegateData;
@property(retain, nonatomic) TTChatroomMoviePlayerController *moviePlayerController; // @synthesize moviePlayerController=_moviePlayerController;
@property(retain, nonatomic) ExploreMovieViewTracker *tracker; // @synthesize tracker=_tracker;
@property(nonatomic) __weak id <TTChatroomMovieViewDelegate> movieViewDelegate; // @synthesize movieViewDelegate=_movieViewDelegate;
@property(nonatomic) __weak UIView *rotateSuperView; // @synthesize rotateSuperView=_rotateSuperView;
@property(nonatomic) struct CGRect rotateViewRect; // @synthesize rotateViewRect=_rotateViewRect;
@property(retain, nonatomic) NSIndexPath *indexPath; // @synthesize indexPath=_indexPath;
@property(nonatomic) __weak UITableView *baseTableView; // @synthesize baseTableView=_baseTableView;
@property(nonatomic) _Bool isFullScreenButtonAction; // @synthesize isFullScreenButtonAction=_isFullScreenButtonAction;
@property(nonatomic) struct CGRect movieInFatherViewFrame; // @synthesize movieInFatherViewFrame=_movieInFatherViewFrame;
@property(nonatomic) __weak UIView *movieFatherView; // @synthesize movieFatherView=_movieFatherView;
@property(copy, nonatomic) NSIndexPath *movieFatherCellIndexPath; // @synthesize movieFatherCellIndexPath=_movieFatherCellIndexPath;
@property(nonatomic) __weak UITableView *movieFatherCellTableView; // @synthesize movieFatherCellTableView=_movieFatherCellTableView;
@property(nonatomic) _Bool hasMovieFatherCell; // @synthesize hasMovieFatherCell=_hasMovieFatherCell;
- (void).cxx_destruct;
- (void)forceStoppingMovie;
- (void)movieFullscreenVC:(id)arg1 didRotateFromOrientation:(long long)arg2;
- (void)movieFullscreenVC:(id)arg1 willRotateToOrientation:(long long)arg2;
- (id)animationControllerForDismissedController:(id)arg1;
- (id)animationControllerForPresentedController:(id)arg1 presentingController:(id)arg2 sourceController:(id)arg3;
- (unsigned long long)currentViewType;
- (void)videoPasterADViewControllerToggledToFullScreen:(_Bool)arg1 animationed:(_Bool)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (void)tryLoadNextURL;
- (void)p_tryLoadNextURL;
- (void)p_checkLoadingTimeout;
- (void)checkLoadingTimeout;
- (void)stopMovieAfterDelay;
- (void)_stopMovieIndeed;
- (void)stopMovie;
- (id)getMoviePlayerController;
- (void)resumeMovie;
- (void)playMovie;
- (void)pauseLive;
- (void)pauseMovie;
- (void)userPause;
- (void)userPlay;
- (void)applicationDidBecomeActive:(id)arg1;
- (void)applicationWillResignActive:(id)arg1;
- (void)applicationDidEnterBackground:(id)arg1;
- (void)showNetworkAlertIfNeeded;
- (_Bool)canShowAlert;
- (void)connectionChanged:(id)arg1;
- (void)freeFlowOrderFinishPlayIfNeed;
- (void)exceedFlowNotification:(id)arg1;
- (void)p_convertVideoToSDAndPlay;
- (void)p_clearNetTrafficView;
- (void)p_showNetTrafficView:(long long)arg1;
- (_Bool)p_isShowingTrafficView;
- (_Bool)p_shouldShowTrafficView:(_Bool)arg1;
- (void)removeTheMovieView;
- (void)manager:(id)arg1 errorDict:(id)arg2 videoModel:(id)arg3;
- (void)showDetailButtonClicked;
- (id)carrierMNC;
- (id)connectMethodName;
- (void)afterPlayable;
- (_Bool)stopIsValid;
- (void)movieControllerPlaybackDidFinish:(id)arg1;
- (void)movieControllerMoviePlayable:(id)arg1;
- (void)movieControllerMovieStalled:(id)arg1;
- (void)movieController:(id)arg1 playbackHasError:(id)arg2;
- (void)movieControllerShowedOneFrame:(id)arg1;
- (void)movieControllerLandscapeLeftRightRotate:(id)arg1;
- (id)currentCDNHost;
- (void)removeSnapViewIfNeeded;
- (double)progress;
- (void)playStart;
- (void)movieControllerPlaybackPrepareToPlay:(id)arg1;
- (void)movieController:(id)arg1 ResolutionButtonClickedWithType:(unsigned long long)arg2 typeString:(id)arg3;
- (id)supportedResolutionTypes;
- (_Bool)movieControllerFullScreenButtonClicked:(id)arg1 isFullScreen:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;
- (void)movieControllerShareButtonClicked:(id)arg1;
- (void)movieControllerPlayButtonClicked:(id)arg1 replay:(_Bool)arg2;
- (_Bool)movieControllerShouldPauseWhenEnterForeground:(id)arg1;
- (_Bool)movieControllerCanRotate:(id)arg1;
- (void)movieControlViewRetryButtonClicked:(id)arg1;
- (void)movieController:(id)arg1 seekToTime:(double)arg2 fromTime:(double)arg3;
- (void)movieControllerControlViewDidAppear;
- (_Bool)shouldResumePlayWhenInterruptionEnd;
- (void)p_showTrafficToastIfNeed;
- (void)removeFromSuperview;
- (double)duration;
- (double)currentPlayingTime;
- (id)videoID;
- (_Bool)isPlayingFinished;
- (_Bool)isPaused;
- (_Bool)isTopMostView;
- (void)enableNetWorkIndicator:(_Bool)arg1;
- (void)enableRotate:(_Bool)arg1;
- (void)markAsDetail;
- (_Bool)newExitFullScreen:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;
- (_Bool)exitFullScreen:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;
- (_Bool)exitFullScreenIfNeed:(_Bool)arg1;
- (_Bool)enterFullscreen:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;
- (_Bool)newEnterFullscreen:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;
- (long long)fullscreenOrientation;
- (id)mainWindow;
- (id)_playContent;
- (id)getPlayURL;
- (id)allPlayURLs;
- (void)updateFrame;
- (void)layoutSubviews;
- (void)showRetryTipView;
- (void)_fetchVideoURLInfo;
- (void)playVideoFromVideoModel:(id)arg1;
- (void)playVideoFromURL:(id)arg1;
- (void)playVideoForVideoID:(id)arg1 exploreVideoSP:(unsigned long long)arg2 videoPlayType:(unsigned long long)arg3 videoModel:(id)arg4 isFeedUrl:(_Bool)arg5;
- (void)playVideoForVideoURL:(id)arg1;
- (void)playVideoForVideoID:(id)arg1 exploreVideoSP:(unsigned long long)arg2 videoPlayType:(unsigned long long)arg3;
- (void)playVideoForVideoID:(id)arg1 exploreVideoSP:(unsigned long long)arg2;
- (void)playVideoWithVideoInfo:(id)arg1 exploreVideoSP:(unsigned long long)arg2 videoPlayType:(unsigned long long)arg3;
- (void)setLogoImageUrl:(id)arg1;
- (void)setLogoImageModel:(id)arg1;
- (void)addCoverImageView:(id)arg1;
- (id)coverImageViewWithUrl:(id)arg1;
- (id)coverImageViewWithModel:(id)arg1;
- (void)showLogo;
- (void)setVideoDuration:(double)arg1;
- (void)setVideoTitle:(id)arg1 fontSizeStyle:(long long)arg2 showInNonFullscreenMode:(_Bool)arg3;
- (void)updateMovieInFatherViewFrame:(struct CGRect)arg1;
- (_Bool)isMovieFullScreen;
- (id)playMainURL;
- (id)playVID;
- (void)didDisappear;
- (void)willDisappear;
- (void)didAppear;
- (void)willAppear;
- (void)setupAudioSessionIsMuted:(_Bool)arg1;
- (void)stopMovieWhenInBackgroundIfNeeded;
- (void)setAlwaysHideFullscreenStatusBar:(_Bool)arg1;
- (void)pauseMovieAndShowToolbar;
- (void)showDetailButtonIfNeeded;
- (void)checkUserInteraction;
- (_Bool)isLiveVideo;
- (void)setUserInteractionEnabled:(_Bool)arg1;
- (id)initWithFrame:(struct CGRect)arg1 movieViewModel:(id)arg2;
- (id)initWithFrame:(struct CGRect)arg1 type:(unsigned long long)arg2 trackerDic:(id)arg3 movieViewModel:(id)arg4;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

