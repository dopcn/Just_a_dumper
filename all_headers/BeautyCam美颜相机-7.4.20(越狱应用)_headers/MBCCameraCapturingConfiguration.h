//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "MBCCameraCapturingConfigurationProtocol-Protocol.h"

@class MTARFilterManager, MTCamera, MTCameraFaceEngine, MTFilterControl, NSString, UIImage;

@interface MBCCameraCapturingConfiguration : NSObject <MBCCameraCapturingConfigurationProtocol>
{
    _Bool _recordingVideo;
    _Bool _capturingPhoto;
    _Bool _needToFoucsOnFace;
    _Bool _shouldShowTopControlsBar;
    _Bool _shouldShowBottomLeftButton;
    _Bool _shouldShowBottomRightButton;
    _Bool _showNoDetectedFacesTipsView;
    _Bool _shouldIgnoreCameraPreviewTouchEvent;
    _Bool _shouldIgnoreCameraFocusEvent;
    _Bool _pickImageFlow;
    _Bool _silentTakePhotoModeEnabled;
    _Bool _frontCameraPreviewMirrorEnabled;
    _Bool _takePhotoViaTouchEnabled;
    _Bool _countingDown;
    _Bool _microphonePermissionAlertTipShowd;
    _Bool _usingNewPreviewSolution;
    _Bool _musicPlayingSupported;
    _Bool _autoClean;
    _Bool _mayUseARPlayingMusic;
    _Bool _autoActiveCameraModeResponder;
    _Bool _createPreviewSnapshotBeforeCapture;
    _Bool _quickTakePhotoModeEnabled;
    _Bool _showQuickTakePhotoModeSwitch;
    _Bool _addWaterMarkStatistics;
    _Bool _triggerFlipCameraActionManually;
    long long _cameraPosition;
    long long _ratio;
    double _previewScale;
    NSString *_strCameraSessionPreset;
    MTCamera *_camera;
    MTFilterControl *_filterControl;
    NSString *_bottomLeftButtonNormalImageName;
    NSString *_bottomLeftButtonHighlightedImageName;
    NSString *_bottomLeftButtonText;
    NSString *_bottomRightButtonNormalImageName;
    NSString *_bottomRightButtonHighlightedImageName;
    NSString *_bottomRightButtonText;
    NSString *_strFaceLiftConfigFilePath;
    MTARFilterManager *_arFilterManager;
    MTCameraFaceEngine *_faceEngine;
    double _faceLightLevel;
    unsigned long long _lightState;
    CDUnknownBlockType _worksThatAfterGuidesViewAllShowed;
    long long _flashState;
    NSString *_strVideoFilePath;
    long long _delayCaptureMode;
    long long _triggerTakePhotoAction;
    CDUnknownBlockType _lastFilterDidRenderFirstFrameBlock;
    struct CGSize _previewSize;
    struct CGRect _arMaterialShowRect;
}

@property(nonatomic, getter=isTriggerFlipCameraActionManually) _Bool triggerFlipCameraActionManually; // @synthesize triggerFlipCameraActionManually=_triggerFlipCameraActionManually;
@property(nonatomic) _Bool addWaterMarkStatistics; // @synthesize addWaterMarkStatistics=_addWaterMarkStatistics;
@property(nonatomic) _Bool showQuickTakePhotoModeSwitch; // @synthesize showQuickTakePhotoModeSwitch=_showQuickTakePhotoModeSwitch;
@property(nonatomic, getter=isQuickTakePhotoModeEnabled) _Bool quickTakePhotoModeEnabled; // @synthesize quickTakePhotoModeEnabled=_quickTakePhotoModeEnabled;
@property(copy, nonatomic) CDUnknownBlockType lastFilterDidRenderFirstFrameBlock; // @synthesize lastFilterDidRenderFirstFrameBlock=_lastFilterDidRenderFirstFrameBlock;
@property(nonatomic) _Bool createPreviewSnapshotBeforeCapture; // @synthesize createPreviewSnapshotBeforeCapture=_createPreviewSnapshotBeforeCapture;
@property(nonatomic) _Bool autoActiveCameraModeResponder; // @synthesize autoActiveCameraModeResponder=_autoActiveCameraModeResponder;
@property(nonatomic) _Bool mayUseARPlayingMusic; // @synthesize mayUseARPlayingMusic=_mayUseARPlayingMusic;
@property(nonatomic) _Bool autoClean; // @synthesize autoClean=_autoClean;
@property(nonatomic, getter=isMusicPlayingSupported) _Bool musicPlayingSupported; // @synthesize musicPlayingSupported=_musicPlayingSupported;
@property(nonatomic, getter=isUsingNewPreviewSolution) _Bool usingNewPreviewSolution; // @synthesize usingNewPreviewSolution=_usingNewPreviewSolution;
@property(nonatomic) long long triggerTakePhotoAction; // @synthesize triggerTakePhotoAction=_triggerTakePhotoAction;
@property(nonatomic, getter=isMicrophonePermissionAlertTipShowd) _Bool microphonePermissionAlertTipShowd; // @synthesize microphonePermissionAlertTipShowd=_microphonePermissionAlertTipShowd;
@property(nonatomic, getter=isCountingDown) _Bool countingDown; // @synthesize countingDown=_countingDown;
@property(nonatomic, getter=isTakePhotoViaTouchEnabled) _Bool takePhotoViaTouchEnabled; // @synthesize takePhotoViaTouchEnabled=_takePhotoViaTouchEnabled;
@property(nonatomic) long long delayCaptureMode; // @synthesize delayCaptureMode=_delayCaptureMode;
@property(copy, nonatomic) NSString *strVideoFilePath; // @synthesize strVideoFilePath=_strVideoFilePath;
@property(nonatomic) long long flashState; // @synthesize flashState=_flashState;
@property(nonatomic, getter=isFrontCameraPreviewMirrorEnabled) _Bool frontCameraPreviewMirrorEnabled; // @synthesize frontCameraPreviewMirrorEnabled=_frontCameraPreviewMirrorEnabled;
@property(nonatomic, getter=isSilentTakePhotoModeEnabled) _Bool silentTakePhotoModeEnabled; // @synthesize silentTakePhotoModeEnabled=_silentTakePhotoModeEnabled;
@property(copy, nonatomic) CDUnknownBlockType worksThatAfterGuidesViewAllShowed; // @synthesize worksThatAfterGuidesViewAllShowed=_worksThatAfterGuidesViewAllShowed;
@property(nonatomic) unsigned long long lightState; // @synthesize lightState=_lightState;
@property(nonatomic) double faceLightLevel; // @synthesize faceLightLevel=_faceLightLevel;
@property(retain, nonatomic) MTCameraFaceEngine *faceEngine; // @synthesize faceEngine=_faceEngine;
@property(retain, nonatomic) MTARFilterManager *arFilterManager; // @synthesize arFilterManager=_arFilterManager;
@property(copy, nonatomic) NSString *strFaceLiftConfigFilePath; // @synthesize strFaceLiftConfigFilePath=_strFaceLiftConfigFilePath;
@property(nonatomic, getter=isPickImageFlow) _Bool pickImageFlow; // @synthesize pickImageFlow=_pickImageFlow;
@property(nonatomic) _Bool shouldIgnoreCameraFocusEvent; // @synthesize shouldIgnoreCameraFocusEvent=_shouldIgnoreCameraFocusEvent;
@property(nonatomic) _Bool shouldIgnoreCameraPreviewTouchEvent; // @synthesize shouldIgnoreCameraPreviewTouchEvent=_shouldIgnoreCameraPreviewTouchEvent;
@property(nonatomic) _Bool showNoDetectedFacesTipsView; // @synthesize showNoDetectedFacesTipsView=_showNoDetectedFacesTipsView;
@property(retain, nonatomic) NSString *bottomRightButtonText; // @synthesize bottomRightButtonText=_bottomRightButtonText;
@property(retain, nonatomic) NSString *bottomRightButtonHighlightedImageName; // @synthesize bottomRightButtonHighlightedImageName=_bottomRightButtonHighlightedImageName;
@property(retain, nonatomic) NSString *bottomRightButtonNormalImageName; // @synthesize bottomRightButtonNormalImageName=_bottomRightButtonNormalImageName;
@property(retain, nonatomic) NSString *bottomLeftButtonText; // @synthesize bottomLeftButtonText=_bottomLeftButtonText;
@property(retain, nonatomic) NSString *bottomLeftButtonHighlightedImageName; // @synthesize bottomLeftButtonHighlightedImageName=_bottomLeftButtonHighlightedImageName;
@property(retain, nonatomic) NSString *bottomLeftButtonNormalImageName; // @synthesize bottomLeftButtonNormalImageName=_bottomLeftButtonNormalImageName;
@property(nonatomic) _Bool shouldShowBottomRightButton; // @synthesize shouldShowBottomRightButton=_shouldShowBottomRightButton;
@property(nonatomic) _Bool shouldShowBottomLeftButton; // @synthesize shouldShowBottomLeftButton=_shouldShowBottomLeftButton;
@property(nonatomic) _Bool shouldShowTopControlsBar; // @synthesize shouldShowTopControlsBar=_shouldShowTopControlsBar;
@property(retain, nonatomic) MTFilterControl *filterControl; // @synthesize filterControl=_filterControl;
@property(retain, nonatomic) MTCamera *camera; // @synthesize camera=_camera;
@property(copy, nonatomic) NSString *strCameraSessionPreset; // @synthesize strCameraSessionPreset=_strCameraSessionPreset;
@property(nonatomic, getter=isNeedToFoucsOnFace) _Bool needToFoucsOnFace; // @synthesize needToFoucsOnFace=_needToFoucsOnFace;
@property(nonatomic, getter=isCapturingPhoto) _Bool capturingPhoto; // @synthesize capturingPhoto=_capturingPhoto;
@property(nonatomic, getter=isRecordingVideo) _Bool recordingVideo; // @synthesize recordingVideo=_recordingVideo;
@property(nonatomic) double previewScale; // @synthesize previewScale=_previewScale;
@property(nonatomic) struct CGSize previewSize; // @synthesize previewSize=_previewSize;
@property(nonatomic) struct CGRect arMaterialShowRect; // @synthesize arMaterialShowRect=_arMaterialShowRect;
@property(nonatomic) long long ratio; // @synthesize ratio=_ratio;
@property(nonatomic) long long cameraPosition; // @synthesize cameraPosition=_cameraPosition;
- (void).cxx_destruct;
@property(readonly, nonatomic, getter=isCaptureCameraButtonExclusiveTouch) _Bool captureCameraButtonExclusiveTouch; // @dynamic captureCameraButtonExclusiveTouch;
@property(readonly, nonatomic) double ratioOffset; // @dynamic ratioOffset;
- (_Bool)cleanShinyAccordingToFrontCameraPresenting:(_Bool)arg1;
@property(readonly, nonatomic, getter=isFullScreenRatio) _Bool fullScreenRatio; // @dynamic fullScreenRatio;
- (void)musicPlayingSupportedDidChange;
- (_Bool)canCreatePreviewSnapshotBeforeCapture;
- (void)forceFillFilterControl;
- (id)createDefaultFilterControl;
- (void)forceFillARFilterManager;
- (id)createDefaultARFilterManager;
- (void)forceFillCamera;
- (void)setupCamera:(id)arg1;
- (id)createDefaultCamera;
- (id)defaultCameraSessionPreset;
- (id)cameraSessionPresetWithRatioType:(long long)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(retain, nonatomic) id selectedCategory;
@property(retain, nonatomic) id selectedCategoryFilter;
@property(retain, nonatomic) id selectedMaterial;
@property(retain, nonatomic) id selectedMaterialFilter;
@property(nonatomic) _Bool shouldShowSlider;
@property(nonatomic) _Bool shouldShowSliderDisplaySwitch;
@property(nonatomic) _Bool shouldShowSliderMusicSwitch;
@property(nonatomic) _Bool shouldUpdateMaterialViewDataSource;
@property(nonatomic, getter=isSliderMusicSwitchButtonEnabled) _Bool sliderMusicSwitchButtonEnabled;
@property(retain, nonatomic) UIImage *sliderMusicSwitchButtonHighlightedStateImage;
@property(retain, nonatomic) UIImage *sliderMusicSwitchButtonNormalStateImage;
@property(retain, nonatomic) id specifiedMaterial;
@property(retain, nonatomic) id specifiedMaterialFilter;
@property(readonly) Class superclass;

@end

