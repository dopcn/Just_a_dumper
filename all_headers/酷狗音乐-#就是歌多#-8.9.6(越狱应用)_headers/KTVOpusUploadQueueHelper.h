//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "KtvOpusUploadTaskDelegate-Protocol.h"

@class KTVNetReachability, KTVOpusPublishHelper, KTVQueue, KTV_LocalWorkDBMgr, NSMutableDictionary, NSString;

@interface KTVOpusUploadQueueHelper : NSObject <KtvOpusUploadTaskDelegate>
{
    _Bool _isUploadInBackground;
    _Bool _isLastResultInBackground;
    int _currentReachabilityStatus;
    double _beginUploadTime;
    KTVQueue *_uploadingTaskQueue;
    KTVQueue *_failedTaskQueue;
    NSMutableDictionary *_tasksMap;
    KTVNetReachability *_netReachability;
    KTVOpusPublishHelper *_opusPublishHelper;
    KTV_LocalWorkDBMgr *_localDbMgr;
}

+ (id)shareInstance;
@property(retain, nonatomic) KTV_LocalWorkDBMgr *localDbMgr; // @synthesize localDbMgr=_localDbMgr;
@property(retain, nonatomic) KTVOpusPublishHelper *opusPublishHelper; // @synthesize opusPublishHelper=_opusPublishHelper;
@property(nonatomic) int currentReachabilityStatus; // @synthesize currentReachabilityStatus=_currentReachabilityStatus;
@property(retain, nonatomic) KTVNetReachability *netReachability; // @synthesize netReachability=_netReachability;
@property(retain, nonatomic) NSMutableDictionary *tasksMap; // @synthesize tasksMap=_tasksMap;
@property(retain, nonatomic) KTVQueue *failedTaskQueue; // @synthesize failedTaskQueue=_failedTaskQueue;
@property(retain, nonatomic) KTVQueue *uploadingTaskQueue; // @synthesize uploadingTaskQueue=_uploadingTaskQueue;
@property(nonatomic) double beginUploadTime; // @synthesize beginUploadTime=_beginUploadTime;
@property(nonatomic) _Bool isLastResultInBackground; // @synthesize isLastResultInBackground=_isLastResultInBackground;
@property(nonatomic) _Bool isUploadInBackground; // @synthesize isUploadInBackground=_isUploadInBackground;
- (void).cxx_destruct;
- (void)removeQueueAll;
- (void)notifyUserLogout;
- (void)dealUserLogin;
- (void)notifyUserLogin;
- (void)unRegisterNotification;
- (void)registerNotification;
- (void)dealOfflineModeChanged:(_Bool)arg1;
- (void)changeNetPackState:(id)arg1;
- (void)offlineModeChanged:(id)arg1;
- (void)dealChangeStatusByNet:(_Bool)arg1 isWaiting:(_Bool)arg2;
- (void)canUploading:(CDUnknownBlockType)arg1;
- (void)queueChangeStatusByNet;
- (void)publishOpus:(id)arg1;
- (void)setCurProgress:(id)arg1 withTask:(id)arg2;
- (void)uploadBeCanceledByUserDealIndentify:(id)arg1;
- (void)uploadFailed:(id)arg1 withTask:(id)arg2;
- (void)uploadSuccessed:(id)arg1 withTask:(id)arg2;
- (void)updateWhenUserCancel:(id)arg1;
- (void)updateWhenTaskError:(id)arg1;
- (void)updateWhenTaskRemove:(id)arg1;
- (void)updateWhenTaskCompleted:(id)arg1;
- (void)updateWhenTaskUploading:(id)arg1;
- (void)updateWhenTaskPause:(id)arg1;
- (void)removeUploadingQueueToErrorQueue;
- (void)addErrorQueueToUploadingQueue;
- (void)moveTaskToErrorQueue:(id)arg1;
- (_Bool)checkTaskIsHeadTask:(id)arg1;
- (_Bool)insertTaskToHead:(id)arg1;
- (void)pauseHeadTask;
- (void)startHeadTask;
- (id)getTaskByTaskIndentify:(id)arg1;
- (_Bool)ifQueueContainTask:(id)arg1;
- (double)queryUploadProgressFor:(id)arg1;
- (unsigned long long)queryUploadStatus:(id)arg1;
- (void)setUploadInBackground:(_Bool)arg1;
- (void)setCurrentTaskUploadInBackground;
- (void)resumeUploadTask:(id)arg1 inBackground:(_Bool)arg2;
- (_Bool)removeUploadTaskForIndentify:(id)arg1;
- (_Bool)removeUploadTask:(id)arg1;
- (_Bool)removeHeadTask;
- (_Bool)addAUploadTaskAtRailForOpus:(id)arg1;
- (_Bool)insertAUploadTaskAtHeadForOpus:(id)arg1 inBackground:(_Bool)arg2 shouldBeginImmediately:(CDUnknownBlockType)arg3;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

