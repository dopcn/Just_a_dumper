//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

@class AE1_AudioPlayerAndRecorder, AE1_CommandGenerator, GA_CommandFormatBuilder, GA_ValidateSignalResult, NSData, NSMutableArray, NSMutableData, NSThread;
@protocol GA_BTv2ScanAndConnectionDelegate, GA_BTv4ScanAndConnectionDelegate, GA_GenericAudioControllerDelegate, GA_UsbScanAndConnectionDelegate;

@interface GA_GenericAudioController : NSObject
{
    NSObject<GA_GenericAudioControllerDelegate> *delegate;
    NSObject<GA_BTv2ScanAndConnectionDelegate> *BTv2ScanAndConnectionDelegate;
    NSObject<GA_BTv4ScanAndConnectionDelegate> *BTv4ScanAndConnectionDelegate;
    NSObject<GA_UsbScanAndConnectionDelegate> *UsbScanAndConnectionDelegate;
    int audioState;
    int objClientCode;
    _Bool detectDeviceChange;
    _Bool isReleasedAudioResource;
    _Bool isStartedAudioPlayerAndRecorder;
    _Bool isEnableCommandHistory;
    GA_CommandFormatBuilder *objCommandFormatBuilder;
    GA_ValidateSignalResult *objValidateSignalResult;
    _Bool isKeepThreadAlive;
    NSThread *timerThread;
    NSThread *sendAndDecodeThread;
    NSData *receivedAudioData;
    NSMutableArray *commandHistory;
    NSMutableData *tempReceivedBTData;
    NSMutableData *tempReceivedLevel2_BTData;
    _Bool isWritingValueBlock;
    double receivedFrequency;
    AE1_AudioPlayerAndRecorder *objAudioPlayerAndRecorder;
    AE1_CommandGenerator *objAudioCommandGenerator;
}

+ (id)sharedController;
@property(nonatomic) NSObject<GA_UsbScanAndConnectionDelegate> *UsbScanAndConnectionDelegate; // @synthesize UsbScanAndConnectionDelegate;
@property(nonatomic) NSObject<GA_BTv4ScanAndConnectionDelegate> *BTv4ScanAndConnectionDelegate; // @synthesize BTv4ScanAndConnectionDelegate;
@property(nonatomic) NSObject<GA_BTv2ScanAndConnectionDelegate> *BTv2ScanAndConnectionDelegate; // @synthesize BTv2ScanAndConnectionDelegate;
@property(nonatomic) double receivedFrequency; // @synthesize receivedFrequency;
@property(retain, nonatomic) NSMutableData *tempReceivedLevel2_BTData; // @synthesize tempReceivedLevel2_BTData;
@property(retain, nonatomic) NSMutableData *tempReceivedBTData; // @synthesize tempReceivedBTData;
@property(retain, nonatomic) NSData *receivedAudioData; // @synthesize receivedAudioData;
@property(nonatomic) _Bool isEnableCommandHistory; // @synthesize isEnableCommandHistory;
@property(retain, nonatomic) NSMutableArray *commandHistory; // @synthesize commandHistory;
@property(readonly) int audioState; // @synthesize audioState;
@property(nonatomic) int objClientCode; // @synthesize objClientCode;
@property(readonly) _Bool isReleasedAudioResource; // @synthesize isReleasedAudioResource;
@property(nonatomic) _Bool detectDeviceChange; // @synthesize detectDeviceChange;
@property(nonatomic) NSObject<GA_GenericAudioControllerDelegate> *delegate; // @synthesize delegate;
@property(retain, nonatomic) GA_ValidateSignalResult *objValidateSignalResult; // @synthesize objValidateSignalResult;
@property(retain, nonatomic) GA_CommandFormatBuilder *objCommandFormatBuilder; // @synthesize objCommandFormatBuilder;
@property(retain, nonatomic) AE1_CommandGenerator *objAudioCommandGenerator; // @synthesize objAudioCommandGenerator;
@property(retain, nonatomic) AE1_AudioPlayerAndRecorder *objAudioPlayerAndRecorder; // @synthesize objAudioPlayerAndRecorder;
- (void)GenerateTone_Frequency:(double)arg1 playTimeInSecond1:(double)arg2 frequency2:(double)arg3 playTimeInSecond2:(double)arg4;
- (void)GenerateTone_Frequency:(double)arg1 playTimeInSecond:(double)arg2;
- (void)GenerateTone_FreqAndCommand:(double)arg1 freqPlayTimeInSecond:(double)arg2 cCmdId:(unsigned char)arg3 isResend:(_Bool)arg4 dataOut:(id)arg5 commandFormat:(int)arg6;
- (void)GenerateTone_FreqAndCommand:(double)arg1 freqPlayTimeInSecond:(double)arg2 cCmdId:(unsigned char)arg3 isResend:(_Bool)arg4 dataOut:(id)arg5;
- (void)GenerateCommand:(unsigned char)arg1 isResend:(_Bool)arg2 dataOut:(id)arg3 commandFormat:(int)arg4 commandDataDict:(id)arg5;
- (void)GenerateCommand:(unsigned char)arg1 isResend:(_Bool)arg2 dataOut:(id)arg3;
- (void)GenerateAudioCommand:(id)arg1;
- (void)TriggerCallback_AudioError:(int)arg1;
- (void)TriggerCallback_DeviceDetection:(int)arg1;
- (void)cancelAllCallbackSelector;
- (void)KvoResultHandler_AudioController;
- (void)KvoResultHandler_ValidateSignalResult;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)validateSignalResult:(int)arg1 byteResult:(id)arg2 isBTv2Data:(_Bool)arg3;
- (void)performInMainThread_SignalEnd;
- (void)performInMainThread_SignalStart;
- (void)decoderStateChangeHandler_SignalEnd;
- (void)decoderStateChangeHandler_SignalStart;
- (void)cleartempReceivedLevel2_BTData;
- (void)clearTempReceivedBTData;
- (void)validateByteStuffing_C08:(id)arg1;
- (_Bool)validateFooterForBT:(id)arg1;
- (_Bool)validateHeaderForBT:(id)arg1;
- (void)validateByteStuffingForBT_AABB;
- (void)handleAnalyseByteStuffingData_C10_Level2:(id)arg1;
- (void)handleAnalyseByteStuffingData_C10:(id)arg1;
- (void)handleAnalyseByteStuffingData_C08_Level2:(id)arg1;
- (void)handleAnalyseByteStuffingData_C08:(id)arg1;
- (void)handleAnalyseByteStuffingData_AABB:(id)arg1;
- (void)clearTempReceivedBTDataAfterDelay;
- (void)handleAnalyseByteStuffingData_C11:(id)arg1;
- (void)enableRestoreVolumeInBackground:(_Bool)arg1;
- (void)setBatchMode:(int)arg1;
- (id)addByteStuffing:(id)arg1;
- (unsigned char)calculateC08_BleChecksum:(char *)arg1 Length:(int)arg2;
- (id)repackageForC08_BLE_Array:(id)arg1;
- (void)removeObserverForKvoAndNotifCenter;
- (void)addObserverForKvoAndNotifCenter;
- (void)TriggerCallback_AudioStateChange:(int)arg1;
- (id)getNoDuplicatedValueArray:(id)arg1;
- (double)getSignalPlayingTime;
- (_Bool)validateSpCrc:(id)arg1;
- (unsigned char)CalculateCrc8:(id)arg1;
- (_Bool)isChecksumValid_Crc8:(id)arg1 cChecksum:(unsigned char)arg2;
- (unsigned char)convertBitStringToUnsignedChar:(id)arg1;
- (_Bool)isNumeric:(id)arg1;
- (int)countOccurencesOfString:(id)arg1 searchString:(id)arg2;
- (_Bool)isContainString:(id)arg1 containString:(id)arg2;
- (_Bool)isValidSubstringRange:(int)arg1 fromIdx:(int)arg2 subLength:(int)arg3;
- (id)convertUnsignedCharArrayToString:(char *)arg1 dataLength:(int)arg2;
- (id)convertIntToByteString_OneDigitToOneByte:(id)arg1;
- (id)convertIntTo2ByteString:(int)arg1;
- (id)convertIntTo2ByteData:(int)arg1;
- (int)indexOf:(id)arg1 originalString:(id)arg2;
- (id)nsDataToHexString:(id)arg1;
- (id)hexStringToAscii:(id)arg1;
- (id)asciiStringToHexString:(id)arg1;
- (int)hexStringToInt:(id)arg1;
- (char *)hexStringToUnsignedCharArray:(id)arg1;
- (unsigned char)hexStringToUnsignedChar:(id)arg1;
- (id)hexStringToBytes:(id)arg1;
- (id)addLeadingZero:(id)arg1 multipleOf:(int)arg2;
- (id)appendPKCS7Padding:(id)arg1;
- (id)appendZeroPadding:(id)arg1;
- (_Bool)isPassedSignalGenerateChecking;
- (void)stopPowerSignal;
- (void)startPowerSignal;
- (void)clearChildControllerTempData;
- (void)stopPlayerAndRecorderAndReset;
- (void)stopGA_GenericAudioController;
- (void)showSystemVolumePopupAndRestoreVolume;
- (void)hideSystemVolumePopupAndSaveCurrentVolume;
- (_Bool)startGA_GenericAudioController;
- (void)forceResetIsStartedAudioPlayerAndRecorder;
- (_Bool)IsOtherAudioIsPlaying;
- (_Bool)isAllowMicrophoneUsage;
- (_Bool)isDevicePresent;
- (_Bool)getBuildSetting_EnabledBTv4;
- (_Bool)getBuildSetting_EnabledBTv2;
- (_Bool)getBuildSetting_EnabledAudio;
- (void)Notif_WillEnterForeground;
- (void)Notif_WillResignActive;
- (void)addObserver_WillEnterForegroundNotification;
- (void)addObserver_WillResignActiveNotification;
- (void)releaseAudioResource;
- (void)dealloc;
- (void)clearCommandHistory;
- (void)setCmdSetDictForValidation:(id)arg1;
- (void)setOutputVolume:(double)arg1;
- (void)setOutputFrequency:(int)arg1;
- (void)setInputFrequency:(int)arg1;
- (void)updateClientSetting;
- (void)updateClientSetting:(id)arg1;
- (void)setAudioOutputFrequency:(float)arg1;
- (void)setDataRate:(id)arg1;
- (_Bool)isOldCommandProtocolPrefix:(id)arg1;
- (void)setSubProtocol:(int)arg1;
- (void)setClientCode:(int)arg1;
- (void)setClientCode:(int)arg1 optionDict:(id)arg2;
- (void)initAndSetupChildController;
- (void)stopAllThread;
- (void)addToThread:(id)arg1 threadName:(id)arg2 selectorString:(id)arg3 data:(id)arg4;
- (void)keepThreadAlive;
- (void)initAllObject;
- (id)init;
- (void)releaseSharedController;
- (id)getDebugHexString_ReceivedByte;
- (id)getDebugHexString_SendByte;
- (id)getGA_GenericAudioControllerVersion;
- (id)getAudioDecoderVersion;
- (id)getAudioEngineVersion;

@end

