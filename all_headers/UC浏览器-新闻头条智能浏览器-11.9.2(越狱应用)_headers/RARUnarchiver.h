//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

#import "Unarchiver-Protocol.h"

@class NSDictionary, NSString;

@interface RARUnarchiver : NSObject <Unarchiver>
{
    _Bool m_isDecompressContinue;
    _Bool m_isVolume;
    _Bool m_isFirst;
    _Bool m_isNewNamingMethod;
    _Bool m_isDiskNoSpace;
    int m_archiveNeedPasswordType;
    NSString *m_tmpFolder;
    NSString *m_archivePath;
    NSDictionary *m_previewFileDic;
    NSString *m_password;
    id m_delegate;
    unsigned long long m_decompressSumSize;
    unsigned long long m_decompressdSize;
    unsigned long long m_cacheRate;
}

@property(nonatomic) _Bool isDiskNoSpace; // @synthesize isDiskNoSpace=m_isDiskNoSpace;
@property(nonatomic) _Bool isNewNamingMethod; // @synthesize isNewNamingMethod=m_isNewNamingMethod;
@property(nonatomic) _Bool isFirst; // @synthesize isFirst=m_isFirst;
@property(nonatomic) _Bool isVolume; // @synthesize isVolume=m_isVolume;
@property(nonatomic) unsigned long long cacheRate; // @synthesize cacheRate=m_cacheRate;
@property(nonatomic) unsigned long long decompressdSize; // @synthesize decompressdSize=m_decompressdSize;
@property(nonatomic) unsigned long long decompressSumSize; // @synthesize decompressSumSize=m_decompressSumSize;
@property(readonly, nonatomic) _Bool isDecompressContinue; // @synthesize isDecompressContinue=m_isDecompressContinue;
@property(nonatomic) id delegate; // @synthesize delegate=m_delegate;
@property(retain, nonatomic) NSString *password; // @synthesize password=m_password;
@property(readonly, nonatomic) int archiveNeedPasswordType; // @synthesize archiveNeedPasswordType=m_archiveNeedPasswordType;
@property(readonly, nonatomic) NSDictionary *previewFileDic; // @synthesize previewFileDic=m_previewFileDic;
@property(readonly, nonatomic) NSString *archivePath; // @synthesize archivePath=m_archivePath;
@property(readonly, nonatomic) NSString *tmpFolder; // @synthesize tmpFolder=m_tmpFolder;
- (_Bool)isValidFolderPath:(id)arg1;
- (_Bool)isValidFilePath:(id)arg1;
- (void)dealloc;
- (int)fillFile:(id)arg1 rarFileName:(id)arg2 rarHandle:(void *)arg3;
- (void)unrarCloseFile:(void *)arg1;
- (void *)unrarOpenFileWithMode:(long long)arg1;
- (_Bool)isNewNamingMethod:(struct RAROpenArchiveDataEx *)arg1;
- (_Bool)isFirst:(struct RAROpenArchiveDataEx *)arg1;
- (_Bool)isVolume:(struct RAROpenArchiveDataEx *)arg1;
- (void)processFileCodeCheck:(int)arg1;
- (int)initPackInfo;
- (id)tryToGetFirstVolumeRar:(id)arg1 isNewNamingMethod:(_Bool)arg2;
- (void)cancelDecompress;
- (int)decompressFoldersAtPackFolder:(id)arg1;
- (int)decompressFilesAtPackFolder:(id)arg1;
- (id)pickUpFolder;
- (id)pickUpFile;
- (id)pickUpWithIsDir:(_Bool)arg1;
- (void)setRarNeedPasswordType:(id)arg1;
- (_Bool)requestPasswordWhenNeed;
- (void)decompressThread;
- (int)decompress;
- (void)decompressEndWithCode:(int)arg1;
- (void)decompressErrorHappen:(id)arg1;
- (void)decompressWillStart;
- (void)increaseDecompressdSize:(id)arg1;
@property(readonly, nonatomic, getter=unPackFolder) NSString *unPackFolder;
- (void)notifyDiskNoSpace;
- (int)openArchiveFile:(id)arg1 tmpFolder:(id)arg2;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

