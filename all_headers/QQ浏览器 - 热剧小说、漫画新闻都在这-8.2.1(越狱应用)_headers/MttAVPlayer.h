//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "MttBasePlayer.h"

#import "AVAssetResourceLoaderDelegate-Protocol.h"
#import "AVPlayerItemOutputPullDelegate-Protocol.h"

@class AVPlayerItemVideoOutput, AVPlayerLayer, MAVPlayer, MAVPlayerItem, NSObject, NSString, UIView;
@protocol OS_dispatch_queue;

@interface MttAVPlayer : MttBasePlayer <AVPlayerItemOutputPullDelegate, AVAssetResourceLoaderDelegate>
{
    UIView *_playerView;
    AVPlayerItemVideoOutput *_videoOutput;
    NSObject<OS_dispatch_queue> *_myVideoOutputQueue;
    _Bool _isRegItemKVO;
    _Bool _isRegPlayerKVO;
    _Bool _isRegItemNotification;
    _Bool _isRegPlayerObserver;
    _Bool _didEnterBackground;
    _Bool _isPlaying;
    _Bool _sholudResumeWhenActive;
    MAVPlayer *_player;
    MAVPlayerItem *_playerItem;
    AVPlayerLayer *_playerLayer;
    id _timeObserver;
    NSString *_videoGravity;
}

@property(nonatomic) NSString *videoGravity; // @synthesize videoGravity=_videoGravity;
@property(nonatomic) _Bool sholudResumeWhenActive; // @synthesize sholudResumeWhenActive=_sholudResumeWhenActive;
@property(nonatomic) _Bool isPlaying; // @synthesize isPlaying=_isPlaying;
@property(nonatomic) _Bool didEnterBackground; // @synthesize didEnterBackground=_didEnterBackground;
@property(nonatomic) _Bool isRegPlayerObserver; // @synthesize isRegPlayerObserver=_isRegPlayerObserver;
@property(nonatomic) _Bool isRegItemNotification; // @synthesize isRegItemNotification=_isRegItemNotification;
@property(nonatomic) _Bool isRegPlayerKVO; // @synthesize isRegPlayerKVO=_isRegPlayerKVO;
@property(nonatomic) _Bool isRegItemKVO; // @synthesize isRegItemKVO=_isRegItemKVO;
@property(retain, nonatomic) id timeObserver; // @synthesize timeObserver=_timeObserver;
@property(retain, nonatomic) AVPlayerLayer *playerLayer; // @synthesize playerLayer=_playerLayer;
@property(retain, nonatomic) MAVPlayerItem *playerItem; // @synthesize playerItem=_playerItem;
@property(retain, nonatomic) MAVPlayer *player; // @synthesize player=_player;
- (void).cxx_destruct;
- (void)resourceLoader:(id)arg1 didCancelAuthenticationChallenge:(id)arg2;
- (_Bool)resourceLoader:(id)arg1 shouldWaitForResponseToAuthenticationChallenge:(id)arg2;
- (void)resourceLoader:(id)arg1 didCancelLoadingRequest:(id)arg2;
- (_Bool)resourceLoader:(id)arg1 shouldWaitForRenewalOfRequestedResource:(id)arg2;
- (_Bool)resourceLoader:(id)arg1 shouldWaitForLoadingOfRequestedResource:(id)arg2;
- (double)volume;
- (void)setVolume:(double)arg1;
- (double)playableDuration;
- (double)duration;
- (double)currentPlaybackTime;
- (struct CGSize)naturalSize;
- (void)replay;
- (void)stop;
- (void)seekToTimePrecision:(double)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)seekToTime:(double)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)pause;
- (double)rate;
- (void)setPlayerRate:(double)arg1;
- (void)play;
- (struct __CVBuffer *)pixelBufferRef;
- (void)applicationDidBecomeActiveNotification;
- (void)applicationWillResignActiveNotification;
- (void)playerItemStalledNotification;
- (void)playerItemDidReachEnd:(id)arg1;
- (void)assetFailedToPrepareForPlayback:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (CDStruct_1b6d18a9)playerItemDuration;
- (void)notifyPlayTimeChange;
- (void)initProgressNotifyTimer;
- (void)removePlayerTimeObserver;
- (void)removePlayerItemNotification;
- (void)addPlayerItemNotification;
- (void)removePlayerObserver;
- (void)addPlayerObserver;
- (void)removePlayerItemObserver;
- (void)addPlayerItemObserver;
- (void)updateGravity:(id)arg1;
- (void)playWithAsset:(id)arg1;
- (void)playWithAsset:(id)arg1 withPlayStartTime:(double)arg2;
- (void)playWithUrl:(id)arg1 withPlayStartTime:(double)arg2;
- (id)playerView;
- (void)removeAllPlayItemObserver;
- (void)removeAllObserver;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

