//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "BITHockeyBaseManager.h"

@class BITUpdateViewController, NSArray, NSDate, NSFileManager, NSMutableData, NSNumber, NSString, UIView;

@interface BITUpdateManager : BITHockeyBaseManager
{
    _Bool _checkForUpdateOnLaunch;
    _Bool _alwaysShowUpdateReminder;
    _Bool _showDirectInstallOption;
    _Bool _disableUpdateCheckOptionWhenExpired;
    _Bool _dataFound;
    _Bool _showFeedback;
    _Bool _updateAlertShowing;
    _Bool _lastCheckFailed;
    _Bool _didStartUpdateProcess;
    _Bool _didEnterBackgroundState;
    _Bool _firstStartAfterInstall;
    _Bool _updateAvailable;
    _Bool _checkInProgress;
    _Bool _installationIdentified;
    _Bool _disableUpdateManager;
    _Bool _sendUsageData;
    unsigned long long _updateSetting;
    NSDate *_expiryDate;
    NSString *_currentAppVersion;
    NSFileManager *_fileManager;
    NSString *_updateDir;
    NSString *_usageDataFile;
    id _appDidBecomeActiveObserver;
    id _appDidEnterBackgroundObserver;
    id _networkDidBecomeReachableObserver;
    NSNumber *_versionID;
    NSString *_versionUUID;
    NSString *_uuid;
    NSString *_blockingScreenMessage;
    NSDate *_lastUpdateCheckFromBlockingScreen;
    id _delegate;
    NSMutableData *_receivedData;
    NSDate *_lastCheck;
    NSArray *_appVersions;
    NSNumber *_currentAppVersionUsageTime;
    NSDate *_usageStartTimestamp;
    UIView *_blockingView;
    NSString *_companyName;
    NSString *_installationIdentification;
    NSString *_installationIdentificationType;
    BITUpdateViewController *_currentHockeyViewController;
}

@property(nonatomic) _Bool sendUsageData; // @synthesize sendUsageData=_sendUsageData;
@property(retain, nonatomic) BITUpdateViewController *currentHockeyViewController; // @synthesize currentHockeyViewController=_currentHockeyViewController;
@property(nonatomic, getter=isUpdateManagerDisabled) _Bool disableUpdateManager; // @synthesize disableUpdateManager=_disableUpdateManager;
@property(nonatomic) _Bool installationIdentified; // @synthesize installationIdentified=_installationIdentified;
@property(copy, nonatomic) NSString *installationIdentificationType; // @synthesize installationIdentificationType=_installationIdentificationType;
@property(copy, nonatomic) NSString *installationIdentification; // @synthesize installationIdentification=_installationIdentification;
@property(copy, nonatomic) NSString *companyName; // @synthesize companyName=_companyName;
@property(retain, nonatomic) UIView *blockingView; // @synthesize blockingView=_blockingView;
@property(copy, nonatomic) NSDate *usageStartTimestamp; // @synthesize usageStartTimestamp=_usageStartTimestamp;
@property(retain, nonatomic) NSNumber *currentAppVersionUsageTime; // @synthesize currentAppVersionUsageTime=_currentAppVersionUsageTime;
@property(copy, nonatomic) NSArray *appVersions; // @synthesize appVersions=_appVersions;
@property(copy, nonatomic) NSDate *lastCheck; // @synthesize lastCheck=_lastCheck;
@property(retain, nonatomic) NSMutableData *receivedData; // @synthesize receivedData=_receivedData;
@property(nonatomic, getter=isCheckInProgress) _Bool checkInProgress; // @synthesize checkInProgress=_checkInProgress;
@property(nonatomic, getter=isUpdateAvailable) _Bool updateAvailable; // @synthesize updateAvailable=_updateAvailable;
@property(nonatomic) __weak id delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) NSDate *lastUpdateCheckFromBlockingScreen; // @synthesize lastUpdateCheckFromBlockingScreen=_lastUpdateCheckFromBlockingScreen;
@property(copy, nonatomic) NSString *blockingScreenMessage; // @synthesize blockingScreenMessage=_blockingScreenMessage;
@property(copy, nonatomic) NSString *uuid; // @synthesize uuid=_uuid;
@property(copy, nonatomic) NSString *versionUUID; // @synthesize versionUUID=_versionUUID;
@property(retain, nonatomic) NSNumber *versionID; // @synthesize versionID=_versionID;
@property(nonatomic) _Bool firstStartAfterInstall; // @synthesize firstStartAfterInstall=_firstStartAfterInstall;
@property(nonatomic) _Bool didEnterBackgroundState; // @synthesize didEnterBackgroundState=_didEnterBackgroundState;
@property(nonatomic) _Bool didStartUpdateProcess; // @synthesize didStartUpdateProcess=_didStartUpdateProcess;
@property(nonatomic) __weak id networkDidBecomeReachableObserver; // @synthesize networkDidBecomeReachableObserver=_networkDidBecomeReachableObserver;
@property(nonatomic) __weak id appDidEnterBackgroundObserver; // @synthesize appDidEnterBackgroundObserver=_appDidEnterBackgroundObserver;
@property(nonatomic) __weak id appDidBecomeActiveObserver; // @synthesize appDidBecomeActiveObserver=_appDidBecomeActiveObserver;
@property(copy, nonatomic) NSString *usageDataFile; // @synthesize usageDataFile=_usageDataFile;
@property(copy, nonatomic) NSString *updateDir; // @synthesize updateDir=_updateDir;
@property(retain, nonatomic) NSFileManager *fileManager; // @synthesize fileManager=_fileManager;
@property(nonatomic) _Bool lastCheckFailed; // @synthesize lastCheckFailed=_lastCheckFailed;
@property(nonatomic) _Bool updateAlertShowing; // @synthesize updateAlertShowing=_updateAlertShowing;
@property(nonatomic) _Bool showFeedback; // @synthesize showFeedback=_showFeedback;
@property(nonatomic) _Bool dataFound; // @synthesize dataFound=_dataFound;
@property(copy, nonatomic) NSString *currentAppVersion; // @synthesize currentAppVersion=_currentAppVersion;
@property(nonatomic) _Bool disableUpdateCheckOptionWhenExpired; // @synthesize disableUpdateCheckOptionWhenExpired=_disableUpdateCheckOptionWhenExpired;
@property(retain, nonatomic) NSDate *expiryDate; // @synthesize expiryDate=_expiryDate;
@property(nonatomic, getter=isShowingDirectInstallOption) _Bool showDirectInstallOption; // @synthesize showDirectInstallOption=_showDirectInstallOption;
@property(nonatomic) _Bool alwaysShowUpdateReminder; // @synthesize alwaysShowUpdateReminder=_alwaysShowUpdateReminder;
@property(nonatomic, getter=isCheckForUpdateOnLaunch) _Bool checkForUpdateOnLaunch; // @synthesize checkForUpdateOnLaunch=_checkForUpdateOnLaunch;
@property(nonatomic) unsigned long long updateSetting; // @synthesize updateSetting=_updateSetting;
- (void).cxx_destruct;
- (id)newestAppVersion;
- (_Bool)hasNewerMandatoryVersion;
- (void)URLSession:(id)arg1 task:(id)arg2 willPerformHTTPRedirection:(id)arg3 newRequest:(id)arg4 completionHandler:(CDUnknownBlockType)arg5;
- (void)URLSession:(id)arg1 dataTask:(id)arg2 didReceiveResponse:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)URLSession:(id)arg1 dataTask:(id)arg2 didReceiveData:(id)arg3;
- (void)URLSession:(id)arg1 task:(id)arg2 didCompleteWithError:(id)arg3;
- (void)finishLoading;
- (void)handleError:(id)arg1;
- (void)startManager;
- (_Bool)initiateAppDownload;
- (id)requestForUpdateCheck;
- (void)checkForUpdateShowFeedback:(_Bool)arg1;
- (void)checkForUpdate;
- (_Bool)shouldCheckForUpdates;
- (void)alertFallback:(id)arg1;
- (void)checkForUpdateForExpiredVersion;
- (void)showBlockingScreen:(id)arg1 image:(id)arg2;
- (void)showCheckForUpdateAlert;
- (void)showUpdateView;
- (id)hockeyViewController:(_Bool)arg1;
- (void)dealloc;
- (id)init;
- (void)saveAppCache;
- (void)loadAppCache;
- (void)checkUpdateAvailable;
- (id)installationDateString;
- (id)currentUsageString;
- (void)storeUsageTimeForCurrentVersion:(id)arg1;
- (void)stopUsage;
- (void)startUsage;
- (void)loadAppVersionUsageData;
- (void)checkExpiryDateReached;
- (_Bool)expiryDateReached;
- (void)unregisterObservers;
- (void)registerObservers;
- (void)didEnterBackgroundActions;
- (void)didBecomeActiveActions;
- (void)reportError:(id)arg1;

@end

