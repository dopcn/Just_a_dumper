//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "KFViewController.h"

#import "KFAudioRecorderDelegate-Protocol.h"
#import "KtvRecordRoomDelegate-Protocol.h"

@class KFAlertView, KFAudioRecorder, KTVGuidanceView, KTVMergeProgressPopView, KTVPlayerBaseInfo, KTVRecordPopupView, KTVRecordRoomVM, KTVRecordRoomView, KTVSingleScoreViewT, KTVToningView, KTV_SongInfo, KTV_SoundInfo, KtvCountdownView, KtvKrcModel, KtvToneConfigureSetting, NSDate, NSObject, NSString, NSTimer, UIAlertView, UILabel, UIView;
@protocol ADCPlayerManagerPortocol, KtvRecordingVCDelegate;

@interface KTVRecordingVC : KFViewController <KFAudioRecorderDelegate, KtvRecordRoomDelegate>
{
    double playTime;
    _Bool willShow;
    double _currentTime;
    long long haveOrig;
    float totalDuration;
    _Bool _isFregmentRecordStatus;
    _Bool _isFromSingleReRecordToTune;
    _Bool _isSingleReRecordToWholeReRecord;
    _Bool _isJumpIntoTuneView;
    _Bool _isTouneEdit;
    _Bool _shouldShowP2PAlert;
    _Bool _isSingRecordTiHuan;
    _Bool _showCompetitionTip;
    _Bool _isShowToggleModeBtn;
    _Bool _interuptionIng;
    _Bool _isRecordOk;
    _Bool _isRecording;
    _Bool _inTheRecording;
    _Bool _showSettingBtn;
    _Bool _isPrepreStatusOK;
    _Bool _isActived;
    int _currentPlayTackStatus;
    KTV_SongInfo *_songInfo;
    KTV_SoundInfo *_soundInfo;
    unsigned long long _opusType;
    KTVRecordRoomView *_recordRoom;
    KTVToningView *_toningView;
    KFAudioRecorder *_audioRecorder;
    KTVPlayerBaseInfo *_invitedPlayer;
    long long _inviteId;
    long long _channelId;
    NSString *_channelText;
    NSString *_shareAdsContext;
    NSString *_usedKrcIdStr;
    long long _accompanyAdjustTime;
    long long _recordFragmentStartTime;
    long long _recordFragmentEndTime;
    long long _krcFragmentStartTime;
    long long _krcFragmentEndTime;
    KtvKrcModel *_krcFragmentKrcModel;
    long long _singleReRecordStartTime;
    long long _singleReRecordEndTime;
    NSString *_recordOpusPath;
    KtvKrcModel *_singleReRecordKrcModel;
    NSString *_filePath;
    KtvToneConfigureSetting *_toneSetting;
    long long _tempFilePathEndTime;
    id <KtvRecordingVCDelegate> _delegate;
    CDUnknownBlockType _discardsSingleReRecordBlock;
    UIView *_lowVoiceTip;
    UIView *_earBackTip;
    CDUnknownBlockType _hasPrepraWillBegainBlock;
    KTVRecordRoomVM *_viewModel;
    UIAlertView *_currentAlert;
    KtvCountdownView *_countDownView;
    NSString *_usedAccompanyPath;
    NSString *_classStr;
    KTVRecordPopupView *_pausePopupView;
    UILabel *_fragmentTag;
    KTVMergeProgressPopView *_progressPopView;
    long long _preDragIndicateTime;
    KTVGuidanceView *_dragGuidanceView;
    KFAlertView *_nomalAlert;
    KFAlertView *_completeAlert;
    NSObject<ADCPlayerManagerPortocol> *_player;
    NSTimer *_playTimer;
    NSDate *_lastDate;
    double _prePlayTime;
    NSDate *_preClickDate;
    double _avoidRecordTimeLength;
    KTVSingleScoreViewT *_singleScoreViewT;
}

@property(nonatomic) _Bool isActived; // @synthesize isActived=_isActived;
@property(nonatomic) _Bool isPrepreStatusOK; // @synthesize isPrepreStatusOK=_isPrepreStatusOK;
@property(retain, nonatomic) KTVSingleScoreViewT *singleScoreViewT; // @synthesize singleScoreViewT=_singleScoreViewT;
@property(nonatomic) _Bool showSettingBtn; // @synthesize showSettingBtn=_showSettingBtn;
@property(nonatomic) _Bool inTheRecording; // @synthesize inTheRecording=_inTheRecording;
@property(nonatomic) double avoidRecordTimeLength; // @synthesize avoidRecordTimeLength=_avoidRecordTimeLength;
@property(retain, nonatomic) NSDate *preClickDate; // @synthesize preClickDate=_preClickDate;
@property(nonatomic) double prePlayTime; // @synthesize prePlayTime=_prePlayTime;
@property(retain, nonatomic) NSDate *lastDate; // @synthesize lastDate=_lastDate;
@property(retain, nonatomic) NSTimer *playTimer; // @synthesize playTimer=_playTimer;
@property(retain, nonatomic) NSObject<ADCPlayerManagerPortocol> *player; // @synthesize player=_player;
@property(retain, nonatomic) KFAlertView *completeAlert; // @synthesize completeAlert=_completeAlert;
@property(retain, nonatomic) KFAlertView *nomalAlert; // @synthesize nomalAlert=_nomalAlert;
@property(retain, nonatomic) KTVGuidanceView *dragGuidanceView; // @synthesize dragGuidanceView=_dragGuidanceView;
@property(nonatomic) long long preDragIndicateTime; // @synthesize preDragIndicateTime=_preDragIndicateTime;
@property(retain, nonatomic) KTVMergeProgressPopView *progressPopView; // @synthesize progressPopView=_progressPopView;
@property(retain, nonatomic) UILabel *fragmentTag; // @synthesize fragmentTag=_fragmentTag;
@property(retain, nonatomic) KTVRecordPopupView *pausePopupView; // @synthesize pausePopupView=_pausePopupView;
@property(nonatomic) _Bool isRecording; // @synthesize isRecording=_isRecording;
@property(nonatomic) _Bool isRecordOk; // @synthesize isRecordOk=_isRecordOk;
@property(nonatomic) _Bool interuptionIng; // @synthesize interuptionIng=_interuptionIng;
@property(retain, nonatomic) NSString *classStr; // @synthesize classStr=_classStr;
@property(retain, nonatomic) NSString *usedAccompanyPath; // @synthesize usedAccompanyPath=_usedAccompanyPath;
@property(retain, nonatomic) KtvCountdownView *countDownView; // @synthesize countDownView=_countDownView;
@property(retain, nonatomic) UIAlertView *currentAlert; // @synthesize currentAlert=_currentAlert;
@property(retain, nonatomic) KTVRecordRoomVM *viewModel; // @synthesize viewModel=_viewModel;
@property(copy, nonatomic) CDUnknownBlockType hasPrepraWillBegainBlock; // @synthesize hasPrepraWillBegainBlock=_hasPrepraWillBegainBlock;
@property(retain, nonatomic) UIView *earBackTip; // @synthesize earBackTip=_earBackTip;
@property(retain, nonatomic) UIView *lowVoiceTip; // @synthesize lowVoiceTip=_lowVoiceTip;
@property(nonatomic) _Bool isShowToggleModeBtn; // @synthesize isShowToggleModeBtn=_isShowToggleModeBtn;
@property(nonatomic) _Bool showCompetitionTip; // @synthesize showCompetitionTip=_showCompetitionTip;
@property(nonatomic) _Bool isSingRecordTiHuan; // @synthesize isSingRecordTiHuan=_isSingRecordTiHuan;
@property(copy, nonatomic) CDUnknownBlockType discardsSingleReRecordBlock; // @synthesize discardsSingleReRecordBlock=_discardsSingleReRecordBlock;
@property(nonatomic) __weak id <KtvRecordingVCDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) _Bool shouldShowP2PAlert; // @synthesize shouldShowP2PAlert=_shouldShowP2PAlert;
@property(nonatomic) _Bool isTouneEdit; // @synthesize isTouneEdit=_isTouneEdit;
@property(nonatomic) _Bool isJumpIntoTuneView; // @synthesize isJumpIntoTuneView=_isJumpIntoTuneView;
@property(nonatomic) _Bool isSingleReRecordToWholeReRecord; // @synthesize isSingleReRecordToWholeReRecord=_isSingleReRecordToWholeReRecord;
@property(nonatomic) _Bool isFromSingleReRecordToTune; // @synthesize isFromSingleReRecordToTune=_isFromSingleReRecordToTune;
@property(nonatomic) long long tempFilePathEndTime; // @synthesize tempFilePathEndTime=_tempFilePathEndTime;
@property(retain, nonatomic) KtvToneConfigureSetting *toneSetting; // @synthesize toneSetting=_toneSetting;
@property(copy, nonatomic) NSString *filePath; // @synthesize filePath=_filePath;
@property(retain, nonatomic) KtvKrcModel *singleReRecordKrcModel; // @synthesize singleReRecordKrcModel=_singleReRecordKrcModel;
@property(copy, nonatomic) NSString *recordOpusPath; // @synthesize recordOpusPath=_recordOpusPath;
@property(nonatomic) long long singleReRecordEndTime; // @synthesize singleReRecordEndTime=_singleReRecordEndTime;
@property(nonatomic) long long singleReRecordStartTime; // @synthesize singleReRecordStartTime=_singleReRecordStartTime;
@property(retain, nonatomic) KtvKrcModel *krcFragmentKrcModel; // @synthesize krcFragmentKrcModel=_krcFragmentKrcModel;
@property(nonatomic) long long krcFragmentEndTime; // @synthesize krcFragmentEndTime=_krcFragmentEndTime;
@property(nonatomic) long long krcFragmentStartTime; // @synthesize krcFragmentStartTime=_krcFragmentStartTime;
@property(nonatomic) long long recordFragmentEndTime; // @synthesize recordFragmentEndTime=_recordFragmentEndTime;
@property(nonatomic) long long recordFragmentStartTime; // @synthesize recordFragmentStartTime=_recordFragmentStartTime;
@property(nonatomic) _Bool isFregmentRecordStatus; // @synthesize isFregmentRecordStatus=_isFregmentRecordStatus;
@property(nonatomic) long long accompanyAdjustTime; // @synthesize accompanyAdjustTime=_accompanyAdjustTime;
@property(retain, nonatomic) NSString *usedKrcIdStr; // @synthesize usedKrcIdStr=_usedKrcIdStr;
@property(copy, nonatomic) NSString *shareAdsContext; // @synthesize shareAdsContext=_shareAdsContext;
@property(retain, nonatomic) NSString *channelText; // @synthesize channelText=_channelText;
@property(nonatomic) long long channelId; // @synthesize channelId=_channelId;
@property(nonatomic) long long inviteId; // @synthesize inviteId=_inviteId;
@property(retain, nonatomic) KTVPlayerBaseInfo *invitedPlayer; // @synthesize invitedPlayer=_invitedPlayer;
@property(nonatomic) int currentPlayTackStatus; // @synthesize currentPlayTackStatus=_currentPlayTackStatus;
@property(retain, nonatomic) KFAudioRecorder *audioRecorder; // @synthesize audioRecorder=_audioRecorder;
@property(retain, nonatomic) KTVToningView *toningView; // @synthesize toningView=_toningView;
@property(retain, nonatomic) KTVRecordRoomView *recordRoom; // @synthesize recordRoom=_recordRoom;
@property(nonatomic) unsigned long long opusType; // @synthesize opusType=_opusType;
@property(retain, nonatomic) KTV_SoundInfo *soundInfo; // @synthesize soundInfo=_soundInfo;
@property(copy, nonatomic) KTV_SongInfo *songInfo; // @synthesize songInfo=_songInfo;
- (void).cxx_destruct;
- (void)recordUserAction;
- (void)recordAccStatus;
- (void)doSomeThingBeforeLeave;
- (void)leaveTheRecordingRoom;
- (void)pauseRecord;
- (void)showMorePanelView:(_Bool)arg1;
- (void)endRecordTimePoint;
- (void)begainRecordTimePoint;
- (void)showRecordGuidanceViewAndStartRecord;
- (void)receivesInteruptionIngMsg:(id)arg1;
- (void)receivesUnsuportAudioMsg:(id)arg1;
- (void)receivesStopAudioPlayerMsg:(id)arg1;
- (void)endInteruption:(id)arg1;
- (void)beginInteruption:(id)arg1;
- (void)audioRecorder:(id)arg1 statusForMergeProgress:(double)arg2;
- (void)audioRecorder:(id)arg1 updateRecoderTimeLine:(double)arg2 andFragmentStartTime:(double)arg3 perStartTime:(double)arg4;
- (void)audioRecorder:(id)arg1 statusChange:(int)arg2;
- (void)toggleMode:(id)arg1;
- (void)configueAccTrack;
- (double)takeTheEndTimeOfRecordFor:(id)arg1;
- (void)recordRoom:(id)arg1 dragToPlayTime:(double)arg2;
- (void)recordRoom:(id)arg1 dragToMidPlayTime:(double)arg2;
- (void)recordRoom:(id)arg1 setToneValue:(int)arg2;
- (void)recordRoom:(id)arg1 jumpToPlayTime:(double)arg2;
- (void)recordRoomFirstSentenceSing:(id)arg1 isEnd:(_Bool)arg2 orginType:(long long)arg3;
- (void)recordRoom:(id)arg1 forEvent:(int)arg2;
- (void)update:(id)arg1;
- (void)handleforLivePlayer:(long long)arg1 ext1:(int)arg2 ext2:(int)arg3;
- (void)alertViewConfirmDidSelectReRecordButton:(id)arg1;
- (void)alertViewConfirmDidPauseListenButton:(id)arg1;
- (void)alertViewConfirmDidSelectListenButton:(id)arg1;
- (void)stopPlaySingleFile;
- (void)pauseSingleFile;
- (void)playForSingleRecordFile;
- (void)stopSingleTimer;
- (void)startSingleTimer;
- (void)alertViewConfirm:(id)arg1 clickedButtonAtIndex:(long long)arg2;
- (void)alertView:(id)arg1 clickedButtonAtIndex:(long long)arg2;
- (void)krcChanged;
- (long long)getRecordEndTime;
- (void)setEnableNavLeftItems:(_Bool)arg1;
- (void)setEnableNavRightItems:(_Bool)arg1;
@property(readonly, nonatomic) _Bool isSingleReRecordStatus;
- (void)loadSetting;
- (void)configureRecordInv;
- (void)unRegisterNotification;
- (void)unActiveToBackground;
- (void)beginActiveFromBackground;
- (void)registerNotification;
- (void)jumpToTuneView;
- (double)takeCurrentPlayingTime;
- (float)takeThePlayVolumeRate;
- (float)takeTheRecordVolumeRate;
- (long long)takeTheSingleReRecordEndTime;
- (long long)takeTheSingleReRecordStartTime;
- (_Bool)isSingleReRecord;
- (long long)takeTheFragmentEndTime;
- (long long)takeTheFragmentStartTime;
- (_Bool)isFregmentRecord;
- (void)releaseALLRes;
- (void)pauseRecorderAndView;
- (void)dealloc;
- (void)fragmentEnterEvent;
- (void)didReceiveMemoryWarning;
- (void)resumeRecord;
- (void)stopRecord;
- (void)resetRecordTack;
- (void)fragmentReRecord;
- (void)reRecord;
- (void)toPause;
- (void)startRecordWithAccompanyHash;
- (void)dissmisEarBackView;
- (void)audioRouteChangeNotification:(id)arg1;
- (void)loadNormalKrc:(_Bool)arg1;
- (void)loadArtSingerKrc;
- (void)loadKrc:(_Bool)arg1;
- (void)beginPreperAndCountDown;
- (void)beginPreperCountDownWithAccompanyPath:(id)arg1;
- (void)dismissEffectTonePlane;
- (void)showEffectTonePlane;
- (void)dismissProgressPopupView;
- (void)showProgressPopupViewForProgressValue:(double)arg1;
- (void)dismissPausePopupView;
- (void)showPausePopupView;
- (void)showCountDown;
- (void)standardizationSongInfo;
- (void)showView;
- (void)prepreForRecord;
- (void)viewDidLoad;
- (void)startRecordFragmentWithStartTime:(long long)arg1 endTime:(long long)arg2 andKrcModel:(id)arg3;
- (_Bool)isCompetition;
- (_Bool)isChorus;
- (void)configureRecordForFragmentStartTime:(long long)arg1 endTime:(long long)arg2;
- (void)viewWillUnActive;
- (void)viewWillActive;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

