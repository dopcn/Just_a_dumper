//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "KGAlertLoginCopeCenter-Protocol.h"
#import "KGAllCloseDelegate-Protocol.h"
#import "KGSongPermitAlertViewDelegate-Protocol.h"

@class KGDownloadVerifyBLL, KGMusicAuthInfo, KGMusicAuthManager, KGMusicQualityAuthInfo, NSString;
@protocol KGAlertLoginCopeCenter, KGDownloadAuthControllerDelegate, OS_dispatch_queue;

@interface KGDownloadAuthController : NSObject <KGAllCloseDelegate, KGAlertLoginCopeCenter, KGSongPermitAlertViewDelegate>
{
    _Bool _isPrerogativeAlert;
    _Bool _isMultiQualityAlert;
    int _verifyQuality;
    id <KGDownloadAuthControllerDelegate> _ctrlDelegate;
    KGMusicAuthManager *_authMgr;
    KGDownloadVerifyBLL *_authVerifyBll;
    KGMusicAuthInfo *_pAuthInfo;
    KGMusicQualityAuthInfo *_pQualityAuthInfo;
    CDUnknownBlockType _buyCloseSuccessHandle;
    CDUnknownBlockType _buyCloseCancelHandle;
    NSString *_loginBreakNote;
    CDUnknownBlockType _loginBreakCallbackHandle;
    NSString *_apmSeqNameForDownloadSheetShow;
    NSObject<OS_dispatch_queue> *_apmQueue;
}

@property(retain, nonatomic) NSObject<OS_dispatch_queue> *apmQueue; // @synthesize apmQueue=_apmQueue;
@property(copy, nonatomic) NSString *apmSeqNameForDownloadSheetShow; // @synthesize apmSeqNameForDownloadSheetShow=_apmSeqNameForDownloadSheetShow;
@property(copy, nonatomic) CDUnknownBlockType loginBreakCallbackHandle; // @synthesize loginBreakCallbackHandle=_loginBreakCallbackHandle;
@property(copy, nonatomic) NSString *loginBreakNote; // @synthesize loginBreakNote=_loginBreakNote;
@property(copy, nonatomic) CDUnknownBlockType buyCloseCancelHandle; // @synthesize buyCloseCancelHandle=_buyCloseCancelHandle;
@property(copy, nonatomic) CDUnknownBlockType buyCloseSuccessHandle; // @synthesize buyCloseSuccessHandle=_buyCloseSuccessHandle;
@property(nonatomic) _Bool isMultiQualityAlert; // @synthesize isMultiQualityAlert=_isMultiQualityAlert;
@property(nonatomic) _Bool isPrerogativeAlert; // @synthesize isPrerogativeAlert=_isPrerogativeAlert;
@property(nonatomic) int verifyQuality; // @synthesize verifyQuality=_verifyQuality;
@property(retain, nonatomic) KGMusicQualityAuthInfo *pQualityAuthInfo; // @synthesize pQualityAuthInfo=_pQualityAuthInfo;
@property(retain, nonatomic) KGMusicAuthInfo *pAuthInfo; // @synthesize pAuthInfo=_pAuthInfo;
@property(retain, nonatomic) KGDownloadVerifyBLL *authVerifyBll; // @synthesize authVerifyBll=_authVerifyBll;
@property(retain, nonatomic) KGMusicAuthManager *authMgr; // @synthesize authMgr=_authMgr;
@property(nonatomic) __weak id <KGDownloadAuthControllerDelegate> ctrlDelegate; // @synthesize ctrlDelegate=_ctrlDelegate;
- (void).cxx_destruct;
- (void)batchBuyWindowHandle;
- (void)singleBuyWindowHandle:(id)arg1 goodsInfo:(id)arg2;
- (void)toReSortQualityAuthInfo;
- (void)toUseMusicPkg:(long long)arg1 successCallback:(CDUnknownBlockType)arg2 failureCallback:(CDUnknownBlockType)arg3;
- (void)musicPkgReQuery:(CDUnknownBlockType)arg1;
- (void)privilegeReQuery:(CDUnknownBlockType)arg1;
- (void)toSortPurchasedSongsWithPrivilegeQuery:(_Bool)arg1 musicPkgCheck:(_Bool)arg2;
- (_Bool)recallLoginBreakCheck:(long long)arg1 songRes:(id)arg2;
- (void)resetQualityAuthInfo;
- (void)resetLoginBreakInfo;
- (void)resetIndicativeAlertFlag;
- (void)vipOpenHandler;
- (void)mpkUpgradeHandler;
- (void)mpkOpenHandler:(id)arg1 userActionID:(long long)arg2;
- (void)kubiBuyHandler:(id)arg1 buyGoods:(id)arg2;
- (void)hqMusicPkgPrerogativeAlertHander;
- (void)sqMusicPkgPrerogativeAlertHander;
- (void)buyAlertHandler:(long long)arg1 songRes:(id)arg2 buyGoods:(id)arg3;
- (void)vipOpenAlertHandler:(id)arg1 buyGoods:(id)arg2;
- (void)albumBuyAlertHandler:(id)arg1 buyGoods:(id)arg2;
- (_Bool)canBeContinueWithLoginCheck:(CDUnknownBlockType)arg1 cancelCallback:(CDUnknownBlockType)arg2;
- (void)dismissHandleLoading;
- (void)showHandleLoading;
- (void)buyAlertClickAction:(long long)arg1 alertStyle:(long long)arg2 songRes:(id)arg3 buyGoods:(id)arg4;
- (void)vipOpenAlertOpenAction:(id)arg1 buyGoods:(id)arg2;
- (void)kubiPayOnlyAction:(id)arg1 buyGoods:(id)arg2;
- (void)songPermitAlertViewDidAction:(id)arg1 withActionType:(long long)arg2;
- (void)closeCancelWithTag:(long long)arg1;
- (void)closeSuccessWithTag:(long long)arg1;
- (void)copeLoginWithAlert:(id)arg1 loginStatusCallBack:(CDUnknownBlockType)arg2;
- (void)forbidWindowHandleWithAuthInfo:(id)arg1 isFullForbids:(_Bool)arg2;
- (void)qualityVerifyHandleWithAuthInfo:(id)arg1 buyQuality:(int)arg2 qualityAuthInfo:(id)arg3;
- (void)buyWindowHandleWithAuthInfo:(id)arg1;
- (void)foreverBuyHandleWithAuthInfo:(id)arg1 buyQuality:(int)arg2;
- (void)setAddDownloadAPMModel:(id)arg1;
- (id)addDownloadAPMModel;
- (void)setDownloadSheetAPMModel:(id)arg1;
- (id)downloadSheetAPMModel;
- (id)loginBreakNoteStr:(long long)arg1 songRes:(id)arg2;
- (id)userBalance;
@property(readonly, nonatomic) KGMusicQualityAuthInfo *qualityAuthInfo;
@property(readonly, nonatomic) KGMusicAuthInfo *authInfo;
- (id)init;
- (void)dealloc;
- (id)privilegeAlertBISvar1WithQuality:(int)arg1 withPageFromSource:(int)arg2 andSongSourceID:(long long)arg3 andSongSourceNew:(int)arg4;
- (void)sendVipOpenClickStatistic;
- (void)sendVipOpenShowStatistic;
- (void)updateToDownloadAPMInfo:(id)arg1 hasChock:(_Bool)arg2;
- (void)clearApmInfoWithSeqName:(id)arg1;
- (void)endAPMForDownloadSheetShowInQueue:(id)arg1 seqName:(id)arg2 nodeIndex:(long long)arg3;
- (void)middleAddAPMForDownloadSheetShowInQueue:(id)arg1 seqName:(id)arg2 nodeIndex:(long long)arg3 businessDict:(id)arg4 error:(id)arg5;
- (id)startAPMForDownloadSheetShow:(id)arg1;
- (void)sendForbidAlertShowBI;
- (void)sendPrivilegeAlertClickBIWithQuality:(int)arg1 withPageFromSource:(int)arg2 songAuthInfo:(id)arg3;
- (void)sendPrivilegeAlertShowBIWithQuality:(int)arg1 withPageFromSource:(int)arg2 songAuthInfo:(id)arg3;

// Remaining properties
@property(nonatomic) __weak id <KGAlertLoginCopeCenter> alertLoginDelegate;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

