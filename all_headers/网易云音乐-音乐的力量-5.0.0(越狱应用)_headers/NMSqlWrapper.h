//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@interface NMSqlWrapper : NSObject
{
}

+ (id)sqlForGetCountOfUserProgramProgress;
+ (id)sqlForDelteOldest100UserProgramProgress;
+ (id)sqlForGetUserProgramProgressWithGivenProgramIds;
+ (id)sqlForInsertOrReplaceProgramProgress;
+ (id)sqlForCleanAllUnDownloadMV_v2;
+ (id)sqlForCleanAllUnDownloadProgram_v2;
+ (id)sqlForCleanAllUnDownloadSong_v2;
+ (id)sqlForDeleteAlbumTrack;
+ (id)sqlForInsertOrReplaceAlbumTrack;
+ (id)sqlForGetAlbumIdsWithSongIds;
+ (id)sqlForGetUniqueAlbumIdsWithSongIds;
+ (id)sqlForGetAlbumTracks;
+ (id)sqlForUpdateOfflineCountWithAlbumId;
+ (id)sqlForGetOfflineCountWithAlbumId;
+ (id)sqlForDeleteAlbum;
+ (id)sqlForInsertOrReplaceAlbum;
+ (id)sqlForGetAlbums;
+ (id)sqlForDeleteUserAlbum;
+ (id)sqlForGetUserAlbumCountWithAlbumIdAndUserId;
+ (id)sqlForGetUserAlbumCount;
+ (id)sqlForGetUserAlbumCountWithAlbumId;
+ (id)sqlForInsertOrReplaceUserAlbum;
+ (id)sqlForGetUserAlbumWithAlbumId;
+ (id)sqlForGetUserAlbums;
+ (id)sqlForGetUserAlbumIdsWithGivenAlbumIds;
+ (id)sqlForGetUserAlbumIds;
+ (id)sqlForUpdateAllLocalPrivateMsgState;
+ (id)sqlForUpdateLocalPrivateMsgState;
+ (id)sqlForCheckHasLocalPrivateMsg;
+ (id)sqlForGetLocalPrivateMsg;
+ (id)sqlForDeletaLocalPrivateMsg;
+ (id)sqlForInsertLocalPrivateMsg;
+ (id)sqlForDeleteOfflineTrack;
+ (id)sqlForAddOrUpdateOfflineTrack;
+ (id)sqlForGetAllDatabaseOfflineTrack;
+ (id)sqlForGetOfflineTrackObj;
+ (id)sqlForRemoveAllPlayingList;
+ (id)sqlForRemoveFromPlayingList;
+ (id)sqlForInsertToTailOfPlayingList;
+ (id)sqlForInsertToHeadOfPlayingList;
+ (id)sqlForUpdatePlayingListEqString;
+ (id)sqlForUpdateAllPlayingList;
+ (id)sqlForGetPlayingList;
+ (id)sqlForGetCountOfLocalEvent_v2;
+ (id)sqlForGetAllLocalEvent_v2;
+ (id)sqlForDeleteLocalEvents_v2;
+ (id)sqlForInsertOrReplaceLocalEvent_v2;
+ (id)sqlForCheckUserHasDownloadedSong_v2;
+ (id)sqlForCheckListHasDownloadedSong_v2;
+ (id)sqlForGetCountOfTotalSuccessDownloadSong_v2;
+ (id)sqlForGetDownloadSongListState_v2;
+ (id)sqlForGetDownloadSongState_v2;
+ (id)sqlForGetDownloadedSongObj_v2;
+ (id)sqlForGetUndownloadSongForManual_v2;
+ (id)sqlForGetUndownloadSongForAuto_v2;
+ (id)sqlForGetCountOfFailedSong_v2;
+ (id)sqlForGetCountOfManualPausedSong_v2;
+ (id)sqlForGetCountOfDownloadedSong_v2;
+ (id)sqlForGetCountOfDownloadingSong_v2;
+ (id)sqlForGetDownloadSongRecord_v2:(_Bool)arg1 ascending:(_Bool)arg2;
+ (id)sqlForGetTopCountDownloadSongRecord_v2:(long long)arg1;
+ (id)sqlForQueryAllDownloadSong_v2;
+ (id)sqlForSelectDownloadProgramList_v2;
+ (id)sqlForSelectDownloadSongList_v2;
+ (id)sqlForDeleteDownloadSongList_v2;
+ (id)sqlForUpdateProgramDownloadUrlInfo_v2;
+ (id)sqlForUpdateDownloadUrlInfo_v2;
+ (id)sqlForUpdateTargetDownloadSongFile_v2;
+ (id)sqlForUpdateDownloadSongStateAndFailCode_v2;
+ (id)sqlForUpdateDownloadSongState_v2;
+ (id)sqlForInsertDownloadSong_v2;
+ (id)sqlForGetExistedDownloadSongIds_v2;
+ (id)sqlForGetCountOfDownloadSong_v2;
+ (id)sqlForGetExistedDownloadMVIds_v2;
+ (id)sqlForCheckUserHasDownloadedMV_v2;
+ (id)sqlForGetDownloadMVState_v2;
+ (id)sqlForUpdateDownloadMVStateAndFailCode_v2;
+ (id)sqlForUpdateDownloadMVState_v2;
+ (id)sqlForGetUndownloadMVForManual_v2;
+ (id)sqlForGetUndownloadMVForAuto_v2;
+ (id)sqlForGetDownloadMV_v2:(_Bool)arg1 ascending:(_Bool)arg2;
+ (id)sqlForGetAllDownloadMVCount_v2;
+ (id)sqlForGetAllDownloadedMVCount_v2;
+ (id)sqlForGetCountOfFailedMV_v2;
+ (id)sqlForGetCountOfManualPausedMV_v2;
+ (id)sqlForGetCountOfDownloadingMV_v2;
+ (id)sqlForGetMVsInfo_v2;
+ (id)sqlForDeleteDownloadMVList_v2;
+ (id)sqlForGetAllMVInfo_v2:(_Bool)arg1;
+ (id)sqlForGetCountOfDownloadMV_v2;
+ (id)sqlForInsertOrIgnoreDownloadMV_v2;
+ (id)sqlForInsertOrUpdateDownloadMV_v2;
+ (id)sqlForCheckUserHasDownloadedProgram_v2;
+ (id)sqlForGetDownloadedProgram_v2;
+ (id)sqlForDeleteDownloadProgramList_v2;
+ (id)sqlForUpdateDownloadProgramStateAndFailCode_v2;
+ (id)sqlForUpdateDownloadProgramState_v2;
+ (id)sqlForGetCountOfTotalSuccessDownloadProgram_v2;
+ (id)sqlForGetDownloadedProgramSongObj_v2;
+ (id)sqlForGetDownloadDjProgramRecord_v2:(_Bool)arg1;
+ (id)sqlForGetUndownloadProgramForManual_v2;
+ (id)sqlForGetUndownloadProgramForAuto_v2;
+ (id)sqlForGetCountOfFailedDjProgram_v2;
+ (id)sqlForGetCountOfDownloadingProgram_v2;
+ (id)sqlForGetCountOfManualPausedDjProgram_v2;
+ (id)sqlForGetCountOfDownloadedDjProgram_v2;
+ (id)sqlForGetCountOfDownloadDjProgram_v2;
+ (id)sqlForInsertDownloadDjProgram_v2;
+ (id)sqlForGetExistedDownloadProgramSongIds_v2;
+ (id)sqlForGetDownloadProgramState_v2;
+ (id)sqlForSelectPlaylistsBySongIds_v2;
+ (id)sqlForSelectPlaylistsBySongId_v2;
+ (id)sqlForSelectPlaylistsByUserIdAndPlaylistIds_v2;
+ (id)sqlForGetExistedPlaylistIdsByIds_v2;
+ (id)sqlForSelectPlaylistByUserIdAndPlaylistId_v2;
+ (id)sqlForDeletePlaylistByUserIdAndPlaylistId_v2;
+ (id)sqlForGetAllPlayList_v2;
+ (id)sqlForUpdatePlaylist_v2;
+ (id)sqlForInsertOrReplacePlaylistWithDownloadSongIds_v2;
+ (id)sqlForUpdatePlaylistExtra_v2;
+ (id)sqlForUpdatePlaylistDownloadCount_v2;
+ (id)sqlForUpdatePlaylistBasic_v2;
+ (id)sqlForInsertPlaylistBasic_v2;
+ (id)sqlForUpdateSpecialPlaylistOfflineSuccCount_v2;
+ (id)sqlForSelectSpecialPlaylist_v2;
+ (id)sqlForSelectSpecialPlaylists_v2;
+ (id)sqlForInsertOrReplaceSpecialPlaylist_v2;
+ (id)sqlForCleanPlaylistTrack_v2;
+ (id)sqlForDeletePlaylistTracks_v2;
+ (id)sqlForDeletePlaylistTrack_v2;
+ (id)sqlForSelectPlaylistTracksByPlaylistId_v2;
+ (id)sqlForInsertPlaylistTrack_v2;
+ (id)sqlForSelectPlaylistTrackByPlaylistSongId_v2;
+ (id)sqlForInsertOrReplacePlaylistTrack_v2;
+ (id)sqlForClearAllTrackVersion_v2;
+ (id)sqlForCheckAlbumCoverIsShared_v2;
+ (id)sqlForGetSongClientEq_v2;
+ (id)batchSqlForUpdateSongClientEq_v2:(id)arg1;
+ (id)sqlForUpdateSongClientEq_v2;
+ (id)sqlForDeletePlaylistSongBySongIds_v2;
+ (id)sqlForGetDownloadSongIdsByPlaylistId_v2;
+ (id)sqlForGetDownloadedCountByPlaylistId_v2;
+ (id)sqlForSelectTrackIdsByPlaylistId_v2;
+ (id)sqlForSelectTracksByPlaylistId_v2;
+ (id)sqlForSelectTrackOnlyBySongIds_v2;
+ (id)sqlForSelectTrackBySongIds_v2;
+ (id)sqlForInsertOrIgnoreTrack_v2;
+ (id)sqlForInsertOrUpdateTrack_v2;
+ (id)sqlForDeleteAllRecentPlayCollection;
+ (id)sqlForDeleteRecentPlayCollection;
+ (id)sqlForLoadAllRecentPlayCollections;
+ (id)sqlForAddOrUpdateRecentPlayCollection;
+ (id)sqlForRefreshRecentPlayCountForMyMusic;
+ (id)sqlForInsertRecentPlayResource;
+ (id)sqlForReplaceRecentPlayResource;
+ (id)sqlForUpdateRecentPlayResource;
+ (id)sqlForGetRecentPlayResourceCount;
+ (id)sqlForGetRecentPlayResourceWithCount:(unsigned long long)arg1;
+ (id)sqlForGetAllRecentPlayResource;
+ (id)sqlForRecentPlayResourceRemoveAll;
+ (id)sqlForRecentPlayResourceRemoveList;
+ (id)sqlForRecentPlayResourceRemove;
+ (id)sqlForRecentPlayResourceExist;
+ (id)sqlForInsertOrReplacePlaylistOrder;
+ (id)sqlForGetPlaylistOrderByUserId;
+ (id)sqlForGetAllPlayListOrder;
+ (id)queryIdString:(id)arg1;
+ (id)sqlForGetAllIpodSongs;
+ (id)sqlForGetIpodSongs;
+ (id)sqlForDeleteIpodSongs;
+ (id)sqlForInsertIpodSong;
+ (id)sqlForGetAllDjRadioPlayInfo;
+ (id)sqlForGetDjRadioPlayInfo;
+ (id)sqlForInsertDjRadioPlayInfo;
+ (id)alterTableDDL_UserVersion_4;
+ (id)alterTableDDL_UserVersion_3;
+ (id)alterTableDDL_UserVersion_2;
+ (id)createApendantTableDDL_v2;
+ (id)createTableDDL_v2;

@end

