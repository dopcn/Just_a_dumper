//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

#import "NSCoding-Protocol.h"

@class ALAsset, CLLocation, NSDate, NSDictionary, NSNumber, NSString, NSURL, PHAsset, PHContentEditingInput, QZLBSGEOInfo, UIImage;

@interface QZAsset : NSObject <NSCoding>
{
    ALAsset *_asset;
    NSString *_albumID;
    NSURL *_assetURL;
    NSString *_assetURLString;
    NSDate *_saveTime;
    CLLocation *_location;
    _Bool _hasFetchedGeo;
    QZLBSGEOInfo *_position;
    NSString *_assetType;
    NSString *_hashString;
    NSString *_fileExtension;
    NSString *_localID;
    NSDate *_takeTime;
    _Bool _hasGetLocation;
    int _thumbReqID;
    PHAsset *_phAsset;
    NSNumber *_innerTag;
    NSString *_MD5;
    unsigned long long _hashCode;
    NSDictionary *_metaData;
    PHContentEditingInput *_contentEditing;
    long long _dynamicAlbumIndex;
    NSNumber *_videofileSize;
    double _imageQuality;
    UIImage *_holdingThumb;
    struct CGSize _fullSize;
}

+ (id)getContentEditingPath:(id)arg1;
+ (id)convertAssetToMediaInfo:(id)arg1;
+ (id)defaultSyncFetchOptionsHigh;
+ (id)defaultSyncFetchOptionsQuick;
+ (id)defaultSyncFetchOptionsThumb;
+ (id)defaultAsyncFetchOptionsQuick;
+ (struct CGSize)thumbnailSize;
+ (_Bool)isiPadiOS9_3;
+ (void)cancelPrepareThumbnails:(id)arg1;
+ (void)prepareThumbnails:(id)arg1;
+ (id)getLocalIDFromAssetURLString:(id)arg1;
+ (id)getRawLocalIDFromAssetURL:(id)arg1;
+ (id)extOfKey:(id)arg1;
+ (void)addExt:(id)arg1 withKey:(id)arg2;
+ (void)initialize;
@property(retain, nonatomic) UIImage *holdingThumb; // @synthesize holdingThumb=_holdingThumb;
@property(nonatomic) double imageQuality; // @synthesize imageQuality=_imageQuality;
@property(retain, nonatomic) NSNumber *videofileSize; // @synthesize videofileSize=_videofileSize;
@property(nonatomic) int thumbReqID; // @synthesize thumbReqID=_thumbReqID;
@property(nonatomic) long long dynamicAlbumIndex; // @synthesize dynamicAlbumIndex=_dynamicAlbumIndex;
@property(retain) PHContentEditingInput *contentEditing; // @synthesize contentEditing=_contentEditing;
@property(nonatomic) struct CGSize fullSize; // @synthesize fullSize=_fullSize;
@property(retain, nonatomic) NSDictionary *metaData; // @synthesize metaData=_metaData;
@property(nonatomic) unsigned long long hashCode; // @synthesize hashCode=_hashCode;
@property(retain, nonatomic) NSString *MD5; // @synthesize MD5=_MD5;
@property(retain, nonatomic) NSNumber *innerTag; // @synthesize innerTag=_innerTag;
@property(nonatomic) _Bool hasGetLocation; // @synthesize hasGetLocation=_hasGetLocation;
@property(nonatomic) _Bool hasFetchedGeo; // @synthesize hasFetchedGeo=_hasFetchedGeo;
@property(retain, nonatomic) QZLBSGEOInfo *position; // @synthesize position=_position;
@property(readonly, nonatomic) NSString *albumID; // @synthesize albumID=_albumID;
@property(retain, nonatomic) ALAsset *asset; // @synthesize asset=_asset;
@property(readonly, nonatomic) PHAsset *phAsset; // @synthesize phAsset=_phAsset;
- (void).cxx_destruct;
- (id)getMetaDataFromImageData:(id)arg1;
- (id)requestMetadata;
- (long long)assetSize;
- (id)metadata;
- (id)getThumbnail;
- (id)syncFetchImage:(long long)arg1 delievery:(long long)arg2 content:(long long)arg3 size:(struct CGSize)arg4;
- (id)identifier;
- (id)modificationDate;
- (id)creationDate;
- (id)imageRawData;
- (int)requestAVAssetWithAllowNetwork:(_Bool)arg1 resultHandler:(CDUnknownBlockType)arg2;
- (void)requestVideoAttrWithSync:(_Bool)arg1 resultHandler:(CDUnknownBlockType)arg2 fail:(CDUnknownBlockType)arg3;
- (void)requestVideoAttrWithSync:(_Bool)arg1 resultHandler:(CDUnknownBlockType)arg2;
- (void)requestPhotoAttrWithSync:(_Bool)arg1 resultHandler:(CDUnknownBlockType)arg2;
- (struct CGSize)dimensionSizeWithALAsset:(id)arg1;
- (struct CGSize)dimensionSize;
@property(readonly, nonatomic) NSDate *takeTime;
- (id)takeTimeFromMetadata:(id)arg1;
- (id)calcMD5;
- (id)calcSHA;
- (void)clearThumbRequestID;
- (struct CGSize)getAspectSize;
- (id)fullSizeImagePath;
- (_Bool)isGIF;
- (_Bool)isGIFForCheckImageType;
- (_Bool)isValidAsset;
- (id)fullResolutionImage;
- (id)fullScreenMaxImage;
- (id)fullScreenMaxImageOfPHAsset;
- (id)fullResolutionImageOfPHAsset;
- (id)fixrotation:(id)arg1;
- (_Bool)assetReady;
- (_Bool)hasBeenEditedQuick;
- (void)makeMetadataReady_onMainThread:(double)arg1 allowNetwork:(_Bool)arg2;
- (void)makeMetadataReady_onWorkThread:(double)arg1 allowNetwork:(_Bool)arg2;
- (void)makeMetadataReady_onWorkThread_OLD:(double)arg1 allowNetwork:(_Bool)arg2;
- (id)makeContentEditingReady_onMainThread:(double)arg1 allowNetwork:(_Bool)arg2;
- (id)convertToMediaInfo:(double)arg1 allowNetwork:(_Bool)arg2 timeout:(double)arg3;
- (struct CGSize)calcSuitableSize:(struct CGSize)arg1 bigSide:(double)arg2;
- (id)makeContentEditingReady_onWorkThread:(double)arg1 allowNetwork:(_Bool)arg2;
- (void)getImageData:(_Bool)arg1 handle:(CDUnknownBlockType)arg2;
- (id)getImageData_onWorkThread:(double)arg1 allowNetwork:(_Bool)arg2;
- (id)getVideoPathURL_onWorkThread:(double)arg1 allowNetwork:(_Bool)arg2;
- (id)getImageData_onMainThread:(double)arg1 allowNetwork:(_Bool)arg2;
- (id)getVideoPathURL_onManinThread:(double)arg1 allowNetwork:(_Bool)arg2;
- (unsigned long long)fetchContentEditing:(CDUnknownBlockType)arg1 withMetaData:(_Bool)arg2 allowNetwork:(_Bool)arg3;
@property(readonly, nonatomic) NSString *fileExtension;
- (long long)quickImageType;
- (id)quickPickMetaData;
- (void)fetchThumbnail:(CDUnknownBlockType)arg1;
- (id)fetchThumbnail;
- (id)fetchAspectRatioThumbnail;
- (id)thumbnail;
- (_Bool)isVideo;
- (_Bool)isPhotoOrVideo;
- (_Bool)isPhoto;
- (double)imageWidthHeightScale;
@property(readonly, nonatomic) NSString *assetType;
@property(readonly, nonatomic) NSDate *saveTime;
@property(readonly, nonatomic) NSString *rawLocalID;
@property(readonly, nonatomic) NSString *localID;
@property(readonly, nonatomic) NSString *assetURLString;
@property(readonly, nonatomic) NSURL *assetURL;
- (id)getALAssetURL;
- (id)address:(int)arg1;
- (id)address;
- (void)resetAsset:(id)arg1;
@property(readonly, nonatomic) CLLocation *location;
- (void)autoFillAsset;
- (void)fillALAssetWithTimeout:(double)arg1;
- (void)autoFillPHAsset;
- (void)autoFillProperty;
- (void)autoFillAssetSmart;
- (id)description;
- (unsigned long long)hash;
- (id)hashString;
- (_Bool)isEqual:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)dealloc;
- (id)initWithLocalID:(id)arg1 withAlbumID:(id)arg2;
- (id)initWithALAssetURL:(id)arg1 withAlbumID:(id)arg2;
- (id)initWithPHAsset:(id)arg1 withAlbumID:(id)arg2;
- (id)initWithALAsset:(id)arg1 withAlbumID:(id)arg2;
- (id)assetTimeAndSizeString;

@end

