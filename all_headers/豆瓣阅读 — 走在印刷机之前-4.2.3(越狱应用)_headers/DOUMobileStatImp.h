//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

@class NSDate, NSNumber, NSOperationQueue, NSString, NSTimer;

@interface DOUMobileStatImp : NSObject
{
    _Bool _started;
    NSString *_apikey;
    NSString *_channel;
    NSNumber *_userUID;
    NSString *_appname;
    NSString *_md5Token;
    NSDate *_lastUploadTime;
    NSOperationQueue *_networkQueue;
    NSTimer *_timer;
}

+ (id)sharedInstance;
@property(retain, nonatomic) NSTimer *timer; // @synthesize timer=_timer;
@property(nonatomic) _Bool started; // @synthesize started=_started;
@property(readonly, nonatomic) NSOperationQueue *networkQueue; // @synthesize networkQueue=_networkQueue;
@property(retain, nonatomic) NSDate *lastUploadTime; // @synthesize lastUploadTime=_lastUploadTime;
@property(copy, nonatomic) NSString *md5Token; // @synthesize md5Token=_md5Token;
@property(copy, nonatomic) NSString *appname; // @synthesize appname=_appname;
@property(copy, nonatomic) NSNumber *userUID; // @synthesize userUID=_userUID;
@property(copy, nonatomic) NSString *channel; // @synthesize channel=_channel;
@property(copy, nonatomic) NSString *apikey; // @synthesize apikey=_apikey;
- (void).cxx_destruct;
- (void)_amonsulReachabilityProviderReachabilityDidChangeNotification:(id)arg1;
- (id)labelForLaunchNotification:(id)arg1;
- (void)logLaunchEventWithLaunchNotification:(id)arg1;
- (void)logFirstLaunchEventIfNeededWithLaunchNotification:(id)arg1;
- (void)saveServiceAvailable:(_Bool)arg1 intervalSeconds:(long long)arg2;
- (void)setupUploaderTimerFired:(id)arg1;
- (void)setupUploaderTimer;
- (void)appDidEnterBackground:(id)arg1;
- (void)appWillEnterForeground:(id)arg1;
- (void)appWillTerminated:(id)arg1;
- (void)appDidFinishLaunching:(id)arg1;
- (void)startWithAppkey:(id)arg1 appName:(id)arg2 userUID:(id)arg3 channelId:(id)arg4;
- (void)dealloc;
- (void)initNotifications;
- (id)init;
- (id)events2Logs:(id)arg1;
- (id)events2Dictionary:(id)arg1;
- (void)logEvent:(id)arg1 syncWrite:(_Bool)arg2;
- (void)clearOldNormalEventsIfNeeded;
- (void)uploadAllEventsIfNeeded;
- (void)uploadAllNormalEvents;
- (void)uploadAllEvents;
- (id)_createEvent;
- (void)endEvent:(id)arg1 label:(id)arg2;
- (void)beginEvent:(id)arg1 label:(id)arg2;
- (void)event:(id)arg1 label:(id)arg2 acc:(long long)arg3 isSync:(_Bool)arg4;
- (void)event:(id)arg1 label:(id)arg2 acc:(long long)arg3;
- (void)writePostBodyToRequest:(id)arg1 withBodyParams:(id)arg2 gzipData:(id)arg3;
- (void)writePostBodyToRequest:(id)arg1 withBodyParams:(id)arg2 gzipData:(id)arg3 dataParamName:(id)arg4 filename:(id)arg5;
- (id)requestParams;
- (id)generateRequestUrl;
- (void)sendEventsInFile:(id)arg1 inQueue:(id)arg2 succeed:(CDUnknownBlockType)arg3 failure:(CDUnknownBlockType)arg4;
- (void)sendEventRequest:(id)arg1 inQueue:(id)arg2;
- (void)sendEventsInFile:(id)arg1 succeed:(CDUnknownBlockType)arg2 failure:(CDUnknownBlockType)arg3;
- (void)syncSendEventRequest:(id)arg1;
- (_Bool)isServiceAvailable;
- (void)handleCheck2Response:(id)arg1;
- (void)sendRequestServiceAvailableAppName:(id)arg1 apiKey:(id)arg2;
- (void)sendRequestServiceAvailable;

@end

