//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

#import "RCTBridgeModule-Protocol.h"

@class NSMutableDictionary, NSString, RCTBridge;
@protocol OS_dispatch_queue;

@interface RNFSManager : NSObject <RCTBridgeModule>
{
    RCTBridge *_bridge;
    NSMutableDictionary *_downloaders;
    NSMutableDictionary *_uploaders;
}

+ (id)__rct_export__68921;
+ (id)__rct_export__61720;
+ (id)__rct_export__57719;
+ (id)__rct_export__56618;
+ (id)__rct_export__53917;
+ (id)__rct_export__52816;
+ (id)__rct_export__47815;
+ (id)__rct_export__46714;
+ (id)__rct_export__41413;
+ (id)__rct_export__39812;
+ (id)__rct_export__38111;
+ (id)__rct_export__31210;
+ (id)__rct_export__2689;
+ (id)__rct_export__2388;
+ (id)__rct_export__2117;
+ (id)__rct_export__1896;
+ (id)__rct_export__1545;
+ (id)__rct_export__1214;
+ (id)__rct_export__1053;
+ (id)__rct_export__822;
+ (id)__rct_export__731;
+ (id)__rct_export__430;
+ (void)load;
+ (id)moduleName;
@property(retain) NSMutableDictionary *uploaders; // @synthesize uploaders=_uploaders;
@property(retain) NSMutableDictionary *downloaders; // @synthesize downloaders=_downloaders;
@property(readonly, nonatomic) __weak RCTBridge *bridge; // @synthesize bridge=_bridge;
- (void).cxx_destruct;
- (id)constantsToExport;
- (id)getPathForDirectory:(int)arg1;
- (void)reject:(CDUnknownBlockType)arg1 withError:(id)arg2;
- (id)dateToTimeIntervalNumber:(id)arg1;
- (void)touch:(id)arg1 mtime:(id)arg2 ctime:(id)arg3 resolver:(CDUnknownBlockType)arg4 rejecter:(CDUnknownBlockType)arg5;
- (void)copyAssetsFileIOS:(id)arg1 toFilepath:(id)arg2 width:(long long)arg3 height:(long long)arg4 scale:(double)arg5 compression:(double)arg6 resizeMode:(long long)arg7 resolver:(CDUnknownBlockType)arg8 rejecter:(CDUnknownBlockType)arg9;
- (void)getFSInfo:(CDUnknownBlockType)arg1 rejecter:(CDUnknownBlockType)arg2;
- (void)pathForGroup:(id)arg1 resolver:(CDUnknownBlockType)arg2 rejecter:(CDUnknownBlockType)arg3;
- (void)pathForBundle:(id)arg1 resolver:(CDUnknownBlockType)arg2 rejecter:(CDUnknownBlockType)arg3;
- (void)stopUpload:(id)arg1;
- (void)uploadFiles:(id)arg1 resolver:(CDUnknownBlockType)arg2 rejecter:(CDUnknownBlockType)arg3;
- (void)stopDownload:(id)arg1;
- (void)downloadFile:(id)arg1 resolver:(CDUnknownBlockType)arg2 rejecter:(CDUnknownBlockType)arg3;
- (void)copyFile:(id)arg1 destPath:(id)arg2 resolver:(CDUnknownBlockType)arg3 rejecter:(CDUnknownBlockType)arg4;
- (void)moveFile:(id)arg1 destPath:(id)arg2 resolver:(CDUnknownBlockType)arg3 rejecter:(CDUnknownBlockType)arg4;
- (void)hash:(id)arg1 algorithm:(id)arg2 resolver:(CDUnknownBlockType)arg3 rejecter:(CDUnknownBlockType)arg4;
- (void)read:(id)arg1 length:(long long *)arg2 position:(long long *)arg3 resolver:(CDUnknownBlockType)arg4 rejecter:(CDUnknownBlockType)arg5;
- (void)readFile:(id)arg1 resolver:(CDUnknownBlockType)arg2 rejecter:(CDUnknownBlockType)arg3;
- (void)mkdir:(id)arg1 options:(id)arg2 resolver:(CDUnknownBlockType)arg3 rejecter:(CDUnknownBlockType)arg4;
- (void)unlink:(id)arg1 resolver:(CDUnknownBlockType)arg2 rejecter:(CDUnknownBlockType)arg3;
- (void)write:(id)arg1 contents:(id)arg2 position:(long long)arg3 resolver:(CDUnknownBlockType)arg4 rejecter:(CDUnknownBlockType)arg5;
- (void)appendFile:(id)arg1 contents:(id)arg2 resolver:(CDUnknownBlockType)arg3 rejecter:(CDUnknownBlockType)arg4;
- (void)writeFile:(id)arg1 contents:(id)arg2 resolver:(CDUnknownBlockType)arg3 rejecter:(CDUnknownBlockType)arg4;
- (void)stat:(id)arg1 resolver:(CDUnknownBlockType)arg2 rejecter:(CDUnknownBlockType)arg3;
- (void)exists:(id)arg1 resolver:(CDUnknownBlockType)arg2 rejecter:(CDUnknownBlockType)arg3;
- (void)readDir:(id)arg1 resolver:(CDUnknownBlockType)arg2 rejecter:(CDUnknownBlockType)arg3;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *methodQueue;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

