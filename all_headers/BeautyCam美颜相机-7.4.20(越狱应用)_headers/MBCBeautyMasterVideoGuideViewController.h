//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <UIKit/UIViewController.h>

@class AVPlayer, AVPlayerItem, AVPlayerLayer, NSLayoutConstraint, UIButton, UILabel, UIView;

@interface MBCBeautyMasterVideoGuideViewController : UIViewController
{
    _Bool _videoPlaying;
    _Bool _shouldPlayVideoFromBeginning;
    _Bool _shouldShowNonNetworkAlertView;
    UIView *_videoContainerView;
    UIView *_videoPauseView;
    UIView *_videoCoverView;
    UIView *_pausedProgressMinimumTrackView;
    NSLayoutConstraint *_pausedProgressMinimumTrackViewWidthConstraint;
    UIView *_pausedProgressMaximumTrackView;
    UIView *_playingProgressMinimumTrackView;
    NSLayoutConstraint *_playingProgressMinimumTrackViewWidthConstraint;
    UIView *_playingProgressMaximumTrackView;
    UILabel *_coverTipsLabel;
    NSLayoutConstraint *_coverTipsLabelHeightConstraint;
    UILabel *_playingTimeLabel;
    UILabel *_endTimeLabel;
    UIButton *_videoCoverPlayButton;
    CDUnknownBlockType _closecompletion;
    double _playingPercent;
    AVPlayer *_player;
    AVPlayerItem *_playerItem;
    AVPlayerLayer *_playerLayer;
    id _periodicTimeObserver;
}

+ (id)defaultStoryBoardName;
@property(nonatomic) _Bool shouldShowNonNetworkAlertView; // @synthesize shouldShowNonNetworkAlertView=_shouldShowNonNetworkAlertView;
@property(nonatomic) _Bool shouldPlayVideoFromBeginning; // @synthesize shouldPlayVideoFromBeginning=_shouldPlayVideoFromBeginning;
@property(nonatomic, getter=isVideoPlaying) _Bool videoPlaying; // @synthesize videoPlaying=_videoPlaying;
@property(retain, nonatomic) id periodicTimeObserver; // @synthesize periodicTimeObserver=_periodicTimeObserver;
@property(retain, nonatomic) AVPlayerLayer *playerLayer; // @synthesize playerLayer=_playerLayer;
@property(retain, nonatomic) AVPlayerItem *playerItem; // @synthesize playerItem=_playerItem;
@property(retain, nonatomic) AVPlayer *player; // @synthesize player=_player;
@property(nonatomic) double playingPercent; // @synthesize playingPercent=_playingPercent;
@property(copy, nonatomic) CDUnknownBlockType closecompletion; // @synthesize closecompletion=_closecompletion;
@property(nonatomic) __weak UIButton *videoCoverPlayButton; // @synthesize videoCoverPlayButton=_videoCoverPlayButton;
@property(nonatomic) __weak UILabel *endTimeLabel; // @synthesize endTimeLabel=_endTimeLabel;
@property(nonatomic) __weak UILabel *playingTimeLabel; // @synthesize playingTimeLabel=_playingTimeLabel;
@property(nonatomic) __weak NSLayoutConstraint *coverTipsLabelHeightConstraint; // @synthesize coverTipsLabelHeightConstraint=_coverTipsLabelHeightConstraint;
@property(nonatomic) __weak UILabel *coverTipsLabel; // @synthesize coverTipsLabel=_coverTipsLabel;
@property(nonatomic) __weak UIView *playingProgressMaximumTrackView; // @synthesize playingProgressMaximumTrackView=_playingProgressMaximumTrackView;
@property(nonatomic) __weak NSLayoutConstraint *playingProgressMinimumTrackViewWidthConstraint; // @synthesize playingProgressMinimumTrackViewWidthConstraint=_playingProgressMinimumTrackViewWidthConstraint;
@property(nonatomic) __weak UIView *playingProgressMinimumTrackView; // @synthesize playingProgressMinimumTrackView=_playingProgressMinimumTrackView;
@property(nonatomic) __weak UIView *pausedProgressMaximumTrackView; // @synthesize pausedProgressMaximumTrackView=_pausedProgressMaximumTrackView;
@property(nonatomic) __weak NSLayoutConstraint *pausedProgressMinimumTrackViewWidthConstraint; // @synthesize pausedProgressMinimumTrackViewWidthConstraint=_pausedProgressMinimumTrackViewWidthConstraint;
@property(nonatomic) __weak UIView *pausedProgressMinimumTrackView; // @synthesize pausedProgressMinimumTrackView=_pausedProgressMinimumTrackView;
@property(nonatomic) __weak UIView *videoCoverView; // @synthesize videoCoverView=_videoCoverView;
@property(nonatomic) __weak UIView *videoPauseView; // @synthesize videoPauseView=_videoPauseView;
@property(nonatomic) __weak UIView *videoContainerView; // @synthesize videoContainerView=_videoContainerView;
- (void).cxx_destruct;
- (void)videoPlayingViewDidSingleTap:(id)arg1;
- (void)playButtonDidTouchUpInside:(id)arg1;
- (void)backButtonDidTouchUpInside:(id)arg1;
- (id)convertTimeStringFromInterval:(double)arg1;
- (void)videoPlayingPeriodicTimeIntervalDidChangeToValue:(double)arg1 withTotalValue:(double)arg2;
- (void)pausePlayerIfNeed;
- (void)startPlayerIfNeed;
- (_Bool)isPlayerPlaying;
- (void)pausePlayer;
- (void)startPlayer;
- (void)willStartPlayer;
- (void)setupPlayerIfNeed;
- (void)reloadPlayerItem;
- (id)videoURL;
- (void)setupViews;
- (void)didReceiveApplicationWillEnterForegroundNotification:(id)arg1;
- (void)setPlayingProgressHidden:(_Bool)arg1;
- (void)didReceivePlayerItemDidPlayToEndTimeNotification:(id)arg1;
- (void)playerItemStatusDidChange;
- (void)stopObserve;
- (void)startObserve;
- (void)hideVideoPauseView;
- (void)showVideoPauseView;
- (void)hideVideoCoverView;
- (void)showVideoCoverView;
- (void)willDisappear;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (void)initialize;
- (id)initWithCoder:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (void)dealloc;

@end

