//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

@class AntBuilder, NSDictionary, NSMutableDictionary, TMAH5WeexSupport;
@protocol OS_dispatch_queue;

@interface AABEngine : NSObject
{
    AntBuilder *_builder;
    NSObject<OS_dispatch_queue> *_serialQueue;
    NSMutableDictionary *_trackCache4MCExpt;
    NSMutableDictionary *_trackCache4PageExpt;
    TMAH5WeexSupport *_h5weexSupport;
    NSDictionary *_currentAbConfigDict;
    long long _currentAbConfigVersion;
    NSMutableDictionary *_registerListeners;
    NSDictionary *_orangeABSdkConfig;
    NSDictionary *_abWhiteListDict;
    NSMutableDictionary *_nativeCache;
    NSMutableDictionary *_webCache;
}

@property(retain) NSMutableDictionary *webCache; // @synthesize webCache=_webCache;
@property(retain) NSMutableDictionary *nativeCache; // @synthesize nativeCache=_nativeCache;
@property(retain) NSDictionary *abWhiteListDict; // @synthesize abWhiteListDict=_abWhiteListDict;
@property(retain) NSDictionary *orangeABSdkConfig; // @synthesize orangeABSdkConfig=_orangeABSdkConfig;
@property(retain, nonatomic) NSMutableDictionary *registerListeners; // @synthesize registerListeners=_registerListeners;
@property(nonatomic) long long currentAbConfigVersion; // @synthesize currentAbConfigVersion=_currentAbConfigVersion;
@property(retain, nonatomic) NSDictionary *currentAbConfigDict; // @synthesize currentAbConfigDict=_currentAbConfigDict;
@property(retain, nonatomic) TMAH5WeexSupport *h5weexSupport; // @synthesize h5weexSupport=_h5weexSupport;
@property(retain) NSMutableDictionary *trackCache4PageExpt; // @synthesize trackCache4PageExpt=_trackCache4PageExpt;
@property(retain) NSMutableDictionary *trackCache4MCExpt; // @synthesize trackCache4MCExpt=_trackCache4MCExpt;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *serialQueue; // @synthesize serialQueue=_serialQueue;
@property(retain, nonatomic) AntBuilder *builder; // @synthesize builder=_builder;
- (void).cxx_destruct;
- (void)parseABData:(id)arg1 from:(int)arg2;
- (_Bool)configVersionNeedNoneFetch;
- (void)fetchConfigFromSource:(id)arg1;
- (void)loadABDataFromDisk;
- (id)init;
- (void)abWhiteListNotify:(id)arg1;
- (void)unRegisterABWhiteListOrange:(id)arg1;
- (void)registerABWhiteListOrange;
- (long long)pullDelaySeconds;
- (id)dilutionDict;
- (int)abFetchConfigMode;
- (_Bool)webDowngrade;
- (_Bool)accsDowngrade;
- (_Bool)abtestDowngrade;
- (id)downgradeDict;
- (long long)orangeABConfigVersion;
- (void)abtestSdkOrangeNotify:(id)arg1;
- (void)unRegisterABSdkConfigOrange:(id)arg1;
- (void)registerABSdkConfigOrange;
- (int)fetchModeFromDisk;
- (void)saveFetchModel:(id)arg1;
- (void)loadABSdkConfigFromOrange;
- (id)loadPushABConfigFromOrange;
- (void)abtestOrangeNotify:(id)arg1;
- (void)unRegisterABOrange:(id)arg1;
- (void)registerABOrange;
- (long long)getCurrentGreyLevel:(unsigned long long)arg1 greyTime:(unsigned long long)arg2 maxLevel:(long long)arg3;
- (_Bool)isInGreyWithBeginTime:(unsigned long long)arg1 greyTime:(unsigned long long)arg2 maxLevel:(long long)arg3 hashCode:(long long)arg4;
- (id)pullEffectiveGroup:(id)arg1 module:(id)arg2 exptList:(id)arg3;
- (id)pushEffectiveGroup:(id)arg1 module:(id)arg2 exptList:(id)arg3;
- (id)trackStringForWeb:(id)arg1;
- (void)commitEventWithABTest:(id)arg1 originUrl:(id)arg2 targetUrl:(id)arg3;
- (id)abTargetUrlStringByOriginUrlString:(id)arg1 webCache:(id)arg2;
- (id)intercepterUrlStringByRewriteFromURL:(id)arg1;
- (id)sharedSemaphore;
- (id)bucketModelDictForComponent:(id)arg1;
- (id)bucketForComponent:(id)arg1;
- (_Bool)isSwitchOnForModule:(id)arg1 onComponent:(id)arg2;
- (id)bucketForModule:(id)arg1 onComponent:(id)arg2;
- (id)experimentsOnPage:(id)arg1;
- (id)trackingStringOnPage:(id)arg1;
- (id)trackingStringForModule:(id)arg1 onComponent:(id)arg2;
- (void)updateTrackCacheByGroup:(id)arg1 component:(id)arg2 module:(id)arg3;
- (id)itemInGroup:(id)arg1 byComponent:(id)arg2 byModule:(id)arg3;
- (id)experimentsByComponent:(id)arg1 module:(id)arg2;
- (id)effectiveGroup:(id)arg1 module:(id)arg2;
- (id)allExpString;
- (void)setMockObject:(id)arg1 forKey:(id)arg2;
- (id)registerListenerKey:(id)arg1 module:(id)arg2;
- (void)removeRegisterListenerOnModule:(id)arg1 onComponent:(id)arg2;
- (void)registerListenerOnModule:(id)arg1 onComponent:(id)arg2 withBlock:(CDUnknownBlockType)arg3;

@end

