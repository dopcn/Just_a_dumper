//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

@class MDPartyVideoHandler, MDSourceTimer, NSString;

@interface MDPartyVideoGameCenter : NSObject
{
    _Bool _shouldClearGameInfo;
    unsigned long long _playingGameType;
    NSString *_stakeholder;
    MDPartyVideoHandler *_videoHandler;
    NSString *_currentChannelID;
    MDSourceTimer *_resultShowTimer;
}

+ (unsigned long long)gameTypeForGameID:(id)arg1;
+ (id)gameIconForGameType:(unsigned long long)arg1;
+ (id)gameNameForGameType:(unsigned long long)arg1;
+ (id)smallGameIconForGameType:(unsigned long long)arg1;
+ (id)gameIDForGameType:(unsigned long long)arg1;
@property(nonatomic) _Bool shouldClearGameInfo; // @synthesize shouldClearGameInfo=_shouldClearGameInfo;
@property(retain, nonatomic) MDSourceTimer *resultShowTimer; // @synthesize resultShowTimer=_resultShowTimer;
@property(retain, nonatomic) NSString *currentChannelID; // @synthesize currentChannelID=_currentChannelID;
@property(nonatomic) __weak MDPartyVideoHandler *videoHandler; // @synthesize videoHandler=_videoHandler;
@property(copy, nonatomic) NSString *stakeholder; // @synthesize stakeholder=_stakeholder;
@property(nonatomic) unsigned long long playingGameType; // @synthesize playingGameType=_playingGameType;
- (void).cxx_destruct;
- (void)checkCurrentPlayingStateWithItem:(id)arg1 gameType:(unsigned long long)arg2;
- (void)checkIfNeedShowGameTipText:(id)arg1;
- (void)showGameTipWithDictionary:(id)arg1 gameType:(unsigned long long)arg2 refreshButtonAndSessionViewWithID:(id)arg3;
- (void)handleGameMessageWithDictionary:(id)arg1 packetType:(unsigned long long)arg2;
- (void)handleDiceGameWithPacketType:(unsigned long long)arg1 gameType:(unsigned long long)arg2 paraDic:(id)arg3;
- (void)handleDrumFlowerGameWithPacketType:(unsigned long long)arg1 gameType:(unsigned long long)arg2 paraDic:(id)arg3;
- (void)handleGuessWordGameWithPacketType:(unsigned long long)arg1 gameType:(unsigned long long)arg2 paraDic:(id)arg3;
- (void)handleFindSpyGameWithPacketType:(unsigned long long)arg1 gameType:(unsigned long long)arg2 paraDic:(id)arg3;
- (void)hanleResultShowTimerFired:(id)arg1;
- (void)checkIfNeedInvalidShowResultTimer;
- (void)initializeShowResultTimerWithInterval:(double)arg1 userInfo:(id)arg2;
- (void)endGameErrored:(id)arg1;
- (void)endGameFailed:(id)arg1;
- (void)endGameSuccessed:(id)arg1;
- (void)beginGameErrored:(id)arg1;
- (void)beginGameFailed:(id)arg1;
- (void)beginGameSuccessed:(id)arg1;
- (void)showPlayInstructionAlertWithType:(unsigned long long)arg1;
- (void)setShowedGameInstructioinToDBWithType:(unsigned long long)arg1;
- (void)showPlayInstructionAlertWithType:(unsigned long long)arg1 shouldSendBeginGameRequest:(_Bool)arg2;
- (void)drumFlowerGameDidFinishAnmation;
- (void)userDidJoinChannel:(id)arg1;
- (void)resetGameState;
- (void)sendEndGameRequestWithGameID:(id)arg1 channelID:(id)arg2 userInfo:(id)arg3;
- (void)endCurrentGame;
- (void)sendBeginGameRequestWithGameType:(unsigned long long)arg1;
- (void)beginGameWithGameType:(unsigned long long)arg1;
- (_Bool)checkIfUserCanEndCurrentGame;
- (void)dealloc;
- (id)initWithVideoHandler:(id)arg1;

@end

