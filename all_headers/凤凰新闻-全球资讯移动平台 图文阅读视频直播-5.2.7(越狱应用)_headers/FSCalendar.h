//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <UIKit/UIView.h>

#import "UICollectionViewDataSource-Protocol.h"
#import "UICollectionViewDelegate-Protocol.h"

@class CAShapeLayer, FSCalendarAnimator, FSCalendarAppearance, FSCalendarCollectionView, FSCalendarFlowLayout, FSCalendarHeader, FSCalendarHeaderTouchDeliver, NSArray, NSCalendar, NSDate, NSDateComponents, NSDateFormatter, NSLocale, NSMapTable, NSMutableArray, NSString, NSTimeZone;
@protocol FSCalendarDataSource, FSCalendarDelegate, FSCalendarDelegateAppearance;

@interface FSCalendar : UIView <UICollectionViewDataSource, UICollectionViewDelegate>
{
    NSMutableArray *_selectedDates;
    NSDate *_minimumDate;
    NSDate *_maximumDate;
    _Bool _pagingEnabled;
    _Bool _scrollEnabled;
    _Bool _focusOnSingleSelectedDate;
    _Bool _showsPlaceholders;
    _Bool _needsAdjustingMonthPosition;
    _Bool _needsAdjustingViewFrame;
    _Bool _needsAdjustingTextSize;
    _Bool _needsLayoutForWeekMode;
    _Bool _supressEvent;
    unsigned long long _scrollDirection;
    unsigned long long _firstWeekday;
    FSCalendarAppearance *_appearance;
    id <FSCalendarDelegate> _delegate;
    id <FSCalendarDataSource> _dataSource;
    NSDate *_today;
    NSDate *_currentPage;
    NSLocale *_locale;
    unsigned long long _scope;
    double _headerHeight;
    double _weekdayHeight;
    NSMutableArray *_weekdays;
    NSMapTable *_stickyHeaderMapTable;
    NSCalendar *_calendar;
    NSDateFormatter *_formatter;
    NSDateComponents *_components;
    NSTimeZone *_timeZone;
    UIView *_contentView;
    UIView *_daysContainer;
    CAShapeLayer *_maskLayer;
    UIView *_topBorder;
    UIView *_bottomBorder;
    FSCalendarCollectionView *_collectionView;
    FSCalendarFlowLayout *_collectionViewLayout;
    FSCalendarAnimator *_animator;
    FSCalendarHeader *_header;
    FSCalendarHeaderTouchDeliver *_deliver;
    double _preferredHeaderHeight;
    double _preferredWeekdayHeight;
    double _preferredRowHeight;
    unsigned long long _orientation;
}

@property(nonatomic) unsigned long long orientation; // @synthesize orientation=_orientation;
@property(nonatomic) double preferredRowHeight; // @synthesize preferredRowHeight=_preferredRowHeight;
@property(nonatomic) double preferredWeekdayHeight; // @synthesize preferredWeekdayHeight=_preferredWeekdayHeight;
@property(nonatomic) double preferredHeaderHeight; // @synthesize preferredHeaderHeight=_preferredHeaderHeight;
@property(nonatomic) _Bool supressEvent; // @synthesize supressEvent=_supressEvent;
@property(nonatomic) _Bool needsLayoutForWeekMode; // @synthesize needsLayoutForWeekMode=_needsLayoutForWeekMode;
@property(nonatomic) _Bool needsAdjustingTextSize; // @synthesize needsAdjustingTextSize=_needsAdjustingTextSize;
@property(nonatomic) _Bool needsAdjustingViewFrame; // @synthesize needsAdjustingViewFrame=_needsAdjustingViewFrame;
@property(nonatomic) _Bool needsAdjustingMonthPosition; // @synthesize needsAdjustingMonthPosition=_needsAdjustingMonthPosition;
@property(nonatomic) __weak FSCalendarHeaderTouchDeliver *deliver; // @synthesize deliver=_deliver;
@property(nonatomic) __weak FSCalendarHeader *header; // @synthesize header=_header;
@property(retain, nonatomic) FSCalendarAnimator *animator; // @synthesize animator=_animator;
@property(nonatomic) __weak FSCalendarFlowLayout *collectionViewLayout; // @synthesize collectionViewLayout=_collectionViewLayout;
@property(nonatomic) __weak FSCalendarCollectionView *collectionView; // @synthesize collectionView=_collectionView;
@property(nonatomic) __weak UIView *bottomBorder; // @synthesize bottomBorder=_bottomBorder;
@property(nonatomic) __weak UIView *topBorder; // @synthesize topBorder=_topBorder;
@property(nonatomic) __weak CAShapeLayer *maskLayer; // @synthesize maskLayer=_maskLayer;
@property(nonatomic) __weak UIView *daysContainer; // @synthesize daysContainer=_daysContainer;
@property(nonatomic) __weak UIView *contentView; // @synthesize contentView=_contentView;
@property(retain, nonatomic) NSTimeZone *timeZone; // @synthesize timeZone=_timeZone;
@property(retain, nonatomic) NSDateComponents *components; // @synthesize components=_components;
@property(retain, nonatomic) NSDateFormatter *formatter; // @synthesize formatter=_formatter;
@property(retain, nonatomic) NSCalendar *calendar; // @synthesize calendar=_calendar;
@property(retain, nonatomic) NSMapTable *stickyHeaderMapTable; // @synthesize stickyHeaderMapTable=_stickyHeaderMapTable;
@property(retain, nonatomic) NSMutableArray *weekdays; // @synthesize weekdays=_weekdays;
@property(readonly, nonatomic) NSDate *maximumDate; // @synthesize maximumDate=_maximumDate;
@property(readonly, nonatomic) NSDate *minimumDate; // @synthesize minimumDate=_minimumDate;
@property(nonatomic) _Bool showsPlaceholders; // @synthesize showsPlaceholders=_showsPlaceholders;
@property(nonatomic) _Bool focusOnSingleSelectedDate; // @synthesize focusOnSingleSelectedDate=_focusOnSingleSelectedDate;
@property(nonatomic) _Bool scrollEnabled; // @synthesize scrollEnabled=_scrollEnabled;
@property(nonatomic) _Bool pagingEnabled; // @synthesize pagingEnabled=_pagingEnabled;
@property(nonatomic) double weekdayHeight; // @synthesize weekdayHeight=_weekdayHeight;
@property(nonatomic) double headerHeight; // @synthesize headerHeight=_headerHeight;
@property(nonatomic) unsigned long long scope; // @synthesize scope=_scope;
@property(retain, nonatomic) NSLocale *locale; // @synthesize locale=_locale;
@property(retain, nonatomic) NSDate *currentPage; // @synthesize currentPage=_currentPage;
@property(retain, nonatomic) NSDate *today; // @synthesize today=_today;
@property(nonatomic) __weak id <FSCalendarDataSource> dataSource; // @synthesize dataSource=_dataSource;
@property(nonatomic) __weak id <FSCalendarDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) unsigned long long firstWeekday; // @synthesize firstWeekday=_firstWeekday;
@property(nonatomic) unsigned long long scrollDirection; // @synthesize scrollDirection=_scrollDirection;
- (void).cxx_destruct;
- (id)maximumDateForCalendar;
- (id)minimumDateForCalendar;
- (long long)numberOfEventsForDate:(id)arg1;
- (id)imageForDate:(id)arg1;
- (id)subtitleForDate:(id)arg1;
- (_Bool)boundingRectWillChange:(_Bool)arg1;
- (unsigned long long)preferredCellShapeForDate:(id)arg1;
- (id)preferredBorderSelectionColorForDate:(id)arg1;
- (id)preferredBorderDefaultColorForDate:(id)arg1;
- (id)preferredEventColorForDate:(id)arg1;
- (id)preferredSubtitleSelectionColorForDate:(id)arg1;
- (id)preferredSubtitleDefaultColorForDate:(id)arg1;
- (id)preferredTitleSelectionColorForDate:(id)arg1;
- (id)preferredTitleDefaultColorForDate:(id)arg1;
- (id)preferredSelectionColorForDate:(id)arg1;
- (void)currentPageDidChange;
- (void)didDeselectDate:(id)arg1;
- (_Bool)shouldDeselectDate:(id)arg1;
- (void)didSelectDate:(id)arg1;
- (_Bool)shouldSelectDate:(id)arg1;
- (long long)numberOfHeadPlaceholdersForMonth:(id)arg1;
@property(readonly, nonatomic) unsigned long long currentCalendarOrientation;
- (void)invalidateViewFrames;
- (void)invalidateWeekdayTextColor;
- (void)invalidateWeekdayFont;
@property(readonly, nonatomic) NSArray *visibleStickyHeaders;
- (void)enqueueSelectedDate:(id)arg1;
- (void)deselectCounterpartDate:(id)arg1;
- (void)selectCounterpartDate:(id)arg1;
- (void)reloadVisibleCells;
- (void)reloadDataForCell:(id)arg1 atIndexPath:(id)arg2;
- (void)invalidateAppearanceForCell:(id)arg1;
- (void)invalidateHeaders;
- (void)invalidateWeekdaySymbols;
- (void)invalidateLayout;
- (void)invalidateDateTools;
@property(readonly, nonatomic) _Bool hasValidateVisibleLayout;
- (_Bool)isDateInDifferentPage:(id)arg1;
- (_Bool)isDateSelected:(id)arg1;
- (_Bool)isDateInRange:(id)arg1;
- (id)indexPathForDate:(id)arg1;
- (id)indexPathForDate:(id)arg1 scope:(unsigned long long)arg2;
- (id)dateForIndexPath:(id)arg1;
- (id)dateForIndexPath:(id)arg1 scope:(unsigned long long)arg2;
- (void)scrollToPageForDate:(id)arg1 animated:(_Bool)arg2;
- (void)scrollToDate:(id)arg1 animated:(_Bool)arg2;
- (void)scrollToDate:(id)arg1;
- (void)selectDate:(id)arg1 scrollToDate:(_Bool)arg2 forPlaceholder:(_Bool)arg3;
- (void)deselectDate:(id)arg1;
- (void)selectDate:(id)arg1 scrollToDate:(_Bool)arg2;
- (void)selectDate:(id)arg1;
- (void)setScope:(unsigned long long)arg1 animated:(_Bool)arg2;
- (void)reloadData;
@property(readonly, nonatomic) _Bool floatingMode;
@property(readonly, nonatomic) id <FSCalendarDelegateAppearance> delegateAppearance;
@property(readonly, nonatomic) NSArray *selectedDates;
@property(readonly, nonatomic) NSDate *selectedDate; // @dynamic selectedDate;
@property(nonatomic) _Bool allowsSelection;
@property(nonatomic) _Bool allowsMultipleSelection;
@property(retain, nonatomic) NSString *identifier;
- (void)setCurrentPage:(id)arg1 animated:(_Bool)arg2;
@property(readonly, nonatomic) FSCalendarAppearance *appearance; // @synthesize appearance=_appearance;
- (void)setAppearance:(id)arg1;
- (void)orientationDidChange:(id)arg1;
- (void)scrollViewWillEndDragging:(id)arg1 withVelocity:(struct CGPoint)arg2 targetContentOffset:(inout struct CGPoint *)arg3;
- (void)scrollViewDidScroll:(id)arg1;
- (void)collectionView:(id)arg1 willDisplaySupplementaryView:(id)arg2 forElementKind:(id)arg3 atIndexPath:(id)arg4;
- (_Bool)collectionView:(id)arg1 shouldDeselectItemAtIndexPath:(id)arg2;
- (void)collectionView:(id)arg1 didDeselectItemAtIndexPath:(id)arg2;
- (void)collectionView:(id)arg1 didSelectItemAtIndexPath:(id)arg2;
- (id)collectionView:(id)arg1 viewForSupplementaryElementOfKind:(id)arg2 atIndexPath:(id)arg3;
- (id)collectionView:(id)arg1 cellForItemAtIndexPath:(id)arg2;
- (long long)collectionView:(id)arg1 numberOfItemsInSection:(long long)arg2;
- (long long)numberOfSectionsInCollectionView:(id)arg1;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1 scope:(unsigned long long)arg2;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)layoutSublayersOfLayer:(id)arg1;
- (void)layoutSubviews;
- (void)setFrame:(struct CGRect)arg1;
- (void)setBounds:(struct CGRect)arg1;
- (void)dealloc;
- (void)initialize;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

