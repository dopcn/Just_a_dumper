//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "CDRunGroundBaseViewController.h"

#import "CDRunGroundAnnotationBaseDelegate-Protocol.h"
#import "CDRunGroundArrowViewDelegate-Protocol.h"
#import "CDRunGroundBottomSimpleViewDelegate-Protocol.h"
#import "CDRunGroundHotUserViewDelegate-Protocol.h"
#import "CDRunGroundOccupationPopViewDelegate-Protocol.h"
#import "CDRunGroundRaceTrackDetailViewDelegate-Protocol.h"
#import "CDRunGroundTrackDetailViewDelegate-Protocol.h"
#import "CDShareActivityViewControllerDelegate-Protocol.h"
#import "MGLMapViewDelegate-Protocol.h"
#import "UINavigationControllerDelegate-Protocol.h"

@class CALayer, CDAdvertisement, CDRunGroundAdActivityView, CDRunGroundArrowView, CDRunGroundOccupationPopView, CDRunGroundRaceTrackDetailView, CDRunGroundRaceTrackEntity, CDRunGroundTrackDetailView, CDRunGroundTrackEntity, MGLLineStyleLayer, MGLMapView, MGLShapeSource, NSArray, NSMutableArray, NSString, NSTimer, UIButton, UIImage, UIView;

@interface CDRunGroundDetailViewController : CDRunGroundBaseViewController <MGLMapViewDelegate, CDRunGroundArrowViewDelegate, CDRunGroundAnnotationBaseDelegate, CDRunGroundHotUserViewDelegate, CDRunGroundBottomSimpleViewDelegate, CDRunGroundOccupationPopViewDelegate, CDRunGroundTrackDetailViewDelegate, CDRunGroundRaceTrackDetailViewDelegate, CDShareActivityViewControllerDelegate, UINavigationControllerDelegate>
{
    _Bool _hasGround;
    _Bool _showTrackDetail;
    _Bool _showRaceDetail;
    _Bool _isFromDetailView;
    _Bool _disableClickMap;
    _Bool _hasLoadStartInfo;
    _Bool _cannotShare;
    _Bool _isShowingTrackView;
    _Bool _isShowingRaceView;
    _Bool _isLoadingGround;
    _Bool _isLoadingHotZone;
    _Bool _isLoadingTrack;
    _Bool _isLoadingRace;
    _Bool _hasLoadGround;
    _Bool _hasLoadHotZone;
    _Bool _hasLoadTrack;
    _Bool _hasLoadRace;
    _Bool _hasClickedSelf;
    long long _trackId;
    long long _raceId;
    MGLMapView *_mapView;
    CDRunGroundArrowView *_arrowView;
    CDRunGroundOccupationPopView *_occupationUserPopView;
    CDRunGroundOccupationPopView *_occupationGroupPopView;
    NSTimer *_runLayerTimer;
    CALayer *_coverLayer;
    CALayer *_runLayer;
    struct CGPath *_hotPathRef;
    UIButton *_buttonShowMyLocation;
    UIButton *_buttonFilter;
    CDRunGroundAdActivityView *_adActivityView;
    CDAdvertisement *_advertisement;
    NSString *_shareUrl;
    NSString *_shareTitle;
    NSString *_shareText;
    UIImage *_shareImage;
    CDRunGroundTrackDetailView *_trackDetailView;
    CDRunGroundTrackEntity *_trackEntity;
    NSArray *_trackPoints;
    MGLShapeSource *_tracklineSource;
    MGLLineStyleLayer *_trackLineLayer;
    long long _nowTrackLineIndex;
    NSTimer *_trackLineTimer;
    CDRunGroundRaceTrackDetailView *_raceDetailView;
    CDRunGroundRaceTrackEntity *_raceEntity;
    NSMutableArray *_tracklineSourceList;
    NSMutableArray *_trackLineLayerList;
    NSMutableArray *_raceTrackLineIndexList;
    NSMutableArray *_raceTrackLineTimerList;
    UIView *_topNaviView;
    double _bottomGroundHeight;
    NSString *_cityName;
    double _lati;
    double _longti;
}

+ (id)controllerWithReq:(id)arg1;
@property(nonatomic) double longti; // @synthesize longti=_longti;
@property(nonatomic) double lati; // @synthesize lati=_lati;
@property(copy, nonatomic) NSString *cityName; // @synthesize cityName=_cityName;
@property(nonatomic) double bottomGroundHeight; // @synthesize bottomGroundHeight=_bottomGroundHeight;
@property(retain, nonatomic) UIView *topNaviView; // @synthesize topNaviView=_topNaviView;
@property(nonatomic) _Bool hasClickedSelf; // @synthesize hasClickedSelf=_hasClickedSelf;
@property(nonatomic) _Bool hasLoadRace; // @synthesize hasLoadRace=_hasLoadRace;
@property(nonatomic) _Bool hasLoadTrack; // @synthesize hasLoadTrack=_hasLoadTrack;
@property(nonatomic) _Bool hasLoadHotZone; // @synthesize hasLoadHotZone=_hasLoadHotZone;
@property(nonatomic) _Bool hasLoadGround; // @synthesize hasLoadGround=_hasLoadGround;
@property(nonatomic) _Bool isLoadingRace; // @synthesize isLoadingRace=_isLoadingRace;
@property(nonatomic) _Bool isLoadingTrack; // @synthesize isLoadingTrack=_isLoadingTrack;
@property(nonatomic) _Bool isLoadingHotZone; // @synthesize isLoadingHotZone=_isLoadingHotZone;
@property(nonatomic) _Bool isLoadingGround; // @synthesize isLoadingGround=_isLoadingGround;
@property(retain, nonatomic) NSMutableArray *raceTrackLineTimerList; // @synthesize raceTrackLineTimerList=_raceTrackLineTimerList;
@property(retain, nonatomic) NSMutableArray *raceTrackLineIndexList; // @synthesize raceTrackLineIndexList=_raceTrackLineIndexList;
@property(retain, nonatomic) NSMutableArray *trackLineLayerList; // @synthesize trackLineLayerList=_trackLineLayerList;
@property(retain, nonatomic) NSMutableArray *tracklineSourceList; // @synthesize tracklineSourceList=_tracklineSourceList;
@property(nonatomic) _Bool isShowingRaceView; // @synthesize isShowingRaceView=_isShowingRaceView;
@property(retain, nonatomic) CDRunGroundRaceTrackEntity *raceEntity; // @synthesize raceEntity=_raceEntity;
@property(retain, nonatomic) CDRunGroundRaceTrackDetailView *raceDetailView; // @synthesize raceDetailView=_raceDetailView;
@property(retain, nonatomic) NSTimer *trackLineTimer; // @synthesize trackLineTimer=_trackLineTimer;
@property(nonatomic) long long nowTrackLineIndex; // @synthesize nowTrackLineIndex=_nowTrackLineIndex;
@property(retain, nonatomic) MGLLineStyleLayer *trackLineLayer; // @synthesize trackLineLayer=_trackLineLayer;
@property(retain, nonatomic) MGLShapeSource *tracklineSource; // @synthesize tracklineSource=_tracklineSource;
@property(retain, nonatomic) NSArray *trackPoints; // @synthesize trackPoints=_trackPoints;
@property(nonatomic) _Bool isShowingTrackView; // @synthesize isShowingTrackView=_isShowingTrackView;
@property(retain, nonatomic) CDRunGroundTrackEntity *trackEntity; // @synthesize trackEntity=_trackEntity;
@property(retain, nonatomic) CDRunGroundTrackDetailView *trackDetailView; // @synthesize trackDetailView=_trackDetailView;
@property(retain, nonatomic) UIImage *shareImage; // @synthesize shareImage=_shareImage;
@property(copy, nonatomic) NSString *shareText; // @synthesize shareText=_shareText;
@property(copy, nonatomic) NSString *shareTitle; // @synthesize shareTitle=_shareTitle;
@property(copy, nonatomic) NSString *shareUrl; // @synthesize shareUrl=_shareUrl;
@property(nonatomic) _Bool cannotShare; // @synthesize cannotShare=_cannotShare;
@property(nonatomic) _Bool hasLoadStartInfo; // @synthesize hasLoadStartInfo=_hasLoadStartInfo;
@property(retain, nonatomic) CDAdvertisement *advertisement; // @synthesize advertisement=_advertisement;
@property(retain, nonatomic) CDRunGroundAdActivityView *adActivityView; // @synthesize adActivityView=_adActivityView;
@property(retain, nonatomic) UIButton *buttonFilter; // @synthesize buttonFilter=_buttonFilter;
@property(retain, nonatomic) UIButton *buttonShowMyLocation; // @synthesize buttonShowMyLocation=_buttonShowMyLocation;
@property(nonatomic) _Bool disableClickMap; // @synthesize disableClickMap=_disableClickMap;
@property(nonatomic) struct CGPath *hotPathRef; // @synthesize hotPathRef=_hotPathRef;
@property(retain, nonatomic) CALayer *runLayer; // @synthesize runLayer=_runLayer;
@property(retain, nonatomic) CALayer *coverLayer; // @synthesize coverLayer=_coverLayer;
@property(retain, nonatomic) NSTimer *runLayerTimer; // @synthesize runLayerTimer=_runLayerTimer;
@property(nonatomic) _Bool isFromDetailView; // @synthesize isFromDetailView=_isFromDetailView;
@property(retain, nonatomic) CDRunGroundOccupationPopView *occupationGroupPopView; // @synthesize occupationGroupPopView=_occupationGroupPopView;
@property(retain, nonatomic) CDRunGroundOccupationPopView *occupationUserPopView; // @synthesize occupationUserPopView=_occupationUserPopView;
@property(retain, nonatomic) CDRunGroundArrowView *arrowView; // @synthesize arrowView=_arrowView;
@property(retain, nonatomic) MGLMapView *mapView; // @synthesize mapView=_mapView;
@property(nonatomic) _Bool showRaceDetail; // @synthesize showRaceDetail=_showRaceDetail;
@property(nonatomic) long long raceId; // @synthesize raceId=_raceId;
@property(nonatomic) _Bool showTrackDetail; // @synthesize showTrackDetail=_showTrackDetail;
@property(nonatomic) long long trackId; // @synthesize trackId=_trackId;
@property(nonatomic) _Bool hasGround; // @synthesize hasGround=_hasGround;
- (void).cxx_destruct;
- (id)pageAttribuite;
- (id)currentParamsUniqueKey;
- (id)pageCode;
- (void)viewWillAppear:(_Bool)arg1;
- (void)dealloc;
- (void)stopTrackTimer;
- (void)stopRunLayerTimer;
- (void)clearAll;
- (void)didNaviLeftButtonClicked;
- (void)didNaviRightButtonClicked;
- (void)raceTrackDetailViewDidScrollWithPercent:(double)arg1;
- (void)raceTrackDetailViewClickCreater:(id)arg1;
- (void)raceTrackDetailViewClickShowRankGuide;
- (void)raceTrackDetailViewClickRank:(id)arg1 withType:(long long)arg2;
- (void)raceTrackDetailViewClickTopButton:(id)arg1;
- (void)trackDetailViewDidScrollWithPercent:(double)arg1;
- (void)trackDetailViewClickSignUserList:(id)arg1;
- (void)trackDetailViewClickShowRankGuide;
- (void)trackDetailViewClickCreater:(id)arg1;
- (void)trackDetailViewClickShowAllTrackRank:(id)arg1;
- (void)trackDetailViewClickTrackRank:(id)arg1;
- (void)trackDetailViewClickStartSport:(id)arg1;
- (void)didClickViewOccupationDetail:(id)arg1 withType:(long long)arg2;
- (void)startRaceSport;
- (void)startTrackSport;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (id)navigationController:(id)arg1 animationControllerForOperation:(long long)arg2 fromViewController:(id)arg3 toViewController:(id)arg4;
- (void)didClickShowUserGroup:(id)arg1 withType:(long long)arg2;
- (void)didClickShowGroundDetail:(id)arg1;
- (void)didClickArrowWithLocation:(id)arg1;
- (void)hotUserScrollToIndex:(unsigned long long)arg1 oldIndex:(unsigned long long)arg2;
- (void)changeHotPopChoosedUserToIndex:(long long)arg1;
- (void)clickHotPopUser:(id)arg1;
- (void)getHotUserList:(id)arg1 withEntity:(id)arg2;
- (void)showHotUserInfo:(id)arg1;
- (void)didClickAnnotation:(id)arg1;
- (id)mapView:(id)arg1 fillColorForPolygonAnnotation:(id)arg2;
- (id)mapView:(id)arg1 strokeColorForShapeAnnotation:(id)arg2;
- (double)mapView:(id)arg1 alphaForShapeAnnotation:(id)arg2;
- (void)mapView:(id)arg1 regionDidChangeAnimated:(_Bool)arg2;
- (void)mapViewRegionIsChanging:(id)arg1;
- (id)mapView:(id)arg1 viewForAnnotation:(id)arg2;
- (void)mapView:(id)arg1 didFinishLoadingStyle:(id)arg2;
- (void)activityViewController:(id)arg1 willPerformShareActionWithActionType:(unsigned long long)arg2 object:(id)arg3 decisionHandler:(CDUnknownBlockType)arg4;
- (id)preferredActivityTypes;
- (void)getRaceShareId:(id)arg1;
- (void)showRaceShare;
- (void)showShare;
- (void)getTrackShareId:(id)arg1;
- (void)showTrackShare;
- (void)hidePopView:(CDUnknownBlockType)arg1 resumeZoomLevel:(_Bool)arg2;
- (void)hidePopView;
- (void)clickMap:(id)arg1;
- (void)hideAdView;
- (void)showAdView;
- (void)hideArrowView;
- (void)showArrowView;
- (void)updateArrow;
- (id)createLayer:(struct CGRect)arg1 withPoints:(id)arg2 strokeColor:(id)arg3 fillColor:(id)arg4;
- (void)showRunLayerAnimation;
- (void)showHotTopFlyView:(id)arg1;
- (void)showGroundTopFlyView:(id)arg1;
- (void)drawTrackLine;
- (void)clickTrackFeedback;
- (void)initNavigationView;
- (void)drawRaceTrackLine:(id)arg1;
- (void)showRaceDetail:(id)arg1;
- (void)loadRaceDetail:(long long)arg1;
- (void)showTrackDetail:(id)arg1;
- (void)loadTrackDetail:(long long)arg1;
- (void)showHotDetail:(id)arg1;
- (void)showGroundSimpleInfo:(id)arg1;
- (void)loadOccupation;
- (void)loadHotListSuccess:(id)arg1;
- (void)loadRaceList;
- (void)loadTrackList;
- (void)loadHotList;
- (void)loadRunGroundList:(_Bool)arg1;
- (void)loadAllData:(_Bool)arg1;
- (void)loadStartInfo;
- (void)disableMapView;
- (void)enableMapView;
- (void)updateButton:(id)arg1 hide:(_Bool)arg2;
- (void)showFilter;
- (void)showMyLocation;
- (void)judgeLocationStatus;
- (void)showAds:(id)arg1;
- (void)loadAds;
- (void)initView;
- (void)enterForeground;
- (void)enterBackground;
- (void)viewDidLoad;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

