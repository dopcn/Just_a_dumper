//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "WBPDMObject.h"

#import "NSCopying-Protocol.h"
#import "NSSecureCoding-Protocol.h"
#import "NSURLSessionDataDelegate-Protocol.h"
#import "NSURLSessionDelegate-Protocol.h"
#import "NSURLSessionDownloadDelegate-Protocol.h"
#import "NSURLSessionTaskDelegate-Protocol.h"

@class NSArray, NSLock, NSMutableDictionary, NSObject, NSOperationQueue, NSString, NSURLSession, NSURLSessionConfiguration, WBPNetRManager, WBPPolicy;
@protocol OS_dispatch_group, OS_dispatch_queue, WBPResSer;

@interface WBPSManager : WBPDMObject <NSURLSessionDelegate, NSURLSessionTaskDelegate, NSURLSessionDataDelegate, NSURLSessionDownloadDelegate, NSSecureCoding, NSCopying>
{
    _Bool _aTRUTFBS;
    NSURLSession *_session;
    NSOperationQueue *_operationQueue;
    id <WBPResSer> _responseSerializer;
    WBPNetRManager *_netManager;
    NSObject<OS_dispatch_queue> *_completionQueue;
    NSObject<OS_dispatch_group> *_completionGroup;
    WBPPolicy *_wbp_P;
    NSURLSessionConfiguration *_sessionConfiguration;
    NSMutableDictionary *_mutableTaskDelegatesKeyedByTaskIdentifier;
    NSString *_taskDescriptionForSessionTasks;
    NSLock *_lock;
    CDUnknownBlockType _sessionDidBecomeInvalid;
    CDUnknownBlockType _sessionDidReceiveAuthenticationChallenge;
    CDUnknownBlockType _didFinishEventsForBackgroundURLSession;
    CDUnknownBlockType _taskWillPerformHTTPRedirection;
    CDUnknownBlockType _taskDidReceiveAuthenticationChallenge;
    CDUnknownBlockType _taskNeedNewBodyStream;
    CDUnknownBlockType _taskDidSendBodyData;
    CDUnknownBlockType _taskDidComplete;
    CDUnknownBlockType _dataTaskDidReceiveResponse;
    CDUnknownBlockType _dataTaskDidBecomeDownloadTask;
    CDUnknownBlockType _dataTaskDidReceiveData;
    CDUnknownBlockType _dataTaskWillCacheResponse;
    CDUnknownBlockType _downloadTaskDidFinishDownloading;
    CDUnknownBlockType _downloadTaskDidWriteData;
    CDUnknownBlockType _downloadTaskDidResume;
}

+ (_Bool)supportsSecureCoding;
+ (id)DMD;
@property(copy, nonatomic) CDUnknownBlockType downloadTaskDidResume; // @synthesize downloadTaskDidResume=_downloadTaskDidResume;
@property(copy, nonatomic) CDUnknownBlockType downloadTaskDidWriteData; // @synthesize downloadTaskDidWriteData=_downloadTaskDidWriteData;
@property(copy, nonatomic) CDUnknownBlockType downloadTaskDidFinishDownloading; // @synthesize downloadTaskDidFinishDownloading=_downloadTaskDidFinishDownloading;
@property(copy, nonatomic) CDUnknownBlockType dataTaskWillCacheResponse; // @synthesize dataTaskWillCacheResponse=_dataTaskWillCacheResponse;
@property(copy, nonatomic) CDUnknownBlockType dataTaskDidReceiveData; // @synthesize dataTaskDidReceiveData=_dataTaskDidReceiveData;
@property(copy, nonatomic) CDUnknownBlockType dataTaskDidBecomeDownloadTask; // @synthesize dataTaskDidBecomeDownloadTask=_dataTaskDidBecomeDownloadTask;
@property(copy, nonatomic) CDUnknownBlockType dataTaskDidReceiveResponse; // @synthesize dataTaskDidReceiveResponse=_dataTaskDidReceiveResponse;
@property(copy, nonatomic) CDUnknownBlockType taskDidComplete; // @synthesize taskDidComplete=_taskDidComplete;
@property(copy, nonatomic) CDUnknownBlockType taskDidSendBodyData; // @synthesize taskDidSendBodyData=_taskDidSendBodyData;
@property(copy, nonatomic) CDUnknownBlockType taskNeedNewBodyStream; // @synthesize taskNeedNewBodyStream=_taskNeedNewBodyStream;
@property(copy, nonatomic) CDUnknownBlockType taskDidReceiveAuthenticationChallenge; // @synthesize taskDidReceiveAuthenticationChallenge=_taskDidReceiveAuthenticationChallenge;
@property(copy, nonatomic) CDUnknownBlockType taskWillPerformHTTPRedirection; // @synthesize taskWillPerformHTTPRedirection=_taskWillPerformHTTPRedirection;
@property(copy, nonatomic) CDUnknownBlockType didFinishEventsForBackgroundURLSession; // @synthesize didFinishEventsForBackgroundURLSession=_didFinishEventsForBackgroundURLSession;
@property(copy, nonatomic) CDUnknownBlockType sessionDidReceiveAuthenticationChallenge; // @synthesize sessionDidReceiveAuthenticationChallenge=_sessionDidReceiveAuthenticationChallenge;
@property(copy, nonatomic) CDUnknownBlockType sessionDidBecomeInvalid; // @synthesize sessionDidBecomeInvalid=_sessionDidBecomeInvalid;
@property(retain, nonatomic) NSLock *lock; // @synthesize lock=_lock;
@property(readonly, copy, nonatomic) NSString *taskDescriptionForSessionTasks; // @synthesize taskDescriptionForSessionTasks=_taskDescriptionForSessionTasks;
@property(retain, nonatomic) NSMutableDictionary *mutableTaskDelegatesKeyedByTaskIdentifier; // @synthesize mutableTaskDelegatesKeyedByTaskIdentifier=_mutableTaskDelegatesKeyedByTaskIdentifier;
@property(retain, nonatomic) NSURLSessionConfiguration *sessionConfiguration; // @synthesize sessionConfiguration=_sessionConfiguration;
@property(retain, nonatomic) WBPPolicy *wbp_P; // @synthesize wbp_P=_wbp_P;
@property(nonatomic) _Bool aTRUTFBS; // @synthesize aTRUTFBS=_aTRUTFBS;
@property(retain, nonatomic) NSObject<OS_dispatch_group> *completionGroup; // @synthesize completionGroup=_completionGroup;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *completionQueue; // @synthesize completionQueue=_completionQueue;
@property(retain, nonatomic) WBPNetRManager *netManager; // @synthesize netManager=_netManager;
@property(retain, nonatomic) id <WBPResSer> responseSerializer; // @synthesize responseSerializer=_responseSerializer;
@property(retain, nonatomic) NSOperationQueue *operationQueue; // @synthesize operationQueue=_operationQueue;
@property(retain, nonatomic) NSURLSession *session; // @synthesize session=_session;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)URLSession:(id)arg1 downloadTask:(id)arg2 didResumeAtOffset:(long long)arg3 expectedTotalBytes:(long long)arg4;
- (void)URLSession:(id)arg1 downloadTask:(id)arg2 didWriteData:(long long)arg3 totalBytesWritten:(long long)arg4 totalBytesExpectedToWrite:(long long)arg5;
- (void)URLSession:(id)arg1 downloadTask:(id)arg2 didFinishDownloadingToURL:(id)arg3;
- (void)URLSessionDidFinishEventsForBackgroundURLSession:(id)arg1;
- (void)URLSession:(id)arg1 dataTask:(id)arg2 willCacheResponse:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)URLSession:(id)arg1 dataTask:(id)arg2 didReceiveData:(id)arg3;
- (void)URLSession:(id)arg1 dataTask:(id)arg2 didBecomeDownloadTask:(id)arg3;
- (void)URLSession:(id)arg1 dataTask:(id)arg2 didReceiveResponse:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)URLSession:(id)arg1 task:(id)arg2 didCompleteWithError:(id)arg3;
- (void)URLSession:(id)arg1 task:(id)arg2 didSendBodyData:(long long)arg3 totalBytesSent:(long long)arg4 totalBytesExpectedToSend:(long long)arg5;
- (void)URLSession:(id)arg1 task:(id)arg2 needNewBodyStream:(CDUnknownBlockType)arg3;
- (void)URLSession:(id)arg1 task:(id)arg2 didReceiveChallenge:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)URLSession:(id)arg1 task:(id)arg2 willPerformHTTPRedirection:(id)arg3 newRequest:(id)arg4 completionHandler:(CDUnknownBlockType)arg5;
- (void)URLSession:(id)arg1 didReceiveChallenge:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)URLSession:(id)arg1 didBecomeInvalidWithError:(id)arg2;
- (_Bool)respondsToSelector:(SEL)arg1;
@property(readonly, copy) NSString *description;
- (void)sDTDRB:(CDUnknownBlockType)arg1;
- (void)sDTDWDB:(CDUnknownBlockType)arg1;
- (void)sDTDFDB:(CDUnknownBlockType)arg1;
- (void)sDTWCRB:(CDUnknownBlockType)arg1;
- (void)sDTDRDB:(CDUnknownBlockType)arg1;
- (void)sDTDBDTB:(CDUnknownBlockType)arg1;
- (void)sDTDRRB:(CDUnknownBlockType)arg1;
- (void)sTDCB:(CDUnknownBlockType)arg1;
- (void)sTDSBDB:(CDUnknownBlockType)arg1;
- (void)sTDRACB:(CDUnknownBlockType)arg1;
- (void)sTWPHPRB:(CDUnknownBlockType)arg1;
- (void)sTNNBSB:(CDUnknownBlockType)arg1;
- (void)sDFEFBURLSB:(CDUnknownBlockType)arg1;
- (void)sSDRAC:(CDUnknownBlockType)arg1;
- (void)sSDBIB:(CDUnknownBlockType)arg1;
- (id)dPFT:(id)arg1;
- (id)uPFT:(id)arg1;
- (id)dTWRD:(id)arg1 p:(CDUnknownBlockType)arg2 d:(CDUnknownBlockType)arg3 cH:(CDUnknownBlockType)arg4;
- (id)dTWR:(id)arg1 p:(CDUnknownBlockType)arg2 d:(CDUnknownBlockType)arg3 cH:(CDUnknownBlockType)arg4;
- (id)uTWSR:(id)arg1 p:(CDUnknownBlockType)arg2 cH:(CDUnknownBlockType)arg3;
- (id)uTWR:(id)arg1 fD:(id)arg2 p:(CDUnknownBlockType)arg3 cH:(CDUnknownBlockType)arg4;
- (id)uTWR:(id)arg1 fF:(id)arg2 p:(CDUnknownBlockType)arg3 cH:(CDUnknownBlockType)arg4;
- (id)dTWR:(id)arg1 uP:(CDUnknownBlockType)arg2 dP:(CDUnknownBlockType)arg3 cH:(CDUnknownBlockType)arg4;
- (id)dTWR:(id)arg1 cH:(CDUnknownBlockType)arg2;
- (void)rNOFT:(id)arg1;
- (void)aNOFT:(id)arg1;
- (void)iSCT:(_Bool)arg1;
@property(readonly, nonatomic) NSArray *downloadTasks;
@property(readonly, nonatomic) NSArray *uploadTasks;
@property(readonly, nonatomic) NSArray *dataTasks;
@property(readonly, nonatomic) NSArray *tasks;
- (id)tsFKP:(id)arg1;
- (void)rDFT:(id)arg1;
- (void)aDFDT:(id)arg1 p:(CDUnknownBlockType)arg2 d:(CDUnknownBlockType)arg3 cH:(CDUnknownBlockType)arg4;
- (void)aDFUT:(id)arg1 p:(CDUnknownBlockType)arg2 cH:(CDUnknownBlockType)arg3;
- (void)aDFDT:(id)arg1 uP:(CDUnknownBlockType)arg2 dP:(CDUnknownBlockType)arg3 cH:(CDUnknownBlockType)arg4;
- (void)sD:(id)arg1 fT:(id)arg2;
- (id)dFT:(id)arg1;
- (void)tDS:(id)arg1;
- (void)tDR:(id)arg1;
- (id)tDFST;
- (id)initWithSC:(id)arg1;
- (id)init;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

