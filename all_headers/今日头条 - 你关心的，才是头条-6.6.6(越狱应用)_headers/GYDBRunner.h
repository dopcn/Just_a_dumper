//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

@class NSMutableDictionary;
@protocol GYDBCache;

@interface GYDBRunner : NSObject
{
    NSMutableDictionary *_databaseInfos;
    id <GYDBCache> _cacheDelegate;
    NSMutableDictionary *_writeCounts;
}

+ (id)pathForAnalyzeStatistics;
+ (id)sharedInstanceWithCacheDelegate:(id)arg1;
@property(retain) NSMutableDictionary *writeCounts; // @synthesize writeCounts=_writeCounts;
@property(nonatomic) __weak id <GYDBCache> cacheDelegate; // @synthesize cacheDelegate=_cacheDelegate;
- (void).cxx_destruct;
- (void)autoTransactionForDatabaseInfo:(id)arg1;
- (id)pathForDbName:(id)arg1;
- (id)databaseInfoForDbName:(id)arg1;
- (_Bool)mapsTextForType:(unsigned long long)arg1;
- (_Bool)mapsRealForType:(unsigned long long)arg1;
- (_Bool)mapsIntegerForType:(unsigned long long)arg1;
- (id)indexNameForTable:(id)arg1 properties:(id)arg2;
- (_Bool)isVirtualTableForClass:(Class)arg1;
- (void)createIndexForClass:(Class)arg1 Properties:(id)arg2 databaseQueue:(id)arg3;
- (void)createIndicesForClass:(Class)arg1 databaseQueue:(id)arg2;
- (id)columnDefinitionForClass:(Class)arg1 property:(id)arg2;
- (id)sortedPropertiesForClass:(Class)arg1;
- (id)columnDefinitionsForClass:(Class)arg1;
- (id)sqlForCreateTableForClass:(Class)arg1;
- (id)sqlForCreateVirtualTableForClass:(Class)arg1;
- (void)createTableForClass:(Class)arg1 databaseQueue:(id)arg2;
- (void)dropIndex:(id)arg1 databaseQueue:(id)arg2;
- (id)indicesForTable:(id)arg1 databaseQueue:(id)arg2;
- (void)updateIndicesForClass:(Class)arg1 databaseQueue:(id)arg2;
- (id)columnsForTable:(id)arg1 databaseQueue:(id)arg2;
- (void)updateTableSchemaForClass:(Class)arg1 databaseQueue:(id)arg2;
- (_Bool)isTable:(id)arg1 existsWithDatabaseQueue:(id)arg2;
- (id)databaseInfoForClass:(Class)arg1;
- (void)setAutoTransactionEnabled:(_Bool)arg1;
- (void)synchronizeDB:(id)arg1;
- (void)vacuumAllDBs;
- (void)commitTransactionForDbName:(id)arg1;
- (void)beginTransactionForDbName:(id)arg1;
- (void)recordWriteOperationForDatabaseInfo:(id)arg1;
- (void)updateClass:(Class)arg1 set:(id)arg2 where:(id)arg3 arguments:(id)arg4;
- (void)deleteClass:(Class)arg1 where:(id)arg2 arguments:(id)arg3;
- (id)dataAfterEncodingObject:(id)arg1;
- (id)valueOfProperty:(id)arg1 ofObject:(id)arg2;
- (_Bool)isPrimaryKeyProvidedWithObject:(id)arg1;
- (void)getSql:(id *)arg1 properties:(id *)arg2 forClass:(Class)arg3 withPrimaryKey:(_Bool)arg4;
- (void)saveObject:(id)arg1;
- (id)aggregateOfClass:(Class)arg1 function:(id)arg2 where:(id)arg3 arguments:(id)arg4;
- (id)idsOfClass:(Class)arg1 where:(id)arg2 arguments:(id)arg3;
- (id)valueAfterDecodingData:(id)arg1;
- (_Bool)needSerializationForType:(unsigned long long)arg1;
- (id)valueForClass:(Class)arg1 property:(id)arg2 resultSet:(id)arg3 index:(int)arg4;
- (void)setProperty:(id)arg1 ofObject:(id)arg2 withResultSet:(id)arg3 index:(int)arg4;
- (id)objectOfClass:(Class)arg1 resultSet:(id)arg2 range:(struct _NSRange)arg3 properties:(id)arg4;
- (id)columnSqlForClass:(Class)arg1 properties:(id)arg2 withPrefix:(_Bool)arg3;
- (id)objectsOfClass:(Class)arg1 properties:(id)arg2 class:(Class)arg3 properties:(id)arg4 joinType:(long long)arg5 joinCondition:(id)arg6 where:(id)arg7 arguments:(id)arg8;
- (id)objectsOfClass:(Class)arg1 properties:(id)arg2 where:(id)arg3 arguments:(id)arg4;
- (id)initWithCacheDelegate:(id)arg1;

@end

