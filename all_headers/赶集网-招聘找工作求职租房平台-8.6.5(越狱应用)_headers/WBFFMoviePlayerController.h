//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "WBDownVideoDelegate-Protocol.h"
#import "WBMediaPlayback-Protocol.h"

@class NSString, NSTimer, NSURL, UIView, WBDownVideo, WBFFMonitor, WBFFMoviePlayerMessagePool, WBNotificationManager, WBSDLGLView;
@protocol WBFFMoviePlayerControllerDelegate, WBMediaNativeInvokeDelegate, WBMediaUrlOpenDelegate;

@interface WBFFMoviePlayerController : NSObject <WBDownVideoDelegate, WBMediaPlayback>
{
    struct WBMediaPlayer *_mediaPlayer;
    WBSDLGLView *_glView;
    WBFFMoviePlayerMessagePool *_msgPool;
    NSString *_urlString;
    NSString *_urlStringBackup;
    long long _sampleAspectRatioNumerator;
    long long _sampleAspectRatioDenominator;
    _Bool _seeking;
    long long _bufferingTime;
    long long _bufferingPosition;
    _Bool _keepScreenOnWhilePlaying;
    _Bool _pauseInBackground;
    _Bool _isVideoToolboxOpen;
    _Bool _playingBeforeInterruption;
    WBNotificationManager *_notificationManager;
    struct WBAVInject_AsyncStatistic _asyncStat;
    _Bool _shouldShowHudView;
    NSTimer *_hudTimer;
    WBDownVideo *_downVideo;
    _Bool _isCache;
    _Bool _isError;
    _Bool _isPreparedToPlay;
    _Bool _shouldAutoplay;
    _Bool _allowsMediaAirPlay;
    _Bool _airPlayMediaActive;
    _Bool _isDanmakuMediaAirPlay;
    _Bool _isPlayBackup;
    _Bool _needPlayBackup;
    _Bool _Download;
    _Bool _isPauseCache;
    _Bool _finishDown;
    _Bool _isPlayLocal;
    _Bool _changeSourceing;
    _Bool _isPauseing;
    _Bool _isSlide;
    _Bool _isHasShow;
    _Bool _WBSbuffer;
    _Bool _canPlay;
    _Bool _isok;
    _Bool _hasstop;
    _Bool _isLoop;
    int _count;
    NSString *_filePath;
    NSString *_fileName;
    UIView *_view;
    double currentPlaybackTime;
    double duration;
    double playableDuration;
    long long _bufferingProgress;
    long long _numberOfBytesTransferred;
    long long _playbackState;
    unsigned long long _loadState;
    long long _scalingMode;
    WBFFMonitor *_monitor;
    double _fpsInMeta;
    long long _videoWidth;
    long long _videoHeight;
    long long _totalLength;
    long long _currentLength;
    double _downRate;
    double _playRate;
    NSString *_DownVideoData;
    double _height;
    double _width;
    id <WBMediaUrlOpenDelegate> _segmentOpenDelegate;
    id <WBMediaUrlOpenDelegate> _tcpOpenDelegate;
    id <WBMediaUrlOpenDelegate> _httpOpenDelegate;
    id <WBMediaUrlOpenDelegate> _liveOpenDelegate;
    id <WBMediaNativeInvokeDelegate> _nativeInvokeDelegate;
    id <WBFFMoviePlayerControllerDelegate> _localePlayDelegate;
    NSTimer *_timer01;
    NSURL *_url;
    NSString *_fileNameEnd;
    NSString *_fileNameAndfilePath;
    NSString *_filNamePlay;
    struct CGSize _naturalSize;
}

+ (void)setLogLevel:(int)arg1;
+ (void)setLogReport:(_Bool)arg1;
+ (void)removeAllLocalDownVideoInfo;
+ (void)removeAllLocaleVieo;
+ (void)removeLocaleVieoinfo:(id)arg1;
+ (id)getPlayerVersion;
+ (void)enableDebugLog:(_Bool)arg1;
@property _Bool isLoop; // @synthesize isLoop=_isLoop;
@property(nonatomic) int count; // @synthesize count=_count;
@property(nonatomic) _Bool hasstop; // @synthesize hasstop=_hasstop;
@property(nonatomic) _Bool isok; // @synthesize isok=_isok;
@property(nonatomic) _Bool canPlay; // @synthesize canPlay=_canPlay;
@property(copy, nonatomic) NSString *filNamePlay; // @synthesize filNamePlay=_filNamePlay;
@property(copy, nonatomic) NSString *fileNameAndfilePath; // @synthesize fileNameAndfilePath=_fileNameAndfilePath;
@property(copy, nonatomic) NSString *fileNameEnd; // @synthesize fileNameEnd=_fileNameEnd;
@property(nonatomic) _Bool WBSbuffer; // @synthesize WBSbuffer=_WBSbuffer;
@property(nonatomic) _Bool isHasShow; // @synthesize isHasShow=_isHasShow;
@property(retain, nonatomic) NSURL *url; // @synthesize url=_url;
@property(nonatomic) _Bool isSlide; // @synthesize isSlide=_isSlide;
@property(retain, nonatomic) NSTimer *timer01; // @synthesize timer01=_timer01;
@property(nonatomic) _Bool isPauseing; // @synthesize isPauseing=_isPauseing;
@property(retain, nonatomic) WBDownVideo *downVideo; // @synthesize downVideo=_downVideo;
@property(nonatomic) _Bool changeSourceing; // @synthesize changeSourceing=_changeSourceing;
@property(nonatomic) __weak id <WBFFMoviePlayerControllerDelegate> localePlayDelegate; // @synthesize localePlayDelegate=_localePlayDelegate;
@property(retain, nonatomic) id <WBMediaNativeInvokeDelegate> nativeInvokeDelegate; // @synthesize nativeInvokeDelegate=_nativeInvokeDelegate;
@property(retain, nonatomic) id <WBMediaUrlOpenDelegate> liveOpenDelegate; // @synthesize liveOpenDelegate=_liveOpenDelegate;
@property(retain, nonatomic) id <WBMediaUrlOpenDelegate> httpOpenDelegate; // @synthesize httpOpenDelegate=_httpOpenDelegate;
@property(retain, nonatomic) id <WBMediaUrlOpenDelegate> tcpOpenDelegate; // @synthesize tcpOpenDelegate=_tcpOpenDelegate;
@property(retain, nonatomic) id <WBMediaUrlOpenDelegate> segmentOpenDelegate; // @synthesize segmentOpenDelegate=_segmentOpenDelegate;
@property(nonatomic) _Bool isPlayLocal; // @synthesize isPlayLocal=_isPlayLocal;
@property(nonatomic) _Bool finishDown; // @synthesize finishDown=_finishDown;
@property(nonatomic) double width; // @synthesize width=_width;
@property(nonatomic) double height; // @synthesize height=_height;
@property(copy, nonatomic) NSString *DownVideoData; // @synthesize DownVideoData=_DownVideoData;
@property(nonatomic) double playRate; // @synthesize playRate=_playRate;
@property(nonatomic) double downRate; // @synthesize downRate=_downRate;
@property(nonatomic) long long currentLength; // @synthesize currentLength=_currentLength;
@property(nonatomic) long long totalLength; // @synthesize totalLength=_totalLength;
@property(nonatomic) _Bool isPauseCache; // @synthesize isPauseCache=_isPauseCache;
@property(nonatomic, getter=isDownload) _Bool Download; // @synthesize Download=_Download;
@property(nonatomic) long long videoHeight; // @synthesize videoHeight=_videoHeight;
@property(nonatomic) long long videoWidth; // @synthesize videoWidth=_videoWidth;
@property(nonatomic) _Bool needPlayBackup; // @synthesize needPlayBackup=_needPlayBackup;
@property(nonatomic) _Bool isPlayBackup; // @synthesize isPlayBackup=_isPlayBackup;
@property(nonatomic) _Bool shouldShowHudView; // @synthesize shouldShowHudView=_shouldShowHudView;
@property(readonly, nonatomic) double fpsInMeta; // @synthesize fpsInMeta=_fpsInMeta;
@property(readonly, nonatomic) WBFFMonitor *monitor; // @synthesize monitor=_monitor;
@property(nonatomic) long long scalingMode; // @synthesize scalingMode=_scalingMode;
@property(readonly, nonatomic) unsigned long long loadState; // @synthesize loadState=_loadState;
@property(readonly, nonatomic) _Bool isPreparedToPlay; // @synthesize isPreparedToPlay=_isPreparedToPlay;
@property(readonly, nonatomic) long long numberOfBytesTransferred; // @synthesize numberOfBytesTransferred=_numberOfBytesTransferred;
@property(readonly, nonatomic) long long bufferingProgress; // @synthesize bufferingProgress=_bufferingProgress;
@property(readonly, nonatomic) UIView *view; // @synthesize view=_view;
- (void).cxx_destruct;
- (void)applicationWillTerminate;
- (void)applicationDidEnterBackground;
- (void)applicationWillResignActive;
- (void)applicationDidBecomeActive;
- (void)applicationWillEnterForeground;
- (void)audioSessionInterrupt:(id)arg1;
- (void)unregisterApplicationObservers;
- (void)registerApplicationObservers;
- (void)setMaxBufferSize:(int)arg1;
- (void)setPlayerOptionIntValue:(long long)arg1 forKey:(id)arg2;
- (void)setSwsOptionIntValue:(long long)arg1 forKey:(id)arg2;
- (void)setCodecOptionIntValue:(long long)arg1 forKey:(id)arg2;
- (void)setFormatOptionIntValue:(long long)arg1 forKey:(id)arg2;
- (void)setPlayerOptionValue:(id)arg1 forKey:(id)arg2;
- (void)setSwsOptionValue:(id)arg1 forKey:(id)arg2;
- (void)setCodecOptionValue:(id)arg1 forKey:(id)arg2;
- (void)setFormatOptionValue:(id)arg1 forKey:(id)arg2;
@property(nonatomic) _Bool isDanmakuMediaAirPlay; // @synthesize isDanmakuMediaAirPlay=_isDanmakuMediaAirPlay;
@property(readonly, nonatomic) _Bool airPlayMediaActive; // @synthesize airPlayMediaActive=_airPlayMediaActive;
@property(nonatomic) _Bool allowsMediaAirPlay; // @synthesize allowsMediaAirPlay=_allowsMediaAirPlay;
- (id)obtainMessage;
- (void)transformView:(int)arg1;
- (void)postEvent:(id)arg1;
@property(nonatomic) float playbackRate;
- (void)stopHudTimer;
- (void)startHudTimer;
- (void)refreshHudView;
@property(readonly, nonatomic) double fpsAtOutput;
- (id)thumbnailImageAtCurrentTime;
- (id)thumbnailImageAtTime:(double)arg1 timeOption:(long long)arg2;
- (void)changeNaturalSize;
@property(readonly, nonatomic) struct CGSize naturalSize; // @synthesize naturalSize=_naturalSize;
@property(readonly, nonatomic) double playableDuration; // @synthesize playableDuration;
@property(readonly, nonatomic) double duration; // @synthesize duration;
@property(nonatomic) double currentPlaybackTime; // @synthesize currentPlaybackTime;
@property(readonly, nonatomic) long long playbackState; // @synthesize playbackState=_playbackState;
- (void)didShutdown;
- (void)shutdownClose:(id)arg1;
- (void)shutdownWaitStop:(id)arg1;
- (void)shutdown;
- (void)setOptionIntValue:(long long)arg1 forKey:(id)arg2 ofCategory:(int)arg3;
- (void)setOptionValue:(id)arg1 forKey:(id)arg2 ofCategory:(int)arg3;
- (void)setPauseInBackground:(_Bool)arg1;
- (_Bool)isPlaying;
- (void)setSilence:(_Bool)arg1;
- (void)stop;
- (void)pause;
- (void)replayLoop;
- (void)playerPlay;
- (void)replay;
- (void)play:(_Bool)arg1;
- (void)playerpause;
- (void)playInline;
- (void)pauseInline;
- (void)setHudUrl:(id)arg1;
- (void)changePlaySource:(id)arg1;
- (void)prepareToPlay:(_Bool)arg1;
@property(nonatomic) _Bool shouldAutoplay; // @synthesize shouldAutoplay=_shouldAutoplay;
- (void)dealloc;
- (void)setScreenOn:(_Bool)arg1;
- (id)initWithContentURLString:(id)arg1 withOptions:(id)arg2 needCache:(_Bool)arg3;
- (void)changePlaySourceUrl:(id)arg1;
- (void)downLoadFile:(id)arg1 WithError:(id)arg2;
- (void)finishDownLoad:(id)arg1 withError:(id)arg2;
- (void)downLoadFile:(id)arg1 WithDownloadRate:(double)arg2;
- (void)beginLocalePlay:(id)arg1;
- (_Bool)beginToDown;
@property(copy, nonatomic) NSString *filePath; // @synthesize filePath=_filePath;
@property(copy, nonatomic) NSString *fileName; // @synthesize fileName=_fileName;
- (id)initWithContentURL:(id)arg1 withOptions:(id)arg2 needCache:(_Bool)arg3;
- (void)pauseDisappear;
- (void)setView;
- (void)removeLocaleVieo;
- (void)postNostion;
- (void)SliderChageSource:(double)arg1;
- (void)resumeCache;
- (void)pauseCache;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

