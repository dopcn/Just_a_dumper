//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class FBLigerDebugReporter, NSArray, NSString;
@protocol FBLigerProvidesAnalyticsLogger, FBLigerProvidesAsyncTCPProbeCallback, FBLigerProvidesConnectionLogger, FBLigerProvidesNetworkStatusMonitor;

@interface FBLigerConfig : NSObject
{
    FBLigerDebugReporter *_ligerDebugReporter;
    _Bool _ligerEnabled;
    _Bool _dnsCacheEnabled;
    _Bool _requestProcessLogEnabled;
    _Bool _cAresEnabled;
    _Bool _persistentSSLCacheEnabled;
    _Bool _crossDomainSSLCacheEnabled;
    _Bool _httpSessionManagerOriginLimitEnabled;
    _Bool _heV4PrefEnabled;
    _Bool _sslCertKeyLengthVerificationEnforced;
    _Bool _sslTimestampVerificationEnabled;
    _Bool _zeroProtocolEnabled;
    _Bool _zeroProtocolEnforceExpiration;
    _Bool _zeroProtocolPersistentCache;
    _Bool _zeroRetryEnabled;
    _Bool _radioMonitorEnabled;
    _Bool _altSvcEnabled;
    _Bool _flowControlEnabled;
    _Bool _enableCachingPushManager;
    _Bool _enableHandlerAbortTxnOnBadStatus;
    _Bool _useHTTP2ForStatic;
    _Bool _lookupInterfaceName;
    _Bool _codecHeadroomOptimization;
    _Bool _enablePACFile;
    _Bool _useInjectedPreconnects;
    _Bool _fizzEnabled;
    _Bool _fizzPersistentCacheEnabled;
    _Bool _fizzEarlyDataEnabled;
    _Bool _dnscryptEnabled;
    _Bool _posixDualStackEnabled;
    int _dnsRequestsOutstanding;
    int _persistentSSLCacheCapacity;
    int _persistentSSLCacheSyncInterval;
    int _happyEyeballsConnectionDelayMs;
    int _zeroTlsFallback;
    int _http2PriLevels;
    int _evbLoggingSamplingFreq;
    int _dnsRetries;
    int _dnsPreemptRetryMs;
    int _dnscryptAttempts;
    int _systemResolverAttempts;
    NSString *_dnsFallbackAnswers;
    NSString *_persistentSSLCacheFilename;
    long long _httpSessionManagerMaxIdleHTTPSessions;
    long long _httpSessionManagerMaxIdleSPDYSessions;
    long long _httpSessionManagerBackupTimeout;
    long long _httpSessionManagerOriginMaxRetries;
    id <FBLigerProvidesNetworkStatusMonitor> _ligerNetworkStatusMonitor;
    NSArray *_requestObservers;
    id <FBLigerProvidesConnectionLogger> _ligerConnectionLogger;
    CDUnknownBlockType _proxyUserAgentFormattingBlock;
    CDUnknownBlockType _sandboxProvider;
    NSString *_zeroProtocolAeads;
    NSString *_zeroProtocolHostnamePolicy;
    NSString *_http2PriReqCallPaths;
    NSString *_http2PriWeights;
    long long _flowControlWindowSize;
    NSString *_activeProbeJson;
    id <FBLigerProvidesAsyncTCPProbeCallback> _asyncTCPProbeCallback;
    NSString *_connectionMergeHostMapStr;
    NSArray *_preConnectList;
    id <FBLigerProvidesAnalyticsLogger> _analyticsLogger;
    double _backgroundDNSSampleRate;
    NSString *_pacFileCheckURL;
    NSString *_fizzHostnamePolicy;
}

@property(readonly, nonatomic) int systemResolverAttempts; // @synthesize systemResolverAttempts=_systemResolverAttempts;
@property(readonly, nonatomic) int dnscryptAttempts; // @synthesize dnscryptAttempts=_dnscryptAttempts;
@property(readonly, nonatomic) int dnsPreemptRetryMs; // @synthesize dnsPreemptRetryMs=_dnsPreemptRetryMs;
@property(readonly, nonatomic) int dnsRetries; // @synthesize dnsRetries=_dnsRetries;
@property(readonly, nonatomic) _Bool posixDualStackEnabled; // @synthesize posixDualStackEnabled=_posixDualStackEnabled;
@property(readonly, nonatomic) _Bool dnscryptEnabled; // @synthesize dnscryptEnabled=_dnscryptEnabled;
@property(readonly, nonatomic) _Bool fizzEarlyDataEnabled; // @synthesize fizzEarlyDataEnabled=_fizzEarlyDataEnabled;
@property(readonly, nonatomic) _Bool fizzPersistentCacheEnabled; // @synthesize fizzPersistentCacheEnabled=_fizzPersistentCacheEnabled;
@property(readonly, copy, nonatomic) NSString *fizzHostnamePolicy; // @synthesize fizzHostnamePolicy=_fizzHostnamePolicy;
@property(readonly, nonatomic) _Bool fizzEnabled; // @synthesize fizzEnabled=_fizzEnabled;
@property(readonly, nonatomic) _Bool useInjectedPreconnects; // @synthesize useInjectedPreconnects=_useInjectedPreconnects;
@property(readonly, copy, nonatomic) NSString *pacFileCheckURL; // @synthesize pacFileCheckURL=_pacFileCheckURL;
@property(readonly, nonatomic) _Bool enablePACFile; // @synthesize enablePACFile=_enablePACFile;
@property(readonly, nonatomic) double backgroundDNSSampleRate; // @synthesize backgroundDNSSampleRate=_backgroundDNSSampleRate;
@property(readonly, nonatomic) _Bool codecHeadroomOptimization; // @synthesize codecHeadroomOptimization=_codecHeadroomOptimization;
@property(retain, nonatomic) id <FBLigerProvidesAnalyticsLogger> analyticsLogger; // @synthesize analyticsLogger=_analyticsLogger;
@property(readonly, nonatomic) int evbLoggingSamplingFreq; // @synthesize evbLoggingSamplingFreq=_evbLoggingSamplingFreq;
@property(readonly, nonatomic) _Bool lookupInterfaceName; // @synthesize lookupInterfaceName=_lookupInterfaceName;
@property(readonly, nonatomic) _Bool useHTTP2ForStatic; // @synthesize useHTTP2ForStatic=_useHTTP2ForStatic;
@property(readonly, nonatomic) _Bool enableHandlerAbortTxnOnBadStatus; // @synthesize enableHandlerAbortTxnOnBadStatus=_enableHandlerAbortTxnOnBadStatus;
@property(readonly, copy, nonatomic) NSArray *preConnectList; // @synthesize preConnectList=_preConnectList;
@property(readonly, copy, nonatomic) NSString *connectionMergeHostMapStr; // @synthesize connectionMergeHostMapStr=_connectionMergeHostMapStr;
@property(retain, nonatomic) id <FBLigerProvidesAsyncTCPProbeCallback> asyncTCPProbeCallback; // @synthesize asyncTCPProbeCallback=_asyncTCPProbeCallback;
@property(readonly, copy, nonatomic) NSString *activeProbeJson; // @synthesize activeProbeJson=_activeProbeJson;
@property(readonly, nonatomic) _Bool enableCachingPushManager; // @synthesize enableCachingPushManager=_enableCachingPushManager;
@property(readonly, nonatomic) long long flowControlWindowSize; // @synthesize flowControlWindowSize=_flowControlWindowSize;
@property(readonly, nonatomic) _Bool flowControlEnabled; // @synthesize flowControlEnabled=_flowControlEnabled;
@property(readonly, nonatomic) _Bool altSvcEnabled; // @synthesize altSvcEnabled=_altSvcEnabled;
@property(readonly, nonatomic) _Bool radioMonitorEnabled; // @synthesize radioMonitorEnabled=_radioMonitorEnabled;
@property(readonly, copy, nonatomic) NSString *http2PriWeights; // @synthesize http2PriWeights=_http2PriWeights;
@property(readonly, copy, nonatomic) NSString *http2PriReqCallPaths; // @synthesize http2PriReqCallPaths=_http2PriReqCallPaths;
@property(readonly, nonatomic) int http2PriLevels; // @synthesize http2PriLevels=_http2PriLevels;
@property(readonly, nonatomic) int zeroTlsFallback; // @synthesize zeroTlsFallback=_zeroTlsFallback;
@property(readonly, nonatomic) _Bool zeroRetryEnabled; // @synthesize zeroRetryEnabled=_zeroRetryEnabled;
@property(readonly, copy, nonatomic) NSString *zeroProtocolHostnamePolicy; // @synthesize zeroProtocolHostnamePolicy=_zeroProtocolHostnamePolicy;
@property(readonly, copy, nonatomic) NSString *zeroProtocolAeads; // @synthesize zeroProtocolAeads=_zeroProtocolAeads;
@property(readonly, nonatomic) _Bool zeroProtocolPersistentCache; // @synthesize zeroProtocolPersistentCache=_zeroProtocolPersistentCache;
@property(readonly, nonatomic) _Bool zeroProtocolEnforceExpiration; // @synthesize zeroProtocolEnforceExpiration=_zeroProtocolEnforceExpiration;
@property(readonly, nonatomic) _Bool zeroProtocolEnabled; // @synthesize zeroProtocolEnabled=_zeroProtocolEnabled;
@property(readonly, nonatomic) _Bool sslTimestampVerificationEnabled; // @synthesize sslTimestampVerificationEnabled=_sslTimestampVerificationEnabled;
@property(readonly, nonatomic) _Bool sslCertKeyLengthVerificationEnforced; // @synthesize sslCertKeyLengthVerificationEnforced=_sslCertKeyLengthVerificationEnforced;
@property(readonly, copy, nonatomic) CDUnknownBlockType sandboxProvider; // @synthesize sandboxProvider=_sandboxProvider;
@property(readonly, copy, nonatomic) CDUnknownBlockType proxyUserAgentFormattingBlock; // @synthesize proxyUserAgentFormattingBlock=_proxyUserAgentFormattingBlock;
@property(nonatomic) id <FBLigerProvidesConnectionLogger> ligerConnectionLogger; // @synthesize ligerConnectionLogger=_ligerConnectionLogger;
@property(copy, nonatomic) NSArray *requestObservers; // @synthesize requestObservers=_requestObservers;
@property(nonatomic) id <FBLigerProvidesNetworkStatusMonitor> ligerNetworkStatusMonitor; // @synthesize ligerNetworkStatusMonitor=_ligerNetworkStatusMonitor;
@property(readonly, nonatomic) int happyEyeballsConnectionDelayMs; // @synthesize happyEyeballsConnectionDelayMs=_happyEyeballsConnectionDelayMs;
@property(readonly, nonatomic) _Bool heV4PrefEnabled; // @synthesize heV4PrefEnabled=_heV4PrefEnabled;
@property(readonly, nonatomic) long long httpSessionManagerOriginMaxRetries; // @synthesize httpSessionManagerOriginMaxRetries=_httpSessionManagerOriginMaxRetries;
@property(readonly, nonatomic) _Bool httpSessionManagerOriginLimitEnabled; // @synthesize httpSessionManagerOriginLimitEnabled=_httpSessionManagerOriginLimitEnabled;
@property(readonly, nonatomic) long long httpSessionManagerBackupTimeout; // @synthesize httpSessionManagerBackupTimeout=_httpSessionManagerBackupTimeout;
@property(readonly, nonatomic) long long httpSessionManagerMaxIdleSPDYSessions; // @synthesize httpSessionManagerMaxIdleSPDYSessions=_httpSessionManagerMaxIdleSPDYSessions;
@property(readonly, nonatomic) long long httpSessionManagerMaxIdleHTTPSessions; // @synthesize httpSessionManagerMaxIdleHTTPSessions=_httpSessionManagerMaxIdleHTTPSessions;
@property(readonly, nonatomic) _Bool crossDomainSSLCacheEnabled; // @synthesize crossDomainSSLCacheEnabled=_crossDomainSSLCacheEnabled;
@property(readonly, nonatomic) int persistentSSLCacheSyncInterval; // @synthesize persistentSSLCacheSyncInterval=_persistentSSLCacheSyncInterval;
@property(readonly, nonatomic) int persistentSSLCacheCapacity; // @synthesize persistentSSLCacheCapacity=_persistentSSLCacheCapacity;
@property(copy, nonatomic) NSString *persistentSSLCacheFilename; // @synthesize persistentSSLCacheFilename=_persistentSSLCacheFilename;
@property(readonly, nonatomic) _Bool persistentSSLCacheEnabled; // @synthesize persistentSSLCacheEnabled=_persistentSSLCacheEnabled;
@property(readonly, copy, nonatomic) NSString *dnsFallbackAnswers; // @synthesize dnsFallbackAnswers=_dnsFallbackAnswers;
@property(readonly, nonatomic) int dnsRequestsOutstanding; // @synthesize dnsRequestsOutstanding=_dnsRequestsOutstanding;
@property(readonly, nonatomic) _Bool cAresEnabled; // @synthesize cAresEnabled=_cAresEnabled;
@property(readonly, nonatomic) _Bool requestProcessLogEnabled; // @synthesize requestProcessLogEnabled=_requestProcessLogEnabled;
@property(readonly, nonatomic) _Bool dnsCacheEnabled; // @synthesize dnsCacheEnabled=_dnsCacheEnabled;
@property(readonly, nonatomic) _Bool ligerEnabled; // @synthesize ligerEnabled=_ligerEnabled;
- (void).cxx_destruct;
- (void)setLigerDebugReporter:(id)arg1;
- (id)initDefaultConfigWithProxyUserAgentFormattingBlock:(CDUnknownBlockType)arg1 sandboxProvider:(CDUnknownBlockType)arg2;
- (id)initDefaultConfigWithProxyUserAgentFormattingBlock:(CDUnknownBlockType)arg1 sandboxProvider:(CDUnknownBlockType)arg2 enablePACFileMDM:(_Bool)arg3;
- (id)initConfigWithLigerEnabled:(_Bool)arg1 dnsCacheEnabled:(_Bool)arg2 requestProcessLogEnabled:(_Bool)arg3 cAresEnabled:(_Bool)arg4 dnsRequestsOutstanding:(int)arg5 dnsFallbackAnswers:(id)arg6 persistentSSLCacheEnabled:(_Bool)arg7 persistentSSLCacheFilename:(id)arg8 persistentSSLCacheCapacity:(int)arg9 persistentSSLCacheSyncInterval:(int)arg10 crossDomainSSLCacheEnabled:(_Bool)arg11 httpSessionManagerMaxIdleHTTPSessions:(long long)arg12 httpSessionManagerMaxIdleSPDYSessions:(long long)arg13 httpSessionManagerBackupTimeout:(long long)arg14 httpSessionManagerOriginLimitEnabled:(_Bool)arg15 httpSessionManagerOriginMaxRetries:(long long)arg16 heV4PrefEnabled:(_Bool)arg17 happyEyeballsConnectionDelayMs:(int)arg18 ligerNetworkStatusMonitor:(id)arg19 requestObservers:(id)arg20 ligerConnectionLogger:(id)arg21 sslCertKeyLengthVerificationEnforced:(_Bool)arg22 sslTimestampVerificationEnabled:(_Bool)arg23 zeroProtocolEnabled:(_Bool)arg24 zeroProtocolEnforceExpiration:(_Bool)arg25 zeroProtocolPersistentCache:(_Bool)arg26 zeroProtocolAeads:(id)arg27 zeroProtocolHostnamePolicy:(id)arg28 zeroRetryEnabled:(_Bool)arg29 zeroTlsFallback:(int)arg30 http2PriLevels:(int)arg31 http2PriReqCallPaths:(id)arg32 http2PriWeights:(id)arg33 radioMonitorEnabled:(_Bool)arg34 altSvcEnabled:(_Bool)arg35 flowControlEnabled:(_Bool)arg36 flowControlWindowSize:(long long)arg37 enableCachingPushManager:(_Bool)arg38 proxyUserAgentFormattingBlock:(CDUnknownBlockType)arg39 activeProbeJson:(id)arg40 asyncTCPProbeCallback:(id)arg41 connectionMergeHostMapStr:(id)arg42 sandboxProvider:(CDUnknownBlockType)arg43 preConnectList:(id)arg44 enableHandlerAbortTxnOnBadStatus:(_Bool)arg45 useHTTP2ForStatic:(_Bool)arg46 evbLoggingSamplingFreq:(int)arg47 analyticsLogger:(id)arg48 lookupInterfaceName:(_Bool)arg49 codecHeadroomOptimization:(_Bool)arg50 backgroundDNSSampleRate:(double)arg51 enablePACFile:(_Bool)arg52 pacFileCheckURL:(id)arg53 useInjectedPreconnects:(_Bool)arg54 fizzEnabled:(_Bool)arg55 fizzHostnamePolicy:(id)arg56 fizzPersistentCacheEnabled:(_Bool)arg57 fizzEarlyDataEnabled:(_Bool)arg58 dnscryptEnabled:(_Bool)arg59 posixDualStackEnabled:(_Bool)arg60 dnsRetries:(int)arg61 dnsPreemptRetryMs:(int)arg62 dnscryptAttempts:(int)arg63 systemResolverAttempts:(int)arg64;

@end

