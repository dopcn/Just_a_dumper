//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <UIKit/UIViewController.h>

#import "SubtitleTableViewDataSourceDelegate-Protocol.h"
#import "SubtitleTableViewDelegate-Protocol.h"

@class CacheFileMetaModel, CyberPlayerController, NSArray, NSDictionary, NSString, NSTimer, PlayTimeRecorder, PlayerControlView, PlayerHeaderView, PlayerLockView, PlayerMaskView, PlayerPanelView, SubtitleTableView, SubtitleTableViewDataSource, UISlider, UIView;

@interface BaiduPlayerViewController : UIViewController <SubtitleTableViewDelegate, SubtitleTableViewDataSourceDelegate>
{
    NSTimer *_controlViewAutoHideTimer;
    NSTimer *_playerStateObserverTimer;
    NSTimer *_loadingPercentTimer;
    NSTimer *_loadingRepeatClarityLoadingTimer;
    NSTimer *_loadingRepeatClarityLoadingFinalTimer;
    _Bool isSeeking;
    _Bool isPlayerSeekingTo;
    _Bool isPrepared;
    _Bool isCaching;
    _Bool isInFullScreen;
    _Bool shouldPauseState;
    _Bool shouldStopAfterSeek;
    _Bool clarityModeChanged;
    _Bool clarityModeChanging;
    _Bool isSeekWaiting;
    _Bool _isDownloaded;
    _Bool _isLocalOpen;
    _Bool _shouldWaitForPasscode;
    _Bool _originalStuckFlagForLog;
    _Bool _smoothStuckFlagForLog;
    _Bool _nNetStuckFlagForLog;
    _Bool _clutter;
    _Bool _isInPrepareToPlay;
    int panelViewType;
    int _clarityModeForLog;
    NSString *_streamURL;
    CyberPlayerController *_player;
    PlayerHeaderView *_headerView;
    PlayerControlView *_controlView;
    PlayerLockView *_lockView;
    PlayerPanelView *_panelView;
    PlayerMaskView *_maskView;
    UIView *_playerLoadingView;
    UISlider *_volumeChangeSlider;
    NSArray *_loadingPercentArray;
    CacheFileMetaModel *_fileMeta;
    CDUnknownBlockType _favoriteBtnBlock;
    CDUnknownBlockType _shareBtnBlock;
    CDUnknownBlockType _storageBtnBlock;
    CDUnknownBlockType _deleteBtnBlock;
    CDUnknownBlockType _transferBtnBlock;
    CDUnknownBlockType _clarityHighBtnBlock;
    CDUnknownBlockType _clarityNormalBtnBlock;
    CDUnknownBlockType _showStatusNavBarBlock;
    CDUnknownBlockType _hideStatusNavBarBlock;
    CDUnknownBlockType _playerPreparedNotificationBlock;
    CDUnknownBlockType _playerCompletionNotificationBlock;
    CDUnknownBlockType _playerCacheNotificationBlock;
    CDUnknownBlockType _playerCachePercentNotificationBlock;
    CDUnknownBlockType _playerErrorNotificationBlock;
    CDUnknownBlockType _playerSeekNotificationBlock;
    CDUnknownBlockType _playerAudioOnlyNotificationBlock;
    double preClarityPlayTime;
    double preSeekPlayTime;
    long long _mediaDuration;
    long long _downloadSpeed;
    NSDictionary *_mediaResolution;
    CDUnknownBlockType _p2pShareBtnBlock;
    CDUnknownBlockType _moreBtnBlock;
    CDUnknownBlockType _seekToBookmarkBlock;
    CDUnknownBlockType _playerGotNetworkErrorReportNotificationBlock;
    double _serverDuration;
    double _seekPlayTime;
    unsigned long long _quickSeekStep;
    SubtitleTableView *_subtitletableview;
    SubtitleTableViewDataSource *_subtitleTableViewDataSource;
    PlayTimeRecorder *_playTimeRecorder;
    NSString *_videoSizeForLog;
}

+ (id)sharedBaiduPlayerViewController;
@property _Bool isInPrepareToPlay; // @synthesize isInPrepareToPlay=_isInPrepareToPlay;
@property(nonatomic) _Bool clutter; // @synthesize clutter=_clutter;
@property(nonatomic) _Bool nNetStuckFlagForLog; // @synthesize nNetStuckFlagForLog=_nNetStuckFlagForLog;
@property(nonatomic) _Bool smoothStuckFlagForLog; // @synthesize smoothStuckFlagForLog=_smoothStuckFlagForLog;
@property(nonatomic) _Bool originalStuckFlagForLog; // @synthesize originalStuckFlagForLog=_originalStuckFlagForLog;
@property(copy, nonatomic) NSString *videoSizeForLog; // @synthesize videoSizeForLog=_videoSizeForLog;
@property(nonatomic) int clarityModeForLog; // @synthesize clarityModeForLog=_clarityModeForLog;
@property(retain, nonatomic) PlayTimeRecorder *playTimeRecorder; // @synthesize playTimeRecorder=_playTimeRecorder;
@property(retain, nonatomic) SubtitleTableViewDataSource *subtitleTableViewDataSource; // @synthesize subtitleTableViewDataSource=_subtitleTableViewDataSource;
@property(retain, nonatomic) SubtitleTableView *subtitletableview; // @synthesize subtitletableview=_subtitletableview;
@property(nonatomic) unsigned long long quickSeekStep; // @synthesize quickSeekStep=_quickSeekStep;
@property(nonatomic) _Bool shouldWaitForPasscode; // @synthesize shouldWaitForPasscode=_shouldWaitForPasscode;
@property(nonatomic) double seekPlayTime; // @synthesize seekPlayTime=_seekPlayTime;
@property(nonatomic) double serverDuration; // @synthesize serverDuration=_serverDuration;
@property(nonatomic) _Bool isLocalOpen; // @synthesize isLocalOpen=_isLocalOpen;
@property(nonatomic) _Bool isDownloaded; // @synthesize isDownloaded=_isDownloaded;
@property(copy, nonatomic) CDUnknownBlockType playerGotNetworkErrorReportNotificationBlock; // @synthesize playerGotNetworkErrorReportNotificationBlock=_playerGotNetworkErrorReportNotificationBlock;
@property(copy, nonatomic) CDUnknownBlockType seekToBookmarkBlock; // @synthesize seekToBookmarkBlock=_seekToBookmarkBlock;
@property(copy, nonatomic) CDUnknownBlockType moreBtnBlock; // @synthesize moreBtnBlock=_moreBtnBlock;
@property(copy, nonatomic) CDUnknownBlockType p2pShareBtnBlock; // @synthesize p2pShareBtnBlock=_p2pShareBtnBlock;
@property(retain, nonatomic) NSDictionary *mediaResolution; // @synthesize mediaResolution=_mediaResolution;
@property(nonatomic) long long downloadSpeed; // @synthesize downloadSpeed=_downloadSpeed;
@property(nonatomic) long long mediaDuration; // @synthesize mediaDuration=_mediaDuration;
@property(nonatomic) int panelViewType; // @synthesize panelViewType;
@property(nonatomic) _Bool isSeekWaiting; // @synthesize isSeekWaiting;
@property(nonatomic) double preSeekPlayTime; // @synthesize preSeekPlayTime;
@property(nonatomic) double preClarityPlayTime; // @synthesize preClarityPlayTime;
@property(nonatomic) _Bool clarityModeChanging; // @synthesize clarityModeChanging;
@property(nonatomic) _Bool clarityModeChanged; // @synthesize clarityModeChanged;
@property(nonatomic) _Bool shouldStopAfterSeek; // @synthesize shouldStopAfterSeek;
@property(nonatomic) _Bool shouldPauseState; // @synthesize shouldPauseState;
@property(nonatomic) _Bool isInFullScreen; // @synthesize isInFullScreen;
@property(nonatomic) _Bool isCaching; // @synthesize isCaching;
@property(nonatomic) _Bool isPrepared; // @synthesize isPrepared;
@property(nonatomic) _Bool isPlayerSeekingTo; // @synthesize isPlayerSeekingTo;
@property(nonatomic) _Bool isSeeking; // @synthesize isSeeking;
@property(copy, nonatomic) CDUnknownBlockType playerAudioOnlyNotificationBlock; // @synthesize playerAudioOnlyNotificationBlock=_playerAudioOnlyNotificationBlock;
@property(copy, nonatomic) CDUnknownBlockType playerSeekNotificationBlock; // @synthesize playerSeekNotificationBlock=_playerSeekNotificationBlock;
@property(copy, nonatomic) CDUnknownBlockType playerErrorNotificationBlock; // @synthesize playerErrorNotificationBlock=_playerErrorNotificationBlock;
@property(copy, nonatomic) CDUnknownBlockType playerCachePercentNotificationBlock; // @synthesize playerCachePercentNotificationBlock=_playerCachePercentNotificationBlock;
@property(copy, nonatomic) CDUnknownBlockType playerCacheNotificationBlock; // @synthesize playerCacheNotificationBlock=_playerCacheNotificationBlock;
@property(copy, nonatomic) CDUnknownBlockType playerCompletionNotificationBlock; // @synthesize playerCompletionNotificationBlock=_playerCompletionNotificationBlock;
@property(copy, nonatomic) CDUnknownBlockType playerPreparedNotificationBlock; // @synthesize playerPreparedNotificationBlock=_playerPreparedNotificationBlock;
@property(copy, nonatomic) CDUnknownBlockType hideStatusNavBarBlock; // @synthesize hideStatusNavBarBlock=_hideStatusNavBarBlock;
@property(copy, nonatomic) CDUnknownBlockType showStatusNavBarBlock; // @synthesize showStatusNavBarBlock=_showStatusNavBarBlock;
@property(copy, nonatomic) CDUnknownBlockType clarityNormalBtnBlock; // @synthesize clarityNormalBtnBlock=_clarityNormalBtnBlock;
@property(copy, nonatomic) CDUnknownBlockType clarityHighBtnBlock; // @synthesize clarityHighBtnBlock=_clarityHighBtnBlock;
@property(copy, nonatomic) CDUnknownBlockType transferBtnBlock; // @synthesize transferBtnBlock=_transferBtnBlock;
@property(copy, nonatomic) CDUnknownBlockType deleteBtnBlock; // @synthesize deleteBtnBlock=_deleteBtnBlock;
@property(copy, nonatomic) CDUnknownBlockType storageBtnBlock; // @synthesize storageBtnBlock=_storageBtnBlock;
@property(copy, nonatomic) CDUnknownBlockType shareBtnBlock; // @synthesize shareBtnBlock=_shareBtnBlock;
@property(copy, nonatomic) CDUnknownBlockType favoriteBtnBlock; // @synthesize favoriteBtnBlock=_favoriteBtnBlock;
@property(retain, nonatomic) CacheFileMetaModel *fileMeta; // @synthesize fileMeta=_fileMeta;
@property(retain, nonatomic) NSArray *loadingPercentArray; // @synthesize loadingPercentArray=_loadingPercentArray;
@property(retain, nonatomic) UISlider *volumeChangeSlider; // @synthesize volumeChangeSlider=_volumeChangeSlider;
@property(retain, nonatomic) UIView *playerLoadingView; // @synthesize playerLoadingView=_playerLoadingView;
@property(retain, nonatomic) PlayerMaskView *maskView; // @synthesize maskView=_maskView;
@property(retain, nonatomic) PlayerPanelView *panelView; // @synthesize panelView=_panelView;
@property(retain, nonatomic) PlayerLockView *lockView; // @synthesize lockView=_lockView;
@property(retain, nonatomic) PlayerControlView *controlView; // @synthesize controlView=_controlView;
@property(retain, nonatomic) PlayerHeaderView *headerView; // @synthesize headerView=_headerView;
@property(retain, nonatomic) CyberPlayerController *player; // @synthesize player=_player;
@property(retain, nonatomic) NSString *streamURL; // @synthesize streamURL=_streamURL;
- (void).cxx_destruct;
- (void)reportLogPlayTime;
- (void)computePlayTimeForLog;
- (void)resetLastStartPlayTime;
- (void)loadSubtitleList:(id)arg1 AtIndexPath:(id)arg2;
- (void)toggelSubtitle:(_Bool)arg1;
- (void)didSelectSubtitle:(id)arg1 AtIndexPath:(id)arg2;
- (void)dismissSubtitleTableView;
- (void)toggleSubtitleTableView:(struct CGRect)arg1;
- (void)hideClarityButton;
- (double)currentPlayTime;
- (id)currentPlayingUrl;
- (void)onPasscodeIncorrectAction:(id)arg1;
- (void)onPasscodeCorrectAction:(id)arg1;
- (void)onDidEnterBackgroundAction:(id)arg1;
- (void)onWillEnterForegroundAction:(id)arg1;
- (void)onDidBecomeAction:(id)arg1;
- (void)onWillResignAction:(id)arg1;
- (void)onLoginOutListener:(id)arg1;
- (void)onNetWorkListener:(id)arg1;
- (void)onMeidaTypeAudioOnlyListener:(id)arg1;
- (void)onSniffErrorListener:(id)arg1;
- (void)onSniffCompletionListener:(id)arg1;
- (void)onGotNetworkErrorReport:(id)arg1;
- (void)onGotNetworkBitrate:(id)arg1;
- (void)onPlayStatusChangeListener:(id)arg1;
- (void)onSeekListener:(id)arg1;
- (void)onErrorListener:(id)arg1;
- (void)onCachePercentListener:(id)arg1;
- (void)onCacheListener:(id)arg1;
- (void)onCompletionListener:(id)arg1;
- (void)onPreparedListener:(id)arg1;
- (void)handleExitFullScreenEvent;
- (void)handleEnterFullScreenEvent;
- (long long)preferredInterfaceOrientationForPresentation;
- (unsigned long long)supportedInterfaceOrientations;
- (_Bool)shouldAutorotate;
- (_Bool)shouldAutorotateToInterfaceOrientation:(long long)arg1;
- (void)didReceiveMemoryWarning;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (_Bool)shouldShowToolbar;
- (_Bool)isPlayerCompleted;
- (_Bool)isShowLoadingTip;
- (void)handlePlayControlVisible:(_Bool)arg1;
- (int)currentClarityMode;
- (void)changeClarityMode:(int)arg1 contentURL:(id)arg2 delay:(double)arg3;
- (void)setClarityIconHidden:(_Bool)arg1;
- (void)setClarityIconState:(int)arg1 enable:(_Bool)arg2;
- (void)setDeleteIconState:(_Bool)arg1;
- (void)setStorageIconState:(_Bool)arg1;
- (_Bool)isPreparing;
- (_Bool)isPlaying;
- (void)audioEndInterruptPlayer;
- (void)audioBeginInterruptPlayer;
- (void)quickStopPlayer;
- (void)startPlayer;
- (void)pausePlayer;
- (void)stopPlay;
- (void)resetPlayerControlView;
- (void)startPlay:(_Bool)arg1;
- (void)startReallyPlay:(_Bool)arg1;
- (void)setUserLevel;
- (void)handleClutter;
- (_Bool)calculateByPercentA;
- (void)changePreparedStatus:(_Bool)arg1;
- (void)preparePlayVideo;
- (void)setupPlayerCustomHeader;
- (void)handleStartGetFileMediaEvent;
- (void)resetViewFrame:(struct CGRect)arg1 animation:(_Bool)arg2;
- (unsigned long long)fetchQuickSeekStep;
- (void)setupQuickSeekStep:(unsigned long long)arg1;
- (void)seekToValue:(float)arg1;
- (void)cleanRelatedResource;
- (void)cleanPlayerResource;
- (void)cleanPlayerState;
- (void)resetPreTime;
- (void)resetLoadingPercent;
- (void)setupData;
- (void)resetViewState;
- (void)resetPlayerState;
- (void)setVideoPit;
- (void)changeVolumeValue:(float)arg1;
- (void)resetContentSliderStatus;
- (void)resetTestViewFrame:(struct CGRect)arg1 animation:(_Bool)arg2;
- (void)resetReplayViewFrame:(struct CGRect)arg1 animation:(_Bool)arg2;
- (void)resetLoadingViewFrame:(struct CGRect)arg1 animation:(_Bool)arg2;
- (void)refreshView;
- (void)setupPanelView;
- (void)resetPanelViewWithPanelType:(int)arg1;
- (void)setupPanelViewBlock;
- (void)setupLockView;
- (void)setupTestView;
- (void)setupVolumeView;
- (void)setupControlView;
- (void)setupControlBlock;
- (void)setupHeaderView;
- (void)setupMaskView;
- (void)handleVolumeBrightnessGestureAction:(float)arg1 isLocationOnLeft:(_Bool)arg2;
- (void)setupQuickForwardSeekView;
- (void)setupQuickBackSeekView;
- (unsigned long long)fetchQuickSeekStepForShow;
- (id)productQuickSeekImage:(id)arg1 withText:(id)arg2;
- (id)productImageWithText:(id)arg1 size:(struct CGSize)arg2;
- (void)handleTestBtnAction:(id)arg1;
- (void)handlePlayStatusChanged;
- (void)handlePauseBtnAction:(id)arg1;
- (void)handlePlayBtnAction:(id)arg1;
- (void)handleVolumeDidChangeSliderAction:(id)arg1;
- (void)handleVolumeChangeSliderAction:(id)arg1;
- (void)handleVolumeWillChangeSliderAction:(id)arg1;
- (void)handleReplayBtnAction:(id)arg1;
- (void)hardwareVolumeDidChange:(id)arg1;
- (void)removeNotifications;
- (void)setupNotifications;
- (void)removeAllTimer;
- (void)handleReapeatClarityLoadingTimeOut:(id)arg1;
- (void)handleRepeatClarityLoadingTimer:(id)arg1;
- (void)stopSeekReapeatLoadingTimer;
- (void)handlePercentLoadingTimer:(id)arg1;
- (void)handlePlayerStateTimer:(id)arg1;
- (double)getMediaDuration;
- (void)refreshRepeatClarityLoadingTimer;
- (void)setupRepeatClarityLoadingFinalTimer;
- (void)removeRepeatClarityLoadingFinalTimer;
- (void)repeatRepeatClarityLoadingTimer;
- (void)removeRepeatClarityLoadingTimer;
- (void)removeLoadingPercentTimer;
- (void)resetLoadingPercentTimer:(id)arg1;
- (void)removeControlViewAutoHideTimer;
- (void)resetControlViewAutoHideTimer;
- (void)removePlayerStateObserverTimer;
- (void)resetPlayerStateObserverTimer;
- (void)setupPlayerStateObserverTimer;
- (_Bool)isPlayPauseBtnShowPlayingStatus;
- (_Bool)isVolumeViewShown;
- (_Bool)isSubtitletableviewShown;
- (void)showNetworkErrorView;
- (void)hideStatusNavBar;
- (void)showStatusNavBar;
- (void)hideReplayView;
- (void)showReplayView;
- (void)hidePlayerLoadingView;
- (void)refreshPlayerLoadingView:(id)arg1 subTitle:(id)arg2 message:(id)arg3;
- (void)showPlayerLoadingView:(id)arg1 subTitle:(id)arg2 progressAnimating:(_Bool)arg3 message:(id)arg4 backgroundColor:(id)arg5;
- (void)showLoadingView;
- (void)dismissLoadingView;
- (void)hidePlayerRelatedView;
- (void)showVolumeView;
- (void)showSubtitleTableView;
- (void)hideSubtitleTableView;
- (void)hideVolumeView;
- (void)showPanelView;
- (void)hidePanelView;
- (void)hideDirectlyPlayerRelatedView;
- (void)showDirectlyPlayerRelatedView;
- (void)hideControlView;
- (void)showPlayerRelatedView;
- (void)showControlView;
- (void)enableScreenLock;
- (void)disableScreenLock;
- (float)computePlayerTime:(id)arg1;
- (id)formatPlayerTime:(float)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)init;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (void)dealloc;
- (void)setupInstanceDataAndView:(struct CGRect)arg1 panelView:(int)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

