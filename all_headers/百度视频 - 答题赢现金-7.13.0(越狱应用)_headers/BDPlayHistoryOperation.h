//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

@interface BDPlayHistoryOperation : NSObject
{
}

+ (id)getWatchRecordList;
+ (id)getCompleteWatchRecordListByVideoID:(id)arg1 videoType:(long long)arg2 episodeDesc:(_Bool)arg3;
+ (void)updateRecordCompleteWithVideoIDAsync:(id)arg1 videoType:(long long)arg2 episode:(id)arg3 isComplete:(_Bool)arg4;
+ (int)updateRecordCompleteWithVideoID:(id)arg1 videoType:(long long)arg2 episode:(id)arg3 isComplete:(_Bool)arg4;
+ (void)updateRealWatchTimeWithVideoIDAsync:(id)arg1 videoType:(long long)arg2 episode:(id)arg3 realWatchTime:(double)arg4;
+ (int)updateRealWatchTimeWithVideoID:(id)arg1 videoType:(long long)arg2 episode:(id)arg3 realWatchTime:(double)arg4;
+ (id)getWatchRecordByVideoID:(id)arg1;
+ (id)getWatchRecordByVideoID:(id)arg1 videoType:(long long)arg2 episode:(id)arg3;
+ (id)getWatchRecordListByVideoID:(id)arg1 videoType:(long long)arg2 episodeDesc:(_Bool)arg3;
+ (id)getLatestWatchRecordByVideoID:(id)arg1 videoType:(long long)arg2;
+ (void)getLatestWatchRecordByVideoIDAsync:(id)arg1 videoType:(long long)arg2 completionBlock:(CDUnknownBlockType)arg3;
+ (id)getLatestWatchRecordList;
+ (void)getLatestWatchRecordListAsyncWithCompletionBlock:(CDUnknownBlockType)arg1;
+ (_Bool)deleteWatchRecordByVideoID:(id)arg1;
+ (_Bool)deleteWatchRecordByVideoID:(id)arg1 videoType:(long long)arg2;
+ (_Bool)deleteAllWatchRecord;
+ (_Bool)deleteWatchRecordByID:(long long)arg1;
+ (int)updateWatchTimeAndSiteName:(id)arg1 siteUrl:(id)arg2 playUrl:(id)arg3 byVideoID:(id)arg4 videoType:(long long)arg5 episode:(id)arg6;
+ (void)updateWatchTimeAndSiteNameAsync:(id)arg1 siteUrl:(id)arg2 playUrl:(id)arg3 byVideoID:(id)arg4 videoType:(long long)arg5 episode:(id)arg6;
+ (int)updateWatchedDuration:(float)arg1 videoID:(id)arg2 videoType:(long long)arg3 episode:(id)arg4;
+ (void)updateWatchedDurationAsync:(float)arg1 videoID:(id)arg2 videoType:(long long)arg3 episode:(id)arg4;
+ (int)updateWatchedDuration:(float)arg1 siteName:(id)arg2 siteUrl:(id)arg3 playUrl:(id)arg4 byVideoID:(id)arg5 videoType:(long long)arg6 episode:(id)arg7;
+ (void)updateWatchedDurationAsync:(float)arg1 siteName:(id)arg2 siteUrl:(id)arg3 playUrl:(id)arg4 byVideoID:(id)arg5 videoType:(long long)arg6 episode:(id)arg7;
+ (int)updateisWebPlayWithVideoID:(id)arg1 videoType:(long long)arg2 episode:(id)arg3 isWebPlay:(_Bool)arg4;
+ (int)updateWatchTimeWithVideoID:(id)arg1 videoType:(long long)arg2 episode:(id)arg3;
+ (void)updateWatchTimeWithVideoIDAsync:(id)arg1 videoType:(long long)arg2 episode:(id)arg3;
+ (int)addWatchRecord:(id)arg1;
+ (_Bool)checkVideoIsInWatchRecordByVideoID:(id)arg1 videoType:(long long)arg2 episode:(id)arg3;
+ (void)checkVideoIsInWatchRecordByVideoIDAsync:(id)arg1 videoType:(long long)arg2 episode:(id)arg3 completionBlock:(CDUnknownBlockType)arg4;
+ (int)updateTaskID:(id)arg1 andNewVideoID:(id)arg2 byVideoID:(id)arg3;
+ (int)updateTaskID:(id)arg1 videoID:(id)arg2 videoType:(long long)arg3 episode:(id)arg4;
+ (int)updateTvID:(id)arg1 videoID:(id)arg2 videoType:(long long)arg3 episode:(id)arg4;
+ (_Bool)deleteWatchRecordByTaskID:(id)arg1;
+ (_Bool)addRealWatchTimeColumnInWatchRecord;
+ (_Bool)addisWebPlayColumnInWatchRecord;
+ (_Bool)addTvIDColumnInWatchRecord;
+ (_Bool)addisBDHDColumnInWatchRecord;
+ (_Bool)addTaskIDColumnInWatchRecord;
+ (_Bool)checkIfColumn:(id)arg1 existsInTable:(id)arg2;
+ (void)runInQueue:(CDUnknownBlockType)arg1;
+ (void)initialize;

@end

