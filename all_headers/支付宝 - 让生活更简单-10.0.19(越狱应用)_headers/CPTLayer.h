//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <QuartzCore/CALayer.h>

#import "CPTResponder-Protocol.h"

@class CPTGraph, CPTShadow, NSSet, NSString;
@protocol NSCopying><NSCoding><NSObject;

@interface CPTLayer : CALayer <CPTResponder>
{
    double paddingLeft;
    double paddingTop;
    double paddingRight;
    double paddingBottom;
    _Bool masksToBorder;
    CPTShadow *shadow;
    _Bool renderingRecursively;
    _Bool useFastRendering;
    CPTGraph *graph;
    struct CGPath *outerBorderPath;
    struct CGPath *innerBorderPath;
    id <NSCopying><NSCoding><NSObject> identifier;
}

@property(nonatomic, getter=isRenderingRecursively) _Bool renderingRecursively; // @synthesize renderingRecursively;
@property(copy, nonatomic) id <NSCopying><NSCoding><NSObject> identifier; // @synthesize identifier;
@property(nonatomic) _Bool useFastRendering; // @synthesize useFastRendering;
@property(nonatomic) struct CGPath *innerBorderPath; // @synthesize innerBorderPath;
@property(nonatomic) struct CGPath *outerBorderPath; // @synthesize outerBorderPath;
@property(copy, nonatomic) CPTShadow *shadow; // @synthesize shadow;
@property(nonatomic) _Bool masksToBorder; // @synthesize masksToBorder;
@property(nonatomic) double paddingBottom; // @synthesize paddingBottom;
@property(nonatomic) double paddingRight; // @synthesize paddingRight;
@property(nonatomic) double paddingTop; // @synthesize paddingTop;
@property(nonatomic) double paddingLeft; // @synthesize paddingLeft;
@property(nonatomic) CPTGraph *graph; // @synthesize graph;
- (id)subLayersAtIndex:(unsigned long long)arg1;
@property(readonly, copy) NSString *description;
- (void)setCornerRadius:(double)arg1;
- (void)setAnchorPoint:(struct CGPoint)arg1;
- (struct CGPoint)anchorPoint;
- (void)setBounds:(struct CGRect)arg1;
- (struct CGRect)bounds;
@property double contentsScale; // @dynamic contentsScale;
- (void)setHidden:(_Bool)arg1;
- (void)setPosition:(struct CGPoint)arg1;
- (void)setNeedsDisplay;
- (void)setNeedsLayout;
- (void)applyMaskToContext:(struct CGContext *)arg1;
- (void)applySublayerMaskToContext:(struct CGContext *)arg1 forSublayer:(id)arg2 withOffset:(struct CGPoint)arg3;
@property(readonly, nonatomic) struct CGPath *sublayerMaskingPath; // @dynamic sublayerMaskingPath;
@property(readonly, nonatomic) struct CGPath *maskingPath; // @dynamic maskingPath;
- (void)replaceSublayer:(id)arg1 with:(id)arg2;
- (void)insertSublayer:(id)arg1 above:(id)arg2;
- (void)insertSublayer:(id)arg1 below:(id)arg2;
- (void)insertSublayer:(id)arg1 atIndex:(unsigned int)arg2;
- (void)addSublayer:(id)arg1;
- (void)setSublayers:(id)arg1;
- (void)sublayerMarginLeft:(double *)arg1 top:(double *)arg2 right:(double *)arg3 bottom:(double *)arg4;
@property(readonly) NSSet *sublayersExcludedFromAutomaticLayout; // @dynamic sublayersExcludedFromAutomaticLayout;
- (void)layoutSublayers;
@property(readonly, nonatomic) struct CGSize shadowMargin; // @dynamic shadowMargin;
- (void)pixelAlign;
- (_Bool)pointingDeviceCancelledEvent:(struct UIEvent *)arg1;
- (_Bool)pointingDeviceDraggedEvent:(struct UIEvent *)arg1 atPoint:(struct CGPoint)arg2;
- (_Bool)pointingDeviceUpEvent:(struct UIEvent *)arg1 atPoint:(struct CGPoint)arg2;
- (_Bool)pointingDeviceDownEvent:(struct UIEvent *)arg1 atPoint:(struct CGPoint)arg2;
- (void)layoutAndRenderInContext:(struct CGContext *)arg1;
- (void)applyTransform:(struct CATransform3D)arg1 toContext:(struct CGContext *)arg2;
- (void)recursivelyRenderInContext:(struct CGContext *)arg1;
- (void)renderAsVectorInContext:(struct CGContext *)arg1;
- (void)drawInContext:(struct CGContext *)arg1;
- (id)actionForKey:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)finalize;
- (void)dealloc;
- (id)initWithLayer:(id)arg1;
- (id)init;
- (id)initWithFrame:(struct CGRect)arg1;
- (struct UIImage *)imageOfLayer;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

