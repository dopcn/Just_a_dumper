//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "MTLModel.h"

#import "MTLJSONSerializing-Protocol.h"

@class NSArray, NSDictionary, NSError, NSString;

@interface MAYRequest : MTLModel <MTLJSONSerializing>
{
    _Bool _deliveredOnMainThread;
    NSString *_category;
    long long _method;
    NSString *_host;
    NSString *_path;
    NSDictionary *_queryParams;
    NSDictionary *_bodyParams;
    NSArray *_uploadFiles;
    NSString *_cachePolicy;
    NSString *_modelClass;
    NSString *_keyPath;
    NSError *_networkError;
}

+ (id)requestWithConfigKey:(id)arg1 queryParams:(id)arg2;
+ (id)requestWithConfig:(id)arg1;
+ (id)methodJSONTransformer;
+ (id)JSONKeyPathsByPropertyKey;
+ (_Bool)validQueryKey:(id)arg1;
+ (id)map:(id)arg1;
+ (void)addMapFromHost:(id)arg1 toHost:(id)arg2;
@property(retain, nonatomic) NSError *networkError; // @synthesize networkError=_networkError;
@property(nonatomic) _Bool deliveredOnMainThread; // @synthesize deliveredOnMainThread=_deliveredOnMainThread;
@property(copy, nonatomic) NSString *keyPath; // @synthesize keyPath=_keyPath;
@property(copy, nonatomic) NSString *modelClass; // @synthesize modelClass=_modelClass;
@property(copy, nonatomic) NSString *cachePolicy; // @synthesize cachePolicy=_cachePolicy;
@property(copy, nonatomic) NSArray *uploadFiles; // @synthesize uploadFiles=_uploadFiles;
@property(copy, nonatomic) NSDictionary *bodyParams; // @synthesize bodyParams=_bodyParams;
@property(copy, nonatomic) NSDictionary *queryParams; // @synthesize queryParams=_queryParams;
@property(copy, nonatomic) NSString *path; // @synthesize path=_path;
@property(copy, nonatomic) NSString *host; // @synthesize host=_host;
@property(nonatomic) long long method; // @synthesize method=_method;
@property(copy, nonatomic) NSString *category; // @synthesize category=_category;
- (void).cxx_destruct;
- (void)updateBodyParams:(id)arg1;
- (void)updateBodyValue:(id)arg1 forKey:(id)arg2;
- (void)updateQueryParams:(id)arg1;
- (void)updateQueryValue:(id)arg1 forKey:(id)arg2;
- (id)URLString;
- (id)cachedKeysValueString;
- (id)init;

@end

