//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

@class NSDictionary, NSError, NSMutableString, NSString, NSTimer, NSURL;
@protocol AudioStreamerDelegate;

@interface AudioStreamer : NSObject
{
    unsigned long long proxyType;
    NSString *proxyHost;
    int proxyPort;
    struct __CFReadStream *stream;
    NSTimer *timeout;
    _Bool unscheduled;
    _Bool rescheduled;
    int events;
    struct OpaqueAudioFileStreamID *audioFileStream;
    unsigned long long fileLength;
    unsigned long long dataOffset;
    unsigned long long audioDataByteCount;
    struct OpaqueAudioQueue *audioQueue;
    unsigned int packetBufferSize;
    struct buffer **buffers;
    struct AudioStreamPacketDescription packetDescs[512];
    unsigned int packetsFilled;
    unsigned int bytesFilled;
    unsigned int fillBufferIndex;
    unsigned int buffersUsed;
    _Bool waitingOnBuffer;
    struct queued_vbr_packet *queued_vbr_head;
    struct queued_vbr_packet *queued_vbr_tail;
    struct queued_cbr_packet *queued_cbr_head;
    struct queued_cbr_packet *queued_cbr_tail;
    unsigned long long state_;
    unsigned long long id3ParserState;
    _Bool icyStream;
    _Bool icyChecked;
    _Bool icyHeadersParsed;
    int icyMetaInterval;
    unsigned short icyMetaBytesRemaining;
    int icyDataBytesRead;
    NSMutableString *icyMetadata;
    double icyBitrate;
    _Bool discontinuous;
    unsigned long long seekByteOffset;
    _Bool seekable;
    double seekTime;
    _Bool seeking;
    double lastProgress;
    unsigned int processedPacketsCount;
    unsigned long long processedPacketsSizeTotal;
    _Bool bitrateNotification;
    _Bool isParsing;
    unsigned long long totalAudioPackets;
    _Bool vbr;
    _Bool didConnect;
    _Bool queuePaused;
    _Bool bitrateEstimated;
    _Bool defaultBufferSizeUsed;
    unsigned long long audioBytesReceived;
    unsigned long long audioPacketsReceived;
    _Bool _bufferInfinite;
    unsigned int _bufferCount;
    unsigned int _bufferSize;
    unsigned int _bufferFillCountToStart;
    unsigned int _fileType;
    int _timeoutInterval;
    float _playbackRate;
    id <AudioStreamerDelegate> _delegate;
    NSError *_error;
    NSError *_networkError;
    NSDictionary *_httpHeaders;
    NSURL *_url;
    NSString *_currentSong;
    unsigned long long _logLevel;
    CDUnknownBlockType _logHandler;
    struct AudioStreamBasicDescription _streamDescription;
}

+ (unsigned int)hintForMIMEType:(id)arg1;
+ (unsigned int)hintForFileExtension:(id)arg1;
+ (id)descriptionForAQErrorCode:(int)arg1;
+ (id)descriptionForAFSErrorCode:(int)arg1;
+ (id)descriptionForASErrorCode:(long long)arg1;
+ (id)stringForErrorCode:(long long)arg1;
+ (id)streamWithURL:(id)arg1;
@property(copy) CDUnknownBlockType logHandler; // @synthesize logHandler=_logHandler;
@property unsigned long long logLevel; // @synthesize logLevel=_logLevel;
@property float playbackRate; // @synthesize playbackRate=_playbackRate;
@property int timeoutInterval; // @synthesize timeoutInterval=_timeoutInterval;
@property _Bool bufferInfinite; // @synthesize bufferInfinite=_bufferInfinite;
@property unsigned int fileType; // @synthesize fileType=_fileType;
@property unsigned int bufferFillCountToStart; // @synthesize bufferFillCountToStart=_bufferFillCountToStart;
@property unsigned int bufferSize; // @synthesize bufferSize=_bufferSize;
@property unsigned int bufferCount; // @synthesize bufferCount=_bufferCount;
@property(readonly) NSString *currentSong; // @synthesize currentSong=_currentSong;
@property(readonly) struct AudioStreamBasicDescription streamDescription; // @synthesize streamDescription=_streamDescription;
@property(readonly) NSURL *url; // @synthesize url=_url;
@property(readonly) NSDictionary *httpHeaders; // @synthesize httpHeaders=_httpHeaders;
@property(readonly) NSError *networkError; // @synthesize networkError=_networkError;
@property(readonly) NSError *error; // @synthesize error=_error;
@property(nonatomic) __weak id <AudioStreamerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)closeFileStream;
- (void)closeReadStream;
- (void)handlePropertyChangeForQueue:(struct OpaqueAudioQueue *)arg1 propertyID:(unsigned int)arg2;
- (void)handleBufferCompleteForQueue:(struct OpaqueAudioQueue *)arg1 buffer:(struct AudioQueueBuffer *)arg2;
- (void)enqueueCachedData;
- (int)handleCBRPacket:(const void *)arg1 byteSize:(unsigned int)arg2 copySize:(unsigned long long *)arg3;
- (int)handleVBRPacket:(const void *)arg1 desc:(struct AudioStreamPacketDescription *)arg2;
- (void)handleAudioPackets:(const void *)arg1 numberBytes:(unsigned int)arg2 numberPackets:(unsigned int)arg3 packetDescriptions:(struct AudioStreamPacketDescription *)arg4;
- (void)handlePropertyChangeForFileStream:(struct OpaqueAudioFileStreamID *)arg1 fileStreamPropertyID:(unsigned int)arg2 ioFlags:(unsigned int *)arg3;
- (_Bool)startAudioQueue;
- (void)createQueue;
- (int)enqueueBuffer;
- (void)parseID3TagsInBytes:(char *)arg1 length:(long long)arg2;
- (void)handleReadFromStream:(struct __CFReadStream *)arg1 eventType:(unsigned long long)arg2;
- (_Bool)openReadStream;
- (void)checkTimeout;
- (void)notifyStateChange;
- (void)setState:(unsigned long long)arg1 shouldNotify:(_Bool)arg2;
- (void)setState:(unsigned long long)arg1;
- (void)failWithErrorCode:(long long)arg1 reason:(id)arg2 shouldStop:(_Bool)arg3;
- (void)failWithErrorCode:(long long)arg1 reason:(id)arg2;
@property(readonly) long long errorCode;
- (_Bool)fadeOutDuration:(float)arg1;
- (_Bool)fadeInDuration:(float)arg1;
- (_Bool)fadeTo:(float)arg1 duration:(float)arg2;
- (_Bool)duration:(double *)arg1;
- (_Bool)calculatedBitRate:(double *)arg1;
- (_Bool)bufferProgress:(double *)arg1;
- (_Bool)progress:(double *)arg1;
- (_Bool)seekByDelta:(double)arg1;
- (_Bool)seekToTime:(double)arg1;
- (void)stop;
- (_Bool)play;
- (_Bool)pause;
- (_Bool)start;
@property(readonly, nonatomic, getter=isSeekable) _Bool seekable;
@property(readonly, nonatomic) long long doneReason;
@property(readonly, nonatomic, getter=isDone) _Bool done;
@property(readonly, nonatomic, getter=isWaiting) _Bool waiting;
@property(readonly, nonatomic, getter=isPaused) _Bool paused;
@property(readonly, nonatomic, getter=isPlaying) _Bool playing;
- (_Bool)setVolume:(float)arg1;
- (void)setSOCKSProxy:(id)arg1 port:(int)arg2;
- (void)setHTTPProxy:(id)arg1 port:(int)arg2;
- (void)dealloc;
- (id)initWithURL:(id)arg1;

// Remaining properties
@property unsigned int bufferCnt; // @dynamic bufferCnt;

@end

