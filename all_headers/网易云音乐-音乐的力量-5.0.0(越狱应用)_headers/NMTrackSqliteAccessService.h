//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@interface NMTrackSqliteAccessService : NSObject
{
}

+ (id)sharedInstance;
- (_Bool)recoverDownloadPrograms:(id)arg1 databaseQueue:(id)arg2;
- (_Bool)recoverDownloadSongs:(id)arg1 databaseQueue:(id)arg2;
- (void)cleanAllUnDownloadSongsAndPrograms:(id)arg1;
- (void)clearAllTrackVersion:(id)arg1;
- (_Bool)userHasDownloadedPrograms:(id)arg1;
- (_Bool)userHasDownloadedSongs:(id)arg1;
- (_Bool)hasDownloadSong:(id)arg1 databaseQueue:(id)arg2;
- (long long)getProgramState:(id)arg1 databaseQueue:(id)arg2;
- (long long)getSongState:(id)arg1 databaseQueue:(id)arg2;
- (unsigned long long)totalFailedDownloadDjProgramCount:(id)arg1;
- (unsigned long long)totalManualPausedDjProgramCount:(id)arg1;
- (unsigned long long)totalDownloadingDjProgramCount:(id)arg1;
- (unsigned long long)totalDownloadingSongCount:(id)arg1;
- (unsigned long long)totalSuccessDownloadDjCount:(id)arg1;
- (unsigned long long)totalFailedDownloadSongCount:(id)arg1;
- (unsigned long long)totalManualPausedSongCount:(id)arg1;
- (unsigned long long)totalDownloadSongCount:(id)arg1;
- (unsigned long long)totalSuccessDownloadSongCount:(id)arg1;
- (id)calcDownloadStatisticInDatabase:(id)arg1 needDetail:(_Bool)arg2;
- (id)calcDownloadStatistic:(id)arg1 needDetail:(_Bool)arg2;
- (id)calcDownloadStatistic:(id)arg1;
- (id)calcDownloadStatusDetail:(id)arg1 databaseQueue:(id)arg2;
- (id)getDownloadSongPath:(id)arg1 databaseQueue:(id)arg2;
- (id)getDownloadedSongInfo:(id)arg1 databaseQueue:(id)arg2;
- (id)getAllDownloadedDj:(id)arg1;
- (unsigned long long)getAllDjCount:(id)arg1;
- (id)getUnDownloadSongsAndDjPrograms:(id)arg1;
- (id)getUnDownloadSongsAndDjForAuto:(id)arg1;
- (unsigned long long)getAllDownloadingSongCount:(id)arg1;
- (id)getDownloadedSong:(id)arg1 withSql:(id)arg2;
- (id)getAllDownloadSongs:(id)arg1 downloadDone:(_Bool)arg2 ascending:(_Bool)arg3;
- (id)getAllDownloadingSongs:(id)arg1;
- (id)getAllDownloadedSongs:(id)arg1;
- (id)getDownloadedSongsTop:(id)arg1 withCount:(long long)arg2;
- (_Bool)togglePauseDownloadSongs:(id)arg1 isPaused:(_Bool)arg2 databaseQueue:(id)arg3;
- (_Bool)togglePauseDownloadPrograms:(id)arg1 isPaused:(_Bool)arg2 databaseQueue:(id)arg3;
- (_Bool)togglePauseDownloadProgram:(id)arg1 isPaused:(_Bool)arg2 databaseQueue:(id)arg3;
- (void)downloadProgramComplete:(id)arg1 isSucc:(_Bool)arg2 databaseQueue:(id)arg3;
- (void)downloadSongComplete:(id)arg1 isSucc:(_Bool)arg2 databaseQueue:(id)arg3;
- (void)updateProgramDownloadUrlInfo:(id)arg1 database:(id)arg2;
- (void)updateProgramDownloadUrlInfo:(id)arg1 databaseQueue:(id)arg2;
- (void)updateDownloadUrlInfo:(id)arg1 database:(id)arg2;
- (void)updateDownloadUrlInfo:(id)arg1 databaseQueue:(id)arg2;
- (unsigned long long)totalDownloadCount:(id)arg1;
- (_Bool)albumCoverIsShared:(id)arg1 database:(id)arg2;
- (_Bool)removeLocalFile:(id)arg1 bitrate:(long long)arg2 type:(unsigned long long)arg3;
- (void)removeAlbumImageAfterDeleteSong:(id)arg1;
- (void)removeMusicFile:(id)arg1 database:(id)arg2;
- (id)getDjProgramByProgramId:(id)arg1 database:(id)arg2;
- (id)getProgramArrayByProgramIds:(id)arg1 database:(id)arg2;
- (id)getSongObjBySongId:(id)arg1 database:(id)arg2;
- (id)getSongArrayBySongIds:(id)arg1 database:(id)arg2;
- (void)updateSongStateForDownloading:(id)arg1 database:(id)arg2;
- (id)getExistedProgramSongIdsByProgramSongIds:(id)arg1 databaseQueue:(id)arg2;
- (id)getExistedSongIdsBySongIds:(id)arg1 databaseQueue:(id)arg2;
- (void)addDownloadedSongsToPlaylist:(id)arg1 inPlaylist:(id)arg2 databaseQueue:(id)arg3;
- (void)deleteDownloadProgramsWithIds:(id)arg1 databaseQueue:(id)arg2;
- (void)deleteDownloadSongsWithIds:(id)arg1 databaseQueue:(id)arg2;
- (_Bool)addDownloadSongs:(id)arg1 sourcePlaylistId:(id)arg2 databaseQueue:(id)arg3;
- (_Bool)addDownloadPrograms:(id)arg1 databaseQueue:(id)arg2;
- (void)_insertTrack:(id)arg1 database:(id)arg2 ignoreIfExists:(_Bool)arg3;
- (id)loadAllTrackIdsByPlaylistId:(id)arg1 database:(id)arg2;
- (id)loadTracksRawData:(id)arg1 database:(id)arg2;
- (id)loadTracksRawData:(id)arg1 databaseQueue:(id)arg2;
- (id)loadTracksOnly:(id)arg1 database:(id)arg2;
- (id)loadTracks:(id)arg1 database:(id)arg2;
- (id)loadTracks:(id)arg1 databaseQueue:(id)arg2;
- (void)addOrIgnoreTracks:(id)arg1 database:(id)arg2;
- (void)addOrUpdateTracks:(id)arg1 database:(id)arg2;
- (void)addOrUpdateTracks:(id)arg1 databaseQueue:(id)arg2;
- (void)batchUpdateSongClientEq:(id)arg1 databaseQueue:(id)arg2;
- (void)updateSongClientEq:(id)arg1 databaseQueue:(id)arg2;

@end

