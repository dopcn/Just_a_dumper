//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

#import "DownloadTask-Protocol.h"
#import "DownloadTaskDelegate-Protocol.h"
#import "NSCoding-Protocol.h"

@class DownErrorInfo, DownloadGlobalSetting, NSDate, NSMutableArray, NSMutableDictionary, NSString, NSTimer;
@protocol DownloadTaskDelegate;

@interface DownloadM3u8Task : NSObject <DownloadTask, NSCoding, DownloadTaskDelegate>
{
    _Bool m_isNetworkLimited;
    int m_httpStatusCode;
    NSDate *m_startDownloadDate;
    DownErrorInfo *m_downloadErrorInfo;
    NSString *m_cookie;
    NSString *m_mimeType;
    NSString *m_segmentPath;
    double m_elapsedSeconds;
    unsigned long long m_finishedSize;
    double m_lastSaveTime;
    unsigned long long m_fileSize;
    _Bool m_isTasksStopping;
    DownloadGlobalSetting *m_downloadSetting;
    int m_retryTime;
    unsigned long long m_lastFileSize;
    double m_lastCalcSpeedTime;
    NSString *m_extensionUA;
    unsigned long long m_http503Count;
    unsigned long long m_http404TSCount;
    NSTimer *m_failedRetryTimer;
    _Bool m_shouldDeleteFile;
    _Bool m_isSaveRelativeFilePath;
    _Bool _isResetRequestURL;
    _Bool _isM3U8IndexFileExist;
    _Bool shouldDisableMultiRange;
    _Bool m_isFailedRetryWaiting;
    _Bool m_isBeginDownloadData;
    unsigned int m_taskID;
    unsigned int m_status;
    int m_errorCode;
    int m_fileType;
    int _contentLength;
    float lastSpeed;
    int m_taskRetryMaxCount;
    int m_taskCurrentRetriedTimes;
    int m_netTypeBeforeRetry;
    id <DownloadTaskDelegate> delegate;
    NSString *m_fileName;
    NSString *m_orignalFileName;
    NSString *m_saveDir;
    NSDate *m_addedDate;
    NSDate *m_finishedDate;
    NSString *m_requestUrl;
    NSString *m_originalRequestUrl;
    NSString *m_referenceUrl;
    NSMutableDictionary *m_extInfo;
    NSString *_contentTypeM3u8;
    NSString *_contentType;
    NSMutableArray *_tsURLs;
    NSMutableArray *_downloadingTasks;
    NSMutableArray *_unstartedTSURLIndexs;
    NSString *m_displayName;
}

@property(nonatomic) int netTypeBeforeRetry; // @synthesize netTypeBeforeRetry=m_netTypeBeforeRetry;
@property(readonly, nonatomic) _Bool isBeginDownloadData; // @synthesize isBeginDownloadData=m_isBeginDownloadData;
@property(nonatomic) int taskCurrentRetriedTimes; // @synthesize taskCurrentRetriedTimes=m_taskCurrentRetriedTimes;
@property(nonatomic) int taskRetryMaxCount; // @synthesize taskRetryMaxCount=m_taskRetryMaxCount;
@property(nonatomic) _Bool isFailedRetryWaiting; // @synthesize isFailedRetryWaiting=m_isFailedRetryWaiting;
@property(nonatomic) _Bool shouldDisableMultiRange; // @synthesize shouldDisableMultiRange;
@property(readonly, nonatomic) DownErrorInfo *downloadErrorInfo; // @synthesize downloadErrorInfo=m_downloadErrorInfo;
@property(nonatomic) _Bool isM3U8IndexFileExist; // @synthesize isM3U8IndexFileExist=_isM3U8IndexFileExist;
@property(nonatomic) _Bool isResetRequestURL; // @synthesize isResetRequestURL=_isResetRequestURL;
@property(retain, nonatomic) NSMutableArray *unstartedTSURLIndexs; // @synthesize unstartedTSURLIndexs=_unstartedTSURLIndexs;
@property(retain, nonatomic) NSMutableArray *downloadingTasks; // @synthesize downloadingTasks=_downloadingTasks;
@property(retain, nonatomic) NSMutableArray *tsURLs; // @synthesize tsURLs=_tsURLs;
@property(nonatomic) float lastSpeed; // @synthesize lastSpeed;
@property(nonatomic) int contentLength; // @synthesize contentLength=_contentLength;
@property(retain, nonatomic) NSString *contentType; // @synthesize contentType=_contentType;
@property(retain, nonatomic) NSString *contentTypeM3u8; // @synthesize contentTypeM3u8=_contentTypeM3u8;
@property(retain, nonatomic) NSMutableDictionary *extInfo; // @synthesize extInfo=m_extInfo;
@property(readonly, nonatomic) _Bool isSaveRelativeFilePath; // @synthesize isSaveRelativeFilePath=m_isSaveRelativeFilePath;
@property(readonly, copy, nonatomic) NSString *cookie; // @synthesize cookie=m_cookie;
@property(copy, nonatomic) NSString *referenceUrl; // @synthesize referenceUrl=m_referenceUrl;
@property _Bool shouldDeleteFile; // @synthesize shouldDeleteFile=m_shouldDeleteFile;
@property(readonly, copy, nonatomic) NSString *originalRequestUrl; // @synthesize originalRequestUrl=m_originalRequestUrl;
@property(copy, nonatomic) NSString *requestUrl; // @synthesize requestUrl=m_requestUrl;
@property(readonly, retain) NSDate *finishedDate; // @synthesize finishedDate=m_finishedDate;
@property(readonly, nonatomic) NSDate *addedDate; // @synthesize addedDate=m_addedDate;
@property(readonly, nonatomic) int fileType; // @synthesize fileType=m_fileType;
@property(readonly, nonatomic) int errorCode; // @synthesize errorCode=m_errorCode;
@property(readonly, nonatomic) int httpStatusCode; // @synthesize httpStatusCode=m_httpStatusCode;
@property(nonatomic) unsigned int status; // @synthesize status=m_status;
@property(readonly, nonatomic) unsigned int taskID; // @synthesize taskID=m_taskID;
@property(readonly, retain, nonatomic) NSString *saveDir; // @synthesize saveDir=m_saveDir;
@property id <DownloadTaskDelegate> delegate; // @synthesize delegate;
- (_Bool)isDisconnectCauseFailed;
- (void)addDownloadTaskForMainM3U8;
- (void)removeAllDownloadedSegments;
- (void)resetRefereURL:(id)arg1;
- (void)resetRequestURL:(id)arg1;
- (void)setMaxSegmentSize:(unsigned long long)arg1;
- (id)getStartDownloadDate;
- (id)getContentType;
- (int)getErrorCode;
- (id)getOrignalFileName;
- (id)getRequestURL;
- (void)saveURLDownloadTaskFailed:(id)arg1;
- (void)loadURLsInfo:(id)arg1;
- (void)setUnstartedIndexs:(id)arg1;
- (void)deleteTempFile;
- (void)savetsURLs;
- (void)loadTsURLs;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (_Bool)shouldContinueRetryTask:(id)arg1;
@property(readonly, nonatomic) NSString *fileMD5;
- (id)getFilePathFromObserverWithFilename:(id)arg1 forTask:(id)arg2 byRedirect:(_Bool)arg3;
- (void)reportTaskStop:(id)arg1;
- (void)reportTaskStart:(id)arg1;
- (void)reportFileNameChangedFromTask:(id)arg1;
- (id)XUAgent;
- (id)userAgent;
- (void)setCurFileName:(id)arg1;
- (_Bool)resetSavePath:(id)arg1 isForce:(_Bool)arg2;
- (void)setRelativeSaveDir:(id)arg1;
@property(readonly, nonatomic) DownloadGlobalSetting *setting;
- (void)tryReleaseFailedRetryTimer;
- (void)retryFailed:(id)arg1;
- (void)onFailedRetryDelay:(long long)arg1;
- (void)onNetworkLimited;
- (void)onResumeTask;
- (void)reportOneSegmentDownloadedFromTask:(id)arg1;
- (void)reportStartReceiveDataFromTask:(id)arg1;
- (void)reportDataReceivedFromTask:(id)arg1;
- (void)reportCompletionFromTask:(id)arg1;
- (void)startNextTSTasks;
- (_Bool)shouldAbortTaskForFailed;
- (void)sycnErrorFromTask:(id)arg1;
- (void)processTaskFailed:(id)arg1;
- (_Bool)isTaskStillRunning;
@property(readonly, copy, nonatomic) NSString *orignalFileName; // @synthesize orignalFileName=m_orignalFileName;
@property(readonly, copy, nonatomic) NSString *dispositionFileName;
@property(readonly, nonatomic) float speed;
@property(readonly, nonatomic) unsigned long long downloadedSize;
@property(readonly, nonatomic) unsigned long long totalSize;
@property(readonly, nonatomic) unsigned int finishedPercentage;
@property(readonly, nonatomic) float progress;
@property(readonly, nonatomic) unsigned int remainSeconds;
@property(readonly, nonatomic) unsigned int elapsedSeconds;
@property(readonly, nonatomic) NSString *fullPath;
@property(readonly, retain, nonatomic) NSString *saveFullDir;
- (void)cancelAndShouldDeleteFile:(_Bool)arg1;
- (_Bool)deleteFile;
- (_Bool)renameFile:(id)arg1;
- (void)stop;
- (void)retryAllTasks;
- (void)reportTaskStartToObserver;
- (void)start;
- (void)add404TSWithTask:(id)arg1;
- (unsigned long long)getMaxConcurrentTaskCount;
- (id)generateNoRepeatDirectoryName:(id)arg1 atPath:(id)arg2;
@property(readonly, nonatomic) NSString *specialIconKeyPath;
@property(copy) NSString *fileName; // @synthesize fileName=m_fileName;
@property(retain, nonatomic) NSString *displayName; // @synthesize displayName=m_displayName;
- (void)resetTaskID:(unsigned int)arg1;
- (void)dealloc;
- (id)initWithRequestInfo:(id)arg1 delegate:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

