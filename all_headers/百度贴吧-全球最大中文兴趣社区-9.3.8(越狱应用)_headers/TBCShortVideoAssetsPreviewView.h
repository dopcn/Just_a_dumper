//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <UIKit/UIView.h>

@class AVAsset, AVAudioPlayer, AVPlayerLayer, AVQueuePlayer, NSString, PHAsset, TBCShortVideoAssetsManager, UIActivityIndicatorView, UIImageView;
@protocol TBCShortVideoAssetsPreviewViewDelegate;

@interface TBCShortVideoAssetsPreviewView : UIView
{
    id <TBCShortVideoAssetsPreviewViewDelegate> _delegate;
    PHAsset *_asset;
    double _playbackRate;
    AVAsset *_currentAVAsset;
    AVAsset *_playingAVAsset;
    TBCShortVideoAssetsManager *_assetsManager;
    NSString *_assetIdentifier;
    UIImageView *_previewImageView;
    AVQueuePlayer *_player;
    AVPlayerLayer *_playerLayer;
    UIActivityIndicatorView *_previewIndicator;
    AVAudioPlayer *_audioPlayer;
}

@property(retain, nonatomic) AVAudioPlayer *audioPlayer; // @synthesize audioPlayer=_audioPlayer;
@property(retain, nonatomic) UIActivityIndicatorView *previewIndicator; // @synthesize previewIndicator=_previewIndicator;
@property(retain, nonatomic) AVPlayerLayer *playerLayer; // @synthesize playerLayer=_playerLayer;
@property(retain, nonatomic) AVQueuePlayer *player; // @synthesize player=_player;
@property(retain, nonatomic) UIImageView *previewImageView; // @synthesize previewImageView=_previewImageView;
@property(retain, nonatomic) NSString *assetIdentifier; // @synthesize assetIdentifier=_assetIdentifier;
@property(retain, nonatomic) TBCShortVideoAssetsManager *assetsManager; // @synthesize assetsManager=_assetsManager;
@property(retain, nonatomic) AVAsset *playingAVAsset; // @synthesize playingAVAsset=_playingAVAsset;
@property(retain, nonatomic) AVAsset *currentAVAsset; // @synthesize currentAVAsset=_currentAVAsset;
@property(nonatomic) double playbackRate; // @synthesize playbackRate=_playbackRate;
@property(retain, nonatomic) PHAsset *asset; // @synthesize asset=_asset;
@property(nonatomic) __weak id <TBCShortVideoAssetsPreviewViewDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (_Bool)shouldPlayCurrentAsset;
- (void)delayAnimateIndicatorForAsset:(id)arg1;
- (void)delayRemoveHolder:(CDUnknownBlockType)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)playerItemDidPlayToEndTime:(id)arg1;
- (void)removeObserversOfPlayerItem:(id)arg1;
- (void)addObserverToPlayerItem:(id)arg1;
- (void)restart;
- (void)clearPlayer;
- (void)addPlayerLayer;
- (void)playWithAVAsset:(id)arg1;
- (void)playWithItem:(id)arg1;
- (void)previewVideo:(id)arg1;
- (void)clearImage;
- (void)previewImage:(id)arg1 needClearPreview:(_Bool)arg2;
- (void)previewImage:(id)arg1;
- (void)previewLoaded:(id)arg1;
- (void)previewFailed:(id)arg1;
- (void)clearPreview;
- (void)updatePreviewOfAsset:(id)arg1;
- (void)clear;
- (void)stop;
- (void)start;
- (void)setFrame:(struct CGRect)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

