//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

@class NSDictionary, NSLock, NSMutableDictionary, NSString, QNDnsManager, Scheduler;

@interface PLSpeedMeasure : NSObject
{
    _Bool enable;
    _Bool _enableFlag;
    _Bool _running;
    NSMutableDictionary *_cnames;
    unsigned long long _ttl;
    NSMutableDictionary *_addresses;
    NSLock *_lock;
    NSLock *_runningLock;
    NSString *_previousIp;
    NSDictionary *_lastTimes;
    Scheduler *_scheduler;
    NSString *_publishUrl;
    QNDnsManager *_dns;
    QNDnsManager *_defaultDns;
}

+ (id)localIp;
@property(retain) QNDnsManager *defaultDns; // @synthesize defaultDns=_defaultDns;
@property(retain, nonatomic) QNDnsManager *dns; // @synthesize dns=_dns;
@property(retain) NSString *publishUrl; // @synthesize publishUrl=_publishUrl;
@property(retain) Scheduler *scheduler; // @synthesize scheduler=_scheduler;
@property(retain) NSDictionary *lastTimes; // @synthesize lastTimes=_lastTimes;
@property(retain) NSString *previousIp; // @synthesize previousIp=_previousIp;
@property _Bool running; // @synthesize running=_running;
@property _Bool enableFlag; // @synthesize enableFlag=_enableFlag;
@property(retain) NSLock *runningLock; // @synthesize runningLock=_runningLock;
@property(retain) NSLock *lock; // @synthesize lock=_lock;
@property(retain) NSMutableDictionary *addresses; // @synthesize addresses=_addresses;
@property unsigned long long ttl; // @synthesize ttl=_ttl;
@property(retain) NSMutableDictionary *cnames; // @synthesize cnames=_cnames;
@property(getter=isEnable, setter=setEnable:) _Bool enable; // @synthesize enable;
- (void).cxx_destruct;
- (void)sendRequest:(id)arg1 data:(id)arg2 callback:(CDUnknownBlockType)arg3;
- (id)fast:(id)arg1 index:(unsigned long long)arg2;
- (void)setDomain:(id)arg1 cnames:(id)arg2;
- (void)enable:(_Bool)arg1;
- (void)runTask:(id)arg1;
- (void)sortByIps:(id)arg1 addresses:(id)arg2 for:(id)arg3;
- (void)query:(id)arg1 results:(id)arg2;
- (void)setResult:(id)arg1 for:(id)arg2;
- (id)buildQuery:(id)arg1;
- (void)run:(id)arg1;
- (id)getIps:(id)arg1;
- (id)httpMeasureIp:(id)arg1;
- (id)httpMeasure:(id)arg1;
- (void)start;
- (id)init;

@end

