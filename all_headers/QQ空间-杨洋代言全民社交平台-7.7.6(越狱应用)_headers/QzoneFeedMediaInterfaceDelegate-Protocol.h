//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "NSObject-Protocol.h"

@class NSData, NSDictionary, NSObject, NSString, NSTimer, QZMusicInfo, QzoneFeedVideo, UIImage, UIImageView, UIView;
@protocol QzoneLibPlayAudioInterfaceDelegate;

@protocol QzoneFeedMediaInterfaceDelegate <NSObject>
- (_Bool)isNetworkChangeToNotWiFi;
- (void)startHttpServer;
- (_Bool)isHttpServerRunning;
- (UIImage *)firstFrameWithURL:(NSString *)arg1;
- (_Bool)downloadFileWithUrl:(NSString *)arg1 storePath:(NSString *)arg2 onSuccess:(void (^)(NSString *, NSString *, double))arg3 onFail:(void (^)(NSString *, NSString *, double))arg4 onProgress:(void (^)(NSString *, NSString *, double))arg5;
- (NSString *)cacheFileLocalUrlWithFileName:(NSString *)arg1;
- (NSTimer *)weakTimerWithTimeInterval:(double)arg1 target:(id)arg2 selector:(SEL)arg3 userInfo:(id)arg4 repeats:(_Bool)arg5;
- (void)doLikeAnimationInView:(UIView *)arg1 colorNumb:(unsigned long long)arg2 imageType:(long long)arg3;
- (long long)maxShowPreventComplaintTimes;
- (_Bool)releasePlayerResourceInBackground;
- (NSString *)videoBufferConfigure;
- (NSDictionary *)videoErrorDesc;
- (_Bool)videoIsInQQAudioChat;
- (_Bool)videoUrlIsEqual:(NSString *)arg1 toURL:(NSString *)arg2;
- (NSString *)videoCacheDirectory;
- (NSString *)videoCacheDirectoryByUrl:(NSString *)arg1 vid:(NSString *)arg2;
- (_Bool)isAutoPlayVideo:(QzoneFeedVideo *)arg1;
- (NSObject<QzoneLibPlayAudioInterfaceDelegate> *)playAudioInstance;
- (void)resumeMusic;
- (void)pauseMusic;
- (_Bool)isPausePlayingMusic;
- (_Bool)isPlayingMusic;
- (QZMusicInfo *)getCurrentPlayingSongInfo;
- (_Bool)isBgAudioTempList;
- (void)startPlayUrl:(NSString *)arg1 pageUrl:(NSString *)arg2 title:(NSString *)arg3 author:(NSString *)arg4;
- (void)startPlayTempSong:(QZMusicInfo *)arg1;
- (void)pausePlaying;
- (_Bool)judgeIsCurrentTemporaryPlayingUrl:(NSString *)arg1;
- (_Bool)judgeIsCurrentTemporaryPlayingSong:(long long)arg1;
- (_Bool)startLoadEmotionForView:(UIImageView *)arg1 url:(NSString *)arg2;
- (_Bool)isLocalSourceEmotionGif:(NSString *)arg1;
- (_Bool)tryLoadEmotionFirstFrameGif:(NSString *)arg1 imageview:(UIImageView *)arg2;
- (void)cleanCacheForUrl:(NSString *)arg1;
- (void)addQQDecode:(id)arg1 url:(NSString *)arg2 data:(NSData *)arg3 param:(NSDictionary *)arg4;
- (void)stopGIF;
- (void)cancelAllOperation;
- (void)updatePlaying:(double)arg1 forwardPlay:(_Bool)arg2 url:(NSString *)arg3;
- (long long)frameCountOfGif:(NSString *)arg1;
- (void)addDecode:(id)arg1 url:(NSString *)arg2 data:(NSData *)arg3 param:(NSDictionary *)arg4;
- (void)requestEmotionImageWithURL:(NSString *)arg1 target:(id)arg2 succBlock:(void (^)(NSData *, UIImage *, NSDictionary *))arg3;
- (void)removeDecode:(id)arg1 url:(NSString *)arg2;
- (void)firstFrameWithURL:(NSString *)arg1 viewSize:(struct CGSize)arg2 completion:(void (^)(UIImage *, NSString *))arg3;
- (UIImage *)firstFrameWithURL:(NSString *)arg1 viewSize:(struct CGSize)arg2;
- (_Bool)isGifUrlPath:(NSString *)arg1;
@end

