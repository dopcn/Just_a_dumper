//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

@class NSString;
@protocol QLSDownloadInitializeDelegate;

@interface TVKDownloadManager : NSObject
{
    _Bool _isBackground;
    _Bool _isBackgroundTaskInvalid;
    _Bool _initialized;
    _Bool _suspending;
    _Bool _suspendWhenBackgroudInvalid;
    _Bool _suspendWhenBattaryLow;
    _Bool _isNetworkPaused;
    int _maxActiveTaskCount;
    NSString *_downloadRootDirectory;
    id <QLSDownloadInitializeDelegate> _delegate;
    NSString *_downloadListFile;
    NSString *_cachedJSONDirectory;
}

+ (id)sharedInstance;
@property(retain, nonatomic) NSString *cachedJSONDirectory; // @synthesize cachedJSONDirectory=_cachedJSONDirectory;
@property(retain, nonatomic) NSString *downloadListFile; // @synthesize downloadListFile=_downloadListFile;
@property(nonatomic) id <QLSDownloadInitializeDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) NSString *downloadRootDirectory; // @synthesize downloadRootDirectory=_downloadRootDirectory;
@property(nonatomic) _Bool isBackgroundTaskInvalid; // @synthesize isBackgroundTaskInvalid=_isBackgroundTaskInvalid;
@property(nonatomic) _Bool isBackground; // @synthesize isBackground=_isBackground;
- (void)didInitialized;
@property(readonly, nonatomic) NSString *version;
@property(nonatomic) int maxActiveTaskCount; // @synthesize maxActiveTaskCount=_maxActiveTaskCount;
@property(nonatomic) _Bool isNetworkPaused; // @synthesize isNetworkPaused=_isNetworkPaused;
@property _Bool suspendWhenBattaryLow; // @synthesize suspendWhenBattaryLow=_suspendWhenBattaryLow;
@property _Bool suspendWhenBackgroudInvalid; // @synthesize suspendWhenBackgroudInvalid=_suspendWhenBackgroudInvalid;
@property(readonly) _Bool suspending; // @synthesize suspending=_suspending;
@property(readonly) _Bool initialized; // @synthesize initialized=_initialized;
- (unsigned long long)getDownloadSpeed;
- (void)serializeToFile;
- (void)set3GDownloadFirstAutoPause:(_Bool)arg1;
- (void)set3GDownloadFirstNotice:(_Bool)arg1;
- (void)set3GDownload:(_Bool)arg1;
- (unsigned long long)getDownloadResolutionWithVid:(id)arg1 coverID:(id)arg2;
- (unsigned long long)getDownloadFolderSize;
- (unsigned long long)getFinishedTasksTotalSize;
- (_Bool)isReadyForPlayWithVideoID:(id)arg1;
- (id)getAllTaskList;
- (id)getUnfinishedTaskList;
- (id)getFinishedTaskList;
- (unsigned long long)getUnfinishedTaskCount;
- (unsigned long long)getTaskCount;
- (void)setResolutionSetting:(int)arg1;
- (int)getResolutionSetting;
- (unsigned long long)resolutionWithSetting:(int)arg1;
- (unsigned long long)defaultResolution;
- (id)getDirectoryDataPath;
- (id)downloadDirectory:(id)arg1;
- (void)setDownloadDirectory:(id)arg1 forMovieid:(id)arg2;
- (_Bool)isRunning;
- (_Bool)isDownloading;
- (id)getCurrentTask;
- (id)getTaskWithVideoID:(id)arg1;
- (id)getDownloadBasicInfoWithVideoID:(id)arg1 andTitle:(id)arg2;
- (_Bool)hasEpisodesForTitles:(id)arg1;
- (int)downloadVideoWithVideoID:(id)arg1 andTitle:(id)arg2 andObserver:(id)arg3 andEduEXT:(id)arg4;
- (int)downloadVideoWithVideoID:(id)arg1 andTitle:(id)arg2 andObserver:(id)arg3;
- (int)downloadVideoWithVideoID:(id)arg1 andTitle:(id)arg2;
- (void)didBatchRemoveIndicators;
- (void)willBatchRemoveIndicators;
- (void)requestSuspendWithVideoID:(id)arg1;
- (void)requestSuspendWithIndicator:(id)arg1;
- (void)requestRemoveAllWithDelegate:(id)arg1;
- (void)requestRemoveWithIndicators:(id)arg1 delegate:(id)arg2;
- (void)requestRemoveWithVideoID:(id)arg1;
- (void)requestRemoveWithIndicator:(id)arg1;
- (int)requestPauseWithVideoID:(id)arg1;
- (int)requestPauseWithIndicator:(id)arg1;
- (int)requestStartWithVideoID:(id)arg1;
- (int)requestStartWithIndicator:(id)arg1;
- (void)requestPauseAll;
- (void)requestStartAll;
- (void)resumeDownload;
- (void)suspendDownload;
- (void)disableInfiniteBackgroundTask;
- (void)enableInfiniteBackgroundTask;
- (void)willApplicationTerminate;
- (void)willBackgroudTaskInvalid;
- (void)willApplicationEnterBackground;
- (void)willApplicationEnterForeground;
- (void)initializeDownload;
- (id)coverDetailURL;
- (id)playbackReportURL;
- (id)videoSizeListURL;
- (id)getSystemQueryString;
- (id)getPlatform;
- (void)dealloc;
- (id)init;

@end

