//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

#import "QUIAlertViewDelegate-Protocol.h"
#import "QZApplePayDelegate-Protocol.h"
#import "QZDLConfigDelegate-Protocol.h"
#import "QZDLLoggerDelegate-Protocol.h"
#import "QZDLNetworkTypeDelegate-Protocol.h"
#import "QZDLReportDelegate-Protocol.h"
#import "QZDLSSLHelperDelegate-Protocol.h"
#import "QZFacadeViewDelegate-Protocol.h"
#import "QZUpgradeAlertDelegate-Protocol.h"
#import "QzoneAppLoadingViewDelegate-Protocol.h"
#import "QzoneSafeModeMgrDelegate-Protocol.h"
#import "TADSplashWindowDelegate-Protocol.h"
#import "TencentApiInterfaceDelegate-Protocol.h"
#import "UIApplicationDelegate-Protocol.h"
#import "WXApiDelegate-Protocol.h"
#import "WeiboSDKDelegate-Protocol.h"
#import "WnsDeviceTokenDelegate-Protocol.h"
#import "WnsPushDelegate-Protocol.h"

@class ALAssetsLibrary, LoginViewController, NSDate, NSDictionary, NSString, NSTimer, NSURL, PersonCenterInfo, PlayVideo, QZAlertView, QZAppCenterViewController, QZBirthdayScene, QZFacadeView, QZHomePageController, QZNavigationControllerDelegate, QZPasterSetAuxiliary, QZTabbarNavigationController, QZoneTabBarController, QzoneAppLoadingView, QzoneBaseNavigationController, QzoneDiscoverController, QzoneDiscoverWebViewController, QzoneInternalGuide, QzoneNewGuideWindow, QzonePassiveFeedController, SKView, SpaceStatusController, UIButton, UIImageView, UINavigationController, UIView, UIViewController, UIWindow;

@interface QZoneUIAppDelegate : NSObject <QzoneAppLoadingViewDelegate, QZFacadeViewDelegate, TADSplashWindowDelegate, QUIAlertViewDelegate, QZUpgradeAlertDelegate, QZDLConfigDelegate, QZDLReportDelegate, QZDLLoggerDelegate, QZDLNetworkTypeDelegate, QZDLSSLHelperDelegate, QzoneSafeModeMgrDelegate, TencentApiInterfaceDelegate, WXApiDelegate, WeiboSDKDelegate, QZApplePayDelegate, WnsPushDelegate, WnsDeviceTokenDelegate, UIApplicationDelegate>
{
    UIWindow *window;
    _Bool backupStatusBarHidden;
    LoginViewController *_loginView;
    UINavigationController *logInController;
    _Bool _isWnsDoingRelogin;
    NSString *_whiteListAppUrl;
    _Bool _isWhiteListAlertShow;
    QZoneTabBarController *_qqTabbarController;
    QzoneBaseNavigationController *navPersonCenter;
    QzoneBaseNavigationController *navHomePageInfo;
    QzoneBaseNavigationController *navContactsList;
    UINavigationController *navApps;
    UIImageView *_defaultView;
    UIImageView *_splashView;
    UIButton *_jumptoQzone;
    SKView *_spriteBirthdayView;
    QZBirthdayScene *_birthdayScene;
    _Bool _needShowNormalSwitch;
    QzoneBaseNavigationController *navPlusToolBar;
    SpaceStatusController *_spaceStatusController;
    QzonePassiveFeedController *_passiveFeedController;
    QZHomePageController *_homePageController;
    QZAppCenterViewController *_appCenterViewController;
    QzoneDiscoverController *_discoverController;
    UIViewController *_plusController;
    _Bool _showBirth;
    _Bool _isStatusBarHidden;
    unsigned long long bgTask;
    _Bool _isBgRun;
    _Bool _isSuspend;
    QzoneAppLoadingView *operationBgView;
    double _operationViewShowTime;
    double _vipOperationViewShowTime;
    NSDictionary *launchOptionsStore;
    NSURL *weChatUrl;
    double _appStartTime;
    _Bool isReceivePush;
    _Bool _needSwizzlingNaviBar;
    NSTimer *timer;
    int index;
    PlayVideo *_playVideo;
    _Bool wnsVerifyControllerExist;
    ALAssetsLibrary *_library;
    UIView *guide;
    _Bool _isShowWifiAuth;
    QZPasterSetAuxiliary *_pasterSetAuxiliary;
    _Bool forbidPushOffAlert;
    _Bool loginAutomaticallyAfterLogout;
    _Bool logoutAutomaticallyWhenActive;
    _Bool jumpAllSplashGuideFacade;
    _Bool _isOperationBgViewSkipped;
    _Bool _isOperationBgViewShowed;
    _Bool _isSkipOverSplash;
    _Bool _inQQLogin;
    _Bool _launchToNormalSwitch;
    _Bool _launchWithLoginState;
    _Bool _firstViewAppear;
    _Bool _hasReqeustEggsKeyword;
    _Bool _loginAlready;
    _Bool _reportLogAfterLogin;
    _Bool _directToLive;
    _Bool _skipSpaceLoading;
    _Bool _liveArouseHandled;
    _Bool _shouldReportLog;
    _Bool _targetVCIsPushed;
    _Bool _havaLogedOut;
    PersonCenterInfo *personCenterInfo;
    NSDate *lastRenewTime;
    UIWindow *_splashwindow;
    QzoneDiscoverWebViewController *_discoverWebViewController;
    QzoneNewGuideWindow *_settingGuideWindow;
    QzoneNewGuideWindow *_guideWindow;
    UIWindow *_schemaGuideWindow;
    QZFacadeView *_facadeView;
    UIWindow *_facadeWindow;
    QzoneInternalGuide *_internalGuide;
    long long _reloginUin;
    QZAlertView *_banLevelAlert;
    NSString *_reportLogTitle;
    QZNavigationControllerDelegate *_navDelegate;
    QZTabbarNavigationController *_navController;
    CDUnknownBlockType _backgroundSessionCompletionHandler;
    struct CGRect _currentStatusBarFrame;
}

+ (_Bool)isCocos2DCoverRunning;
+ (void)setCocos2DCoverRunning:(_Bool)arg1;
+ (long long)GetSelfUID;
+ (void)fillReportCommonInfo:(id)arg1;
+ (id)convertPhotoLibraryAuthStats:(long long)arg1;
+ (id)diskSpaceToReportLevel:(id)arg1;
+ (id)shareInstance;
+ (void)registerRemoteNotification;
+ (void)registerUserNotification_iOS8;
+ (void)registerUserNotification_iOS10;
@property(copy) CDUnknownBlockType backgroundSessionCompletionHandler; // @synthesize backgroundSessionCompletionHandler=_backgroundSessionCompletionHandler;
@property(nonatomic) _Bool havaLogedOut; // @synthesize havaLogedOut=_havaLogedOut;
@property(nonatomic) _Bool targetVCIsPushed; // @synthesize targetVCIsPushed=_targetVCIsPushed;
@property(retain, nonatomic) QZTabbarNavigationController *navController; // @synthesize navController=_navController;
@property(retain, nonatomic) QZNavigationControllerDelegate *navDelegate; // @synthesize navDelegate=_navDelegate;
@property(retain, nonatomic) NSString *reportLogTitle; // @synthesize reportLogTitle=_reportLogTitle;
@property(nonatomic) _Bool shouldReportLog; // @synthesize shouldReportLog=_shouldReportLog;
@property(nonatomic) struct CGRect currentStatusBarFrame; // @synthesize currentStatusBarFrame=_currentStatusBarFrame;
@property(nonatomic) _Bool liveArouseHandled; // @synthesize liveArouseHandled=_liveArouseHandled;
@property(nonatomic) _Bool skipSpaceLoading; // @synthesize skipSpaceLoading=_skipSpaceLoading;
@property(nonatomic) _Bool directToLive; // @synthesize directToLive=_directToLive;
@property(retain, nonatomic) QZAlertView *banLevelAlert; // @synthesize banLevelAlert=_banLevelAlert;
@property(nonatomic) _Bool reportLogAfterLogin; // @synthesize reportLogAfterLogin=_reportLogAfterLogin;
@property(nonatomic) _Bool loginAlready; // @synthesize loginAlready=_loginAlready;
@property(nonatomic) _Bool hasReqeustEggsKeyword; // @synthesize hasReqeustEggsKeyword=_hasReqeustEggsKeyword;
@property(nonatomic) _Bool firstViewAppear; // @synthesize firstViewAppear=_firstViewAppear;
@property(nonatomic) _Bool launchWithLoginState; // @synthesize launchWithLoginState=_launchWithLoginState;
@property(nonatomic) _Bool launchToNormalSwitch; // @synthesize launchToNormalSwitch=_launchToNormalSwitch;
@property(nonatomic) _Bool inQQLogin; // @synthesize inQQLogin=_inQQLogin;
@property(nonatomic) long long reloginUin; // @synthesize reloginUin=_reloginUin;
@property(nonatomic) _Bool isSkipOverSplash; // @synthesize isSkipOverSplash=_isSkipOverSplash;
@property(nonatomic) __weak QzoneInternalGuide *internalGuide; // @synthesize internalGuide=_internalGuide;
@property(retain, nonatomic) UIWindow *facadeWindow; // @synthesize facadeWindow=_facadeWindow;
@property(retain, nonatomic) QZFacadeView *facadeView; // @synthesize facadeView=_facadeView;
@property(retain, nonatomic) UIWindow *schemaGuideWindow; // @synthesize schemaGuideWindow=_schemaGuideWindow;
@property(retain, nonatomic) QzoneNewGuideWindow *guideWindow; // @synthesize guideWindow=_guideWindow;
@property(retain, nonatomic) QzoneNewGuideWindow *settingGuideWindow; // @synthesize settingGuideWindow=_settingGuideWindow;
@property(nonatomic) _Bool isOperationBgViewShowed; // @synthesize isOperationBgViewShowed=_isOperationBgViewShowed;
@property(nonatomic) _Bool isOperationBgViewSkipped; // @synthesize isOperationBgViewSkipped=_isOperationBgViewSkipped;
@property(nonatomic) _Bool showBirth; // @synthesize showBirth=_showBirth;
@property(retain, nonatomic) UIButton *jumptoQzone; // @synthesize jumptoQzone=_jumptoQzone;
@property(retain, nonatomic) QzoneDiscoverWebViewController *discoverWebViewController; // @synthesize discoverWebViewController=_discoverWebViewController;
@property(retain, nonatomic) QZAppCenterViewController *appCenterViewController; // @synthesize appCenterViewController=_appCenterViewController;
@property(retain, nonatomic) UIWindow *splashwindow; // @synthesize splashwindow=_splashwindow;
@property(retain, nonatomic) NSDate *lastRenewTime; // @synthesize lastRenewTime;
@property(retain, nonatomic) NSURL *weChatUrl; // @synthesize weChatUrl;
@property(nonatomic) _Bool jumpAllSplashGuideFacade; // @synthesize jumpAllSplashGuideFacade;
@property(nonatomic) _Bool logoutAutomaticallyWhenActive; // @synthesize logoutAutomaticallyWhenActive;
@property(nonatomic) _Bool loginAutomaticallyAfterLogout; // @synthesize loginAutomaticallyAfterLogout;
@property(retain, nonatomic) NSString *whiteListAppUrl; // @synthesize whiteListAppUrl=_whiteListAppUrl;
@property(nonatomic) _Bool forbidPushOffAlert; // @synthesize forbidPushOffAlert;
@property(nonatomic) _Bool isSuspend; // @synthesize isSuspend=_isSuspend;
@property(retain, nonatomic) NSDictionary *launchOptionsStore; // @synthesize launchOptionsStore;
@property(retain, nonatomic) QzoneAppLoadingView *operationBgView; // @synthesize operationBgView;
@property(nonatomic) _Bool isBgRun; // @synthesize isBgRun=_isBgRun;
@property(nonatomic) _Bool isWnsDoingRelogin; // @synthesize isWnsDoingRelogin=_isWnsDoingRelogin;
@property(retain, nonatomic) UIImageView *splashView; // @synthesize splashView=_splashView;
@property(retain, nonatomic) UIImageView *defaultView; // @synthesize defaultView=_defaultView;
@property(nonatomic) _Bool wnsVerifyControllerExist; // @synthesize wnsVerifyControllerExist;
@property(retain, nonatomic) PersonCenterInfo *personCenterInfo; // @synthesize personCenterInfo;
@property(retain, nonatomic) QzoneBaseNavigationController *navHomePageInfo; // @synthesize navHomePageInfo;
@property(readonly, nonatomic) UIViewController *plusController; // @synthesize plusController=_plusController;
@property(readonly, nonatomic) QzonePassiveFeedController *passiveFeedController; // @synthesize passiveFeedController=_passiveFeedController;
@property(readonly, nonatomic) SpaceStatusController *spaceStatusController; // @synthesize spaceStatusController=_spaceStatusController;
@property(retain, nonatomic) LoginViewController *loginView; // @synthesize loginView=_loginView;
@property(readonly, nonatomic) UINavigationController *logInController; // @synthesize logInController;
@property(retain, nonatomic) QzoneBaseNavigationController *navPersonCenter; // @synthesize navPersonCenter;
@property(retain, nonatomic) QZoneTabBarController *qqTabbarController; // @synthesize qqTabbarController=_qqTabbarController;
@property(retain, nonatomic) QzoneDiscoverController *discoverController; // @synthesize discoverController=_discoverController;
@property(retain, nonatomic) QZHomePageController *homePageController; // @synthesize homePageController=_homePageController;
@property(retain, nonatomic) UINavigationController *navApps; // @synthesize navApps;
@property(retain, nonatomic) QzoneBaseNavigationController *navContactsList; // @synthesize navContactsList;
@property(retain, nonatomic) NSTimer *timer; // @synthesize timer;
@property(retain, nonatomic) UIWindow *window; // @synthesize window;
- (void).cxx_destruct;
- (void)startVCLeaker;
- (void)OOMStartMonitor;
- (void)registerNotifications;
- (void)loadTheme;
- (void)configShortCut:(id)arg1 lanchOption:(id)arg2;
- (_Bool)enterSafeMode;
- (void)lauchMiscellaneous:(id)arg1 launchOption:(id)arg2;
- (void)setQZoneSetting:(id)arg1;
- (void)setAppMonitor:(id)arg1;
- (void)startLaunchBackgroudMTAReport:(id)arg1 lanchOption:(id)arg2;
- (void)configMTAReport;
- (void)reportCompass:(id)arg1;
- (void)updateWindowRootVcToNormalMode;
- (void)closeAllVideoFloatWindows;
- (id)checkHasFloatWindow;
- (id)getCurrNavConByMultiWindows;
- (void)application:(id)arg1 performActionForShortcutItem:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)assetLibraryChangedPushInternal;
- (void)assetLibraryChangedPush:(id)arg1;
- (void)application:(id)arg1 performFetchWithCompletionHandler:(CDUnknownBlockType)arg2;
- (void)didWnsNeedWifiAuth:(id)arg1;
- (void)onWnsNetReachableChanged:(id)arg1;
- (_Bool)isOrientationSupported:(long long)arg1;
- (void)delaySendUndealRequest;
- (void)tracyWnsConnectionStatus:(id)arg1;
- (void)onFirstViewControllerAppear:(id)arg1;
- (void)notifyOpensessoinFail:(id)arg1;
- (void)dealloc;
- (void)application:(id)arg1 willChangeStatusBarFrame:(struct CGRect)arg2;
- (_Bool)application:(id)arg1 continueUserActivity:(id)arg2 restorationHandler:(CDUnknownBlockType)arg3;
- (void)handleSearchActivity:(id)arg1;
- (void)applicationDidReceiveMemoryWarning:(id)arg1;
- (void)applicationWillTerminate:(id)arg1;
- (void)smartDismissLandscapeViewController;
- (void)applicationWillEnterForeground:(id)arg1;
- (void)reportJailbroken;
- (void)uploadLogViaWns;
- (void)reportLoginErrorLogByErrorcode;
- (void)applicationDidEnterBackground:(id)arg1;
- (void)reportAppBackgroundRefreshState;
- (void)transferExtensionLog;
- (void)applicationDidBecomeActive:(id)arg1;
- (void)applicationWillResignActive:(id)arg1;
- (void)applicationDidFinishLaunching:(id)arg1;
- (void)configStaticInterfaces;
- (void)application:(id)arg1 launchStep2WithOptions:(id)arg2;
- (void)performLaunchStep2;
- (void)testMemoryWarning;
- (_Bool)canShowKeyBoard;
- (void)application:(id)arg1 handleEventsForBackgroundURLSession:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)reportUncaughtExitInDailybuild;
- (void)reportUncaughtExit;
- (_Bool)isEnterLiveDirectly:(id)arg1;
- (void)goToGTfreewifi:(id)arg1;
- (void)manualInitDisplayMainUIComplete;
- (_Bool)application:(id)arg1 didFinishLaunchingWithOptions:(id)arg2;
- (void)checkAudioSession;
- (id)init;
- (void)tadSplashWindowDisappearWithoutOrder;
- (void)tadSplashWindowWillCancelAdCountdown;
- (void)tadSplashWindowWillOpenLandingPage;
- (void)tadSplashWindowDidDisppear;
- (void)tadSplashWindowWillDisppear;
- (void)tadSplashWindowDidAppear;
- (void)tadSplashAdDidDisplay;
- (void)tadSplashWindowWillAppear;
- (void)splashAdOpenNativeUrl:(id)arg1;
- (void)splashAdOpenLandingViewUrl:(id)arg1 withShareInfo:(id)arg2;
- (void)fadeOutFacadeView;
- (void)facadeSchemaDidClicked:(id)arg1;
- (void)clickEnterButton;
- (void)clickFacade:(id)arg1;
- (void)didDisappear;
- (void)notifyGuideWindowDisappeared;
- (void)sendAsyncFacadeRequest;
- (void)showFacade;
- (_Bool)needShowFacade;
- (void)removeGuideWindow;
- (_Bool)isShowingGuideWindow;
- (void)getAdditionalInfo;
- (void)reportTimeIntervalBetweenInstallAndFirstLaunch;
- (id)getReportTimeIntervalValueString:(double)arg1;
- (double)timeIntervalBetweenInstallAndFirstLaunch;
- (id)getCreationDateWithGuideFile;
- (void)showGuide;
- (_Bool)canShowGuide;
- (_Bool)needShowGuide;
- (_Bool)upperLimited;
- (long long)shownTimes;
- (void)stepShownTime;
- (_Bool)showQbossAdv:(_Bool)arg1;
- (_Bool)showOperationAnimation:(_Bool)arg1;
- (_Bool)showOperationAnimation;
- (void)dismissLoadingViewAnimated;
- (void)loadingViewDidShare:(long long)arg1 url:(id)arg2 picPath:(id)arg3;
- (void)loadingViewDidTap:(long long)arg1 url:(id)arg2;
- (void)loadingAnimationDidFinished:(id)arg1;
- (void)festivalWindowHideAuto;
- (void)defaultViewAnimationStop;
- (void)releaseSplashView;
- (id)loadPreviewImageView:(_Bool)arg1;
- (void)btnJumpPressed:(id)arg1;
- (void)showEnterQzone;
- (void)blowOutCandle:(float)arg1;
- (void)showBirthdaySplash:(_Bool)arg1;
- (_Bool)isHaveBirthdaySplash;
- (_Bool)needShowBirthWindow;
- (void)showBirthWindow;
- (void)gotoUpdateWebWithUrl:(id)arg1;
- (void)upgradeAlertView:(id)arg1 clickedButtonAtIndex:(long long)arg2;
- (_Bool)gotoNotificationSettingApp;
- (void)alertView:(id)arg1 clickedButtonAtIndex:(long long)arg2;
- (void)judgeBgSuicide;
- (_Bool)shouldSuicide;
- (_Bool)isTaskInvalid;
- (void)removeLoginDataFromShareResources;
- (void)saveLoginDataToShareResources;
- (_Bool)isPrivateJournalURL:(id)arg1;
- (_Bool)needShowDefaultViewWhenResignActive;
- (void)removeDefaultViewWhenResignActive;
- (void)addDefaultViewWhenResignActive;
- (void)requestUpdatePostionAndWeather;
- (int)PushHomeController:(long long)arg1;
- (void)delayPushHomeControllerThree:(id)arg1;
- (int)PushHomeController:(long long)arg1 nickName:(id)arg2 Controller:(id)arg3;
- (void)delayPushHomeControllerTwo:(id)arg1;
- (int)PushHomeController:(long long)arg1 nickName:(id)arg2;
- (_Bool)isInValidUin:(long long)arg1;
- (void)resetTabbarSelectedController;
- (_Bool)isInOpenSDKWindow;
- (_Bool)canShowAlertMessage;
- (_Bool)isInFourTabbarController;
- (void)localNotificationPost;
- (void)requestQauthIfNeeded;
- (void)showBanLevel:(id)arg1;
- (void)didWnsNeedRelogin:(id)arg1;
- (void)didUinWhiteListRefused:(id)arg1;
- (void)createCacheDirectories;
- (void)dealWithSchemaAfterNormalSwitch;
- (void)refreshSpaceStatusTab;
- (void)showNormalSwitch;
- (void)weiyunStartAfterDelay;
- (id)advJsonToDic:(id)arg1;
- (void)pantoLeftAdvHandler:(id)arg1;
- (void)tabbarAdvHandler:(id)arg1;
- (void)requestPlusOperationData;
- (void)reportLog;
- (void)LoginOk;
- (void)reportInternalVersionWithUin:(long long)arg1;
- (void)ShowLoginUI:(_Bool)arg1;
- (void)LoginError:(int)arg1;
- (void)LoadView;
- (void)renewSig;
- (void)Start;
- (id)defaultTTURLCachePath;
- (void)LogoutAndDelCache;
- (void)LogoutAndDelCacheSuc;
- (void)LogoutSuc;
- (void)Logout;
- (void)LogoutTimerOut;
- (void)recordRootViewController:(id)arg1;
- (void)switchToTab:(int)arg1;
- (void)trySwitchToMySpaceTab;
- (void)refreshMySpaceTab;
- (void)initMainUI;
- (_Bool)is2GNetwork;
- (_Bool)is3GNetwork;
- (_Bool)is4GNetwork;
- (_Bool)isReachableViaWiFi;
- (_Bool)isNetworkReachable;
- (_Bool)shouldValidateSSLCertificatesExceptPeerName;
- (_Bool)shouldNotValidateSSLCertificates;
- (_Bool)shouldValidateSSLCertificates;
- (void)printLogStr:(id)arg1 param:(id)arg2;
- (void)printLogStr:(id)arg1;
- (id)atsWhiteList;
- (_Bool)isEnforceHttps;
- (void)testURLSessionDownload;
- (void)log:(long long)arg1 file:(const char *)arg2 func:(const char *)arg3 line:(int)arg4 module:(id)arg5 EFDict:(id)arg6 fullmsg:(id)arg7;
- (void)setPhotoDownloadBytes:(long long)arg1 startTime:(double)arg2 endTime:(double)arg3;
- (void)reportIsHitCache:(_Bool)arg1;
- (void)uploadUserLogWithTitle:(id)arg1;
- (void)checkShouldUploadLog;
- (void)resetUploadLog;
- (_Bool)isUInInLogReportUins;
- (_Bool)shouldReportLog:(_Bool)arg1 downloadTime:(unsigned long long)arg2;
- (void)reportToCompass:(_Bool)arg1 totalTime:(unsigned long long)arg2 connectTime:(unsigned long long)arg3 waitTime:(unsigned long long)arg4 speed:(double)arg5 retryCount:(long long)arg6 ipList:(id)arg7 serverIP:(id)arg8 errorCode:(long long)arg9 url:(id)arg10 attachInfo:(id)arg11 apn:(long long)arg12 queueType:(id)arg13 urlSource:(id)arg14;
- (void)reportMTAWithIsSuccess:(_Bool)arg1 url:(id)arg2 imageType:(id)arg3 errCode:(long long)arg4 responseCode:(long long)arg5 internalErrCode:(long long)arg6 internalErrDesc:(id)arg7 finalIp:(id)arg8 finalStrategyType:(id)arg9 redirectCount:(long long)arg10 retryCount:(long long)arg11 size:(unsigned long long)arg12 queueTime:(unsigned long long)arg13 downloadTime:(unsigned long long)arg14 totalTime:(unsigned long long)arg15 urlSourceDesc:(id)arg16;
- (id)contentTypeForImageData:(id)arg1;
- (void)reportData:(int)arg1 appid:(int)arg2 url:(id)arg3 size:(long long)arg4 costTime:(long long)arg5 errcode:(int)arg6 msg:(id)arg7 extend:(id)arg8 flow:(long long)arg9 svrIp:(id)arg10;
- (void)reportDownload:(int)arg1 appid:(int)arg2 url:(id)arg3 size:(long long)arg4 costTime:(long long)arg5 errcode:(int)arg6 msg:(id)arg7 waitTime:(long long)arg8 prepareTime:(long long)arg9 connectedTime:(long long)arg10 firstRspTime:(long long)arg11 recvTime:(long long)arg12 decodeTime:(long long)arg13 userCostTime:(long long)arg14 contentType:(id)arg15 concurrent:(int)arg16 urlRefer:(id)arg17 extend:(id)arg18 flow:(long long)arg19 svrIp:(id)arg20 isRetry:(_Bool)arg21;
- (int)getDownloadIPExpired;
- (int)getDownloadIPRaceUse;
- (int)getDownloadIPRaceEnable;
- (long long)getNoCacheTime;
- (int)getAPNByCarrier;
- (id)getQuaVersion;
- (id)getDownloadPort;
- (id)getPhoto_backupIplist_a;
- (id)getPhoto_backupIplist;
- (id)getPhoto_masterIplist_a;
- (id)getPhoto_masterIplist;
- (id)getDownloadBackupIP_AB;
- (id)getDownloadOptimalIP_AB;
- (id)getDownloadBackupIP;
- (id)getDownloadOptimalIP;
- (_Bool)getEnablePACProxyValue;
- (id)getKeepAliveDomainList;
- (long long)getRetryTimes;
- (id)getRangeDomainList;
- (void)setupQZAppGroupCacheParam;
- (void)setupQZSpeedTesterParam;
- (void)setupQZURLCacheParam;
- (void)reLaunchFromSafeMode;
- (void)handleWBAuthorizeResponse:(id)arg1 isSetExpration:(_Bool)arg2;
- (void)didReceiveWeiboResponse:(id)arg1;
- (void)didReceiveWeiboRequest:(id)arg1;
- (_Bool)onTencentResp:(id)arg1;
- (_Bool)onTencentReq:(id)arg1;
- (void)onResp:(id)arg1;
- (void)onReq:(id)arg1;
- (_Bool)hostUinEqualCureentUin:(id)arg1;
- (long long)hostUinInSchema:(id)arg1;
- (void)dealWithSchemaUrlDelay:(id)arg1;
- (void)dealWithSchemaUrl:(id)arg1;
- (id)readActionInSchemaUrl:(id)arg1;
- (void)dealWithFileUrl:(id)arg1;
- (_Bool)validateQQLoginURL:(id)arg1;
- (_Bool)application:(id)arg1 openURL:(id)arg2 sourceApplication:(id)arg3 annotation:(id)arg4;
- (void)apnChanaged;
- (void)preDownload;
- (void)assetLibraryChanged:(id)arg1;
- (void)UploadLogEvent:(id)arg1;
- (void)didUploadAlbumInvalid;
- (void)didUploadAlbumNameChanged:(id)arg1;
- (_Bool)checkUploadHa3OkAndNoTips;
- (_Bool)checkUploadHa3Ok;
- (id)getTopmostViewController;
- (void)initUploadConfig;
- (void)checkVerionToClearCache;
- (void)handleNewVersionPassiveNotification:(id)arg1;
- (void)requestCheckNewVersion;
- (void)updateVkey:(id)arg1;
- (void)listenUpdateVkeyNotify;
- (void)playVideoDirect:(id)arg1;
- (void)resetCurrController:(id)arg1;
- (void)setVisitorReport:(id)arg1;
- (void)setCurrController:(id)arg1 ShowToolbar:(_Bool)arg2;
- (_Bool)initPlayVideo;
- (void)distributeGoodsSuccess:(id)arg1;
- (void)distributeGoodsFail:(id)arg1;
- (void)payFail:(id)arg1 error:(id)arg2;
- (void)orderFail:(id)arg1 error:(id)arg2;
- (void)checkRestoreGoods;
- (void)removeUinFolder;
- (void)createNeededDir;
- (void)deleteAllCache;
- (void)reportForPushNotificationWithType:(unsigned long long)arg1 isOffline:(_Bool)arg2 actionName:(id)arg3 pushStat:(id)arg4;
- (void)reportForClickPushNotificationWithType:(unsigned long long)arg1 isOffline:(_Bool)arg2 actionName:(id)arg3 pushStat:(id)arg4;
- (id)pushTemplate;
- (void)application:(id)arg1 handleActionWithIdentifier:(id)arg2 forRemoteNotification:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)application:(id)arg1 didReceiveLocalNotification:(id)arg2;
- (void)application:(id)arg1 handleActionWithIdentifier:(id)arg2 forLocalNotification:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)application:(id)arg1 didRegisterUserNotificationSettings:(id)arg2;
- (void)didSetDeviceToken:(_Bool)arg1;
- (void)reportDeviceToken;
- (void)remindUserPushOff;
- (void)swicthToSpecailPushDetaiViewController:(id)arg1;
- (void)pushNotifySwitch:(_Bool)arg1 Delegate:(id)arg2;
- (void)offlinePushHandler:(id)arg1 offlineType:(int)arg2 fetchCompletionHandler:(CDUnknownBlockType)arg3;
- (void)dealLanuchWithRemoteNotification:(id)arg1;
- (void)clickPush:(id)arg1;
- (void)didPushArrived:(id)arg1;
- (void)application:(id)arg1 didReceiveRemoteNotification:(id)arg2 fetchCompletionHandler:(CDUnknownBlockType)arg3;
- (void)deletePushMessageWithID:(id)arg1 sema:(id)arg2;
- (void)application:(id)arg1 didReceiveRemoteNotification:(id)arg2;
- (void)applicationDidFailToRegisterForRemoteForRemoteNotificationsWithTimeout;
- (void)application:(id)arg1 didFailToRegisterForRemoteNotificationsWithError:(id)arg2;
- (void)application:(id)arg1 didRegisterForRemoteNotificationsWithDeviceToken:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

