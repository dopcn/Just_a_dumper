//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "QTileOverlay.h"

@class NSLock, NSMutableArray, NSThread, QQuadTree;

@interface QHeatTileOverlay : QTileOverlay
{
    float *_scaleMatrix;
    _Bool _normalizeNodeValueAccordingZoom;
    _Bool _keepRunning;
    long long _decayRadius;
    double _max;
    double _zoomedOutMax;
    QQuadTree *_quadTree;
    NSLock *_taskLock;
    NSMutableArray *_taskStack;
    NSThread *_loadingImageThread;
}

@property(nonatomic) _Bool keepRunning; // @synthesize keepRunning=_keepRunning;
@property(retain, nonatomic) NSThread *loadingImageThread; // @synthesize loadingImageThread=_loadingImageThread;
@property(retain, nonatomic) NSMutableArray *taskStack; // @synthesize taskStack=_taskStack;
@property(retain, nonatomic) NSLock *taskLock; // @synthesize taskLock=_taskLock;
@property(retain, nonatomic) QQuadTree *quadTree; // @synthesize quadTree=_quadTree;
@property(nonatomic) double zoomedOutMax; // @synthesize zoomedOutMax=_zoomedOutMax;
@property(nonatomic) double max; // @synthesize max=_max;
@property(nonatomic) _Bool normalizeNodeValueAccordingZoom; // @synthesize normalizeNodeValueAccordingZoom=_normalizeNodeValueAccordingZoom;
@property(nonatomic) long long decayRadius; // @synthesize decayRadius=_decayRadius;
- (void).cxx_destruct;
- (void)dealloc;
- (id)initWithHeatTileNodes:(id)arg1;
- (id)initWithHeatTileNodes:(id)arg1 decayRadius:(long long)arg2;
- (void)setupLoadingImageThreadEnvironment;
- (void)setupDecayRadius:(long long)arg1;
- (void)setupDecayMatrix;
- (void)setupQuadTreeWithHeatTileNodes:(id)arg1;
- (void)updateHeatTileNodes:(id)arg1;
- (void)clearThread;
- (void)loadTileAtPath:(CDStruct_2ec95fd7)arg1 result:(CDUnknownBlockType)arg2;
- (id)heatNodesInRect:(struct CGRect)arg1 atScale:(double)arg2;
- (id)imageForNodes:(id)arg1 relativePoint:(struct CGPoint)arg2 zoom:(long long)arg3;
- (struct CGPoint)pointForNode:(id)arg1 relativePoint:(struct CGPoint)arg2 zoom:(long long)arg3;
- (void)colorForValue:(double)arg1 outRed:(double *)arg2 outGreen:(double *)arg3 outBlue:(double *)arg4 outAlpha:(double *)arg5;
- (void)defaultColorForValue:(double)arg1 outRed:(double *)arg2 outGreen:(double *)arg3 outBlue:(double *)arg4 outAlpha:(double *)arg5;
- (void)quitLoadingImageThread;
- (void)loadingImageThreadEntry;
- (void)loadingImageForTask:(id)arg1;
- (void)removeAllTask;
- (id)popTask;
- (void)pushTask:(id)arg1;

@end

