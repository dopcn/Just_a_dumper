//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

@class LineE2EEPublicKey, NLE2EEKeyPair, NLE2EEKeyStore, NLE2EEKeychain, NSData, NSMutableArray, NSMutableDictionary;
@protocol OS_dispatch_queue;

@interface NLE2EEKeyManager : NSObject
{
    NSObject<OS_dispatch_queue> *_queue;
    NLE2EEKeychain *_keychain;
    NLE2EEKeyStore *_keystore;
    int _reqSeqForKeyExchange;
    NLE2EEKeyPair *_keyPairForKeyExchange;
    LineE2EEPublicKey *_publicKeyForKeyExchange;
    NSData *_keychainDataForKeyExchange;
    NSMutableDictionary *_publicKeySyncBlocks;
    NSMutableDictionary *_publicKeyUserBlocks;
    NSMutableArray *_publicKeyCheckBlocks;
    NSMutableDictionary *_sharedKeySyncBlocks;
    NSMutableDictionary *_sharedKeyChatBlocks;
    _Bool _e2eeEnable;
    _Bool _e2eeAllowed;
}

+ (id)parseVerifierWithSecretParam:(id)arg1;
@property(nonatomic) _Bool e2eeAllowed; // @synthesize e2eeAllowed=_e2eeAllowed;
@property(nonatomic) _Bool e2eeEnable; // @synthesize e2eeEnable=_e2eeEnable;
@property(readonly, nonatomic) NLE2EEKeyStore *keystore; // @synthesize keystore=_keystore;
@property(readonly, nonatomic) NLE2EEKeychain *keychain; // @synthesize keychain=_keychain;
- (void).cxx_destruct;
- (_Bool)importKeychainData:(id)arg1;
- (id)exportKeychainData;
- (void)didFinishKeyExchange;
- (void)barrier_processQRCodeLoginResponse:(id)arg1 hashKeychain:(id)arg2 e2eePublicKey:(id)arg3 completionBlock:(CDUnknownBlockType)arg4;
- (void)processQRCodeLoginResponse:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)processPinCodeLoginConfirm:(_Bool)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)barrier_verifyPinCodeLoginResponse:(id)arg1 e2eePublicKey:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (void)processPinCodeLoginResponse:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (_Bool)barrier_updateKeychain:(id)arg1;
- (_Bool)barrier_updateKeychainWithData:(id)arg1;
- (void)barrier_processNotifiedKeyExchangeResponse:(id)arg1 hashKeychain:(id)arg2;
- (void)processNotifiedKeyExchangeResponseOperation:(id)arg1;
- (void)barrier_processKeyExchangeResponseWithKeyId:(int)arg1 e2eeVersion:(int)arg2 temporalPublicKey:(id)arg3 usingBlock:(CDUnknownBlockType)arg4;
- (void)processNotifiedKeyExchangeRequestOperation:(id)arg1;
- (void)requestKeyExchangeWithCompletionBlock:(CDUnknownBlockType)arg1;
- (void)checkIfKeyExchangeNeededCompletionBlock:(CDUnknownBlockType)arg1;
- (void)generateQRCodeLoginDataWithCompletionBlock:(CDUnknownBlockType)arg1;
- (void)generatePinCodeLoginDataWithCompletionBlock:(CDUnknownBlockType)arg1;
- (void)encryptKeychainWithPinCodeForKeyExchange:(id)arg1 userInfo:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (void)processE2EELoginResponse:(_Bool)arg1 pinCode:(id)arg2 userInfo:(id)arg3 completionBlock:(CDUnknownBlockType)arg4;
- (void)processKeyExchangeResponse:(_Bool)arg1 userInfo:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (void)verifyPinCodeForKeyExchange:(id)arg1 userInfo:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (void)notifyKeyExchangeRequestResult:(_Bool)arg1;
- (void)notifyKeyExchangeResponseDisplayWithUserInfo:(id)arg1;
- (void)notifyKeyExchangeRequired;
- (void)notifyE2EEStatusChangedForChatWithMID:(id)arg1;
- (void)disableGroupE2EEForChat:(id)arg1;
- (void)ensureShareKeyExistsForChat:(id)arg1 keyId:(int)arg2 version:(int)arg3 completionBlock:(CDUnknownBlockType)arg4;
- (void)negotiateSharedKeyForChat:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)updateSharedKeyForChat:(id)arg1 keyId:(int)arg2 version:(int)arg3 completionBlock:(CDUnknownBlockType)arg4;
- (void)saveSharedKeyForChatMID:(id)arg1 e2eeSharedKey:(id)arg2 isLatestKeyInfo:(_Bool)arg3;
- (void)ensurePublicKeyExistsForCreatorOfSharedKey:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)registerSharedKeyForChat:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)removeCompletionBlocksForMID:(id)arg1 keyId:(int)arg2 version:(int)arg3 updated:(_Bool)arg4 error:(id)arg5 chatBlocks:(id)arg6;
- (id)removeCompletionBlocksForMID:(id)arg1 keyId:(int)arg2 version:(int)arg3 chatBlocks:(id)arg4;
- (_Bool)addCompletionBlockForMID:(id)arg1 keyId:(int)arg2 version:(int)arg3 completionBlock:(CDUnknownBlockType)arg4 chatBlocks:(id)arg5;
- (void)ensurePublicKeyExistsForUserMID:(id)arg1 keyId:(int)arg2 version:(int)arg3 completionBlock:(CDUnknownBlockType)arg4;
- (void)negotiatePublicKeyForUserMID:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (id)removeCompletionBlocksForMID:(id)arg1 keyId:(int)arg2 version:(int)arg3;
- (_Bool)addCompletionBlockForMID:(id)arg1 keyId:(int)arg2 version:(int)arg3 completionBlock:(CDUnknownBlockType)arg4;
- (void)removeCompletionBlocksForMID:(id)arg1 keyId:(int)arg2 version:(int)arg3 updated:(_Bool)arg4 error:(id)arg5;
- (void)updatePublicKeyForUserMID:(id)arg1 keyId:(int)arg2 version:(int)arg3 completionBlock:(CDUnknownBlockType)arg4;
- (id)removeCheckCompletionBlocks;
- (_Bool)addCheckCompletionBlock:(CDUnknownBlockType)arg1;
- (void)updatePublicKeyChecked:(_Bool)arg1;
- (void)checkIfKeyUpdateNeededCompletionBlock:(CDUnknownBlockType)arg1;
- (id)removeCompletionBlocksForVersion:(int)arg1;
- (_Bool)addCompletionBlockForVersion:(int)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (_Bool)updatePublicKeySynced:(id)arg1;
- (void)updatePublicKeySynced:(id)arg1 forVersion:(int)arg2;
- (void)processRegisterPublicKeyOperation:(id)arg1;
- (void)registerPublicKeyIfNecessary:(_Bool)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)registerPublicKeyIfNecessary:(_Bool)arg1 shouldRegenerate:(_Bool)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (void)registerPublicKeyIfNecessary:(_Bool)arg1;
- (void)regenerateKeyPairWithCompletionBlock:(CDUnknownBlockType)arg1;
- (_Bool)isPublicKeySynced;
- (void)registerPublicKeyIfNecessary;
- (void)regenerateKeyPair;
- (void)deleteKeys;
- (_Bool)restoreBackupDatabaseWithUrl:(id)arg1;
- (_Bool)copyDatabaseWithLocalUrl:(id)arg1;
- (long long)sizeOfDatabase;
- (void)shutdown;
- (void)start;
- (void)barrier_initKeychainAndKeystoreWithMID:(id)arg1;
- (void)createKeyChainWithMID:(id)arg1;
- (_Bool)canUseE2EE;
- (void)syncE2EESetting;
@property(readonly, nonatomic) _Bool e2eeAvailable;
- (_Bool)isSecondaryAccount;
- (id)init;

@end

