//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

@class AEAudioController, AEAudioFilePlayer, AEBlockAudioReceiver, AEPlaythroughChannel, AEReverbFilter;
@protocol TTLiveAudioSourceDelegate;

@interface TTLiveAudioSource : NSObject
{
    float _musicVolume;
    float _voiceVolume;
    id <TTLiveAudioSourceDelegate> _sourceDelegate;
    CDUnknownBlockType _reciveCallBackBlock;
    AEAudioController *_audioController;
    AEAudioFilePlayer *_musicFilePlayer;
    AEPlaythroughChannel *_voicePlaythrough;
    AEBlockAudioReceiver *_mixReceiver;
    AEReverbFilter *_reverbFilter;
}

+ (id)sharedInstance;
@property(retain, nonatomic) AEReverbFilter *reverbFilter; // @synthesize reverbFilter=_reverbFilter;
@property(retain, nonatomic) AEBlockAudioReceiver *mixReceiver; // @synthesize mixReceiver=_mixReceiver;
@property(retain, nonatomic) AEPlaythroughChannel *voicePlaythrough; // @synthesize voicePlaythrough=_voicePlaythrough;
@property(retain, nonatomic) AEAudioFilePlayer *musicFilePlayer; // @synthesize musicFilePlayer=_musicFilePlayer;
@property(retain, nonatomic) AEAudioController *audioController; // @synthesize audioController=_audioController;
@property(copy, nonatomic) CDUnknownBlockType reciveCallBackBlock; // @synthesize reciveCallBackBlock=_reciveCallBackBlock;
@property(nonatomic) float voiceVolume; // @synthesize voiceVolume=_voiceVolume;
@property(nonatomic) float musicVolume; // @synthesize musicVolume=_musicVolume;
@property(nonatomic) __weak id <TTLiveAudioSourceDelegate> sourceDelegate; // @synthesize sourceDelegate=_sourceDelegate;
- (void).cxx_destruct;
- (void)updateReverbFilterWithParams:(double)arg1 gain:(double)arg2 minDelayTime:(double)arg3 maxDelayTime:(double)arg4 decayTimeAt0Hz:(double)arg5 decayTimeAtNyquist:(double)arg6 randomizeReflections:(double)arg7;
- (void)switchReverbFilter:(_Bool)arg1;
- (void)removeReciver;
- (void)addReciver:(long long)arg1;
- (void)recordingVoiceWithVolume:(float)arg1;
- (_Bool)bgMusicIsPlaying;
- (void)resumeBgMusic;
- (void)pauseBgMusic;
- (void)stopBgMusic;
- (double)musicDuration;
- (double)currentPlayTime;
- (void)playBgMusicWithURL:(id)arg1 loop:(_Bool)arg2 volume:(float)arg3 createPlayerCompletion:(CDUnknownBlockType)arg4 completionBlock:(CDUnknownBlockType)arg5;
- (id)runState;
- (void)endRecording;
- (_Bool)isRunning;
- (void)stop;
- (void)start;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)interruptionNotification:(id)arg1;
- (void)removeObservers;
- (void)addObservers;
- (void)initAudio;
- (id)init;
- (void)dealloc;

@end

