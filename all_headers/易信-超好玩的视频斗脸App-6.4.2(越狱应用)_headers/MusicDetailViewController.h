//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "YXUIViewController.h"

#import "AudioStreamerDownloadDeleate-Protocol.h"
#import "AudioStreamerPlayerDelegate-Protocol.h"

@class AudioStreamerPlayer, NSString, SessionMessageCloudMusicContent, SongData, UIActivityIndicatorView, UIButton, UIImageView, UILabel;
@protocol SongsListTableDelegate;

@interface MusicDetailViewController : YXUIViewController <AudioStreamerPlayerDelegate, AudioStreamerDownloadDeleate>
{
    _Bool downloadAudition;
    id <SongsListTableDelegate> delegate;
    UIImageView *_musicAlbumImageView;
    UIImageView *_musicAlbumForeImageView;
    UILabel *_musicNameLabel;
    UILabel *_musicArtistNameLabel;
    UIButton *_playButton;
    UIButton *_sendButton;
    UIImageView *_logoImageView;
    UILabel *_powbyTipLabel;
    UILabel *_cloudMusicTipLabel;
    UIActivityIndicatorView *_playActivityIndicator;
    NSString *_songURL;
    SongData *_songData;
    SessionMessageCloudMusicContent *_content;
    AudioStreamerPlayer *_musicPlay;
}

@property(retain, nonatomic) AudioStreamerPlayer *musicPlay; // @synthesize musicPlay=_musicPlay;
@property(retain, nonatomic) SessionMessageCloudMusicContent *content; // @synthesize content=_content;
@property(retain, nonatomic) SongData *songData; // @synthesize songData=_songData;
@property(retain, nonatomic) NSString *songURL; // @synthesize songURL=_songURL;
@property(retain, nonatomic) UIActivityIndicatorView *playActivityIndicator; // @synthesize playActivityIndicator=_playActivityIndicator;
@property(retain, nonatomic) UILabel *cloudMusicTipLabel; // @synthesize cloudMusicTipLabel=_cloudMusicTipLabel;
@property(retain, nonatomic) UILabel *powbyTipLabel; // @synthesize powbyTipLabel=_powbyTipLabel;
@property(retain, nonatomic) UIImageView *logoImageView; // @synthesize logoImageView=_logoImageView;
@property(retain, nonatomic) UIButton *sendButton; // @synthesize sendButton=_sendButton;
@property(retain, nonatomic) UIButton *playButton; // @synthesize playButton=_playButton;
@property(retain, nonatomic) UILabel *musicArtistNameLabel; // @synthesize musicArtistNameLabel=_musicArtistNameLabel;
@property(retain, nonatomic) UILabel *musicNameLabel; // @synthesize musicNameLabel=_musicNameLabel;
@property(retain, nonatomic) UIImageView *musicAlbumForeImageView; // @synthesize musicAlbumForeImageView=_musicAlbumForeImageView;
@property(retain, nonatomic) UIImageView *musicAlbumImageView; // @synthesize musicAlbumImageView=_musicAlbumImageView;
@property(nonatomic) __weak id <SongsListTableDelegate> delegate; // @synthesize delegate;
- (void).cxx_destruct;
- (void)downloadError;
- (void)downloadSuccess;
- (void)audioPlayPaused;
- (void)audioPlayStop;
- (void)audioPlayPlaying;
- (void)processTryPlayMusicError;
- (void)onMusicRemoteEventNotification:(id)arg1;
- (void)onMusicAuditionNotification:(id)arg1;
- (void)processTryPlayMusicByCode:(long long)arg1;
- (void)initListenEvents;
- (void)onPlayButtonPressed:(id)arg1;
- (void)updatePlayActivityIndicator:(_Bool)arg1;
- (void)updatePlayMusicButton:(long long)arg1;
- (void)getPlayURL;
- (void)changeTrackTitles;
- (void)playMusicWithURL;
- (void)executePlay:(id)arg1 url:(id)arg2;
- (void)tryPlayFullMusic;
- (id)getFuleMusicFileName;
- (void)stopMusicForMusicPlayManager;
- (id)getAuditionFileName;
- (void)onSendButtonPressed:(id)arg1;
- (void)processCoverImageBeforSend;
- (id)initMusicDetailViewController:(id)arg1;
- (void)initUIComponents;
- (void)showCoverImage:(id)arg1;
- (void)maskCoverImage;
- (void)downloadCoverImage:(id)arg1;
- (void)viewWillLayoutSubviews;
- (void)centerUIView:(id)arg1;
- (_Bool)extendedLayoutNone;
- (void)viewDidUnload;
- (void)dealloc;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)didReceiveMemoryWarning;
- (_Bool)shouldShowGrayMask;
- (void)viewDidLoad;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

