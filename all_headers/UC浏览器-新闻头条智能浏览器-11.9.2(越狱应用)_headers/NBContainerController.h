//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <UIKit/UIViewController.h>

#import "NBAdditionalPageViewControllerDelegate-Protocol.h"
#import "NBContainerSelectionHandlerDelegate-Protocol.h"
#import "NBPageTurningDataSource-Protocol.h"
#import "NBPageTurningDelegate-Protocol.h"
#import "NBPageTurningExtendDelegate-Protocol.h"
#import "NBPageTurningManagerDelegate-Protocol.h"
#import "NBPageViewDataSource-Protocol.h"
#import "NBReadingProgressHandlerDelegate-Protocol.h"
#import "NBTranscodingViewDelegate-Protocol.h"
#import "UIGestureRecognizerDelegate-Protocol.h"

@class BottomStatusView, NBAdditionalPageViewController, NBBookDataProvider, NBBookItem, NBBookLayoutConfig, NBContainerSelectionHandler, NBContentViewController, NBPageTurningManager, NBReadingProgressHandler, NBTranscodingView, NSDateFormatter, NSString, NSTimer, NovelBoxStatisticsPageTurningInfo, UCReachability, UIAlertView, UIImageView, UILabel, UIView;
@protocol IDataIntermediary, NBChapterItemProtocol, NBContainerControllerDelegate, NBLayoutEngineProtocol;

@interface NBContainerController : UIViewController <NBPageViewDataSource, NBTranscodingViewDelegate, NBPageTurningDataSource, NBPageTurningDelegate, NBPageTurningExtendDelegate, NBPageTurningManagerDelegate, NBAdditionalPageViewControllerDelegate, UIGestureRecognizerDelegate, NBReadingProgressHandlerDelegate, NBContainerSelectionHandlerDelegate>
{
    _Bool _isFullPage;
    _Bool _fontChangedWaiting;
    _Bool _pageIsAnimating;
    _Bool _showLoadingWhenDrawFailed;
    _Bool _shouldShowOnlineDataAquireFailPage;
    _Bool _isFirstRenderWithoutCache;
    _Bool _isFirstRenderSuccessful;
    _Bool _isFirstRenderComplete;
    _Bool _isFirstViewAppearComplete;
    _Bool _hasBatteryAndTimeInit;
    _Bool _isFakeChapterItem;
    _Bool _isChapterSwitch;
    _Bool _isChaptersPrepareFinished;
    _Bool _isShowCopyRightAlertView;
    _Bool _didUpdateOnlineCatalog;
    int _transcondingState;
    id <NBContainerControllerDelegate> _delegate;
    long long _pageIndex;
    id <NBChapterItemProtocol> _chapterItem;
    NBBookLayoutConfig *_layoutConfig;
    NBBookLayoutConfig *_oldLayoutConfig;
    UIView *_maskView;
    NBAdditionalPageViewController *_additionalPageViewController;
    NBPageTurningManager *_pageTurningManager;
    NBBookItem *_bookItem;
    NBBookDataProvider *_dataProvider;
    id <NBLayoutEngineProtocol> _layoutEngine;
    NBContainerSelectionHandler *_selectionHandler;
    long long _currentChapterPageCount;
    long long _retryAllChapter;
    NSTimer *_systimeTimer;
    long long _retryCount;
    id <IDataIntermediary> _dataIntermediary;
    NBReadingProgressHandler *_progressHandler;
    NovelBoxStatisticsPageTurningInfo *_pageTurningInfoStatistics;
    UCReachability *_reachability;
    UILabel *_pageTitleView;
    UIView *_titleBgView;
    BottomStatusView *_bottomStatusView;
    NBTranscodingView *_transcodingView;
    NSDateFormatter *_formatter;
    NBContentViewController *_autoBuyContenViewController;
    UIImageView *_waterMark;
    UIView *_nightMaskView;
    UIImageView *_imageBackgroundView;
    UIAlertView *_nbCopyRightAlertView;
    struct CGRect _viewRect;
}

@property(nonatomic) _Bool didUpdateOnlineCatalog; // @synthesize didUpdateOnlineCatalog=_didUpdateOnlineCatalog;
@property(nonatomic) _Bool isShowCopyRightAlertView; // @synthesize isShowCopyRightAlertView=_isShowCopyRightAlertView;
@property(retain, nonatomic) UIAlertView *nbCopyRightAlertView; // @synthesize nbCopyRightAlertView=_nbCopyRightAlertView;
@property(retain, nonatomic) UIImageView *imageBackgroundView; // @synthesize imageBackgroundView=_imageBackgroundView;
@property(retain, nonatomic) UIView *nightMaskView; // @synthesize nightMaskView=_nightMaskView;
@property(retain, nonatomic) UIImageView *waterMark; // @synthesize waterMark=_waterMark;
@property(nonatomic) _Bool isChaptersPrepareFinished; // @synthesize isChaptersPrepareFinished=_isChaptersPrepareFinished;
@property(nonatomic) _Bool isChapterSwitch; // @synthesize isChapterSwitch=_isChapterSwitch;
@property(retain, nonatomic) NBContentViewController *autoBuyContenViewController; // @synthesize autoBuyContenViewController=_autoBuyContenViewController;
@property(nonatomic) _Bool isFakeChapterItem; // @synthesize isFakeChapterItem=_isFakeChapterItem;
@property(nonatomic) _Bool hasBatteryAndTimeInit; // @synthesize hasBatteryAndTimeInit=_hasBatteryAndTimeInit;
@property(retain, nonatomic) NSDateFormatter *formatter; // @synthesize formatter=_formatter;
@property(retain, nonatomic) NBTranscodingView *transcodingView; // @synthesize transcodingView=_transcodingView;
@property(nonatomic) int transcondingState; // @synthesize transcondingState=_transcondingState;
@property(retain, nonatomic) BottomStatusView *bottomStatusView; // @synthesize bottomStatusView=_bottomStatusView;
@property(retain, nonatomic) UIView *titleBgView; // @synthesize titleBgView=_titleBgView;
@property(retain, nonatomic) UILabel *pageTitleView; // @synthesize pageTitleView=_pageTitleView;
@property(retain, nonatomic) UCReachability *reachability; // @synthesize reachability=_reachability;
@property(retain, nonatomic) NovelBoxStatisticsPageTurningInfo *pageTurningInfoStatistics; // @synthesize pageTurningInfoStatistics=_pageTurningInfoStatistics;
@property(nonatomic) _Bool isFirstViewAppearComplete; // @synthesize isFirstViewAppearComplete=_isFirstViewAppearComplete;
@property(nonatomic) _Bool isFirstRenderComplete; // @synthesize isFirstRenderComplete=_isFirstRenderComplete;
@property(nonatomic) _Bool isFirstRenderSuccessful; // @synthesize isFirstRenderSuccessful=_isFirstRenderSuccessful;
@property(nonatomic) _Bool isFirstRenderWithoutCache; // @synthesize isFirstRenderWithoutCache=_isFirstRenderWithoutCache;
@property(retain, nonatomic) NBReadingProgressHandler *progressHandler; // @synthesize progressHandler=_progressHandler;
@property(retain, nonatomic) id <IDataIntermediary> dataIntermediary; // @synthesize dataIntermediary=_dataIntermediary;
@property(nonatomic) _Bool shouldShowOnlineDataAquireFailPage; // @synthesize shouldShowOnlineDataAquireFailPage=_shouldShowOnlineDataAquireFailPage;
@property(nonatomic) long long retryCount; // @synthesize retryCount=_retryCount;
@property(retain, nonatomic) NSTimer *systimeTimer; // @synthesize systimeTimer=_systimeTimer;
@property(nonatomic) _Bool showLoadingWhenDrawFailed; // @synthesize showLoadingWhenDrawFailed=_showLoadingWhenDrawFailed;
@property(nonatomic) long long retryAllChapter; // @synthesize retryAllChapter=_retryAllChapter;
@property(nonatomic) _Bool pageIsAnimating; // @synthesize pageIsAnimating=_pageIsAnimating;
@property(nonatomic) _Bool fontChangedWaiting; // @synthesize fontChangedWaiting=_fontChangedWaiting;
@property(nonatomic) struct CGRect viewRect; // @synthesize viewRect=_viewRect;
@property(nonatomic) long long currentChapterPageCount; // @synthesize currentChapterPageCount=_currentChapterPageCount;
@property(retain, nonatomic) NBContainerSelectionHandler *selectionHandler; // @synthesize selectionHandler=_selectionHandler;
@property(retain, nonatomic) id <NBLayoutEngineProtocol> layoutEngine; // @synthesize layoutEngine=_layoutEngine;
@property(retain, nonatomic) NBBookDataProvider *dataProvider; // @synthesize dataProvider=_dataProvider;
@property(retain, nonatomic) NBBookItem *bookItem; // @synthesize bookItem=_bookItem;
@property(retain, nonatomic) NBPageTurningManager *pageTurningManager; // @synthesize pageTurningManager=_pageTurningManager;
@property(retain, nonatomic) NBAdditionalPageViewController *additionalPageViewController; // @synthesize additionalPageViewController=_additionalPageViewController;
@property(retain, nonatomic) UIView *maskView; // @synthesize maskView=_maskView;
@property(retain, nonatomic) NBBookLayoutConfig *oldLayoutConfig; // @synthesize oldLayoutConfig=_oldLayoutConfig;
@property(retain, nonatomic) NBBookLayoutConfig *layoutConfig; // @synthesize layoutConfig=_layoutConfig;
@property(retain, nonatomic) id <NBChapterItemProtocol> chapterItem; // @synthesize chapterItem=_chapterItem;
@property(nonatomic) _Bool isFullPage; // @synthesize isFullPage=_isFullPage;
@property(nonatomic) long long pageIndex; // @synthesize pageIndex=_pageIndex;
@property(nonatomic) id <NBContainerControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (_Bool)isCanSelection;
- (void)selectionStarted;
- (void)alertView:(id)arg1 clickedButtonAtIndex:(long long)arg2;
- (_Bool)showUnAuthBookAlertView;
- (id)getDataIntermediary;
- (id)getPageTurnManager;
- (void)tryUpdateCurrentPageViewWithChapterArray:(id)arg1;
- (void)setChapterPageCount:(long long)arg1;
- (void)setFakeChapterItem:(_Bool)arg1;
- (id)getStatisticsPageturning;
- (long long)getPageIndex;
- (id)getChapterItem;
- (void)updatePageViewFromLastReadRecord;
- (void)autoPurchaseFiled;
- (void)tryGetChpaterContent;
- (void)didPurchaseFinished;
- (_Bool)isLastPageInCurrentChapterItem;
- (void)updatePaymentStatusForCurrentPage;
- (_Bool)isCurrentChapterNeedsPurchase;
- (_Bool)shouldShowRecommendPage;
- (_Bool)isLastChapterItemAndLastPage;
- (void)switchToContentView:(id)arg1 animated:(_Bool)arg2;
- (void)switchNavBarAndMenuVisible:(id)arg1;
- (_Bool)canBackWebPage;
- (void)buttonClickedOfBackWebPage:(id)arg1;
- (void)buttonClickedOfChangeSource:(id)arg1;
- (id)getLastChapterName:(id)arg1;
- (void)additionalPageViewControllerDidClickGoBackButton:(id)arg1;
- (void)additionalPageViewController:(id)arg1 openNewUrl:(id)arg2;
- (void)reportDelegateForReaderShowCompletion;
- (void)updateBottomStatusTimeLabel;
- (void)updatePageNumberLabel:(id)arg1;
- (void)updatePageTitleView:(id)arg1;
- (double)getPageContentHeightWithChapterItem:(id)arg1 pageIndex:(unsigned long long)arg2;
- (void)updateBatteryLevel;
- (void)batteryStateChanged:(id)arg1;
- (void)batteryLevelChanged:(id)arg1;
- (void)registerBatteryNotification;
- (void)showTitleAndBottomView:(_Bool)arg1;
- (void)addBottomStatusView;
- (void)addPageTitleView;
- (_Bool)isScrollPageType;
- (_Bool)isShowBigTitle;
- (double)getSourceViewHeight;
- (void)didUpdatePageTurning:(id)arg1;
- (void)startMonitorNetwork;
- (void)applicationWillResignActive:(id)arg1;
- (void)updateBluePointTips:(_Bool)arg1;
- (id)getPageInfoString:(id)arg1 pageIndex:(long long)arg2;
- (id)createContentViewController:(id)arg1 pageIndex:(long long)arg2 canAutoBuy:(_Bool)arg3;
- (void)updateCacheViewControllerWhenInUpDownPageTuring:(id)arg1;
- (void)updateCacheViewController:(id)arg1;
- (void)updatePageViewController:(id)arg1 pageIndex:(long long)arg2 cleanCache:(_Bool)arg3;
- (void)updatePageTitleAndNumberWith:(id)arg1 chapterItem:(id)arg2 pageIndex:(long long)arg3;
- (_Bool)isCanRevert:(id)arg1 originChapterItem:(id)arg2;
- (id)getNextChapterItem:(id)arg1;
- (id)getPreChapterItem:(id)arg1;
- (id)increaseCurrentPageIndexTwice;
- (id)increaseCurrentPageIndex;
- (id)decreaseCurrentPageIndexTwice;
- (id)decreaseCurrentPageIndex;
- (void)handleClickTranscodeDeclareButton;
- (void)handleClickSourceUrlButton;
- (void)showWaterMarkOnTopRightWithIcon:(id)arg1;
- (void)requireOpenChapterSourceUrlForUnAuthBook:(id)arg1;
- (void)trySaveReadingProgress:(id)arg1;
- (void)setCurrentChapterItem:(id)arg1;
- (_Bool)pageViewControllerHandleNextPageUnload:(id)arg1;
- (void)pageViewController:(id)arg1 showSpeedMenu:(_Bool)arg2;
- (_Bool)pageViewController:(id)arg1 arriveFirstPage:(_Bool)arg2;
- (void)hideMenuWithoutAnimation;
- (void)pageViewController:(id)arg1 showMenu:(_Bool)arg2;
- (id)pageViewController:(id)arg1 viewControllerAfterViewController:(id)arg2 preloadType:(int)arg3 turnPage:(_Bool)arg4;
- (id)pageViewController:(id)arg1 viewControllerBeforeViewController:(id)arg2 preloadType:(int)arg3;
- (id)getCurrentViewController;
- (_Bool)isLastPageOfCurBook;
- (double)contentPageHeight:(id)arg1;
- (_Bool)pageViewControllerShouldResetUpDnScroll:(id)arg1;
- (_Bool)pageViewControllerShouldStopAutoTurn:(id)arg1;
- (_Bool)pageViewController:(id)arg1 isShowLoadingForViewController:(id)arg2;
- (_Bool)tryShowLoading:(id)arg1;
- (_Bool)isIgnoreScroll:(id)arg1;
- (void)pageViewController:(id)arg1 didEndPagingViewController:(id)arg2;
- (void)onDidSwitchChapterContent:(id)arg1;
- (void)switchNavBarAndMenuVisible;
- (void)handleOpenSourceURL;
- (void)handleOpenSourceViewControler:(_Bool)arg1;
- (void)didTranscodingFailed:(int)arg1;
- (void)didBackToOrigalWebPage;
- (void)didRetryTransferOnline;
- (void)onDidSkinChange;
- (void)nightModeChange;
- (void)didNovelBoxThemeChangeInAdvance;
- (void)didNovelBoxSkinChange;
- (void)didThemeChange;
- (_Bool)isUseInteractionEnable;
- (_Bool)arrivePageBound:(_Bool)arg1 turnNextPage:(_Bool)arg2;
- (void)didFinishedFromProvider:(int)arg1;
- (void)showOnlineTranscodingViewOnMainThread:(id)arg1;
- (void)showTranscodingViewFailed;
- (void)showTranscodingViewWithDrawState:(int)arg1 chapterItem:(id)arg2 pageIndex:(long long)arg3;
- (id)renderPageAtIndex:(long long)arg1 atChapterItem:(id)arg2 inContext:(struct CGContext *)arg3;
- (int)checkPageBeforeRenderStatusAtIndex:(long long)arg1 atChapterItem:(id)arg2;
- (long long)updateLocalIndex:(long long)arg1 withContenKey:(id)arg2 chapterItemArray:(id)arg3;
- (long long)tryConvertOnlineChapterCIDToLocalChapterIndex;
- (void)updateTxtContentChapterInfo:(id)arg1 pageIndex:(long long)arg2;
- (void)tryAutoBuyChapterItem:(id)arg1 pageIndex:(long long)arg2;
- (void)resetLoadingStatus;
- (void)handleChapterSwitched:(id)arg1 pageIndex:(long long)arg2;
- (void)tryCorrectPageIndex;
- (void)handleProviderDidAquireOnlineDataFailByCdnEmpty:(id)arg1;
- (void)handleProviderTranscodingErrorWithChapterItem:(id)arg1 withReason:(unsigned long long)arg2;
- (void)tryUpdateCurrentPageViewWithChapter:(id)arg1 pageIndex:(long long)arg2 immediate:(_Bool)arg3;
- (void)onProviderDidChapterNotBuy:(id)arg1;
- (void)onProviderDidFinishMergeChaptersInfo;
- (void)onProviderRefreshChapterContent:(id)arg1;
- (void)providerDidUpdateReadingProgressInfo:(id)arg1;
- (void)onProviderDidFailedAquireChaptersInfo:(_Bool)arg1 customizedType:(int)arg2;
- (void)onProviderDidAquireOnlineDataFail:(id)arg1 withType:(long long)arg2;
- (void)onProviderDidErrorPageInfoWithChapterItem:(id)arg1;
- (void)providerDidErrorPageInfoWithChapterIndex:(id)arg1;
- (void)providerPageInfoWithChapterIndex:(id)arg1;
- (void)onProviderDidFinishParseChapterInfo;
- (void)providerRefreshChapterInfo:(_Bool)arg1;
- (void)providerDidUpdateNewChapterFlag:(id)arg1;
- (void)providerDidFinishReadOnineChapterInfo;
- (void)providerDidReceiveNewChapterItem:(id)arg1;
- (void)providerDidFailParseChapterInfo;
- (void)providerDidFinishParseChapterInfo;
- (void)saveReadProgressInfo;
- (void)onChapterItemClicked:(id)arg1;
- (void)onDismissChapterViewController;
- (void)handleTxtReaderClose;
- (void)lightSettingFinished:(float)arg1;
- (void)didBookLayoutChanged:(id)arg1 toNewConfig:(id)arg2;
- (void)stopSystimeTimer;
- (void)timerFunc;
- (void)addTimer;
- (void)initDateFormatter;
- (int)getChapterCount;
- (long long)getIndexOfChapter:(id)arg1;
- (id)getChapterItemByChapterIndex:(long long)arg1;
- (id)getChapterItemByIndex:(long long)arg1;
- (long long)getCurChapterIndex;
- (void)showMenu;
- (void)hideNavBarAndMenu;
- (void)showNavBarAndMenu;
- (void)resetCurrentTurningViewControllerFrame;
- (void)willAnimateRotationToInterfaceOrientation:(long long)arg1;
- (struct CGRect)waterMarkRect;
- (void)resetTitleRect;
- (void)alterTitleRectForWaterMark:(id)arg1;
- (_Bool)isTranscodeViewVisiable;
- (void)hideNavBarAndMenuAnimate:(_Bool)arg1;
- (void)showNavBarAndMenuAnimate:(_Bool)arg1;
- (void)hiddenAddtionalMiddlePageView;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (void)viewWillLayoutSubviews;
- (void)loadView;
- (void)releaseTranscodingView;
- (void)addImageBackgroundView;
- (void)bringMaskSubviewToFront;
- (void)addNightMaskView;
- (void)addContentMaskView;
- (void)initPageTurningManager;
- (void)initStatisticsPageTurningInfo;
- (void)dealloc;
- (void)initConnectAllEvent;
- (void)initDataIntermediary;
- (id)initWithBookItem:(id)arg1 dataProvider:(id)arg2 config:(id)arg3 rect:(struct CGRect)arg4 delegate:(id)arg5;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

