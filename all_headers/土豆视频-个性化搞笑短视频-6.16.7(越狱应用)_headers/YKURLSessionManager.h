//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

#import "GetSequencePathOperationDelegate-Protocol.h"
#import "NSURLSessionDelegate-Protocol.h"
#import "NSURLSessionDownloadDelegate-Protocol.h"

@class DownloadTaskModel, NSMutableArray, NSOperationQueue, NSString, NSTimer, NSURLSession, TDHttpEngine;
@protocol DownloadTaskDelegate;

@interface YKURLSessionManager : NSObject <NSURLSessionDelegate, NSURLSessionDownloadDelegate, GetSequencePathOperationDelegate>
{
    NSOperationQueue *_m3u8Operation;
    _Bool _allowGprs;
    _Bool _isBusy;
    int _state;
    id <DownloadTaskDelegate> _delegate;
    NSURLSession *_session;
    NSString *_sessionIdentifier;
    NSURLSession *_m3u8Session;
    CDUnknownBlockType _backgroundSessionCompletionHandler;
    long long _downloadFormat;
    long long _recordSize;
    double _recordTime;
    double _receiveDataTime;
    long long _checkTimes;
    NSOperationQueue *_operationQueue;
    TDHttpEngine *_jsonClient;
    NSMutableArray *_downloadTasks;
    NSMutableArray *_downloadModels;
    DownloadTaskModel *_downloadModel;
    NSTimer *_taskTimer;
    NSTimer *_validSessionTimer;
}

+ (id)sharedInstance;
@property(retain, nonatomic) NSTimer *validSessionTimer; // @synthesize validSessionTimer=_validSessionTimer;
@property(nonatomic) _Bool isBusy; // @synthesize isBusy=_isBusy;
@property(retain, nonatomic) NSTimer *taskTimer; // @synthesize taskTimer=_taskTimer;
@property(retain, nonatomic) DownloadTaskModel *downloadModel; // @synthesize downloadModel=_downloadModel;
@property(retain, nonatomic) NSMutableArray *downloadModels; // @synthesize downloadModels=_downloadModels;
@property(retain, nonatomic) NSMutableArray *downloadTasks; // @synthesize downloadTasks=_downloadTasks;
@property(retain, nonatomic) TDHttpEngine *jsonClient; // @synthesize jsonClient=_jsonClient;
@property(readonly, nonatomic) NSOperationQueue *operationQueue; // @synthesize operationQueue=_operationQueue;
@property(nonatomic) long long checkTimes; // @synthesize checkTimes=_checkTimes;
@property(nonatomic) double receiveDataTime; // @synthesize receiveDataTime=_receiveDataTime;
@property(nonatomic) double recordTime; // @synthesize recordTime=_recordTime;
@property(nonatomic) long long recordSize; // @synthesize recordSize=_recordSize;
@property(readonly, nonatomic) _Bool allowGprs; // @synthesize allowGprs=_allowGprs;
@property(nonatomic) long long downloadFormat; // @synthesize downloadFormat=_downloadFormat;
@property(copy, nonatomic) CDUnknownBlockType backgroundSessionCompletionHandler; // @synthesize backgroundSessionCompletionHandler=_backgroundSessionCompletionHandler;
@property(retain, nonatomic) NSURLSession *m3u8Session; // @synthesize m3u8Session=_m3u8Session;
@property(nonatomic) int state; // @synthesize state=_state;
@property(readonly, nonatomic) NSString *sessionIdentifier; // @synthesize sessionIdentifier=_sessionIdentifier;
@property(retain, nonatomic) NSURLSession *session; // @synthesize session=_session;
@property(nonatomic) __weak id <DownloadTaskDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (id)currentModel;
- (id)getDownloadModels;
- (id)createSession;
- (void)stopTaskTimer;
- (void)restart;
- (void)checkTaskTimer;
- (void)stopCheck;
- (void)startCheck;
- (void)applicationWillTerminate;
- (void)moveToFolder:(id)arg1 task:(id)arg2;
- (void)mvFileToFolder:(id)arg1 sequence:(id)arg2 location:(id)arg3;
- (_Bool)addSkipBackupAttributeToItemAtURL:(id)arg1;
- (void)createFolder:(id)arg1;
- (void)resumDownload:(id)arg1 sequence:(id)arg2;
- (void)endBackgroudTask;
- (void)delayEndBackgroundTask;
- (void)setCompleteHandler:(CDUnknownBlockType)arg1 identifier:(id)arg2;
- (void)URLSession:(id)arg1 didReceiveChallenge:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)URLSessionDidFinishEventsForBackgroundURLSession:(id)arg1;
- (void)URLSession:(id)arg1 didBecomeInvalidWithError:(id)arg2;
- (void)URLSession:(id)arg1 downloadTask:(id)arg2 didResumeAtOffset:(long long)arg3 expectedTotalBytes:(long long)arg4;
- (void)URLSession:(id)arg1 downloadTask:(id)arg2 didWriteData:(long long)arg3 totalBytesWritten:(long long)arg4 totalBytesExpectedToWrite:(long long)arg5;
- (void)URLSession:(id)arg1 task:(id)arg2 didCompleteWithError:(id)arg3;
- (void)URLSession:(id)arg1 downloadTask:(id)arg2 didFinishDownloadingToURL:(id)arg3;
- (void)m3u8DataHanldeJson:(id)arg1 error:(id)arg2 model:(id)arg3 urlResponseStatusCode:(long long)arg4;
- (void)downloadError:(id)arg1 sequence:(id)arg2 error:(id)arg3 urlResponseStatusCode:(long long)arg4;
- (void)removeTask:(id)arg1;
- (void)downloadFinish:(id)arg1 sequence:(id)arg2;
- (void)resetSessionID;
- (void)validSession;
- (void)validSessionWithNewID;
- (void)invalidSession:(_Bool)arg1;
- (void)setGprsDownload:(_Bool)arg1;
- (unsigned long long)computAllTaskNeedSpace:(id)arg1;
- (id)getAllTaskModels:(id)arg1;
- (void)handleOperationQueue:(id)arg1;
- (void)stopTaskWhenLaunch;
- (void)stopAndSaveModel;
- (void)cancel:(id)arg1;
- (id)cancelExcept:(id)arg1;
- (void)downloadNext;
- (id)cancelExceptCurrent;
- (void)stop;
- (void)startM3u8Task:(id)arg1;
- (void)startDownloadTask:(id)arg1 sequence:(id)arg2;
- (void)start:(id)arg1;
- (id)init;
- (void)dealloc;
- (void)parseInfoFromTask:(id)arg1 recordId:(id *)arg2 sequenceId:(id *)arg3 fileType:(id *)arg4;
- (void)parseModelFromTask:(id)arg1 model:(id *)arg2 aSequence:(id *)arg3;
- (void)checkDownloadState;
- (void)regetM3u8AndDownload:(id)arg1;
- (void)YKURLSessionDidFinishEventsForBackgroundURLSession:(id)arg1;
- (void)YKURLSession:(id)arg1 didBecomeInvalidWithError:(id)arg2;
- (void)YKURLSession:(id)arg1 downloadTask:(id)arg2 didWriteData:(long long)arg3 totalBytesWritten:(long long)arg4 totalBytesExpectedToWrite:(long long)arg5;
- (void)YKURLSession:(id)arg1 task:(id)arg2 didCompleteWithError:(id)arg3;
- (void)invalidSessionAndRestart:(_Bool)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

