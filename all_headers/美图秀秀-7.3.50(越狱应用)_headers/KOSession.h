//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class KOAuthWebViewController, KOLoginTypeSelectorController, NSDate, NSDateFormatter, NSMutableArray, NSString, NSTimer, NSURLSession, UIColor, UIImage, UIViewController;

@interface KOSession : NSObject
{
    _Bool _isGettingAccessToken;
    _Bool _isRefreshingAccessToken;
    _Bool _isUpgradingGrant;
    NSMutableArray *_pendingTasks;
    CDUnknownBlockType _sessionCompletionHandler;
    CDUnknownBlockType _ageAuthCompletionHandler;
    NSDateFormatter *_logingDateFormatter;
    _Bool _automaticPeriodicRefresh;
    NSString *_appKey;
    NSString *_redirectUri;
    NSString *_accessToken;
    NSString *_refreshToken;
    NSDate *_expiresAccessTokenTime;
    long long _state;
    NSString *_clientSecret;
    UIViewController *_presentingViewController;
    long long _presentedViewStatusBarStyle;
    UIColor *_presentedViewBarTitleColor;
    UIColor *_presentedViewBarTintColor;
    UIColor *_presentedViewBarButtonTintColor;
    UIImage *_presentedViewBarBackgroundImage;
    NSString *_appBundleID;
    NSDate *_nextAccessTokenInfoRequestTime;
    KOLoginTypeSelectorController *_loginSelectorViewController;
    KOAuthWebViewController *_webViewController;
    NSTimer *_tokenInfoTimer;
    NSURLSession *_URLSession;
}

+ (void)handleDidEnterBackground;
+ (void)handleDidBecomeActive;
+ (_Bool)handleOpenURL:(id)arg1;
+ (_Bool)isStoryPostCallback:(id)arg1;
+ (_Bool)isKakaoLinkCallback:(id)arg1;
+ (_Bool)isKakaoAgeAuthCallback:(id)arg1;
+ (_Bool)isKakaoAccountLoginCallback:(id)arg1;
+ (id)sharedSession;
+ (id)createInstance;
@property(readonly) NSURLSession *URLSession; // @synthesize URLSession=_URLSession;
@property(retain, nonatomic) NSTimer *tokenInfoTimer; // @synthesize tokenInfoTimer=_tokenInfoTimer;
@property(retain, nonatomic) KOAuthWebViewController *webViewController; // @synthesize webViewController=_webViewController;
@property(retain, nonatomic) KOLoginTypeSelectorController *loginSelectorViewController; // @synthesize loginSelectorViewController=_loginSelectorViewController;
@property(copy, nonatomic) NSDate *nextAccessTokenInfoRequestTime; // @synthesize nextAccessTokenInfoRequestTime=_nextAccessTokenInfoRequestTime;
@property(copy, nonatomic) NSString *appBundleID; // @synthesize appBundleID=_appBundleID;
@property(retain, nonatomic) UIImage *presentedViewBarBackgroundImage; // @synthesize presentedViewBarBackgroundImage=_presentedViewBarBackgroundImage;
@property(retain, nonatomic) UIColor *presentedViewBarButtonTintColor; // @synthesize presentedViewBarButtonTintColor=_presentedViewBarButtonTintColor;
@property(retain, nonatomic) UIColor *presentedViewBarTintColor; // @synthesize presentedViewBarTintColor=_presentedViewBarTintColor;
@property(retain, nonatomic) UIColor *presentedViewBarTitleColor; // @synthesize presentedViewBarTitleColor=_presentedViewBarTitleColor;
@property(nonatomic) long long presentedViewStatusBarStyle; // @synthesize presentedViewStatusBarStyle=_presentedViewStatusBarStyle;
@property(nonatomic) __weak UIViewController *presentingViewController; // @synthesize presentingViewController=_presentingViewController;
@property(nonatomic, getter=isAutomaticPeriodicRefresh) _Bool automaticPeriodicRefresh; // @synthesize automaticPeriodicRefresh=_automaticPeriodicRefresh;
@property(copy, nonatomic) NSString *clientSecret; // @synthesize clientSecret=_clientSecret;
@property(nonatomic) long long state; // @synthesize state=_state;
@property(copy, nonatomic) NSDate *expiresAccessTokenTime; // @synthesize expiresAccessTokenTime=_expiresAccessTokenTime;
@property(copy, nonatomic) NSString *refreshToken; // @synthesize refreshToken=_refreshToken;
@property(copy, nonatomic) NSString *accessToken; // @synthesize accessToken=_accessToken;
@property(copy, nonatomic) NSString *redirectUri; // @synthesize redirectUri=_redirectUri;
@property(copy, nonatomic) NSString *appKey; // @synthesize appKey=_appKey;
- (void).cxx_destruct;
- (void)tokenWithCode:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)requestTokensWithCode:(id)arg1;
- (void)refreshAccessTokenWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)postSessionDidChangeNotificationOnMainThread;
- (void)cancelPendingTasksWithError:(id)arg1;
- (void)resumePendingTasks;
- (void)pendTask:(id)arg1;
- (_Bool)isRefreshingAccessToken;
- (void)logoutAndCloseWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)dismissLoginSelectorView;
- (void)closeWithError:(id)arg1;
- (void)close;
- (void)showNewApprovalViaWebView:(id)arg1;
- (void)loginViaWebView:(_Bool)arg1;
- (void)loginViaKakaoStory;
- (void)loginViaKakaoTalk;
- (id)dataString;
- (id)jsonString:(id)arg1;
- (id)extraAuthParams;
- (void)didSelectLoginType:(long long)arg1;
- (void)showAgeAuthWithAuthLevel:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)showNewApproval:(id)arg1;
- (void)openWithCompletionHandler:(CDUnknownBlockType)arg1 authTypes:(id)arg2;
- (void)openWithCompletionHandler:(CDUnknownBlockType)arg1 authType:(long long)arg2;
- (void)openWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)handleDidBecomeActive;
- (void)handleDidEnterBackground;
- (void)stopTokenInfoTimer;
- (void)startTokenInfoTimer:(double)arg1;
- (void)checkExpiresAndRefreshToken;
- (_Bool)handleAuthorize:(id)arg1 error:(id)arg2;
- (_Bool)isOpen;
- (_Bool)isAccountIntegrationSupportedInStory;
- (_Bool)isAccountIntegrationSupportedInTalk;
- (_Bool)kompassStoryAppAuthAvailable;
- (_Bool)kompassAppAuthAvailable;
- (id)init;
- (id)initWithAppKey:(id)arg1 appBundleID:(id)arg2 redirectUri:(id)arg3;

@end

