//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <UIKit/UIView.h>

#import "JSHandlerRegisteProtocol-Protocol.h"
#import "UCDocInteractNotifyReceiver-Protocol.h"
#import "UIWebViewDelegate-Protocol.h"
#import "WebkitBasicWebView-Protocol.h"
#import "WebkitJSEventProtocol-Protocol.h"

@class JSEventDispatcher, NSMutableArray, NSString, NSURLRequest, UIScrollView, UIWebView, WVJSBridge;
@protocol TinyUIWebViewExDelegate;

@interface TinyUIWebViewEx : UIView <UIWebViewDelegate, UCDocInteractNotifyReceiver, WebkitBasicWebView, JSHandlerRegisteProtocol, WebkitJSEventProtocol>
{
    int _injectJsMask;
    UIWebView *_webView;
    WVJSBridge *_webviewJSBridge;
    JSEventDispatcher *_jsEventDispatcher;
    id <TinyUIWebViewExDelegate> _delegate;
    NSMutableArray *_URLInterceptors;
    long long _options;
    NSString *_wvuuid;
}

@property(nonatomic) int injectJsMask; // @synthesize injectJsMask=_injectJsMask;
@property(retain, nonatomic) NSString *wvuuid; // @synthesize wvuuid=_wvuuid;
@property(nonatomic) long long options; // @synthesize options=_options;
@property(retain, nonatomic) NSMutableArray *URLInterceptors; // @synthesize URLInterceptors=_URLInterceptors;
@property(nonatomic) id <TinyUIWebViewExDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) JSEventDispatcher *jsEventDispatcher; // @synthesize jsEventDispatcher=_jsEventDispatcher;
@property(retain, nonatomic) WVJSBridge *webviewJSBridge; // @synthesize webviewJSBridge=_webviewJSBridge;
@property(retain, nonatomic) UIWebView *webView; // @synthesize webView=_webView;
- (void)onLoginOKWithJSString:(id)arg1;
- (id)performanceTiming;
- (_Bool)interceptAllURL:(id)arg1 navigationType:(long long)arg2;
- (void)removeURLInterceptor:(id)arg1;
- (void)addURLInterceptor:(id)arg1;
- (_Bool)isSendingMessage:(id)arg1 clearIfMatch:(_Bool)arg2;
- (void)documentInteractiveWithMsg:(id)arg1;
- (id)uuidString;
- (void)deregisterForJSHandler:(id)arg1 selector:(SEL)arg2 target:(id)arg3;
- (_Bool)registerForJSHandler:(id)arg1 selector:(SEL)arg2 target:(id)arg3;
- (_Bool)registerForJSHandler:(id)arg1 selector:(SEL)arg2 target:(id)arg3 internal:(_Bool)arg4;
- (void)deregisterHandleV2WithName:(id)arg1 selector:(SEL)arg2 target:(id)arg3;
- (_Bool)registerHandlerV2WithName:(id)arg1 selector:(SEL)arg2 target:(id)arg3;
- (void)dispatchVisibilityChangeWithHidden:(_Bool)arg1;
- (void)dispatchJSEventWithTarget:(id)arg1 eventName:(id)arg2 userInfo:(id)arg3;
- (void)dispatchJSEventName:(id)arg1 userInfo:(id)arg2;
- (void)webView:(id)arg1 didFailLoadWithError:(id)arg2;
- (void)webViewDidFinishLoad:(id)arg1;
- (void)webViewDidStartLoad:(id)arg1;
- (_Bool)webView:(id)arg1 shouldStartLoadWithRequest:(id)arg2 navigationType:(long long)arg3;
- (id)webPageURL;
- (id)webPageTitle;
- (void)evaluateJavaScript:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (id)stringByEvaluatingJavaScriptFromString:(id)arg1;
- (id)webViewScrollView;
- (id)viewOfWindow;
- (id)rawWebView;
- (id)url;
@property(nonatomic) _Bool scalesPageToFit;
@property(readonly, nonatomic, getter=isLoading) _Bool loading;
@property(readonly, nonatomic, getter=canGoForward) _Bool canGoForward;
@property(readonly, nonatomic, getter=canGoBack) _Bool canGoBack;
- (void)goForward;
- (void)goBack;
- (void)stopLoading;
- (void)reload;
@property(readonly, retain, nonatomic) NSURLRequest *request;
- (void)loadData:(id)arg1 MIMEType:(id)arg2 textEncodingName:(id)arg3 baseURL:(id)arg4;
- (void)loadHTMLString:(id)arg1 baseURL:(id)arg2;
- (void)loadRequest:(id)arg1;
@property(readonly, retain, nonatomic) UIScrollView *scrollView;
- (void)dealloc;
- (void)disableWebViewDecoration:(id)arg1;
- (void)setFrame:(struct CGRect)arg1;
- (id)initWithFrame:(struct CGRect)arg1 options:(long long)arg2;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

