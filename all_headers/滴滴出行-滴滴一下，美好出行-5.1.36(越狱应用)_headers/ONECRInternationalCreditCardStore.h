//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class NSString, ONECRPollingTimer;

@interface ONECRInternationalCreditCardStore : NSObject
{
    long long _pollingCount;
    long long _pollingMaxTimes;
    double _pollingInterval;
    ONECRPollingTimer *_pollingTimer;
    CDUnknownBlockType _pollingSuccessCallBack;
    CDUnknownBlockType _pollingFailureCallBack;
    CDUnknownBlockType _pollingCompletionCallBack;
    long long _pollingResult;
    NSString *_encryptRiskInfo;
    NSString *_encryptKey;
}

+ (id)achievePublicKeyParamStr;
+ (id)achieveParamStr:(id)arg1;
+ (id)sharedInstance;
@property(retain, nonatomic) NSString *encryptKey; // @synthesize encryptKey=_encryptKey;
@property(retain, nonatomic) NSString *encryptRiskInfo; // @synthesize encryptRiskInfo=_encryptRiskInfo;
@property(nonatomic) long long pollingResult; // @synthesize pollingResult=_pollingResult;
@property(copy, nonatomic) CDUnknownBlockType pollingCompletionCallBack; // @synthesize pollingCompletionCallBack=_pollingCompletionCallBack;
@property(copy, nonatomic) CDUnknownBlockType pollingFailureCallBack; // @synthesize pollingFailureCallBack=_pollingFailureCallBack;
@property(copy, nonatomic) CDUnknownBlockType pollingSuccessCallBack; // @synthesize pollingSuccessCallBack=_pollingSuccessCallBack;
@property(retain, nonatomic) ONECRPollingTimer *pollingTimer; // @synthesize pollingTimer=_pollingTimer;
@property(nonatomic) double pollingInterval; // @synthesize pollingInterval=_pollingInterval;
@property(nonatomic) long long pollingMaxTimes; // @synthesize pollingMaxTimes=_pollingMaxTimes;
@property(nonatomic) long long pollingCount; // @synthesize pollingCount=_pollingCount;
- (void).cxx_destruct;
- (void)stopSignPollingWithHintTitle:(id)arg1 hintMsg:(id)arg2;
- (void)cleanUpPolling;
- (_Bool)startBindResultPollingWithSuccessBlock:(CDUnknownBlockType)arg1 failureBlock:(CDUnknownBlockType)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (void)requestQuerySignResult;
- (void)requestPublicKeyWithSuccessBlock:(CDUnknownBlockType)arg1 failureBlock:(CDUnknownBlockType)arg2;
- (void)requestSignQuickPayWithParam:(id)arg1 identityID:(id)arg2 bankCardInfo:(id)arg3 successBlock:(CDUnknownBlockType)arg4 failureBlock:(CDUnknownBlockType)arg5;
- (void)updateEncryptRiskInfo:(id)arg1 encryptKey:(id)arg2;
- (id)init;

@end

