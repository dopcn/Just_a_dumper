//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "KGScrollManagerViewController.h"

#import "GuessFavorGarbageSheetDelegate-Protocol.h"
#import "GuessFavorMoreInfoSheetDelegate-Protocol.h"
#import "KGCollectionSheetDelegate-Protocol.h"
#import "KGRecommendSourceManagerViewControllerDelegate-Protocol.h"
#import "KGSingerListSheetDelegate-Protocol.h"
#import "SongLyricDownLoadLogicThreadDelegate-Protocol.h"

@class GFBlurView, GFPlayButton, KGSlider, KGSongCommentBLL, KGTextRollView, KGThemeButton, LyricViewMultiLine, NSString, NSTimer, SongInfo, SongLyricDownLoadLogicThread, UIButton, UIImageView, UILongPressGestureRecognizer, UIView;

@interface KGGuessFavorPlayViewController : KGScrollManagerViewController <GuessFavorGarbageSheetDelegate, KGRecommendSourceManagerViewControllerDelegate, SongLyricDownLoadLogicThreadDelegate, GuessFavorMoreInfoSheetDelegate, KGSingerListSheetDelegate, KGCollectionSheetDelegate>
{
    UIButton *_selectedBtn;
    _Bool _isActive;
    NSTimer *_progressTimer;
    double _upTime;
    _Bool _quitFlag;
    _Bool _clickTransferBtnFlag;
    _Bool _isTransferViewShowing;
    SongInfo *_currentSongInfo;
    _Bool _isOnBufferLoading;
    UIView *_modeSegmentControl;
    UIButton *_normalModeBtn;
    UIButton *_climaxModeBtn;
    UIButton *_moreBtn;
    UIView *_contentView;
    UIView *_transferView;
    UIImageView *_contentBg;
    GFBlurView *_blurContentBg;
    LyricViewMultiLine *_lyricView;
    UIView *_playContentView;
    UIImageView *_albumImgView;
    KGTextRollView *_musicNameView;
    KGTextRollView *_singerNameView;
    UIImageView *_singerArrow;
    GFPlayButton *_playButton;
    KGSlider *_slider;
    UIButton *_recommendReasonBtn;
    UIView *_seperateLine;
    UIButton *_commentBtn;
    KGThemeButton *_garbageBtn;
    KGThemeButton *_likeBtn;
    KGThemeButton *_playNextBtn;
    KGThemeButton *_downloadBtn;
    UIImageView *_arithmeticView;
    UILongPressGestureRecognizer *_garbageLongGesture;
    KGSongCommentBLL *_commentBll;
    SongLyricDownLoadLogicThread *_lyricLogicThread;
}

@property(retain, nonatomic) SongLyricDownLoadLogicThread *lyricLogicThread; // @synthesize lyricLogicThread=_lyricLogicThread;
@property(retain, nonatomic) KGSongCommentBLL *commentBll; // @synthesize commentBll=_commentBll;
@property(retain, nonatomic) UILongPressGestureRecognizer *garbageLongGesture; // @synthesize garbageLongGesture=_garbageLongGesture;
@property(nonatomic) _Bool isOnBufferLoading; // @synthesize isOnBufferLoading=_isOnBufferLoading;
@property(retain, nonatomic) UIImageView *arithmeticView; // @synthesize arithmeticView=_arithmeticView;
@property(retain, nonatomic) KGThemeButton *downloadBtn; // @synthesize downloadBtn=_downloadBtn;
@property(retain, nonatomic) KGThemeButton *playNextBtn; // @synthesize playNextBtn=_playNextBtn;
@property(retain, nonatomic) KGThemeButton *likeBtn; // @synthesize likeBtn=_likeBtn;
@property(retain, nonatomic) KGThemeButton *garbageBtn; // @synthesize garbageBtn=_garbageBtn;
@property(retain, nonatomic) UIButton *commentBtn; // @synthesize commentBtn=_commentBtn;
@property(retain, nonatomic) UIView *seperateLine; // @synthesize seperateLine=_seperateLine;
@property(retain, nonatomic) UIButton *recommendReasonBtn; // @synthesize recommendReasonBtn=_recommendReasonBtn;
@property(retain, nonatomic) KGSlider *slider; // @synthesize slider=_slider;
@property(retain, nonatomic) GFPlayButton *playButton; // @synthesize playButton=_playButton;
@property(retain, nonatomic) UIImageView *singerArrow; // @synthesize singerArrow=_singerArrow;
@property(retain, nonatomic) KGTextRollView *singerNameView; // @synthesize singerNameView=_singerNameView;
@property(retain, nonatomic) KGTextRollView *musicNameView; // @synthesize musicNameView=_musicNameView;
@property(retain, nonatomic) UIImageView *albumImgView; // @synthesize albumImgView=_albumImgView;
@property(retain, nonatomic) UIView *playContentView; // @synthesize playContentView=_playContentView;
@property(retain, nonatomic) LyricViewMultiLine *lyricView; // @synthesize lyricView=_lyricView;
@property(retain, nonatomic) GFBlurView *blurContentBg; // @synthesize blurContentBg=_blurContentBg;
@property(retain, nonatomic) UIImageView *contentBg; // @synthesize contentBg=_contentBg;
@property(retain, nonatomic) UIView *transferView; // @synthesize transferView=_transferView;
@property(retain, nonatomic) UIView *contentView; // @synthesize contentView=_contentView;
@property(retain, nonatomic) UIButton *moreBtn; // @synthesize moreBtn=_moreBtn;
@property(retain, nonatomic) UIButton *climaxModeBtn; // @synthesize climaxModeBtn=_climaxModeBtn;
@property(retain, nonatomic) UIButton *normalModeBtn; // @synthesize normalModeBtn=_normalModeBtn;
@property(retain, nonatomic) UIView *modeSegmentControl; // @synthesize modeSegmentControl=_modeSegmentControl;
- (void).cxx_destruct;
- (void)stopRotatePlayingAnimating;
- (void)startRotationAnimation;
- (void)clickArithmeticView;
- (void)startArithmeticAnimation;
- (void)updateLikeBtnState:(_Bool)arg1;
- (void)recommendSourceMusicChangeLockStatus:(_Bool)arg1;
- (void)showRecommendSourceMusicHasChangeToastWithLockStatus:(_Bool)arg1;
- (void)didReceiveMemoryWarning;
- (long long)showPlayBarWay;
- (id)manualPath;
- (id)topBtnSelectedBgImg:(double)arg1;
- (id)createTopButtonWithFrame:(struct CGRect)arg1 title:(id)arg2;
- (void)createTransferView;
- (void)createBottomBtns;
- (void)setSlideClimaxMode:(_Bool)arg1;
- (void)configureSlider:(double)arg1 verticalMargin:(double)arg2;
- (void)createPlayContentView;
- (void)createUIContent;
- (void)showGuessRadioNotRecommendAlertView;
- (void)savePlayListHistory;
- (void)clearPlayer;
- (void)updateSegmentControlEnabled:(_Bool)arg1;
- (void)resetMode:(_Bool)arg1;
- (void)dealloc;
- (void)KGUsingControllerState:(int)arg1;
- (void)updateBottomBtns:(id)arg1;
- (void)setDownBtnIsPay:(_Bool)arg1;
- (void)updateDownloadStatus:(id)arg1;
- (void)updateLikeStatus:(id)arg1;
- (void)updateBuffSize;
- (void)sliderValueChange:(id)arg1;
- (void)updateProgress:(double)arg1 Duration:(double)arg2;
- (void)progressUpdate;
- (void)startTimer;
- (void)stopTimer;
- (void)pauseRunSingerName;
- (void)pauseRunSongName;
- (void)setBlurEffectWithViewWithAnimation;
- (void)updateBg:(id)arg1 isAnimate:(_Bool)arg2;
- (void)setDefaultAlbumImage;
- (void)setSongKrc:(id)arg1;
- (void)setSongName:(id)arg1;
- (void)setSingerName:(id)arg1;
- (_Bool)shouldShowImage:(id)arg1 isPreload:(_Bool)arg2;
- (void)loadNextSongLyric;
- (void)loadNextSongAlbum:(_Bool)arg1;
- (void)loadAlbumImage:(id)arg1 isPreload:(_Bool)arg2 shouldAnimatingShowAlbum:(_Bool)arg3;
- (void)updateSongCommentCount:(id)arg1;
- (void)updateViewUI:(id)arg1 isPreload:(_Bool)arg2 shouldAnimatingShowAlbum:(_Bool)arg3;
- (void)setIsBuffing:(_Bool)arg1;
- (void)handleNotification:(id)arg1;
- (void)registerNotification;
- (void)playOrStop:(id)arg1;
- (void)showDelayLoading;
- (void)startPlayGuessFavorRadio;
- (void)setPlayState:(_Bool)arg1;
- (void)playStateChange:(id)arg1;
- (void)startGuessFvaorFlowWithNetAsk:(CDUnknownBlockType)arg1;
- (void)SongLyricDownLoadLogicThread:(id)arg1 krcFileName:(id)arg2 andErrorCode:(int)arg3 andError:(id)arg4;
- (void)garbageSheetDidSelect:(id)arg1 withIndex:(long long)arg2;
- (void)selectSingerFinish:(id)arg1;
- (void)addSongeToFavoriteSucceed;
- (void)moreInfoSheetDidSelect:(id)arg1 withIndex:(long long)arg2;
- (void)playInOtherMode;
- (void)lyricViewTapAction;
- (void)albumTapAction;
- (void)singerTapAction;
- (void)garbageLongGestureFunction:(id)arg1;
- (void)recommendReasonBtnAction:(id)arg1;
- (void)commentBtnAction:(id)arg1;
- (void)playNextBtnAction:(id)arg1;
- (void)downloadBtnAction:(id)arg1;
- (void)likeBtnAction:(id)arg1;
- (void)garbageBtnAction:(id)arg1;
- (void)moreBtnAction:(id)arg1;
- (void)exploreBtnAction:(id)arg1;
- (void)playBtnAction:(id)arg1;
- (void)modeBtnAction:(id)arg1;
- (void)preReadyGuessFavorData;
- (void)viewDidLoad;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

