//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

#import "PlayItem-Protocol.h"

@class MPMediaItem, MemAlbum, MemArtist, NSArray, NSDate, NSMutableArray, NSNumber, NSString, NSURL;
@protocol MemTrackDownloadDelegate;

@interface MemTrack : NSObject <PlayItem>
{
    _Bool HDMusicAvailable;
    _Bool isKingSong;
    _Bool multipleDownload;
    _Bool isAvaible;
    _Bool sqAvailable;
    _Bool isLebo;
    _Bool listenCached;
    _Bool isEncrypt;
    _Bool _ShowPayIdentifier;
    _Bool _webDownload;
    _Bool _hasMV;
    _Bool _isCreateFromLocal;
    _Bool _isNextSong;
    _Bool _canFreePlay;
    _Bool _canFreeDownload;
    int resourceType;
    int chargeType;
    int listenChargeType;
    int preferedBitrate;
    int totalByte;
    int downloadedByte;
    int _copyType;
    int _resourceTypeExt;
    int _relateStatus;
    int _playNum;
    NSString *trackID;
    NSNumber *iPodPersistentID;
    NSNumber *trackType;
    NSString *trackName;
    NSString *lrcURL;
    NSString *imageURL;
    NSString *smallImageURL;
    NSString *artistImageURL;
    NSString *albumImageURL;
    NSString *artistID;
    NSString *artistName;
    NSString *albumID;
    NSString *albumName;
    MemAlbum *album;
    MemArtist *artist;
    NSString *thirdPartyResource;
    long long songPayState;
    NSString *trackExt;
    NSNumber *albumNO;
    NSString *allRate;
    NSNumber *lrcIsNew;
    NSNumber *lrcIsManual;
    NSNumber *albumIsNew;
    NSNumber *albumIsManual;
    NSNumber *isOfflined;
    NSNumber *downloadSource;
    NSNumber *cloudDownloadType;
    NSDate *downloadTime;
    NSDate *dateAddedToRecentPlaylist;
    NSNumber *preferedQuality;
    id <MemTrackDownloadDelegate> downloadDelegate;
    NSString *bitRate;
    NSNumber *trackStatus;
    NSNumber *favPosition;
    NSNumber *isFavorited;
    NSDate *favDate;
    NSNumber *favType;
    NSNumber *storageLocation;
    double dlConnectTime;
    double dlTime;
    NSDate *startConnect;
    NSDate *startDownload;
    NSString *downloadFrom;
    NSString *downloadFrom2;
    id info;
    id cacheURL;
    NSNumber *replayGain;
    NSNumber *style;
    NSNumber *trackFileID;
    NSMutableArray *urlsForPlay;
    NSString *bigImageURL;
    id trackJson;
    NSString *_localFilePath;
    NSNumber *hasAccompany;
    NSString *accompanyID;
    long long trackResourceType;
    NSString *_listenFilePath;
    NSString *versions;
    NSArray *artistList;
    NSString *markType;
    NSString *mediaInfo;
    NSString *_recMethod;
    NSString *_bitrate_fee;
    NSNumber *_musicType;
    NSURL *_trackURL;
    MPMediaItem *_mediaItem;
    NSDate *_urlExpireDate;
    NSString *_searchArtistId;
    NSNumber *_down_source;
    NSString *_bitRateFirst;
    double _duration;
    NSString *_fileFormat;
    NSNumber *_original;
    NSString *_originalRate;
    NSNumber *_compress;
    NSNumber *_downloadOriginal;
    long long _del_status;
    long long _previousQuality;
    long long _playingQuality;
    long long _forceOnline;
    NSNumber *_rank;
    NSNumber *_scoreChange;
    NSNumber *_score;
    NSString *_shareurlWithTrack;
    unsigned long long _buyType;
    NSString *_buyID;
    NSString *_buyURL;
    NSString *_resRewardFlag;
    NSString *_totalListenNums;
}

+ (_Bool)isYYR:(id)arg1 key:(id)arg2;
+ (id)memTrackWithLocalPlaylistItem:(id)arg1;
+ (id)memTrackWithRecentPlaylistItem:(id)arg1;
+ (id)memTrackWithCloud:(id)arg1 syncDownload:(_Bool)arg2;
+ (id)memTrackWithTrack:(id)arg1;
+ (id)memTrackWithDownload:(id)arg1;
+ (id)memTrackWithPersonalRadioDic:(id)arg1;
+ (id)memTrackWithRadioDic:(id)arg1;
+ (id)memTrackWithRedHeartDic:(id)arg1 pos:(long long)arg2;
+ (id)memTrackWithListDic:(id)arg1;
+ (id)memTrackWithRecomDailySongModel:(id)arg1 allowTrakIDEmpty:(_Bool)arg2;
+ (id)memTrackWithSearchDic:(id)arg1;
+ (_Bool)p_setShowPay:(id)arg1;
+ (id)memTrackWithDic:(id)arg1 allowTrakIDEmpty:(_Bool)arg2;
+ (id)memTrackWithKingBoardDetailSongListModel:(id)arg1;
+ (id)memTrackWithRecordDict:(id)arg1;
@property(copy, nonatomic) NSString *totalListenNums; // @synthesize totalListenNums=_totalListenNums;
@property(copy, nonatomic) NSString *resRewardFlag; // @synthesize resRewardFlag=_resRewardFlag;
@property(copy, nonatomic) NSString *buyURL; // @synthesize buyURL=_buyURL;
@property(copy, nonatomic) NSString *buyID; // @synthesize buyID=_buyID;
@property(nonatomic) unsigned long long buyType; // @synthesize buyType=_buyType;
@property(nonatomic) _Bool canFreeDownload; // @synthesize canFreeDownload=_canFreeDownload;
@property(nonatomic) _Bool canFreePlay; // @synthesize canFreePlay=_canFreePlay;
@property(retain, nonatomic) NSString *shareurlWithTrack; // @synthesize shareurlWithTrack=_shareurlWithTrack;
@property(retain, nonatomic) NSNumber *score; // @synthesize score=_score;
@property(retain, nonatomic) NSNumber *scoreChange; // @synthesize scoreChange=_scoreChange;
@property(retain, nonatomic) NSNumber *rank; // @synthesize rank=_rank;
@property(nonatomic) long long forceOnline; // @synthesize forceOnline=_forceOnline;
@property(nonatomic) long long playingQuality; // @synthesize playingQuality=_playingQuality;
@property(nonatomic) long long previousQuality; // @synthesize previousQuality=_previousQuality;
@property(nonatomic) int playNum; // @synthesize playNum=_playNum;
@property(nonatomic) long long del_status; // @synthesize del_status=_del_status;
@property(nonatomic) _Bool isNextSong; // @synthesize isNextSong=_isNextSong;
@property(retain, nonatomic) NSNumber *downloadOriginal; // @synthesize downloadOriginal=_downloadOriginal;
@property(retain, nonatomic) NSNumber *compress; // @synthesize compress=_compress;
@property(retain, nonatomic) NSString *originalRate; // @synthesize originalRate=_originalRate;
@property(retain, nonatomic) NSNumber *original; // @synthesize original=_original;
@property(nonatomic) _Bool isCreateFromLocal; // @synthesize isCreateFromLocal=_isCreateFromLocal;
@property(nonatomic) _Bool hasMV; // @synthesize hasMV=_hasMV;
@property(copy, nonatomic) NSString *fileFormat; // @synthesize fileFormat=_fileFormat;
@property(nonatomic) double duration; // @synthesize duration=_duration;
@property(nonatomic) _Bool webDownload; // @synthesize webDownload=_webDownload;
@property(copy, nonatomic) NSString *bitRateFirst; // @synthesize bitRateFirst=_bitRateFirst;
@property(retain, nonatomic) NSNumber *down_source; // @synthesize down_source=_down_source;
@property(retain, nonatomic) NSString *searchArtistId; // @synthesize searchArtistId=_searchArtistId;
@property(nonatomic) int relateStatus; // @synthesize relateStatus=_relateStatus;
@property(retain, nonatomic) NSDate *urlExpireDate; // @synthesize urlExpireDate=_urlExpireDate;
@property(retain, nonatomic) MPMediaItem *mediaItem; // @synthesize mediaItem=_mediaItem;
@property(copy, nonatomic) NSURL *trackURL; // @synthesize trackURL=_trackURL;
@property(retain, nonatomic) NSNumber *musicType; // @synthesize musicType=_musicType;
@property(nonatomic) _Bool ShowPayIdentifier; // @synthesize ShowPayIdentifier=_ShowPayIdentifier;
@property(retain, nonatomic) NSString *bitrate_fee; // @synthesize bitrate_fee=_bitrate_fee;
@property(nonatomic) int resourceTypeExt; // @synthesize resourceTypeExt=_resourceTypeExt;
@property(retain, nonatomic) NSString *recMethod; // @synthesize recMethod=_recMethod;
@property(nonatomic) int copyType; // @synthesize copyType=_copyType;
@property(nonatomic) _Bool isEncrypt; // @synthesize isEncrypt;
@property(retain, nonatomic) NSString *mediaInfo; // @synthesize mediaInfo;
@property(retain, nonatomic) NSString *markType; // @synthesize markType;
@property(retain, nonatomic) NSArray *artistList; // @synthesize artistList;
@property(retain, nonatomic) NSString *versions; // @synthesize versions;
@property(nonatomic) _Bool listenCached; // @synthesize listenCached;
@property(retain, nonatomic) NSString *listenFilePath; // @synthesize listenFilePath=_listenFilePath;
@property(nonatomic) _Bool isLebo; // @synthesize isLebo;
@property(nonatomic) _Bool sqAvailable; // @synthesize sqAvailable;
@property(nonatomic) long long trackResourceType; // @synthesize trackResourceType;
@property(retain, nonatomic) NSString *accompanyID; // @synthesize accompanyID;
@property(retain, nonatomic) NSNumber *hasAccompany; // @synthesize hasAccompany;
@property(copy, nonatomic) NSString *localFilePath; // @synthesize localFilePath=_localFilePath;
@property(retain, nonatomic) id trackJson; // @synthesize trackJson;
@property(retain, nonatomic) NSString *bigImageURL; // @synthesize bigImageURL;
@property(nonatomic) _Bool isAvaible; // @synthesize isAvaible;
@property(retain, nonatomic) NSMutableArray *urlsForPlay; // @synthesize urlsForPlay;
@property(retain, nonatomic) NSNumber *trackFileID; // @synthesize trackFileID;
@property(retain, nonatomic) NSNumber *style; // @synthesize style;
@property(retain, nonatomic) NSNumber *replayGain; // @synthesize replayGain;
@property(retain, nonatomic) id cacheURL; // @synthesize cacheURL;
@property(retain, nonatomic) id info; // @synthesize info;
@property(copy, nonatomic) NSString *downloadFrom2; // @synthesize downloadFrom2;
@property(copy, nonatomic) NSString *downloadFrom; // @synthesize downloadFrom;
@property(retain, nonatomic) NSDate *startDownload; // @synthesize startDownload;
@property(retain, nonatomic) NSDate *startConnect; // @synthesize startConnect;
@property(nonatomic) double dlTime; // @synthesize dlTime;
@property(nonatomic) double dlConnectTime; // @synthesize dlConnectTime;
@property(retain, nonatomic) NSNumber *storageLocation; // @synthesize storageLocation;
@property(retain, nonatomic) NSNumber *favType; // @synthesize favType;
@property(retain, nonatomic) NSDate *favDate; // @synthesize favDate;
@property(retain, nonatomic) NSNumber *isFavorited; // @synthesize isFavorited;
@property(retain, nonatomic) NSNumber *favPosition; // @synthesize favPosition;
@property(retain, nonatomic) NSNumber *trackStatus; // @synthesize trackStatus;
@property(nonatomic) _Bool multipleDownload; // @synthesize multipleDownload;
@property(copy, nonatomic) NSString *bitRate; // @synthesize bitRate;
@property(nonatomic) __weak id <MemTrackDownloadDelegate> downloadDelegate; // @synthesize downloadDelegate;
@property(nonatomic) int downloadedByte; // @synthesize downloadedByte;
@property(nonatomic) int totalByte; // @synthesize totalByte;
@property(nonatomic) int preferedBitrate; // @synthesize preferedBitrate;
@property(retain, nonatomic) NSNumber *preferedQuality; // @synthesize preferedQuality;
@property(retain, nonatomic) NSDate *dateAddedToRecentPlaylist; // @synthesize dateAddedToRecentPlaylist;
@property(retain, nonatomic) NSDate *downloadTime; // @synthesize downloadTime;
@property(retain, nonatomic) NSNumber *cloudDownloadType; // @synthesize cloudDownloadType;
@property(retain, nonatomic) NSNumber *downloadSource; // @synthesize downloadSource;
@property(retain, nonatomic) NSNumber *isOfflined; // @synthesize isOfflined;
@property(retain, nonatomic) NSNumber *albumIsManual; // @synthesize albumIsManual;
@property(retain, nonatomic) NSNumber *albumIsNew; // @synthesize albumIsNew;
@property(retain, nonatomic) NSNumber *lrcIsManual; // @synthesize lrcIsManual;
@property(retain, nonatomic) NSNumber *lrcIsNew; // @synthesize lrcIsNew;
@property(nonatomic) _Bool isKingSong; // @synthesize isKingSong;
@property(retain, nonatomic) NSString *allRate; // @synthesize allRate;
@property(retain, nonatomic) NSNumber *albumNO; // @synthesize albumNO;
@property(retain, nonatomic) NSString *trackExt; // @synthesize trackExt;
@property(nonatomic) long long songPayState; // @synthesize songPayState;
@property(nonatomic) int listenChargeType; // @synthesize listenChargeType;
@property(nonatomic) int chargeType; // @synthesize chargeType;
@property(nonatomic) int resourceType; // @synthesize resourceType;
@property(readonly, nonatomic) NSString *thirdPartyResource; // @synthesize thirdPartyResource;
@property(nonatomic) _Bool HDMusicAvailable; // @synthesize HDMusicAvailable;
@property(retain, nonatomic) MemArtist *artist; // @synthesize artist;
@property(retain, nonatomic) MemAlbum *album; // @synthesize album;
@property(copy, nonatomic) NSString *albumName; // @synthesize albumName;
@property(copy, nonatomic) NSString *albumID; // @synthesize albumID;
@property(copy, nonatomic) NSString *artistName; // @synthesize artistName;
@property(copy, nonatomic) NSString *artistID; // @synthesize artistID;
@property(copy, nonatomic) NSString *albumImageURL; // @synthesize albumImageURL;
@property(copy, nonatomic) NSString *artistImageURL; // @synthesize artistImageURL;
@property(copy, nonatomic) NSString *smallImageURL; // @synthesize smallImageURL;
@property(copy, nonatomic) NSString *imageURL; // @synthesize imageURL;
@property(copy, nonatomic) NSString *lrcURL; // @synthesize lrcURL;
@property(copy, nonatomic) NSString *trackName; // @synthesize trackName;
@property(retain, nonatomic) NSNumber *trackType; // @synthesize trackType;
@property(retain, nonatomic) NSNumber *iPodPersistentID; // @synthesize iPodPersistentID;
@property(copy, nonatomic) NSString *trackID; // @synthesize trackID;
- (void).cxx_destruct;
- (_Bool)isBuyAlbum;
- (_Bool)isBuySong;
- (_Bool)isBuy;
- (_Bool)isFreeType;
- (_Bool)free:(id)arg1;
- (_Bool)freeDownload;
- (_Bool)freeSong;
- (_Bool)vipCanPlaySong;
- (_Bool)isTecentResource;
- (int)checkMarkTypeSet:(id)arg1;
- (_Bool)trackInfoFetched:(id)arg1;
- (void)fetchOnlineTrackInfoWithGroup:(id)arg1 success:(CDUnknownBlockType)arg2 failure:(CDUnknownBlockType)arg3;
- (_Bool)shouldShowPayIcon;
- (_Bool)isShowPayIdentifier:(id)arg1;
- (void)removeFavType:(int)arg1;
- (void)addFavType:(int)arg1;
- (_Bool)hasCopyright;
- (void)setMusicResourceType:(int)arg1;
- (_Bool)hasDownloadRight;
- (_Bool)isMusicianResource;
- (_Bool)isCloud;
- (_Bool)isFav;
- (id)recordDict;
- (id)getBitRateTypeFromString:(id)arg1;
- (id)init;
- (void)fetchComplementFromDB;
@property(readonly, copy) NSString *description;
- (int)pickResourceTye;
- (id)pickThirdPartyResource;
- (id)getTrackBestUrlUtility:(id)arg1 withBestUrl:(id)arg2;
- (id)getOriginalPlayURL;
- (id)getBestFitPlayURL;
- (id)pickUrlsForPlay;
- (_Bool)pickHDMusicAvailable;
- (_Bool)pickSQAvailable;
- (id)pickLrcURL;
- (id)pickAlbumImageURL;
- (id)pickImageURL;
- (void)synchDlFrom;
- (void)synchDlTime;
- (void)syncWithDB;
- (void)syncWithCloudDB:(id)arg1 syncDownload:(_Bool)arg2;
- (void)syncWithCloudDB:(id)arg1;
- (void)syncWithTrackDB:(id)arg1;
- (void)trySyncWithDownload;
- (_Bool)isLocalTrack;
- (_Bool)isInDownloadQueue;
- (_Bool)isTrackDownloaded;
- (_Bool)isDownloadState;
- (_Bool)equalToTrack:(id)arg1;
- (id)getTrackID;
- (_Bool)isImportTrack;
- (_Bool)isIpodTrack;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

