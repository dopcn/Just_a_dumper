//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class AFHTTPSessionManager, NSArray, NSDictionary, NSMutableArray, NSMutableDictionary, NSString, NSThread, NSTimer;
@protocol NSObject, OS_dispatch_queue, OS_dispatch_source;

@interface KSCDNSelector : NSObject
{
    _Bool _httpDNS;
    _Bool _inService;
    NSMutableArray *_ping_list;
    NSMutableDictionary *_result_dict;
    NSMutableDictionary *_result_cache;
    NSArray *_host_list;
    NSDictionary *_host_to_cdn_dict;
    AFHTTPSessionManager *_httpSession;
    NSMutableArray *_list_local_dns;
    NSMutableDictionary *_logs;
    long long _pingTaskCount;
    int _networkResolveCount;
    int _localResolveCount;
    int _pingResultCount;
    int _goodRttThreshold;
    unsigned long long _taskRound;
    NSDictionary *_resolveConfig;
    NSString *_ssid;
    NSObject<OS_dispatch_queue> *_gcd_queue;
    NSObject<OS_dispatch_source> *_gcd_timer;
    NSThread *_pingThread;
    NSTimer *_pingTimer;
    id <NSObject> _monitorToken;
    long long _resolveIpTimeout;
    long long _pingIpTimeout;
    long long _ttl;
    long long _fetchAdvanceDuration;
    NSArray *_hostConfigs;
}

+ (_Bool)isIpHost:(id)arg1;
+ (id)shareInstance;
@property(retain, nonatomic) NSArray *hostConfigs; // @synthesize hostConfigs=_hostConfigs;
@property(readonly, nonatomic) int goodRttThreshold; // @synthesize goodRttThreshold=_goodRttThreshold;
@property(readonly, nonatomic) int pingResultCount; // @synthesize pingResultCount=_pingResultCount;
@property(readonly, nonatomic) int localResolveCount; // @synthesize localResolveCount=_localResolveCount;
@property(readonly, nonatomic) int networkResolveCount; // @synthesize networkResolveCount=_networkResolveCount;
@property(readonly, nonatomic) long long fetchAdvanceDuration; // @synthesize fetchAdvanceDuration=_fetchAdvanceDuration;
@property(readonly, nonatomic) long long ttl; // @synthesize ttl=_ttl;
@property(readonly, nonatomic) long long pingIpTimeout; // @synthesize pingIpTimeout=_pingIpTimeout;
@property(readonly, nonatomic) long long resolveIpTimeout; // @synthesize resolveIpTimeout=_resolveIpTimeout;
@property(retain, nonatomic) id <NSObject> monitorToken; // @synthesize monitorToken=_monitorToken;
@property(retain, nonatomic) NSTimer *pingTimer; // @synthesize pingTimer=_pingTimer;
@property(retain, nonatomic) NSThread *pingThread; // @synthesize pingThread=_pingThread;
@property(retain, nonatomic) NSObject<OS_dispatch_source> *gcd_timer; // @synthesize gcd_timer=_gcd_timer;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *gcd_queue; // @synthesize gcd_queue=_gcd_queue;
@property(retain) NSString *ssid; // @synthesize ssid=_ssid;
@property(retain, nonatomic) NSDictionary *resolveConfig; // @synthesize resolveConfig=_resolveConfig;
@property(nonatomic) unsigned long long taskRound; // @synthesize taskRound=_taskRound;
- (void).cxx_destruct;
- (void)dnsBD:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)dnsTX:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)dnsWS:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)dnsXY:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)dnsALI:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)dnsKS:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)dnsForHost:(id)arg1 withRequest:(id)arg2 withParser:(CDUnknownBlockType)arg3 withCompletion:(CDUnknownBlockType)arg4;
- (void)httpDnsOfCdnUrl:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)httpTasksClean;
- (id)localDnsOfCdnUrl:(id)arg1;
- (void)traceLocalCdnUrl:(id)arg1;
- (void)traceCdnUrls:(id)arg1;
- (void)pingOneTimer:(id)arg1;
- (void)pingFire;
- (void)pingThreadRun:(id)arg1;
- (void)addPingTasks:(id)arg1 withLimit:(unsigned long long)arg2;
- (void)addPingTasksForHttp:(id)arg1 withLimit:(unsigned long long)arg2 withTimeCost:(long long)arg3;
- (void)addPingTasksForLocal:(id)arg1 withLimit:(unsigned long long)arg2 withTimeCost:(long long)arg3;
- (id)pingPopOne;
- (void)pingTasksClean;
- (void)resultAddList:(id)arg1;
- (void)resultCleanTimeout;
- (id)resultGetList:(id)arg1 withSSID:(id)arg2;
- (void)onDnsIPFail:(id)arg1 withIP:(id)arg2;
- (id)dnsLiveURL:(id)arg1 withResolverName:(id *)arg2;
- (id)ipListOfHost:(id)arg1;
- (void)logLast:(unsigned long long)arg1;
- (void)runOnce;
- (void)timeRunloop;
- (void)stopService;
- (void)startService;
- (void)onReachabilityChanged:(long long)arg1;
- (id)refresh_ssid;
- (void)dealloc;
- (id)init;

@end

