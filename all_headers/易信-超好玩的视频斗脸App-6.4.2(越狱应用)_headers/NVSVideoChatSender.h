//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "NVSAudioCaptureDelegate-Protocol.h"
#import "NVSAudioFileInputDelegate-Protocol.h"
#import "NVSTimeDelegate-Protocol.h"
#import "NVSVideoCaptureDelegate-Protocol.h"

@class NSString, NVSAudioCaptureManager, NVSAudioFileInput, NVSAudioSendMixer, NVSMp4Recorder, NVSTimer, NVSVideoCaptureManager;
@protocol NVSVideoChatSenderDelegate, NVSVideoPlayerDelegate;

@interface NVSVideoChatSender : NSObject <NVSTimeDelegate, NVSAudioFileInputDelegate, NVSAudioCaptureDelegate, NVSVideoCaptureDelegate>
{
    NVSVideoCaptureManager *videoCapture;
    NVSAudioCaptureManager *audioCapture;
    int oldAudioHeadtimestamp;
    int codecType;
    id <NVSVideoPlayerDelegate> _localPlayerDelegate;
    id <NVSVideoChatSenderDelegate> _senderDelegate;
    _Bool isMute;
    unsigned long long audioPacketsSent;
    unsigned long long expectedPackets;
    unsigned long long totalSentAudioFrameDuration;
    double lastMutePacketSendTime;
    int chatMode;
    char *videoPacketBuffer;
    int _camera;
    double senderStartTimeSince1970;
    double firstVideoTimeSince1970;
    double firstVideoPresentTime;
    double videoBaseTimeOffset;
    NVSTimer *_updateVolumeTimerHolder;
    unsigned short _currentVolume;
    _Bool _volumeUpdated;
    NVSAudioFileInput *_audioFilePlaybackMixerInput;
    struct AudioStreamBasicDescription _captureASBD;
    NVSAudioSendMixer *_audioSendMixer;
    NVSAudioFileInput *_soundEffectInput;
    NVSMp4Recorder *mp4RecordManage;
    _Bool _closeAudio;
    int _dimensSetting;
}

@property(nonatomic) int dimensSetting; // @synthesize dimensSetting=_dimensSetting;
- (void).cxx_destruct;
- (_Bool)hasVideoCaptureSetup;
- (_Bool)isAudioRunning;
- (void)resetRecordManage:(id)arg1;
- (void)snapshotFromLocalVideoCompletion:(CDUnknownBlockType)arg1;
- (void)onAudioFileInputTaskComplete:(unsigned long long)arg1;
- (id)playSoundEffect:(id)arg1;
- (id)currentAudioMixTask;
- (_Bool)stopAudioMix;
- (_Bool)resumeAudioMix;
- (_Bool)pauseAudioMix;
- (_Bool)updateAudioMix:(id)arg1;
- (id)startAudioMix:(id)arg1;
- (void)onNVSTimerFired:(id)arg1;
- (double)decideSampleRate;
- (void)resetAudioPreprocessor;
- (_Bool)sendVideoSampleBuffer:(struct opaqueCMSampleBuffer *)arg1;
- (void)requestAdjustVideoFrameRate;
- (_Bool)requestSwitchEncoder;
- (_Bool)requestChangeVideoBitrate:(int)arg1;
- (void)setForcedAudioFrameSize:(_Bool)arg1;
- (_Bool)requestAdjustAudioFrameSize:(_Bool)arg1;
- (_Bool)wasDataSendAbnormal;
- (void)startMonitorAudioDataSend:(double)arg1;
- (_Bool)setAudioBitRate:(int)arg1 withFrameSize:(short)arg2;
- (void)packAudioPacket:(char *)arg1 data:(const char *)arg2 withSize:(int)arg3;
- (unsigned char)rotate:(unsigned char)arg1 by:(long long)arg2;
- (void)onCameraRunning:(_Bool)arg1;
- (unsigned char)videoOrientation:(_Bool)arg1;
- (_Bool)canEncodeVideo;
- (void)videoOnCapturedPack:(id)arg1 isBackCamera:(_Bool)arg2 isKeyFrame:(_Bool)arg3 timetag:(CDStruct_1b6d18a9)arg4;
- (_Bool)shouldMuteAudioCapture;
- (void)mixAudio:(char *)arg1 size:(unsigned long long)arg2;
- (unsigned long long)processAudioData:(void *)arg1 length:(unsigned long long)arg2 sampleRate:(double)arg3;
- (void)audioOnCaptureData:(const char *)arg1 withSize:(unsigned int)arg2 audioType:(int)arg3;
- (_Bool)setMute:(_Bool)arg1;
- (void)sendVideoData:(const char *)arg1 withSize:(unsigned int)arg2 isKeyFrame:(_Bool)arg3;
- (void)sendAudioData:(const char *)arg1 withSize:(int)arg2;
- (void)setupVideoEncoder:(int)arg1;
- (void)resetSessionPreset;
- (void)switchVideoDevice:(int)arg1;
- (void)resetAudioCatpure;
- (void)initAudioCapture:(int)arg1;
- (void)initVideoCapture:(int)arg1 withDimens:(int)arg2;
- (void)setVideoCaptureOrientation:(long long)arg1;
- (void)setupVideo:(int)arg1 camera:(int)arg2;
- (void)startVideo:(int)arg1 camera:(int)arg2;
- (void)stop;
- (void)startAudioCapture;
- (void)startAudioCaptureWithCodec:(int)arg1;
- (void)start:(int)arg1 videoDimens:(int)arg2 audioCodec:(int)arg3;
- (void)dealloc;
- (void)switchRole:(_Bool)arg1 mode:(int)arg2 camera:(_Bool)arg3;
- (_Bool)isVideoCaptureRunning;
- (_Bool)isCameraRunning;
- (_Bool)setCamera:(_Bool)arg1;
- (_Bool)setCameraClosed:(_Bool)arg1;
- (_Bool)stopVideoCapture;
- (id)initWithLocalPlayerDelegate:(id)arg1 andSenderDelegate:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

