//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <UIKit/UIView.h>

#import "AEGLDeviceDelegate-Protocol.h"
#import "AMapGLEngineDelegate-Protocol.h"
#import "UIGestureRecognizerDelegate-Protocol.h"

@class AMapGLEngine, AMapGeoStateDefaultParams, CADisplayLink, NSNumber, NSString, NSTimer, UILongPressGestureRecognizer;
@protocol AMap3DViewDelegate, AMapScenicDelegate;

@interface AMap3DView : UIView <UIGestureRecognizerDelegate, AMapGLEngineDelegate, AEGLDeviceDelegate>
{
    char *_gridsBuffer;
    _Bool _allowMapAngleChange;
    struct CGRect _availableMapRect;
    AMapGeoStateDefaultParams *_mapGeoStateDefaultParams;
    int _behaviorStatus;
    NSTimer *_singleTapTimer;
    NSTimer *_cancelSingleTapTimer;
    UILongPressGestureRecognizer *_longPinchRecognizer;
    _Bool _rendering;
    long long _renderFrameInterval;
    NSTimer *_pauseTimer;
    _Bool _inUserAction;
    long long _minFPS;
    unsigned long long _lastTmcRefreshTime;
    _Bool _needResetFrame;
    _Bool _touchInMain;
    _Bool _isStoppedRenderByAJX;
    id <AMap3DViewDelegate> delegate;
    id <AMapScenicDelegate> _scenicDelegate;
    AMapGLEngine *_glEngine;
    CADisplayLink *_displayLink;
}

+ (id)getNaviRebuildVersion;
+ (id)getEngineVersion;
+ (_Bool)applicationResignedActive;
+ (void)applicationDidBecomeActive;
+ (void)applicationWillResignActive;
+ (void)setEngineAdapterCallback:(CDUnknownFunctionPointerType)arg1;
+ (Class)layerClass;
+ (id)getMapDataCachePath;
+ (id)getMapDataPath;
+ (void)restoreAllMapFileHandle;
+ (void)closeAllMapFileHandle;
+ (_Bool)mapViewWasInitialized;
+ (void)destroyMapView;
+ (id)sharedMapViewWithDelegate:(id)arg1;
+ (id)sharedMapView;
@property(nonatomic) _Bool isStoppedRenderByAJX; // @synthesize isStoppedRenderByAJX=_isStoppedRenderByAJX;
@property(nonatomic) _Bool touchInMain; // @synthesize touchInMain=_touchInMain;
@property(retain, nonatomic) CADisplayLink *displayLink; // @synthesize displayLink=_displayLink;
@property(retain, nonatomic) AMapGLEngine *glEngine; // @synthesize glEngine=_glEngine;
@property(nonatomic) __weak id <AMapScenicDelegate> scenicDelegate; // @synthesize scenicDelegate=_scenicDelegate;
@property(nonatomic) __weak id <AMap3DViewDelegate> delegate; // @synthesize delegate;
- (void).cxx_destruct;
- (int)weatherAnimationStateWithEngineID:(long long)arg1;
- (void)stopWeatherWithEngineID:(long long)arg1 fade:(_Bool)arg2;
- (void)startWeatherWithEnginge:(long long)arg1 weatherType:(int)arg2 image:(id)arg3;
- (void)clearMapCache;
- (long long)getMapControllerHandle;
- (void)engineID:(long long)arg1 setMapViewFadeOut:(long long)arg2;
- (void)engineID:(long long)arg1 setMapViewFadeIn:(long long)arg2;
- (void)engineID:(unsigned int)arg1 OnRequireMapRender:(int)arg2 adviseFPS:(int)arg3;
- (void)engineID:(long long)arg1 setShowRoadArrow:(_Bool)arg2;
- (void)engineID:(unsigned int)arg1 OnSelectSubWayActive:(long long *)arg2 count:(int)arg3;
- (void)engineID:(unsigned int)arg1 onMapAnimationFinished:(const struct tagANMCALLBACKPARAM *)arg2;
- (long long)getAnimationOberserverWithEngineID:(unsigned int)arg1;
- (void)engineID:(unsigned int)arg1 onEngineActionGesture:(struct GestureCallbackParam *)arg2;
- (void)engineID:(unsigned int)arg1 onEngineCheckMapCenterChangedWithActionGesture:(struct GestureInfo *)arg2;
- (void)engineID:(unsigned int)arg1 onEngineCheckMapCenterChangedWithNewCenter:(struct ANPoint)arg2;
- (void)engineID:(unsigned int)arg1 onEngineSetBehaviorStatus:(int)arg2;
- (void)engineID:(unsigned int)arg1 onEngineReportLog:(int)arg2 reportCode:(int)arg3 reportValue:(char *)arg4;
- (void)engineID:(unsigned int)arg1 onEngineSendMapBehaviorLogWithPageID:(const char *)arg2 buttionID:(const char *)arg3 params:(const char *)arg4;
- (void)onEngineNeedSendBehaviorLog:(unsigned int)arg1;
- (void)onEngineMapZoomOrMoveFinish:(unsigned int)arg1;
- (void)onTouchesBeganMapZoomOrMoveFinish:(unsigned int)arg1;
- (void)resetMapIs3DMapMode:(struct IMapView *)arg1 engineID:(unsigned int)arg2;
- (void)engineID:(unsigned int)arg1 onMapTransferParam:(const int *)arg2;
- (id)engineID:(unsigned int)arg1 onEngineGetMapInfo:(long long)arg2;
- (_Bool)engineID:(unsigned int)arg1 onEngineAnimationEvent:(long long)arg2;
- (void)engineID:(long long)arg1 onEngineOfflineDataState:(int)arg2 param:(id)arg3;
- (void)engineID:(long long)arg1 onEngineScenicState:(int)arg2 param:(id)arg3;
- (void)engineID:(long long)arg1 onEngineIndoorBuildingState:(int)arg2 param:(id)arg3;
- (void)engineID:(long long)arg1 onEngineOverlayState:(int)arg2 param:(id)arg3;
- (void)engineID:(long long)arg1 onEngineViewState:(int)arg2 param:(id)arg3;
- (void)engineID:(long long)arg1 onEngineRenderState:(int)arg2 param:(void *)arg3;
- (void)engineID:(long long)arg1 setOpenlayerParam:(id)arg2;
- (id)engineID:(long long)arg1 getOpenlayerParam:(id)arg2;
- (void)engineID:(long long)arg1 insertOpenLayerWithJsonString:(char *)arg2 insertLevel:(long long)arg3;
- (_Bool)engineID:(long long)arg1 deleteOpenLayer:(long long)arg2;
- (void)engineID:(long long)arg1 appendOpenLayerWithJsonString:(char *)arg2;
- (void)engineID:(long long)arg1 showOpenLayer:(_Bool)arg2 layerId:(long long)arg3;
- (void)engineID:(long long)arg1 showOpenLayer:(_Bool)arg2;
- (_Bool)openLayerShowing:(long long)arg1;
- (void)clearCustomStyle:(long long)arg1;
- (void)engineID:(long long)arg1 addCustomStyle:(id)arg2 bIsShow:(_Bool)arg3;
- (void)engineID:(long long)arg1 clearLabelsWithType:(long long)arg2 IsFocus:(_Bool)arg3;
- (void)engineID:(long long)arg1 addPoiLabels:(id)arg2 IsFocus:(_Bool)arg3;
- (_Bool)engineID:(long long)arg1 mapDataControlWithType:(long long)arg2 delMode:(long long)arg3 reqeustMode:(long long)arg4 dataType:(long long)arg5;
- (_Bool)isFeatureSpotIconShow:(long long)arg1;
- (void)engineID:(long long)arg1 setFeatureSpotIconShow:(_Bool)arg2;
- (void)engineID:(long long)arg1 setScenicFilterByIndex:(long long)arg2 Filters:(id)arg3;
- (_Bool)engineID:(long long)arg1 setScenicSeletedPOI:(id)arg2;
- (void)cleanScenicSelectionState:(long long)arg1;
- (void)engineID:(long long)arg1 setScenicWidgetActivated:(id)arg2 index:(long long)arg3;
- (void)engineID:(long long)arg1 setScenicGuideActivated:(id)arg2 activated:(_Bool)arg3;
- (_Bool)isMapMaskShow:(long long)arg1;
- (void)hideMapMask:(long long)arg1;
- (void)engineID:(long long)arg1 showMapMaskWithColor:(id)arg2;
- (void)engineID:(long long)arg1 getMapP20Bound:(long long *)arg2 top:(long long *)arg3 width:(long long *)arg4 height:(long long *)arg5;
- (long long)engineID:(long long)arg1 getP20LenWithMapLen:(double)arg2;
- (double)engineID:(long long)arg1 getGeoLenWithWin:(long long)arg2;
- (double)engineID:(long long)arg1 getMapLenWithGeo:(long long)arg2;
- (double)engineID:(long long)arg1 getMapLenWithWin:(long long)arg2;
- (long long)getCurrentState:(long long)arg1;
- (long long)getCurrentTime:(long long)arg1;
- (long long)getCurrentMode:(long long)arg1;
- (void)engineID:(long long)arg1 setModeState:(long long)arg2 style:(long long)arg3 state:(long long)arg4;
- (void)engineID:(long long)arg1 setColorBlindStatus:(_Bool)arg2;
- (_Bool)getColorBlindStatus:(long long)arg1;
- (void)engineID:(long long)arg1 setTrafficStyle:(_Bool)arg2;
- (_Bool)isTrafficNormal:(long long)arg1;
- (void)engineID:(long long)arg1 setMapHeatPoiid:(id)arg2 PointsArray:(id)arg3;
- (_Bool)engineID:(long long)arg1 isSkinExist:(long long)arg2 nMapTime:(long long)arg3 nMapState:(long long)arg4;
- (_Bool)vectorCrossShowing:(long long)arg1;
- (void)engineID:(long long)arg1 enableSimple3DHeight:(_Bool)arg2;
- (_Bool)isSimple3DShow:(long long)arg1;
- (_Bool)getSimple3DEnable:(long long)arg1;
- (void)engineID:(long long)arg1 setSimple3DEnable:(_Bool)arg2;
- (_Bool)realCityShowing:(long long)arg1;
- (void)engineID:(long long)arg1 showRealCityAnimation:(_Bool)arg2;
- (void)engineID:(long long)arg1 showRealCity:(_Bool)arg2;
- (id)engineID:(long long)arg1 getRealCityDataVersion:(long long)arg2;
- (int)engineID:(long long)arg1 isSupportRealCity:(long long)arg2;
- (void)engineID:(long long)arg1 turnOnMapHeat:(_Bool)arg2;
- (void)refreshTraffic:(long long)arg1;
- (_Bool)trafficShowing:(long long)arg1;
- (void)engineID:(long long)arg1 showTraffic:(_Bool)arg2;
- (void)engineID:(long long)arg1 enableFBOControl:(_Bool)arg2;
- (void)engineID:(long long)arg1 showIndoorBuilding:(_Bool)arg2;
- (void)engineID:(long long)arg1 showBuildingTexture:(_Bool)arg2;
- (void)engineID:(long long)arg1 showBuildingPOI:(_Bool)arg2;
- (void)engineID:(long long)arg1 showBuildingMark:(_Bool)arg2;
- (void)engineID:(long long)arg1 showBuildingNormal:(_Bool)arg2;
- (void)engineID:(long long)arg1 showBuilding:(_Bool)arg2;
- (void)engineID:(long long)arg1 setAMap3DIndoorBuildingToBeActive:(id)arg2;
- (void)engineID:(long long)arg1 fillSelectedSubway:(id)arg2;
- (void)engineID:(long long)arg1 busRoutePreview:(_Bool)arg2;
- (void)cleanSelectedSubway:(long long)arg1;
- (void)clearMapLabels:(long long)arg1;
- (void)engineID:(long long)arg1 setMapNeedForceDrawLabel:(long long)arg2;
- (void)setMapNeedForceDrawLabel:(long long)arg1;
- (void)engineID:(long long)arg1 setMapNeedForceDrawLabelForNavi:(_Bool)arg2;
- (void)engineID:(long long)arg1 setMapNeedOffsetForNavi:(int)arg2 naviOffsetY:(int)arg3;
- (_Bool)is3DMapMode:(long long)arg1;
- (_Bool)mapStatusNeedReset:(long long)arg1;
- (void)engineID:(long long)arg1 resetMapStatusAnimated:(_Bool)arg2;
- (void)engineID:(long long)arg1 set3DMapMode:(_Bool)arg2;
- (double)getMapZoomScale:(long long)arg1;
- (float)getZoomLevelMin:(long long)arg1;
- (float)getZoomLevelMax:(long long)arg1;
- (float)zoomLevel:(long long)arg1;
- (void)engineID:(long long)arg1 setZoomLevel:(float)arg2;
- (double)mapAngle:(long long)arg1;
- (void)engineID:(long long)arg1 setMapAngle:(double)arg2;
- (double)maxCameraAngle:(long long)arg1;
- (double)cameraAngle:(long long)arg1;
- (void)engineID:(long long)arg1 setCameraAngle:(double)arg2;
- (void)engineID:(long long)arg1 setCameraHeaderAngle:(double)arg2;
- (_Bool)isAllowMapRotationChange:(long long)arg1;
- (void)engineID:(long long)arg1 setAllowMapRotationChange:(_Bool)arg2;
- (_Bool)isAllowMapDegreeChange:(long long)arg1;
- (void)engineID:(long long)arg1 setAllowMapDegreeChange:(_Bool)arg2;
- (void)engineID:(long long)arg1 changeMapTo3DNorthFrontAnimated:(_Bool)arg2;
- (void)engineID:(long long)arg1 changeMapToSpecialAnimated:(_Bool)arg2 andMapCenter:(struct ANPoint)arg3 duration:(long long)arg4;
- (void)engineID:(long long)arg1 changeMapToSpecialAnimated:(_Bool)arg2 andMapCenter:(struct ANPoint)arg3;
- (void)engineID:(long long)arg1 changeMapToSpecialAnimated:(_Bool)arg2 duration:(long long)arg3;
- (void)engineID:(long long)arg1 changeMapToSpecialAnimated:(_Bool)arg2;
- (struct ANPoint)engineID:(long long)arg1 getPixel20Pnt:(struct CGPoint)arg2;
- (struct CGPoint)engineID:(long long)arg1 getScreenCoordByG20Coord:(int)arg2 y:(int)arg3 z:(int)arg4;
- (struct CGPoint)engineID:(long long)arg1 getScreenPntBy20Pixel:(int)arg2 pixelY:(int)arg3;
- (struct CGRect)availableMapRect:(long long)arg1;
- (void)engineID:(long long)arg1 setAvailableMapRectWithOffsetY:(double)arg2 height:(double)arg3;
- (struct ANRect)mapG20RectWithRecalculate:(long long)arg1;
- (struct ANRect)mapG20Rect:(long long)arg1;
- (struct CLLocationCoordinate2D)getMapLatLonCenter:(long long)arg1;
- (struct ANPoint)mapCenter:(long long)arg1;
- (void)engineID:(long long)arg1 setMapCenter:(long long)arg2 y:(long long)arg3 level:(float)arg4;
- (void)engineID:(long long)arg1 setMapCenterWithG20Point:(struct ANPoint)arg2;
- (void)engineID:(long long)arg1 setMapCenterWithScreenPoint:(long long)arg2 y:(long long)arg3;
- (void)engineID:(long long)arg1 setMapCenterWithScreenPoint:(struct CGPoint)arg2;
- (void)engineID:(long long)arg1 animateToG20Point:(long long)arg2 y:(long long)arg3 angle:(float)arg4 level:(float)arg5;
- (void)engineID:(long long)arg1 animateToG20Point:(long long)arg2 y:(long long)arg3 level:(float)arg4 duration:(long long)arg5;
- (void)engineID:(long long)arg1 animateToG20Point:(long long)arg2 y:(long long)arg3 level:(float)arg4;
- (void)engineID:(long long)arg1 setTextScale:(float)arg2;
- (void)engineID:(long long)arg1 setBuildingAnimationAndAlpha:(_Bool)arg2 Alpha:(_Bool)arg3 stepValue:(float)arg4;
- (void)zoomOut:(long long)arg1;
- (void)zoomIn:(long long)arg1;
- (void)engineID:(long long)arg1 animateToG20Center:(struct ANPoint)arg2 screenCenter:(struct CGPoint)arg3 mapAngle:(double)arg4 cameraAngle:(double)arg5 level:(double)arg6 duration:(long long)arg7;
- (void)engineID:(long long)arg1 animateToScreenPoint:(long long)arg2 y:(long long)arg3;
- (void)engineID:(long long)arg1 animateToG20Point:(long long)arg2 y:(long long)arg3;
- (void)finishAnimation:(long long)arg1;
- (void)engineID:(long long)arg1 moveAnimation:(struct ANPoint)arg2 withScreenCenterPoint:(struct CGPoint)arg3 withDuration:(double)arg4;
- (void)engineID:(long long)arg1 moveAnimation:(struct ANPoint)arg2 withScreenCenterPoint:(struct CGPoint)arg3;
- (void)engineID:(long long)arg1 moveAnimation:(struct ANPoint)arg2;
- (void)engineID:(long long)arg1 moveAnimation:(struct ANPoint)arg2 withDuration:(double)arg3;
- (void)engineID:(long long)arg1 zoomAnimation:(float)arg2 andMapAngle:(float)arg3 andCameraAngle:(float)arg4;
- (void)engineID:(long long)arg1 zoomAnimation:(float)arg2 andMapAngle:(float)arg3 andCameraAngle:(float)arg4 andMapCenter:(struct ANPoint)arg5;
- (double)engineID:(long long)arg1 calculateMapZoomer:(id)arg2;
- (id)engineID:(long long)arg1 calcMapZoomerAndCenterWithLocations:(id)arg2 mapRect:(struct CGRect)arg3 fixedZoomer:(_Bool)arg4 zoomer:(double)arg5 aroundScreenCenter:(_Bool)arg6;
- (id)engineID:(long long)arg1 calcMapZoomerAndCenterWithLocations:(id)arg2 mapRect:(struct CGRect)arg3;
- (id)engineID:(long long)arg1 calcMapInfosWithLocations:(id)arg2 mapRect:(struct CGRect)arg3 fixedZoomer:(_Bool)arg4 zoomer:(double)arg5 aroundScreenCenter:(_Bool)arg6;
- (id)engineID:(long long)arg1 calcMapInfosWithLocations:(id)arg2 mapRect:(struct CGRect)arg3 fixedZoomer:(_Bool)arg4 zoomer:(double)arg5;
- (id)engineID:(long long)arg1 calcMapInfosWithLocations:(id)arg2 mapRect:(struct CGRect)arg3;
- (_Bool)engineID:(long long)arg1 getScreenPixelBitmapData:(char **)arg2 width:(unsigned int *)arg3 height:(unsigned int *)arg4 withClipRect:(struct CGRect *)arg5;
- (_Bool)engineID:(long long)arg1 getFullScreenPixelBitmapData:(char **)arg2 width:(unsigned int *)arg3 height:(unsigned int *)arg4;
- (unsigned long long)maxFPS:(long long)arg1;
- (unsigned long long)minFPS:(long long)arg1;
- (void)engineID:(long long)arg1 setMaxFPS:(unsigned long long)arg2;
- (void)engineID:(long long)arg1 setMinFPS:(unsigned long long)arg2;
- (void)engineID:(long long)arg1 pauseRender:(_Bool)arg2;
- (void)stopRenderMap:(long long)arg1;
- (void)startRenderMap:(long long)arg1;
- (_Bool)isAllGridsRenderOver:(long long)arg1;
- (void)stopRenderMapWhenResignActive:(long long)arg1;
- (void)startRenderMapWhenBecomeActive:(long long)arg1;
- (void)engineID:(long long)arg1 setShowPoiFilter:(_Bool)arg2;
- (void)engineID:(long long)arg1 showLabel:(_Bool)arg2;
- (void)engineID:(long long)arg1 clearPoiFilterType:(long long)arg2 Prekey:(void *)arg3;
- (void)engineID:(long long)arg1 removePoiFilter:(id)arg2 Type:(long long)arg3;
- (void)engineID:(long long)arg1 addPoiFilter:(id)arg2;
- (id)engineID:(long long)arg1 getMapPois:(struct CGPoint)arg2;
- (float)getCameraHeaderAngle:(long long)arg1;
- (_Bool)isShowBuildingPoi:(long long)arg1;
- (void)restoreEngineDB:(long long)arg1;
- (void)clearMapFileCache:(long long)arg1;
- (void)resetMapCache:(long long)arg1;
- (void)closeEngineDB:(long long)arg1;
- (id)currentGrids:(long long)arg1;
- (void)engineID:(long long)arg1 setGestureCenterType:(int)arg2;
- (void)engineID:(long long)arg1 setLongPressGestureDuration:(double)arg2;
- (id)getSimple3dParserVersion;
- (void)restoreAllMapFileHandle:(long long)arg1;
- (void)closeAllMapFileHandle:(long long)arg1;
- (id)getMapDataCachePath:(long long)arg1;
- (id)getMapDataPath:(long long)arg1;
- (void)engineID:(unsigned int)arg1 setEngineFrame:(struct CGRect)arg2;
- (void)engineID:(long long)arg1 setContentType:(long long)arg2 show:(_Bool)arg3;
- (void)engineID:(long long)arg1 setRenderListenerStatus:(long long)arg2;
- (void)engineID:(long long)arg1 setSkyTexture:(id)arg2 textureDataType:(int)arg3;
- (void)engineID:(long long)arg1 setBorderTexture:(id)arg2 textureDataType:(int)arg3;
- (void)setEngineID:(long long)arg1 backgroundColor:(id)arg2;
- (void)engineID:(long long)arg1 setVisible:(_Bool)arg2;
- (void)removeEngineID:(long long)arg1;
- (void)addEngineID:(long long)arg1;
- (long long)createEngineWithFrame:(struct CGRect)arg1 engineType:(long long)arg2;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (void)willMoveToSuperview:(id)arg1;
- (void)setFrame:(struct CGRect)arg1;
- (void)layoutSubviews;
- (void)stopRenderMapNotificaiton:(id)arg1;
- (void)handleDataRequestFailNotificaiton:(id)arg1;
- (void)updateStyleOrIconsNotificaiton:(id)arg1;
- (void)setMapGeoStateDefaultParams:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1 delegate:(id)arg2 scenicDelegate:(id)arg3;
- (void)dealloc;
- (_Bool)resignActive;
- (int)weatherAnimationState;
- (void)stopWeatherEffect:(_Bool)arg1;
- (void)startWeatherEffect:(int)arg1 image:(id)arg2;
- (void)zoomOut;
- (void)zoomIn;
- (long long)minZoomForOpenLayerId:(long long)arg1;
- (id)getOpenLayerSetInfoWithOpenLayerId:(long long)arg1;
- (long long)maxZoomForOpenLayerId:(long long)arg1;
- (void)setOpenLayerMaxZoom:(long long)arg1 minZoom:(long long)arg2 dataType:(int)arg3 withLayerId:(long long)arg4;
- (void)enableSimple3DHeight:(_Bool)arg1;
- (_Bool)isSimple3DShow;
- (_Bool)getSimple3DEnable;
- (void)setSimple3DEnable:(_Bool)arg1;
- (_Bool)isMapMaskShow;
- (void)hideMapMask;
- (void)showMapMaskWithColor:(id)arg1;
- (void)getMapP20Bound:(long long *)arg1 top:(long long *)arg2 width:(long long *)arg3 height:(long long *)arg4;
- (long long)getP20LenWithMapLen:(double)arg1;
- (double)getGeoLenWithWin:(long long)arg1;
- (double)getMapLenWithGeo:(long long)arg1;
- (double)getMapLenWithWin:(long long)arg1;
- (void)insertOpenLayerWithJsonString:(char *)arg1 insertLevel:(long long)arg2;
- (_Bool)deleteOpenLayer:(long long)arg1;
- (void)appendOpenLayerWithJsonString:(char *)arg1;
- (void)showOpenLayer:(_Bool)arg1 layerId:(int)arg2;
- (void)showOpenLayer:(_Bool)arg1;
- (_Bool)openLayerShowing;
- (void)clearLabelsWithType:(long long)arg1 IsFocus:(_Bool)arg2;
- (void)addPoiLabels:(id)arg1 IsFocus:(_Bool)arg2;
- (_Bool)mapDataControlWithType:(long long)arg1 delMode:(long long)arg2 reqeustMode:(long long)arg3 dataType:(long long)arg4;
- (_Bool)isFeatureSpotIconShow;
- (void)setFeatureSpotIconShow:(_Bool)arg1;
- (void)setScenicFilterByIndex:(long long)arg1 Filters:(id)arg2;
- (_Bool)setScenicSeletedPOI:(id)arg1;
- (void)cleanScenicSelectionState;
- (void)setScenicWidgetActivated:(id)arg1 index:(long long)arg2;
- (void)setScenicGuideActivated:(id)arg1 activated:(_Bool)arg2;
- (_Bool)isSkinExist:(long long)arg1 nMapTime:(long long)arg2 nMapState:(long long)arg3;
- (_Bool)shouldShowBuildingMarkWithMode:(long long)arg1 state:(long long)arg2;
- (void)setModeState:(long long)arg1 style:(long long)arg2 state:(long long)arg3;
- (long long)getCurrentState;
- (long long)getCurrentTime;
- (long long)getCurrentMode;
- (void)setTrafficStyle:(_Bool)arg1;
- (_Bool)isTrafficNormal;
- (void)setMapHeatPoiid:(id)arg1 PointsArray:(id)arg2;
- (_Bool)vectorCrossShowing;
- (_Bool)realCityShowing;
- (void)showRealCityAnimation:(_Bool)arg1;
- (void)showRealCity:(_Bool)arg1;
- (id)getRealCityDataVersion:(int)arg1;
- (int)isSupportRealCity:(int)arg1;
- (void)turnOnMapHeat:(_Bool)arg1;
- (void)refreshTraffic;
- (_Bool)trafficShowing;
- (void)showTraffic:(_Bool)arg1;
- (void)setColorBlindStatus:(_Bool)arg1;
- (void)showIndoorBuilding:(_Bool)arg1;
- (void)showBuildingPOI:(_Bool)arg1;
- (void)showBuildingMark:(_Bool)arg1;
- (void)showBuildingNormal:(_Bool)arg1;
- (void)showBuilding:(_Bool)arg1;
- (void)setAMap3DIndoorBuildingToBeActive:(id)arg1;
- (void)fillSelectedSubway:(id)arg1;
- (void)busRoutePreview:(_Bool)arg1;
- (void)cleanSelectedSubway;
- (void)clearMapLabels;
- (void)setMapNeedForceDrawLabelWithRefreshRate:(long long)arg1;
- (void)setMapNeedForceDrawLabel;
- (void)setMapNeedForceDrawLabelForNavi:(_Bool)arg1;
- (void)setMapNeedOffsetForNavi:(int)arg1 naviOffsetY:(int)arg2;
- (_Bool)is3DMapMode;
- (void)set3DMapMode:(_Bool)arg1;
- (_Bool)isAllowMapRotationChange;
- (void)setAllowMapRotationChange:(_Bool)arg1;
- (_Bool)isAllowMapDegreeChange;
- (void)setAllowMapDegreeChange:(_Bool)arg1;
- (double)getMapZoomScale;
- (float)getZoomLevelMin;
- (float)getZoomLevelMax;
- (float)zoomLevel;
- (void)setZoomLevel:(float)arg1;
- (double)mapAngle;
- (void)setMapAngle:(double)arg1;
- (double)maxCameraAngle;
- (double)cameraAngle;
- (void)setCameraHeaderAngle:(double)arg1;
- (void)setCameraAngle:(double)arg1;
- (void)changeMapTo3DNorthFrontAnimated:(_Bool)arg1;
- (void)changeMapToSpecialAnimated:(_Bool)arg1 andMapCenter:(struct ANPoint)arg2;
- (void)changeMapToSpecialAnimated:(_Bool)arg1 duration:(long long)arg2;
- (void)changeMapToSpecialAnimated:(_Bool)arg1;
- (_Bool)mapStatusNeedReset;
- (void)resetMapStatusAnimated:(_Bool)arg1;
- (struct ANPoint)getPixel20Pnt:(struct CGPoint)arg1;
- (struct CGPoint)getScreenCoordByG20Coord:(int)arg1 y:(int)arg2 z:(int)arg3;
- (struct CGPoint)getScreenPntBy20Pixel:(int)arg1 pixelY:(int)arg2;
- (struct CGRect)availableMapRect;
- (void)setAvailableMapRectWithOffsetY:(double)arg1 height:(double)arg2;
- (struct ANRect)mapG20RectWithRecalculate;
- (struct ANRect)mapG20Rect;
- (struct CLLocationCoordinate2D)getMapLatLonCenter;
- (struct ANPoint)mapCenter;
- (void)setMapCenter:(long long)arg1 y:(long long)arg2 level:(float)arg3;
- (void)setMapCenterWithScreenPoint:(long long)arg1 y:(long long)arg2;
- (void)setMapCenterWithScreenPoint:(struct CGPoint)arg1;
- (void)setMapCenterWithG20Point:(struct ANPoint)arg1;
- (void)setTextScale:(float)arg1;
- (void)animateToG20Center:(struct ANPoint)arg1 screenCenter:(struct CGPoint)arg2 mapAngle:(double)arg3 cameraAngle:(double)arg4 level:(double)arg5 duration:(long long)arg6;
- (void)animateToScreenPoint:(long long)arg1 y:(long long)arg2;
- (void)animateToG20Point:(long long)arg1 y:(long long)arg2 duration:(double)arg3;
- (void)animateToG20Point:(long long)arg1 y:(long long)arg2 angle:(float)arg3 level:(float)arg4;
- (void)animateToG20Point:(long long)arg1 y:(long long)arg2 level:(float)arg3;
- (void)animateToG20Point:(long long)arg1 y:(long long)arg2;
- (void)finishAnimation;
- (void)moveAnimation:(struct ANPoint)arg1 withScreenCenterPoint:(struct CGPoint)arg2 withDuration:(double)arg3;
- (void)moveAnimation:(struct ANPoint)arg1 withScreenCenterPoint:(struct CGPoint)arg2;
- (void)moveAnimation:(struct ANPoint)arg1;
- (void)moveAnimation:(struct ANPoint)arg1 withDuration:(double)arg2;
- (void)zoomAnimation:(float)arg1 andMapAngle:(float)arg2 andCameraAngle:(float)arg3;
- (void)zoomAnimation:(float)arg1 andMapAngle:(float)arg2 andCameraAngle:(float)arg3 andMapCenter:(struct ANPoint)arg4;
- (double)calculateMapZoomer:(id)arg1;
- (id)calcMapZoomerAndCenterWithLocations:(id)arg1 mapRect:(struct CGRect)arg2 fixedZoomer:(_Bool)arg3 zoomer:(double)arg4 aroundScreenCenter:(_Bool)arg5;
- (id)calcMapZoomerAndCenterWithLocations:(id)arg1 mapRect:(struct CGRect)arg2;
- (id)calcMapInfosWithLocations:(id)arg1 mapRect:(struct CGRect)arg2 fixedZoomer:(_Bool)arg3 zoomer:(double)arg4 aroundScreenCenter:(_Bool)arg5;
- (id)calcMapInfosWithLocations:(id)arg1 mapRect:(struct CGRect)arg2;
- (_Bool)getFullScreenPixelBitmapData:(char **)arg1 width:(unsigned int *)arg2 height:(unsigned int *)arg3;
- (void)setShowPoiFilter:(_Bool)arg1;
- (void)showLabel:(_Bool)arg1;
- (void)clearPoiFilterType:(long long)arg1 Prekey:(id)arg2;
- (void)removePoiFilter:(id)arg1 Type:(long long)arg2;
- (void)addPoiFilter:(id)arg1;
- (id)getMapPois:(struct CGPoint)arg1;
- (float)getCameraHeaderAngle;
- (_Bool)isShowBuildingPoi;
- (void)restoreEngineDB;
- (void)resetMapCache;
- (void)closeEngineDB;
- (id)currentGrids;
- (unsigned long long)maxFPS;
- (unsigned long long)minFPS;
- (void)setMaxFPS:(unsigned long long)arg1;
- (void)setMinFPS:(unsigned long long)arg1;
- (void)pauseRender:(_Bool)arg1;
- (void)stopRenderMap;
- (void)startRenderMap;
- (_Bool)isAllGridsRenderOver;
- (void)stopRenderMapWhenResignActive;
- (void)startRenderMapWhenBecomeActive;
- (void)setLongPressGestureDuration:(double)arg1;
@property(retain, nonatomic) NSNumber *mainViewEngineID;
- (long long)getMainEngineID;
- (void)OnEGLDeviceRender:(const struct EGLDeviceRenderParam *)arg1;
- (void)OnEGLSurfaceDestroyed:(const struct EGLSurfaceParam *)arg1;
- (void)OnEGLSurfaceChanged:(const struct EGLSurfaceParam *)arg1;
- (void)OnEGLSurfaceCreated:(const struct EGLSurfaceParam *)arg1;
- (void)OnEGLDeviceDestroyed:(const struct EGLDeviceParam *)arg1;
- (void)OnEGLDeviceCreated:(const struct EGLDeviceParam *)arg1;
- (void)requestRenderMap;
- (void)pauseRenderByTimer;
- (void)engineID:(unsigned int)arg1 pauseEngineRender:(_Bool)arg2;
- (void)engineID:(unsigned int)arg1 pauseEngineRender:(_Bool)arg2 needRestartTimer:(_Bool)arg3;
- (void)stopEngineRenderMap:(unsigned int)arg1;
- (void)startEngineRenderMap:(unsigned int)arg1;
- (void)startEngineRenderMapWhenBecomeActiveDelay_:(id)arg1;
- (void)startEngineRenderMapWhenBecomeActiveDelay:(id)arg1;
- (void)resetFramebuffer:(struct CGRect)arg1;
- (void)setNeedRecreateFrameBuffer:(_Bool)arg1;
- (void)initOpenGLEnvironment;
- (void)handleTouchesBegan:(id)arg1 withEvent:(id)arg2 engineId:(int)arg3;
- (void)notifyTouchEventWithGesture:(id)arg1 engineId:(unsigned int)arg2;
- (_Bool)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
- (unsigned int)getEngineIDWithGesture:(struct GestureInfo *)arg1;
- (void)addGestures;
- (void)invokeSingleTapGestureTimer:(id)arg1;
- (void)cancelSingleTapTimer:(id)arg1;
- (void)doSingleTapGesture:(id)arg1;
- (void)longPressGesture:(id)arg1;
- (void)zoomPinchGesture:(id)arg1;
- (void)handleRotationGesture:(id)arg1;
- (void)handleCameraHeaderGesture:(id)arg1;
- (void)handleMoveGesture:(id)arg1;
- (void)handleZoomOutTapGesture:(id)arg1;
- (void)handleZoomInTapGesture:(id)arg1;
- (int)determineEngineIDWithGesture:(struct GestureInfo *)arg1 gestureRecognizer:(id)arg2;
- (void)engineID:(long long)arg1 closeRealCityDB:(long long)arg2;
- (void)engineID:(long long)arg1 openRealCityDB:(long long)arg2;
@property(nonatomic) _Bool rctDataUpdateTestFlag; // @dynamic rctDataUpdateTestFlag;
- (void)engineID:(long long)arg1 showRealCity:(_Bool)arg2 isBrowse:(_Bool)arg3;
- (_Bool)realcityGestureOff:(long long)arg1;
@property(nonatomic) _Bool realCityAutoTestFlag; // @dynamic realCityAutoTestFlag;
@property(nonatomic) _Bool realCityTestFlag; // @dynamic realCityTestFlag;
@property(nonatomic) _Bool isRealCityBrowse; // @dynamic isRealCityBrowse;
@property(nonatomic) _Bool isRealCityOn; // @dynamic isRealCityOn;
- (void)doSendMapBehaviorLog:(long long)arg1;
- (void)touchEndForPauseRender:(unsigned int)arg1;
- (void)insertEngineID:(long long)arg1 aboveEngineID:(long long)arg2;
- (void)insertEngineID:(long long)arg1 belowEngineID:(long long)arg2;
- (id)getEngineIDArray;
- (_Bool)IsExistWaterOverlay;
- (unsigned int)GetAnimationCount:(unsigned int)arg1;
- (struct IMapView *)getMapSrvView:(unsigned int)arg1;
- (struct IMapPosture *)getProjection:(unsigned int)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

