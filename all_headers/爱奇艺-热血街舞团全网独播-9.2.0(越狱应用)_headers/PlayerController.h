//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

@class NSArray;
@protocol PlayerControllerDelegate;

@interface PlayerController : NSObject
{
    id <PlayerControllerDelegate> _delegate;
    _Bool _isUsePlayerTimer;
    _Bool _seekFlag;
    _Bool _isFullScreen;
    _Bool _isWaiting;
    _Bool _autoJump;
    _Bool _isPlaying;
    _Bool _isbroadcastSupportReplay;
    _Bool _isReplayBroadcast;
    _Bool _isReplayBroadcastEnd;
    _Bool _isCharge;
    int _ugcLiveState;
    double _adLeftTime;
    double _adTotalTime;
    double _adMidTime;
    double _totalDuration;
    double _screenScale;
    long long _adType;
    long long _preloadTimeControl;
    long long _broadcastStartTime;
    long long _broadcastEndTime;
    long long _broadcastServerTime;
    NSArray *_videoVIPTypeList;
}

+ (int)clearCache;
@property(retain, nonatomic) NSArray *videoVIPTypeList; // @synthesize videoVIPTypeList=_videoVIPTypeList;
@property(nonatomic) _Bool isCharge; // @synthesize isCharge=_isCharge;
@property(nonatomic) int ugcLiveState; // @synthesize ugcLiveState=_ugcLiveState;
@property(nonatomic) _Bool isReplayBroadcastEnd; // @synthesize isReplayBroadcastEnd=_isReplayBroadcastEnd;
@property(nonatomic) _Bool isReplayBroadcast; // @synthesize isReplayBroadcast=_isReplayBroadcast;
@property(nonatomic) _Bool isbroadcastSupportReplay; // @synthesize isbroadcastSupportReplay=_isbroadcastSupportReplay;
@property(nonatomic) long long broadcastServerTime; // @synthesize broadcastServerTime=_broadcastServerTime;
@property(nonatomic) long long broadcastEndTime; // @synthesize broadcastEndTime=_broadcastEndTime;
@property(nonatomic) long long broadcastStartTime; // @synthesize broadcastStartTime=_broadcastStartTime;
@property(nonatomic) long long preloadTimeControl; // @synthesize preloadTimeControl=_preloadTimeControl;
@property(nonatomic) _Bool isPlaying; // @synthesize isPlaying=_isPlaying;
@property(nonatomic) _Bool autoJump; // @synthesize autoJump=_autoJump;
@property(nonatomic) _Bool isWaiting; // @synthesize isWaiting=_isWaiting;
@property(nonatomic) long long adType; // @synthesize adType=_adType;
@property(nonatomic) _Bool isFullScreen; // @synthesize isFullScreen=_isFullScreen;
@property(nonatomic) double screenScale; // @synthesize screenScale=_screenScale;
@property(nonatomic) _Bool seekFlag; // @synthesize seekFlag=_seekFlag;
@property(nonatomic) double totalDuration; // @synthesize totalDuration=_totalDuration;
@property(nonatomic) double adMidTime; // @synthesize adMidTime=_adMidTime;
@property(nonatomic) double adTotalTime; // @synthesize adTotalTime=_adTotalTime;
@property(nonatomic) double adLeftTime; // @synthesize adLeftTime=_adLeftTime;
@property(nonatomic) _Bool isUsePlayerTimer; // @synthesize isUsePlayerTimer=_isUsePlayerTimer;
@property(nonatomic) __weak id <PlayerControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (unsigned int)getADVVID;
- (_Bool)isCurrentHDROn;
- (_Bool)isCurrentDolbyVisionHDR;
- (_Bool)isDolbyVisionHDR;
- (id)hdrBitStreams;
- (int)currentPumaPlayerMode;
- (int)getCurVideStream;
- (void)initCupidIfcWithDic:(id)arg1 playBackScene:(int)arg2;
- (void)setVolume:(int)arg1;
- (void)setPlayerBuffer:(int)arg1;
- (void)setPlayerGetVoice;
- (void)updatePlayerAreaFrame;
- (_Bool)getResLImitFreeFlag;
- (_Bool)getLiveDolbyFlag;
- (void)stopPlayer;
- (_Bool)isVRState;
- (void)showDolbyTurnOnAnimationC;
- (void)showDolbyTurnOnAnimationB;
- (void)zoom:(int)arg1;
- (id)getInvokePlayerPara;
- (id)InvokeQYPlayerCommand:(int)arg1 withParam:(id)arg2;
- (void)changePlayerRenderEffectBy:(int)arg1;
- (void)sendAdsCreativeLoadingPingbackWithAdId:(long long)arg1 url:(id)arg2;
- (void)sendAdsCreativePingbackWithAdId:(unsigned int)arg1 event:(int)arg2 index:(int)arg3 url:(id)arg4;
- (void)onPlayCardShow:(unsigned int)arg1 event:(int)arg2;
- (void)updateAdProgress:(unsigned int)arg1 progress:(unsigned int)arg2;
- (void)sendAdsPingback:(unsigned int)arg1 event:(int)arg2 url:(id)arg3 properties:(id)arg4;
- (void)sendAdsPingback:(unsigned int)arg1 event:(int)arg2 url:(id)arg3;
- (void)setLiveMessage:(int)arg1 msg_params:(id)arg2;
- (void)SetMute:(_Bool)arg1;
- (void)pumaReLogin;
- (int)GetCurrentSubtitleLanguage;
- (id)getSubtitleLanguages;
- (void)SwitchSubtitle:(int)arg1;
- (void)pumaStopLoad;
- (struct CGRect)playAreaFrame;
- (id)pumaContentInfo;
- (struct CGSize)pumaVideoSize;
- (void)setSleep;
- (void)setWake;
- (void)onError:(id)arg1;
- (_Bool)isVideoToolBoxUsed;
- (id)getPumaLog;
- (struct CGRect)waterFrameWithImgSize:(struct CGSize)arg1;
- (void)setWatermarkHidden:(_Bool)arg1;
- (void)resetWatermarkFrame;
- (void)hideWatermark;
- (void)showWatermark;
- (void)setWatermarkImageName:(id)arg1 image2:(id)arg2 image3:(id)arg3;
- (void)snapShot;
- (void)setAdSDKState:(int)arg1 isVertical:(_Bool)arg2;
- (void)sleepPlayer;
- (void)wakeupPlayer;
- (id)getVipResInfo;
- (id)getDolbyResList;
- (id)getBitStreams;
- (id)getCurrentBitStream;
- (id)getMovieJSON;
- (void)jumpTitlesTrailer:(_Bool)arg1;
- (void)adTicketOnShow:(id)arg1;
- (void)adTicketOnClick:(id)arg1;
- (void)sendSkipAdsPingback;
- (id)InvokeAdCommand:(int)arg1 withParam:(id)arg2;
- (_Bool)adCanClick;
- (double)trailerTime;
- (double)titleTime;
- (long long)dimensionType;
- (long long)panoType;
- (void)onAdThroughTouched;
- (void)skipTrueviewAd;
- (void)jumpAd;
- (void)setZoomAndFull:(float)arg1 fullScreen:(_Bool)arg2;
- (void)setFullScreen:(_Bool)arg1;
- (id)getPlayAudioTracks;
- (id)getCurrentPlayAudioTrack;
- (void)setCurrentAudioTrack:(id)arg1;
- (_Bool)setHDRStatus:(_Bool)arg1 forRes:(id)arg2;
- (void)setCurrentRes:(id)arg1;
- (long long)getEPGServerTime;
- (void)seekToTime:(double)arg1;
- (void)stop;
- (void)pause;
- (void)pauseAndRequestAds;
- (void)playWhileActive;
- (void)play;
- (double)playableDuration;
- (double)duration;
- (double)currentTime;
- (double)currentPlaybackTime;
- (int)getPlayerCoreState;
- (int)getPlayState;
- (void)setupNextMovie:(id)arg1 andAutoJump:(_Bool)arg2;
- (void)playMovieWithDic:(id)arg1 andAutoJump:(_Bool)arg2;
- (void)closePlayer;
- (void)createPlayerWithString:(id)arg1 pumaType:(int)arg2;
- (void)setplayerScreenView:(_Bool)arg1;
- (id)getPlayerScreenViewWithFrame:(struct CGRect)arg1;
- (void)updateScreenSize:(double)arg1;
- (void)updateWaterFrameIsFullMode:(_Bool)arg1;
- (void)setPlayerScreenFrame:(struct CGRect)arg1;
- (void)dealloc;
- (id)init;

@end

