//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "NTESPlayerView.h"

@class AVPlayer, AVPlayerItem, AVPlayerLayer, NSError, NSURL;

@interface NTESSystemPlayerView : NTESPlayerView
{
    id _playProgressObserver;
    _Bool _playable;
    _Bool _muted;
    _Bool _isStoped;
    _Bool _isManualPause;
    _Bool _isRecovering;
    unsigned long long _loadStatus;
    unsigned long long _playStatus;
    unsigned long long _renderMode;
    NSURL *_realPlayURL;
    NSError *_error;
    AVPlayerLayer *_playerLayer;
    AVPlayerItem *_playerItem;
    AVPlayer *_player;
    double _recoverPlayTime;
}

@property(nonatomic) double recoverPlayTime; // @synthesize recoverPlayTime=_recoverPlayTime;
@property(nonatomic) _Bool isRecovering; // @synthesize isRecovering=_isRecovering;
@property(nonatomic) _Bool isManualPause; // @synthesize isManualPause=_isManualPause;
@property(nonatomic) _Bool isStoped; // @synthesize isStoped=_isStoped;
@property(retain, nonatomic) AVPlayer *player; // @synthesize player=_player;
@property(retain, nonatomic) AVPlayerItem *playerItem; // @synthesize playerItem=_playerItem;
@property(retain, nonatomic) AVPlayerLayer *playerLayer; // @synthesize playerLayer=_playerLayer;
@property(retain, nonatomic) NSError *error; // @synthesize error=_error;
@property(retain, nonatomic) NSURL *realPlayURL; // @synthesize realPlayURL=_realPlayURL;
- (_Bool)muted;
- (unsigned long long)renderMode;
@property(nonatomic) _Bool playable; // @synthesize playable=_playable;
@property(nonatomic) unsigned long long playStatus; // @synthesize playStatus=_playStatus;
@property(nonatomic) unsigned long long loadStatus; // @synthesize loadStatus=_loadStatus;
- (void).cxx_destruct;
- (id)getPlayerIdentifier;
- (_Bool)updatePlayerWithPreLoadVideo;
- (void)updatePlayStatusIfNeeded:(unsigned long long)arg1;
- (void)layoutSubviews;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)dealloc;
- (id)realPlayer;
- (double)bufferTime;
- (double)videoLength;
- (double)playTime;
- (void)setRenderMode:(unsigned long long)arg1;
- (void)setMuted:(_Bool)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (_Bool)isCurrentItem:(id)arg1;
- (void)playerItemPlaybackStalled:(id)arg1;
- (void)playerItemNewAccessLogEntry:(id)arg1;
- (void)playerItemDidReachEnd:(id)arg1;
- (void)removeObserverForPlayer:(id)arg1;
- (void)addObserverToPlayer:(id)arg1;
- (void)removePlayProgressObserver;
- (void)setupPlayerItemWith:(id)arg1;
- (void)prepareToPlayURL:(id)arg1 asset:(id)arg2 withKeys:(id)arg3 complete:(CDUnknownBlockType)arg4;
- (void)setUpPlayer;
- (void)seekToTime:(double)arg1 complete:(CDUnknownBlockType)arg2;
- (void)stopUpdatePlayTime;
- (void)startUpdatePlayTime;
- (_Bool)isPausing;
- (_Bool)isPlaying;
- (void)resume;
- (void)pause;
- (void)resetRecoverStatus;
- (_Bool)recover;
- (void)stop;
- (void)innerLoadVideoWithURL:(id)arg1 complete:(CDUnknownBlockType)arg2;
- (void)play;
- (_Bool)isSupportAirPlay;
- (_Bool)isSupportProxyDownload;

@end

