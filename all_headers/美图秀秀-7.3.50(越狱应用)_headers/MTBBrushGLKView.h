//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "MTGLView.h"

#import "MTGLViewDelegate-Protocol.h"
#import "PainterDelegate-Protocol.h"

@class BasePainter, MTFileStack, MTGLFramebuffer, MTGLProgram, MTGLTexture, NSString, PainterMaterialInfo;

@interface MTBBrushGLKView : MTGLView <PainterDelegate, MTGLViewDelegate>
{
    MTGLProgram *_displayProgram;
    int _displayPositionAttribute;
    int _displayTexcoordAttribute;
    int _displayModelViewUniform;
    int _displayProjectionUniform;
    unsigned int _originTextureUnifrom;
    unsigned int _alphaUniform;
    MTGLFramebuffer *_framebuffer;
    MTGLFramebuffer *_resultFramebuffer;
    _Bool _isOriginImage;
    _Bool _isFirst;
    struct CGPoint _translate;
    _Bool _isEmptyPainter;
    MTGLTexture *_originTexture;
    double _zoomViewScale;
    double _heightOfTop;
    double _heightOfBottom;
    double _glkContentScaleFactor;
    double _maxZoomScale;
    double _minZoomScale;
    double _drawSizeFactor;
    double _maxSaveNumber;
    MTGLFramebuffer *_displayFramebuffer;
    BasePainter *_currentPainter;
    MTFileStack *_operationStack;
    PainterMaterialInfo *_materialInfo;
    struct CGSize _imageOriginSize;
    union _GLKVector4 _clearColor;
}

@property(nonatomic) _Bool isEmptyPainter; // @synthesize isEmptyPainter=_isEmptyPainter;
@property(retain, nonatomic) PainterMaterialInfo *materialInfo; // @synthesize materialInfo=_materialInfo;
@property(retain, nonatomic) MTFileStack *operationStack; // @synthesize operationStack=_operationStack;
@property(retain, nonatomic) BasePainter *currentPainter; // @synthesize currentPainter=_currentPainter;
@property(retain, nonatomic) MTGLFramebuffer *displayFramebuffer; // @synthesize displayFramebuffer=_displayFramebuffer;
@property(nonatomic) double maxSaveNumber; // @synthesize maxSaveNumber=_maxSaveNumber;
@property(nonatomic) double drawSizeFactor; // @synthesize drawSizeFactor=_drawSizeFactor;
@property(nonatomic) union _GLKVector4 clearColor; // @synthesize clearColor=_clearColor;
@property(nonatomic) double minZoomScale; // @synthesize minZoomScale=_minZoomScale;
@property(nonatomic) double maxZoomScale; // @synthesize maxZoomScale=_maxZoomScale;
@property(nonatomic) double glkContentScaleFactor; // @synthesize glkContentScaleFactor=_glkContentScaleFactor;
@property(nonatomic) double heightOfBottom; // @synthesize heightOfBottom=_heightOfBottom;
@property(nonatomic) double heightOfTop; // @synthesize heightOfTop=_heightOfTop;
@property(nonatomic) struct CGSize imageOriginSize; // @synthesize imageOriginSize=_imageOriginSize;
@property(nonatomic) struct CGPoint translate; // @synthesize translate=_translate;
@property(nonatomic) double zoomViewScale; // @synthesize zoomViewScale=_zoomViewScale;
@property(retain, nonatomic) MTGLTexture *originTexture; // @synthesize originTexture=_originTexture;
- (void).cxx_destruct;
- (void)forceUpdatePaint;
- (void)painterNeedSave:(id)arg1;
- (id)basePainter;
- (void)setPaintResultToDisplayFramebuffer;
- (void)setFramebufferWithTexture:(id)arg1;
- (void)reRender:(id)arg1;
- (_Bool)undoAll;
- (_Bool)redo;
- (_Bool)undo;
- (_Bool)canRedo;
- (_Bool)canUndo;
- (void)saveStepWithImageData:(id)arg1;
- (void)saveStep;
- (void)resultImageData:(CDUnknownBlockType)arg1;
- (id)resultImage;
- (void)touchCancelled:(struct CGPoint)arg1;
- (void)touchEnded:(struct CGPoint)arg1;
- (void)touchMoved:(struct CGPoint)arg1;
- (void)touchBegan:(struct CGPoint)arg1;
- (struct CGPoint)translatePoint:(struct CGPoint)arg1;
- (struct CGRect)imageRect;
- (void)restrictImageRect;
- (void)scale:(double)arg1 withCenter:(struct CGPoint)arg2;
- (void)translate:(struct CGPoint)arg1;
- (void)glViewDidRender:(id)arg1;
- (void)glViewWillRender:(id)arg1;
- (void)render;
- (void)update;
- (void)createPainterWithInfo:(id)arg1;
- (void)applyEmptyPainter;
- (void)commonInit;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

