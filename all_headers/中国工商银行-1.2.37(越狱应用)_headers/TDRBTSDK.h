//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

@class NSCondition, NSMutableArray, NSMutableData, NSMutableString, NSOperationQueue, NSString, TDRCharacteristic, TDRPeripheral;

@interface TDRBTSDK : NSObject
{
    _Bool _bCacheWhenConnect;
    _Bool _bPairWait;
    _Bool _bJustWork;
    int _connectMode;
    int _btComType;
    NSMutableArray *_scanDevices;
    TDRPeripheral *_curePer;
    CDUnknownBlockType _disDevCb;
    CDUnknownBlockType _connDevCb;
    NSCondition *_datalock;
    NSMutableData *_recvDataCache;
    NSMutableString *_sercerUUID;
    NSMutableString *_writeUUID;
    NSMutableString *_readUUID;
    NSMutableString *_autoNotifyUUID;
    NSMutableString *_activeReadUUID;
    TDRCharacteristic *_writeCharacter;
    TDRCharacteristic *_notifyCharacter;
    TDRCharacteristic *_activeReadCharacter;
    TDRCharacteristic *_batteryCharacter;
    long long _writeType;
    NSOperationQueue *_connectQueue;
    NSString *_saveConnectingDeviceName;
    NSString *_saveConnectingDeviceUUID;
}

@property(retain, nonatomic) NSString *saveConnectingDeviceUUID; // @synthesize saveConnectingDeviceUUID=_saveConnectingDeviceUUID;
@property(retain, nonatomic) NSString *saveConnectingDeviceName; // @synthesize saveConnectingDeviceName=_saveConnectingDeviceName;
@property(retain, nonatomic) NSOperationQueue *connectQueue; // @synthesize connectQueue=_connectQueue;
@property(nonatomic) _Bool bJustWork; // @synthesize bJustWork=_bJustWork;
@property(nonatomic) _Bool bPairWait; // @synthesize bPairWait=_bPairWait;
@property(nonatomic) int btComType; // @synthesize btComType=_btComType;
@property(nonatomic) long long writeType; // @synthesize writeType=_writeType;
@property(retain, nonatomic) TDRCharacteristic *batteryCharacter; // @synthesize batteryCharacter=_batteryCharacter;
@property(retain, nonatomic) TDRCharacteristic *activeReadCharacter; // @synthesize activeReadCharacter=_activeReadCharacter;
@property(retain, nonatomic) TDRCharacteristic *notifyCharacter; // @synthesize notifyCharacter=_notifyCharacter;
@property(retain, nonatomic) TDRCharacteristic *writeCharacter; // @synthesize writeCharacter=_writeCharacter;
@property(retain, nonatomic) NSMutableString *activeReadUUID; // @synthesize activeReadUUID=_activeReadUUID;
@property(retain, nonatomic) NSMutableString *autoNotifyUUID; // @synthesize autoNotifyUUID=_autoNotifyUUID;
@property(retain, nonatomic) NSMutableString *readUUID; // @synthesize readUUID=_readUUID;
@property(retain, nonatomic) NSMutableString *writeUUID; // @synthesize writeUUID=_writeUUID;
@property(retain, nonatomic) NSMutableString *sercerUUID; // @synthesize sercerUUID=_sercerUUID;
@property(retain, nonatomic) NSMutableData *recvDataCache; // @synthesize recvDataCache=_recvDataCache;
@property(retain, nonatomic) NSCondition *datalock; // @synthesize datalock=_datalock;
@property(copy, nonatomic) CDUnknownBlockType connDevCb; // @synthesize connDevCb=_connDevCb;
@property(copy, nonatomic) CDUnknownBlockType disDevCb; // @synthesize disDevCb=_disDevCb;
@property(nonatomic) _Bool bCacheWhenConnect; // @synthesize bCacheWhenConnect=_bCacheWhenConnect;
@property(nonatomic) int connectMode; // @synthesize connectMode=_connectMode;
@property(retain, nonatomic) TDRPeripheral *curePer; // @synthesize curePer=_curePer;
@property(retain, nonatomic) NSMutableArray *scanDevices; // @synthesize scanDevices=_scanDevices;
- (void).cxx_destruct;
- (void)checkDeviceStausForAppicationDoNextSetp;
- (void)readBattery:(CDUnknownBlockType)arg1;
- (void)readRSSIValue:(CDUnknownBlockType)arg1;
- (void)handleNotifyData:(id)arg1 name:(id)arg2 uuid:(id)arg3 peripheral:(id)arg4;
- (id)checkManagerState;
- (void)handleAutoConnect;
- (void)NotificationCentralManagerPowerOff:(id)arg1;
- (void)NotificationCentralManagerPowerOn:(id)arg1;
- (void)NotificationPeripheralDisConnect:(id)arg1;
- (void)ConnectDeviceInternal:(id)arg1 ConnectDeviceCallback:(CDUnknownBlockType)arg2;
- (void)doConnectInBlock:(id)arg1 ConnectDeviceCallback:(CDUnknownBlockType)arg2;
- (void)ConnectDeviceAndFindCharacter:(id)arg1 ConnectDeviceCallback:(CDUnknownBlockType)arg2;
- (void)sendNotification;
- (unsigned long long)Read:(id)arg1 timeOut:(double)arg2;
- (unsigned long long)write:(id)arg1;
- (void)disconnectDeviceWithoutAutoConnect:(CDUnknownBlockType)arg1;
- (void)DisConnectDevice:(CDUnknownBlockType)arg1;
- (void)ConnectDevice:(id)arg1 connectCallBack:(CDUnknownBlockType)arg2;
- (void)ConnectDevice:(id)arg1 deviceUUID:(id)arg2 peripheral:(id)arg3 connectCallBack:(CDUnknownBlockType)arg4;
- (void)cleanCacheDeviceUUID;
- (void)OpenDeviceWithCacheUUID:(CDUnknownBlockType)arg1;
- (void)OpenDevice:(CDUnknownBlockType)arg1;
- (long long)CheckCurDeviceIsConnect:(id)arg1 deviceUUID:(id)arg2 ManufacturerData:(id)arg3;
- (void)stopDeviceScanning;
- (void)ScanDevice:(CDUnknownBlockType)arg1;
- (long long)CheckBlueToothSwitch:(_Bool *)arg1;
- (_Bool)CheckHasCacheUUID:(id)arg1 deviceUUID:(id)arg2;
- (void)cacheNameWhenConnectSuccess;
- (void)setServerAndCharacter:(id)arg1 write:(id)arg2 read:(id)arg3 autoNotify:(id)arg4 activeReadValue:(id)arg5;
- (void)justWorkMode;
- (void)setCommType:(int)arg1;
- (id)init;

@end

