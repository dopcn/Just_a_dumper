//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

@interface LMListenCollectionManager : NSObject
{
}

+ (id)getFoldersFromLocalWithQuerySql:(id)arg1;
+ (_Bool)isNeedGetListenCollectionsEntityListForServer:(double)arg1;
+ (id)getAllItemsInListenCollection:(long long)arg1 recordState:(long long)arg2;
+ (_Bool)deleteMarkListenCollection:(id)arg1;
+ (_Bool)deleteListenCollection:(id)arg1;
+ (_Bool)addOneListenCollectionToLocal:(id)arg1;
+ (void)getEntitiesOfListenCollectionWithId:(long long)arg1 userId:(long long)arg2 referId:(long long)arg3 openType:(id)arg4 pageSize:(long long)arg5 successBlk:(CDUnknownBlockType)arg6 failureBlk:(CDUnknownBlockType)arg7;
+ (void)getListenCollectionDetailWithId:(long long)arg1 successBlk:(CDUnknownBlockType)arg2 failureBlk:(CDUnknownBlockType)arg3;
+ (void)createListenCollectionWithName:(id)arg1 folderId:(long long)arg2 successBlk:(CDUnknownBlockType)arg3 failureBlk:(CDUnknownBlockType)arg4;
+ (void)getFolderListWithType:(long long)arg1 openType:(id)arg2 pageSize:(long long)arg3 referId:(long long)arg4 userId:(long long)arg5 successBlk:(CDUnknownBlockType)arg6 failureBlk:(CDUnknownBlockType)arg7;
+ (_Bool)batchUpdateListenCollectionToDefault;
+ (void)batchMoveCollection:(id)arg1 fromFolder:(long long)arg2 toFolder:(long long)arg3;
+ (void)batchAddCollection:(id)arg1 toListenCollection:(long long)arg2;
+ (void)batchDeleteCollection:(id)arg1;
+ (_Bool)cleanCollectioinsTable;
+ (_Bool)cleanListenCollectionTable;
+ (_Bool)cleanUpdateCountForListenCollection:(long long)arg1;
+ (long long)getItemsCountInListenCollection:(long long)arg1;
+ (_Bool)updateBookUpdateStateInFolderId:(long long)arg1 withCount:(long long)arg2;
+ (long long)getUpdateCountInListenCollection:(long long)arg1;
+ (void)batchDeleteListenCollections:(id)arg1 complete:(CDUnknownBlockType)arg2 failure:(CDUnknownBlockType)arg3;
+ (id)getAllListenCollections;
+ (id)getFolderWithId:(long long)arg1;
+ (id)getAllListenCollectionsWithState:(long long)arg1;
+ (void)collectOneListenCollecion:(id)arg1 toServerIsCollect:(_Bool)arg2 complete:(CDUnknownBlockType)arg3 failure:(CDUnknownBlockType)arg4;
+ (_Bool)updateAuthorIdForDefaultFolderByUserId:(long long)arg1;
+ (_Bool)updateListenCollectionEntityUpdateTimeWithId:(long long)arg1;
+ (_Bool)updateListenCollectionModifyDateWithId:(long long)arg1;
+ (id)getListenCollectionCoverWithId:(long long)arg1;
+ (_Bool)updateListenCollectionCoverWithId:(long long)arg1;
+ (_Bool)deleteOneListenCollection:(id)arg1;
+ (_Bool)isCollectedListenCollection:(id)arg1;
+ (long long)getAllItemsCountFromLocalInListenCollection:(id)arg1;
+ (id)getAllItemsInListenCollection:(id)arg1;
+ (id)getAllListenCollectionsFromLocalWithType:(long long)arg1;
+ (_Bool)saveListenCollectionList:(id)arg1;
+ (void)getListenCollectionsFromLocalWithType:(long long)arg1 completeBlk:(CDUnknownBlockType)arg2;
+ (_Bool)updateDefaultCollectionsWithId:(long long)arg1;
+ (_Bool)changeListenCollection:(id)arg1 itemsCountWithNewCount:(long long)arg2;

@end

