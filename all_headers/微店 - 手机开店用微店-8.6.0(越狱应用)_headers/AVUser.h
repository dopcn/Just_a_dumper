//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "AVObject.h"

#import "AVSubclassing-Protocol.h"

@class NSString;

@interface AVUser : AVObject <AVSubclassing>
{
}

+ (id)endPoint;
+ (id)userTag;
+ (id)query;
+ (void)resetPasswordWithSmsCode:(id)arg1 newPassword:(id)arg2 block:(CDUnknownBlockType)arg3;
+ (void)requestPasswordResetCodeForPhoneNumber:(id)arg1 options:(id)arg2 callback:(CDUnknownBlockType)arg3;
+ (void)requestPasswordResetWithPhoneNumber:(id)arg1 block:(CDUnknownBlockType)arg2;
+ (void)internalRequestPasswordResetForEmailInBackground:(id)arg1 block:(CDUnknownBlockType)arg2;
+ (void)requestPasswordResetForEmailInBackground:(id)arg1 block:(CDUnknownBlockType)arg2;
+ (void)requestPasswordResetForEmailInBackground:(id)arg1 target:(id)arg2 selector:(SEL)arg3;
+ (void)requestPasswordResetForEmailInBackground:(id)arg1;
+ (_Bool)requestPasswordResetForEmail:(id)arg1 error:(id *)arg2;
+ (_Bool)requestPasswordResetForEmail:(id)arg1;
+ (void)logOut;
+ (_Bool)signUpOrLoginWithMobilePhoneNumber:(id)arg1 smsCode:(id)arg2 block:(CDUnknownBlockType)arg3 waitUntilDone:(_Bool)arg4 error:(id *)arg5;
+ (void)signUpOrLoginWithMobilePhoneNumberInBackground:(id)arg1 smsCode:(id)arg2 block:(CDUnknownBlockType)arg3;
+ (void)signUpOrLoginWithMobilePhoneNumberInBackground:(id)arg1 smsCode:(id)arg2 target:(id)arg3 selector:(SEL)arg4;
+ (void)signUpOrLoginWithMobilePhoneNumberInBackground:(id)arg1 smsCode:(id)arg2;
+ (id)signUpOrLoginWithMobilePhoneNumber:(id)arg1 smsCode:(id)arg2 error:(id *)arg3;
+ (id)signUpOrLoginWithMobilePhoneNumber:(id)arg1 smsCode:(id)arg2;
+ (_Bool)logInWithMobilePhoneNumber:(id)arg1 smsCode:(id)arg2 block:(CDUnknownBlockType)arg3 waitUntilDone:(_Bool)arg4 error:(id *)arg5;
+ (void)logInWithMobilePhoneNumberInBackground:(id)arg1 smsCode:(id)arg2 block:(CDUnknownBlockType)arg3;
+ (void)logInWithMobilePhoneNumberInBackground:(id)arg1 smsCode:(id)arg2 target:(id)arg3 selector:(SEL)arg4;
+ (void)logInWithMobilePhoneNumberInBackground:(id)arg1 smsCode:(id)arg2;
+ (id)logInWithMobilePhoneNumber:(id)arg1 smsCode:(id)arg2 error:(id *)arg3;
+ (id)logInWithMobilePhoneNumber:(id)arg1 smsCode:(id)arg2;
+ (void)requestLoginCodeForPhoneNumber:(id)arg1 options:(id)arg2 callback:(CDUnknownBlockType)arg3;
+ (void)requestLoginSmsCode:(id)arg1 withBlock:(CDUnknownBlockType)arg2;
+ (id)becomeWithSessionToken:(id)arg1 error:(id *)arg2;
+ (void)internalBecomeWithSessionTokenInBackground:(id)arg1 block:(CDUnknownBlockType)arg2;
+ (void)becomeWithSessionTokenInBackground:(id)arg1 block:(CDUnknownBlockType)arg2;
+ (_Bool)logInWithMobilePhoneNumber:(id)arg1 password:(id)arg2 block:(CDUnknownBlockType)arg3 waitUntilDone:(_Bool)arg4 error:(id *)arg5;
+ (void)logInWithMobilePhoneNumberInBackground:(id)arg1 password:(id)arg2 block:(CDUnknownBlockType)arg3;
+ (void)logInWithMobilePhoneNumberInBackground:(id)arg1 password:(id)arg2 target:(id)arg3 selector:(SEL)arg4;
+ (void)logInWithMobilePhoneNumberInBackground:(id)arg1 password:(id)arg2;
+ (id)logInWithMobilePhoneNumber:(id)arg1 password:(id)arg2 error:(id *)arg3;
+ (id)logInWithMobilePhoneNumber:(id)arg1 password:(id)arg2;
+ (_Bool)logInWithUsername:(id)arg1 password:(id)arg2 block:(CDUnknownBlockType)arg3 waitUntilDone:(_Bool)arg4 error:(id *)arg5;
+ (void)logInWithUsernameInBackground:(id)arg1 password:(id)arg2 block:(CDUnknownBlockType)arg3;
+ (void)logInWithUsernameInBackground:(id)arg1 password:(id)arg2 target:(id)arg3 selector:(SEL)arg4;
+ (void)logInWithUsernameInBackground:(id)arg1 password:(id)arg2;
+ (id)logInWithUsername:(id)arg1 password:(id)arg2 error:(id *)arg3;
+ (id)logInWithUsername:(id)arg1 password:(id)arg2;
+ (id)userParameter:(id)arg1 password:(id)arg2;
+ (void)verifyMobilePhone:(id)arg1 withBlock:(CDUnknownBlockType)arg2;
+ (void)requestVerificationCodeForPhoneNumber:(id)arg1 options:(id)arg2 callback:(CDUnknownBlockType)arg3;
+ (void)requestMobilePhoneVerify:(id)arg1 withBlock:(CDUnknownBlockType)arg2;
+ (void)requestEmailVerify:(id)arg1 withBlock:(CDUnknownBlockType)arg2;
+ (void)disableAutomaticUser;
+ (_Bool)isAutomaticUserEnabled;
+ (void)enableAutomaticUser;
+ (id)userOrSubclassUser;
+ (id)user;
+ (id)currentUser;
+ (void)changeCurrentUser:(id)arg1 save:(_Bool)arg2;
+ (id)parseClassName;
+ (void)load;
+ (id)followeeQuery:(id)arg1;
+ (id)followerQuery:(id)arg1;
- (id)snapshot;
- (id)postData;
- (void)removeLocalData;
- (void)setNewFlag:(_Bool)arg1;
- (id)internalClassName;
- (void)refreshSessionTokenWithBlock:(CDUnknownBlockType)arg1;
- (void)updatePassword:(id)arg1 newPassword:(id)arg2 block:(CDUnknownBlockType)arg3;
- (void)updatePassword:(id)arg1 newPassword:(id)arg2 withTarget:(id)arg3 selector:(SEL)arg4;
- (void)signUpInBackgroundWithTarget:(id)arg1 selector:(SEL)arg2;
- (id)initialBodyData;
- (id)userDictionaryForCache;
- (id)userDictionary;
- (_Bool)shouldIncludeUpdateRequests;
- (void)signUpInBackgroundWithBlock:(CDUnknownBlockType)arg1;
- (void)signUpInBackground;
- (_Bool)signUpAndThrowsWithError:(id *)arg1;
- (_Bool)signUp:(id *)arg1;
- (_Bool)signUp;
- (void)postDelete;
- (void)postSave;
- (id)preSave;
- (void)getRolesInBackgroundWithBlock:(CDUnknownBlockType)arg1;
- (id)getRolesAndThrowsWithError:(id *)arg1;
- (id)getRoles:(id *)arg1;
- (id)linkedServiceNames;
- (_Bool)isAuthenticated;
- (_Bool)isAuthDataExistInMemory;
- (void)isAuthenticatedWithSessionToken:(id)arg1 callback:(CDUnknownBlockType)arg2;
- (void)getFollowersAndFollowees:(CDUnknownBlockType)arg1;
- (void)getFollowees:(CDUnknownBlockType)arg1;
- (void)getFollowers:(CDUnknownBlockType)arg1;
- (void)unfollow:(id)arg1 andCallback:(CDUnknownBlockType)arg2;
- (void)follow:(id)arg1 userDictionary:(id)arg2 andCallback:(CDUnknownBlockType)arg3;
- (void)follow:(id)arg1 andCallback:(CDUnknownBlockType)arg2;
- (id)followerQuery;
- (id)followeeQuery;

// Remaining properties
@property(copy, nonatomic) NSString *email; // @dynamic email;
@property(copy, nonatomic) NSString *facebookToken; // @dynamic facebookToken;
@property(nonatomic) _Bool isNew; // @dynamic isNew;
@property(copy, nonatomic) NSString *mobilePhoneNumber; // @dynamic mobilePhoneNumber;
@property(nonatomic) _Bool mobilePhoneVerified; // @dynamic mobilePhoneVerified;
@property(copy, nonatomic) NSString *password; // @dynamic password;
@property(copy, nonatomic) NSString *qqWeiboToken; // @dynamic qqWeiboToken;
@property(copy, nonatomic) NSString *sessionToken; // @dynamic sessionToken;
@property(copy, nonatomic) NSString *sinaWeiboToken; // @dynamic sinaWeiboToken;
@property(copy, nonatomic) NSString *twitterToken; // @dynamic twitterToken;
@property(copy, nonatomic) NSString *username; // @dynamic username;

@end

