//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <UIKit/UIView.h>

#import "CTH5WebViewDelegate-Protocol.h"
#import "UIGestureRecognizerDelegate-Protocol.h"
#import "WKNavigationDelegate-Protocol.h"

@class CTErrorView, CTH5WebView, NSString, NSURL, UITapGestureRecognizer;
@protocol CTFlightH5MaskViewDelegate;

@interface CTFlightH5MaskView : UIView <WKNavigationDelegate, CTH5WebViewDelegate, UIGestureRecognizerDelegate>
{
    UITapGestureRecognizer *tapGestureRecoginzer;
    CTH5WebView *webView;
    double startLoadTimestamp;
    CTErrorView *loadingErrorView;
    double lastShowErrorViewTimestamp;
    NSURL *currentURL;
    NSString *requestStr;
    NSString *responseStr;
    _Bool isNeedMaskView;
    CDUnknownBlockType closeMaskBlock;
    CDUnknownBlockType closeMaskInExtraViewBlock;
    _Bool _notCloseWebView;
    _Bool _fadeIn;
    _Bool _fadeOut;
    _Bool _showLoading;
    CDUnknownBlockType _webViewFailLoadBlock;
    CDUnknownBlockType _webViewDidFinishLoadBlock;
    CDUnknownBlockType _bridgeJSLoadFinishBlock;
    NSString *_tagName;
    id <CTFlightH5MaskViewDelegate> _delegate;
}

@property(nonatomic) _Bool showLoading; // @synthesize showLoading=_showLoading;
@property(nonatomic) _Bool fadeOut; // @synthesize fadeOut=_fadeOut;
@property(nonatomic) _Bool fadeIn; // @synthesize fadeIn=_fadeIn;
@property(nonatomic) __weak id <CTFlightH5MaskViewDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) NSString *tagName; // @synthesize tagName=_tagName;
@property(copy, nonatomic) CDUnknownBlockType bridgeJSLoadFinishBlock; // @synthesize bridgeJSLoadFinishBlock=_bridgeJSLoadFinishBlock;
@property(copy, nonatomic) CDUnknownBlockType webViewDidFinishLoadBlock; // @synthesize webViewDidFinishLoadBlock=_webViewDidFinishLoadBlock;
@property(copy, nonatomic) CDUnknownBlockType webViewFailLoadBlock; // @synthesize webViewFailLoadBlock=_webViewFailLoadBlock;
@property(nonatomic) _Bool notCloseWebView; // @synthesize notCloseWebView=_notCloseWebView;
- (void).cxx_destruct;
- (id)executeWithJS:(id)arg1 withParams:(id)arg2;
- (void)webView:(id)arg1 didFinishNavigation:(id)arg2;
- (void)webView:(id)arg1 didFailNavigation:(id)arg2 withError:(id)arg3;
- (void)webView:(id)arg1 decidePolicyForNavigationAction:(id)arg2 decisionHandler:(CDUnknownBlockType)arg3;
- (void)bridgeJSLoadFinished;
- (void)hideLoadingView;
- (void)showLoadingView;
- (void)addErrorView;
- (void)addLoadingView;
- (void)dismissWithoutAnima;
- (void)dismiss;
- (void)handleGesture:(id)arg1;
- (_Bool)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
- (void)getHtmlStrKeyList:(id)arg1 withBlock:(CDUnknownBlockType)arg2;
- (void)getCacheHtmlStrKeyList:(id)arg1;
- (void)getHtmlStrKeyList:(id)arg1;
- (void)showEmbedViewWithKey:(id)arg1 withSourceType:(int)arg2 withBusinessType:(int)arg3 frame:(struct CGRect)arg4;
- (void)showEmbedViewWithKey:(id)arg1 withSourceType:(int)arg2;
- (void)showWithKeyList:(id)arg1 withSourceType:(int)arg2 withBusinessType:(int)arg3 isMask:(id)arg4 pageTitle:(id)arg5 isCache:(_Bool)arg6;
- (void)showWithKeyList:(id)arg1 withSourceType:(int)arg2 withBusinessType:(int)arg3;
- (void)showWithKeyList:(id)arg1 withSourceType:(int)arg2 withBusinessType:(int)arg3 isCache:(_Bool)arg4;
- (void)showWithUrlInView:(id)arg1 isCloseMask:(CDUnknownBlockType)arg2;
- (void)showWithKey:(id)arg1 withSourceType:(int)arg2 isCloseMask:(CDUnknownBlockType)arg3;
- (void)showWithURL:(id)arg1 isCloseMask:(CDUnknownBlockType)arg2;
- (void)showWithKey:(id)arg1 withSourceType:(int)arg2;
- (void)showWithUrlInView:(id)arg1;
- (void)showWithURL:(id)arg1;
- (void)showWithURL:(id)arg1 isNeedMask:(_Bool)arg2;
- (void)showWithURLDirect:(id)arg1;
- (void)prepareWebView;
@property(readonly, nonatomic) CTH5WebView *h5WebView;
- (_Bool)isFinishedLoadWebView;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

