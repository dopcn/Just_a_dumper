//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

@class CallObjectQueue, FolderRecoveryTips, ListBase, NSMutableArray;

@interface CloudFolder : NSObject
{
    NSMutableArray *_folderInfos;
    int _eFolderStatus;
    unsigned long long _uin;
    ListBase *_foldersList;
    ListBase *_folderSongsList;
    NSMutableArray *_taoFolders;
    ListBase *_taoFolderList;
    CallObjectQueue *_callObjectQueue;
    _Bool _loadFoldered;
    _Bool _needRecountOfflineCount;
    ListBase *_radioFolderList;
    FolderRecoveryTips *_currentRecoveryTips;
    NSMutableArray *_radioFolders;
}

+ (void)splitFolder:(id)arg1 toFolders:(id)arg2 andAlbum:(id)arg3;
+ (unsigned long long)getIndexInArray:(id)arg1 byTid:(long long)arg2;
+ (unsigned long long)getIndexInArray:(id)arg1 byFolderId:(int)arg2;
+ (unsigned int)getOfflinecountByListBase:(id)arg1;
+ (unsigned int)getOfflinecountByFolderSongs:(id)arg1 careOpType:(_Bool)arg2;
@property _Bool needRecountOfflineCount; // @synthesize needRecountOfflineCount=_needRecountOfflineCount;
@property _Bool loadFoldered; // @synthesize loadFoldered=_loadFoldered;
@property(retain) NSMutableArray *radioFolders; // @synthesize radioFolders=_radioFolders;
@property(retain, nonatomic) FolderRecoveryTips *currentRecoveryTips; // @synthesize currentRecoveryTips=_currentRecoveryTips;
@property(readonly) ListBase *radioFolderList; // @synthesize radioFolderList=_radioFolderList;
@property(readonly) ListBase *taoFolderList; // @synthesize taoFolderList=_taoFolderList;
@property(retain) NSMutableArray *taoFolders; // @synthesize taoFolders=_taoFolders;
@property(readonly) ListBase *folderSongsList; // @synthesize folderSongsList=_folderSongsList;
@property(retain) NSMutableArray *folderInfos; // @synthesize folderInfos=_folderInfos;
@property(readonly) int eFolderStatus; // @synthesize eFolderStatus=_eFolderStatus;
- (void).cxx_destruct;
- (void)reCountOfflineCountIfNeeded;
- (void)onNotifySongEntityFileChanged:(id)arg1;
- (id)_getFolderExistingSong:(id)arg1 folderType:(int)arg2;
- (id)getRadioFoldersExistSong:(id)arg1;
- (id)getTaoFoldersExistSong:(id)arg1;
- (id)getAlbumFoldersExistSong:(id)arg1;
- (void)updateFolderInfoToDB:(id)arg1;
- (_Bool)isMyFolderSong:(id)arg1 folderType:(int)arg2;
- (_Bool)isMyRadioSong:(id)arg1;
- (_Bool)isMyTaoSong:(id)arg1;
- (_Bool)isMyAlbumSong:(id)arg1;
- (_Bool)isMyFolderSong:(id)arg1 containMyLove:(_Bool)arg2;
- (id)foldersPassingTest:(CDUnknownBlockType)arg1;
- (id)findFolderInfoByFolderName:(id)arg1 folderID:(int)arg2 Tid:(long long)arg3 folderType:(int)arg4;
- (void)setNewFolderStatus:(int)arg1;
- (void)setNewFolderInfos:(id)arg1;
- (void)setNewTaoFolders:(id)arg1;
- (void)setNewRadioFolders:(id)arg1;
- (void)sortCloudFolders:(id)arg1;
- (_Bool)isSongInLoveFolder:(id)arg1;
- (void)logout;
- (void)onActiveFolder:(id)arg1;
- (void)onActive;
- (_Bool)isStable;
- (_Bool)finishLoadFolderSongsFromeDB;
- (_Bool)finishLoadFoldersFromDB;
- (void)_onReloadDataByFolderInfoFinish:(id)arg1 animateDiff:(id)arg2 updateLocalAll:(_Bool)arg3;
- (void)reloadDataByFolderInfo:(id)arg1 fromDeleteListItem:(_Bool)arg2 updateLocalAll:(_Bool)arg3 syncCall:(_Bool)arg4;
- (void)reloadDataByFolderInfo:(id)arg1 fromDeleteListItem:(_Bool)arg2 updateLocalAll:(_Bool)arg3 syncCall:(_Bool)arg4 block:(CDUnknownBlockType)arg5;
- (void)reloadData:(_Bool)arg1 updateLocalAll:(_Bool)arg2;
- (void)applyNewFolderSongData:(id)arg1 updateLocalAll:(_Bool)arg2;
- (id)getLoveFolder;
- (id)_getAnimateDiff:(id)arg1 fromDeleteListItem:(_Bool)arg2;
- (unsigned int)_getOfflinecount:(id)arg1;
- (void)dealloc;
- (id)getFolders:(int)arg1;
- (_Bool)isFolder:(id)arg1 matchFilter:(int)arg2;
- (id)_getFoldersFromDB;
- (void)_avoidMVFolderNotExist;
- (void)_avoid201NotExist;
- (_Bool)isMyPrivateList:(id)arg1;
- (_Bool)isAutoSyn:(id)arg1;
- (_Bool)isMyFavMVWithVideoID:(id)arg1;
- (id)getLoveMVFolder;
- (_Bool)isMyFavFolderWithFolderID:(unsigned long long)arg1 folderType:(int)arg2;
- (_Bool)isMyFavRadioWithRadioID:(unsigned long long)arg1;
- (_Bool)isMyFavAlbmWithAlbumID:(unsigned long long)arg1;
- (id)getAllMySongContainMylove:(_Bool)arg1;
- (_Bool)isMyFavTaoListWithDissID:(long long)arg1;
- (_Bool)isMyFavListWithDissID:(long long)arg1;
- (void)onLoginSuccess;
- (void)_loadFolders;
- (id)initWithUin:(unsigned long long)arg1;

@end

