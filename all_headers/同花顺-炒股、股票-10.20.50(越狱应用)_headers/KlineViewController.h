//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "HXChildTabbarController.h"

#import "HXContainerScrollViewDelegate-Protocol.h"
#import "KLineBSPointControllerDelegate-Protocol.h"
#import "LanscapeTransitionDelegate-Protocol.h"
#import "MaiDianProtocol-Protocol.h"
#import "NSUserActivityDelegate-Protocol.h"

@class HXBuySellLoginTipView, KLineBSPointController, KlineBaoJiaBaseView, KlineSettingView, NSString, NewCurveKline_Shu, TeachingOperatingManager;

@interface KlineViewController : HXChildTabbarController <LanscapeTransitionDelegate, NSUserActivityDelegate, KLineBSPointControllerDelegate, HXContainerScrollViewDelegate, MaiDianProtocol>
{
    _Bool _isLandscapeUI;
    _Bool _isShowLandscape;
    _Bool _needTransitionsAnimate;
    NewCurveKline_Shu *_KlineView;
    KlineBaoJiaBaseView *_KlineTopView;
    KlineSettingView *_KlineSettingView;
    unsigned long long _showType;
    NSString *_oldMarketId;
    TeachingOperatingManager *_teachingOperatingManager;
    KLineBSPointController *_klineBSPointController;
    HXBuySellLoginTipView *_floatLoginView;
}

@property(retain, nonatomic) HXBuySellLoginTipView *floatLoginView; // @synthesize floatLoginView=_floatLoginView;
@property(retain, nonatomic) KLineBSPointController *klineBSPointController; // @synthesize klineBSPointController=_klineBSPointController;
@property(retain, nonatomic) TeachingOperatingManager *teachingOperatingManager; // @synthesize teachingOperatingManager=_teachingOperatingManager;
@property(retain, nonatomic) NSString *oldMarketId; // @synthesize oldMarketId=_oldMarketId;
@property(nonatomic) unsigned long long showType; // @synthesize showType=_showType;
@property(nonatomic) _Bool needTransitionsAnimate; // @synthesize needTransitionsAnimate=_needTransitionsAnimate;
@property(nonatomic) _Bool isShowLandscape; // @synthesize isShowLandscape=_isShowLandscape;
@property(nonatomic) _Bool isLandscapeUI; // @synthesize isLandscapeUI=_isLandscapeUI;
@property(retain, nonatomic) KlineSettingView *KlineSettingView; // @synthesize KlineSettingView=_KlineSettingView;
@property(retain, nonatomic) KlineBaoJiaBaseView *KlineTopView; // @synthesize KlineTopView=_KlineTopView;
@property(retain, nonatomic) NewCurveKline_Shu *KlineView; // @synthesize KlineView=_KlineView;
- (void).cxx_destruct;
- (void)showTransitionAnimationForDismissLandscapeWithCompletion:(CDUnknownBlockType)arg1;
- (void)showTransitionAnimationForPresentLandscapeWithCompletion:(CDUnknownBlockType)arg1;
- (id)viewInfoForViewTrace;
- (void)HXContainerScrollViewDidEndDecelerating:(id)arg1;
- (void)HXContainerScrollViewWillBeginDecelerating:(id)arg1;
- (void)HXContainerScrollViewDidEndDragging:(id)arg1 willDecelerate:(_Bool)arg2;
- (void)HXContainerScrollViewWillBeginDragging:(id)arg1;
- (void)HXContainerScrollViewDidScroll:(id)arg1;
- (void)toLandscape;
- (int)getPageId;
- (void)reloadAllSubView;
- (void)refreshViewController;
- (void)userActivityWasContinued:(id)arg1;
- (void)orientationHasChanged;
- (_Bool)isNeedDrawPrimeCostLine;
- (void)enabledScrollBettweenKLineAndFenshi:(_Bool)arg1;
- (void)updateActivityData;
- (void)didBeforeLandscapeDismiss:(id)arg1;
- (id)getTimeSharingAndKLineTabbarController;
- (void)createTeachingOperatingView;
- (void)recoverUI;
- (void)updateUIToLandscape;
- (void)doLandscapeWithContext:(id)arg1;
- (void)doLandscape;
- (int)getMarketPageId:(id)arg1;
- (_Bool)isHasZhiBiao1;
- (id)klineShowLog;
- (void)updateUserActivityState:(id)arg1;
- (void)saveUserActivity;
- (id)getKlinePeriod;
- (void)showFloatLoginView;
- (void)viewDidUnload;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (id)initWithIdentify:(id)arg1;
- (void)dealloc;
- (void)didWhenStockSwitch;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

