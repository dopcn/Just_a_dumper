//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "DYMPlaySliderViewDelegate-Protocol.h"
#import "DYMPlayStopViewDelegate-Protocol.h"
#import "DYMURLResourceLoaderDelegate-Protocol.h"
#import "UIAlertViewDelegate-Protocol.h"

@class AVPlayer, AVPlayerItem, AVPlayerLayer, AVURLAsset, DYMPlaySliderView, DYMPlayStopView, DYMURLResourceLoader, DYMVideoProgressView, NSString, NSURL, UIButton, UISlider, UIView;
@protocol DYMAVPlayerDelegate;

@interface DYMAVPlayer : NSObject <UIAlertViewDelegate, DYMPlayStopViewDelegate, DYMPlaySliderViewDelegate, DYMURLResourceLoaderDelegate>
{
    _Bool _playWebVideo;
    _Bool _hasAllowToPlay;
    _Bool _isShared;
    _Bool _needSlider;
    _Bool _isFullScreen;
    _Bool _isShowHUD;
    _Bool _appEnterBackground;
    _Bool _downloadBeCancled;
    _Bool _isVolume;
    id <DYMAVPlayerDelegate> _delegate;
    AVURLAsset *_videoURLAsset;
    AVPlayerItem *_playerItem;
    AVPlayer *_player;
    AVPlayerLayer *_playerLayer;
    unsigned long long _playerState;
    DYMURLResourceLoader *_resourceLoader;
    NSURL *_playPathURL;
    NSString *_orginalURL;
    double _duration;
    id _sliderTimeObserver;
    UIView *_showView;
    DYMPlaySliderView *_playSliderView;
    DYMPlayStopView *_stopView;
    UIButton *_failureButton;
    UIButton *_closeButton;
    DYMVideoProgressView *_progressView;
    UISlider *_volumeSlider;
    CDStruct_1b6d18a9 _currentTime;
    struct CGRect _beforeRotationRect;
}

+ (id)sharedInstance;
@property(nonatomic) _Bool isVolume; // @synthesize isVolume=_isVolume;
@property(retain, nonatomic) UISlider *volumeSlider; // @synthesize volumeSlider=_volumeSlider;
@property(nonatomic) struct CGRect beforeRotationRect; // @synthesize beforeRotationRect=_beforeRotationRect;
@property(retain, nonatomic) DYMVideoProgressView *progressView; // @synthesize progressView=_progressView;
@property(retain, nonatomic) UIButton *closeButton; // @synthesize closeButton=_closeButton;
@property(nonatomic) _Bool downloadBeCancled; // @synthesize downloadBeCancled=_downloadBeCancled;
@property(retain, nonatomic) UIButton *failureButton; // @synthesize failureButton=_failureButton;
@property(retain, nonatomic) DYMPlayStopView *stopView; // @synthesize stopView=_stopView;
@property(retain, nonatomic) DYMPlaySliderView *playSliderView; // @synthesize playSliderView=_playSliderView;
@property(nonatomic) __weak UIView *showView; // @synthesize showView=_showView;
@property(nonatomic) _Bool appEnterBackground; // @synthesize appEnterBackground=_appEnterBackground;
@property(nonatomic) _Bool isShowHUD; // @synthesize isShowHUD=_isShowHUD;
@property(nonatomic) _Bool isFullScreen; // @synthesize isFullScreen=_isFullScreen;
@property(retain, nonatomic) id sliderTimeObserver; // @synthesize sliderTimeObserver=_sliderTimeObserver;
@property(nonatomic) double duration; // @synthesize duration=_duration;
@property(retain, nonatomic) NSString *orginalURL; // @synthesize orginalURL=_orginalURL;
@property(retain, nonatomic) NSURL *playPathURL; // @synthesize playPathURL=_playPathURL;
@property(retain, nonatomic) DYMURLResourceLoader *resourceLoader; // @synthesize resourceLoader=_resourceLoader;
@property(nonatomic) unsigned long long playerState; // @synthesize playerState=_playerState;
@property(retain, nonatomic) AVPlayerLayer *playerLayer; // @synthesize playerLayer=_playerLayer;
@property(retain, nonatomic) AVPlayer *player; // @synthesize player=_player;
@property(retain, nonatomic) AVPlayerItem *playerItem; // @synthesize playerItem=_playerItem;
@property(retain, nonatomic) AVURLAsset *videoURLAsset; // @synthesize videoURLAsset=_videoURLAsset;
@property(nonatomic) CDStruct_1b6d18a9 currentTime; // @synthesize currentTime=_currentTime;
@property(nonatomic) _Bool needSlider; // @synthesize needSlider=_needSlider;
@property(nonatomic) _Bool isShared; // @synthesize isShared=_isShared;
@property(nonatomic) _Bool hasAllowToPlay; // @synthesize hasAllowToPlay=_hasAllowToPlay;
@property(nonatomic) _Bool playWebVideo; // @synthesize playWebVideo=_playWebVideo;
@property(nonatomic) __weak id <DYMAVPlayerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)openVolume;
- (void)closeVolume;
- (void)resetSimpleVideo;
- (void)closeVideo;
- (void)showCloseButton;
- (void)seekToTime:(CDStruct_1b6d18a9)arg1;
- (void)resumeSessionTask;
- (void)alertView:(id)arg1 clickedButtonAtIndex:(long long)arg2;
- (void)clickStopButton:(id)arg1;
- (void)playViewFullScreen:(id)arg1 inView:(id)arg2;
- (void)endSlide:(id)arg1 inView:(id)arg2;
- (void)sliderValueChanged:(id)arg1 inView:(id)arg2;
- (void)beginSlide:(id)arg1 inView:(id)arg2;
- (void)playWithStopButton:(id)arg1 inView:(id)arg2;
- (void)playOrPauseWithButton:(id)arg1 inView:(id)arg2;
- (id)formatterTime:(double)arg1;
- (void)caculateDownloadProgress:(id)arg1;
- (void)bufferingForSeconds;
- (void)monitorPlay:(id)arg1;
- (void)resourceLoader:(id)arg1 receiveResponse:(id)arg2;
- (void)resourceLoader:(id)arg1 loadFailure:(id)arg2 error:(id)arg3;
- (void)clickFailureButton;
- (void)playerItemDidPlayToTheEnd:(id)arg1;
- (void)dealloc;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)hideIndicatorView;
- (void)showIndicatorView;
- (void)showPlaySliderView;
- (void)clearConfig;
- (void)viewDidDealloc:(id)arg1;
- (_Bool)isStop;
- (_Bool)isPause;
- (_Bool)isPlaying;
- (void)pauseVideo;
- (void)playVideo;
- (void)stopVideo;
- (void)startTimeObserver;
- (void)removeProgressObserver;
- (void)addProgressObserver;
- (void)appDidEnterBackground;
- (void)removeObserverOfPlayerItem;
- (void)addObserverOfPlayerItem;
- (void)setVideoImage:(id)arg1;
- (void)directPlay;
- (void)initPlayerWithURL:(id)arg1;
- (void)verticalMoved:(double)arg1;
- (void)handlePanGesture:(id)arg1;
- (void)configVolume;
- (void)playURL:(id)arg1 inView:(id)arg2;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

