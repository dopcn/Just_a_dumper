//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

@interface FlightDBUtil : NSObject
{
}

+ (int)getFlightDBType;
+ (id)getFlightIncrementABTestDefaultValueWith:(id)arg1;
+ (id)getFlightCityWithCityIdOrCityCode:(id)arg1;
+ (_Bool)getFlightCompletionPageAnimationSwitch;
+ (_Bool)getFlightHomePageLoadingSwitch;
+ (long long)getFlightSellOutCheckTimes;
+ (_Bool)getFlightServiceEncryptionSwitchWitFlag:(int)arg1;
+ (_Bool)getFlightNewPageInfoSwitch;
+ (_Bool)getFlightCheckinHybridSwitch;
+ (_Bool)getFlightScheduleHybridSwitch;
+ (_Bool)getFlightCreateOrderRepeatSwitch;
+ (_Bool)getFlightIntInlandProtoBufferSwitchWithFlag:(int)arg1;
+ (_Bool)getFlightIntProtoBufferSwitchWithFlag:(int)arg1;
+ (_Bool)getFlightInlandProtoBufferSwitchWithFlag:(int)arg1;
+ (_Bool)getFlightProtoBufferSwitchWithFlag:(int)arg1 pbkey:(id)arg2;
+ (_Bool)getFlightOrderComfortSwitch;
+ (_Bool)getPassengerNameCheckAlterSwitch;
+ (_Bool)getOrderReduceSwitch;
+ (id)getSearchDateWithSearchType:(int)arg1;
+ (id)getFlightSearchDate;
+ (id)getIntlFlightSearchDate;
+ (id)getPassengerAirlineCardWithPassengerID:(int)arg1;
+ (_Bool)savePassengerAirlineCardWithPassengerID:(int)arg1 cardType:(id)arg2 cardName:(id)arg3 cardNumber:(id)arg4;
+ (id)getCombineNameOfDomesticFlightBoardWithCityInfoDic:(id)arg1 resultNormalArray:(id)arg2;
+ (id)getCombineNameOfIntlFlightInquireWithCityInfoDic:(id)arg1;
+ (id)getCombineNameOfIntlFlightBoardWithCityInfoDic:(id)arg1 resultNormalArray:(id)arg2;
+ (id)getCityModelForCityListWithModelType:(int)arg1 businessType:(int)arg2 cityInfoDic:(id)arg3 resultNormalArray:(id)arg4;
+ (id)getResultCitiesWithType:(int)arg1 ByKeyword:(id)arg2;
+ (void)getResultCitiesHelper:(id)arg1 withTempDict:(id)arg2;
+ (id)getCityListWhichHasOneMoreAirport;
+ (id)getIntlFlightCityAirportList;
+ (id)getAirportWithFlag:(int)arg1;
+ (id)getFlightCityAirportList;
+ (id)getAirlineModelByCode:(id)arg1;
+ (id)getFlightCityModelByCityCode:(id)arg1;
+ (id)getWorldFlightCityModelByCondition:(int)arg1 WithValue:(id)arg2;
+ (id)getWorldFlightCityModelWithCacheByCondition:(int)arg1 WithValue:(id)arg2;
+ (id)getFlightCityFromHistoryByAirportCode:(id)arg1;
+ (id)getFlightCityByCondition:(int)arg1 WithValue:(id)arg2;
+ (id)getFlightIntNormalCityList;
+ (id)getFlightInlandNormalCityList;
+ (id)getFlightCities;
+ (id)getIntlFlightCityModelByCondition:(int)arg1 WithValue:(id)arg2;
+ (id)getParamsDictByCondition:(int)arg1 withValue:(id)arg2;
+ (id)getIntlCities;
+ (_Bool)FPCSwitchOpen;
+ (id)nameWithCertType:(int)arg1;
+ (id)getFlightDefaultCardListWithType:(int)arg1;
+ (id)getIdCardIdArrayAll;
+ (id)getIdCardNameByCardIdInCache:(int)arg1;
+ (id)getIdCardListByEnumtype:(int)arg1;
+ (id)getIdCardIdArrayByIncrement:(int)arg1 jsonStr:(id)arg2 isCardList:(_Bool)arg3;
+ (id)getIdCardIdArrayByEnumtype:(int)arg1;
+ (id)conversionIdCardColumnNameByEnumtype:(int)arg1;
+ (id)getIdCardIdSetByEnumtype:(int)arg1;
+ (id)getIdCardModelById:(id)arg1;
+ (id)getIdCardNameByCardId:(id)arg1;
+ (id)getUserInfoDicWithUIDAndCacheBean:(id)arg1 cachebean:(id)arg2;
+ (_Bool)addUserInfo:(id)arg1 cachebean:(id)arg2 itemKey:(id)arg3 itemValue:(id)arg4;
+ (id)getUserinfoWithUserIDAndCacheAndKey:(id)arg1 cachebean:(id)arg2 itemKey:(id)arg3;
+ (_Bool)deleteUserInfo:(id)arg1 cachebean:(id)arg2 itemKey:(id)arg3;
+ (id)getParamsDict:(id)arg1 cachebean:(id)arg2 itemKey:(id)arg3;
+ (_Bool)updateUserInfo:(id)arg1 cachebean:(id)arg2 itemKey:(id)arg3 itemValue:(id)arg4;
+ (id)getItemValueWithUserInfo:(id)arg1 cachebean:(id)arg2 itemKey:(id)arg3;
+ (_Bool)cleanFlightAllCityQueryList;
+ (_Bool)cleanFlightAllUserInfo;
+ (void)savePassengerAirlineCardToDBWith:(id)arg1;
+ (void)setAllUserInfo:(id)arg1;
+ (void)replaceDeliveryRecordForFlight:(id)arg1;
+ (id)replaceRecordForFlight:(id)arg1 historyList:(id)arg2;
+ (void)handleAirportInfoCacheBean:(id)arg1;
+ (void)handleIntFlightOrderCacheBean:(id)arg1;
+ (void)handleOrderCacheBean:(id)arg1;
+ (void)handleInquireCacheBean:(id)arg1;
+ (id)getFlightUserInfoDBPassengerAirlineCardListWithDB:(id)arg1;
+ (id)getFlightUserinfoDB_UserInfoTabledataWithDB:(id)arg1;
+ (id)getNationByNationality:(id)arg1;
+ (id)getUserSetting:(id)arg1;
+ (void)insertQueryHistoryOfCity:(int)arg1 cityModel:(id)arg2;
+ (id)getQueryHistoryOfCity:(int)arg1;
+ (id)getFlightStaticDataContentByDataType:(id)arg1 andItemKey:(id)arg2;
+ (id)getFlightStaticDataModelByDataType:(id)arg1 andItemKey:(id)arg2;
+ (id)getFlightStaticDataModelListByDataType:(id)arg1;
+ (void)updateTableFlightStaticData:(id)arg1 dataType:(int)arg2;
+ (void)updateTableGlobalFlightCity:(id)arg1;
+ (void)updateTableFlightCity:(id)arg1;
+ (void)updateFlightIncrementServerVersionByList:(id)arg1;
+ (id)getNeedUpdateFlightBasicDataIncrementList;
+ (id)getNeedUpdateFlightStaticDataIncrementList;
+ (id)getNeedUpdateFlightIncrementList;
+ (id)getFlightIncrementVersionByName:(id)arg1;
+ (_Bool)updateFlightIncrementVersion:(id)arg1 versonKey:(id)arg2 isNeedUpdate:(int)arg3;

@end

