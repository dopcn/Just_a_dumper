//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

@class NSString;

#pragma mark Function Pointers and Blocks

typedef void (*CDUnknownFunctionPointerType)(void); // return type and parameters are unknown

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct APTaskInfoData {
    unsigned char _field1[30];
};

struct AdSize {
    int _field1;
    int _field2;
};

struct AlterFacePoint {
    unsigned int AlterLeftEye[5];
    int LeftEyeNum;
    unsigned int AlterRightEye[5];
    int RightEyeNum;
    unsigned int AlterLetfEyeBrow[10];
    int LeftEyeBrowNum;
    unsigned int AlterRightEyeBrow[10];
    int RightEyeBrowNum;
    unsigned int AlterMouthCircle[18];
    int MoutCircleNum;
    unsigned int AlterMouthTopTip[3];
    int AlterMouthTopNum;
    unsigned int AlterMouthBottomTip[3];
    int AlterMouthBottomNum;
};

struct AudioEffectParam_t {
    float _field1;
    float _field2;
    float _field3;
    _Bool _field4;
    void *_field5;
    struct BezierParam_t _field6;
};

struct AudioFrameUtils;

struct AudioParam_t {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
    _Bool _field5;
};

struct AudioTempoUtils {
    struct AudioFrameUtils *_field1;
    struct AudioEffectParam_t _field2;
    struct AudioParam_t _field3;
    struct vector<float, std::__1::allocator<float>> *_field4;
    _Bool _field5;
    int _field6;
    float _field7;
    float _field8;
    _Bool _field9;
};

struct BasicTimer {
    struct timeval m_startTime;
    struct timeval m_currentTime;
    struct timeval m_lastTime;
    double m_total;
    double m_delta;
};

struct BezierParam_t {
    float _field1;
    float _field2;
    float _field3;
    float _field4;
    float _field5;
};

struct CATransform3D {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
    double _field5;
    double _field6;
    double _field7;
    double _field8;
    double _field9;
    double _field10;
    double _field11;
    double _field12;
    double _field13;
    double _field14;
    double _field15;
    double _field16;
};

struct CAntialias;

struct CBodyClassifier {
    void *_field1;
    void *_field2;
};

struct CCalFaceMask {
    struct Vector2 _field1[5][310];
    struct Vector2 _field2[5][118];
    struct Vector2 *_field3;
    struct Vector2 *_field4;
    int _field5;
    int _field6;
    int _field7;
    int _field8;
    float _field9[5];
    float _field10[5];
    struct CInterFacePoint *_field11;
};

struct CCommonControl {
    CDUnknownFunctionPointerType *_field1;
    struct CHairColor *_field2;
    float _field3;
    int _field4;
    char *_field5;
    char *_field6;
    int _field7;
    int _field8;
    int _field9;
    int _field10;
    int _field11;
    int _field12;
    _Bool _field13;
    float _field14;
    struct Vector2 _field15;
    struct CHairColorFilterBase *_field16;
    int _field17;
    float _field18;
    float _field19;
    float _field20;
    int _field21;
    int _field22;
    float _field23;
    float _field24;
    struct Vector2 _field25;
    struct Vector2 _field26;
    struct Vector2 _field27;
    struct Vector2 _field28;
    struct Vector2 _field29[2];
};

struct CCosmeticSelector {
    char *m_pEyeBeauty;
    char *m_pSkinBeauty;
    char *m_pLevelBeauty;
    int m_preLevel;
    int m_curLevel;
    int m_nFaceX;
    int m_nFaceY;
    int m_nFaceW;
    int m_nFaceH;
    NSString *m_strSavePath;
    struct InterPoint m_interPoint;
};

struct CEffectBase {
    struct CInterFacePoint *_field1;
    struct DoubleBuffer *_field2;
    struct MakeUpEffectPart _field3[5][26];
    int _field4;
    int _field5;
    int _field6;
    int _field7;
    struct RMFilterBase *_field8;
    char *_field9;
    struct CCalFaceMask _field10;
    struct FaceBeautifyMakeupV3_1 *_field11;
    struct CalFaceInfo *_field12;
    int _field13;
    int _field14;
    int _field15;
    struct RMFilterPoint *_field16;
    struct CGLFaceLiftPreview *_field17;
    _Bool _field18;
    struct RMFilterEraser *_field19;
    unsigned int _field20;
    unsigned int _field21;
    unsigned int _field22;
    char *_field23;
    int _field24;
    int _field25;
    struct Vector2 _field26[5];
    struct RMFilterAlphaMix *_field27;
    unsigned int _field28;
    _Bool _field29;
    int _field30;
    _Bool _field31;
    struct RMFilterTeethWhite *_field32;
    _Bool _field33;
    struct Vector2 _field34[4];
    struct Fit3DFaceModel *_field35;
    int _field36;
    _Bool _field37;
    _Bool _field38;
    _Bool _field39;
    _Bool _field40;
    _Bool _field41;
    int _field42;
    _Bool _field43;
    _Bool _field44[5];
    struct RMFilterMaskMix *_field45;
    unsigned int _field46[5];
    _Bool *_field47;
    struct WipeEyeBrowInfo _field48[5];
    struct PreviewBeautyInfo _field49[5];
    _Bool _field50[5][13];
    _Bool _field51;
    _Bool _field52;
    _Bool _field53;
};

struct CFaceSkinMask {
    unsigned char m_AvgFaceR;
    unsigned char m_AvgFaceG;
    unsigned char m_AvgFaceB;
    char *m_SkinMask;
    char *m_BlurSkinMask;
    char *m_pSrcData;
    int m_nSrcWidth;
    int m_nSrcHeight;
    int m_SkinWidth;
    int m_SkinHeight;
    char *m_FoundationMask;
    unsigned char m_AvgEyebrowR;
    unsigned char m_AvgEyebrowG;
    unsigned char m_AvgEyebrowB;
    _Bool m_bWearGlasses[10];
    char *m_pHairGray;
    int m_nHairWidth;
    int m_nHairHeight;
};

struct CFrameCache {
    int _field1;
    int _field2;
    int _field3;
    char *_field4;
};

struct CGAffineTransform {
    double a;
    double b;
    double c;
    double d;
    double tx;
    double ty;
};

struct CGLFaceLiftPreview;

struct CGLProgram;

struct CGLProgramPool {
    struct map<Makeup3X::ProgramKey, Makeup3X::CGLProgram *, std::__1::less<Makeup3X::ProgramKey>, std::__1::allocator<std::__1::pair<const Makeup3X::ProgramKey, Makeup3X::CGLProgram *>>> _field1;
    _Bool _field2;
    _Bool _field3;
    struct mutex _field4;
};

struct CGPoint {
    double x;
    double y;
};

struct CGRect {
    struct CGPoint origin;
    struct CGSize size;
};

struct CGSize {
    double width;
    double height;
};

struct CGVector {
    double dx;
    double dy;
};

struct CHairColor;

struct CHairColorFilterBase;

struct CImageSegment {
    struct stack<std::__1::vector<std::__1::vector<int, std::__1::allocator<int>>, std::__1::allocator<std::__1::vector<int, std::__1::allocator<int>>>>, std::__1::deque<std::__1::vector<std::__1::vector<int, std::__1::allocator<int>>, std::__1::allocator<std::__1::vector<int, std::__1::allocator<int>>>>, std::__1::allocator<std::__1::vector<std::__1::vector<int, std::__1::allocator<int>>, std::__1::allocator<std::__1::vector<int, std::__1::allocator<int>>>>>>> m_maskSupixelUndo[2];
    struct stack<std::__1::vector<std::__1::vector<int, std::__1::allocator<int>>, std::__1::allocator<std::__1::vector<int, std::__1::allocator<int>>>>, std::__1::deque<std::__1::vector<std::__1::vector<int, std::__1::allocator<int>>, std::__1::allocator<std::__1::vector<int, std::__1::allocator<int>>>>, std::__1::allocator<std::__1::vector<std::__1::vector<int, std::__1::allocator<int>>, std::__1::allocator<std::__1::vector<int, std::__1::allocator<int>>>>>>> m_maskSupixelRedo[2];
    int m_badcase;
    double m_tlinkWeightFore;
    double m_tlinkWeightBack;
    _Bool m_flagForegroundUpdate;
    _Bool m_flagAntiAliasing;
    _Bool m_realtimeShow;
    _Bool m_flagSaveKeyMask;
    int m_sizeSupixel;
    int m_radiusMatte;
    int m_radiusBrush;
    double m_scale;
    double m_ratio_showOverPro;
    struct map<std::__1::pair<int, int>, float, std::__1::less<std::__1::pair<int, int>>, std::__1::allocator<std::__1::pair<const std::__1::pair<int, int>, float>>> m_nlink_values;
    struct vector<int, std::__1::allocator<int>> m_validNodeIDs;
    int *m_validNodeMap;
    int m_graph_size;
    struct set<int, std::__1::less<int>, std::__1::allocator<int>> m_firmSeeds;
    int m_max_expansion;
    struct Graph<float, float, float> *m_graph;
    struct Graph<float, float, float> *m_graph_fore;
    struct Graph<float, float, float> *m_graph_back;
    struct GMM *m_gmm;
    struct PsImageScale *m_photoshop;
    struct CAntialias *m_antiAliasing;
    char *m_posteriorMap;
    char *m_maskSupixel;
    char *m_maskSupixel_large;
    char *m_maskSupixel_small;
    char *m_maskSupixel_bak_large;
    char *m_maskSupixel_bak_small;
    double *m_posteriorSupixel;
    char *m_alphaMatte;
    char *m_alphaMatteShow;
    char *m_pFaceMask;
    int m_numDataNeeded;
    int m_height_show;
    int m_width_show;
    int m_pixels_show;
    struct vector<std::__1::vector<CPoint, std::__1::allocator<CPoint>>, std::__1::allocator<std::__1::vector<CPoint, std::__1::allocator<CPoint>>>> m_fores;
    struct vector<std::__1::vector<CPoint, std::__1::allocator<CPoint>>, std::__1::allocator<std::__1::vector<CPoint, std::__1::allocator<CPoint>>>> m_backs;
    struct vector<AreaEdgeSearcher::EdgeNode, std::__1::allocator<AreaEdgeSearcher::EdgeNode>> m_edgeSupixel;
    struct vector<std::__1::vector<int, std::__1::allocator<int>>, std::__1::allocator<std::__1::vector<int, std::__1::allocator<int>>>> m_allEdges;
    char *m_image_src;
    int m_width_src;
    int m_height_src;
    int m_pixels_src;
    char *m_image_pro;
    int m_width_pro;
    int m_height_pro;
    int m_pixels_pro;
    int m_supixel_m;
    int *m_flag;
    int m_flagSize;
    int *m_flagValues;
    int *m_flagLocations;
    double m_edge_parm;
    double m_fore_parm;
    double m_back_parm;
    int m_numPathPointsAddedThisRun;
    struct vector<std::__1::vector<float, std::__1::allocator<float>>, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float>>>> m_aveColors;
};

struct CInterFacePoint {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    int _field3;
    int _field4;
    int _field5;
    struct FaceInfo _field6[5];
    _Bool _field7;
    struct NewFacePointSet *_field8;
    struct Vector2 *_field9;
    struct Vector2 *_field10;
    struct MtRectF _field11[5];
    int _field12[5];
    unsigned short *_field13;
    struct Vector2 *_field14;
    struct Vector2 *_field15;
    struct Vector2 *_field16;
    struct Vector2 *_field17;
    float _field18[5];
    float _field19[5];
    struct MeshParam _field20;
    struct MeshParam _field21;
    long long _field22;
    long long _field23;
    int _field24;
    char *_field25;
    struct MtRectF _field26;
    int _field27;
    struct MeshParam _field28;
    struct MeshParam _field29;
    long long _field30;
    long long _field31;
    int _field32;
    int _field33;
    struct Vector2 _field34[32];
    struct Vector2 _field35[32];
    int _field36;
    int _field37;
    char *_field38;
    char *_field39;
    struct MtRectF _field40;
    struct MtRectF _field41;
    _Bool _field42;
    int _field43;
};

struct CLLocationCoordinate2D {
    double latitude;
    double longitude;
};

struct CLSMachOFile {
    int fd;
    unsigned long long mappedSize;
    void *mappedFile;
};

struct CLSMachOSlice {
    void *startAddress;
    int cputype;
    int cpusubtype;
};

struct CLiquify {
    CDUnknownFunctionPointerType *_vptr$CLiquify;
    int m_moveLenght;
    double m_intensity;
    int m_nRaius;
    int m_nWidth;
    int m_nHeight;
    char *m_pShowImage;
    char *m_pMainImage;
    double *m_filter;
    struct {
        int nRadius;
        double dAmount;
        int enMode;
    } m_vals;
    struct dPOINT *m_pVectors;
    struct dPOINT *m_pAreaVectors;
};

struct CMTFilterAlphaMix;

struct CMTFilterBokeh;

struct CMTFilterColorBase;

struct CMTFilterEraser;

struct CMTFilterHairDye;

struct CMTFilterMapy2;

struct CMTStyleOptFace {
    struct Net<float> *_field1;
    int _field2;
    int _field3;
    int _field4;
    int _field5;
    int _field6;
    int _field7;
    int _field8;
    _Bool _field9;
    _Bool _field10;
    int _field11;
    float *_field12;
    char *_field13;
    int _field14;
    int _field15;
    float _field16;
    float _field17;
    float _field18;
    float _field19;
};

struct CMUEffect {
    struct vector<Makeup2X::MUEffectPart, std::__1::allocator<Makeup2X::MUEffectPart>> Effects;
    struct vector<Makeup2X::MUEffectExtend, std::__1::allocator<Makeup2X::MUEffectExtend>> Effects_ext;
    int MinDefauleAlpha;
    int MaxDefauleAlpha;
    int MinEyeBrowAlpha;
    int MaxEyeBrowAlpha;
    int MinEyeAlpha;
    int MaxEyeAlpha;
    int MinMouthAlpha;
    int MaxMouthAlpha;
    int MinBeautiAlpha;
    int MaxBeautiAlpha;
    int MinEyeHoleAlpha;
    int MaxEyeHoleAlpha;
    int MinGlobalLutAlpha;
    int MaxGlobalLutAlpha;
    int MinBlusherAlpha;
    int MaxBlusherAlpha;
    _Bool HaveEyeBrowPoint;
    _Bool HaveGlobalLut;
    _Bool HaveFrontLut;
    int ID;
    int Weight;
    char strMakeupPacketPath[300];
    char GlobalLut[300];
    char FrontLut[300];
    struct Vector2 EyeBrowPoints[20];
};

struct CMakingUpEffects {
    CDUnknownFunctionPointerType *_vptr$CEffectBase;
    struct InterPointMT106 m_Points;
    int m_FaceCount;
    int m_TextureWidth;
    int m_TextureHeight;
    unsigned int m_FrameBuffer;
    unsigned int m_FrameBufferTextureA;
    unsigned int m_FrameBufferTextureB;
    unsigned int m_ProgramSampleHandle;
    int m_VertexSampleHandle;
    int m_TexcoordSampleHandle;
    int m_MvpSampleHandle;
    int m_TextureSampleHandle;
    struct CFaceSkinMask m_BeautyUtil;
    struct CMTFilterColorBase *m_pNoneFilter;
    struct CMTFilterColorBase *m_pLast;
    unsigned short m_DrawIndexs[1635];
    struct Vector2 m_SrcCoords[310];
    struct Vector2 m_SucaiCoords[310];
    struct Vector2 m_MaskCoords[310];
    struct Vector2 *m_RefAllPoints;
    int m_PointCount;
    int m_IndexCount;
    int m_CurrentAlpha;
    int m_SkinWidth;
    int m_SkinHeight;
    int m_CurrentLanguage;
    struct CMTFilterEraser *m_MTFilterEraser;
    unsigned int m_EraserMaskTexture;
    unsigned int m_FundationTexture;
    unsigned int m_ResultTexture;
    _Bool m_bOverSeaVersion;
    int m_Area;
    int m_BigEyeType;
    float m_BigEyeDegree;
    char *m_HairMask;
    unsigned int m_HairMaskTexure;
    int m_nHairMaskWidth;
    int m_nHairMaskHeight;
    struct Vector2 m_HairMidPoint;
    _Bool m_DyeHairInfo;
    unsigned int m_pProMaskTexture;
    int m_IsHairCal;
    unsigned int m_Low2HighMapTexture;
    unsigned int m_High2LowMapTexture;
    struct CMTFilterHairDye *m_HairDyeFilter;
    struct Vector2 m_DecorateMidPoints[10];
    _Bool m_bIsSetDecoratePoints[10];
    struct Vector2 m_SetDecorateMidPoint[10];
    float m_DecorateDegrees[10];
    unsigned int m_SkinTexture;
    _Bool m_ShowPints;
    struct CMTFilterAlphaMix *m_AlphaBuMix;
    struct CMTFilterColorBase *m_UseFilters[50];
    int m_LastSeleteNo;
    struct CMTFilterMapy2 *m_GlobalFilter;
    struct CMTFilterMapy2 *m_FrontFilter;
    struct CMTFilterColorBase *m_TeethWhiteFilter;
    struct CMUEffect m_MakupEffects[10];
    unsigned char m_MaskupControl[10][106];
    int m_MakeupAlphas[10];
    int m_SelectFaceNo;
    struct CMTFilterBokeh *m_pBokehFilter;
    int m_IsProcess;
    struct MUEffectPart m_WatermarkEffect;
    int m_WatermarkAlpha;
    int m_WatermarkID;
    int m_IsTeethWhiten;
    int m_lutNumber;
};

struct CMeituVideoDeshake;

struct CParsingPlist {
    char m_PacketPath[300];
};

struct CPoint;

struct CalFaceInfo {
    char *_field1;
    char *_field2;
    char *_field3[10];
    int _field4;
    int _field5;
    float _field6;
    _Bool _field7;
    int _field8;
    int _field9;
    int _field10[10];
    struct FBFaceInfo3_1 _field11[10];
    int _field12;
    unsigned char _field13;
    unsigned char _field14;
    unsigned char _field15;
    unsigned char _field16;
};

struct CutImageParam;

struct DoubleBuffer {
    unsigned int _field1;
    unsigned int _field2;
    int _field3;
    int _field4;
    unsigned int _field5;
    unsigned int _field6;
    unsigned int _field7;
    unsigned int _field8;
    unsigned int _field9;
    unsigned int _field10;
    unsigned int _field11;
    unsigned int _field12;
    unsigned int _field13;
    _Bool _field14;
    _Bool _field15;
    unsigned int _field16;
    float _field17;
    float _field18;
    float _field19;
    float _field20;
    _Bool _field21;
    _Bool _field22;
    struct MSAAFramebuffer *_field23;
    struct Sampler *_field24;
    struct Sampler *_field25;
};

struct EdgeNode;

struct EyeShadowColor {
    id _field1;
    id _field2;
    id _field3;
    long long _field4;
    long long _field5;
    long long _field6;
};

struct FBFaceInfo3_1 {
    struct MtRectI _field1;
    struct Vector2 _field2;
    float _field3;
    struct Vector2 _field4;
    float _field5;
    struct Vector2 _field6[310];
};

struct FBSDKLikeControlLayout {
    struct CGSize _field1;
    struct CGRect _field2;
    struct CGRect _field3;
};

struct Face;

struct FaceBeautifyMakeupV3_1 {
    unsigned char _field1;
    unsigned char _field2;
    unsigned char _field3;
    unsigned char _field4;
    char *_field5;
    char *_field6;
    char *_field7;
    char *_field8;
    char *_field9;
    int _field10;
    int _field11;
    int _field12;
    int _field13;
    float _field14;
    _Bool _field15;
    int _field16;
    int _field17;
    int _field18[10];
    int _field19;
    int _field20;
};

struct FaceController;

struct FaceEffectController {
    CDUnknownFunctionPointerType *_field1;
    struct MTDrawTriangle *_field2;
    struct MTFilterFaceWarp *_field3;
    struct CInterFacePoint *_field4;
    struct MTMakeup *_field5;
    unsigned int _field6;
    unsigned int _field7;
    int _field8;
    int _field9;
    _Bool _field10;
};

struct FaceInfo {
    struct Vector2 _field1[310];
    struct FacePoint {
        struct Vector2 _field1[10];
        unsigned short _field2[10];
        struct Vector2 _field3[10];
        unsigned short _field4[10];
        struct Vector2 _field5[10];
        unsigned short _field6[10];
        struct Vector2 _field7[28];
        unsigned short _field8[28];
        struct Vector2 _field9[10];
        unsigned short _field10[10];
        struct Vector2 _field11[10];
        unsigned short _field12[10];
        struct Vector2 _field13[30];
        unsigned short _field14[30];
        struct Vector2 _field15[5];
        unsigned short _field16[5];
        struct Vector2 _field17[20];
        unsigned short _field18[20];
        struct Vector2 _field19[20];
        unsigned short _field20[20];
        struct Vector2 _field21[16];
        unsigned short _field22[16];
        struct Vector2 _field23[2];
        unsigned short _field24[2];
        struct Vector2 _field25[40];
        unsigned short _field26[40];
        struct Vector2 _field27[84];
        unsigned short _field28[84];
    } _field2;
    int _field3;
    struct Vector2 _field4[310];
    struct Vector2 _field5[118];
    int _field6;
    struct Vector2 _field7[21];
    struct Vector2 _field8[5];
};

struct FaceTracker;

struct Fit3DFaceModel;

struct GADAdSize {
    struct CGSize size;
    unsigned long long flags;
};

struct GLES20FlipVerticalShader;

struct GMM;

struct GPGlobalState;

struct GPUByteColorVector {
    unsigned char _field1;
    unsigned char _field2;
    unsigned char _field3;
    unsigned char _field4;
};

struct GPUDataBundle {
    struct Vector2 *_field1;
    struct Vector2 *_field2;
    struct Vector2 *_field3;
    struct Vector2 *_field4;
    struct Vector2 *_field5;
    int _field6;
    int _field7;
    unsigned short *_field8;
};

struct GPUMatrix3x3 {
    struct GPUVector3 _field1;
    struct GPUVector3 _field2;
    struct GPUVector3 _field3;
};

struct GPUMatrix4x4 {
    struct GPUVector4 _field1;
    struct GPUVector4 _field2;
    struct GPUVector4 _field3;
    struct GPUVector4 _field4;
};

struct GPUTextureOptions {
    unsigned int minFilter;
    unsigned int magFilter;
    unsigned int wrapS;
    unsigned int wrapT;
    unsigned int internalFormat;
    unsigned int format;
    unsigned int type;
};

struct GPUVector3 {
    float _field1;
    float _field2;
    float _field3;
};

struct GPUVector4 {
    float one;
    float two;
    float three;
    float four;
};

struct GestureListener {
    struct function<void (float, float, int)> _field1;
    struct function<void (float, float)> _field2;
    struct function<void (float, float)> _field3;
    struct function<void (float, float, float, float)> _field4;
    struct function<void (float, float, int)> _field5;
    struct function<void (float, float)> _field6;
    struct function<void (float, float, float, float, float, float, float, float)> _field7;
    struct function<void ()> _field8;
};

struct GlassesClassifier {
    struct Net<float> *_field1;
    int _field2;
    int _field3;
    int _field4;
    int _field5;
    basic_string_a490aa4c _field6[6];
};

struct GlobalStateService;

struct Graph<float, float, float>;

struct InputManager;

struct InterPoint {
    double m_nZoom;
    int m_nImgHeight;
    int m_nImgWidth;
    CDStruct_e454c787 m_FaceInfo[10];
    int m_FaceCount;
    int m_Count;
    struct Vector2 m_FaceOutPoint[28];
    struct Vector2 m_FacePoint39[39];
    struct Vector2 *m_AllPoints;
    struct Vector2 m_FaceResPoint[310];
    struct Vector2 m_EightThreeResPoint[310];
    struct Vector2 m_AstrictPoint[310];
    FacePoint_cfbd0c37 m_KeyFace;
    struct Vector2 m_AlterPoint[310];
    struct AlterFacePoint m_AlterKeyFace;
    struct Vector2 m_CopyAllPoint[310];
    int m_AlterCount;
    struct Vector2 m_FacePoint83[83];
    _Bool m_IsLink;
    _Bool m_IsPoint;
    float m_Eye_R_left[10];
    struct Vector2 m_Eye_center_left[10];
    float m_Eye_R_right[10];
    struct Vector2 m_Eye_center_right[10];
    int m_CurrentFaceNo;
};

struct InterPointMT106 {
    _Bool m_FMInter;
    struct Vector2 m_SrcFacePoint[10][21];
    struct Vector2 m_SrcMoveFacePoint[10][5];
    int m_CurrentFaceNo;
    struct Vector2 *m_AllPoints;
    struct Vector2 m_AllFacePoint[10][310];
    struct Vector2 m_FaceOutPoint[10][28];
    struct FacePoint *m_KeyFace;
    FacePoint_cfbd0c37 m_AllKeyFace[10];
    int m_nCount;
    struct Vector2 m_AstrictPoint[310];
    int m_nImgHeight;
    int m_nImgWidth;
    CDStruct_e454c787 m_FaceInfo[10];
    int m_FaceCount;
    struct Vector2 m_FacePoint39[10][39];
    struct Vector2 *m_AlterPoint;
    struct Vector2 m_AllAlterPoint[10][310];
    struct AlterFacePoint m_AlterKeyFace;
    int m_AlterCount;
    struct Vector2 m_FacePoint83[10][83];
    _Bool m_IsLink;
    _Bool m_IsPoint;
    float m_Eye_R_left[10];
    struct Vector2 m_Eye_center_left[10];
    float m_Eye_R_right[10];
    struct Vector2 m_Eye_center_right[10];
    struct Vector2 m_FacePoint106[10][106];
};

struct LOT_Subpath {
    int _field1;
    double _field2;
    struct CGPoint _field3;
    struct CGPoint _field4;
    struct CGPoint _field5;
    struct LOT_Subpath *_field6;
};

struct MMF_SDL_AudioSpec {
    int freq;
    unsigned short format;
    unsigned char channels;
    unsigned char silence;
    unsigned short samples;
    unsigned short padding;
    unsigned int size;
    CDUnknownFunctionPointerType callback;
    void *userdata;
};

struct MMusicManagerService;

struct MSAAFramebuffer;

struct MTACLineSegment {
    struct CGPoint _field1;
    struct CGPoint _field2;
};

struct MTARVersion {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    int _field3;
    int _field4;
    int _field5;
    int _field6;
};

struct MTAVFrame;

struct MTBJSONDecodeCallbacks {
    CDUnknownFunctionPointerType _field1;
    CDUnknownFunctionPointerType _field2;
    CDUnknownFunctionPointerType _field3;
    CDUnknownFunctionPointerType _field4;
    CDUnknownFunctionPointerType _field5;
    CDUnknownFunctionPointerType _field6;
    CDUnknownFunctionPointerType _field7;
    CDUnknownFunctionPointerType _field8;
    CDUnknownFunctionPointerType _field9;
};

struct MTDrawTriangle;

struct MTFabbyMaskTexture {
    unsigned int texture;
    int width;
    int height;
    _Bool enable;
};

struct MTFaceData {
    _Bool _field1;
    int _field2;
    _Bool _field3;
    struct CGRect _field4;
    _Bool _field5;
    struct CGPoint _field6[39];
    _Bool _field7[39];
    _Bool _field8;
    struct CGPoint _field9[83];
    _Bool _field10[83];
    int _field11;
    _Bool _field12;
    struct CGPoint _field13[310];
    _Bool _field14[310];
    int _field15;
    _Bool _field16;
    struct CGPoint _field17[310];
    _Bool _field18[310];
    _Bool _field19;
    float _field20;
    _Bool _field21;
    float _field22;
    _Bool _field23;
    float _field24;
    _Bool _field25;
    int _field26;
    _Bool _field27;
    int _field28;
    _Bool _field29;
    int _field30;
    _Bool _field31;
    int _field32;
    double _field33[512];
    _Bool _field34;
    int _field35;
};

struct MTFaceDetectorMid {
    struct MTFaceDetectorOperation m_FD;
    struct MTFaceDetectorOperation m_FA;
    struct MTFaceDetectorOperation m_Age;
    struct MTFaceDetectorOperation m_FR;
    struct MTFaceDetectorOperation m_Gender;
    struct MTFaceDetectorOperation m_Race;
    struct Config {
        unsigned int major;
        unsigned int minor;
        unsigned int numPoints;
        float score;
    } m_FAConfig;
    float m_FADefaultScore;
    int m_MaxFaceCount;
};

struct MTFaceDetectorOperation {
    int faceDetectorType;
    _Bool successLoadModel;
    struct MTFeatureDetector *featureDetector;
};

struct MTFaceFeature {
    _Bool _field1;
    struct MTRect_<float> _field2;
    _Bool _field3;
    struct MTVector<mtface::MTPoint_<float>> _field4;
    _Bool _field5;
    int _field6;
    _Bool _field7;
    float _field8;
    _Bool _field9;
    int _field10;
    _Bool _field11;
    int _field12;
    _Bool _field13;
    int _field14;
    _Bool _field15;
    struct MTVector<float> _field16;
    _Bool _field17;
    int _field18;
    _Bool _field19;
    struct MTImage _field20;
    _Bool _field21;
    int _field22;
    _Bool _field23;
    int _field24;
};

struct MTFaceTrackerMid {
    struct Config {
        int fd_gap_frames;
        int fd_gap_frames_no_face;
        int max_track_faces;
        int reserve_track_faces;
        int optical_flow_wsize;
        float fa_score_threshold;
        float fd_score_threshold;
        float gender_score_threshhold;
        float clamp_param;
        float optical_flow_fusion_factor;
        _Bool faceDetection_interal;
        _Bool run_opticalFlow;
        _Bool innerSave_percent;
        _Bool gender_enable;
        int minsize;
        int major;
        int minor;
        int patch;
        int num_points;
        _Bool isTracking;
    } m_config;
    _Bool m_needFlushConfig;
    struct FaceTracker *m_tracker;
    _Bool m_initSuccess;
};

struct MTFeatureDetector;

struct MTFilterFaceWarp;

struct MTFilterOnline {
    CDUnknownFunctionPointerType *_field1;
    struct tagStructMTData *_field2;
    struct tagStructMTFaceData *_field3;
    struct filterParam *_field4;
    struct __sFILE *_field5;
    char *_field6;
    int _field7;
    int _field8;
    char *_field9;
    char *_field10;
    struct InterPoint *_field11;
    int _field12;
    struct CutImageParam *_field13;
    char *_field14;
    struct NativeFace *_field15;
};

struct MTHandInfo {
    struct MtRectF hand_rect;
    struct Vector2 hand_point;
    float hand_score;
    unsigned long long action;
    float action_score;
};

struct MTImage {
    union {
        char *_field1;
        char *_field2;
    } _field1;
    char *_field2;
    char *_field3;
    union {
        int _field1;
        int _field2;
    } _field4;
    int _field5;
    int _field6;
    int _field7;
    int _field8;
    int _field9;
    int _field10;
    int *_field11;
};

struct MTMKMakeupErrorStructure {
    int MakeupPartID;
    int MakeupErrorID;
    basic_string_a490aa4c MakeupErrorInfo;
};

struct MTMakeup;

struct MTMessageService;

struct MTOptFlowSegmentRealtime {
    CDUnknownFunctionPointerType *_vptr$MTSegmentRealtime;
    struct shared_ptr<caffe::glNetSp> glNet;
    struct glShadersFactory *glShadersFac;
    struct glTextureFactory *glTextureFac;
    unsigned int glInputTexture;
    unsigned int glOutputTexture;
    int gl_input_channels_;
    int gl_output_channels_;
    int gl_input_width_;
    int gl_input_height_;
    int gl_output_width_;
    int gl_output_height_;
    int gl_input_size_;
    int gl_output_size_;
    int segment_model;
    char *pPreGray;
    char *pCurGray;
    int mFlowWidth;
    int mFlowHeight;
    int mOriGrayWidth;
    int mOriGaryHeight;
    struct OptFlowUtilGL *mOptFlowUtil;
    int mFrameCount;
    int mResFlow;
};

struct MTPeriodTrigger;

struct MTRandomManager;

struct MTRandomTrigger;

struct MTRect_<float> {
    float _field1;
    float _field2;
    float _field3;
    float _field4;
};

struct MTSegmentCPU {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    int _field3;
    int _field4;
    int _field5;
    struct shared_ptr<caffe::Net<float>> _field6;
    int _field7;
    int _field8;
    int _field9;
    int _field10;
    int _field11;
};

struct MTSkinProcess {
    CDUnknownFunctionPointerType *_vptr$MTSkinProcess;
    int m_pMaskWidth;
    int m_pMaskHeight;
    char *m_pEyeMaskData;
};

struct MTTrigger;

struct MTTriggerModel {
    CDUnknownFunctionPointerType *_field1;
    struct MTTrigger *_field2;
    struct function<void ()> _field3;
    struct MTPeriodTrigger *_field4;
    struct MTRandomTrigger *_field5;
    void *_field6;
    _Bool _field7;
    _Bool _field8;
    int _field9;
    struct MTRandomManager *_field10;
};

struct MTUserResizableViewAnchorPoint {
    long long adjustsX;
    long long adjustsY;
    long long adjustsW;
    long long adjustsH;
};

struct MTVector<float> {
    void *_field1;
};

struct MTVector<mtface::MTPoint_<float>> {
    void *_field1;
};

struct MTailorTool {
    CDUnknownFunctionPointerType *_vptr$MTailorTool;
    struct MtRectF m_validRect;
    struct MtRectF m_viewRect;
    int m_nOrgWidth;
    int m_nOrgHeight;
    int m_nResWidth;
    int m_nResHeight;
    _Bool m_bIsOpenTailor;
    int m_nOrientation;
    float m_vertexs_first[8];
    float m_texcoords_first[8];
    float m_vertexs_second[8];
    float m_texcoords_second[8];
    struct MtPointF m_texcoord_delta;
};

struct MTuneInfo {
    _Bool mPartEnable[7];
    struct vector<float, std::__1::allocator<float>> mPartParameterValues[7];
    struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> mMaterialPath;
};

struct MUEffectExtend;

struct MUEffectPart {
    char maskFile[300];
    char vscoFile[300];
    char strMakeupPacketPath[300];
    float facemeshparameter[100];
    int opacity;
    unsigned char r;
    unsigned char g;
    unsigned char b;
    unsigned char a;
    int filterType;
    int muType;
    int left;
    int top;
    int width;
    int height;
    int minAlpha;
    int maxAlpha;
    _Bool haveVsco;
    _Bool haveMask;
    int parameter;
    int makeupsequence;
};

struct MVideoDecoder;

struct MVideoDecoderPool;

struct MakeUpEffectPart {
    int makeupAlpha;
    int MinBeautyAlphaRange;
    int MidBeautyAlphaRange;
    int MaxBeautyAlphaRange;
    vector_d06e7317 makeEffect;
    _Bool HaveEyeBrowPoint;
    struct Vector2 EyeBrowPoints[20];
    _Bool bNeedMusic;
    basic_string_a490aa4c strMusicPath;
    _Bool bNeedDefaultGyroscope;
    struct Vector4 frontGyroscope;
    struct Vector4 backGyroscope;
    int MakeUpPartID;
    int MakeUpPartPosition;
    int action;
    int sound;
    _Bool materialExits;
    _Bool specialFacelift;
    struct MakeupSuitHeaderConfig headerConfig;
    int firstEysShadowAlpha;
    int secondEyeShadowAlpha;
    int sequinsAlpha;
};

struct MakeUpJsonInfo {
    int makeupID;
    int makeupFilter;
    int makeuprealfilter;
    _Bool makeupsupportreal;
    _Bool supportar;
    struct MakeUpPartInfo PartInfo[26];
};

struct MakeUpPartColor {
    float r;
    float g;
    float b;
    float a;
    float opacity;
    _Bool havecolor;
    int alpha;
    int nFilter;
    int nReal_Filter;
    basic_string_a490aa4c sFilePath;
};

struct MakeUpPartInfo {
    _Bool bHaveInfo;
    int nMaterialId;
    basic_string_a490aa4c partrealtimefilter;
    int nPosition;
    int nFilter;
    int nReal_Filter;
    _Bool bSupport_Real;
    int nMouthType;
};

struct MakeupBeautyInfo {
    _Bool bAutoContrast;
    _Bool bAdjustTune;
    _Bool bCleanFleck;
    _Bool bProtectMidEyebrow;
    _Bool bBrightEye;
    _Bool bDarkCircles;
    _Bool bCulateBeautify;
    _Bool bSmartShapeBeauty;
    _Bool bBigEyes;
    _Bool bWhiteTeech;
    _Bool bAbroad;
};

struct MakeupFigurePart {
    CDUnknownFunctionPointerType *_field1;
    struct MTARVersion _field2;
    int _field3;
    int _field4;
    int _field5;
    basic_string_a490aa4c _field6;
    _Bool _field7;
    _Bool _field8;
    _Bool _field9;
    int _field10;
    _Bool _field11;
    _Bool _field12;
    _Bool _field13;
    struct GPUDataBundle _field14;
    float _field15;
    struct MakeupSuit *_field16;
    struct vector<int, std::__1::allocator<int>> _field17;
    _Bool _field18;
    int _field19;
    int _field20;
    int _field21;
    int _field22;
    int _field23;
    _Bool _field24;
    int _field25;
    float _field26;
    float _field27;
    _Bool _field28;
    _Bool _field29;
    int _field30;
    struct vector<int, std::__1::allocator<int>> _field31;
    _Bool _field32;
    _Bool _field33;
    float _field34;
    float _field35;
    float _field36;
    float _field37;
    struct MTTriggerModel _field38;
    struct MTTriggerModel _field39;
    _Bool _field40;
    int _field41;
    _Bool _field42;
    _Bool _field43;
    _Bool _field44;
    _Bool _field45;
    _Bool _field46;
    basic_string_a490aa4c _field47;
    _Bool _field48;
    int _field49;
    int _field50;
    float _field51;
    float _field52;
    struct MVideoDecoder *_field53;
    struct MVideoDecoder *_field54;
    basic_string_a490aa4c _field55;
    struct vector<int, std::__1::allocator<int>> _field56;
    basic_string_a490aa4c _field57;
    struct vector<int, std::__1::allocator<int>> _field58;
    _Bool _field59;
    basic_string_a490aa4c _field60;
    int _field61;
    int _field62;
    int _field63;
    int _field64;
    _Bool _field65;
    _Bool _field66;
    unsigned int _field67;
    int _field68;
    int _field69;
    struct RMFilterFigureMix *_field70;
    _Bool _field71;
};

struct MakeupPart;

struct MakeupSuit {
    CDUnknownFunctionPointerType *_field1;
    vector_d06e7317 _field2;
    struct DoubleBuffer _field3;
    struct CInterFacePoint *_field4;
    struct CGLFaceLiftPreview *_field5;
    struct Face *_field6;
    unsigned int _field7;
    unsigned int _field8;
    int _field9;
    int _field10;
    _Bool _field11;
    float _field12;
    struct PreviewBeautyInfo _field13;
    int _field14;
    struct MakeupSuitHeaderConfig _field15;
    struct InputManager *_field16;
    struct PartMsgListener _field17;
    struct GestureListener _field18;
    struct TouchListener _field19;
    struct vector<std::__1::vector<int, std::__1::allocator<int>>, std::__1::allocator<std::__1::vector<int, std::__1::allocator<int>>>> _field20;
    int _field21;
    struct MTARVersion _field22;
    struct map<int, unsigned int, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, unsigned int>>> _field23;
    struct FaceController *_field24;
    struct GPGlobalState *_field25;
    _Bool _field26;
    struct MTMessageService *_field27;
    struct map<int, Makeup3X::MakeupPartGroup, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, Makeup3X::MakeupPartGroup>>> _field28;
    unsigned int _field29;
    unsigned int _field30;
    int _field31;
    int _field32;
    _Bool _field33;
};

struct MakeupSuitHeaderConfig {
    _Bool bRecordStartReset;
    _Bool bRecordEndReset;
    _Bool bPreviewStartReset;
    _Bool bPreviewEndReset;
    _Bool bRecordEndPause;
    _Bool bPause;
    _Bool bUseSpecialFacelift;
    basic_string_a490aa4c bgm;
    int nErosionDegree;
};

struct Matrix4 {
    float m[16];
    float tm[16];
};

struct MeshParam {
    unsigned short *_field1;
    int _field2;
    struct Vector2 *_field3;
    struct Vector2 *_field4;
    int _field5;
    float _field6;
    float _field7;
    float _field8;
    float _field9;
    float _field10;
    float _field11;
    unsigned short *_field12;
    int _field13;
    unsigned short *_field14;
    int _field15;
    _Bool _field16;
    int _field17;
    int _field18;
};

struct MtPointF {
    float x;
    float y;
};

struct MtRectF {
    float left;
    float top;
    float width;
    float height;
};

struct MtRectI {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
};

struct NSArray {
    Class _field1;
};

struct NSDictionary {
    Class _field1;
};

struct NSString {
    Class _field1;
};

struct NativeFace {
    int _field1;
    struct CGSize _field2;
    struct MTFaceData _field3[10];
    int _field4;
};

struct Net<float>;

struct NewFacePointSet;

struct OptFlowUtilGL;

struct PartMsgListener {
    struct function<void (int)> _field1;
};

struct PreviewBeautyInfo {
    _Bool _field1[105];
    float _field2[105];
};

struct PsImageScale;

struct RMFExifRotateFilter {
    CDUnknownFunctionPointerType *_vptr$RMFilterBase;
    unsigned int m_RefSourceIDs[3];
    unsigned int m_OutRefMaterialIDs[10];
    unsigned int m_MaterialIDs[10];
    struct CGLProgram *m_RefProgram;
    int m_TextureWidth;
    int m_TextureHeight;
    unsigned int m_FrameBuffer;
    unsigned int m_FrameBufferTexture;
    unsigned int m_AsFrameBuffer;
    unsigned int m_AsFrameBufferTexture;
    unsigned int m_SetMaskTexture;
    _Bool m_IsResetMask;
    _Bool m_bIsUseOutFBO;
    float m_Opacity;
    struct Vector4 m_RGBA;
    _Bool m_bMipmap;
    float m_nBrightness;
    basic_string_a490aa4c m_ShaderFloder;
    int m_Orientation;
    int m_ResultWidth;
    int m_ResultHeight;
    float m_texcoords[8];
    struct Matrix4 m_ResultMatrix;
    struct Matrix4 m_TRSMat;
};

struct RMFilterAlphaMix;

struct RMFilterBase;

struct RMFilterEraser;

struct RMFilterFigureMix;

struct RMFilterMaskMix;

struct RMFilterPoint;

struct RMFilterTeethWhite;

struct Sampler;

struct SoundService;

struct TouchListener {
    struct function<void (float, float, int)> _field1;
    struct function<void (float, float, int)> _field2;
    struct function<void (float, float, int)> _field3;
};

struct UIEdgeInsets {
    double top;
    double left;
    double bottom;
    double right;
};

struct UIOffset {
    double horizontal;
    double vertical;
};

struct Vector2 {
    float x;
    float y;
};

struct Vector4 {
    float x;
    float y;
    float z;
    float w;
};

struct WBSDKJKConstBuffer {
    struct WBSDKJKConstPtrRange _field1;
};

struct WBSDKJKConstPtrRange {
    char *_field1;
    unsigned long long _field2;
};

struct WBSDKJKEncodeCache {
    id _field1;
    unsigned long long _field2;
    unsigned long long _field3;
};

struct WBSDKJKEncodeState {
    struct WBSDKJKManagedBuffer _field1;
    struct WBSDKJKManagedBuffer _field2;
    unsigned long long _field3;
    struct WBSDKJKFastClassLookup _field4;
    struct WBSDKJKEncodeCache _field5[1024];
    unsigned long long _field6;
    unsigned long long _field7;
    unsigned long long _field8;
    id _field9;
    id _field10;
    SEL _field11;
    CDUnknownFunctionPointerType _field12;
    CDUnknownBlockType _field13;
};

struct WBSDKJKFastClassLookup {
    void *_field1;
    void *_field2;
    void *_field3;
    void *_field4;
    void *_field5;
};

struct WBSDKJKHashTableEntry {
    unsigned long long _field1;
    id _field2;
    id _field3;
};

struct WBSDKJKManagedBuffer {
    struct WBSDKJKPtrRange _field1;
    unsigned long long _field2;
    unsigned long long _field3;
};

struct WBSDKJKObjCImpCache {
    Class _field1;
    CDUnknownFunctionPointerType _field2;
    CDUnknownFunctionPointerType _field3;
};

struct WBSDKJKObjectStack {
    void **_field1;
    void **_field2;
    unsigned long long *_field3;
    unsigned long long _field4;
    unsigned long long _field5;
    unsigned long long _field6;
    unsigned long long _field7;
};

struct WBSDKJKParseState {
    unsigned long long _field1;
    struct WBSDKJKConstBuffer _field2;
    unsigned long long _field3;
    unsigned long long _field4;
    unsigned long long _field5;
    unsigned long long _field6;
    unsigned long long _field7;
    unsigned long long _field8;
    struct WBSDKJKParseToken _field9;
    struct WBSDKJKObjectStack _field10;
    struct WBSDKJKTokenCache _field11;
    struct WBSDKJKObjCImpCache _field12;
    id _field13;
    int _field14;
    _Bool _field15;
};

struct WBSDKJKParseToken {
    struct WBSDKJKConstPtrRange _field1;
    unsigned long long _field2;
    struct WBSDKJKTokenValue _field3;
    struct WBSDKJKManagedBuffer _field4;
};

struct WBSDKJKPtrRange {
    char *_field1;
    unsigned long long _field2;
};

struct WBSDKJKTokenCache {
    struct WBSDKJKTokenCacheItem *_field1;
    unsigned long long _field2;
    unsigned int _field3;
    unsigned char _field4[1024];
};

struct WBSDKJKTokenCacheItem;

struct WBSDKJKTokenValue {
    struct WBSDKJKConstPtrRange _field1;
    unsigned long long _field2;
    unsigned long long _field3;
    union {
        long long _field1;
        unsigned long long _field2;
        double _field3;
    } _field4;
    struct WBSDKJKTokenCacheItem *_field5;
};

struct WaterMarkDescriptor {
    id _field1;
    long long _field2;
    long long _field3;
    long long _field4;
    long long _field5;
    long long _field6;
};

struct WebPData {
    char *_field1;
    unsigned long long _field2;
};

struct WebPIterator {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
    int _field5;
    int _field6;
    int _field7;
    int _field8;
    int _field9;
    struct WebPData _field10;
    int _field11;
    int _field12;
    unsigned int _field13[2];
    void *_field14;
};

struct WipeEyeBrowInfo {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
    char *_field5;
};

struct _MTAnalyticsDataMonitorSystem {
    unsigned char _field1;
    unsigned char _field2;
    unsigned int _field3;
    unsigned char _field4;
    unsigned char _field5[8];
};

struct _MTAnalyticsdataMonitorHeader {
    unsigned char _field1;
    unsigned char _field2;
};

struct _MTGIDSystem {
    unsigned char _field1;
    unsigned short _field2;
    unsigned int _field3;
};

struct _MTSystemHeader {
    unsigned char _field1;
    unsigned char _field2;
    unsigned short _field3;
    unsigned int _field4;
};

struct _NSRange {
    unsigned long long location;
    unsigned long long length;
};

struct _TBXMLAttribute {
    char *_field1;
    char *_field2;
    struct _TBXMLAttribute *_field3;
};

struct _TBXMLAttributeBuffer {
    struct _TBXMLAttribute *_field1;
    struct _TBXMLAttributeBuffer *_field2;
    struct _TBXMLAttributeBuffer *_field3;
};

struct _TBXMLElement {
    char *_field1;
    char *_field2;
    struct _TBXMLAttribute *_field3;
    struct _TBXMLElement *_field4;
    struct _TBXMLElement *_field5;
    struct _TBXMLElement *_field6;
    struct _TBXMLElement *_field7;
    struct _TBXMLElement *_field8;
};

struct _TBXMLElementBuffer {
    struct _TBXMLElement *_field1;
    struct _TBXMLElementBuffer *_field2;
    struct _TBXMLElementBuffer *_field3;
};

struct __shared_weak_count;

struct __tree_end_node<std::__1::__tree_node_base<void *>*> {
    struct __tree_node_base<void *> *__left_;
};

struct _opaque_pthread_mutex_t {
    long long __sig;
    char __opaque[56];
};

struct _utils {
    CDUnknownFunctionPointerType _field1;
};

struct array<Makeup3X::MTHandInfo, 10> {
    struct MTHandInfo __elems_[10];
};

struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
    struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
        struct __rep {
            union {
                struct __long {
                    char *__data_;
                    unsigned long long __size_;
                    unsigned long long __cap_;
                } __l;
                struct __short {
                    char __data_[23];
                    struct {
                        unsigned char __size_;
                    } ;
                } __s;
                struct __raw {
                    unsigned long long __words[3];
                } __r;
            } ;
        } __first_;
    } __r_;
};

struct bignum_st;

struct bn_blinding_st;

struct bn_mont_ctx_st;

struct cmp_ctx_s {
    unsigned char _field1;
    void *_field2;
    CDUnknownFunctionPointerType _field3;
    CDUnknownFunctionPointerType _field4;
};

struct crypto_ex_data_st {
    struct stack_st_void *_field1;
    int _field2;
};

struct dPOINT;

struct deque<CFrameCache *, std::__1::allocator<CFrameCache *>> {
    struct __split_buffer<CFrameCache **, std::__1::allocator<CFrameCache **>> {
        struct CFrameCache ***__first_;
        struct CFrameCache ***__begin_;
        struct CFrameCache ***__end_;
        struct __compressed_pair<CFrameCache ***, std::__1::allocator<CFrameCache **>> {
            struct CFrameCache ***__first_;
        } __end_cap_;
    } __map_;
    unsigned long long __start_;
    struct __compressed_pair<unsigned long, std::__1::allocator<CFrameCache *>> {
        unsigned long long __first_;
    } __size_;
};

struct deque<std::__1::vector<std::__1::vector<int, std::__1::allocator<int>>, std::__1::allocator<std::__1::vector<int, std::__1::allocator<int>>>>, std::__1::allocator<std::__1::vector<std::__1::vector<int, std::__1::allocator<int>>, std::__1::allocator<std::__1::vector<int, std::__1::allocator<int>>>>>> {
    struct __split_buffer<std::__1::vector<std::__1::vector<int, std::__1::allocator<int>>, std::__1::allocator<std::__1::vector<int, std::__1::allocator<int>>>>*, std::__1::allocator<std::__1::vector<std::__1::vector<int, std::__1::allocator<int>>, std::__1::allocator<std::__1::vector<int, std::__1::allocator<int>>>>*>> {
        struct vector<std::__1::vector<int, std::__1::allocator<int>>, std::__1::allocator<std::__1::vector<int, std::__1::allocator<int>>>> **__first_;
        struct vector<std::__1::vector<int, std::__1::allocator<int>>, std::__1::allocator<std::__1::vector<int, std::__1::allocator<int>>>> **__begin_;
        struct vector<std::__1::vector<int, std::__1::allocator<int>>, std::__1::allocator<std::__1::vector<int, std::__1::allocator<int>>>> **__end_;
        struct __compressed_pair<std::__1::vector<std::__1::vector<int, std::__1::allocator<int>>, std::__1::allocator<std::__1::vector<int, std::__1::allocator<int>>>>**, std::__1::allocator<std::__1::vector<std::__1::vector<int, std::__1::allocator<int>>, std::__1::allocator<std::__1::vector<int, std::__1::allocator<int>>>>*>> {
            struct vector<std::__1::vector<int, std::__1::allocator<int>>, std::__1::allocator<std::__1::vector<int, std::__1::allocator<int>>>> **__first_;
        } __end_cap_;
    } __map_;
    unsigned long long __start_;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::vector<std::__1::vector<int, std::__1::allocator<int>>, std::__1::allocator<std::__1::vector<int, std::__1::allocator<int>>>>>> {
        unsigned long long __first_;
    } __size_;
};

struct engine_st;

struct filterParam;

struct function<void ()> {
    struct type _field1;
    struct __base<void ()> *_field2;
};

struct function<void (float, float)> {
    struct type _field1;
    struct __base<void (float, float)> *_field2;
};

struct function<void (float, float, float, float)> {
    struct type _field1;
    struct __base<void (float, float, float, float)> *_field2;
};

struct function<void (float, float, float, float, float, float, float, float)> {
    struct type _field1;
    struct __base<void (float, float, float, float, float, float, float, float)> *_field2;
};

struct function<void (float, float, int)> {
    struct type _field1;
    struct __base<void (float, float, int)> *_field2;
};

struct function<void (int)> {
    struct type _field1;
    struct __base<void (int)> *_field2;
};

struct glNetSp;

struct glShadersFactory;

struct glTextureFactory;

struct gzFile_s {
    unsigned int _field1;
    char *_field2;
    long long _field3;
};

struct in6_addr {
    union {
        unsigned char _field1[16];
        unsigned short _field2[8];
        unsigned int _field3[4];
    } _field1;
};

struct in_addr {
    unsigned int _field1;
};

struct map<Makeup3X::ProgramKey, Makeup3X::CGLProgram *, std::__1::less<Makeup3X::ProgramKey>, std::__1::allocator<std::__1::pair<const Makeup3X::ProgramKey, Makeup3X::CGLProgram *>>> {
    struct __tree<std::__1::__value_type<Makeup3X::ProgramKey, Makeup3X::CGLProgram *>, std::__1::__map_value_compare<Makeup3X::ProgramKey, std::__1::__value_type<Makeup3X::ProgramKey, Makeup3X::CGLProgram *>, std::__1::less<Makeup3X::ProgramKey>, true>, std::__1::allocator<std::__1::__value_type<Makeup3X::ProgramKey, Makeup3X::CGLProgram *>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<Makeup3X::ProgramKey, Makeup3X::CGLProgram *>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<Makeup3X::ProgramKey, std::__1::__value_type<Makeup3X::ProgramKey, Makeup3X::CGLProgram *>, std::__1::less<Makeup3X::ProgramKey>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<int, Makeup3X::MakeupPartGroup, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, Makeup3X::MakeupPartGroup>>> {
    struct __tree<std::__1::__value_type<int, Makeup3X::MakeupPartGroup>, std::__1::__map_value_compare<int, std::__1::__value_type<int, Makeup3X::MakeupPartGroup>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, Makeup3X::MakeupPartGroup>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, Makeup3X::MakeupPartGroup>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<int, std::__1::__value_type<int, Makeup3X::MakeupPartGroup>, std::__1::less<int>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<int, unsigned int, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, unsigned int>>> {
    struct __tree<std::__1::__value_type<int, unsigned int>, std::__1::__map_value_compare<int, std::__1::__value_type<int, unsigned int>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, unsigned int>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, unsigned int>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<int, std::__1::__value_type<int, unsigned int>, std::__1::less<int>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::pair<int, int>, float, std::__1::less<std::__1::pair<int, int>>, std::__1::allocator<std::__1::pair<const std::__1::pair<int, int>, float>>> {
    struct __tree<std::__1::__value_type<std::__1::pair<int, int>, float>, std::__1::__map_value_compare<std::__1::pair<int, int>, std::__1::__value_type<std::__1::pair<int, int>, float>, std::__1::less<std::__1::pair<int, int>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<int, int>, float>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<int, int>, float>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::pair<int, int>, std::__1::__value_type<std::__1::pair<int, int>, float>, std::__1::less<std::__1::pair<int, int>>, true>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct mutex {
    struct _opaque_pthread_mutex_t _field1;
};

struct queue<CFrameCache *, std::__1::deque<CFrameCache *, std::__1::allocator<CFrameCache *>>> {
    struct deque<CFrameCache *, std::__1::allocator<CFrameCache *>> c;
};

struct rsa_meth_st;

struct rsa_st {
    int _field1;
    long long _field2;
    struct rsa_meth_st *_field3;
    struct engine_st *_field4;
    struct bignum_st *_field5;
    struct bignum_st *_field6;
    struct bignum_st *_field7;
    struct bignum_st *_field8;
    struct bignum_st *_field9;
    struct bignum_st *_field10;
    struct bignum_st *_field11;
    struct bignum_st *_field12;
    struct crypto_ex_data_st _field13;
    int _field14;
    int _field15;
    struct bn_mont_ctx_st *_field16;
    struct bn_mont_ctx_st *_field17;
    struct bn_mont_ctx_st *_field18;
    char *_field19;
    struct bn_blinding_st *_field20;
    struct bn_blinding_st *_field21;
};

struct set<int, std::__1::less<int>, std::__1::allocator<int>> {
    struct __tree<int, std::__1::less<int>, std::__1::allocator<int>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<int, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::less<int>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct shared_ptr<CMeituVideoDeshake> {
    struct CMeituVideoDeshake *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<GLES20FlipVerticalShader> {
    struct GLES20FlipVerticalShader *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<MTAVFrame> {
    struct MTAVFrame *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<Makeup3X::GlobalStateService> {
    struct GlobalStateService *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<Makeup3X::InputManager> {
    struct InputManager *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<Makeup3X::MMusicManagerService> {
    struct MMusicManagerService *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<Makeup3X::MVideoDecoderPool> {
    struct MVideoDecoderPool *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<SoundService> {
    struct SoundService *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<_GLKVector2> {
    union _GLKVector2 *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<_GLKVector3> {
    union _GLKVector3 *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<caffe::Net<float>> {
    struct Net<float> *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<caffe::glNetSp> {
    struct glNetSp *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<unsigned short> {
    unsigned short *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct sigaction {
    union __sigaction_u {
        CDUnknownFunctionPointerType _field1;
        CDUnknownFunctionPointerType _field2;
    } _field1;
    unsigned int _field2;
    int _field3;
};

struct sockaddr {
    unsigned char _field1;
    unsigned char _field2;
    char _field3[14];
};

struct sockaddr_in {
    unsigned char _field1;
    unsigned char _field2;
    unsigned short _field3;
    struct in_addr _field4;
    char _field5[8];
};

struct sockaddr_in6 {
    unsigned char _field1;
    unsigned char _field2;
    unsigned short _field3;
    unsigned int _field4;
    struct in6_addr _field5;
    unsigned int _field6;
};

struct sockaddr_un {
    unsigned char _field1;
    unsigned char _field2;
    char _field3[104];
};

struct st_image_t;

struct st_mobile_face_t;

struct st_mobile_hand_t;

struct st_mobile_human_action_t {
    struct st_mobile_face_t *_field1;
    int _field2;
    struct st_mobile_hand_t *_field3;
    int _field4;
    struct st_image_t *_field5;
    float _field6;
};

struct stack<std::__1::vector<std::__1::vector<int, std::__1::allocator<int>>, std::__1::allocator<std::__1::vector<int, std::__1::allocator<int>>>>, std::__1::deque<std::__1::vector<std::__1::vector<int, std::__1::allocator<int>>, std::__1::allocator<std::__1::vector<int, std::__1::allocator<int>>>>, std::__1::allocator<std::__1::vector<std::__1::vector<int, std::__1::allocator<int>>, std::__1::allocator<std::__1::vector<int, std::__1::allocator<int>>>>>>> {
    struct deque<std::__1::vector<std::__1::vector<int, std::__1::allocator<int>>, std::__1::allocator<std::__1::vector<int, std::__1::allocator<int>>>>, std::__1::allocator<std::__1::vector<std::__1::vector<int, std::__1::allocator<int>>, std::__1::allocator<std::__1::vector<int, std::__1::allocator<int>>>>>> c;
};

struct stack_st_void;

struct tagStructMTData;

struct tagStructMTFaceData;

struct timeval {
    long long tv_sec;
    int tv_usec;
};

struct tm_zip_s {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned int _field6;
};

struct type {
    unsigned char _field1[24];
};

struct vector<AreaEdgeSearcher::EdgeNode, std::__1::allocator<AreaEdgeSearcher::EdgeNode>> {
    struct EdgeNode *__begin_;
    struct EdgeNode *__end_;
    struct __compressed_pair<AreaEdgeSearcher::EdgeNode *, std::__1::allocator<AreaEdgeSearcher::EdgeNode>> {
        struct EdgeNode *__first_;
    } __end_cap_;
};

struct vector<CPoint, std::__1::allocator<CPoint>> {
    struct CPoint *__begin_;
    struct CPoint *__end_;
    struct __compressed_pair<CPoint *, std::__1::allocator<CPoint>> {
        struct CPoint *__first_;
    } __end_cap_;
};

struct vector<Makeup2X::MUEffectExtend, std::__1::allocator<Makeup2X::MUEffectExtend>> {
    struct MUEffectExtend *__begin_;
    struct MUEffectExtend *__end_;
    struct __compressed_pair<Makeup2X::MUEffectExtend *, std::__1::allocator<Makeup2X::MUEffectExtend>> {
        struct MUEffectExtend *__first_;
    } __end_cap_;
};

struct vector<Makeup2X::MUEffectPart, std::__1::allocator<Makeup2X::MUEffectPart>> {
    struct MUEffectPart *__begin_;
    struct MUEffectPart *__end_;
    struct __compressed_pair<Makeup2X::MUEffectPart *, std::__1::allocator<Makeup2X::MUEffectPart>> {
        struct MUEffectPart *__first_;
    } __end_cap_;
};

struct vector<Makeup3X::Face *, std::__1::allocator<Makeup3X::Face *>> {
    struct Face **__begin_;
    struct Face **__end_;
    struct __compressed_pair<Makeup3X::Face **, std::__1::allocator<Makeup3X::Face *>> {
        struct Face **__first_;
    } __end_cap_;
};

struct vector<Makeup3X::MakeupPart *, std::__1::allocator<Makeup3X::MakeupPart *>> {
    struct MakeupPart **__begin_;
    struct MakeupPart **__end_;
    struct __compressed_pair<Makeup3X::MakeupPart **, std::__1::allocator<Makeup3X::MakeupPart *>> {
        struct MakeupPart **__first_;
    } __end_cap_;
};

struct vector<bool, std::__1::allocator<bool>> {
    unsigned long long *__begin_;
    unsigned long long __size_;
    struct __compressed_pair<unsigned long, std::__1::allocator<unsigned long>> {
        unsigned long long __first_;
    } __cap_alloc_;
};

struct vector<float, std::__1::allocator<float>> {
    float *__begin_;
    float *__end_;
    struct __compressed_pair<float *, std::__1::allocator<float>> {
        float *__first_;
    } __end_cap_;
};

struct vector<int, std::__1::allocator<int>> {
    int *__begin_;
    int *__end_;
    struct __compressed_pair<int *, std::__1::allocator<int>> {
        int *__first_;
    } __end_cap_;
};

struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> {
    basic_string_a490aa4c *__begin_;
    basic_string_a490aa4c *__end_;
    struct __compressed_pair<std::__1::basic_string<char>*, std::__1::allocator<std::__1::basic_string<char>>> {
        basic_string_a490aa4c *__first_;
    } __end_cap_;
};

struct vector<std::__1::vector<CPoint, std::__1::allocator<CPoint>>, std::__1::allocator<std::__1::vector<CPoint, std::__1::allocator<CPoint>>>> {
    struct vector<CPoint, std::__1::allocator<CPoint>> *__begin_;
    struct vector<CPoint, std::__1::allocator<CPoint>> *__end_;
    struct __compressed_pair<std::__1::vector<CPoint, std::__1::allocator<CPoint>>*, std::__1::allocator<std::__1::vector<CPoint, std::__1::allocator<CPoint>>>> {
        struct vector<CPoint, std::__1::allocator<CPoint>> *__first_;
    } __end_cap_;
};

struct vector<std::__1::vector<float, std::__1::allocator<float>>, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float>>>> {
    struct vector<float, std::__1::allocator<float>> *__begin_;
    struct vector<float, std::__1::allocator<float>> *__end_;
    struct __compressed_pair<std::__1::vector<float, std::__1::allocator<float>>*, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float>>>> {
        struct vector<float, std::__1::allocator<float>> *__first_;
    } __end_cap_;
};

struct vector<std::__1::vector<int, std::__1::allocator<int>>, std::__1::allocator<std::__1::vector<int, std::__1::allocator<int>>>> {
    struct vector<int, std::__1::allocator<int>> *__begin_;
    struct vector<int, std::__1::allocator<int>> *__end_;
    struct __compressed_pair<std::__1::vector<int, std::__1::allocator<int>>*, std::__1::allocator<std::__1::vector<int, std::__1::allocator<int>>>> {
        struct vector<int, std::__1::allocator<int>> *__first_;
    } __end_cap_;
};

#if 0
// Names with conflicting types:
typedef struct {
    struct Vector2 EyeLeft[10];
    unsigned int EyeLeftIndex[10];
    struct Vector2 EyeRight[10];
    unsigned int EyeRightIndex[10];
    struct Vector2 Noise[10];
    unsigned int NoiseIndex[10];
    struct Vector2 FaceOut[28];
    unsigned int FaceOutIndex[28];
    struct Vector2 EyeBrowLeft[10];
    unsigned int EyeBrowLeftIndex[10];
    struct Vector2 EyeBrowRight[10];
    unsigned int EyeBrowRightIndex[10];
    struct Vector2 Mouce[30];
    unsigned int MouceIndex[30];
    struct Vector2 Head[5];
    unsigned int HeadIndex[5];
    struct Vector2 CheekLeft[19];
    unsigned int CheekLeftIndex[19];
    struct Vector2 CheekRight[19];
    unsigned int CheekRightIndex[19];
    struct Vector2 MouthOut[16];
    unsigned int MouthOutIndex[16];
    struct Vector2 Eyepupil[2];
    unsigned int EyepupilIndex[2];
    struct Vector2 MoreHead[40];
    unsigned short MoreHeadIndex[40];
    struct Vector2 FaceTwoOut[84];
    unsigned short FaceTwoOutIndex[84];
} FacePoint_cfbd0c37;

#endif

#pragma mark Typedef'd Structures

typedef struct {
    _Bool _field1;
    unsigned char _field2;
    _Bool _field3;
    unsigned long long _field4;
} CDStruct_6a6a01a4;

typedef struct {
    unsigned int major;
    unsigned int minor;
    unsigned int bugfix;
} CDStruct_e24ffa00;

typedef struct {
    unsigned long long _field1;
    id *_field2;
    unsigned long long *_field3;
    unsigned long long _field4[5];
} CDStruct_70511ce9;

typedef struct {
    char *_field1;
    char *_field2;
    unsigned int _field3;
    unsigned int _field4;
} CDStruct_4355734a;

typedef struct {
    char *_field1;
    char *_field2;
} CDStruct_91a0c811;

typedef struct {
    char *_field1;
    void *_field2;
    _Bool _field3;
    void *_field4;
    char *_field5;
    char *_field6;
    char *_field7;
    char *_field8;
    char *_field9;
    unsigned int _field10;
    _Bool _field11;
    _Bool _field12;
    unsigned int _field13;
    unsigned int _field14;
    unsigned int _field15;
    unsigned int _field16;
} CDStruct_1e2a2a70;

typedef struct {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
    char _field5;
    char _field6;
    char _field7;
    double _field8;
    double _field9;
} CDStruct_3c9ccab2;

typedef struct {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
    double _field5;
    char _field6;
    char _field7;
    char _field8;
    double _field9;
} CDStruct_ebc272d7;

typedef struct {
    double _field1;
    double _field2;
} CDStruct_c3b9c2ee;

typedef struct {
    int max_track_faces;
    int optical_flow_wsize;
    _Bool run_opticalFlow;
    int fd_gap_frames_no_face;
    _Bool gender_enable;
} CDStruct_079e60ee;

typedef struct {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
    double _field5;
    double _field6;
    double _field7;
    double _field8;
    double _field9;
} CDStruct_27b5ccfc;

typedef struct {
    int x;
    int y;
} CDStruct_ffe6b7c1;

typedef struct {
    long long version;
    void *info;
    CDUnknownFunctionPointerType retain;
    CDUnknownFunctionPointerType release;
    CDUnknownFunctionPointerType copyDescription;
} CDStruct_4210025a;

typedef struct {
    long long value;
    int timescale;
    unsigned int flags;
    long long epoch;
} CDStruct_1b6d18a9;

typedef struct {
    long long _field1;
    int _field2;
} CDStruct_87dc826d;

typedef struct {
    long long majorVersion;
    long long minorVersion;
    long long patchVersion;
} CDStruct_f6aba300;

typedef struct {
    long long _field1;
    long long _field2;
} CDStruct_912cb5d2;

typedef struct CDStruct_183601bc;

typedef struct {
    _Bool videoSupport;
    struct CGSize videoSize;
} CDStruct_3e9c2da3;

typedef struct {
    char _field1[33];
    _Bool _field2;
    CDStruct_e24ffa00 _field3;
    CDStruct_e24ffa00 _field4;
    struct {
        void *_field1;
        unsigned long long _field2;
        void *_field3;
        void *_field4;
        void *_field5;
    } _field5;
    struct CLSMachOSlice _field6;
    long long _field7;
} CDStruct_fad71a87;

typedef struct {
    CDUnknownFunctionPointerType _field1;
    unsigned long long _field2;
    CDStruct_183601bc *_field3[0];
} CDStruct_da19c24b;

typedef struct {
    struct {
        unsigned int _field1;
        unsigned int _field2;
        unsigned char _field3;
        unsigned char _field4;
        unsigned char _field5;
        unsigned char _field6;
        unsigned char _field7;
    } _field1;
    CDStruct_183601bc *_field2;
    unsigned int _field3;
    CDStruct_183601bc *_field4;
    unsigned int _field5;
    unsigned int _field6;
    unsigned int *_field7;
    unsigned int _field8;
    unsigned int _field9;
    unsigned int _field10;
    _Bool _field11;
} CDStruct_d0590039;

typedef struct {
    struct {
        float _field1;
        float _field2;
    } _field1;
    struct {
        float _field1;
        float _field2;
    } _field2;
    struct {
        float _field1;
        float _field2;
        float _field3;
        float _field4;
    } _field3;
} CDStruct_6e19b8e7;

typedef struct {
    struct {
        float _field1;
        float _field2;
    } _field1;
    struct {
        float _field1;
        float _field2;
    } _field2;
    struct {
        float _field1;
        float _field2;
    } _field3;
    struct {
        float _field1;
        float _field2;
        float _field3;
        float _field4;
    } _field4;
    struct {
        float _field1;
        float _field2;
        float _field3;
        float _field4;
    } _field5;
    float _field6;
    float _field7;
    unsigned char _field8;
    float _field9;
    float _field10;
    float _field11;
    float _field12;
    float _field13;
    float _field14;
    float _field15;
    float _field16;
    unsigned char _field17;
    float _field18;
    float _field19;
    float _field20;
    float _field21;
    float _field22;
    struct {
        float _field1;
        float _field2;
        float _field3;
        float _field4;
    } _field23;
    float _field24;
    float _field25;
} CDStruct_1ae772b6;

typedef struct {
    struct {
        int top;
        int bottom;
        int left;
        int right;
    } rFace;
    CDStruct_ffe6b7c1 landmarks[83];
} CDStruct_e454c787;

typedef struct {
    struct tm_zip_s _field1;
    unsigned long long _field2;
    unsigned long long _field3;
    unsigned long long _field4;
} CDStruct_192a48cb;

typedef struct {
    _Bool _field1;
    _Bool _field2;
    struct CGRect _field3;
    struct CGRect _field4;
    double _field5;
    long long _field6;
    unsigned long long _field7;
} CDStruct_902a08d0;

typedef struct {
    union _GLKVector4 position[4];
    union _GLKVector2 texCoord[4];
} CDStruct_1f9bbd5a;

typedef struct {
    CDStruct_1f9bbd5a _field1[3];
} CDStruct_3eb7d03d;

// Ambiguous groups
typedef struct {
    float _field1;
    float _field2;
    float _field3;
    float _field4;
} CDStruct_818bb265;

typedef struct {
    float red;
    float green;
    float blue;
    float alpha;
} CDStruct_0b1c536a;

typedef struct {
    float _field1;
    float _field2;
} CDStruct_b2fbf00d;

typedef struct {
    float x;
    float y;
} CDStruct_6e3f967a;

typedef struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
    struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
        struct __rep {
            union {
                struct __long {
                    char *__data_;
                    unsigned long long __size_;
                    unsigned long long __cap_;
                } __l;
                struct __short {
                    char __data_[23];
                    struct {
                        unsigned char __size_;
                    } ;
                } __s;
                struct __raw {
                    unsigned long long __words[3];
                } __r;
            } ;
        } __first_;
    } __r_;
} basic_string_a490aa4c;

typedef struct shared_ptr<MTAVFrame> {
    struct MTAVFrame *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_4cf3fc38;

typedef struct vector<Makeup3X::MakeupPart *, std::__1::allocator<Makeup3X::MakeupPart *>> {
    struct MakeupPart **__begin_;
    struct MakeupPart **__end_;
    struct __compressed_pair<Makeup3X::MakeupPart **, std::__1::allocator<Makeup3X::MakeupPart *>> {
        struct MakeupPart **__first_;
    } __end_cap_;
} vector_d06e7317;

#pragma mark Named Unions

union _GLKMatrix4 {
    struct {
        float m00;
        float m01;
        float m02;
        float m03;
        float m10;
        float m11;
        float m12;
        float m13;
        float m20;
        float m21;
        float m22;
        float m23;
        float m30;
        float m31;
        float m32;
        float m33;
    } ;
    float m[16];
};

union _GLKVector2 {
    CDStruct_6e3f967a ;
    struct {
        float s;
        float t;
    } ;
    float v[2];
};

union _GLKVector3;

union _GLKVector4 {
    struct {
        float x;
        float y;
        float z;
        float w;
    } ;
    struct {
        float r;
        float g;
        float b;
        float a;
    } ;
    struct {
        float s;
        float t;
        float p;
        float q;
    } ;
    float v[4];
};

