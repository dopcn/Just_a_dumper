//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <UIKit/UIScrollView.h>

#import "SCSIETapImageViewDelagate-Protocol.h"
#import "SCSIETapViewDelegate-Protocol.h"
#import "UIActionSheetDelegate-Protocol.h"
#import "UIScrollViewDelegate-Protocol.h"

@class NSString, SCSIEPhoto, SCSIEProgressView, SCSIETapImageView, SCSIETapView, UIView;
@protocol SCSIEPhotoZoomViewDelegate;

@interface SCSIEPhotoZoomView : UIScrollView <UIScrollViewDelegate, SCSIETapViewDelegate, SCSIETapImageViewDelagate, UIActionSheetDelegate>
{
    _Bool _isZooming;
    _Bool _isFirstLayout;
    unsigned long long _pageIndex;
    SCSIEPhoto *_photo;
    id <SCSIEPhotoZoomViewDelegate> _ieDelegate;
    SCSIETapView *_tapView;
    SCSIETapImageView *_zoomView;
    SCSIEProgressView *_progressView;
    UIView *_reloadView;
    double _scaleToRestoreAfterResize;
    struct CGSize _limitMinSize;
    struct CGSize _imageSize;
    struct CGPoint _pointToCenterAfterResize;
}

@property(nonatomic) _Bool isFirstLayout; // @synthesize isFirstLayout=_isFirstLayout;
@property(nonatomic) double scaleToRestoreAfterResize; // @synthesize scaleToRestoreAfterResize=_scaleToRestoreAfterResize;
@property(nonatomic) struct CGPoint pointToCenterAfterResize; // @synthesize pointToCenterAfterResize=_pointToCenterAfterResize;
@property(nonatomic) struct CGSize imageSize; // @synthesize imageSize=_imageSize;
@property(nonatomic) _Bool isZooming; // @synthesize isZooming=_isZooming;
@property(nonatomic) struct CGSize limitMinSize; // @synthesize limitMinSize=_limitMinSize;
@property(retain, nonatomic) UIView *reloadView; // @synthesize reloadView=_reloadView;
@property(retain, nonatomic) SCSIEProgressView *progressView; // @synthesize progressView=_progressView;
@property(retain, nonatomic) SCSIETapImageView *zoomView; // @synthesize zoomView=_zoomView;
@property(retain, nonatomic) SCSIETapView *tapView; // @synthesize tapView=_tapView;
@property(nonatomic) __weak id <SCSIEPhotoZoomViewDelegate> ieDelegate; // @synthesize ieDelegate=_ieDelegate;
@property(retain, nonatomic) SCSIEPhoto *photo; // @synthesize photo=_photo;
@property(nonatomic) unsigned long long pageIndex; // @synthesize pageIndex=_pageIndex;
- (void).cxx_destruct;
- (void)actionSheet:(id)arg1 clickedButtonAtIndex:(long long)arg2;
- (void)view:(id)arg1 longTap:(id)arg2;
- (void)view:(id)arg1 doubleTap:(id)arg2;
- (void)view:(id)arg1 singleTap:(id)arg2;
- (void)imageView:(id)arg1 longTap:(id)arg2;
- (void)imageView:(id)arg1 doubleTap:(id)arg2;
- (void)imageView:(id)arg1 singleTap:(id)arg2;
- (void)loadRemoteImage;
- (void)loadPlaceHoldImage;
- (void)doReloadViewAction;
- (void)removeReloadView;
- (void)showReloadView;
- (void)updateReloadFrame:(struct CGRect)arg1;
- (void)hideProgress;
- (void)showProgress:(double)arg1;
- (void)startProgress;
- (void)handleLongTap:(struct CGPoint)arg1;
- (void)handleDoubleTap:(struct CGPoint)arg1;
- (void)handleSingleTap:(struct CGPoint)arg1;
- (struct CGPoint)minimumContentOffset;
- (struct CGPoint)maximumContentOffset;
- (void)recoverFromResizing;
- (void)prepareToResize;
- (struct CGRect)zoomRectWithScale:(double)arg1 withCenter:(struct CGPoint)arg2;
- (void)zoomWithTouchPoint:(struct CGPoint)arg1;
- (void)zoomToMaximumZoomScaleWithTouch:(struct CGPoint)arg1;
- (void)zoomToMinimumZoomScaleAnimated:(_Bool)arg1;
- (double)minZoomScaleWithSrcSize:(struct CGSize)arg1;
- (void)setMaxMinZoomScalesForCurrentBounds;
- (void)configureForImageSize:(struct CGSize)arg1;
- (void)asyncMainDisplayImage:(id)arg1;
- (void)displayImage:(id)arg1;
- (void)scrollViewDidZoom:(id)arg1;
- (id)viewForZoomingInScrollView:(id)arg1;
- (void)layout;
- (void)layoutZoomViewWithFrame:(struct CGRect)arg1;
- (void)setFrame:(struct CGRect)arg1;
- (void)layoutSubviews;
- (void)updateAllFrame;
- (void)initTapView;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

