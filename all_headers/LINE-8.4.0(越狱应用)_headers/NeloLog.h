//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

@interface NeloLog : NSObject
{
}

+ (_Bool)getSendSessionLog:(id)arg1;
+ (void)setSendSessionLog:(id)arg1 withEnable:(_Bool)arg2;
+ (_Bool)getSendSessionLog;
+ (void)setSendSessionLog:(_Bool)arg1;
+ (void)enableClientSideSymbolication:(_Bool)arg1;
+ (id)generateUUID;
+ (_Bool)sendThriftNeloEventByHttps:(id)arg1 withDelegate:(id)arg2 withRetry:(_Bool)arg3;
+ (_Bool)sendThriftNeloEventByHttpsWithoutSave:(id)arg1 withDelegate:(id)arg2 withRetry:(_Bool)arg3;
+ (_Bool)sendThriftNeloEventByHttpsWithoutSave:(id)arg1;
+ (_Bool)sendThriftNeloEventByHttps:(id)arg1;
+ (id)getJsonFromThriftNeloEvent:(id)arg1;
+ (void)applicationDidEnterBackground:(id)arg1;
+ (void)applicationWillEnterForeground:(id)arg1;
+ (void)logSendThread:(id)arg1;
+ (void)reachabilityChanged:(id)arg1;
+ (void)setCrashBlock:(CDUnknownBlockType)arg1;
+ (void)enableSendCrashReport;
+ (void)neloSendCrash:(void *)arg1;
+ (_Bool)isStringEmpty:(id)arg1;
+ (id)getNetworkString:(id)arg1;
+ (_Bool)isValidVersion:(id)arg1;
+ (_Bool)isValidField:(id)arg1;
+ (id)getHost;
+ (id)getIPAddress;
+ (void)sendCrashReport;
+ (void)transportFile:(id)arg1 fileData:(void *)arg2 fileSize:(unsigned int)arg3 errorCode:(id)arg4 logBody:(id)arg5;
+ (_Bool)sendLogByThrift:(id)arg1 withRetry:(_Bool)arg2;
+ (_Bool)sendLogByThriftWithoutSave:(id)arg1 withRetry:(_Bool)arg2;
+ (void)sendSessionLog;
+ (void)sendLog:(id)arg1 withLogLevel:(id)arg2 errorCode:(id)arg3 withMessage:(id)arg4 atLocation:(id)arg5;
+ (void)sendLog:(id)arg1 withLogLevel:(id)arg2 errorCode:(id)arg3 withMessage:(id)arg4 atLocation:(id)arg5 withException:(id)arg6;
+ (void)copyCommonFields:(id)arg1;
+ (void)fatalWithInstance:(id)arg1 withException:(id)arg2 withErrorCode:(id)arg3 withMessage:(id)arg4 atLocation:(id)arg5;
+ (void)errorWithInstance:(id)arg1 withException:(id)arg2 withErrorCode:(id)arg3 withMessage:(id)arg4 atLocation:(id)arg5;
+ (void)warnWithInstance:(id)arg1 withException:(id)arg2 withErrorCode:(id)arg3 withMessage:(id)arg4 atLocation:(id)arg5;
+ (void)infoWithInstance:(id)arg1 withException:(id)arg2 withErrorCode:(id)arg3 withMessage:(id)arg4 atLocation:(id)arg5;
+ (void)debugWithInstance:(id)arg1 withException:(id)arg2 withErrorCode:(id)arg3 withMessage:(id)arg4 atLocation:(id)arg5;
+ (void)fatalWithInstance:(id)arg1 withErrorCode:(id)arg2 withMessage:(id)arg3 atLocation:(id)arg4;
+ (void)errorWithInstance:(id)arg1 withErrorCode:(id)arg2 withMessage:(id)arg3 atLocation:(id)arg4;
+ (void)warnWithInstance:(id)arg1 withErrorCode:(id)arg2 withMessage:(id)arg3 atLocation:(id)arg4;
+ (void)infoWithInstance:(id)arg1 withErrorCode:(id)arg2 withMessage:(id)arg3 atLocation:(id)arg4;
+ (void)debugWithInstance:(id)arg1 withErrorCode:(id)arg2 withMessage:(id)arg3 atLocation:(id)arg4;
+ (void)fatalWithInstance:(id)arg1 withErrorCode:(id)arg2 withMessage:(id)arg3;
+ (void)errorWithInstance:(id)arg1 withErrorCode:(id)arg2 withMessage:(id)arg3;
+ (void)warnWithInstance:(id)arg1 withErrorCode:(id)arg2 withMessage:(id)arg3;
+ (void)infoWithInstance:(id)arg1 withErrorCode:(id)arg2 withMessage:(id)arg3;
+ (void)debugWithInstance:(id)arg1 withErrorCode:(id)arg2 withMessage:(id)arg3;
+ (void)fatal:(id)arg1 withErrorCode:(id)arg2 withMessage:(id)arg3 atLocation:(id)arg4;
+ (void)error:(id)arg1 withErrorCode:(id)arg2 withMessage:(id)arg3 atLocation:(id)arg4;
+ (void)warn:(id)arg1 withErrorCode:(id)arg2 withMessage:(id)arg3 atLocation:(id)arg4;
+ (void)info:(id)arg1 withErrorCode:(id)arg2 withMessage:(id)arg3 atLocation:(id)arg4;
+ (void)debug:(id)arg1 withErrorCode:(id)arg2 withMessage:(id)arg3 atLocation:(id)arg4;
+ (void)warn:(id)arg1 withMessage:(id)arg2 atLocation:(id)arg3;
+ (void)info:(id)arg1 withMessage:(id)arg2 atLocation:(id)arg3;
+ (void)fatal:(id)arg1 withMessage:(id)arg2 atLocation:(id)arg3;
+ (void)error:(id)arg1 withMessage:(id)arg2 atLocation:(id)arg3;
+ (void)debug:(id)arg1 withMessage:(id)arg2 atLocation:(id)arg3;
+ (void)warn:(id)arg1 withMessage:(id)arg2;
+ (void)info:(id)arg1 withMessage:(id)arg2;
+ (void)fatal:(id)arg1 withMessage:(id)arg2;
+ (void)error:(id)arg1 withMessage:(id)arg2;
+ (void)debug:(id)arg1 withMessage:(id)arg2;
+ (void)removeAllCustomFieldsWithInstance:(id)arg1;
+ (void)removeAllCustomFields;
+ (void)removeCustomFieldForKeyWithInstance:(id)arg1 withCumtomfieldKey:(id)arg2;
+ (void)removeCustomFieldForKey:(id)arg1;
+ (void)setCustomFieldWithInstance:(id)arg1 withValue:(id)arg2 forKey:(id)arg3;
+ (void)setCustomField:(id)arg1 forKey:(id)arg2;
+ (void)setLogSourceWithInstance:(id)arg1 withLogSource:(id)arg2;
+ (void)setLogSource:(id)arg1;
+ (void)setLogTypeWithInstance:(id)arg1 withLogType:(id)arg2;
+ (void)setLogType:(id)arg1;
+ (void)setUserIdWithInstance:(id)arg1 withUserId:(id)arg2;
+ (void)setUserId:(id)arg1;
+ (_Bool)initWithInstanceWithoutSession:(id)arg1 ofServer:(id)arg2 onPort:(int)arg3 byProtocol:(long long)arg4 ofProjectName:(id)arg5 withProjectVersion:(id)arg6 forUserId:(id)arg7;
+ (_Bool)initWithInstanceAndSession:(id)arg1 ofServer:(id)arg2 onPort:(int)arg3 byProtocol:(long long)arg4 ofProjectName:(id)arg5 withProjectVersion:(id)arg6 forUserId:(id)arg7;
+ (_Bool)initWithInstanceAndSession:(id)arg1 ofServer:(id)arg2 onPort:(int)arg3 ofProjectName:(id)arg4 withProjectVersion:(id)arg5 forUserId:(id)arg6;
+ (_Bool)initWithInstanceAndSession:(id)arg1 ofServer:(id)arg2 onPort:(int)arg3 ofProjectName:(id)arg4 withProjectVersion:(id)arg5;
+ (_Bool)initAndStartSession:(id)arg1 onPort:(int)arg2 byProtocol:(long long)arg3 ofProjectName:(id)arg4 withProjectVersion:(id)arg5 forUserId:(id)arg6;
+ (_Bool)initAndStartSession:(id)arg1 onPort:(int)arg2 ofProjectName:(id)arg3 withProjectVersion:(id)arg4 forUserId:(id)arg5;
+ (_Bool)initAndStartSession:(id)arg1 onPort:(int)arg2 ofProjectName:(id)arg3 withProjectVersion:(id)arg4;
+ (_Bool)initWithInstanceBase:(id)arg1 ofServer:(id)arg2 onPort:(int)arg3 byProtocol:(long long)arg4 ofProjectName:(id)arg5 withProjectVersion:(id)arg6 forUserId:(id)arg7;
+ (_Bool)initWithInstance:(id)arg1 ofServer:(id)arg2 onPort:(int)arg3 byProtocol:(long long)arg4 ofProjectName:(id)arg5 withProjectVersion:(id)arg6 forUserId:(id)arg7;
+ (_Bool)initWithInstance:(id)arg1 ofServer:(id)arg2 onPort:(int)arg3 ofProjectName:(id)arg4 withProjectVersion:(id)arg5 forUserId:(id)arg6;
+ (_Bool)initWithInstance:(id)arg1 ofServer:(id)arg2 onPort:(int)arg3 ofProjectName:(id)arg4 withProjectVersion:(id)arg5;
+ (_Bool)init:(id)arg1 onPort:(int)arg2 byProtocol:(long long)arg3 ofProjectName:(id)arg4 withProjectVersion:(id)arg5 forUserId:(id)arg6;
+ (_Bool)init:(id)arg1 onPort:(int)arg2 ofProjectName:(id)arg3 withProjectVersion:(id)arg4 forUserId:(id)arg5;
+ (_Bool)init:(id)arg1 onPort:(int)arg2 ofProjectName:(id)arg3 withProjectVersion:(id)arg4;
+ (void)setNeloSendModeWithInstance:(id)arg1 withSendMode:(id)arg2;
+ (void)setNeloSendMode:(id)arg1;
+ (void)setLogLevelFilterWithInstance:(id)arg1 withLogLevelFilter:(id)arg2;
+ (void)setLogLevelFilter:(id)arg1;
+ (void)setCrashInstanceName:(id)arg1;
+ (id)getNeloSendMode;
+ (id)getNeloLogLevel;
+ (id)getReservedFields;
+ (_Bool)isReachable;
+ (id)getReachability;
+ (id)getWifiQueue;
+ (id)getSessionQueue;
+ (id)getBlockQueue;
+ (id)getInstance:(id)arg1;
+ (id)getInstance;
+ (id)getInstanceList;
- (id)init;

@end

