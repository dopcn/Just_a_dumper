//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class NSFileHandle, NSInvocationOperation, NSOperationQueue, NSPredicate, NSString, NSTimer;
@protocol NMFileManagerDelegate;

@interface NMFileManager : NSObject
{
    NSObject *_fileLock;
    NSOperationQueue *_calcSpaceOperationQueue;
    NSInvocationOperation *_calcSpaceOperation;
    NSPredicate *_filterPredicate;
    NSString *_mapFileName;
    NSFileHandle *_fileHandle;
    NSString *_offlineSourceFileName;
    NSString *_syncListFileName;
    NSString *_syncMyPlaylistFileName;
    NSString *_offlinePlaylistDetailName;
    NSString *_ipodMatchResultFileName;
    NSString *_ipodMatchTodoListFileName;
    NSString *_statisticLogFileName;
    NSTimer *cleanCacheTimer;
    NSTimer *cleanDownloadTimer;
    NSString *_cdnHostFileName;
    NSString *_mvDfsHostFileName;
    NSString *_recentAtFileName;
    NSString *_lastPlayFileName;
    NSString *_restrictedCopyrightFileName;
    NSString *_recentPlayFileName;
    NSString *_favSongFileName;
    NSString *_searchHistoryFileName;
    NSString *_searchMVHistoryFileName;
    NSString *_eqCustomSettingFileName;
    NSString *_songEqInHistoryFileName;
    NSString *_nearbyBannerFileName;
    NSString *_skinThemeFileName;
    NSString *_mainPageCacheBannerFileName;
    NSString *_mainPageCacheRecommendFileName;
    NSString *_hintUserFileName;
    NSString *_officialAccountsFileName;
    NSString *_alarmClockFileName;
    NSString *_onlineAlarmRingInfoFileName;
    NSString *_carModeDeviceFileName;
    NSString *_characterFileName;
    NSString *_tasteHelperFileName;
    NSString *_userocFileName;
    NSString *_mainPageCacheEssentialPlaylistFileName;
    NSString *_mySubscribeCountFileName;
    NSString *_tvcConfigFileName;
    NSString *_MAMDataLogFileName;
    id <NMFileManagerDelegate> _delegate;
    long long _maxCacheSize;
}

+ (id)djRadioVideoCacheFilePath:(id)arg1;
+ (id)rewardGiftVideoCacheFilePath:(id)arg1;
+ (id)alarmDoneFilePath:(id)arg1;
+ (id)alarmCacheFilePath:(id)arg1;
+ (_Bool)freeDiskAvailable;
+ (unsigned long long)freeDiskSpaceInBytes;
+ (id)tvcActivityDir;
+ (id)reactBundleDir;
+ (id)shortVideoBgmCacheDir;
+ (id)shortVideoTemptDir;
+ (id)shortVideoDir;
+ (id)MAMLogDir;
+ (id)djRadioVideoDir;
+ (id)rewardGiftDir;
+ (id)privateMsgDir;
+ (id)customAlertSoundsDir;
+ (id)recordCacheDir;
+ (id)conversionTempDir;
+ (id)sqliteErrorDir;
+ (id)logUploadDir;
+ (id)settingsHelperDir;
+ (id)statisticDir;
+ (id)currentPlaylistCacheDir;
+ (id)playlistCacheDir;
+ (id)currentDjProgramDoneDir;
+ (id)currentPlaylistDoneDir;
+ (id)djProgramDoneDir;
+ (id)playlistDoneDir;
+ (id)skinCurrentImageDir;
+ (id)skinCurrentThemeDir;
+ (id)skinCustomColorDir;
+ (id)alarmRingTempDir;
+ (id)alarmRingDoneDir;
+ (id)skinUpdateDir;
+ (id)skinTempDir;
+ (id)skinDoneDir;
+ (id)lyricsCacheDir;
+ (id)lyricsDoneDir;
+ (id)ipodExportDir;
+ (id)albumPhotoTempFilePath;
+ (id)backgroundTempFilePath;
+ (id)backgroundTempDir;
+ (id)avatarTempFilePath;
+ (id)avatarTempDir;
+ (id)commentImageTempDir;
+ (id)assetImageMovingTempDir;
+ (id)eventImageTempDir;
+ (id)userDataDir;
+ (id)playCacheDir;
+ (id)downloadTempDir;
+ (id)runFmDownloadDir;
+ (id)mvDownloadDir;
+ (id)djDownloadDir;
+ (id)downloadDir;
+ (id)characterInfoDir;
+ (id)appDataRootDir;
+ (void)createDirectoryIfNeeded:(id)arg1;
+ (void)prepareFileDirectoryAfterLogin;
+ (void)prepareDownloadFileDirectory;
+ (void)setupExcludeBackupDirectory;
+ (id)defaultManager;
@property(nonatomic) long long maxCacheSize; // @synthesize maxCacheSize=_maxCacheSize;
@property(nonatomic) __weak id <NMFileManagerDelegate> delegate; // @synthesize delegate=_delegate;
@property(copy, nonatomic) NSString *MAMDataLogFileName; // @synthesize MAMDataLogFileName=_MAMDataLogFileName;
@property(retain, nonatomic) NSString *tvcConfigFileName; // @synthesize tvcConfigFileName=_tvcConfigFileName;
@property(retain, nonatomic) NSString *mySubscribeCountFileName; // @synthesize mySubscribeCountFileName=_mySubscribeCountFileName;
@property(retain, nonatomic) NSString *mainPageCacheEssentialPlaylistFileName; // @synthesize mainPageCacheEssentialPlaylistFileName=_mainPageCacheEssentialPlaylistFileName;
@property(retain, nonatomic) NSString *userocFileName; // @synthesize userocFileName=_userocFileName;
@property(retain, nonatomic) NSString *tasteHelperFileName; // @synthesize tasteHelperFileName=_tasteHelperFileName;
@property(retain, nonatomic) NSString *characterFileName; // @synthesize characterFileName=_characterFileName;
@property(retain, nonatomic) NSString *carModeDeviceFileName; // @synthesize carModeDeviceFileName=_carModeDeviceFileName;
@property(retain, nonatomic) NSString *onlineAlarmRingInfoFileName; // @synthesize onlineAlarmRingInfoFileName=_onlineAlarmRingInfoFileName;
@property(copy, nonatomic) NSString *alarmClockFileName; // @synthesize alarmClockFileName=_alarmClockFileName;
@property(retain, nonatomic) NSString *officialAccountsFileName; // @synthesize officialAccountsFileName=_officialAccountsFileName;
@property(retain, nonatomic) NSString *hintUserFileName; // @synthesize hintUserFileName=_hintUserFileName;
@property(retain, nonatomic) NSString *mainPageCacheRecommendFileName; // @synthesize mainPageCacheRecommendFileName=_mainPageCacheRecommendFileName;
@property(retain, nonatomic) NSString *mainPageCacheBannerFileName; // @synthesize mainPageCacheBannerFileName=_mainPageCacheBannerFileName;
@property(retain, nonatomic) NSString *skinThemeFileName; // @synthesize skinThemeFileName=_skinThemeFileName;
@property(retain, nonatomic) NSString *nearbyBannerFileName; // @synthesize nearbyBannerFileName=_nearbyBannerFileName;
@property(retain, nonatomic) NSString *songEqInHistoryFileName; // @synthesize songEqInHistoryFileName=_songEqInHistoryFileName;
@property(retain, nonatomic) NSString *eqCustomSettingFileName; // @synthesize eqCustomSettingFileName=_eqCustomSettingFileName;
@property(retain, nonatomic) NSString *searchMVHistoryFileName; // @synthesize searchMVHistoryFileName=_searchMVHistoryFileName;
@property(retain, nonatomic) NSString *searchHistoryFileName; // @synthesize searchHistoryFileName=_searchHistoryFileName;
@property(retain, nonatomic) NSString *favSongFileName; // @synthesize favSongFileName=_favSongFileName;
@property(retain, nonatomic) NSString *recentPlayFileName; // @synthesize recentPlayFileName=_recentPlayFileName;
@property(retain, nonatomic) NSString *restrictedCopyrightFileName; // @synthesize restrictedCopyrightFileName=_restrictedCopyrightFileName;
@property(retain, nonatomic) NSString *lastPlayFileName; // @synthesize lastPlayFileName=_lastPlayFileName;
@property(retain, nonatomic) NSString *recentAtFileName; // @synthesize recentAtFileName=_recentAtFileName;
@property(retain, nonatomic) NSString *mvDfsHostFileName; // @synthesize mvDfsHostFileName=_mvDfsHostFileName;
@property(retain, nonatomic) NSString *cdnHostFileName; // @synthesize cdnHostFileName=_cdnHostFileName;
@property(retain, nonatomic) NSTimer *cleanDownloadTimer; // @synthesize cleanDownloadTimer;
@property(retain, nonatomic) NSTimer *cleanCacheTimer; // @synthesize cleanCacheTimer;
@property(retain, nonatomic) NSString *statisticLogFileName; // @synthesize statisticLogFileName=_statisticLogFileName;
@property(retain, nonatomic) NSString *ipodMatchTodoListFileName; // @synthesize ipodMatchTodoListFileName=_ipodMatchTodoListFileName;
@property(retain, nonatomic) NSString *ipodMatchResultFileName; // @synthesize ipodMatchResultFileName=_ipodMatchResultFileName;
@property(retain, nonatomic) NSString *offlinePlaylistDetailName; // @synthesize offlinePlaylistDetailName=_offlinePlaylistDetailName;
@property(retain, nonatomic) NSString *syncMyPlaylistFileName; // @synthesize syncMyPlaylistFileName=_syncMyPlaylistFileName;
@property(retain, nonatomic) NSString *syncListFileName; // @synthesize syncListFileName=_syncListFileName;
@property(retain, nonatomic) NSString *offlineSourceFileName; // @synthesize offlineSourceFileName=_offlineSourceFileName;
@property(retain, nonatomic) NSFileHandle *fileHandle; // @synthesize fileHandle=_fileHandle;
@property(retain, nonatomic) NSString *mapFileName; // @synthesize mapFileName=_mapFileName;
- (void).cxx_destruct;
- (void)manualUploadAppStoreReceiptData:(id)arg1;
- (void)updateModifyDate:(id)arg1;
- (void)manualCleanDBFile;
- (void)manualCleanPlaylistCache;
- (void)dealloc;
- (id)filterFileList:(id)arg1 dir:(id)arg2;
- (id)formatLyricFileName:(id)arg1 toCache:(_Bool)arg2;
- (unsigned long long)totalCacheSizeLimit;
- (_Bool)checkShouldExitCleanCache;
- (_Bool)checkCacheSizeExceeded;
- (_Bool)_removePlayCacheFiles:(id)arg1 onlyDj:(_Bool)arg2 includeNoCopyRight:(_Bool)arg3;
- (_Bool)removeSongPlayCacheFiles:(id)arg1;
- (_Bool)removeDjPlayCacheFiles:(id)arg1;
- (void)cleanRemainCacheFiles;
- (void)cleanCachedFilesInternal;
- (void)cleanCachedFiles;
- (void)stopScheduleCleanCachedFiles;
- (void)scheduleCleanCachedFiles;
- (void)invalidCacheFile:(id)arg1 urlInfo:(id)arg2;
- (long long)getTargetBitRate:(unsigned long long)arg1 song:(id)arg2;
- (id)getTempMVFileName:(id)arg1 bitRate:(long long)arg2;
- (id)getTempFileName:(id)arg1 bitRate:(long long)arg2 md5:(id)arg3;
- (id)getTempFileName:(id)arg1 bitRate:(long long)arg2;
- (id)getDoneRunFmSongName:(id)arg1;
- (id)getDoneMvName:(id)arg1 bitRate:(long long)arg2;
- (id)getDoneFileDirectoryWithType:(unsigned long long)arg1;
- (id)getDoneFileNamePrefix:(id)arg1 bitRate:(long long)arg2 type:(unsigned long long)arg3;
- (id)recheckExistedDownloadedFilePath:(id)arg1;
- (id)getDoneFileName:(id)arg1 bitRate:(long long)arg2 type:(unsigned long long)arg3 fileExtension:(id)arg4;
- (id)getIndexFileNameWithUrlInfo:(id)arg1 type:(unsigned long long)arg2;
- (id)getIndexFileName:(id)arg1 bitRate:(long long)arg2 type:(unsigned long long)arg3;
- (id)getCacheFileNameWithUrlInfo:(id)arg1 type:(unsigned long long)arg2;
- (id)getCacheFileName:(id)arg1 bitRate:(long long)arg2 type:(unsigned long long)arg3;
- (id)getUrlInfoFileNameWithUrlInfo:(id)arg1 type:(unsigned long long)arg2;
- (id)getCacheFileNameWithoutExtAndPathBySavingUrlInfo:(id)arg1 type:(unsigned long long)arg2;
- (id)getCacheFileNameWithoutExtAndPath:(id)arg1 bitRate:(long long)arg2 type:(unsigned long long)arg3;
- (id)getIndexFileWithUrlInfo:(id)arg1 type:(unsigned long long)arg2;
- (id)getCacheFileWithUrlInfo:(id)arg1 type:(unsigned long long)arg2;
- (id)getCompleteCacheFileNameForDownloadWithSong:(id)arg1 urlInfo:(id)arg2;
- (id)findCacheFileCanPlay:(id)arg1 targetBitrate:(long long)arg2;
- (id)findCacheFileCanPlay:(id)arg1;
- (id)_internalFindCacheFileCanPlay:(id)arg1 targetBitrate:(long long)arg2;
- (id)getFileNameWithSongForPlay:(id)arg1 targetBitrate:(long long)arg2 preLoad:(_Bool)arg3;
- (id)getDownloadFileName:(id)arg1;
- (id)getDownloadFileForPlay:(id)arg1;
- (unsigned long long)localFileStateForSong:(id)arg1;
- (_Bool)checkLocalMusicFileExist:(id)arg1;
- (_Bool)checkSongHasCacheFile:(id)arg1;
- (id)cacheInfoFileNameUsedForDownload:(id)arg1;
- (id)cacheFileNameUsedForDownload:(id)arg1;
- (_Bool)isDownloaded:(id)arg1;
- (void)setupMaxCacheSizeInMB;
- (void)updateMaxMusicCache;
- (void)createFilepath;
- (id)init;
- (id)getTargetFileName:(unsigned long long)arg1;
- (_Bool)appendToTargetFile:(id)arg1 type:(unsigned long long)arg2;
- (_Bool)writeToTargetFile:(id)arg1 type:(unsigned long long)arg2;
- (_Bool)writeDataToTargetFile:(id)arg1 type:(unsigned long long)arg2;
- (_Bool)deleteTargetFile:(unsigned long long)arg1;
- (id)loadTargetFile:(unsigned long long)arg1;
- (id)loadAllSyncIdList;
- (id)getSortedFilesByModifyDateInDir:(id)arg1;
- (id)getFilePathStrWithSongIdInDir:(id)arg1;
- (id)getFileListInDir:(id)arg1 onlyDj:(_Bool)arg2;
- (unsigned long long)getNumberInDirectory:(id)arg1;
- (unsigned long long)fileSizeAtPath:(id)arg1;
- (unsigned long long)getDirectorySizeInBytes:(id)arg1;
- (void)clearCacheDone:(id)arg1;
- (void)clearImageCache;
- (void)clearDjRadioVideoCacheInternal;
- (void)clearLyricCacheInternal;
- (void)clearPlaylistCacheInternal;
- (void)_removeCacheFilesForPath:(id)arg1 needSpaceDoneCallBack:(_Bool)arg2;
- (void)clearRewardGiftCache;
- (void)clearMusicCache;
- (void)clearCharacterInfos;
- (void)clearEventImageCache;
- (unsigned long long)djRadioVideoSizeInBytes;
- (unsigned long long)rewardGiftSizeInBytes;
- (unsigned long long)runFmDownloadNumber;
- (unsigned long long)mvDownloadNumber;
- (unsigned long long)djProgramDownloadNumber;
- (unsigned long long)musicDownloadNumber;
- (unsigned long long)imageCacheSizeInBytes;
- (unsigned long long)runFmDownloadSizeInBytes;
- (unsigned long long)mvDownloadSizeInBytes;
- (unsigned long long)djProgramDownloadSizeInBytes;
- (unsigned long long)musicDownloadSizeInBytes;
- (unsigned long long)musicCacheSizeInBytes;
- (void)notifySpaceUpdated:(id)arg1;
- (void)notifyCalcSpaceFinished:(id)arg1;
- (void)calcSpaceSizeInOperation;
- (id)calcSpaceSizeDetailAfterImageCacheCleared;
- (id)calcSpaceSizeDetail;
- (void)calcSpaceSize;

@end

