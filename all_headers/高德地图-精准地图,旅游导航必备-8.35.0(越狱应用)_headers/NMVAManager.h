//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "NMBaseManager.h"

#import "AVAudioRecorderDelegate-Protocol.h"
#import "NMMicrophoneViewDelegate-Protocol.h"
#import "NMRecognizerDelegate-Protocol.h"
#import "NMVAClassService-Protocol.h"
#import "NMVADialogDelegate-Protocol.h"
#import "NMVAService-Protocol.h"
#import "NMVoiceAssistantNaviBarDataSource-Protocol.h"
#import "NMVoiceAssistantTrafficDataSource-Protocol.h"

@class NMAudioPlayer, NMRecognizer, NMVAMessage, NMVANaviData, NMVARouteData, NMVASession, NMVATask, NMVAViewContainer, NSMutableArray, NSString;
@protocol NMVAIDLEDelegate, NMVAListenDelegate, NMVASearchDelegate, NMVASleepDelegate, NMVATTSDelegate, NMVoiceAssistantNaviBarDelegate;

@interface NMVAManager : NMBaseManager <NMRecognizerDelegate, NMVAService, NMVAClassService, NMVADialogDelegate, NMMicrophoneViewDelegate, NMVoiceAssistantNaviBarDataSource, NMVoiceAssistantTrafficDataSource, AVAudioRecorderDelegate>
{
    NMRecognizer *_recognizer;
    NMVAMessage *_mMessage;
    unsigned long long _voiceCondition;
    unsigned long long _lastVoiceCondition;
    long long _status;
    NMVASession *_session;
    long long _currentSelectViewType;
    NSString *_currentSemanticStatus;
    double _roadPoiLongitude;
    double _roadPoiLatitude;
    NSString *_navibarTitle;
    long long _naviBarType;
    NMVATask *_vatask;
    id <NMVoiceAssistantNaviBarDelegate> _otherDelegate;
    double _micphoneLastClickTime;
    _Bool _notShowAlertView;
    _Bool _isVA;
    _Bool _bIsEnterBackground;
    _Bool _hasClose;
    int _mainInteractionSwitch;
    _Bool _bIsSuspend;
    _Bool _isFromMyLocationTask;
    _Bool _needVANavibar;
    _Bool _hasStopListen;
    _Bool _fastCancelListen;
    _Bool _isFromFirstWakeUp;
    _Bool _isOtherAuidoPlaying;
    _Bool _isTTSPlaying;
    _Bool _isFromDialog;
    id <NMVASleepDelegate> _sleepDelegate;
    id <NMVASearchDelegate> _searchDelegate;
    id <NMVAIDLEDelegate> _idleDelegate;
    id <NMVAListenDelegate> _listenDelegate;
    id <NMVATTSDelegate> _ttsDelegate;
    long long _currentViewType;
    CDUnknownBlockType _onCancelHandler;
    long long _fromManagerId;
    NSString *_session_id;
    NSString *_transfer_select_pos;
    NMVARouteData *_routeData;
    NMVANaviData *_naviData;
    NMAudioPlayer *_audioPlayer;
    NSString *_hid;
    NSString *_original_keywords;
    unsigned long long _source;
    NSMutableArray *_viewStack;
    NSString *_recognizeResult;
    NSMutableArray *_taskStack;
}

+ (void)staticapplicationDidBecomeActive:(id)arg1;
+ (void)staticapplicationWillResignActive:(id)arg1;
+ (_Bool)checkAuthorizationStatusOfLocationAndAlert;
+ (void)cancelVAManager;
+ (_Bool)checkNetWorkBrokenAndAlert;
+ (void)initialize;
+ (int)recognizeSentenceToControls:(id)arg1;
@property(nonatomic) _Bool isFromDialog; // @synthesize isFromDialog=_isFromDialog;
@property(retain, nonatomic) NSMutableArray *taskStack; // @synthesize taskStack=_taskStack;
@property(nonatomic) _Bool isTTSPlaying; // @synthesize isTTSPlaying=_isTTSPlaying;
@property(copy, nonatomic) NSString *recognizeResult; // @synthesize recognizeResult=_recognizeResult;
@property(retain, nonatomic) NSMutableArray *viewStack; // @synthesize viewStack=_viewStack;
@property(nonatomic) unsigned long long source; // @synthesize source=_source;
@property(copy, nonatomic) NSString *original_keywords; // @synthesize original_keywords=_original_keywords;
@property(nonatomic) _Bool isOtherAuidoPlaying; // @synthesize isOtherAuidoPlaying=_isOtherAuidoPlaying;
@property(readonly, nonatomic) _Bool isFromFirstWakeUp; // @synthesize isFromFirstWakeUp=_isFromFirstWakeUp;
@property(copy, nonatomic) NSString *hid; // @synthesize hid=_hid;
@property(retain, nonatomic) NMAudioPlayer *audioPlayer; // @synthesize audioPlayer=_audioPlayer;
@property(retain, nonatomic) NMVANaviData *naviData; // @synthesize naviData=_naviData;
@property(retain, nonatomic) NMVARouteData *routeData; // @synthesize routeData=_routeData;
@property(copy, nonatomic) NSString *transfer_select_pos; // @synthesize transfer_select_pos=_transfer_select_pos;
@property(copy, nonatomic) NSString *session_id; // @synthesize session_id=_session_id;
@property(nonatomic) long long fromManagerId; // @synthesize fromManagerId=_fromManagerId;
@property(copy, nonatomic) CDUnknownBlockType onCancelHandler; // @synthesize onCancelHandler=_onCancelHandler;
@property _Bool fastCancelListen; // @synthesize fastCancelListen=_fastCancelListen;
@property _Bool hasStopListen; // @synthesize hasStopListen=_hasStopListen;
@property _Bool needVANavibar; // @synthesize needVANavibar=_needVANavibar;
@property(nonatomic) long long currentViewType; // @synthesize currentViewType=_currentViewType;
@property(retain, nonatomic) NMVATask *vatask; // @synthesize vatask=_vatask;
@property(nonatomic) _Bool isFromMyLocationTask; // @synthesize isFromMyLocationTask=_isFromMyLocationTask;
@property(nonatomic) _Bool hasClose; // @synthesize hasClose=_hasClose;
@property(nonatomic) __weak id <NMVoiceAssistantNaviBarDelegate> otherDelegate; // @synthesize otherDelegate=_otherDelegate;
@property(copy, nonatomic) NSString *navibarTitle; // @synthesize navibarTitle=_navibarTitle;
@property(nonatomic) unsigned long long lastVoiceCondition; // @synthesize lastVoiceCondition=_lastVoiceCondition;
@property(nonatomic) unsigned long long voiceCondition; // @synthesize voiceCondition=_voiceCondition;
@property(retain, nonatomic) NMVASession *session; // @synthesize session=_session;
@property(nonatomic) __weak id <NMVATTSDelegate> ttsDelegate; // @synthesize ttsDelegate=_ttsDelegate;
@property(nonatomic) __weak id <NMVAListenDelegate> listenDelegate; // @synthesize listenDelegate=_listenDelegate;
@property(nonatomic) __weak id <NMVAIDLEDelegate> idleDelegate; // @synthesize idleDelegate=_idleDelegate;
@property(nonatomic) __weak id <NMVASearchDelegate> searchDelegate; // @synthesize searchDelegate=_searchDelegate;
@property(nonatomic) __weak id <NMVASleepDelegate> sleepDelegate; // @synthesize sleepDelegate=_sleepDelegate;
- (void).cxx_destruct;
- (void)applicationDidBecomeActive:(id)arg1;
- (void)applicationWillResignActive:(id)arg1;
- (void)playSearchSound;
- (void)gotoFeedBack;
- (id)decodeRequestWithData:(id)arg1;
- (void)resetVATaskToClass:(Class)arg1;
- (void)cancelRequest:(id)arg1;
- (id)requestWithKeyword:(id)arg1 userAction:(long long)arg2 complete:(CDUnknownBlockType)arg3;
- (id)requestWithKeyword:(id)arg1 complete:(CDUnknownBlockType)arg2;
- (void)stopLocate;
- (void)restoreOtherAuidoPlaying;
- (void)handleNaviStart:(id)arg1;
- (void)p_executeSelectors:(id)arg1;
- (id)p_getLastKeyword;
- (void)showNotAuthorityAlert;
- (id)vaNaviBarView;
- (void)goback:(id)arg1;
- (Class)VAVCClassForViewID:(long long)arg1;
- (void)gotoVCClassWithID:(long long)arg1 data:(id)arg2 animation:(_Bool)arg3;
- (void)setPopupType:(long long)arg1;
- (void)popViewStack;
- (_Bool)needShowBaoCuoBtn;
- (void)clearVANaviBar;
- (void)micBtnPressed:(id)arg1;
- (struct ANPoint)vaTrafficGetCenterPoint;
- (long long)naviBarInitView;
- (id)naviBarTitle;
- (void)onCancel;
- (void)onEndOfSpeech;
- (void)onBeginOfSpeech;
- (void)speechRecognizer:(id)arg1 volumeChanged:(double)arg2;
- (void)speechRecognizer:(id)arg1 part:(id)arg2;
- (void)speechRecognizer:(id)arg1 completed:(id)arg2;
- (void)speechRecognizer:(id)arg1 error:(id)arg2;
- (void)speechRecognizer:(id)arg1 startListening:(_Bool)arg2;
- (void)speechRecognizerWillPlaySound:(id)arg1;
- (void)generalSearchMyLocation;
- (void)changeToMainTaskWithFollowups:(id)arg1 andObject:(id)arg2;
- (void)changeToMainTaskWithSelectorDics:(id)arg1;
- (void)popAllManagerExceptVA;
- (void)gotoSleepWithTTSWords:(id)arg1;
- (_Bool)isListening;
- (void)stopTTS;
- (void)playTTSWithText:(id)arg1 complete:(CDUnknownBlockType)arg2;
- (void)playTTSWithText:(id)arg1;
- (void)playTTSforMainTaskWithText:(id)arg1;
- (void)playTTSforBusinessInteractiveWithText:(id)arg1;
- (void)cancelListeningFast;
- (void)cancelListeningWithBlock:(CDUnknownBlockType)arg1;
- (void)cancelListening;
- (void)stopListening;
- (void)startListeningIndependently;
- (void)startListening;
- (void)cancel:(id)arg1;
- (void)speakDone:(id)arg1;
- (id)fullSuperIDForSource:(unsigned long long)arg1;
- (long long)getFromManagerId;
@property(nonatomic) _Bool isShakeToVA;
@property(nonatomic) _Bool isDriveMode;
- (void)setSearchNoResultTimes:(int)arg1;
- (int)getSearchNoResultTimes;
- (void)sendMessage:(id)arg1;
- (_Bool)startVAFromSource:(unsigned long long)arg1;
- (_Bool)startFlyISRFrom:(long long)arg1;
- (void)p_TTSDoneWithText:(id)arg1 IfIndependent:(_Bool)arg2;
- (void)p_onPauseWithSession:(id)arg1;
- (void)p_willTTSWithWords:(id)arg1 isInteractive:(_Bool)arg2 isFirst:(_Bool)arg3;
- (_Bool)p_prepareToTTS;
- (_Bool)p_prepareToRecognize;
- (void)p_ttsPlayText:(id)arg1 isInteractive:(_Bool)arg2 isFirstTime:(_Bool)arg3 withBlock:(CDUnknownBlockType)arg4;
- (void)resetVAContions;
- (void)cancleVARequest;
- (void)cancelTTSService;
- (void)stopTTSService;
- (_Bool)touchOnMapBlank;
- (_Bool)shouldShowTraffic;
- (_Bool)forbiddenMessageBoxButton;
- (_Bool)forbiddenShowCompass;
- (_Bool)forbiddenShowFloorSelector;
- (_Bool)forbiddenMapLongPressed;
- (_Bool)forbiddenMapPointClicked;
- (_Bool)forbiddenShowTrafficBtn;
- (_Bool)forbiddenShowMainLayer;
- (_Bool)forBiddenTrafficPopLayer;
- (_Bool)forbiddenInteractionPointClicked;
- (_Bool)forbiddenShowInteractionLayer;
- (_Bool)forbiddenShowCityScenicSwitchBtn;
- (_Bool)forbiddenShowIndoorLayer;
- (_Bool)forbiddenTapIndoorLayer;
- (_Bool)forbiddenGPSClicked;
- (_Bool)forbiddenFavoritePointClicked;
- (_Bool)forbiddenShowLayersBtn;
- (_Bool)forbiddenShowBaocuoButton;
- (_Bool)forbiddenSmartScenic;
- (_Bool)needStopNMLayers;
- (void)setMMessage:(id)arg1;
- (void)p_onVoiceAssistantSleeping:(id)arg1;
- (void)p_onVoiceAssistantIDLE:(id)arg1;
- (void)p_onVoiceAssistantSearching:(id)arg1;
- (void)p_onVoiceAssistantListening:(id)arg1;
- (void)vaContidionMachine:(id)arg1;
- (Class)managerViewContainerClass;
- (void)initFlyISR;
- (void)clearVA;
- (void)initVA;
- (void)initVANormal;
- (_Bool)coveredFullScreen;
- (void)resumeRelatedViews;
- (void)clearRelatedData;
- (void)resumeUserInteraction;
- (void)initRelatedData;
- (void)dealloc;
- (_Bool)wakeUpWhetherToOpen;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@property(retain, nonatomic) NMVAViewContainer *viewContainer; // @dynamic viewContainer;

@end

