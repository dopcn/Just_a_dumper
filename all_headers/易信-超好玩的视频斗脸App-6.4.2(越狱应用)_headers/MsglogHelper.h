//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@interface MsglogHelper : NSObject
{
}

+ (id)msgDatabasePath;
+ (long long)lastSerial;
+ (_Bool)queryAllFTSMessagesFromSerial:(long long)arg1 resultBlock:(CDUnknownBlockType)arg2;
+ (vector_8df1fd8c)queryAllSesionzLastMsglog;
+ (long long)batchInsertBackupMsglogWithGenerator:(CDUnknownBlockType)arg1 error:(id *)arg2;
+ (_Bool)enmurateBackupMsglog:(id)arg1 usingBlock:(CDUnknownBlockType)arg2;
+ (_Bool)isMessageReceived:(id)arg1;
+ (void)updateTime:(int)arg1 forMsglog:(long long)arg2;
+ (_Bool)QueryMessageCountIsGreaterThanValue:(long long)arg1 uid:(id)arg2 msgType:(long long)arg3 msgContentType:(long long)arg4;
+ (long long)queryMessageCount:(id)arg1 msgType:(long long)arg2 msgStatus:(long long)arg3;
+ (id)allImageAndFileMessages:(id)arg1 type:(int)arg2;
+ (id)allImageMessages:(id)arg1 type:(int)arg2;
+ (id)messagesContainContent:(id)arg1 sessionID:(id)arg2 type:(int)arg3 maxTime:(int)arg4 limit:(int)arg5;
+ (void)updateMessageBodyByUUID:(id)arg1 message:(id)arg2;
+ (struct MsgLog)addTipMessage:(id)arg1 msgType:(long long)arg2 msgBody:(id)arg3 msgStatus:(long long)arg4 contentType:(long long)arg5;
+ (_Bool)deleteAllMessages;
+ (_Bool)setSelfAllMessageDeleted;
+ (void)updateMessageSubstatus:(const basic_string_a490aa4c *)arg1 subStatus:(int)arg2;
+ (void)updateMessageStatus:(const basic_string_a490aa4c *)arg1 status:(int)arg2;
+ (unsigned int)genMessageList:(const struct list<std::__1::pair<std::__1::basic_string<char>, int>, std::__1::allocator<std::__1::pair<std::__1::basic_string<char>, int>>> *)arg1 logs:(struct vector<MsgItem, std::__1::allocator<MsgItem>> *)arg2;
+ (_Bool)queryLastMessage:(id)arg1 type:(int)arg2 log:(struct MsgLog *)arg3;
+ (unsigned int)queryLogsGreaterThanOrEqual:(id)arg1 type:(int)arg2 limit:(int)arg3 minTime:(int)arg4 message:(vector_8df1fd8c *)arg5;
+ (unsigned int)queryLogs:(id)arg1 type:(int)arg2 limit:(unsigned int)arg3 minTime:(int)arg4 message:(vector_8df1fd8c *)arg5;
+ (unsigned int)queryLogs:(id)arg1 type:(int)arg2 limit:(unsigned int)arg3 maxTime:(int)arg4 message:(vector_8df1fd8c *)arg5;
+ (void)deleteMessagesWithID:(id)arg1 type:(int)arg2;
+ (void)setMessagesDeleted:(id)arg1 type:(int)arg2;
+ (void)setMessagesReadForType:(int)arg1;
+ (void)setMessagesRead:(id)arg1 type:(int)arg2;
+ (_Bool)queryLogByUUIDStr:(const basic_string_a490aa4c *)arg1 log:(struct MsgLog *)arg2;
+ (_Bool)queryLogByUUID:(long long)arg1 log:(struct MsgLog *)arg2;
+ (_Bool)queryLogBySerial:(long long)arg1 log:(struct MsgLog *)arg2;
+ (void)setMsglogServerID:(long long)arg1 msgServerID:(long long)arg2;
+ (void)setMsglogUUID:(long long)arg1 uuid:(const basic_string_a490aa4c *)arg2 status:(int)arg3;
+ (void)setMsglogBody:(long long)arg1 body:(const basic_string_a490aa4c *)arg2;
+ (void)setLogStatus:(long long)arg1 status:(int)arg2 subStatus:(int)arg3;
+ (void)setLogSubStatus:(long long)arg1 subStatus:(int)arg2;
+ (void)setMsglogStatus:(int)arg1 withSerial:(long long)arg2;
+ (void)setLogStatus:(long long)arg1 status:(int)arg2;
+ (vector_8df1fd8c)writeLogs:(vector_8df1fd8c *)arg1;
+ (_Bool)replaceLog:(struct MsgLog *)arg1;
+ (_Bool)writeMsgLog:(struct MsgLog *)arg1;
+ (_Bool)writeLog:(struct MsgLog *)arg1;

@end

