//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class NSMutableDictionary, NSMutableSet, NSString;

@interface AVQuery : NSObject
{
    _Bool _includeACL;
    _Bool _trace;
    int _cachePolicy;
    NSString *_className;
    NSMutableDictionary *_where;
    NSMutableSet *_include;
    NSString *_order;
    long long _limit;
    long long _skip;
    double _maxCacheAge;
    NSMutableDictionary *_parameters;
    NSMutableSet *_selectedKeys;
    NSMutableDictionary *_extraParameters;
}

+ (id)dictionaryFromIncludeKeys:(id)arg1;
+ (void)clearAllCachedResults;
+ (id)queryForUser;
+ (id)getUserObjectWithId:(id)arg1 error:(id *)arg2;
+ (id)getUserObjectWithId:(id)arg1;
+ (id)getObjectOfClass:(id)arg1 objectId:(id)arg2 error:(id *)arg3;
+ (id)getObjectOfClass:(id)arg1 objectId:(id)arg2;
+ (id)andQueryWithSubqueries:(id)arg1;
+ (id)orQueryWithSubqueries:(id)arg1;
+ (id)cloudQueryWithCQL:(id)arg1 pvalues:(id)arg2 callback:(CDUnknownBlockType)arg3 waitUntilDone:(_Bool)arg4 error:(id *)arg5;
+ (void)doCloudQueryInBackgroundWithCQL:(id)arg1 pvalues:(id)arg2 callback:(CDUnknownBlockType)arg3;
+ (void)doCloudQueryInBackgroundWithCQL:(id)arg1 callback:(CDUnknownBlockType)arg2;
+ (id)doCloudQueryWithCQL:(id)arg1 pvalues:(id)arg2 error:(id *)arg3;
+ (id)doCloudQueryWithCQL:(id)arg1 error:(id *)arg2;
+ (id)doCloudQueryWithCQL:(id)arg1;
+ (id)queryWithClassName:(id)arg1 predicate:(id)arg2;
+ (id)queryWithClassName:(id)arg1;
@property(retain, nonatomic) NSMutableDictionary *extraParameters; // @synthesize extraParameters=_extraParameters;
@property(retain, nonatomic) NSMutableSet *selectedKeys; // @synthesize selectedKeys=_selectedKeys;
@property(retain, nonatomic) NSMutableDictionary *parameters; // @synthesize parameters=_parameters;
@property(nonatomic) _Bool trace; // @synthesize trace=_trace;
@property double maxCacheAge; // @synthesize maxCacheAge=_maxCacheAge;
@property int cachePolicy; // @synthesize cachePolicy=_cachePolicy;
@property(nonatomic) _Bool includeACL; // @synthesize includeACL=_includeACL;
@property(nonatomic) long long skip; // @synthesize skip=_skip;
@property(nonatomic) long long limit; // @synthesize limit=_limit;
@property(retain, nonatomic) NSString *order; // @synthesize order=_order;
@property(retain, nonatomic) NSMutableSet *include; // @synthesize include=_include;
@property(retain, nonatomic) NSMutableDictionary *where; // @synthesize where=_where;
@property(copy, nonatomic) NSString *className; // @synthesize className=_className;
- (void).cxx_destruct;
- (void)raiseSyncExceptionIfNeed;
- (id)whereJSONDictionary;
- (id)whereString;
- (id)assembleParameters;
- (id)queryPath;
- (void)clearCachedResult;
- (_Bool)hasCachedResult;
- (void)cancel;
- (void)countObjectsInBackgroundWithTarget:(id)arg1 selector:(SEL)arg2;
- (long long)countObjectsWithBlock:(CDUnknownBlockType)arg1 waitUntilDone:(_Bool)arg2 error:(id *)arg3;
- (void)countObjectsInBackgroundWithBlock:(CDUnknownBlockType)arg1;
- (long long)countObjectsAndThrowsWithError:(id *)arg1;
- (long long)countObjects:(id *)arg1;
- (long long)countObjects;
- (void)getFirstObjectInBackgroundWithTarget:(id)arg1 selector:(SEL)arg2;
- (id)getFirstObjectWithBlock:(CDUnknownBlockType)arg1 waitUntilDone:(_Bool)arg2 error:(id *)arg3;
- (void)getFirstObjectInBackgroundWithBlock:(CDUnknownBlockType)arg1;
- (id)getFirstObjectAndThrowsWithError:(id *)arg1;
- (id)getFirstObject:(id *)arg1;
- (id)getFirstObject;
- (void)deleteAllInBackgroundWithBlock:(CDUnknownBlockType)arg1;
- (void)findObjectsInBackgroundWithTarget:(id)arg1 selector:(SEL)arg2;
- (void)processEnd:(_Bool)arg1;
- (id)processResults:(id)arg1 className:(id)arg2;
- (id)findObjectsWithBlock:(CDUnknownBlockType)arg1 waitUntilDone:(_Bool)arg2 error:(id *)arg3;
- (void)findObjectsInBackgroundWithBlock:(CDUnknownBlockType)arg1;
- (void)queryWithBlock:(id)arg1 parameters:(id)arg2 block:(CDUnknownBlockType)arg3;
- (id)findObjectsAndThrowsWithError:(id *)arg1;
- (id)findObjects:(id *)arg1;
- (id)findObjects;
- (void)getObjectInBackgroundWithId:(id)arg1 target:(id)arg2 selector:(SEL)arg3;
- (void)internalGetObjectInBackgroundWithId:(id)arg1 block:(CDUnknownBlockType)arg2;
- (void)getObjectInBackgroundWithId:(id)arg1 block:(CDUnknownBlockType)arg2;
- (id)getObjectWithId:(id)arg1 error:(id *)arg2;
- (id)getObjectWithId:(id)arg1;
- (void)orderBySortDescriptors:(id)arg1;
- (void)orderBySortDescriptor:(id)arg1;
- (void)addDescendingOrder:(id)arg1;
- (void)orderByDescending:(id)arg1;
- (void)addAscendingOrder:(id)arg1;
- (void)orderByAscending:(id)arg1;
- (void)whereKey:(id)arg1 doesNotMatchQuery:(id)arg2;
- (void)whereKey:(id)arg1 matchesQuery:(id)arg2;
- (void)whereKey:(id)arg1 doesNotMatchKey:(id)arg2 inQuery:(id)arg3;
- (void)whereKey:(id)arg1 matchesKey:(id)arg2 inQuery:(id)arg3;
- (void)whereKey:(id)arg1 hasSuffix:(id)arg2;
- (void)whereKey:(id)arg1 hasPrefix:(id)arg2;
- (void)whereKey:(id)arg1 containsString:(id)arg2;
- (void)whereKey:(id)arg1 matchesRegex:(id)arg2 modifiers:(id)arg3;
- (void)whereKey:(id)arg1 matchesRegex:(id)arg2;
- (void)whereKey:(id)arg1 withinGeoBoxFromSouthwest:(id)arg2 toNortheast:(id)arg3;
- (void)whereKey:(id)arg1 nearGeoPoint:(id)arg2 minDistance:(double)arg3 minDistanceUnit:(long long)arg4;
- (void)whereKey:(id)arg1 nearGeoPoint:(id)arg2 maxDistance:(double)arg3 maxDistanceUnit:(long long)arg4 minDistance:(double)arg5 minDistanceUnit:(long long)arg6;
- (void)whereKey:(id)arg1 nearGeoPoint:(id)arg2 withinRadians:(double)arg3;
- (void)whereKey:(id)arg1 nearGeoPoint:(id)arg2 withinKilometers:(double)arg3;
- (void)whereKey:(id)arg1 nearGeoPoint:(id)arg2 withinMiles:(double)arg3;
- (void)whereKey:(id)arg1 nearGeoPoint:(id)arg2;
- (void)whereKey:(id)arg1 containsAllObjectsInArray:(id)arg2;
- (void)whereKey:(id)arg1 notContainedIn:(id)arg2;
- (void)whereKey:(id)arg1 containedIn:(id)arg2;
- (void)whereKey:(id)arg1 notEqualTo:(id)arg2;
- (void)whereKey:(id)arg1 greaterThanOrEqualTo:(id)arg2;
- (void)whereKey:(id)arg1 greaterThan:(id)arg2;
- (void)whereKey:(id)arg1 lessThanOrEqualTo:(id)arg2;
- (void)whereKey:(id)arg1 lessThan:(id)arg2;
- (void)whereKey:(id)arg1 sizeEqualTo:(unsigned long long)arg2;
- (void)whereKey:(id)arg1 equalTo:(id)arg2;
- (id)valueForEqualityTesting:(id)arg1;
- (void)whereKeyDoesNotExist:(id)arg1;
- (void)whereKeyExists:(id)arg1;
- (void)addWhereItem:(id)arg1 forKey:(id)arg2;
- (void)selectKeys:(id)arg1;
- (void)includeKey:(id)arg1;
- (void)doInitialization;
- (id)initWithClassName:(id)arg1;
- (id)init;
- (id)dictionaryForStatusRequest;

@end

