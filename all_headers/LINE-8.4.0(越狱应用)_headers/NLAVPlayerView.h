//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <UIKit/UIView.h>

#import "NLAVPlayer-Protocol.h"

@class NLAVPlayer, NLAVPlayerControlView, NLAVPlayerLayerView, NSDictionary, NSString, NSURL, UIActivityIndicatorView, UIColor, UIImageView, UIPanGestureRecognizer, UITapGestureRecognizer;
@protocol NLAVPlayerViewDelegate;

@interface NLAVPlayerView : UIView <NLAVPlayer>
{
    _Bool _equalizerImageViewEnabled;
    _Bool _projected;
    _Bool _gestureRecognizersEnabled;
    UIImageView *_imageView;
    UIColor *_playerControlViewBackgroundColorWhenPlayToEndTime;
    id <NLAVPlayerViewDelegate> _delegate;
    id <NLAVPlayerViewDelegate> _delegateWhenProjected;
    NSDictionary *_userInfo;
    double _minPanSensitivity;
    NLAVPlayer *_player;
    UIActivityIndicatorView *_activityIndicatorView;
    UIView *_backgroundView;
    UIView *_contentPlaceholderView;
    NLAVPlayerControlView *_playerControlView;
    NLAVPlayerLayerView *_playerLayerView;
    UIPanGestureRecognizer *_panGestureRecognizer;
    UITapGestureRecognizer *_tapGestureRecognizer;
}

+ (id)readableStringWithCurrentTime:(CDStruct_1b6d18a9)arg1 duration:(CDStruct_1b6d18a9)arg2;
@property(nonatomic, getter=isGestureRecognizersEnabled) _Bool gestureRecognizersEnabled; // @synthesize gestureRecognizersEnabled=_gestureRecognizersEnabled;
@property(retain, nonatomic) UITapGestureRecognizer *tapGestureRecognizer; // @synthesize tapGestureRecognizer=_tapGestureRecognizer;
@property(retain, nonatomic) UIPanGestureRecognizer *panGestureRecognizer; // @synthesize panGestureRecognizer=_panGestureRecognizer;
@property(retain, nonatomic) NLAVPlayerLayerView *playerLayerView; // @synthesize playerLayerView=_playerLayerView;
@property(retain, nonatomic) NLAVPlayerControlView *playerControlView; // @synthesize playerControlView=_playerControlView;
@property(retain, nonatomic) UIView *contentPlaceholderView; // @synthesize contentPlaceholderView=_contentPlaceholderView;
@property(retain, nonatomic) UIView *backgroundView; // @synthesize backgroundView=_backgroundView;
@property(retain, nonatomic) UIActivityIndicatorView *activityIndicatorView; // @synthesize activityIndicatorView=_activityIndicatorView;
@property(retain, nonatomic) NLAVPlayer *player; // @synthesize player=_player;
@property(nonatomic) double minPanSensitivity; // @synthesize minPanSensitivity=_minPanSensitivity;
@property(nonatomic, getter=isProjected) _Bool projected; // @synthesize projected=_projected;
@property(retain, nonatomic) NSDictionary *userInfo; // @synthesize userInfo=_userInfo;
@property(nonatomic) __weak id <NLAVPlayerViewDelegate> delegateWhenProjected; // @synthesize delegateWhenProjected=_delegateWhenProjected;
@property(nonatomic) __weak id <NLAVPlayerViewDelegate> delegate; // @synthesize delegate=_delegate;
@property(copy, nonatomic) UIColor *playerControlViewBackgroundColorWhenPlayToEndTime; // @synthesize playerControlViewBackgroundColorWhenPlayToEndTime=_playerControlViewBackgroundColorWhenPlayToEndTime;
@property(readonly, nonatomic) UIImageView *imageView; // @synthesize imageView=_imageView;
@property(nonatomic, getter=isEqualizerImageViewEnabled) _Bool equalizerImageViewEnabled; // @synthesize equalizerImageViewEnabled=_equalizerImageViewEnabled;
- (void).cxx_destruct;
- (void)player:(id)arg1 didChangeCurrentTime:(CDStruct_1b6d18a9)arg2;
- (void)player:(id)arg1 didChangePreparingState:(long long)arg2 withCacheKey:(id)arg3 URL:(id)arg4 AVPlayer:(id)arg5 error:(id)arg6;
- (void)player:(id)arg1 didChangePlaybackState:(long long)arg2 withError:(id)arg3;
- (void)player:(id)arg1 didChangeBufferingState:(long long)arg2;
- (void)player:(id)arg1 didChangeAVPlayer:(id)arg2;
- (void)player:(id)arg1 didChangeRate:(float)arg2;
- (void)handleTapGestureRecognizer:(id)arg1;
- (void)adjustFrameWithAnimated:(_Bool)arg1;
- (void)handlePanGestureRecognizer:(id)arg1;
- (void)handleScrubberSliderDidSliding:(id)arg1;
- (void)handleScrubberSliderDidEndSliding:(id)arg1;
- (void)handleScrubberSliderDidBeginSliding:(id)arg1;
- (void)handlePlayPauseButton:(id)arg1;
- (void)animateProjectionWithViewController:(id)arg1 duration:(double)arg2 delay:(double)arg3 usingSpringWithDamping:(double)arg4 initialSpringVelocity:(double)arg5 options:(unsigned long long)arg6 completion:(CDUnknownBlockType)arg7;
- (void)animateProjectionWithTransitionContext:(id)arg1 duration:(double)arg2 delay:(double)arg3 usingSpringWithDamping:(double)arg4 initialSpringVelocity:(double)arg5 options:(unsigned long long)arg6 completion:(CDUnknownBlockType)arg7;
- (_Bool)notifyShouldUpdateAudioSession;
- (void)notifyWillProjected:(_Bool)arg1;
- (void)notifyDidProjected:(_Bool)arg1;
- (void)notifyDidChangeRate:(float)arg1;
- (void)notifyDidChangePreparingState:(long long)arg1 withCacheKey:(id)arg2 URL:(id)arg3 error:(id)arg4;
- (void)notifyDidChangePlaybackState:(long long)arg1 withError:(id)arg2;
- (void)notifyDidChangeCurrentTime:(CDStruct_1b6d18a9)arg1;
- (void)notifyDidChangeBufferingState:(long long)arg1;
- (void)notifyDidEndTapGesture;
- (void)notifyDidEndPanGesture;
- (void)notifyDidCancelPanGesture;
- (void)notifyDidStartPanGesture;
@property(readonly, nonatomic) struct CGRect videoRect;
@property(copy, nonatomic) NSString *videoGravity;
- (void)updatePeriodicTimeWithLayoutNeeded:(_Bool)arg1;
- (void)setupPlayerLayerView;
- (void)setupPlayerControlView;
- (void)setupImageView;
- (void)setupContentPlaceholderView;
- (void)setupBackgroundView;
- (void)setupActivityIndicatorView;
- (void)setPlayerControlViewHidden:(_Bool)arg1 animated:(_Bool)arg2;
- (void)setPlayerControlViewAppearanceWithPreferredControlsVisible:(_Bool)arg1 animated:(_Bool)arg2;
- (void)setActivityIndicatorViewHidden:(_Bool)arg1 animated:(_Bool)arg2;
@property(nonatomic) struct UIEdgeInsets equalizerImageViewEdgeInsets;
@property(readonly, nonatomic, getter=isControlsVisible) _Bool controlsVisible;
@property(retain, nonatomic) UIView *controlRightView;
@property(readonly, nonatomic) UIView *contentView;
- (void)seekToTime:(CDStruct_1b6d18a9)arg1;
@property(nonatomic, getter=isSampleAccurateSeeking) _Bool sampleAccurateSeeking;
- (void)prepareToPlayURL:(id)arg1 withCacheKey:(id)arg2;
- (void)prepareToPlayURL:(id)arg1;
- (void)prepareToPlayAsset:(id)arg1;
- (void)play;
- (void)pauseByUserInteraction;
- (void)pause;
@property(nonatomic, getter=isContinuousSeeking) _Bool continuousSeeking;
- (id)preferredDelegate;
@property(nonatomic) float volume;
@property(nonatomic, getter=isMuted) _Bool muted;
- (void)layoutSubviews;
- (id)generateImageIfPossibleAtTime:(CDStruct_1b6d18a9)arg1 actualTime:(CDStruct_1b6d18a9 *)arg2 error:(id *)arg3;
- (id)generateImageAtTime:(CDStruct_1b6d18a9)arg1 actualTime:(CDStruct_1b6d18a9 *)arg2 error:(id *)arg3;
- (void)generateImageAsynchronouslyAtTime:(CDStruct_1b6d18a9)arg1 completion:(CDUnknownBlockType)arg2;
- (void)setupPlayerView;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithCoder:(id)arg1;
- (void)dealloc;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
@property(nonatomic) CDStruct_1b6d18a9 preferredBufferTime;
@property(readonly, nonatomic) CDStruct_e83c9415 loadedTimeRange;
@property(readonly, nonatomic) CDStruct_1b6d18a9 duration;
@property(readonly, nonatomic) CDStruct_1b6d18a9 currentTime;
@property(readonly) long long preparingState;
@property(readonly) long long playbackState;
@property(readonly) long long bufferingState;
@property(readonly, copy, nonatomic) NSURL *URL;
@property(readonly, copy, nonatomic) NSString *cacheKey;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

