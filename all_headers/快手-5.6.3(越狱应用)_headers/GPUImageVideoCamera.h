//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "GPUImageOutput.h"

#import "AVCaptureAudioDataOutputSampleBufferDelegate-Protocol.h"
#import "AVCaptureDataOutputSynchronizerDelegate-Protocol.h"
#import "AVCaptureDepthDataOutputDelegate-Protocol.h"
#import "AVCaptureVideoDataOutputSampleBufferDelegate-Protocol.h"

@class AVCaptureAudioDataOutput, AVCaptureDataOutputSynchronizer, AVCaptureDepthDataOutput, AVCaptureDevice, AVCaptureDeviceDiscoverySession, AVCaptureDeviceFormat, AVCaptureDeviceInput, AVCaptureSession, AVCaptureVideoDataOutput, GLProgram, NSDate, NSString;
@protocol GPUImageVideoCameraDelegate;

@interface GPUImageVideoCamera : GPUImageOutput <AVCaptureDepthDataOutputDelegate, AVCaptureDataOutputSynchronizerDelegate, AVCaptureVideoDataOutputSampleBufferDelegate, AVCaptureAudioDataOutputSampleBufferDelegate>
{
    unsigned long long numberOfFramesCaptured;
    double totalFrameTimeDuringCapture;
    AVCaptureSession *_captureSession;
    AVCaptureDevice *_inputCamera;
    AVCaptureDevice *_microphone;
    AVCaptureDeviceInput *videoInput;
    AVCaptureDepthDataOutput *depthOutput;
    AVCaptureVideoDataOutput *videoOutput;
    _Bool capturePaused;
    unsigned long long outputRotation;
    unsigned long long internalRotation;
    struct dispatch_semaphore_s *frameRenderingSemaphore;
    _Bool captureAsYUV;
    unsigned int luminanceTexture;
    unsigned int chrominanceTexture;
    id <GPUImageVideoCameraDelegate> _delegate;
    AVCaptureDeviceInput *audioInput;
    AVCaptureAudioDataOutput *audioOutput;
    NSDate *startingCaptureTime;
    struct dispatch_queue_s *cameraProcessingQueue;
    struct dispatch_queue_s *audioProcessingQueue;
    GLProgram *yuvConversionProgram;
    int yuvConversionPositionAttribute;
    int yuvConversionTextureCoordinateAttribute;
    int yuvConversionLuminanceTextureUniform;
    int yuvConversionChrominanceTextureUniform;
    int yuvConversionMatrixUniform;
    const float *_preferredConversion;
    _Bool isFullYUVRange;
    int imageBufferWidth;
    int imageBufferHeight;
    _Bool addedAudioInputsDueToEncodingTarget;
    AVCaptureDevice *dualInputCamera;
    AVCaptureDeviceInput *dualVideoInput;
    AVCaptureDeviceDiscoverySession *dualCameraDiscoverySession;
    AVCaptureDeviceFormat *dualCameraPreferedFormat;
    AVCaptureDeviceFormat *dualCameraPreferedDepthDataFormat;
    AVCaptureDataOutputSynchronizer *outputSynchronizer;
    struct dispatch_queue_s *syncDataOutputQueue;
    _Bool isCollectingDepthLogically;
    _Bool _runBenchmark;
    _Bool _horizontallyMirrorFrontFacingCamera;
    _Bool _horizontallyMirrorRearFacingCamera;
    int _frameRate;
    NSString *_captureSessionPreset;
    long long _outputImageOrientation;
}

+ (_Bool)isFrontFacingCameraPresent;
+ (_Bool)isBackFacingCameraPresent;
+ (id)cameraOperationQueue;
@property(nonatomic) _Bool horizontallyMirrorRearFacingCamera; // @synthesize horizontallyMirrorRearFacingCamera=_horizontallyMirrorRearFacingCamera;
@property(nonatomic) _Bool horizontallyMirrorFrontFacingCamera; // @synthesize horizontallyMirrorFrontFacingCamera=_horizontallyMirrorFrontFacingCamera;
@property(nonatomic) id <GPUImageVideoCameraDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) long long outputImageOrientation; // @synthesize outputImageOrientation=_outputImageOrientation;
@property(nonatomic) _Bool runBenchmark; // @synthesize runBenchmark=_runBenchmark;
@property(readonly, retain, nonatomic) AVCaptureSession *captureSession; // @synthesize captureSession=_captureSession;
@property(copy, nonatomic) NSString *captureSessionPreset; // @synthesize captureSessionPreset=_captureSessionPreset;
- (void).cxx_destruct;
- (void)updateOrientationSendToTargets;
- (void)setAudioEncodingTarget:(id)arg1;
- (void)captureOutput:(id)arg1 didOutputSampleBuffer:(struct opaqueCMSampleBuffer *)arg2 fromConnection:(id)arg3;
- (void)dataOutputSynchronizer:(id)arg1 didOutputSynchronizedDataCollection:(id)arg2;
- (void)resetBenchmarkAverage;
- (double)averageFrameDurationDuringCapture;
- (void)convertYUVToRGBOutput;
- (void)processAudioSampleBuffer:(struct opaqueCMSampleBuffer *)arg1;
- (void)processVideoSampleBuffer:(struct opaqueCMSampleBuffer *)arg1;
- (void)updateTargetsForVideoCameraUsingCacheTextureAtWidth:(int)arg1 height:(int)arg2 time:(CDStruct_1b6d18a9)arg3;
- (id)depthCaptureConnection;
- (id)videoCaptureConnection;
@property int frameRate; // @synthesize frameRate=_frameRate;
@property(readonly, getter=isFrontFacingCameraPresent) _Bool frontFacingCameraPresent;
@property(readonly, getter=isBackFacingCameraPresent) _Bool backFacingCameraPresent;
- (id)currentInput;
- (_Bool)isCollectingDepth;
- (long long)cameraPosition;
- (void)rotateCamera;
@property(readonly) AVCaptureDevice *inputCamera; // @synthesize inputCamera=_inputCamera;
- (_Bool)isLockedUpForDepthCollection;
- (void)_stopDepthCollection;
- (void)stopDepthCollection;
- (void)_startDepthCollection;
- (void)startDepthCollection;
- (void)resumeCameraCapture;
- (void)pauseCameraCapture;
- (void)stopCameraCapture;
- (void)startCameraCapture;
@property(readonly, nonatomic) _Bool isRunning;
- (void)addTarget:(id)arg1 atTextureLocation:(long long)arg2;
- (void)removeInputsAndOutputs;
- (_Bool)removeAudioInputsAndOutputs;
- (_Bool)addAudioInputsAndOutputs;
- (void)dealloc;
- (id)framebufferForOutput;
- (id)initWithSessionPreset:(id)arg1 cameraPosition:(long long)arg2;
- (id)init;
- (void)ks_stopCameraCapture;
- (void)ks_startCameraCapture;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

