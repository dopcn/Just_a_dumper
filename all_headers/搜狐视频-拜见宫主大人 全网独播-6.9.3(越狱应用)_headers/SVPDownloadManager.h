//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

#import "M9Observable-Protocol.h"
#import "M9ObservablePrivate-Protocol.h"
#import "M9ObservableProtected-Protocol.h"

@class NSArray, NSDictionary, NSMutableArray, NSOperationQueue, NSRecursiveLock, NSString;
@protocol SVPNetWorkStatusInterface;

@interface SVPDownloadManager : NSObject <M9ObservablePrivate, M9Observable, M9ObservableProtected>
{
    _Bool _shouldAuthenticate;
    NSMutableArray *_observers;
    long long _maxConcurrentTaskCount;
    CDUnknownBlockType _taskAddedBlock;
    CDUnknownBlockType _tasksAddedBlock;
    CDUnknownBlockType _taskRemovedBlock;
    CDUnknownBlockType _tasksRemovedBlock;
    NSOperationQueue *_ioQueue;
    id <SVPNetWorkStatusInterface> _netWorkStatusImp;
    CDUnknownBlockType _delyRetryBlock;
    NSMutableArray *_privateDownloadTasks;
    NSRecursiveLock *_lock;
    NSDictionary *_downloadTasksToBeRestored;
}

+ (id)sharedManager;
@property(retain, nonatomic) NSDictionary *downloadTasksToBeRestored; // @synthesize downloadTasksToBeRestored=_downloadTasksToBeRestored;
@property(retain, nonatomic) NSRecursiveLock *lock; // @synthesize lock=_lock;
@property(retain, nonatomic) NSMutableArray *privateDownloadTasks; // @synthesize privateDownloadTasks=_privateDownloadTasks;
@property(copy, nonatomic) CDUnknownBlockType delyRetryBlock; // @synthesize delyRetryBlock=_delyRetryBlock;
@property(nonatomic) _Bool shouldAuthenticate; // @synthesize shouldAuthenticate=_shouldAuthenticate;
@property(retain, nonatomic) id <SVPNetWorkStatusInterface> netWorkStatusImp; // @synthesize netWorkStatusImp=_netWorkStatusImp;
@property(retain, nonatomic) NSOperationQueue *ioQueue; // @synthesize ioQueue=_ioQueue;
@property(copy, nonatomic) CDUnknownBlockType tasksRemovedBlock; // @synthesize tasksRemovedBlock=_tasksRemovedBlock;
@property(copy, nonatomic) CDUnknownBlockType taskRemovedBlock; // @synthesize taskRemovedBlock=_taskRemovedBlock;
@property(copy, nonatomic) CDUnknownBlockType tasksAddedBlock; // @synthesize tasksAddedBlock=_tasksAddedBlock;
@property(copy, nonatomic) CDUnknownBlockType taskAddedBlock; // @synthesize taskAddedBlock=_taskAddedBlock;
@property long long maxConcurrentTaskCount; // @synthesize maxConcurrentTaskCount=_maxConcurrentTaskCount;
@property(retain, nonatomic) NSMutableArray *observers; // @synthesize observers=_observers;
- (void).cxx_destruct;
- (long long)downloadTaskStateWithVid:(long long)arg1;
- (void)notifyDownloadTasksDidUpdate;
- (void)removeDownloadTaskObjects:(id)arg1;
- (void)removeDownloadTaskObject:(id)arg1;
- (void)addDownloadTaskObject:(id)arg1;
- (_Bool)canStartMoreConcurrentTasks;
- (_Bool)isCurrentNetworkAvailableToDownload;
- (void)downloadNextOrSaveTasksStateWithTask:(id)arg1;
- (void)sendLogWhenRetyFailedWithTask:(id)arg1;
- (void)handleTaskError:(id)arg1;
- (void)retryDownloadTasks;
- (void)retryDownloadTask:(id)arg1;
- (void)cancleDelyRetry;
- (void)delyRetryDownloadTask:(id)arg1;
- (void)removeAllDownloadTasks;
- (void)removeDownloadTasks:(id)arg1;
- (void)removeDownloadTask:(id)arg1;
- (void)removeDownloadTaskWithVid:(long long)arg1;
- (void)didRemovedDownloadTask;
- (void)asyncRemoveTasksFiles:(id)arg1;
- (void)asyncRemoveTaskFiles:(id)arg1;
- (void)syncRemoveTaskFiles:(id)arg1;
- (id)pauseAllDownloadTasks;
- (void)pauseDownloadTask:(id)arg1;
- (void)handleTransCodeTimeChangement:(id)arg1;
- (void)checkTransCodeTime:(id)arg1 complishHandler:(CDUnknownBlockType)arg2;
- (void)requestDownloadVideoFileOfTSSegment:(id)arg1;
- (void)requestDownloadVideoFileOfDrm:(id)arg1;
- (void)executeDownloadTask:(id)arg1;
- (id)startAllDownloadTasks;
- (void)startNextDownloadTask;
- (_Bool)isTaskValidRetry:(long long)arg1;
- (_Bool)taskRecursiveManyTimes:(id)arg1;
- (_Bool)recursiveManyTimes;
- (_Bool)startDownloadTask:(id)arg1 resetRetryState:(_Bool)arg2;
- (_Bool)startDownloadTask:(id)arg1;
- (_Bool)checkErrorBeforeStartDownloadTask:(id)arg1;
- (void)addDownloadTaskAndAutoHandleError:(id)arg1 noErrorCompBlock:(CDUnknownBlockType)arg2;
- (void)addDownloadTaskAndAutoHandleError:(id)arg1 compBlock:(CDUnknownBlockType)arg2;
- (void)addDownloadTask:(id)arg1 handleError:(CDUnknownBlockType)arg2 compBlock:(CDUnknownBlockType)arg3;
- (long long)checkErrorBeforeAddDownloadTask:(id)arg1;
@property(readonly, nonatomic) NSArray *downloadTasks; // @dynamic downloadTasks;
- (void)prepareNetWorkStatus;
- (void)setupDownloadManager;
- (id)init;
- (void)dealloc;
- (void)eachObserver:(CDUnknownBlockType)arg1;
- (_Bool)containsObserver:(id)arg1;
- (void)removeObserver:(id)arg1;
- (void)addObserver:(id)arg1;
- (void)addDownloadTask:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (id)allFinishedPlayingTasks;
- (id)allCompletedTaskSortedByAlbums;
- (id)sortArray:(id)arg1 ByKey:(id)arg2 inAscending:(_Bool)arg3;
- (void)applicationDidEnterBackground:(id)arg1;
- (void)netWorkStatusDidChanged:(unsigned long long)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)observeNetWorkStatus;
- (void)applicationDidFinishLaunching:(id)arg1;
- (void)applicationWillEnterForeground:(id)arg1;
- (_Bool)isDownloadingTasks;
- (void)applicationWillResignActive:(id)arg1;
- (void)onLogoutNotification:(id)arg1;
- (void)registerNotifications;
- (void)loggingStealingWwanDownload:(id)arg1;
- (void)loggingDownloadPoliceParameters:(id)arg1;
- (void)loggingVideoTransTimeChange:(long long)arg1 site:(int)arg2;
- (void)loggingRequestFreeM3u8Success;
- (void)loggingTaskDidFinishDownload:(_Bool)arg1 downloadTask:(id)arg2;
- (void)loggingTaskDidFirstStartDownloadWithDownloadTask:(id)arg1;
- (void)sendTSNotFoundLog:(id)arg1;
- (void)sendM3U8InfoInvalidLog:(id)arg1 errorCode:(id)arg2;
- (void)sendDetailInfoInvalidLog:(id)arg1 errorCode:(id)arg2;
- (void)loggingDownloadTaskDidFinish:(id)arg1 errorType:(long long)arg2;
- (void)removeOfflineAdvertWithDownloadTask:(id)arg1;
- (void)requestOfflineAdvertWithDownloadTask:(id)arg1;
- (id)advertRequestItemWithDownloadTask:(id)arg1;
- (void)upgradeDownloadTasks;
- (_Bool)needsUpgradeDownloadTasks;
- (void)removeOldDownloadTasks;
- (id)oldDownloadTasksSavedPath;
- (void)disablePostponeEnterBackground;
- (void)activePostponeEnterBackground;
- (void)pausePreventSuspending;
- (void)activePreventSuspending;
- (void)initPreventSuspending;
- (_Bool)canPayVideoDownload;
- (void)removeDownloadTasksWithAid:(long long)arg1;
- (_Bool)hasActiveDownloadTasks;
- (_Bool)restoreActiveDownloadTaskStates;
- (void)saveActiveDownloadTaskStatesOptionErrCode:(id)arg1;
- (void)saveActiveDownloadTaskStates;
- (void)saveExecutingTaskWhenDownloadFailed:(id)arg1;
- (void)saveDownloadTask2DifferentState:(id)arg1;
@property(readonly, nonatomic) NSArray *completedDownloadTasks; // @dynamic completedDownloadTasks;
@property(readonly, nonatomic) NSArray *failedDownloadTasks; // @dynamic failedDownloadTasks;
@property(readonly, nonatomic) NSArray *pausedDownloadTasks; // @dynamic pausedDownloadTasks;
@property(readonly, nonatomic) NSArray *executingDownloadTasks; // @dynamic executingDownloadTasks;
@property(readonly, nonatomic) NSArray *waitingDownloadTasks; // @dynamic waitingDownloadTasks;
- (id)downloadTasksWithState:(long long)arg1;
- (id)downloadTasksWithAid:(long long)arg1;
- (id)downloadTaskWithVid:(long long)arg1;
- (_Bool)includesTask:(id)arg1;
- (_Bool)containsTask:(id)arg1;
- (unsigned long long)fileSizeForPath:(id)arg1;
- (void)deleteExistfile:(id)arg1;
- (void)loadDownloadTasks;
- (id)downloadTasksFromLocal;
- (void)saveDownloadTasks;
- (id)downloadTasksSavedPath;
- (void)addDownloadTaskWithRemoteNotification:(id)arg1 fetchCompletionHandler:(CDUnknownBlockType)arg2;
- (_Bool)isDownloadRemoteNotification:(id)arg1;
@property(copy, nonatomic) CDUnknownBlockType handleEventsForBackgroundURLSessionBlock;
@property(copy, nonatomic) NSString *payVideoMKey;
- (void)savePhotoAlbumWithDownloadTask:(id)arg1;
- (id)parametersVideoM3U8UrlWithDownloadTask:(id)arg1 videoM3U8Url:(id)arg2;
- (void)handDownloadStepError:(id)arg1;
- (void)requestDrmVideoFileOfDownloadTask:(id)arg1;
- (void)downloadVideoFileWithDownloadTask:(id)arg1;
- (void)handStep3Error:(id)arg1;
- (void)requestAlbumDetailInfoWithDownloadTask:(id)arg1;
- (void)bluRayAuthRequestSuccess:(id)arg1 key:(id)arg2 downloadTask:(id)arg3 url:(id)arg4;
- (void)step2Finished:(id)arg1;
- (void)handStep2Error:(id)arg1;
- (void)handCannotFilndM3U8URLError:(id)arg1 errorCode:(id)arg2;
- (void)handleM3U8FileForDownloadTask:(id)arg1 filePath:(id)arg2;
- (id)parserM3U8Stirng:(id)arg1 m3u8host:(id)arg2 filePath:(id)arg3 error:(id *)arg4;
- (id)decodeM3U8File:(id)arg1 error:(id *)arg2;
- (void)startDownloadM3U8FileRequest:(id)arg1 url:(id)arg2 isFree:(_Bool)arg3;
- (void)startDownloadMP4WithUrl:(id)arg1 downloadTask:(id)arg2;
- (void)preparedownloadM3U8FileRequest:(id)arg1 url:(id)arg2 isFree:(_Bool)arg3;
- (void)request720pDefinitionAuthInfo:(id)arg1 url:(id)arg2;
- (void)requestPayVideoM3U8URL:(id)arg1 url:(id)arg2;
- (void)requestDrmOfflineUrl:(id)arg1 m3u8OriginalUrl:(id)arg2;
- (void)requestDownloadUrlsWithDownloadTask:(id)arg1;
- (void)step1Finished:(id)arg1;
- (void)handStep1RequestError:(id)arg1;
- (void)handStep1ResponseDataError:(id)arg1 errorCode:(id)arg2;
- (void)handStep1Error:(id)arg1;
- (void)requestVideoDetailInfoWithDownloadTask:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

