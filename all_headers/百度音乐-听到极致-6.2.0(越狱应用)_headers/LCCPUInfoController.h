//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

@class LCCPUInfo, LCCPULoadFilter, NSMutableArray, NSTimer;
@protocol LCCPUInfoControllerDelegate;

@interface LCCPUInfoController : NSObject
{
    struct processor_cpu_load_info *priorCpuTicks;
    unsigned int host;
    unsigned int processorSet;
    id <LCCPUInfoControllerDelegate> delegate;
    NSMutableArray *cpuLoadHistory;
    LCCPUInfo *cpuInfo;
    LCCPULoadFilter *cpuLoadFilter;
    unsigned long long cpuLoadHistorySize;
    NSTimer *cpuLoadUpdateTimer;
}

@property(retain, nonatomic) NSTimer *cpuLoadUpdateTimer; // @synthesize cpuLoadUpdateTimer;
@property(nonatomic) unsigned long long cpuLoadHistorySize; // @synthesize cpuLoadHistorySize;
@property(retain, nonatomic) LCCPULoadFilter *cpuLoadFilter; // @synthesize cpuLoadFilter;
@property(retain, nonatomic) LCCPUInfo *cpuInfo; // @synthesize cpuInfo;
@property(retain, nonatomic) NSMutableArray *cpuLoadHistory; // @synthesize cpuLoadHistory;
@property(nonatomic) __weak id <LCCPUInfoControllerDelegate> delegate; // @synthesize delegate;
- (void).cxx_destruct;
- (id)calculateCPUUsage;
- (void)cpuLoadUpdateTimerCB:(id)arg1;
- (void)pushCPUHistory:(id)arg1;
- (id)cpuSubtypeToString:(int)arg1;
- (id)cpuTypeToString:(int)arg1;
- (id)getEndianess;
- (id)getCPUSubtype;
- (id)getCPUType;
- (unsigned long long)getL2Cache;
- (unsigned long long)getL1DCache;
- (unsigned long long)getL1ICache;
- (unsigned long long)getCPUFrequency;
- (unsigned long long)getLogicalCPUMaxCount;
- (unsigned long long)getLogicalCPUCount;
- (unsigned long long)getPhysicalCPUMaxCount;
- (unsigned long long)getPhysicalCPUCount;
- (unsigned long long)getActiveCPUCount;
- (id)getCPUName;
- (void)setCPULoadHistorySize:(unsigned long long)arg1;
- (void)stopCPULoadUpdates;
- (void)startCPULoadUpdatesWithFrequency:(unsigned long long)arg1;
- (id)getCPUInfo;
- (void)dealloc;
- (id)init;

@end

