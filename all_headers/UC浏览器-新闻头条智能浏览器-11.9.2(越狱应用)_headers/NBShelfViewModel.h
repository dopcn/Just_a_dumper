//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

#import "CloudSyncObserver-Protocol.h"
#import "NBBookServiceManagerObserver-Protocol.h"
#import "NBCoverImageManagerDelegate-Protocol.h"
#import "NBDownloadManagerObserver-Protocol.h"
#import "NBEpubParserDelegate-Protocol.h"
#import "NBFSCoverURLUpdateServiceDelegate-Protocol.h"
#import "NBGeneralBookDataModelObserver-Protocol.h"
#import "NBSDownloadObserver-Protocol.h"

@class NBEpubParser, NBFSCoverURLUpdateService, NSMutableArray, NSMutableDictionary, NSString, NSTimer;
@protocol NBShelfViewModelDataSourceDelegate, NBShelfViewModelExtendDelegate, OS_dispatch_queue;

@interface NBShelfViewModel : NSObject <NBGeneralBookDataModelObserver, NBBookServiceManagerObserver, NBCoverImageManagerDelegate, CloudSyncObserver, NBDownloadManagerObserver, NBFSCoverURLUpdateServiceDelegate, NBEpubParserDelegate, NBSDownloadObserver>
{
    _Bool _isDataSourceDirty;
    NSMutableArray *_selectedBookItems;
    id <NBShelfViewModelDataSourceDelegate> _dataSourceDelegate;
    id <NBShelfViewModelExtendDelegate> _extendDelegate;
    NSMutableDictionary *_dataSource;
    NSMutableDictionary *_progressSubscribers;
    NSTimer *_processTimer;
    NSMutableDictionary *_colorSource;
    NSMutableDictionary *_imageSource;
    NBFSCoverURLUpdateService *_fsCoverUpdateSerivce;
    NBEpubParser *_epubParser;
    NSObject<OS_dispatch_queue> *_operationQueue;
}

@property(retain, nonatomic) NSObject<OS_dispatch_queue> *operationQueue; // @synthesize operationQueue=_operationQueue;
@property(retain, nonatomic) NBEpubParser *epubParser; // @synthesize epubParser=_epubParser;
@property(retain, nonatomic) NBFSCoverURLUpdateService *fsCoverUpdateSerivce; // @synthesize fsCoverUpdateSerivce=_fsCoverUpdateSerivce;
@property(retain, nonatomic) NSMutableDictionary *imageSource; // @synthesize imageSource=_imageSource;
@property(retain, nonatomic) NSMutableDictionary *colorSource; // @synthesize colorSource=_colorSource;
@property(retain, nonatomic) NSTimer *processTimer; // @synthesize processTimer=_processTimer;
@property(retain, nonatomic) NSMutableDictionary *progressSubscribers; // @synthesize progressSubscribers=_progressSubscribers;
@property(retain) NSMutableDictionary *dataSource; // @synthesize dataSource=_dataSource;
@property(nonatomic) _Bool isDataSourceDirty; // @synthesize isDataSourceDirty=_isDataSourceDirty;
@property(nonatomic) id <NBShelfViewModelExtendDelegate> extendDelegate; // @synthesize extendDelegate=_extendDelegate;
@property(nonatomic) id <NBShelfViewModelDataSourceDelegate> dataSourceDelegate; // @synthesize dataSourceDelegate=_dataSourceDelegate;
@property(retain, nonatomic) NSMutableArray *selectedBookItems; // @synthesize selectedBookItems=_selectedBookItems;
- (void)deleteShelfItemsFromShelf:(id)arg1;
- (void)addShelfItemsToShelf:(id)arg1;
- (id)allDirItems;
- (id)bookItems;
- (id)bookItemsWithoutDir;
- (int)toNBDownloadStatus:(unsigned long long)arg1;
- (void)bookDataModelDidSortOrderChangedAutoForBookItems:(id)arg1 trigger:(id)arg2;
- (void)bookDataModelDidChangeBookItems:(id)arg1 forProperties:(id)arg2 trigger:(id)arg3;
- (void)bookDataModelDidDeleteBookItems:(id)arg1 trigger:(id)arg2;
- (void)bookDataModelDidAddBookItems:(id)arg1 trigger:(id)arg2;
- (_Bool)shouldShowRedPoint:(id)arg1;
- (int)getDownloadTaskStatus:(id)arg1;
- (void)getStatusWithBookItem:(id)arg1 statusBlock:(CDUnknownBlockType)arg2;
- (void)updateDownloadProcess;
- (void)stopProcessUpdateTimer;
- (void)tryStartProcessUpdateTimer;
- (void)downloadTask:(id)arg1 didChangeStatus:(unsigned long long)arg2;
- (void)downloadTaskWithInfo:(id)arg1 didChangeStatus:(int)arg2 savePath:(id)arg3;
- (void)subscribeDownloadProgressWithBID:(id)arg1;
- (void)reSubscribeDownloadProgress;
- (void)resumeCacheTaskWithBookItem:(id)arg1;
- (void)stopCacheTaskWithBookItem:(id)arg1;
- (double)downloadProgressForNovelBookWithBid:(id)arg1;
- (double)downloadProgressForSoundBookWithBid:(id)arg1;
- (double)downloadProgressForBookShelfItem:(id)arg1;
- (_Bool)isBookShelfItemBeingDownloadByNow:(id)arg1;
- (void)selectAllBooks;
- (void)deleteAllSelectedSubBooksWith:(id)arg1;
- (void)deleteAllSelectedBooks;
- (void)deleteSelectedBooksWith:(id)arg1;
- (_Bool)isContainInSelectedBookItem:(id)arg1;
- (void)removeAllSelectedBookItems;
- (void)removeAllDirSelectedBookItems:(id)arg1;
- (void)removeSelectedBookItem:(id)arg1;
- (void)addSelectedBookItem:(id)arg1;
- (void)updateFSBookCatalogURLWithBookitem:(id)arg1;
- (void)updateBookItemAndStatisticsWithBookItem:(id)arg1 cell:(id)arg2;
- (id)selectedBookForDirId:(id)arg1;
- (id)selectedBooks;
- (id)selectedBookIdsForDirId:(id)arg1;
- (long long)selectedDirItemsCountWith:(id)arg1;
- (id)bookItemsWithBookBids:(id)arg1;
- (id)bookItemWithBookBid:(id)arg1;
- (void)fsCoverURLUpdateService:(id)arg1 didFinishedUpdateCoverURLForBooks:(id)arg2;
- (void)fsCoverURLUpdateServiceDidFinisheUpdateAllNovelCoverURLs:(id)arg1;
- (void)startFSCoverURLUpdateServiceForBookItems:(id)arg1;
- (void)updateAllFSNovelCoverURLsIfNeeded;
- (id)getCoverImageForBookItem:(id)arg1;
- (void)notifyDelegateToReloadDataSource:(id)arg1;
- (void)notifyDelegateToReloadSourceData:(id)arg1;
- (void)notifyDelegateToUpdateBookItems:(id)arg1;
- (void)notifyDelegateToUpdateBookItem:(id)arg1;
- (long long)loopToCheckIndexForItem:(id)arg1;
- (void)updateSortIndexForBookItems:(id)arg1;
- (void)cloudSyncDoingSlowSync:(long long)arg1;
- (void)cloudSyncAllDidFinish:(long long)arg1 state:(long long)arg2 method:(long long)arg3;
- (void)bookServiceManager:(id)arg1 hasErrorCorrectionForBookItems:(id)arg2;
- (void)bookServiceManager:(id)arg1 hasErrorCorrectionForBookItem:(id)arg2;
- (void)bookServiceManager:(id)arg1 didFinishChapterUpdateForBookItem:(id)arg2;
- (void)bookServiceManager:(id)arg1 didFinishBookUpdateWithResult:(_Bool)arg2;
- (void)bookServiceManager:(id)arg1 didChangeDownloadCornerMarkStatusForBookItem:(id)arg2;
- (void)bookServiceManager:(id)arg1 hasIncrChapterUpdateForBookItem:(id)arg2;
- (void)bookServiceManager:(id)arg1 didFnishDownloadEpubForBookItem:(id)arg2;
- (void)bookServiceManager:(id)arg1 didFinishOfflineDownloadForBookItem:(id)arg2;
- (void)coverImageManager:(id)arg1 didDownloadCoverImageForBookItem:(id)arg2;
- (void)tryParseEpubIfNeededForBookItem:(id)arg1;
- (void)tryParserEpubIfNeed;
- (void)epubParser:(id)arg1 parseEpubSuccess:(id)arg2;
- (void)epubParser:(id)arg1 parseEpub:(id)arg2 failedWithError:(id)arg3;
- (void)parserEpubWith:(id)arg1;
- (void)tryPreprocessItemSortKeyParamsForDBV16Upgrade;
- (void)loadColorSourceByBookTypes;
- (void)loadShelfItemArray;
- (void)repairSubShelfItem;
- (void)loadAllBooksOnShelfInDataBase;
- (void)didReceiveMemoryWarning;
- (void)dealloc;
- (id)init;
- (void)addShelfItems:(id)arg1 toDir:(id)arg2;
- (void)mergeShelfItem:(id)arg1 withShelfItem:(id)arg2 atIndex:(long long)arg3;
- (id)getDefaultFolderTitle;
- (void)createNewFolder:(id)arg1 addItems:(id)arg2;
- (void)moveShelfItem:(id)arg1 outFromDir:(id)arg2 toIndex:(long long)arg3;
- (void)removeCloudSyncExcludeBookItemsIfNeeded:(id)arg1;
- (void)addCloudSyncExcludeBookItemsIfNeeded:(id)arg1;
- (void)updateShelfArrayWithModifySet:(id)arg1;
- (void)removeBooksFromShelfArray:(id)arg1;
- (void)moveBookToFront:(id)arg1;
- (void)moveBookAtIndex:(long long)arg1 toIndex:(long long)arg2;
- (void)insertBook:(id)arg1 atIndex:(long long)arg2;
- (id)itemsWithinLocation:(long long)arg1 length:(long long)arg2;
- (long long)indexOfLastSetTopShelfItem;
- (id)bookmarkItemArray;
- (id)lastBookInShelfArray;
- (id)bookInShelfArrayAtIndex:(long long)arg1;
- (long long)indexOfBookInShelfArray:(id)arg1;
- (long long)numberOfShelfArray;
- (id)shelfArray;
- (_Bool)isBookShelfArrayContainsBook:(id)arg1;
- (_Bool)isBookShelfContainsBookItem:(id)arg1;
- (void)updateShelfArrayInDatabase;
- (double)timeSpaceForImte:(id)arg1 andItem:(id)arg2;
- (double)topTimeSpaceForItem:(id)arg1 andItem:(id)arg2;
- (_Bool)hasSpaceBetweenItem:(id)arg1 andItem:(id)arg2;
- (_Bool)hasTopTimeSpaceBetweenItem:(id)arg1 andItem:(id)arg2;
- (_Bool)isItemWithTopTime:(id)arg1;
- (long long)expandListForAddingItem:(id)arg1 toIndex:(long long)arg2;
- (_Bool)addItem:(id)arg1 toNonTopListBetween:(id)arg2 andItem:(id)arg3;
- (_Bool)addItem:(id)arg1 toToListBetween:(id)arg2 andItem:(id)arg3;
- (void)updateTimestampForAddingItemToTopListEdge:(id)arg1;
- (_Bool)updateTimestampForInsertItem:(id)arg1 betweenIndex:(long long)arg2 andIndex:(long long)arg3;
- (id)insertItemToExpandableList:(id)arg1 betweenIndex:(long long)arg2 andIndex:(long long)arg3;
- (id)exchangeTimestampForItem:(id)arg1 andItem:(id)arg2;
- (void)updateTimestampForAddingItemToTopEnd:(id)arg1;
- (void)updateTimestampForAddingItemToEnd:(id)arg1;
- (void)updateTimestampForAddingItemToHead:(id)arg1;
- (id)updateTimestampForMovingItem:(id)arg1 toIndex:(long long)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

