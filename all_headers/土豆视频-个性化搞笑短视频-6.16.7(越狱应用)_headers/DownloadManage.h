//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

#import "DownloadEngineDelegate-Protocol.h"
#import "GetSequencePathOperationDelegate-Protocol.h"

@class DownloadEngine, HLPPlayService, NSMutableArray, NSPointerArray, NSString, NSTimer, Reachability;
@protocol DownloadManageDelegate;

@interface DownloadManage : NSObject <GetSequencePathOperationDelegate, DownloadEngineDelegate>
{
    NSMutableArray *dataArray;
    DownloadEngine *engine;
    Reachability *internetReach;
    _Bool _isOpenBackgroundModel;
    _Bool _isStopDownloadWhenGprs;
    _Bool _enableAutoStartDownlaod;
    id <DownloadManageDelegate> _delegate;
    long long _format;
    HLPPlayService *_service;
    NSPointerArray *_weakListeners;
    NSTimer *_pingTimer;
}

+ (_Bool)isHaveEnoughSpace:(id)arg1;
+ (id)sharedOperationQueue;
+ (_Bool)hasEnoughSpaceWithFolder:(id)arg1;
+ (_Bool)hasEnoughSpaceWithFiles:(id)arg1;
+ (id)shareInstance;
@property(retain, nonatomic) NSTimer *pingTimer; // @synthesize pingTimer=_pingTimer;
@property(retain, nonatomic) NSPointerArray *weakListeners; // @synthesize weakListeners=_weakListeners;
@property(retain, nonatomic) HLPPlayService *service; // @synthesize service=_service;
@property(nonatomic) _Bool enableAutoStartDownlaod; // @synthesize enableAutoStartDownlaod=_enableAutoStartDownlaod;
@property(nonatomic) long long format; // @synthesize format=_format;
@property(nonatomic) _Bool isStopDownloadWhenGprs; // @synthesize isStopDownloadWhenGprs=_isStopDownloadWhenGprs;
@property(nonatomic) _Bool isOpenBackgroundModel; // @synthesize isOpenBackgroundModel=_isOpenBackgroundModel;
@property(nonatomic) id <DownloadManageDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)pingAction:(id)arg1;
- (long long)getNetworkState;
- (void)getSequencePathDidFinished:(id)arg1 tsArray:(id)arg2;
- (void)startBetchDownloadTask:(_Bool)arg1;
- (_Bool)inOperationQueue:(id)arg1;
- (void)applicationDidEnterBackground:(id)arg1;
- (void)applicationWillEnterForeground:(id)arg1;
- (void)applicationDidBecomeActive:(id)arg1;
- (void)applicationDidFinishLaunchingNotification:(id)arg1;
- (id)getAllNeedDownload;
- (id)getNextDownloadModel:(id)arg1;
- (void)notifyDecodeFinish:(id)arg1 videomodel:(id)arg2;
- (id)getEngineModelsByState:(int)arg1;
- (void)makeOthersUploadToWait;
- (void)notifyWait:(id)arg1;
- (void)notifyDidStart:(id)arg1;
- (void)downloadEngineDidError:(id)arg1 Error:(id)arg2;
- (void)downloadEngineDidFinishDownloadSequence:(id)arg1 sequence:(id)arg2;
- (void)downloadEngineDidFinish:(id)arg1;
- (void)downloadEngineDidReceiveBytes:(id)arg1 PartSequence:(id)arg2;
- (void)downloadEngineDidUpldateTSArray:(id)arg1 TSArray:(id)arg2;
- (void)downloadEngineDidStartForAnalytics:(id)arg1;
- (_Bool)isExistByRecordId:(id)arg1;
- (_Bool)hasWaitDownloadingVideo;
- (_Bool)hasDownloadingVideo;
- (long long)getWaitCount;
- (id)getNextTaskModel;
- (id)getShowModelOrWillShowModel;
- (id)getCurrentTaskModel;
- (void)startAllDownload;
- (void)pauseAllDownload;
- (void)stopDownload;
- (void)autoStartNextModel:(_Bool)arg1;
- (void)startDownload;
- (void)removeDownloadTasks:(id)arg1 prepare:(CDUnknownBlockType)arg2 complete:(CDUnknownBlockType)arg3;
- (void)startDownloadTask:(id)arg1;
- (void)pauseDownloadTask:(id)arg1;
- (void)addDownloadTaskWithTasks:(id)arg1;
- (void)addDownloadTaskWithTask:(id)arg1;
- (void)removeAllListeners;
- (void)removeListener:(id)arg1;
- (void)addListener:(id)arg1;
- (id)findTrueModel:(id)arg1;
- (void)doRemoveDownloadTask:(id)arg1;
- (id)doAddDownloadTaskWithTask:(id)arg1;
- (void)stopDownloadForNetChange;
- (void)startBetchDownloadTask;
- (void)startDownloadForNetChange;
- (void)resetSession;
- (void)reachabilityChanged:(id)arg1;
- (id)init;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

