//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "NELPSystemActionProtocol-Protocol.h"
#import "NELivePlayer-Protocol.h"
#import "NELivePlayerCoreProtocol-Protocol.h"
#import "NELivePlayerStatisticProtocol-Protocol.h"

@class NELPGslbUrlModel, NELPSystemAction, NELivePlayerCore, NELivePlayerDecryption, NELivePlayerNGBUrl, NELivePlayerPlaylist, NELivePlayerStatistics, NELivePlayerUrl, NSString, UIView;
@protocol OS_dispatch_queue, OS_dispatch_semaphore, OS_dispatch_source;

@interface NELivePlayerController : NSObject <NELivePlayerCoreProtocol, NELivePlayerStatisticProtocol, NELPSystemActionProtocol, NELivePlayer>
{
    NSObject<OS_dispatch_semaphore> *_gslbSyncSem;
    long long _videoWidth;
    long long _videoHeight;
    long long _sampleAspectRatioNumerator;
    long long _sampleAspectRatioDenominator;
    long long _bufferingTime;
    long long _bufferingPosition;
    long long _bufferingProgress;
    long long _buffering_duration;
    _Bool _keepScreenOnWhilePlaying;
    _Bool _pauseInBackground;
    NSObject<OS_dispatch_source> *_adjustBufferStatusTimer;
    _Bool mSendStatisticsLog;
    NSString *mCreateTime;
    long long buffering_start_time;
    long long buffering_end_time;
    int first_render_duration;
    long long beginCreatePlayerTime;
    long long endCreatePlayerTime;
    long long mCreatePlayerDuration;
    long long mPrepareToPlayDuration;
    long long mBeginGslb;
    long long mEndGslb;
    int mPullDuration;
    int mParseDuration;
    int mReceiveDuration;
    int mRenderDuration;
    int mGslbDuration;
    NSString *_mDecryptKeyStr;
    _Bool multiUrlSwitched;
    double mCurrentPlaybackTime;
    NSObject<OS_dispatch_source> *_switchTimeoutTimer;
    NSObject<OS_dispatch_source> *_timeoutTimer;
    NSObject<OS_dispatch_queue> *_timeoutQueue;
    NSObject<OS_dispatch_queue> *_prepareQueue;
    long long _timeoutDuration;
    _Bool _timeoutCancel;
    _Bool _needConfigAudioSession;
    _Bool _isSwitchUrling;
    _Bool _isSetShutdown;
    _Bool _isFinishPlay;
    _Bool _isSetLogCallback;
    NSObject<OS_dispatch_source> *_realTimeCallbackTimer;
    NSObject<OS_dispatch_source> *_syncCallbackTimer;
    double _realTimestamp;
    double _syncTimestamp;
    _Bool _isPreparedToPlay;
    _Bool _shouldAutoplay;
    _Bool _autoSwitchDefinition;
    _Bool _isNeedPostMsg;
    _Bool _isDidPostMsg;
    _Bool _isDelaySendStart;
    _Bool _isCancelDelaySend;
    _Bool _isVideoToolboxOpen;
    int _playbackState;
    int _loadState;
    float _playbackSpeed;
    UIView *_view;
    NELivePlayerCore *_playerCore;
    NELivePlayerDecryption *_decryptionManger;
    NELivePlayerStatistics *_statistcsManger;
    NELPSystemAction *_systemActionManger;
    NELivePlayerPlaylist *_playList;
    CDUnknownBlockType _switchResultBlock;
    long long _timeout;
    NELivePlayerNGBUrl *_gslbUrlManger;
    NELPGslbUrlModel *_gslbUrl;
    NELivePlayerUrl *_playerUrl;
    NSString *_pullUrlString;
    CDUnknownBlockType _realTimeCallBack;
    CDUnknownBlockType _syncTimeCallBack;
}

+ (id)getSDKVersion;
+ (id)getLogPath;
+ (void)setLogLevel:(long long)arg1;
@property(copy, nonatomic) CDUnknownBlockType syncTimeCallBack; // @synthesize syncTimeCallBack=_syncTimeCallBack;
@property(copy, nonatomic) CDUnknownBlockType realTimeCallBack; // @synthesize realTimeCallBack=_realTimeCallBack;
@property(retain, nonatomic) NSString *pullUrlString; // @synthesize pullUrlString=_pullUrlString;
@property(retain, nonatomic) NELivePlayerUrl *playerUrl; // @synthesize playerUrl=_playerUrl;
@property(retain, nonatomic) NELPGslbUrlModel *gslbUrl; // @synthesize gslbUrl=_gslbUrl;
@property(retain, nonatomic) NELivePlayerNGBUrl *gslbUrlManger; // @synthesize gslbUrlManger=_gslbUrlManger;
@property(nonatomic) _Bool isVideoToolboxOpen; // @synthesize isVideoToolboxOpen=_isVideoToolboxOpen;
@property(nonatomic) long long timeout; // @synthesize timeout=_timeout;
@property(nonatomic) _Bool isCancelDelaySend; // @synthesize isCancelDelaySend=_isCancelDelaySend;
@property(nonatomic) _Bool isDelaySendStart; // @synthesize isDelaySendStart=_isDelaySendStart;
@property(nonatomic) _Bool isDidPostMsg; // @synthesize isDidPostMsg=_isDidPostMsg;
@property(nonatomic) _Bool isNeedPostMsg; // @synthesize isNeedPostMsg=_isNeedPostMsg;
@property(copy, nonatomic) CDUnknownBlockType switchResultBlock; // @synthesize switchResultBlock=_switchResultBlock;
@property(retain, nonatomic) NELivePlayerPlaylist *playList; // @synthesize playList=_playList;
@property(retain, nonatomic) NELPSystemAction *systemActionManger; // @synthesize systemActionManger=_systemActionManger;
@property(retain, nonatomic) NELivePlayerStatistics *statistcsManger; // @synthesize statistcsManger=_statistcsManger;
@property(retain, nonatomic) NELivePlayerDecryption *decryptionManger; // @synthesize decryptionManger=_decryptionManger;
@property(retain, nonatomic) NELivePlayerCore *playerCore; // @synthesize playerCore=_playerCore;
@property(readonly, nonatomic) int loadState; // @synthesize loadState=_loadState;
@property(readonly, nonatomic) _Bool isPreparedToPlay; // @synthesize isPreparedToPlay=_isPreparedToPlay;
@property(readonly, nonatomic) UIView *view; // @synthesize view=_view;
- (void).cxx_destruct;
- (void)doDestoryRealTimeListenerTimer;
- (void)doCreateRealTimeListenerTimer:(double)arg1;
- (void)doDestorysyncTimeListenerTimer;
- (void)doCreatesyncTimeListenerTimer:(double)arg1;
- (void)setRealTimeListenerWithIntervalMS:(double)arg1 callback:(CDUnknownBlockType)arg2;
- (void)setSyncTimestampListenerWithIntervalMS:(double)arg1 callback:(CDUnknownBlockType)arg2;
@property(readonly, nonatomic) double currentSyncTimestamp;
@property(readonly, nonatomic) double currentPlaybackRealTime;
- (void)staticTimerGetUpdateData:(id)arg1;
- (void)setStatisticsLog:(_Bool)arg1;
- (void)SystemNeedResumePlayer;
- (void)SystemNeedPausePlayer:(CDUnknownBlockType)arg1;
- (int)SystemGetCurrentPlaybackState;
- (void)playerCorereceiveDecodeError:(id)arg1;
- (void)playerCoreReceiveHttpCodeResponse:(id)arg1 code:(int)arg2 header:(id)arg3;
- (void)playerCoreReceiveRenderFirstFrameDuration:(id)arg1 duration:(int)arg2 total:(int)arg3;
- (void)playerCoreReceiveFirstPktDuration:(id)arg1 duration:(int)arg2;
- (void)playerCoreReceiveParseStreamDuration:(id)arg1 duration:(int)arg2;
- (void)playerCoreReceiveNetConnectDuration:(id)arg1 duration:(int)arg2;
- (void)playerCoreReceiveFirstRenderDuration:(id)arg1 duration:(int)arg2;
- (void)playerCoreReceiveVideoParseError:(id)arg1;
- (void)playerCoreReceiveAudioRenderingStart:(id)arg1;
- (void)playerCoreReceiveVideoRenderingStart:(id)arg1;
- (void)playerCoreReceiveDecoderOpen:(id)arg1 isVideoToolboxOpen:(_Bool)arg2;
- (void)playerCoreReceiveSeekComplete:(id)arg1 target:(int)arg2 error:(int)arg3;
- (void)playerCoreReceiveStateChanged:(id)arg1;
- (void)playerCoreReceiveBuffingDuration:(id)arg1 duration:(int)arg2;
- (void)playerCoreReceiveBufferingTimeUpdate:(id)arg1 time:(int)arg2;
- (void)playerCoreReceiveBufferingUpdate:(id)arg1 position:(int)arg2 progress:(int)arg3;
- (void)playerCoreReceiveBufferingEnd:(id)arg1;
- (void)playerCoreReceiveBufferingStart:(id)arg1;
- (void)playerCoreReceiveSarChanged:(id)arg1 width:(long long)arg2 height:(long long)arg3;
- (void)playerCoreReceiveVideoSizeChanged:(id)arg1 width:(long long)arg2 height:(long long)arg3;
- (void)playerCoreReceiveComplete:(id)arg1;
- (void)playerCoreDidReceivePrepared:(id)arg1;
- (void)playerCoreWillReceivePrepared:(id)arg1;
- (void)playerCoreReceiveError:(id)arg1 error:(int)arg2;
- (void)doSwitchMultiMedia:(int)arg1 complete:(CDUnknownBlockType)arg2;
- (void)doSwitchToNextDefinition;
- (void)doDestorySwitchTimeOutTimer;
- (void)doCreateSwitchTimeOutTimer;
- (id)doStartIdxResolveWithUrl:(id)arg1;
- (void)doDestoryTimeOutTimer;
- (void)doCreatTimeOutTimer;
- (void)doStopGslb;
- (void)doStartGslb:(id)arg1;
- (void)doSetDecryptionKey:(id)arg1 complete:(CDUnknownBlockType)arg2;
- (void)doSetDecryptionTransferToken:(id)arg1 accid:(id)arg2 appKey:(id)arg3 token:(id)arg4 complete:(CDUnknownBlockType)arg5;
- (void)doHttpCallBackNote:(id)arg1;
- (void)changeNaturalSize;
- (void)doPrepareToPlay;
- (void)doResetInternalWithComplete:(CDUnknownBlockType)arg1;
- (void)doSwitchUrlInternal:(id)arg1 startTime:(double)arg2;
- (void)doResetPlayer:(id)arg1 options:(id)arg2 complete:(CDUnknownBlockType)arg3;
- (id)doSetupPlayerUrl:(id)arg1;
- (double)doGetDuration;
- (void)doRestart;
- (void)doSetScreenOn:(_Bool)arg1;
- (void)doPause;
- (void)doPlay;
- (void)getAudioQueue:(struct NELPAudioQueue *)arg1;
- (float)playbackRate;
- (void)setPlaybackRate:(float)arg1;
- (double)fpsAtOutput;
- (void)switchDecryptionKeyUrl:(id)arg1 key:(id)arg2 complete:(CDUnknownBlockType)arg3;
- (void)switchDecryptionUrl:(id)arg1 transferToken:(id)arg2 accid:(id)arg3 appKey:(id)arg4 token:(id)arg5 complete:(CDUnknownBlockType)arg6;
- (void)setDecryptionTransferToken:(id)arg1 accid:(id)arg2 appKey:(id)arg3 token:(id)arg4 complete:(CDUnknownBlockType)arg5;
- (void)setDecryptionKey:(id)arg1 complete:(CDUnknownBlockType)arg2;
@property(nonatomic) _Bool autoSwitchDefinition; // @synthesize autoSwitchDefinition=_autoSwitchDefinition;
@property(nonatomic) _Bool shouldAutoplay; // @synthesize shouldAutoplay=_shouldAutoplay;
@property(readonly, nonatomic) int playbackState; // @synthesize playbackState=_playbackState;
@property(readonly, nonatomic) double playableDuration;
@property(readonly, nonatomic) double duration;
@property(nonatomic) double currentPlaybackTime;
- (void)switchMultiMedia:(int)arg1 complete:(CDUnknownBlockType)arg2;
- (int)registerGetAudioRawDataCB:(CDUnknownBlockType)arg1;
- (int)registerGetVideoRawDataCB:(int)arg1 and:(CDUnknownBlockType)arg2;
- (int)switchContentUrl:(id)arg1;
- (void)setPlaybackTimeout:(long long)arg1;
- (void)setVolume:(float)arg1;
@property(nonatomic) float playbackSpeed; // @synthesize playbackSpeed=_playbackSpeed;
- (void)getAudioInfo:(struct NELPAudioInfo *)arg1;
- (void)getVideoInfo:(struct NELPVideoInfo *)arg1;
- (id)getSnapshot;
- (void)setHardwareDecoder:(_Bool)arg1;
- (void)setMute:(_Bool)arg1;
- (void)setScalingMode:(int)arg1;
- (void)setPauseInBackground:(_Bool)arg1;
- (void)shutdown;
- (_Bool)isPlaying;
- (void)pause;
- (void)play;
- (void)prepareToPlay;
- (void)setBufferStrategy:(int)arg1;
- (id)setPlayUrl:(id)arg1;
- (id)initWithContentURL:(id)arg1 needConfigAudioSession:(_Bool)arg2 withOptions:(id)arg3 error:(id *)arg4;
- (id)initWithNeedConfigAudioSession:(_Bool)arg1;
- (id)initWithContentURL:(id)arg1 needConfigAudioSession:(_Bool)arg2 error:(id *)arg3;
- (id)initWithContentURL:(id)arg1 error:(id *)arg2;
- (id)init;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

