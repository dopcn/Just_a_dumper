//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "TTElement.h"

@class AlignTextLayer, CALayer, ImageTextModel, NSDictionary, NSMutableArray, NSNumber, NSString, UIColor;

@interface TTTextElement : TTElement
{
    CALayer *m_bgLayer;
    AlignTextLayer *m_textLayer;
    CALayer *m_shadowLayer;
    CALayer *m_layer;
    CALayer *m_cornersLayer[2];
    ImageTextModel *m_textModel;
    _Bool m_bActive;
    int m_touchState;
    _Bool active;
    _Bool isActiveBeforeTouch;
    _Bool m_textModified;
    _Bool _isVertical;
    _Bool _isBlend;
    _Bool _isInPart;
    _Bool _textFromUserInput;
    _Bool _movieText;
    float _shadowRadius;
    float _vSpace;
    float _hSpace;
    float _moveSpeedX;
    float _moveSpeedY;
    double m_scale;
    NSString *_m_textContent;
    NSDictionary *_dictionary;
    NSString *_lang;
    NSString *_defaultValue;
    NSString *_currentValue;
    NSString *_location;
    NSString *_groupId;
    NSString *_relativeTo;
    NSString *_background;
    UIColor *_color;
    NSNumber *_charPerLine;
    NSString *_fontName;
    unsigned long long _lineCount;
    unsigned long long _maxLen;
    NSString *_align;
    double _fontSize;
    double _maxSize;
    double _minSize;
    long long _partIndex;
    UIColor *_shadowColor;
    UIColor *_strokeColor;
    NSNumber *_strokeRadius;
    NSString *_value;
    NSString *_format;
    NSString *_locale;
    NSMutableArray *_textPathPoints;
    AlignTextLayer *_textLayer;
    NSString *_m_strBgName;
    struct CGPoint m_centerPosition;
    struct CGSize m_size;
    struct CGSize _shadowOffset;
    struct CGSize _strokeOffset;
    struct CGRect m_textArea;
    struct UIEdgeInsets _clickOffset;
}

@property(copy) NSString *m_strBgName; // @synthesize m_strBgName=_m_strBgName;
@property(nonatomic) float moveSpeedY; // @synthesize moveSpeedY=_moveSpeedY;
@property(nonatomic) float moveSpeedX; // @synthesize moveSpeedX=_moveSpeedX;
@property(nonatomic) _Bool movieText; // @synthesize movieText=_movieText;
@property(nonatomic) _Bool textFromUserInput; // @synthesize textFromUserInput=_textFromUserInput;
@property(retain, nonatomic) AlignTextLayer *textLayer; // @synthesize textLayer=_textLayer;
@property(retain, nonatomic) NSMutableArray *textPathPoints; // @synthesize textPathPoints=_textPathPoints;
@property(retain, nonatomic) NSString *locale; // @synthesize locale=_locale;
@property(retain, nonatomic) NSString *format; // @synthesize format=_format;
@property(retain, nonatomic) NSString *value; // @synthesize value=_value;
@property(nonatomic) float hSpace; // @synthesize hSpace=_hSpace;
@property(nonatomic) float vSpace; // @synthesize vSpace=_vSpace;
@property(retain, nonatomic) NSNumber *strokeRadius; // @synthesize strokeRadius=_strokeRadius;
@property(nonatomic) struct CGSize strokeOffset; // @synthesize strokeOffset=_strokeOffset;
@property(retain, nonatomic) UIColor *strokeColor; // @synthesize strokeColor=_strokeColor;
@property(nonatomic) float shadowRadius; // @synthesize shadowRadius=_shadowRadius;
@property(nonatomic) struct CGSize shadowOffset; // @synthesize shadowOffset=_shadowOffset;
@property(retain, nonatomic) UIColor *shadowColor; // @synthesize shadowColor=_shadowColor;
@property(nonatomic) long long partIndex; // @synthesize partIndex=_partIndex;
@property(nonatomic) double minSize; // @synthesize minSize=_minSize;
@property(nonatomic) double maxSize; // @synthesize maxSize=_maxSize;
@property(nonatomic) double fontSize; // @synthesize fontSize=_fontSize;
@property(retain, nonatomic) NSString *align; // @synthesize align=_align;
@property(nonatomic) unsigned long long maxLen; // @synthesize maxLen=_maxLen;
@property(nonatomic) unsigned long long lineCount; // @synthesize lineCount=_lineCount;
@property(retain, nonatomic) NSString *fontName; // @synthesize fontName=_fontName;
@property(retain, nonatomic) NSNumber *charPerLine; // @synthesize charPerLine=_charPerLine;
@property(retain, nonatomic) UIColor *color; // @synthesize color=_color;
@property(retain, nonatomic) NSString *background; // @synthesize background=_background;
@property(retain, nonatomic) NSString *relativeTo; // @synthesize relativeTo=_relativeTo;
@property(retain, nonatomic) NSString *groupId; // @synthesize groupId=_groupId;
@property(retain, nonatomic) NSString *location; // @synthesize location=_location;
@property(retain, nonatomic) NSString *currentValue; // @synthesize currentValue=_currentValue;
@property(retain, nonatomic) NSString *defaultValue; // @synthesize defaultValue=_defaultValue;
@property(retain, nonatomic) NSString *lang; // @synthesize lang=_lang;
@property(retain, nonatomic) NSDictionary *dictionary; // @synthesize dictionary=_dictionary;
@property _Bool isInPart; // @synthesize isInPart=_isInPart;
@property _Bool isBlend; // @synthesize isBlend=_isBlend;
@property _Bool isVertical; // @synthesize isVertical=_isVertical;
@property(copy) NSString *m_textContent; // @synthesize m_textContent=_m_textContent;
@property(nonatomic) struct UIEdgeInsets clickOffset; // @synthesize clickOffset=_clickOffset;
@property int touchState; // @synthesize touchState=m_touchState;
@property struct CGRect m_textArea; // @synthesize m_textArea;
@property double m_scale; // @synthesize m_scale;
@property struct CGSize m_size; // @synthesize m_size;
@property _Bool m_textModified; // @synthesize m_textModified;
@property _Bool isActiveBeforeTouch; // @synthesize isActiveBeforeTouch;
@property struct CGPoint m_centerPosition; // @synthesize m_centerPosition;
- (void)scaleSelf:(float)arg1;
- (void)renderSelf:(struct CGContext *)arg1 contextSize:(struct CGSize)arg2 offset:(struct CGPoint)arg3;
- (void)touchesCancelled:(id)arg1 withEvent:(id)arg2;
- (_Bool)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (void)touchesMoved:(id)arg1 withEvent:(id)arg2;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (void)dragItem:(struct CGPoint)arg1 firstPosAfter:(struct CGPoint)arg2 secondPosBefore:(struct CGPoint)arg3 secondPosAfter:(struct CGPoint)arg4;
- (void)moveItem:(struct CGPoint)arg1;
- (struct CGPoint)getCenterPos;
- (struct CGSize)getItemSize;
- (_Bool)isPointInImage:(struct CGPoint)arg1;
- (id)getImageByPos:(struct CGPoint)arg1;
- (int)isPosInCorner:(struct CGPoint)arg1;
- (void)stopBarrageAnimation;
- (void)startBarrageAnimation;
- (void)removeBorderLayerColor;
- (void)changeBorderLayerColor;
- (void)updateLayer:(_Bool)arg1;
- (void)removeFromSuperLayer;
- (void)delayUpdateFunc1;
@property _Bool active; // @synthesize active;
- (void)setText:(id)arg1;
- (id)getText;
- (id)truncateString:(id)arg1 byMaxLen:(unsigned long long)arg2;
- (void)layout:(unsigned char)arg1;
- (void)updateCase:(id)arg1;
- (id)updateDate;
- (void)refreshDisplay:(id)arg1;
- (void)updateText:(_Bool)arg1;
- (void)updateExifLocation:(id)arg1 resetText:(_Bool)arg2 resetData:(_Bool)arg3;
- (void)updateExifDate:(id)arg1 resetText:(_Bool)arg2 resetData:(_Bool)arg3;
- (void)resetText:(_Bool)arg1 resetData:(_Bool)arg2;
- (void)addToCanvas:(id)arg1;
- (void)dealloc;
- (void)initTextItem;
- (id)initWithDictionary:(id)arg1 extraInfo:(id)arg2;

@end

