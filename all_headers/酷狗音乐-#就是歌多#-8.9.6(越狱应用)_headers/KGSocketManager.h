//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "KGSocketClientDelegate-Protocol.h"

@class AsyncSocket, KGMusicModel, NSLock, NSMutableArray, NSMutableData, NSMutableDictionary, NSString;
@protocol KGSocketManagerDelegate;

@interface KGSocketManager : NSObject <KGSocketClientDelegate>
{
    unsigned short _PCPort;
    int _status;
    long long _socketID;
    NSString *_PCIP;
    id <KGSocketManagerDelegate> _delegate;
    long long _numberOfFinishedMusics;
    AsyncSocket *_serverSocket;
    NSMutableDictionary *_connectedSockets;
    NSMutableDictionary *_socketStatus;
    NSMutableData *_commandPackage;
    NSLock *_connectedSocketLock;
    NSLock *_statusLock;
    NSMutableArray *_musics;
    KGMusicModel *_transferingMusic;
    NSMutableArray *_localMusicsList;
    KGMusicModel *_receivingMusic;
    NSString *_peerName;
    NSMutableDictionary *_dataSendingSockets;
    NSMutableDictionary *_protocolSendingSockets;
    NSLock *_musicsLock;
    long long _numberOfSongListConfirms;
}

@property long long numberOfSongListConfirms; // @synthesize numberOfSongListConfirms=_numberOfSongListConfirms;
@property(retain, nonatomic) NSLock *musicsLock; // @synthesize musicsLock=_musicsLock;
@property(retain, nonatomic) NSMutableDictionary *protocolSendingSockets; // @synthesize protocolSendingSockets=_protocolSendingSockets;
@property(retain, nonatomic) NSMutableDictionary *dataSendingSockets; // @synthesize dataSendingSockets=_dataSendingSockets;
@property(copy, nonatomic) NSString *peerName; // @synthesize peerName=_peerName;
@property(retain, nonatomic) KGMusicModel *receivingMusic; // @synthesize receivingMusic=_receivingMusic;
@property(retain, nonatomic) NSMutableArray *localMusicsList; // @synthesize localMusicsList=_localMusicsList;
@property(retain, nonatomic) KGMusicModel *transferingMusic; // @synthesize transferingMusic=_transferingMusic;
@property(retain, nonatomic) NSMutableArray *musics; // @synthesize musics=_musics;
@property(retain, nonatomic) NSLock *statusLock; // @synthesize statusLock=_statusLock;
@property(retain, nonatomic) NSLock *connectedSocketLock; // @synthesize connectedSocketLock=_connectedSocketLock;
@property(retain, nonatomic) NSMutableData *commandPackage; // @synthesize commandPackage=_commandPackage;
@property(retain, nonatomic) NSMutableDictionary *socketStatus; // @synthesize socketStatus=_socketStatus;
@property(retain, nonatomic) NSMutableDictionary *connectedSockets; // @synthesize connectedSockets=_connectedSockets;
@property(retain, nonatomic) AsyncSocket *serverSocket; // @synthesize serverSocket=_serverSocket;
@property long long numberOfFinishedMusics; // @synthesize numberOfFinishedMusics=_numberOfFinishedMusics;
@property(nonatomic) id <KGSocketManagerDelegate> delegate; // @synthesize delegate=_delegate;
@property unsigned short PCPort; // @synthesize PCPort=_PCPort;
@property(copy, nonatomic) NSString *PCIP; // @synthesize PCIP=_PCIP;
@property int status; // @synthesize status=_status;
@property long long socketID; // @synthesize socketID=_socketID;
- (id)songFileTempPathWithSongName:(id)arg1;
- (void)clearSongFileTempPath;
- (id)songFilePathWithSongName:(id)arg1 createOnExist:(_Bool)arg2 newName:(id *)arg3;
- (id)lyricsFilePathWithFileName:(id)arg1 create:(_Bool)arg2;
- (id)getNewNameForFile:(id)arg1 ifExistInDir:(id)arg2;
- (id)md5WithString:(id)arg1;
- (id)formatIPV4Address:(struct in_addr)arg1;
- (id)formatIPV6Address:(struct in6_addr)arg1;
- (id)localHost;
- (id)systemInfoKeyWithCommandID:(id)arg1;
- (id)keyWithStatus:(id)arg1 commandID:(id)arg2;
- (id)shortKeyWithCommandID:(id)arg1;
- (id)fileTransferCompleteKey;
- (id)packageData:(id)arg1;
- (id)lyricsComplete;
- (id)fileTransferComplete:(unsigned long long)arg1;
- (id)fileTransferFinish;
- (id)songListConfirm;
- (id)songListResponse;
- (id)systemInfoResponse;
- (id)keyWithCommandID:(id)arg1 songID:(id)arg2;
- (id)deleteSongResponseDataWithSongID:(long long)arg1;
- (id)heartBeatsResponseData;
- (id)localInfo;
- (id)disconnectData;
- (id)cancelQueuedSongResponse;
- (int)userID;
- (id)stringToData:(id)arg1;
- (id)dataToString:(id)arg1;
- (void)handleSongListInfo:(id)arg1;
- (void)writeDataToServer:(id)arg1 withTag:(long long)arg2 usingSocket:(id)arg3;
- (void)writeDataToServer:(id)arg1 withTag:(long long)arg2;
- (void)continueSendingMusicWithSocket:(id)arg1;
- (void)writeSongInfoToServerThread:(id)arg1;
- (void)advanceToNextSongWithIndex:(long long)arg1;
- (void)handleSongData:(id)arg1 forSocketID:(id)arg2;
- (void)handleSongInfo:(id)arg1 withData:(id)arg2 forSocketWithSocketID:(id)arg3;
- (void)handleLyricsData:(id)arg1 forSocketID:(id)arg2;
- (void)handleLyricsInfo:(id)arg1 withData:(id)arg2 forSocketID:(id)arg3;
- (void)handleDeletionWithSongID:(long long)arg1;
- (void)handleCanclationWithSongID:(long long)arg1;
- (void)sendHeartbeats;
- (void)handlePCLocalInfo:(id)arg1;
- (void)heartbeatsResponseTimeout;
- (void)heartbeatsTimeout;
- (void)markTransferringMusicStatus;
- (id)musicInMusicsWithSongID:(long long)arg1;
- (long long)indexOfMusicInMusics:(id)arg1;
- (void)handleData:(id)arg1 forSocketWithID:(id)arg2;
- (id)IDForSocket:(id)arg1;
- (id)statusOfSocketWithID:(id)arg1;
- (void)clientDidFinishSendingData:(id)arg1 withTag:(long long)arg2;
- (void)clientDidFinishSendingData:(id)arg1;
- (void)clientDidFailConnectToPC:(id)arg1;
- (_Bool)socketInDataSendingSocket:(id)arg1 withKey:(id *)arg2;
- (void)clientDidDisconnect:(id)arg1;
- (void)clientDidConnect:(id)arg1;
- (void)onSocket:(id)arg1 willDisconnectWithError:(id)arg2;
- (_Bool)onSocketWillConnect:(id)arg1;
- (void)onSocketDidDisconnect:(id)arg1;
- (void)onSocket:(id)arg1 didWriteDataWithTag:(long long)arg2;
- (void)onSocket:(id)arg1 didAcceptNewSocket:(id)arg2;
- (void)onSocket:(id)arg1 didReadData:(id)arg2 withTag:(long long)arg3;
- (void)onSocket:(id)arg1 didConnectToHost:(id)arg2 port:(unsigned short)arg3;
- (id)onSocket:(id)arg1 wantsRunLoopForNewSocket:(id)arg2;
- (void)deleteCurrentSongTempFile;
- (void)connectTimeout;
- (void)handleDisconnect;
- (void)cancelMusic:(id)arg1;
- (_Bool)musicsBeingTransferred;
- (void)addMusicsForSending:(id)arg1;
- (void)disconnect;
- (void)connect;
- (unsigned short)start;
- (void)setupServerSocket;
- (void)setIP:(id)arg1 port:(unsigned short)arg2;
- (id)init;
- (id)initWithIP:(id)arg1 port:(id)arg2;
- (void)releaseAllDanglingSockets;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

