//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

@class NSDictionary, NSString;
@protocol LoginOutHistorySaveOrCancelDelegate;

@interface User : NSObject
{
    _Bool _isMember;
    _Bool _isVerified;
    _Bool _showAlert;
    _Bool _isCompleteInfo;
    _Bool _isYoukuAccount;
    _Bool _guestLogined;
    int _ticketsCount;
    NSString *_name;
    NSString *_password;
    NSString *_uid;
    NSString *_imageUrl;
    NSString *_passport;
    NSString *_regionCode;
    NSDictionary *_dic;
    unsigned long long _touchIDLoginType;
    unsigned long long _credentialType;
    long long _memberType;
    NSString *_vipGrade;
    NSString *_rank;
    NSString *_validDays;
    NSString *_expireTime;
    NSDictionary *_thirdPartInfo;
    long long _curAccountType;
    NSString *_bindPhoneNum;
    NSString *_bindPhonePsw;
    NSString *_guestName;
    id <LoginOutHistorySaveOrCancelDelegate> _loginOutDelegate;
    NSDictionary *_memberAllInfo;
}

+ (void)updateUserMemberInfo;
+ (void)removeUserMemberInfoFromGroupUserDefaults;
+ (void)saveCookieToGroupUserDefaults;
+ (void)removeCookieFromGroupUserDefaults;
+ (void)removeUserInfoFromGroupUserDefaults;
+ (void)deleteCookie;
+ (void)loadCookie;
+ (void)saveCookie:(id)arg1;
+ (id)ysuid;
+ (id)stoken;
+ (id)yktk;
+ (_Bool)isGuestLogined;
+ (id)getBindPhoneNum;
+ (_Bool)isBindedPhoneNum;
+ (void)offline;
+ (void)loginOutWithOutSaveHistory;
+ (void)loginOut;
+ (void)loginOutPSP;
+ (_Bool)isLoginTypeByYoukuAccount;
+ (id)lastLoginName;
+ (void)clearSession;
+ (void)getUserInfoFromCache;
+ (void)tryOfflineLogin;
+ (void)tryAuthorizeByUserDefault;
+ (void)authorizedByBindPhoneNum;
+ (void)authorizeByUserDefault;
+ (_Bool)isSupportAuthorizeByUserDefault;
+ (_Bool)available;
+ (void)authorize:(id)arg1 md5Password:(id)arg2;
+ (void)authorizedByGuest:(id)arg1 md5Password:(id)arg2;
+ (void)syncUserDataWithHYUser:(id)arg1;
+ (void)changeGuestUserInfoWithHYUser:(id)arg1;
+ (void)checkToBindLoginAccount;
+ (void)authorize:(id)arg1 md5Password:(id)arg2 success:(CDUnknownBlockType)arg3 params:(id)arg4;
+ (void)authorize:(id)arg1 md5Password:(id)arg2 success:(CDUnknownBlockType)arg3;
+ (void)authorize:(id)arg1 password:(id)arg2 params:(id)arg3;
+ (void)authorize:(id)arg1 password:(id)arg2;
+ (void)authorizeWithCookie:(id)arg1 withYoukuAccount:(_Bool)arg2 acountYouKuType:(long long)arg3;
+ (void)changeUserInforWithHYUser:(id)arg1;
+ (void)authorizeWithCookie:(id)arg1 acountYoukuType:(long long)arg2;
+ (void)authorizeWithPhoneOrSnapshot:(id)arg1 withYoukuAccount:(_Bool)arg2;
+ (void)authorizeWithSnapshot:(id)arg1;
+ (void)authorizeWithPhone:(id)arg1;
+ (void)authorizeWithThirdPart:(id)arg1;
+ (void)authorizeWithThirdPart:(id)arg1 success:(CDUnknownBlockType)arg2;
+ (id)getPassportDateString;
+ (void)authorizeWeChatWithParams:(id)arg1 succeess:(CDUnknownBlockType)arg2;
+ (void)authorizeTaoBaoWithDictionary:(id)arg1;
+ (id)getUtdid;
+ (void)removeUserMemberInfoFromUserDefault;
+ (void)removeUserInfoFromUserDefault;
+ (id)encodeUid:(id)arg1;
+ (id)current;
+ (_Bool)isLogin;
@property(retain, nonatomic) NSDictionary *memberAllInfo; // @synthesize memberAllInfo=_memberAllInfo;
@property(nonatomic) __weak id <LoginOutHistorySaveOrCancelDelegate> loginOutDelegate; // @synthesize loginOutDelegate=_loginOutDelegate;
@property(nonatomic) int ticketsCount; // @synthesize ticketsCount=_ticketsCount;
@property(copy, nonatomic) NSString *guestName; // @synthesize guestName=_guestName;
@property(copy, nonatomic) NSString *bindPhonePsw; // @synthesize bindPhonePsw=_bindPhonePsw;
@property(copy, nonatomic) NSString *bindPhoneNum; // @synthesize bindPhoneNum=_bindPhoneNum;
@property(nonatomic) _Bool guestLogined; // @synthesize guestLogined=_guestLogined;
@property(nonatomic) long long curAccountType; // @synthesize curAccountType=_curAccountType;
@property(nonatomic) _Bool isYoukuAccount; // @synthesize isYoukuAccount=_isYoukuAccount;
@property(retain, nonatomic) NSDictionary *thirdPartInfo; // @synthesize thirdPartInfo=_thirdPartInfo;
@property(nonatomic) _Bool isCompleteInfo; // @synthesize isCompleteInfo=_isCompleteInfo;
@property(nonatomic) _Bool showAlert; // @synthesize showAlert=_showAlert;
@property(nonatomic) _Bool isVerified; // @synthesize isVerified=_isVerified;
@property(retain, nonatomic) NSString *expireTime; // @synthesize expireTime=_expireTime;
@property(retain, nonatomic) NSString *validDays; // @synthesize validDays=_validDays;
@property(retain, nonatomic) NSString *rank; // @synthesize rank=_rank;
@property(retain, nonatomic) NSString *vipGrade; // @synthesize vipGrade=_vipGrade;
@property(nonatomic) long long memberType; // @synthesize memberType=_memberType;
@property(nonatomic) _Bool isMember; // @synthesize isMember=_isMember;
@property(nonatomic) unsigned long long credentialType; // @synthesize credentialType=_credentialType;
@property(nonatomic) unsigned long long touchIDLoginType; // @synthesize touchIDLoginType=_touchIDLoginType;
@property(retain, nonatomic) NSDictionary *dic; // @synthesize dic=_dic;
@property(copy, nonatomic) NSString *regionCode; // @synthesize regionCode=_regionCode;
@property(copy, nonatomic) NSString *passport; // @synthesize passport=_passport;
@property(copy, nonatomic) NSString *imageUrl; // @synthesize imageUrl=_imageUrl;
@property(copy, nonatomic) NSString *uid; // @synthesize uid=_uid;
@property(copy, nonatomic) NSString *password; // @synthesize password=_password;
@property(copy, nonatomic) NSString *name; // @synthesize name=_name;
- (void).cxx_destruct;
- (void)requestForQueryingTicketsCount;
- (void)saveUserMemberInfoToGroupUserDefaults;
- (void)saveUserInfoToGroupUserDefaults;
- (void)initial;
- (void)syncVideoPlayBackHistory;
- (id)passwordMD5;
- (void)push;
- (id)historyObjectToString:(id)arg1;
- (id)syncKey;
- (void)storeUserMemberInfoToUserDefault;
- (void)storeUserInfoToUserDefault;
- (void)whetherIsMember;
- (void)memberInfoChangedFromVIP:(id)arg1;
- (void)dealloc;
- (id)init;
- (long long)getWithHYUserCredentialType:(unsigned long long)arg1;

@end

