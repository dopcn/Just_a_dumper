//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "YapDatabaseExtensionTransaction.h"

@class NSSet, YapDatabaseCloudKitConnection, YapDatabaseReadTransaction;

@interface YapDatabaseCloudKitTransaction : YapDatabaseExtensionTransaction
{
    YapDatabaseCloudKitConnection *parentConnection;
    YapDatabaseReadTransaction *databaseTransaction;
    NSSet *rowidsInMidMerge;
}

- (void).cxx_destruct;
- (id)requiresReadWriteTransactionException:(id)arg1;
- (void)getRecordChangeTag:(id *)arg1 hasPendingModifications:(_Bool *)arg2 hasPendingDelete:(_Bool *)arg3 forRecordID:(id)arg4 databaseIdentifier:(id)arg5;
- (_Bool)containsRecordID:(id)arg1 databaseIdentifier:(id)arg2;
- (id)recordForKey:(id)arg1 inCollection:(id)arg2;
- (id)recordForRecordID:(id)arg1 databaseIdentifier:(id)arg2;
- (_Bool)getRecordID:(id *)arg1 databaseIdentifier:(id *)arg2 forKey:(id)arg3 inCollection:(id)arg4;
- (id)collectionKeysForRecordID:(id)arg1 databaseIdentifier:(id)arg2;
- (_Bool)getKey:(id *)arg1 collection:(id *)arg2 forRecordID:(id)arg3 databaseIdentifier:(id)arg4;
- (_Bool)saveRecord:(id)arg1 databaseIdentifier:(id)arg2;
- (void)mergeRecord:(id)arg1 databaseIdentifier:(id)arg2;
- (void)detachRecordForKey:(id)arg1 inCollection:(id)arg2 wasRemoteDeletion:(_Bool)arg3 shouldUploadDeletion:(_Bool)arg4;
- (_Bool)attachRecord:(id)arg1 databaseIdentifier:(id)arg2 forKey:(id)arg3 inCollection:(id)arg4 shouldUploadRecord:(_Bool)arg5;
- (void)handleRemoveAllObjectsInAllCollections;
- (void)handleRemoveObjectsForKeys:(id)arg1 inCollection:(id)arg2 withRowids:(id)arg3;
- (void)handleRemoveObjectForCollectionKey:(id)arg1 withRowid:(long long)arg2;
- (void)handleTouchRowForCollectionKey:(id)arg1 withRowid:(long long)arg2;
- (void)handleTouchMetadataForCollectionKey:(id)arg1 withRowid:(long long)arg2;
- (void)handleTouchObjectForCollectionKey:(id)arg1 withRowid:(long long)arg2;
- (void)handleReplaceMetadata:(id)arg1 forCollectionKey:(id)arg2 withRowid:(long long)arg3;
- (void)handleReplaceObject:(id)arg1 forCollectionKey:(id)arg2 withRowid:(long long)arg3;
- (void)handleUpdateObject:(id)arg1 forCollectionKey:(id)arg2 withMetadata:(id)arg3 rowid:(long long)arg4;
- (void)handleInsertObject:(id)arg1 forCollectionKey:(id)arg2 withMetadata:(id)arg3 rowid:(long long)arg4;
- (void)_handleChangeWithRowid:(long long)arg1 collectionKey:(id)arg2 object:(id)arg3 metadata:(id)arg4 isInsert:(_Bool)arg5;
- (void)didRollbackTransaction;
- (void)didCommitTransaction;
- (void)flushPendingChangesToExtensionTables;
- (void)handleCompletedOperationWithChangeSet:(id)arg1 savedRecords:(id)arg2 deletedRecordIDs:(id)arg3;
- (void)handlePartiallyCompletedOperationWithChangeSet:(id)arg1 savedRecords:(id)arg2 deletedRecordIDs:(id)arg3;
- (void)removeQueueTableRowWithUUID:(id)arg1;
- (void)updateQueueTableRowWithChangeSet:(id)arg1;
- (void)insertQueueTableRowWithChangeSet:(id)arg1;
- (_Bool)getOwnerCount:(long long *)arg1 fromDiskForHash:(id)arg2;
- (void)removeAllRecordTableRows;
- (void)removeRecordTableRowWithHash:(id)arg1;
- (void)updateRecordTableRowWithHash:(id)arg1 record:(id)arg2 outSanitizedRecord:(id *)arg3;
- (void)maybeUpdateRecordTableRowWithHash:(id)arg1 info:(id)arg2;
- (void)insertRecordTableRowWithHash:(id)arg1 info:(id)arg2 outSanitizedRecord:(id *)arg3;
- (id)recordTableInfoForHashes:(id)arg1;
- (id)recordTableInfoForHash:(id)arg1 cacheResult:(_Bool)arg2;
- (id)mappingTableRowidsForRecordTableHash:(id)arg1;
- (void)removeAllMappingTableRows;
- (void)removeMappingTableRowWithRowid:(long long)arg1;
- (void)insertOrUpdateMappingTableRowWithRowid:(long long)arg1 info:(id)arg2;
- (id)mappingTableInfoForRowids:(id)arg1;
- (id)mappingTableInfoForRowid:(long long)arg1 cacheResult:(_Bool)arg2;
- (void)processRecord:(id)arg1 recordInfo:(id)arg2 preCalculatedHash:(id)arg3 forRowid:(long long)arg4 withPrevMappingTableInfo:(id)arg5 prevRecordTableInfo:(id)arg6 flags:(unsigned long long)arg7;
- (void)mergeChangedValuesFromRecord:(id)arg1 intoRecord:(id)arg2;
- (id)hashRecordID:(id)arg1 databaseIdentifier:(id)arg2;
- (id)queueTableName;
- (id)recordTableName;
- (id)mappingTableName;
- (id)registeredName;
- (id)extensionConnection;
- (id)databaseTransaction;
- (_Bool)repopulateTables;
- (_Bool)populateTables;
- (_Bool)restoreMasterChangeQueue;
- (_Bool)createNewMasterChangeQueue;
- (_Bool)createTables;
- (_Bool)prepareIfNeeded;
- (_Bool)createIfNeeded;
- (id)initWithParentConnection:(id)arg1 databaseTransaction:(id)arg2;

@end

