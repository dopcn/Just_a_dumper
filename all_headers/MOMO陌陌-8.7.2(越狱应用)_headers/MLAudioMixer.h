//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

@class NSMutableArray, NSMutableDictionary;

@interface MLAudioMixer : NSObject
{
    int _sampleRate;
    int _channel;
    CDUnknownBlockType _audioBufferProcessingCallback;
    NSMutableArray *_trackIds;
    NSMutableDictionary *_audioConverts;
    NSMutableDictionary *_trackPCMBuffers;
    NSMutableDictionary *_trackVolumes;
    struct opaqueCMFormatDescription *_audioBufferFormatDesc;
    struct AudioStreamBasicDescription _audioBufferFormat;
}

@property(nonatomic) struct opaqueCMFormatDescription *audioBufferFormatDesc; // @synthesize audioBufferFormatDesc=_audioBufferFormatDesc;
@property(nonatomic) struct AudioStreamBasicDescription audioBufferFormat; // @synthesize audioBufferFormat=_audioBufferFormat;
@property(retain, nonatomic) NSMutableDictionary *trackVolumes; // @synthesize trackVolumes=_trackVolumes;
@property(retain, nonatomic) NSMutableDictionary *trackPCMBuffers; // @synthesize trackPCMBuffers=_trackPCMBuffers;
@property(retain, nonatomic) NSMutableDictionary *audioConverts; // @synthesize audioConverts=_audioConverts;
@property(retain, nonatomic) NSMutableArray *trackIds; // @synthesize trackIds=_trackIds;
@property(nonatomic) int channel; // @synthesize channel=_channel;
@property(nonatomic) int sampleRate; // @synthesize sampleRate=_sampleRate;
@property(copy, nonatomic) CDUnknownBlockType audioBufferProcessingCallback; // @synthesize audioBufferProcessingCallback=_audioBufferProcessingCallback;
- (void).cxx_destruct;
- (struct opaqueCMSampleBuffer *)createAudioSampleBuffer:(id)arg1 channelCount:(unsigned long long)arg2 audioTime:(CDStruct_1b6d18a9)arg3;
- (void)mixAudioSamples:(id)arg1 slaverSamples:(id)arg2 slaverVolume:(float)arg3;
- (id)getDataFromAudioSampleBuffer:(struct opaqueCMSampleBuffer *)arg1 of:(int)arg2;
- (void)processAudioSampleBuffer:(struct opaqueCMSampleBuffer *)arg1 to:(int)arg2;
- (float)getMixVolume:(int)arg1;
- (void)setMixVolume:(float)arg1 to:(int)arg2;
- (void)setAudioTrack:(int)arg1 enable:(_Bool)arg2;
- (void)dealloc;
- (id)initWithSampleRate:(int)arg1 channel:(int)arg2;

@end

