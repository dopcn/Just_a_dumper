//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "BaseDBDao.h"

@class NSMutableDictionary;

@interface LocalMusicDBDao : BaseDBDao
{
    NSMutableDictionary *_localNewPromptDic;
}

+ (id)shareInstance;
@property(retain, nonatomic) NSMutableDictionary *localNewPromptDic; // @synthesize localNewPromptDic=_localNewPromptDic;
- (void).cxx_destruct;
- (id)matchTagInfoOfSongList:(id)arg1;
- (id)allMatchedTagInfoSongsWithTagParentId:(long long)arg1 bySortStr:(id)arg2;
- (id)allMatchedTagInfoSongsWithTagParentId:(long long)arg1;
- (id)allMatchedTagInfoSongsByUserSortValueWithTagParentId:(long long)arg1;
- (id)allMatchedTagInfoSongsByPlayCountWithTagParentId:(long long)arg1;
- (id)allMatchedTagInfoSongsByAddTimeWithTagParentId:(long long)arg1 isAscend:(_Bool)arg2;
- (id)allMatchedTagInfoSongArray;
- (id)selectLocalRecommendSourceMusicWithLimit:(int)arg1;
- (id)selectPrivateFMRelatedDetailsWithLimit:(int)arg1;
- (id)getAllCachedFileHash;
- (_Bool)updateMVHashAndMVMatchedTimeWithSongInfo:(id)arg1 error:(id *)arg2;
- (id)mvMatchedTimeWithSongInfo:(id)arg1;
- (_Bool)existSongByLikeName:(id)arg1;
- (_Bool)existSongByMusicname:(id)arg1;
- (_Bool)existSongByPath:(id)arg1;
- (_Bool)existSongByHash:(id)arg1;
- (_Bool)existSongByHash:(id)arg1 qualityType:(int)arg2;
- (_Bool)existSongByHash:(id)arg1 andPath:(id)arg2 qualityType:(int)arg3;
- (_Bool)existSongByHash:(id)arg1 andPath:(id)arg2;
- (_Bool)existIpodSongBySongid:(unsigned long long)arg1;
- (_Bool)existSongBySongid:(unsigned long long)arg1;
- (_Bool)existSongBySongid:(unsigned long long)arg1 qualityType:(int)arg2;
- (_Bool)existSongBySql:(id)arg1;
- (_Bool)showiPodSongInfo:(id)arg1;
- (_Bool)hideiPodSongInfo:(id)arg1;
- (void)hideiPodSongInfoes:(id)arg1;
- (_Bool)hideAlliPodSongs;
- (_Bool)deleteLocalMusicByRowId:(unsigned long long)arg1;
- (_Bool)deleteLocalMusicByPath:(id)arg1;
- (_Bool)deleteAllOldShareSongs;
- (_Bool)deleteAllIpodSongs;
- (_Bool)deleteLocalMusicType:(long long)arg1;
- (void)deleteSongInfos:(id)arg1;
- (void)deleteSongInfo:(id)arg1 qualityType:(int)arg2 error:(id *)arg3;
- (void)updateAutoDownloadDeleteFlagWithSongs:(id)arg1;
- (void)updateAutoDownloadDeleteFlag:(id)arg1;
- (id)queryAllExistSongDicBySongIdAndQualityTypeFromSourceArray:(id)arg1;
- (id)queryAllNotExistInLocalMusicFromSongArrayByMusicPath:(id)arg1;
- (id)queryBatchSongInfoByHashOrSongId:(id)arg1;
- (id)querySongInfosByHashAndHighestQualityTypeWithSongInfoList:(id)arg1;
- (id)localSongsWithSongInfoArray:(id)arg1;
- (id)localSongInfoBySongId:(unsigned long long)arg1;
- (id)localSongInfoByRowId:(int)arg1;
- (id)localSongInfoByMusicName:(id)arg1 musicType:(long long)arg2;
- (id)localTopQualitySongInfoByHash:(id)arg1 quality:(int)arg2;
- (id)localSongInfoByHash:(id)arg1;
- (id)querySongInofsSortByUserSortValueAndAddTime;
- (id)queryHashSongInfosSortByUserSortValueAndAddTime;
- (id)queryHashSongInfosSortByPlayCount;
- (id)querySongInofsSortByPlayCount;
- (id)queryHashSongInfosSortByAddTimeIsAscend:(_Bool)arg1;
- (id)querySongInofsSortByAddTimeIsAscend:(_Bool)arg1;
- (id)localTransferSongInfoBySongId:(unsigned long long)arg1;
- (id)localSongsWithUnkownAlbum;
- (id)localSongsWithAlbumId:(long long)arg1;
- (id)queryAllLocalSongsOfCollectWithSql:(id)arg1;
- (id)allLocalSongsInLocalCollection;
- (id)allLocalSongsInNetCollectionCollectUserId:(id)arg1;
- (id)resultToSongInfo:(id)arg1;
- (id)findAllIpodMusiPath;
- (id)findAllKgMusicPath;
- (id)loadShareSongs;
- (id)allIpodMusicWithDelete:(_Bool)arg1;
- (id)allIpodMusicWithSortSql:(id)arg1;
- (id)allIpodMusicSortByUserSortValue;
- (id)allIpodMusicSortByPlayTimes;
- (id)allIpodMusicSortByAddTimeIsAscend:(_Bool)arg1;
- (id)allIpodMusic;
- (long long)countOfDownload;
- (long long)countOfIpodIncludeHide:(_Bool)arg1;
- (long long)countOfLocal;
- (id)qeuryAllSongInfoWithAlbum;
- (long long)countOfAllSongInfoWithAlbum;
- (id)qeuryAllLocalSingers;
- (id)queryAllSongsUpload4PCOrderbyPlayCount;
- (id)queryAllSongsUpload4PCOrderbyAddTimeIsAscend:(_Bool)arg1;
- (id)queryAllSongsUpload4PC;
- (id)qeuryAllSongInfoNotKTV;
- (id)qeuryAllSongInfoNotKTVAndNotIPodSortByDefault;
- (id)qeuryAllSongInfoNotKTVAndNotIPodSortByPlayCount;
- (id)qeuryAllSongInfoNotKTVAndNotIPodSortByAddTimeIsAscend:(_Bool)arg1;
- (id)queryAllSongInfoNotKTVAndNotIPodNotShareSong;
- (id)qeuryAllSongInfoNotKTVAndNotIPod;
- (id)queryAllSongInfoHaveHash;
- (id)qeuryAllSongInfo;
- (_Bool)updateSongInfoInfoType:(id)arg1 AndError:(id *)arg2;
- (void)updateSongUserSortSongInfos:(id)arg1 AndError:(id *)arg2;
- (void)updateSongInfoPlayCount:(id)arg1 AndError:(id *)arg2;
- (_Bool)updateSongs:(id)arg1 error:(id *)arg2;
- (void)updateSongInfo:(id)arg1 AndError:(id *)arg2;
- (_Bool)insertSongs:(id)arg1 error:(id *)arg2;
- (_Bool)insertSongInfo:(id)arg1 AndError:(id *)arg2;
- (_Bool)addSongInfos:(id)arg1 error:(id *)arg2;
- (void)addSongInfo:(id)arg1 error:(id *)arg2;
- (id)localNewPromptPath;
- (void)removeOldPrompt:(id)arg1;
- (void)deleteLocalNewPromptToFile;
- (void)readLocalNewPromptToFile;
- (void)writeLocalNewPromptToFile;
- (void)addSongsToLocalNewPromptPlist:(id)arg1;
- (void)addLocalNewPromptToPlist:(id)arg1;
- (id)songIdAndQualityTypeKeyOfSong:(id)arg1;
- (id)songTagMapTable;
- (id)tagInfoTable;
- (id)musicTable;
- (id)table;

@end

