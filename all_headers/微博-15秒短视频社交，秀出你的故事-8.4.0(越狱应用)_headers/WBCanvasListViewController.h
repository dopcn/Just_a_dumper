//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "WBCanvasTableViewController.h"

#import "UIViewControllerTransitioningDelegate-Protocol.h"
#import "WBCanvasItemViewEventDelegate-Protocol.h"
#import "WBContactRecentPickerViewControllerDelegate-Protocol.h"
#import "WBMediaAutoPlayContainer-Protocol.h"
#import "WBVideoPlayerControllerDelegate-Protocol.h"

@class NSArray, NSString, NSValue, UIImageView, UIView, WBCanvasListViewAnimator, WBCanvasListViewCell, WBCanvasLoadingView, WBCanvasResult, WBCanvasVideoPlayerController, WBMediaAutoPlayManager, WBTableView, WBViewController;
@protocol WBMediaPlaybackService, WBVideoPlayerSourceView;

@interface WBCanvasListViewController : WBCanvasTableViewController <WBContactRecentPickerViewControllerDelegate, WBCanvasItemViewEventDelegate, WBVideoPlayerControllerDelegate, WBMediaAutoPlayContainer, UIViewControllerTransitioningDelegate>
{
    struct {
        unsigned int presentFinished:1;
        unsigned int canvasFingerprintingUpdated:1;
    } _flags;
    _Bool _statusBarHidden;
    _Bool _originalStatusBarHidden;
    WBTableView *mediaPlaybackTableView;
    NSString *_canvasId;
    NSValue *_SourceViewRect;
    WBCanvasListViewAnimator *_animator;
    UIImageView *_sliderView;
    WBCanvasLoadingView *_loadingView;
    WBCanvasResult *_canvasResult;
    long long _maxCanvasPage;
    double _startTime;
    double _endTime;
    WBCanvasVideoPlayerController *_playerController;
    WBMediaAutoPlayManager *_playbackManager;
    UIView<WBVideoPlayerSourceView> *_timelineSourceView;
    WBCanvasListViewCell *_playingCell;
    WBViewController *_presentedInViewController;
    long long _originalStatusBarStyle;
    long long _playbackState;
    UIView *_timelineImageSourceView;
    UIImageView *_sourceImageView;
    id _audioSessionHandler;
    double _canvasKeyboardOffset;
    struct CGPoint _startDragOffset;
    struct CGRect _sourceFrameOnScreen;
}

@property(nonatomic) double canvasKeyboardOffset; // @synthesize canvasKeyboardOffset=_canvasKeyboardOffset;
@property(retain, nonatomic) id audioSessionHandler; // @synthesize audioSessionHandler=_audioSessionHandler;
@property(retain, nonatomic) UIImageView *sourceImageView; // @synthesize sourceImageView=_sourceImageView;
@property(nonatomic) __weak UIView *timelineImageSourceView; // @synthesize timelineImageSourceView=_timelineImageSourceView;
@property(nonatomic) long long playbackState; // @synthesize playbackState=_playbackState;
@property(nonatomic) _Bool originalStatusBarHidden; // @synthesize originalStatusBarHidden=_originalStatusBarHidden;
@property(nonatomic) long long originalStatusBarStyle; // @synthesize originalStatusBarStyle=_originalStatusBarStyle;
@property(nonatomic) struct CGRect sourceFrameOnScreen; // @synthesize sourceFrameOnScreen=_sourceFrameOnScreen;
@property(nonatomic) __weak WBViewController *presentedInViewController; // @synthesize presentedInViewController=_presentedInViewController;
@property(retain, nonatomic) WBCanvasListViewCell *playingCell; // @synthesize playingCell=_playingCell;
@property(nonatomic) __weak UIView<WBVideoPlayerSourceView> *timelineSourceView; // @synthesize timelineSourceView=_timelineSourceView;
@property(retain, nonatomic) WBMediaAutoPlayManager *playbackManager; // @synthesize playbackManager=_playbackManager;
@property(retain, nonatomic) WBCanvasVideoPlayerController *playerController; // @synthesize playerController=_playerController;
@property(nonatomic) double endTime; // @synthesize endTime=_endTime;
@property(nonatomic) double startTime; // @synthesize startTime=_startTime;
@property(nonatomic) long long maxCanvasPage; // @synthesize maxCanvasPage=_maxCanvasPage;
@property(nonatomic) struct CGPoint startDragOffset; // @synthesize startDragOffset=_startDragOffset;
@property(nonatomic) _Bool statusBarHidden; // @synthesize statusBarHidden=_statusBarHidden;
@property(retain, nonatomic) WBCanvasResult *canvasResult; // @synthesize canvasResult=_canvasResult;
@property(retain, nonatomic) WBCanvasLoadingView *loadingView; // @synthesize loadingView=_loadingView;
@property(retain, nonatomic) UIImageView *sliderView; // @synthesize sliderView=_sliderView;
@property(retain, nonatomic) WBCanvasListViewAnimator *animator; // @synthesize animator=_animator;
@property(retain, nonatomic) NSValue *SourceViewRect; // @synthesize SourceViewRect=_SourceViewRect;
@property(copy, nonatomic) NSString *canvasId; // @synthesize canvasId=_canvasId;
@property(readonly, nonatomic) WBTableView *mediaPlaybackTableView; // @synthesize mediaPlaybackTableView;
- (void).cxx_destruct;
- (void)viewWillTransitionToSize:(struct CGSize)arg1 withTransitionCoordinator:(id)arg2;
- (id)firstCanvasItem;
- (void)loadDataFromLocal;
- (void)requestCanvasExtendPropertyFromNetwork;
- (void)requestCanvasFromNetWork;
- (void)fectchData;
- (double)desiredBaseContentInsetTop;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (void)sendCloseLog;
- (void)dealloc;
- (id)analysisFeatureCode;
- (id)init;
- (id)initWithCanvasId:(id)arg1 params:(id)arg2;
- (id)initWithOpenUrlLink:(id)arg1 inAppParas:(struct NSMutableDictionary *)arg2;
- (id)generateWithOpenUrlLink:(id)arg1 inAppParas:(struct NSMutableDictionary *)arg2;
- (void)prepareForDismissSourceImageAnimationForVideo;
- (void)prepareForDismissSourceImageAnimation;
- (void)prepareForDismissSourceVidefoAnimation;
- (void)animateSourceVideoViewWithDuration:(double)arg1 animations:(CDUnknownBlockType)arg2 completion:(CDUnknownBlockType)arg3;
- (void)animateSourceImageViewBackWithDuration:(double)arg1 animations:(CDUnknownBlockType)arg2 completion:(CDUnknownBlockType)arg3;
- (void)animateSourceImageViewWithDuration:(double)arg1 animations:(CDUnknownBlockType)arg2 completion:(CDUnknownBlockType)arg3;
- (void)finishForPresentSourceImageAnimation;
- (void)prepareForPresentSourceImageAnimation;
- (void)_scrollDownForContentOffset:(struct CGPoint)arg1 targetContentOffset:(inout struct CGPoint *)arg2;
- (void)_scrollUpForContentOffset:(struct CGPoint)arg1 targetContentOffset:(inout struct CGPoint *)arg2;
- (id)_screenLastCellIndexPath;
- (id)_screenFirstCellIndexPath;
- (void)animate_scrollViewWillEndDragging:(id)arg1 withVelocity:(struct CGPoint)arg2 targetContentOffset:(inout struct CGPoint *)arg3;
- (void)animate_scrollViewWillBeginDragging:(id)arg1;
- (void)scrollViewDidScroll:(id)arg1;
- (id)animationControllerForDismissedController:(id)arg1;
- (id)animationControllerForPresentedController:(id)arg1 presentingController:(id)arg2 sourceController:(id)arg3;
- (_Bool)_animateConditionEnableForItem:(id)arg1;
- (_Bool)animateConditionEnable;
- (void)contactRecentPickerViewController:(id)arg1 shareToPrivateMessageWithUserTarget:(id)arg2;
- (void)LikeCanvas:(id)arg1;
- (void)handleCanvasContactFollow:(id)arg1;
- (void)followCanvasUser:(id)arg1;
- (void)repostCanvasToWeiboMessage:(id)arg1;
- (void)repostCanvasToWeibo:(id)arg1;
- (void)shareButtonPressed:(id)arg1;
- (_Bool)prefersStatusBarHidden;
- (void)canvasAdaptKeyboardByRect:(struct CGRect)arg1 animationCurve:(long long)arg2 animationDuration:(double)arg3;
- (id)findFirstResponderFromView:(id)arg1;
- (void)canvasKeyboardWillHide:(id)arg1;
- (void)canvasKeyboardWillShow:(id)arg1;
- (void)_openScheme:(id)arg1;
- (void)pressedCanvasBtn:(id)arg1 withBtnItem:(id)arg2;
- (void)itemView:(id)arg1 triggeredEvent:(unsigned long long)arg2 withObject:(id)arg3;
- (void)tableView:(id)arg1 didEndDisplayingCell:(id)arg2 forRowAtIndexPath:(id)arg3;
- (double)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (id)canvasForIndexPath:(id)arg1;
- (id)itemForIndexPath:(id)arg1;
- (id)_generateCellForItem:(id)arg1 tableView:(id)arg2;
- (id)cellForIndexPath:(id)arg1;
- (_Bool)isSourceViewOnScreen;
- (id)firstCanvasVideoItemView;
- (id)screenFirstCanvasItemView;
- (id)firstCanvasItemView;
- (void)scrollViewWillEndDragging:(id)arg1 withVelocity:(struct CGPoint)arg2 targetContentOffset:(inout struct CGPoint *)arg3;
- (void)scrollViewWillBeginDragging:(id)arg1;
- (void)scrollViewDidEndDecelerating:(id)arg1;
- (void)hideLoading;
- (void)showLoading;
- (void)hideSlider;
- (void)showSliderWithAnimate:(_Bool)arg1;
- (void)closeButtonPressed:(id)arg1;
- (void)configLoadingView;
- (void)resetSliderView;
- (void)configSlider;
- (void)showNavigationBar;
- (void)resetNavigationBar;
- (void)resetNavigationRightBarButtonItem;
- (void)configNavigationBar;
- (void)configTableView;
@property(readonly, nonatomic) NSArray *currentMediaAutoPlayProviderCandidates;
@property(readonly, nonatomic) id <WBMediaPlaybackService> mediaPlaybackService;
- (_Bool)videoPlayerController:(id)arg1 shouldEnterFullscreenAnimated:(_Bool)arg2;
- (_Bool)videoPlayerController:(id)arg1 shouldEnterFullscreenByPressingPlayButton:(id)arg2;
- (_Bool)videoPlayerController:(id)arg1 shouldEnterFullscreenByPressingFullScreenButton:(id)arg2;
- (_Bool)shouldPlayToEndWithVideoPlayerController:(id)arg1;
- (void)videoPlayerController:(id)arg1 didChangeVideoPlayerItem:(id)arg2;
- (void)presentFromViewController:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)presentCanvasListWithSourceView:(id)arg1;
- (void)prepareVideoViewForPresentTransitioning;
- (id)_firstCanvasVideoView;
- (void)setupVideoStuff;
- (void)deallocVideo;
- (void)cancelPlay;
- (void)playForVideoItemView:(id)arg1;
- (void)playVideoIfNeeded;
- (id)initWithSourceView:(id)arg1 params:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly, nonatomic) _Bool generalMediaAutoPlayEnabledWhenContainedInAnotherContainer;
@property(readonly, nonatomic) _Bool generalMediaAutoPlayIgnored;
@property(readonly) unsigned long long hash;
@property(readonly, nonatomic) _Bool mediaAutoPlayShouldStartNow;
@property(readonly, nonatomic) struct CGRect mediaAutoPlayVisibleRect;
@property(readonly) Class superclass;

@end

