//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class NSData, NSDictionary, NSError, NSHTTPURLResponse, NSMutableArray, NSString, NSURLRequest, NSURLSessionTask;
@protocol MMYTKRequestDelegate;

@interface MMYTKBaseRequest : NSObject
{
    NSURLSessionTask *_requestTask;
    NSData *_responseData;
    NSString *_responseString;
    id _responseObject;
    id _responseJSONObject;
    NSError *_error;
    long long _tag;
    NSDictionary *_userInfo;
    id <MMYTKRequestDelegate> _delegate;
    CDUnknownBlockType _successCompletionBlock;
    CDUnknownBlockType _failureCompletionBlock;
    NSMutableArray *_requestAccessories;
    CDUnknownBlockType _constructingBodyBlock;
    NSString *_resumableDownloadPath;
    CDUnknownBlockType _resumableDownloadProgressBlock;
    long long _requestPriority;
}

@property(nonatomic) long long requestPriority; // @synthesize requestPriority=_requestPriority;
@property(copy, nonatomic) CDUnknownBlockType resumableDownloadProgressBlock; // @synthesize resumableDownloadProgressBlock=_resumableDownloadProgressBlock;
@property(retain, nonatomic) NSString *resumableDownloadPath; // @synthesize resumableDownloadPath=_resumableDownloadPath;
@property(copy, nonatomic) CDUnknownBlockType constructingBodyBlock; // @synthesize constructingBodyBlock=_constructingBodyBlock;
@property(retain, nonatomic) NSMutableArray *requestAccessories; // @synthesize requestAccessories=_requestAccessories;
@property(copy, nonatomic) CDUnknownBlockType failureCompletionBlock; // @synthesize failureCompletionBlock=_failureCompletionBlock;
@property(copy, nonatomic) CDUnknownBlockType successCompletionBlock; // @synthesize successCompletionBlock=_successCompletionBlock;
@property(nonatomic) __weak id <MMYTKRequestDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) NSDictionary *userInfo; // @synthesize userInfo=_userInfo;
@property(nonatomic) long long tag; // @synthesize tag=_tag;
@property(retain, nonatomic) NSError *error; // @synthesize error=_error;
@property(retain, nonatomic) id responseJSONObject; // @synthesize responseJSONObject=_responseJSONObject;
@property(retain, nonatomic) id responseObject; // @synthesize responseObject=_responseObject;
@property(retain, nonatomic) NSString *responseString; // @synthesize responseString=_responseString;
@property(retain, nonatomic) NSData *responseData; // @synthesize responseData=_responseData;
@property(retain, nonatomic) NSURLSessionTask *requestTask; // @synthesize requestTask=_requestTask;
- (void).cxx_destruct;
- (id)description;
- (_Bool)statusCodeValidator;
- (id)jsonValidator;
- (_Bool)allowsCellularAccess;
- (_Bool)useCDN;
- (id)buildCustomUrlRequest;
- (id)requestHeaderFieldValueDictionary;
- (id)requestAuthorizationHeaderFieldArray;
- (long long)responseSerializerType;
- (long long)requestSerializerType;
- (long long)requestMethod;
- (id)cacheFileNameFilterForRequestArgument:(id)arg1;
- (id)requestArgument;
- (double)requestTimeoutInterval;
- (id)baseUrl;
- (id)cdnUrl;
- (id)requestUrl;
- (void)requestFailedFilter;
- (void)requestFailedPreprocessor;
- (void)requestCompleteFilter;
- (void)requestCompletePreprocessor;
- (void)startWithCompletionBlockWithSuccess:(CDUnknownBlockType)arg1 failure:(CDUnknownBlockType)arg2;
- (void)stop;
- (void)start;
- (void)addAccessory:(id)arg1;
- (void)clearCompletionBlock;
- (void)setCompletionBlockWithSuccess:(CDUnknownBlockType)arg1 failure:(CDUnknownBlockType)arg2;
@property(readonly, nonatomic, getter=isExecuting) _Bool executing;
@property(readonly, nonatomic, getter=isCancelled) _Bool cancelled;
@property(readonly, nonatomic) NSURLRequest *originalRequest;
@property(readonly, nonatomic) NSURLRequest *currentRequest;
@property(readonly, nonatomic) NSDictionary *responseHeaders;
@property(readonly, nonatomic) long long responseStatusCode;
@property(readonly, nonatomic) NSHTTPURLResponse *response;
- (void)toggleAccessoriesDidStopCallBack;
- (void)toggleAccessoriesWillStopCallBack;
- (void)toggleAccessoriesWillStartCallBack;

@end

