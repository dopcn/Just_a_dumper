//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

#import "M9Observable-Protocol.h"
#import "M9ObservablePrivate-Protocol.h"
#import "M9ObservableProtected-Protocol.h"

@class NSArray, NSMutableArray, NSMutableDictionary, NSRecursiveLock, NSString, Reachability;

@interface SVPDownloadManager : NSObject <M9Observable, M9ObservableProtected, M9ObservablePrivate>
{
    NSMutableArray *_observers;
    long long _maxConcurrentTaskCount;
    CDUnknownBlockType _taskAddedBlock;
    CDUnknownBlockType _tasksAddedBlock;
    CDUnknownBlockType _taskRemovedBlock;
    CDUnknownBlockType _tasksRemovedBlock;
    NSMutableArray *_privateDownloadTasks;
    NSRecursiveLock *_lock;
    Reachability *_reachability;
    NSString *_privateDownloadBasePath;
    NSMutableDictionary *_downloadTasksToBeRestored;
}

+ (id)sharedManager;
@property(retain, nonatomic) NSMutableDictionary *downloadTasksToBeRestored; // @synthesize downloadTasksToBeRestored=_downloadTasksToBeRestored;
@property(copy, nonatomic) NSString *privateDownloadBasePath; // @synthesize privateDownloadBasePath=_privateDownloadBasePath;
@property(retain, nonatomic) Reachability *reachability; // @synthesize reachability=_reachability;
@property(retain, nonatomic) NSRecursiveLock *lock; // @synthesize lock=_lock;
@property(retain, nonatomic) NSMutableArray *privateDownloadTasks; // @synthesize privateDownloadTasks=_privateDownloadTasks;
@property(copy, nonatomic) CDUnknownBlockType tasksRemovedBlock; // @synthesize tasksRemovedBlock=_tasksRemovedBlock;
@property(copy, nonatomic) CDUnknownBlockType taskRemovedBlock; // @synthesize taskRemovedBlock=_taskRemovedBlock;
@property(copy, nonatomic) CDUnknownBlockType tasksAddedBlock; // @synthesize tasksAddedBlock=_tasksAddedBlock;
@property(copy, nonatomic) CDUnknownBlockType taskAddedBlock; // @synthesize taskAddedBlock=_taskAddedBlock;
@property long long maxConcurrentTaskCount; // @synthesize maxConcurrentTaskCount=_maxConcurrentTaskCount;
@property(retain, nonatomic) NSMutableArray *observers; // @synthesize observers=_observers;
- (void).cxx_destruct;
- (void)removeDownloadTaskObject:(id)arg1;
- (void)addDownloadTaskObject:(id)arg1;
- (_Bool)canStartMoreConcurrentTasks;
- (_Bool)isNetworkAvailableToDownload;
- (void)handleTaskError:(id)arg1;
- (void)retryDownloadTasks;
- (void)retryDownloadTask:(id)arg1;
- (void)pauseAllDownloadTasks;
- (void)pauseDownloadTask:(id)arg1;
- (void)executeDownloadTask:(id)arg1;
- (void)startAllDownloadTasks;
- (void)startNextDownloadTask;
- (void)startDownloadTask:(id)arg1;
- (void)removeAllDownloadTasks;
- (void)removeDownloadTasks:(id)arg1;
- (void)removeDownloadTask:(id)arg1;
- (void)removeDownloadTaskWithVid:(long long)arg1;
- (void)addDownloadTasks:(id)arg1 progressBlock:(CDUnknownBlockType)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (void)addDownloadTask:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
@property(readonly, nonatomic) NSArray *downloadTasks; // @dynamic downloadTasks;
- (void)setupDownloadManagerWithDownloadBasePath:(id)arg1;
- (id)init;
- (void)dealloc;
- (void)eachObserver:(CDUnknownBlockType)arg1;
- (_Bool)containsObserver:(id)arg1;
- (void)removeObserver:(id)arg1;
- (void)addObserver:(id)arg1;
- (void)removeDownloadTasksWithAid:(long long)arg1;
- (_Bool)hasActiveDownloadTasks;
- (void)restoreActiveDownloadTaskStates;
- (void)saveActiveDownloadTaskStates;
@property(readonly, nonatomic) NSArray *completedDownloadTasks; // @dynamic completedDownloadTasks;
@property(readonly, nonatomic) NSArray *failedDownloadTasks; // @dynamic failedDownloadTasks;
@property(readonly, nonatomic) NSArray *pausedDownloadTasks; // @dynamic pausedDownloadTasks;
@property(readonly, nonatomic) NSArray *executingDownloadTasks; // @dynamic executingDownloadTasks;
@property(readonly, nonatomic) NSArray *waitingDownloadTasks; // @dynamic waitingDownloadTasks;
- (id)downloadTasksWithState:(long long)arg1;
- (id)downloadTasksWithAid:(long long)arg1;
- (id)downloadTaskWithVid:(long long)arg1;
- (_Bool)containsTask:(id)arg1;
- (void)loadDownloadTasks;
- (id)downloadTasksFromLocal;
- (void)saveDownloadTasks;
- (id)downloadTasksJSONArray;
- (id)downloadTasksSavedPath;
- (id)downloadBasePath;
- (_Bool)hasEnoughDiskSpaceForTask:(id)arg1;
- (id)parametersVideoM3U8Url:(id)arg1;
- (void)downloadVideoFileWithDownloadTask:(id)arg1;
- (void)createLocalM3U8FileForDownloadTask:(id)arg1;
- (void)requestDownloadUrlsWithDownloadTask:(id)arg1;
- (void)requestVideoDetailInfoWithDownloadTask:(id)arg1;
- (void)requestAlbumDetailInfoWithDownloadTask:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

