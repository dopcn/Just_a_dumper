//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class MttDataBaseQueue, MttQuicklinkBookmarkMigrator, NSMutableArray;

@interface MttBookmarkManager : NSObject
{
    MttDataBaseQueue *_dbQueue;
    MttDataBaseQueue *_defaultDBQueue;
    long long bookMarkRootID;
    NSMutableArray *diffRecords;
    _Bool isInEdit;
    _Bool needSync;
    long long _defaultChosenFolderIDAtNewBookmark;
    int _bookmarktype;
    MttQuicklinkBookmarkMigrator *_migrator;
}

+ (long long)folderCount;
+ (long long)bookmarkCount;
+ (id)defaultBookmarkManager;
+ (void)initBookMarkTable;
+ (void)updateBookMarkOperationToAction:(id)arg1;
+ (void)updateBookMarkId:(id)arg1;
+ (void)updateBookMarkIdBy:(long long)arg1 and:(long long)arg2 inDbQueue:(id)arg3;
+ (void)updateBookMarkTable:(id)arg1;
+ (void)createBookmarkTable:(id)arg1 andTableName:(id)arg2;
@property(retain) MttQuicklinkBookmarkMigrator *migrator; // @synthesize migrator=_migrator;
@property(nonatomic) int bookmarktype; // @synthesize bookmarktype=_bookmarktype;
@property(retain, nonatomic) NSMutableArray *diffRecords; // @synthesize diffRecords;
- (void).cxx_destruct;
- (void)closeDefaultUserDbQueue;
- (id)openDefaultDataBase;
- (void)setDefaultChosenFolderIDAtNewBookmark:(long long)arg1;
- (long long)defaultChosenFolderIDAtNewBookmark;
- (void)setBInMainBookmarkAndNoEditedOrNotInAnyBookmark:(_Bool)arg1;
- (void)processBookmarkPushRequest;
- (long long)bookmarkCountForParentID:(long long)arg1 type:(long long)arg2;
- (id)parentTitleForRecord:(id)arg1;
- (id)parentFolderRecord:(id)arg1;
- (void)moveRecord:(id)arg1 toParent:(long long)arg2;
- (void)clearBookmarkForPlat:(int)arg1;
- (void)deleteRecord:(id)arg1 inQueue:(id)arg2;
- (void)deleteRecord:(id)arg1;
- (void)deleteRecord:(id)arg1 inParent:(long long)arg2 andDepth:(long long)arg3 inQueue:(id)arg4;
- (void)deleteRecord:(id)arg1 inParent:(long long)arg2 andDepth:(long long)arg3;
- (void)updateRecord:(id)arg1;
- (void)updateRecordsOrder:(id)arg1 inParent:(id)arg2;
- (void)insertRecordsEx:(id)arg1 andPlat:(long long)arg2 andCallfrom:(int)arg3;
- (id)getTableNameByType:(long long)arg1;
- (_Bool)isRecordInFolder:(id)arg1 folderName:(id)arg2;
- (void)insertRecordFromRC:(id)arg1 url:(id)arg2 folderName:(id)arg3;
- (void)insertRecordCallfromServer:(id)arg1 inTable:(id)arg2 inParent:(long long)arg3;
- (void)insertRecordCallfromLocal:(id)arg1 inTable:(id)arg2 inParent:(long long)arg3;
- (void)insertRecordCallfromLocal:(id)arg1 inParent:(long long)arg2;
- (void)fixRecordToRoot:(id)arg1 andPlat:(int)arg2;
- (_Bool)checkRecordExistWithID:(id)arg1;
- (int)checkBookmarkExistAndShowResult:(id)arg1;
- (_Bool)checkBookmarkExist:(id)arg1;
- (id)sortedFolderRecordsExcludedParents:(id)arg1;
- (id)sortedFolderRecordsWithDepthWithPlat:(int)arg1;
- (id)folderRecords;
- (id)recordsInParentRecord:(id)arg1 andPlat:(int)arg2;
- (void)sortDepthInRecordArray:(id)arg1;
- (id)recordsInParent:(long long)arg1 andPlat:(int)arg2 inQueue:(id)arg3;
- (id)recordsInParent:(long long)arg1 andPlat:(int)arg2;
- (id)recordByUrl:(id)arg1;
- (void)importBookmark:(_Bool)arg1;
- (_Bool)hasImportBookmark;
- (_Bool)compareDefaultDbWithLoginInDb;
- (id)getCompareRecordsWithDb:(id)arg1;
- (id)getSynchronousRecords;
- (id)rootRecord;
- (long long)rootID;
- (id)titleForRecordAtID:(long long)arg1;
- (void)startSynchronous:(id)arg1;
- (void)startSynchronousFromUI:(_Bool)arg1;
- (void)debugShowAllRecords;
- (void)dealloc;
- (void)profileSwitched;
- (id)init;
- (void)initRootID;
- (id)excludedParent:(long long)arg1 sortedFolderRecords:(id)arg2;
- (long long)recordCountInParent:(long long)arg1;
- (long long)maxOrderIndexInParent:(long long)arg1;
- (void)getAllBookMarksFromServer;
- (id)recordByIdForce:(long long)arg1;
- (id)recordByID:(long long)arg1;
- (_Bool)assignmentBmRecord:(id)arg1 BmRecord:(id)arg2 withSpecialUrl:(_Bool)arg3;
- (long long)recordCountInParent:(long long)arg1 inQueue:(id)arg2;
- (long long)maxOrderIndexInParent:(long long)arg1 inQueue:(id)arg2;
- (void)insertRootRecord:(id)arg1;
- (id)recordByQueryString:(id)arg1 inQueue:(id)arg2;
- (id)recordQuery:(long long)arg1 needForce:(_Bool)arg2;
- (id)recordByIdForce:(long long)arg1 inQueue:(id)arg2;
- (id)recordByID:(long long)arg1 inQueue:(id)arg2;
- (long long)rootID:(id)arg1;

@end

