//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "RDGPUImageInput-Protocol.h"

@class AVAssetReader, AVAssetReaderAudioMixOutput, AVAssetWriter, AVAssetWriterInput, AVAssetWriterInputPixelBufferAdaptor, NSArray, NSString, NSURL, RDGLProgram, RDGPUImageContext, RDGPUImageFramebuffer;
@protocol OS_dispatch_group, OS_dispatch_queue, PPMovieWriterDelegate;

@interface PPMovieWriter : NSObject <RDGPUImageInput>
{
    _Bool allowAlready;
    _Bool alreadyFinishedRecording;
    NSURL *movieURL;
    NSString *fileType;
    AVAssetWriter *assetWriter;
    AVAssetWriterInput *assetWriterAudioInput;
    AVAssetWriterInput *assetWriterVideoInput;
    RDGPUImageContext *_movieWriterContext;
    struct __CVBuffer *renderTarget;
    struct __CVBuffer *renderTexture;
    struct CGSize videoSize;
    unsigned long long inputRotation;
    unsigned int movieFramebuffer;
    unsigned int movieRenderbuffer;
    RDGLProgram *colorSwizzlingProgram;
    int colorSwizzlingPositionAttribute;
    int colorSwizzlingTextureCoordinateAttribute;
    int colorSwizzlingInputTextureUniform;
    RDGPUImageFramebuffer *firstInputFramebuffer;
    CDStruct_1b6d18a9 startTime;
    CDStruct_1b6d18a9 previousFrameTime;
    CDStruct_1b6d18a9 previousAudioTime;
    NSObject<OS_dispatch_queue> *audioQueue;
    NSObject<OS_dispatch_queue> *videoQueue;
    _Bool audioEncodingIsFinished;
    _Bool videoEncodingIsFinished;
    _Bool isRecording;
    NSArray *videoMetadata;
    float _currenttime;
    float _totalVideoDuration;
    CDUnknownBlockType rd_exportprogress;
    int _audioBitRate;
    int _audioChannelNumbers;
    _Bool _hasAudioTrack;
    _Bool _encodingLiveVideo;
    _Bool _shouldPassthroughAudio;
    _Bool enabled;
    _Bool _shouldInvalidateAudioSampleWhenDone;
    _Bool _paused;
    _Bool _cancelReading;
    _Bool _pauseReading;
    _Bool _audioFinished;
    _Bool _videoFinished;
    _Bool _isFrameRecieved;
    float _videoMaxDuration;
    CDUnknownBlockType completionBlock;
    CDUnknownBlockType failureBlock;
    CDUnknownBlockType videoInputReadyCallback;
    CDUnknownBlockType audioInputReadyCallback;
    id <PPMovieWriterDelegate> _delegate;
    NSArray *_movies;
    CDUnknownBlockType _audioProcessingCallback;
    double _audioWroteDuration;
    double _videoWroteDuration;
    double _firstVideoFrameTime;
    AVAssetWriterInputPixelBufferAdaptor *_assetWriterPixelBufferInput;
    AVAssetReader *_assetAudioReader;
    AVAssetReaderAudioMixOutput *_assetAudioReaderTrackOutput;
    NSObject<OS_dispatch_group> *_recordingDispatchGroup;
    CDUnknownBlockType _onFramePixelBufferReceived;
    CDStruct_1b6d18a9 _currentVideoSampleTime;
    CDStruct_1b6d18a9 _currentAudioSampleTime;
}

@property(copy, nonatomic) CDUnknownBlockType onFramePixelBufferReceived; // @synthesize onFramePixelBufferReceived=_onFramePixelBufferReceived;
@property(nonatomic) _Bool isFrameRecieved; // @synthesize isFrameRecieved=_isFrameRecieved;
@property(nonatomic) _Bool videoFinished; // @synthesize videoFinished=_videoFinished;
@property(nonatomic) _Bool audioFinished; // @synthesize audioFinished=_audioFinished;
@property(retain, nonatomic) NSObject<OS_dispatch_group> *recordingDispatchGroup; // @synthesize recordingDispatchGroup=_recordingDispatchGroup;
@property(retain, nonatomic) AVAssetReaderAudioMixOutput *assetAudioReaderTrackOutput; // @synthesize assetAudioReaderTrackOutput=_assetAudioReaderTrackOutput;
@property(retain, nonatomic) AVAssetReader *assetAudioReader; // @synthesize assetAudioReader=_assetAudioReader;
@property(retain, nonatomic) AVAssetWriterInputPixelBufferAdaptor *assetWriterPixelBufferInput; // @synthesize assetWriterPixelBufferInput=_assetWriterPixelBufferInput;
@property(nonatomic) double firstVideoFrameTime; // @synthesize firstVideoFrameTime=_firstVideoFrameTime;
@property(nonatomic) double videoWroteDuration; // @synthesize videoWroteDuration=_videoWroteDuration;
@property(nonatomic) double audioWroteDuration; // @synthesize audioWroteDuration=_audioWroteDuration;
@property(nonatomic) CDStruct_1b6d18a9 currentAudioSampleTime; // @synthesize currentAudioSampleTime=_currentAudioSampleTime;
@property(nonatomic) CDStruct_1b6d18a9 currentVideoSampleTime; // @synthesize currentVideoSampleTime=_currentVideoSampleTime;
@property(copy, nonatomic) CDUnknownBlockType audioProcessingCallback; // @synthesize audioProcessingCallback=_audioProcessingCallback;
@property(nonatomic) _Bool pauseReading; // @synthesize pauseReading=_pauseReading;
@property(nonatomic) _Bool cancelReading; // @synthesize cancelReading=_cancelReading;
@property(retain, nonatomic) NSArray *movies; // @synthesize movies=_movies;
@property(nonatomic) float videoMaxDuration; // @synthesize videoMaxDuration=_videoMaxDuration;
@property(nonatomic) __weak id <PPMovieWriterDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) RDGPUImageContext *movieWriterContext; // @synthesize movieWriterContext=_movieWriterContext;
@property(nonatomic, getter=isPaused) _Bool paused; // @synthesize paused=_paused;
@property(nonatomic) _Bool shouldInvalidateAudioSampleWhenDone; // @synthesize shouldInvalidateAudioSampleWhenDone=_shouldInvalidateAudioSampleWhenDone;
@property(nonatomic) _Bool enabled; // @synthesize enabled;
@property(copy, nonatomic) CDUnknownBlockType audioInputReadyCallback; // @synthesize audioInputReadyCallback;
@property(copy, nonatomic) CDUnknownBlockType videoInputReadyCallback; // @synthesize videoInputReadyCallback;
@property(copy, nonatomic) CDUnknownBlockType failureBlock; // @synthesize failureBlock;
@property(copy, nonatomic) CDUnknownBlockType completionBlock; // @synthesize completionBlock;
@property(nonatomic) _Bool shouldPassthroughAudio; // @synthesize shouldPassthroughAudio=_shouldPassthroughAudio;
@property(nonatomic) _Bool encodingLiveVideo; // @synthesize encodingLiveVideo=_encodingLiveVideo;
@property(nonatomic) _Bool hasAudioTrack; // @synthesize hasAudioTrack=_hasAudioTrack;
- (void).cxx_destruct;
- (struct __CVBuffer *)pixelBufferFromCGImage:(struct CGImage *)arg1;
@property(readonly, nonatomic) AVAssetWriter *assetWriter;
@property(nonatomic) struct CGAffineTransform transform;
@property(readonly, nonatomic) CDStruct_1b6d18a9 duration;
@property(copy, nonatomic) NSArray *metaData;
- (void)setHasAudioTrack:(_Bool)arg1 audioSettings:(id)arg2;
- (void)setCurrentlyReceivingMonochromeInput:(_Bool)arg1;
- (_Bool)wantsMonochromeInput;
- (_Bool)shouldIgnoreUpdatesToThisTarget;
- (void)endProcessing;
- (struct CGSize)maximumOutputSize;
- (void)setInputSize:(struct CGSize)arg1 atIndex:(long long)arg2;
- (void)setInputRotation:(unsigned long long)arg1 atIndex:(long long)arg2;
- (void)setInputFramebuffer:(id)arg1 atIndex:(long long)arg2;
- (long long)nextAvailableTextureIndex;
- (void)newFrameReadyAtTime:(CDStruct_1b6d18a9)arg1 atIndex:(long long)arg2;
- (void)renderAtInternalSizeUsingFramebuffer:(id)arg1;
- (void)setFilterFBO;
- (void)destroyDataFBO;
- (void)createDataFBO;
- (void)enableSynchronizationCallbacks;
- (void)processAudioBuffer:(struct opaqueCMSampleBuffer *)arg1;
- (void)finishRecordingWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)finishRecording;
- (void)cancelRecording;
- (void)startRecordingInOrientation:(struct CGAffineTransform)arg1;
- (void)kickOffVideoWriting;
- (void)kickOffAudioWriting;
- (void)changeExportProgress;
- (void)kickoffRecording;
- (void)startRecording;
- (void)setupAudioAssetWriter;
- (id)audioSettings;
- (void)setupAudioAssetReader;
- (void)initializeMovieWithOutputSettings:(id)arg1;
- (void)dealloc;
- (void)releasecanshu;
- (id)initWithMovieURL:(id)arg1 size:(struct CGSize)arg2 fileType:(id)arg3 outputSettings:(id)arg4 movies:(id)arg5 metadata:(id)arg6;
- (id)initWithMovieURL:(id)arg1 size:(struct CGSize)arg2 movies:(id)arg3 metadata:(id)arg4 videoMaxDuration:(float)arg5 videoAverageBitRate:(float)arg6 audioBitRate:(int)arg7 audioChannelNumbers:(int)arg8 totalDuration:(float)arg9 progress:(CDUnknownBlockType)arg10;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

