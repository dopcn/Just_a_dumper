//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "ICBCLoginParentViewController.h"

#import "LockScreenDelegate-Protocol.h"
#import "UIAlertViewDelegate-Protocol.h"

@class Advertising, LockScreen, NSMutableDictionary, NSString, UIButton, UIImageView, UILabel;
@protocol GesturePasswordViewControllerDelegate;

@interface GesturePasswordViewController : ICBCLoginParentViewController <LockScreenDelegate, UIAlertViewDelegate>
{
    _Bool _isFromMoreView;
    _Bool _isCompletedGestureLoginRequestSafeInputEncryptionRandomId;
    _Bool _isCompletedGestureSettingRequestSafeInputEncryptionRandomId;
    int _infoLabelStatus;
    int _status;
    id <GesturePasswordViewControllerDelegate> _delegate;
    LockScreen *_lockScreenView;
    UILabel *_infoLabel;
    UILabel *_exitLable;
    UILabel *_forgetGesturePwdLabel;
    UILabel *_loginOtherUserLabel;
    UILabel *_inputPwdAgainLabel;
    UIImageView *_iconImageView;
    id _successDelegate;
    SEL _successSelector;
    NSMutableDictionary *_dataDic;
    UIButton *_clickBtn;
    id _injectParam;
    long long _firstPwd;
    long long _confirmPwd;
    NSString *_errorMsg;
    Advertising *_adver;
    NSString *_passwdGestureLogin;
    NSString *_passwdGestureSetting;
    NSString *_safeInputEncryptionRandomIdGestureLogin;
    NSString *_safeInputEncryptionRandomIdGestureSetting;
}

@property(nonatomic) _Bool isCompletedGestureSettingRequestSafeInputEncryptionRandomId; // @synthesize isCompletedGestureSettingRequestSafeInputEncryptionRandomId=_isCompletedGestureSettingRequestSafeInputEncryptionRandomId;
@property(retain, nonatomic) NSString *safeInputEncryptionRandomIdGestureSetting; // @synthesize safeInputEncryptionRandomIdGestureSetting=_safeInputEncryptionRandomIdGestureSetting;
@property(nonatomic) _Bool isCompletedGestureLoginRequestSafeInputEncryptionRandomId; // @synthesize isCompletedGestureLoginRequestSafeInputEncryptionRandomId=_isCompletedGestureLoginRequestSafeInputEncryptionRandomId;
@property(retain, nonatomic) NSString *safeInputEncryptionRandomIdGestureLogin; // @synthesize safeInputEncryptionRandomIdGestureLogin=_safeInputEncryptionRandomIdGestureLogin;
@property(copy, nonatomic) NSString *passwdGestureSetting; // @synthesize passwdGestureSetting=_passwdGestureSetting;
@property(copy, nonatomic) NSString *passwdGestureLogin; // @synthesize passwdGestureLogin=_passwdGestureLogin;
@property(retain, nonatomic) Advertising *adver; // @synthesize adver=_adver;
@property(retain, nonatomic) NSString *errorMsg; // @synthesize errorMsg=_errorMsg;
@property(nonatomic) long long confirmPwd; // @synthesize confirmPwd=_confirmPwd;
@property(nonatomic) long long firstPwd; // @synthesize firstPwd=_firstPwd;
@property(retain, nonatomic) id injectParam; // @synthesize injectParam=_injectParam;
@property(nonatomic) _Bool isFromMoreView; // @synthesize isFromMoreView=_isFromMoreView;
@property(retain, nonatomic) UIButton *clickBtn; // @synthesize clickBtn=_clickBtn;
@property(retain, nonatomic) NSMutableDictionary *dataDic; // @synthesize dataDic=_dataDic;
@property(nonatomic) SEL successSelector; // @synthesize successSelector=_successSelector;
@property(retain, nonatomic) id successDelegate; // @synthesize successDelegate=_successDelegate;
@property(retain, nonatomic) UIImageView *iconImageView; // @synthesize iconImageView=_iconImageView;
@property(nonatomic) int status; // @synthesize status=_status;
@property(nonatomic) int infoLabelStatus; // @synthesize infoLabelStatus=_infoLabelStatus;
@property(retain, nonatomic) UILabel *inputPwdAgainLabel; // @synthesize inputPwdAgainLabel=_inputPwdAgainLabel;
@property(retain, nonatomic) UILabel *loginOtherUserLabel; // @synthesize loginOtherUserLabel=_loginOtherUserLabel;
@property(retain, nonatomic) UILabel *forgetGesturePwdLabel; // @synthesize forgetGesturePwdLabel=_forgetGesturePwdLabel;
@property(retain, nonatomic) UILabel *exitLable; // @synthesize exitLable=_exitLable;
@property(retain, nonatomic) UILabel *infoLabel; // @synthesize infoLabel=_infoLabel;
@property(retain, nonatomic) LockScreen *lockScreenView; // @synthesize lockScreenView=_lockScreenView;
@property(nonatomic) __weak id <GesturePasswordViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)updateLoginedAdver;
- (void)closeBtnTapped:(id)arg1;
- (void)modifyUserHeadImage;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)requestGestureSettingSafeinputEncryptionRandomfailed:(id)arg1;
- (void)requestGestureSettingSafeinputEncryptionRandomScuccess:(id)arg1;
- (void)getSafeinputEncryptionRandomCodeGestureSetting;
- (void)requestSafeinputEncryptionRandomfailed:(id)arg1;
- (void)requestSafeinputEncryptionRandomScuccess:(id)arg1;
- (void)getSafeinputEncryptionRandomCodeGestureLogin;
- (void)switchToNormalLoginController;
- (void)didLoginFailure:(id)arg1;
- (void)didLoginSuccess:(id)arg1;
- (void)loginRequest:(id)arg1;
- (void)backAction;
- (void)settingGesturePwdFail:(id)arg1;
- (void)settingGesturePwdSuccess:(id)arg1;
- (void)setTraceCloseOrNot:(_Bool)arg1;
- (id)getTraceCloseOrNot;
- (id)getGesturePasswordHasSetting;
- (void)setGesturePasswordHasSetting:(_Bool)arg1;
- (id)recommandForGesturePassword;
- (void)closeRecommandForGesturePassword:(_Bool)arg1;
- (id)getGesturePassword;
- (_Bool)saveGesturePwdToDataBase:(id)arg1;
- (void)alertView:(id)arg1 clickedButtonAtIndex:(long long)arg2;
- (void)backToLastViewController;
- (void)leftBarButtonTap;
- (void)tapped:(id)arg1;
- (void)lockScreen:(id)arg1 didEndWithPattern:(id)arg2;
- (void)updateUI;
- (void)dealloc;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)didReceiveMemoryWarning;
- (void)viewDidLoad;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

