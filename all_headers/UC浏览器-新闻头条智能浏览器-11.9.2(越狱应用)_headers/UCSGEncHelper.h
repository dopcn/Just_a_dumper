//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

@interface UCSGEncHelper : NSObject
{
}

+ (id)signRequest:(id)arg1 cipherKey:(id)arg2 authCode:(id)arg3;
+ (id)ucSecuritySign:(id)arg1 cipherType:(unsigned long long)arg2;
+ (id)securitySign:(id)arg1 cipherType:(unsigned long long)arg2;
+ (id)securitySign:(id)arg1;
+ (id)securityCipher:(id)arg1 cipherType:(unsigned long long)arg2;
+ (id)securityCipher:(id)arg1;
+ (_Bool)shouldUseDebugCipherKey;
+ (void)handleSecureKeySwitch:(id)arg1;
+ (id)stringFromDecode:(id)arg1;
+ (id)allocDataFromDecode:(id)arg1;
+ (int)Decode:(const char *)arg1 dst:(char *)arg2 srcLen:(int)arg3;
+ (int)DecodeSize:(int)arg1;
+ (id)EncNSStringExternal:(id)arg1;
+ (id)EncNSString:(id)arg1;
+ (id)EncNSDataExternal:(id)arg1;
+ (id)EncNSData:(id)arg1;
+ (id)EncStringBase64External:(id)arg1;
+ (id)EncStringBase64:(id)arg1;
+ (int)EncodeExternal:(const char *)arg1 dst:(char *)arg2 srcLen:(int)arg3;
+ (int)Encode:(const char *)arg1 dst:(char *)arg2 srcLen:(int)arg3;
+ (int)EncodeSize:(int)arg1;
+ (id)_EmptyEncNSData:(_Bool)arg1;
+ (id)_EncodeNSData:(id)arg1 isInternal:(_Bool)arg2;
+ (id)_EmptyEncStringBase64:(_Bool)arg1;
+ (id)_EncStringBase64:(id)arg1 isInternal:(_Bool)arg2;
+ (int)_EmptyEncode:(char *)arg1 isInternal:(_Bool)arg2;
+ (int)_Encode:(const char *)arg1 dst:(char *)arg2 srcLen:(int)arg3 isInternal:(_Bool)arg4;
+ (id)decData:(id)arg1 keyName:(id)arg2;
+ (id)decString:(id)arg1 keyName:(id)arg2;
+ (id)encData:(id)arg1 keyName:(id)arg2;
+ (id)encString:(id)arg1 keyName:(id)arg2;
+ (id)keyNameBySeqNO:(char *)arg1;
+ (char *)keySeqNOByIndex:(unsigned long long)arg1 isInternal:(_Bool)arg2;
+ (id)keyNameByIndex:(unsigned long long)arg1 isInternal:(_Bool)arg2;
+ (void)setDebugKey:(_Bool)arg1;
+ (void)updateReleaseBackupKey:(id)arg1 isInternal:(_Bool)arg2;
+ (void)setKeyIndex:(unsigned long long)arg1;
+ (void)setIntKeyIndex:(unsigned long long)arg1;
+ (unsigned long long)currentKeyIndex;
+ (char *)currentKeySeqNo:(_Bool)arg1;
+ (id)currentKeyName:(_Bool)arg1;
+ (id)appKeyWithIsExteranl:(_Bool)arg1;
+ (void)setConfigKey:(id)arg1;
+ (void)initialize;
+ (struct MStringW)EncABase64External:(const struct MStringA *)arg1;
+ (struct MStringW)EncABase64:(const struct MStringA *)arg1;
+ (struct MStringW)EncBase64External:(const struct MStringW *)arg1;
+ (struct MStringW)EncBase64:(const struct MStringW *)arg1;
+ (struct MStringW)_EmptyEncABase:(_Bool)arg1;
+ (struct MStringW)_EncABase64:(const struct MStringA *)arg1 isInternal:(_Bool)arg2;

@end

