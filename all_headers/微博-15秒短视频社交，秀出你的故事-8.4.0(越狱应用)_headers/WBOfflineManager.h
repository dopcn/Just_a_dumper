//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

@class NSMutableArray, NSMutableDictionary, NSTimer;
@protocol OS_dispatch_queue;

@interface WBOfflineManager : NSObject
{
    NSObject<OS_dispatch_queue> *_offlineQueue;
    unsigned long long _opportunity;
    double _timeinterval;
    NSMutableDictionary *_interfaceQueueMap;
    NSMutableArray *_interfaceWhiteList;
    NSTimer *_timer;
}

+ (void)runRequest;
+ (id)threadForDispatch;
+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (id)sharedManager;
@property(retain, nonatomic) NSTimer *timer; // @synthesize timer=_timer;
@property(retain, nonatomic) NSMutableArray *interfaceWhiteList; // @synthesize interfaceWhiteList=_interfaceWhiteList;
@property(retain, nonatomic) NSMutableDictionary *interfaceQueueMap; // @synthesize interfaceQueueMap=_interfaceQueueMap;
@property(nonatomic) double timeinterval; // @synthesize timeinterval=_timeinterval;
- (void).cxx_destruct;
- (void)_unload;
- (void)_load;
- (id)_getModuleNameFromRequest:(id)arg1;
- (id)_currentNetworkType;
- (void)logOffline:(unsigned long long)arg1 wrapper:(id)arg2 error:(id)arg3;
- (_Bool)networkIsReachable;
- (id)_offlineTaskId:(id)arg1;
- (void)_executeTask:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)_hasExecutable:(id *)arg1;
- (void)_removeOfflineObject:(id)arg1;
- (void)_addOfflineObject:(id)arg1;
- (void)_close;
- (void)_lanuch;
- (_Bool)_shouldLanuch:(unsigned long long)arg1;
- (void)_networkReachabilityDidChanged:(id)arg1;
- (void)_applicationDidFinishLaunching:(id)arg1;
- (void)_applicationDidEnterBackground:(id)arg1;
- (void)_applicationDidBecomeActive:(id)arg1;
@property(nonatomic) unsigned long long opportunity;
- (void)removeOfflineObject:(id)arg1;
- (void)addOfflineObject:(id)arg1;
- (_Bool)supportInterface:(id)arg1;
- (_Bool)supportError:(id)arg1;
- (void)close;
- (void)lanuch;
- (id)init;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

