//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "CLLocationManagerDelegate-Protocol.h"

@class CLLocationManager, NSDate, NSString, NSTimer, UIAlertView;

@interface DILocationService : NSObject <CLLocationManagerDelegate>
{
    _Bool _isInBackground;
    _Bool _isUpdatingLocation;
    NSDate *_locTime;
    double _horizontalAccuracy;
    double _headingDegrees;
    double _deviceSpeed;
    long long _backgroundGPSMode;
    long long _locationErrorCode;
    NSDate *_locationDate;
    NSTimer *_locateTimer;
    CLLocationManager *_locationManager;
    long long _locForeTimeInterval;
    long long _locBackTimeInterval;
    UIAlertView *_settingAlertView;
    struct CLLocationCoordinate2D _coor;
    struct CLLocationCoordinate2D _lastLocationCoor;
}

+ (double)distanceFromCoor:(struct CLLocationCoordinate2D)arg1 toCoor:(struct CLLocationCoordinate2D)arg2;
+ (id)sharedInstance;
@property(nonatomic) _Bool isUpdatingLocation; // @synthesize isUpdatingLocation=_isUpdatingLocation;
@property(retain, nonatomic) UIAlertView *settingAlertView; // @synthesize settingAlertView=_settingAlertView;
@property(nonatomic) _Bool isInBackground; // @synthesize isInBackground=_isInBackground;
@property(nonatomic) long long locBackTimeInterval; // @synthesize locBackTimeInterval=_locBackTimeInterval;
@property(nonatomic) long long locForeTimeInterval; // @synthesize locForeTimeInterval=_locForeTimeInterval;
@property(retain, nonatomic) CLLocationManager *locationManager; // @synthesize locationManager=_locationManager;
@property(retain, nonatomic) NSTimer *locateTimer; // @synthesize locateTimer=_locateTimer;
@property(retain, nonatomic) NSDate *locationDate; // @synthesize locationDate=_locationDate;
@property(nonatomic) long long locationErrorCode; // @synthesize locationErrorCode=_locationErrorCode;
@property(nonatomic) long long backgroundGPSMode; // @synthesize backgroundGPSMode=_backgroundGPSMode;
@property(nonatomic) double deviceSpeed; // @synthesize deviceSpeed=_deviceSpeed;
@property(nonatomic) double headingDegrees; // @synthesize headingDegrees=_headingDegrees;
@property(nonatomic) double horizontalAccuracy; // @synthesize horizontalAccuracy=_horizontalAccuracy;
@property(retain, nonatomic) NSDate *locTime; // @synthesize locTime=_locTime;
@property(nonatomic) struct CLLocationCoordinate2D lastLocationCoor; // @synthesize lastLocationCoor=_lastLocationCoor;
@property(nonatomic) struct CLLocationCoordinate2D coor; // @synthesize coor=_coor;
- (void).cxx_destruct;
- (void)enterForeGroundAction:(id)arg1;
- (void)enterBackGroundAction:(id)arg1;
- (void)alertView:(id)arg1 clickedButtonAtIndex:(long long)arg2;
- (void)locationManager:(id)arg1 didFailWithError:(id)arg2;
- (void)updateToLocation:(id)arg1;
- (void)locationManager:(id)arg1 didUpdateToLocation:(id)arg2 fromLocation:(id)arg3;
- (void)locationManager:(id)arg1 didUpdateLocations:(id)arg2;
- (void)locationManager:(id)arg1 didChangeAuthorizationStatus:(int)arg2;
- (void)requestAlwaysAuthorization;
- (void)checkLocationIfAuthorize:(id)arg1;
- (void)startUpdatingLocationIfAuthorize;
- (void)configLocationServices;
- (void)showAlertWithAuthorizationStatus:(int)arg1 authorizeMessage:(id)arg2;
- (void)showAlertWithAuthorizationStatus:(int)arg1;
- (id)locTimeStamp;
- (_Bool)isValidCoor;
- (_Bool)locationServicesEnabled;
- (void)stopHeading;
- (void)startHeading;
- (void)stopLocationGPSUpdate;
- (void)locStartUpdatingLocation;
- (void)startLocationGPSUpdate;
- (void)stopAllLocationChange;
- (void)stopLocateTimer;
- (void)startAllLocationChange;
- (void)startLocationGPSUpdateTimer;
- (void)checkLocation;
- (void)addCheckOperation:(long long)arg1;
- (void)setForeTimeInterval:(long long)arg1 backTimeInterval:(long long)arg2;
- (_Bool)checkSameForeTimeInterval:(long long)arg1 backTimeInterval:(long long)arg2;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

