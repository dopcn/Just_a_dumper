//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

#import "MTIImagePromise-Protocol.h"

@class MTIImage, MTIImagePromiseDebugInfo, MTIMultilayerCompositeKernel, NSArray, NSString;

@interface MTIMultilayerCompositingRecipe : NSObject <MTIImagePromise>
{
    NSArray *_dependencies;
    MTIImage *_backgroundImage;
    MTIMultilayerCompositeKernel *_kernel;
    NSArray *_layers;
    unsigned long long _outputPixelFormat;
    struct MTITextureDimensions _dimensions;
}

@property(readonly, nonatomic) unsigned long long outputPixelFormat; // @synthesize outputPixelFormat=_outputPixelFormat;
@property(readonly, copy, nonatomic) NSArray *layers; // @synthesize layers=_layers;
@property(readonly, nonatomic) MTIMultilayerCompositeKernel *kernel; // @synthesize kernel=_kernel;
@property(readonly, copy, nonatomic) MTIImage *backgroundImage; // @synthesize backgroundImage=_backgroundImage;
@property(readonly, copy, nonatomic) NSArray *dependencies; // @synthesize dependencies=_dependencies;
@property(readonly, nonatomic) struct MTITextureDimensions dimensions; // @synthesize dimensions=_dimensions;
- (void).cxx_destruct;
@property(readonly, nonatomic) MTIImagePromiseDebugInfo *debugInfo;
- (id)promiseByUpdatingDependencies:(id)arg1;
- (id)initWithKernel:(id)arg1 backgroundImage:(id)arg2 layers:(id)arg3 outputTextureDimensions:(struct MTITextureDimensions)arg4 outputPixelFormat:(unsigned long long)arg5;
@property(readonly, nonatomic) long long alphaType;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)resolveWithContext:(id)arg1 error:(id *)arg2;
- (id)verticesForRect:(struct CGRect)arg1 contentIsFlipped:(_Bool)arg2 contentRegion:(struct CGRect)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

