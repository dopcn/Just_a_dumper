//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class NSMutableArray;
@protocol MTLCommandQueue, MTLDevice;

@interface KSMPSRender : NSObject
{
    NSMutableArray *mCNNRender;
    struct MetalContext *context;
    struct CKSTimeShow mTimeMPSWhole;
    struct CKSTimeShow mTimeCNN;
    struct vector<int, std::__1::allocator<int>> mOutIndexs;
    struct KSBinaryNet *_mKSBinaryNet;
    id <MTLDevice> _device;
    id <MTLCommandQueue> _commandQueue;
}

@property(retain, nonatomic) id <MTLCommandQueue> commandQueue; // @synthesize commandQueue=_commandQueue;
@property(retain, nonatomic) id <MTLDevice> device; // @synthesize device=_device;
@property struct KSBinaryNet *mKSBinaryNet; // @synthesize mKSBinaryNet=_mKSBinaryNet;
- (id).cxx_construct;
- (void).cxx_destruct;
-     // Error parsing type: v24@0:8^{KSTexInput=iBd{shared_ptr<Data>=^{Data}^{__shared_weak_count}}{shared_ptr<Data>=^{Data}^{__shared_weak_count}}{shared_ptr<Data>=^{Data}^{__shared_weak_count}}q{atomic<bool>=AB}{atomic<bool>=AB}{atomic<bool>=AB}{atomic<bool>=AB}fii{vector<unsigned char, std::__1::allocator<unsigned char> >=**{__compressed_pair<unsigned char *, std::__1::allocator<unsigned char> >=*}}iii{vector<unsigned char, std::__1::allocator<unsigned char> >=**{__compressed_pair<unsigned char *, std::__1::allocator<unsigned char> >=*}}ff{KSPoseOut={vector<KSPoseInfo, std::__1::allocator<KSPoseInfo> >=^{KSPoseInfo}^{KSPoseInfo}{__compressed_pair<KSPoseInfo *, std::__1::allocator<KSPoseInfo> >=^{KSPoseInfo}}}}{KSPoseOut={vector<KSPoseInfo, std::__1::allocator<KSPoseInfo> >=^{KSPoseInfo}^{KSPoseInfo}{__compressed_pair<KSPoseInfo *, std::__1::allocator<KSPoseInfo> >=^{KSPoseInfo}}}}}16, name: renderTexFrame:
- (_Bool)renderMetal:(id)arg1 out:(id)arg2 rotate:(int)arg3;
- (_Bool)createMPSLayer;
- (_Bool)createMPSRender:(id)arg1;
- (void)dealloc;
- (id)init;

@end

