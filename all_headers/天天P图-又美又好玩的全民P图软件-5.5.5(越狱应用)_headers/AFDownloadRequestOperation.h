//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "AFHTTPRequestOperation.h"

@class NSError, NSObject, NSString;
@protocol OS_dispatch_queue;

@interface AFDownloadRequestOperation : AFHTTPRequestOperation
{
    NSError *_fileError;
    id _responseObject;
    _Bool _shouldOverwrite;
    _Bool _shouldResume;
    _Bool _deleteTempFileOnCancel;
    NSString *_targetPath;
    long long _totalContentLength;
    long long _offsetContentLength;
    NSObject<OS_dispatch_queue> *_progressiveDownloadCallbackQueue;
    NSString *_tempPath;
    NSString *_fileIdentifier;
    long long _totalBytesReadPerDownload;
    CDUnknownBlockType _progressiveDownloadProgress;
}

+ (id)md5StringForString:(id)arg1;
+ (id)cacheFolder;
+ (id)acceptableStatusCodes;
@property(copy, nonatomic) CDUnknownBlockType progressiveDownloadProgress; // @synthesize progressiveDownloadProgress=_progressiveDownloadProgress;
@property(nonatomic) long long totalBytesReadPerDownload; // @synthesize totalBytesReadPerDownload=_totalBytesReadPerDownload;
@property(retain, nonatomic) NSString *fileIdentifier; // @synthesize fileIdentifier=_fileIdentifier;
@property(retain, nonatomic) NSString *tempPath; // @synthesize tempPath=_tempPath;
@property(nonatomic) NSObject<OS_dispatch_queue> *progressiveDownloadCallbackQueue; // @synthesize progressiveDownloadCallbackQueue=_progressiveDownloadCallbackQueue;
@property long long offsetContentLength; // @synthesize offsetContentLength=_offsetContentLength;
@property long long totalContentLength; // @synthesize totalContentLength=_totalContentLength;
@property(getter=isDeletingTempFileOnCancel) _Bool deleteTempFileOnCancel; // @synthesize deleteTempFileOnCancel=_deleteTempFileOnCancel;
@property(readonly) _Bool shouldResume; // @synthesize shouldResume=_shouldResume;
@property _Bool shouldOverwrite; // @synthesize shouldOverwrite=_shouldOverwrite;
@property(retain) NSString *targetPath; // @synthesize targetPath=_targetPath;
- (void).cxx_destruct;
- (void)connection:(id)arg1 didReceiveData:(id)arg2;
- (void)connection:(id)arg1 didReceiveResponse:(id)arg2;
- (id)error;
- (id)responseObject;
- (void)pause;
- (unsigned long long)fileSizeForPath:(id)arg1;
- (void)setProgressiveDownloadProgressBlock:(CDUnknownBlockType)arg1;
- (_Bool)deleteTempFileWithError:(id *)arg1;
- (_Bool)updateByteStartRangeForRequest;
- (id)initWithRequest:(id)arg1 fileIdentifier:(id)arg2 targetPath:(id)arg3 shouldResume:(_Bool)arg4;
- (id)initWithRequest:(id)arg1 targetPath:(id)arg2 shouldResume:(_Bool)arg3;
- (void)dealloc;

@end

