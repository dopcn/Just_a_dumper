//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "LMBaseModel.h"

@class LMBookCommentPostModel, LMListenerGroupPermissions, LMPostAudioModel, LMPostEntityModel, LMPostUserModel, NSArray, NSString;

@interface LMPostModel : LMBaseModel
{
    _Bool _isVip;
    NSString *_postId;
    LMPostUserModel *_postUser;
    NSString *_title;
    NSString *_content;
    double _createTime;
    long long _commentCount;
    long long _likeCount;
    unsigned long long _postType;
    unsigned long long _postSource;
    NSArray *_thumbImages;
    NSArray *_originImages;
    LMPostEntityModel *_entityModel;
    LMPostAudioModel *_postAudio;
    NSString *_groupId;
    NSString *_groupName;
    LMBookCommentPostModel *_bookComment;
    NSString *_referId;
    unsigned long long _userRole;
    NSArray *_topics;
    unsigned long long _postingState;
    LMListenerGroupPermissions *_userPermissions;
}

+ (id)getPostModelListWithJson:(id)arg1;
+ (double)getPostCacheTimeByInsertTime;
+ (id)postModelWithDBResultSet:(id)arg1;
+ (id)_sqlForSaveToDBWithPostModel:(id)arg1;
+ (_Bool)deleteFromDBWithAllPost;
+ (_Bool)saveToDBWithPostModelList:(id)arg1;
+ (_Bool)saveToDBWithPostModel:(id)arg1;
+ (id)queryAllPostModelListWithLimit:(long long)arg1;
+ (id)queryAllPostModelList;
+ (_Bool)checkCacheValid;
+ (void)deletePostModelWithId:(id)arg1;
+ (id)queryPostModelWithPostId:(id)arg1;
@property(retain, nonatomic) LMListenerGroupPermissions *userPermissions; // @synthesize userPermissions=_userPermissions;
@property(nonatomic) unsigned long long postingState; // @synthesize postingState=_postingState;
@property(nonatomic) _Bool isVip; // @synthesize isVip=_isVip;
@property(retain, nonatomic) NSArray *topics; // @synthesize topics=_topics;
@property(nonatomic) unsigned long long userRole; // @synthesize userRole=_userRole;
@property(copy, nonatomic) NSString *referId; // @synthesize referId=_referId;
@property(retain, nonatomic) LMBookCommentPostModel *bookComment; // @synthesize bookComment=_bookComment;
@property(copy, nonatomic) NSString *groupName; // @synthesize groupName=_groupName;
@property(copy, nonatomic) NSString *groupId; // @synthesize groupId=_groupId;
@property(retain, nonatomic) LMPostAudioModel *postAudio; // @synthesize postAudio=_postAudio;
@property(retain, nonatomic) LMPostEntityModel *entityModel; // @synthesize entityModel=_entityModel;
@property(retain, nonatomic) NSArray *originImages; // @synthesize originImages=_originImages;
@property(retain, nonatomic) NSArray *thumbImages; // @synthesize thumbImages=_thumbImages;
@property(nonatomic) unsigned long long postSource; // @synthesize postSource=_postSource;
@property(nonatomic) unsigned long long postType; // @synthesize postType=_postType;
@property(nonatomic) long long likeCount; // @synthesize likeCount=_likeCount;
@property(nonatomic) long long commentCount; // @synthesize commentCount=_commentCount;
@property(nonatomic) double createTime; // @synthesize createTime=_createTime;
@property(copy, nonatomic) NSString *content; // @synthesize content=_content;
@property(copy, nonatomic) NSString *title; // @synthesize title=_title;
@property(retain, nonatomic) LMPostUserModel *postUser; // @synthesize postUser=_postUser;
@property(copy, nonatomic) NSString *postId; // @synthesize postId=_postId;
- (void).cxx_destruct;
- (void)updateWithPostModel:(id)arg1;
- (id)dictionary;
- (id)initWithDictionary:(id)arg1;
@property(readonly, nonatomic) NSString *audioTitle;
@property(readonly, copy, nonatomic) id topicsJson;
@property(readonly, nonatomic) _Bool isGlobalTopPost;
@property(readonly, nonatomic) _Bool isTopPost;
@property(readonly, nonatomic) _Bool isEssencePost;
@property(readonly, copy, nonatomic) NSString *postDateString;
@property(readonly, nonatomic) _Bool isLiked;
@property(readonly, nonatomic) _Bool isUnverifiedAnnouncer;
@property(readonly, nonatomic) _Bool isVerifiedAnnouncer;
@property(readonly, nonatomic) _Bool isMember;
@property(nonatomic) long long shareIndex;

@end

