//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <UIKit/UIView.h>

#import "QZEVRecordButtonDelegate-Protocol.h"
#import "UIGestureRecognizerDelegate-Protocol.h"

@class MCCameraDynamicView, MCCameraFilterView, NSArray, NSString, QZEVCameraBottomButton, QZEVCameraFilterView, QZEVFilterPicker, QZEVRecordButton, UIButton, UILabel, _TtC11microvision11WSGuideView;
@protocol MCCameraBottomBarDelegate;

@interface MCCameraBottomBar : UIView <UIGestureRecognizerDelegate, QZEVRecordButtonDelegate>
{
    _Bool _hiddenDynamic;
    _Bool _hiddenFilter;
    double lastDuration;
    _Bool _hideLibraryBtn;
    _Bool _filterGroupEnable;
    _Bool _isShowPanel;
    _Bool _isDoneBtnEnable;
    id <MCCameraBottomBarDelegate> _delegate;
    QZEVRecordButton *_recordBtn;
    UIView *_panelBgView;
    double _currSpeed;
    QZEVCameraBottomButton *_filterBtn;
    QZEVCameraBottomButton *_dynamicBtn;
    QZEVCameraBottomButton *_musicBtn;
    QZEVCameraBottomButton *_libraryBtn;
    UIButton *_deleteBtn;
    UIButton *_doneBtn;
    NSString *_musicName;
    QZEVFilterPicker *_filterPicker;
    MCCameraFilterView *_cameraFiterPanel;
    QZEVCameraFilterView *_filterPanel;
    MCCameraDynamicView *_cameraMotionPanel;
    UILabel *_recordTimeLabel;
    NSString *_selectedtmplName;
    double _recordedTime;
    CDUnknownBlockType _onDoneBtnTap;
    _TtC11microvision11WSGuideView *_guideView;
}

@property(retain, nonatomic) _TtC11microvision11WSGuideView *guideView; // @synthesize guideView=_guideView;
@property(copy, nonatomic) CDUnknownBlockType onDoneBtnTap; // @synthesize onDoneBtnTap=_onDoneBtnTap;
@property(nonatomic) double recordedTime; // @synthesize recordedTime=_recordedTime;
@property(retain, nonatomic) NSString *selectedtmplName; // @synthesize selectedtmplName=_selectedtmplName;
@property(retain, nonatomic) UILabel *recordTimeLabel; // @synthesize recordTimeLabel=_recordTimeLabel;
@property(retain, nonatomic) MCCameraDynamicView *cameraMotionPanel; // @synthesize cameraMotionPanel=_cameraMotionPanel;
@property(retain, nonatomic) QZEVCameraFilterView *filterPanel; // @synthesize filterPanel=_filterPanel;
@property(retain, nonatomic) MCCameraFilterView *cameraFiterPanel; // @synthesize cameraFiterPanel=_cameraFiterPanel;
@property(retain, nonatomic) QZEVFilterPicker *filterPicker; // @synthesize filterPicker=_filterPicker;
@property(retain, nonatomic) NSString *musicName; // @synthesize musicName=_musicName;
@property(retain, nonatomic) UIButton *doneBtn; // @synthesize doneBtn=_doneBtn;
@property(retain, nonatomic) UIButton *deleteBtn; // @synthesize deleteBtn=_deleteBtn;
@property(retain, nonatomic) QZEVCameraBottomButton *libraryBtn; // @synthesize libraryBtn=_libraryBtn;
@property(retain, nonatomic) QZEVCameraBottomButton *musicBtn; // @synthesize musicBtn=_musicBtn;
@property(retain, nonatomic) QZEVCameraBottomButton *dynamicBtn; // @synthesize dynamicBtn=_dynamicBtn;
@property(retain, nonatomic) QZEVCameraBottomButton *filterBtn; // @synthesize filterBtn=_filterBtn;
@property(nonatomic) _Bool isDoneBtnEnable; // @synthesize isDoneBtnEnable=_isDoneBtnEnable;
@property(nonatomic) double currSpeed; // @synthesize currSpeed=_currSpeed;
@property(retain, nonatomic) UIView *panelBgView; // @synthesize panelBgView=_panelBgView;
@property(readonly, nonatomic) _Bool isShowPanel; // @synthesize isShowPanel=_isShowPanel;
@property(nonatomic) _Bool filterGroupEnable; // @synthesize filterGroupEnable=_filterGroupEnable;
@property(nonatomic) _Bool hideLibraryBtn; // @synthesize hideLibraryBtn=_hideLibraryBtn;
@property(retain, nonatomic) QZEVRecordButton *recordBtn; // @synthesize recordBtn=_recordBtn;
@property(nonatomic) __weak id <MCCameraBottomBarDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)showLibraryBtnGuideIfNeed;
@property(retain, nonatomic) NSArray *recordedTimes;
@property(nonatomic) double currSectionRecordingTime;
- (void)createBgViewForPanel:(id)arg1;
- (void)createMotionPanelIfNeed;
- (void)createFilterPanelIfNeed;
- (void)onButtonTouchDown:(id)arg1;
- (id)btnWithImgName:(id)arg1 size:(double)arg2 center:(struct CGPoint)arg3 tapAction:(SEL)arg4;
- (id)labelForRecordTime;
@property(nonatomic) double maxRecordTime;
- (void)selectFilterWithFilterID:(long long)arg1;
- (void)executeBlock:(CDUnknownBlockType)arg1 animated:(_Bool)arg2 complete:(CDUnknownBlockType)arg3;
- (void)updateUIWithRecordState:(unsigned long long)arg1;
- (void)updateRecordTips;
- (void)updateRecordTime;
@property(nonatomic) _Bool hideRecordTipsLabel;
- (void)recordBtn:(id)arg1 recordStateDidChangeTo:(unsigned long long)arg2;
- (void)recordBtn:(id)arg1 recordStateWillChangeTo:(unsigned long long)arg2;
- (void)recordBtn:(id)arg1 longPressStateChanged:(_Bool)arg2;
- (_Bool)recordBtn:(id)arg1 recordStateShouldChangeTo:(unsigned long long)arg2;
- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;
- (void)clearMusicDot;
- (void)checkShowMusicDot;
- (void)clearDynamicDot;
- (void)checkShowDynamicDot;
- (_Bool)canHandleTouch:(id)arg1;
- (void)setupView;
- (void)setCoverForLibraryButton;
@property(nonatomic) unsigned long long workMode;
- (void)updateRecordState:(unsigned long long)arg1;
@property(nonatomic) unsigned long long recordState;
- (void)checkVoice:(id)arg1;
- (void)deselectedCurrentTmpl;
- (void)jumpToSelectedTmplNameAndShowPanel:(id)arg1 inCategory:(id)arg2;
@property(readonly, nonatomic) _Bool isShowSlider;
- (void)setIsShowPanel:(_Bool)arg1;
- (void)hidePanelView;
- (void)setActionBtnAlpha:(double)arg1;
- (void)dismissPanel;
- (void)dismissPanelIfShowed;
- (void)showPanel:(id)arg1 animated:(_Bool)arg2;
- (void)setDeleteBtnDiselected;
- (void)onDeleteBtnTap:(id)arg1;
- (void)onFilterBtnTap;
- (void)onMusicBtnTap:(id)arg1;
- (void)presentDoneBtn;
- (void)doneBtnPressed:(id)arg1;
- (void)libraryBtnPressed:(id)arg1;
- (void)dynamicFilterBtnPressed:(id)arg1;
- (void)reloadData;
- (void)dealloc;
- (id)initWithDelegate:(id)arg1 hiddenDynamic:(_Bool)arg2 hiddenFilter:(_Bool)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

