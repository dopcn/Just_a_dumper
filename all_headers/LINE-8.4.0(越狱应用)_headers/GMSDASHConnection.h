//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

#import "GMSDASHConnection-Protocol.h"

@class GMSDASHClientDescription, GMSDASHClientState, GMSx_GPBInt32Array, GMSx_GTMSessionFetcherService, GMSx_GTMStringEncoding, NSArray, NSMutableArray, NSString, NSURL;
@protocol GMSAnalyticsLogger, GMSTimingClock, OS_dispatch_group;

@interface GMSDASHConnection : NSObject <GMSDASHConnection>
{
    NSURL *_serverURL;
    NSMutableArray *_suspendQueue;
    NSMutableArray *_suspendedEnqueuedQueue;
    NSMutableArray *_pendingRequestGroups;
    NSMutableArray *_enqueuedRequests;
    GMSx_GTMStringEncoding *_websafeBase64Encoder;
    _Bool _hasCellularVoice;
    _Bool _hasCellularData;
    _Bool _waitingForCookies;
    // Error parsing type: {atomic<long long>="__a_"Aq}, name: _outgoingCount
    // Error parsing type: {atomic<long long>="__a_"Aq}, name: _incomingCount
    NSObject<OS_dispatch_group> *_dispatchGroup;
    // Error parsing type: {atomic<int>="__a_"Ai}, name: _numInProgressConnections
    long long _defaultXGeoVersion;
    long long _nextXGeoVersion;
    GMSx_GPBInt32Array *_experimentIDs;
    _Bool _hasLocationFix;
    _Bool _suppressUserState;
    _Bool _voiceSearchEnabled;
    int _navUsage;
    GMSDASHClientDescription *_clientDescription;
    GMSDASHClientState *_clientState;
    NSArray *_locationDescriptors;
    GMSx_GTMSessionFetcherService *_fetcherService;
    id <GMSTimingClock> _timingClock;
    unsigned long long _batchSize;
    id <GMSAnalyticsLogger> _logger;
    long long _lastRequestCompletedTime;
}

+ (id)fetcherServiceWithUserAgent:(id)arg1;
+ (id)userAgentForBundle:(id)arg1 SDKIdentifier:(id)arg2;
@property long long lastRequestCompletedTime; // @synthesize lastRequestCompletedTime=_lastRequestCompletedTime;
@property(readonly, nonatomic) id <GMSAnalyticsLogger> logger; // @synthesize logger=_logger;
@property(readonly, nonatomic) unsigned long long batchSize; // @synthesize batchSize=_batchSize;
@property(readonly, nonatomic) id <GMSTimingClock> timingClock; // @synthesize timingClock=_timingClock;
@property(readonly, nonatomic) GMSx_GTMSessionFetcherService *fetcherService; // @synthesize fetcherService=_fetcherService;
@property _Bool voiceSearchEnabled; // @synthesize voiceSearchEnabled=_voiceSearchEnabled;
@property _Bool suppressUserState; // @synthesize suppressUserState=_suppressUserState;
@property int navUsage; // @synthesize navUsage=_navUsage;
@property(retain) NSArray *locationDescriptors; // @synthesize locationDescriptors=_locationDescriptors;
@property _Bool hasLocationFix; // @synthesize hasLocationFix=_hasLocationFix;
@property(readonly, nonatomic) GMSDASHClientState *clientState; // @synthesize clientState=_clientState;
@property(readonly, copy, nonatomic) GMSDASHClientDescription *clientDescription; // @synthesize clientDescription=_clientDescription;
- (void).cxx_destruct;
@property(copy) GMSx_GPBInt32Array *experimentIDs;
@property(retain) NSURL *serverURL;
- (void)startNewBatch;
- (long long)issueNewXGeoVersion;
- (void)setCustomFetcherService:(id)arg1;
@property(readonly, getter=isWaitingForCookies) _Bool waitingForCookies;
@property(readonly) unsigned long long numberOfConnectionsInProgress;
- (_Bool)waitOnCurrentStreamingConnectionsWithTimeout:(double)arg1;
- (void)writeLogResponseBodyForFetcher:(id)arg1;
- (void)getOutgoingByteCount:(long long *)arg1 incomingByteCount:(long long *)arg2;
- (_Bool)readRequest:(id)arg1 dataInput:(struct JavaDataInput *)arg2;
- (void)internalStartConnectionWithGroupID:(id)arg1 asConnectionCheck:(_Bool)arg2 serverCallback:(CDUnknownBlockType)arg3;
- (id)XGeoHeaderValueFromLocationDescriptors:(id)arg1;
- (void)startConnectionWithParams:(id)arg1;
- (id)buildServerPayloadForRequests:(id)arg1;
- (id)clientPropertiesRequestForMutableRequests:(id)arg1;
- (id)clientPropertiesProtoSuppressingUserState:(_Bool)arg1;
- (id)userCookieRequest;
- (void)startConnectionsIfNeeded;
- (void)updateWaitingForCookies;
@property(readonly, nonatomic) NSString *legalCountry;
- (void)checkConnection:(CDUnknownBlockType)arg1;
- (long long)connectionIdleTimeMS;
@property(readonly, nonatomic) unsigned long long numberOfBatchesInSuspension;
- (void)resumeSending;
- (void)suspendSending;
- (id)requestsForStreamingBodyForGroupID:(id)arg1;
@property(readonly, nonatomic) unsigned long long pendingEnqueueCount;
@property(readonly, nonatomic) unsigned long long pendingRequestCount;
- (void)enqueueRequest:(id)arg1;
- (void)sendRequest:(id)arg1;
- (id)requestGroupForID:(id)arg1;
- (id)initWithServerURL:(id)arg1 clientDescription:(id)arg2 clientState:(id)arg3 fetcherService:(id)arg4 timingClock:(id)arg5 logger:(id)arg6;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

