//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

#import "AMapNaviCoreProtocol-Protocol.h"

@class AMapNaviCoreCombineRequestReformer, AMapNaviPoint, AMapNetworkManager, NSArray, NSCalendar, NSString;
@protocol AMapNaviCoreCombineDelegate;

@interface AMapNaviCoreCombine : NSObject <AMapNaviCoreProtocol>
{
    struct AMapNaviPosObserver *_posObserver;
    struct AMapNaviRouteObserver *_routeObserver;
    struct AMapNaviHttpInterface *_routeHttpInterface;
    struct AMapRouteAssetReader *_routeAssertReader;
    struct AMapNaviGuideObserver *_guideObserver;
    struct AMapNaviHttpInterface *_guideHttpInterface;
    struct AMapGuideAssetReader *_guideAssertReader;
    NSCalendar *_calendar;
    long long _unitFlags;
    struct tagLOCINFO2D _locInfo2D;
    int _routeResultType;
    struct IPathResult *_routeResult;
    int _selectedRouteID;
    _Bool _enabled;
    int _hasPassWayPointIndex;
    int _maneuverIconWidth;
    id <AMapNaviCoreCombineDelegate> _delegate;
    struct IGPosService *_posServeice;
    struct IGRouteService *_routeService;
    struct IGGuideService *_guideService;
    AMapNetworkManager *_networkManager;
    NSString *_restResponseErrorCode;
    AMapNaviCoreCombineRequestReformer *_lastRoutePlanRequestReformer;
    AMapNaviPoint *_curStartPoint;
    AMapNaviPoint *_curEndPoint;
    NSArray *_curWayPoints;
    long long _curStrategy;
}

@property _Bool enabled; // @synthesize enabled=_enabled;
@property(nonatomic) int maneuverIconWidth; // @synthesize maneuverIconWidth=_maneuverIconWidth;
@property(nonatomic) long long curStrategy; // @synthesize curStrategy=_curStrategy;
@property(nonatomic) int hasPassWayPointIndex; // @synthesize hasPassWayPointIndex=_hasPassWayPointIndex;
@property(retain, nonatomic) NSArray *curWayPoints; // @synthesize curWayPoints=_curWayPoints;
@property(retain, nonatomic) AMapNaviPoint *curEndPoint; // @synthesize curEndPoint=_curEndPoint;
@property(retain, nonatomic) AMapNaviPoint *curStartPoint; // @synthesize curStartPoint=_curStartPoint;
@property(retain) AMapNaviCoreCombineRequestReformer *lastRoutePlanRequestReformer; // @synthesize lastRoutePlanRequestReformer=_lastRoutePlanRequestReformer;
@property(retain, nonatomic) NSString *restResponseErrorCode; // @synthesize restResponseErrorCode=_restResponseErrorCode;
@property(retain, nonatomic) AMapNetworkManager *networkManager; // @synthesize networkManager=_networkManager;
@property(nonatomic) struct IGGuideService *guideService; // @synthesize guideService=_guideService;
@property(nonatomic) struct IGRouteService *routeService; // @synthesize routeService=_routeService;
@property(nonatomic) struct IGPosService *posServeice; // @synthesize posServeice=_posServeice;
@property(nonatomic) __weak id <AMapNaviCoreCombineDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (id)addBgimageAndArrowimageToImage:(id)arg1 arrowImage:(id)arg2;
- (char *)convertImageToPixelData:(id)arg1;
- (_Bool)Core_Guide_requestHttpPostWithModuleId:(int)arg1 reqId:(int)arg2 url:(const char *)arg3 data:(const char *)arg4 size:(unsigned long long)arg5;
- (_Bool)Core_Guide_requestHttpGetWithModuleId:(int)arg1 reqId:(int)arg2 url:(const char *)arg3;
- (void)Core_Guide_onUpdateNoNaviCongestionInfo:(const struct NoNaviCongestionInfo *)arg1;
- (void)Core_Guide_onUpdateNoNaviInfor:(const struct NoNaviInfor *)arg1;
- (void)Core_Guide_onUpdateTrafficFacilityWithNum:(int)arg1 facilityinfo:(const struct TrafficFacilityInfo *)arg2;
- (_Bool)Core_Guide_isNaviPlaying;
- (void)Core_Guide_onNaviPlayRing:(int)arg1;
- (void)Core_Guide_onNaviPlayTTS:(const unsigned short *)arg1 len:(int)arg2 type:(int)arg3;
- (void)Core_Guide_updateSoundFlag:(int)arg1 pointFlag:(int)arg2;
- (void)Core_Guide_onUpdateDataMiningTrafficEvent:(const struct TrafficEventInfo *)arg1;
- (void)Core_Guide_onNaviEtaIncidentReportHide:(unsigned int)arg1;
- (void)Core_Guide_onNaviEtaIncidentReportWithType:(unsigned int)arg1 lon:(int)arg2 lat:(int)arg3;
- (void)Core_Guide_onCarOnGuideRouteAgain;
- (int)Core_Guide_onCheckNaviVoiceCfg:(int)arg1;
- (int)Core_Guide_get3DDataVersion:(int)arg1;
- (void)Core_Guide_onfinishRecover3DPath:(int)arg1;
- (void)Core_Guide_onReroute:(int)arg1;
- (void)Core_Guide_onUpdateCongestion:(const struct CongestionInfo *)arg1;
- (void)Core_Guide_onUpdateRouteTrafficEvent:(const struct RouteTrafficEventInfo *)arg1;
- (void)Core_Guide_onUpdateTrafficEvent:(const struct TrafficEventInfo *)arg1 count:(int)arg2 type:(int)arg3;
- (void)Core_Guide_onDriveReport:(const char *)arg1;
- (void)Core_Guide_onLockScreenNaviTipsWithString:(const unsigned short *)arg1 len:(int)arg2 turnIcon:(int)arg3 segRemainLen:(int)arg4;
- (void)Core_Guide_onNaviPassViaPoint:(int)arg1;
- (void)Core_Guide_onNaviStop:(int)arg1;
- (void)Core_Guide_onTmcUpdateLightBarWithItems:(const struct ETALightBarItem *)arg1 itemNum:(int)arg2 noPassBarIndex:(int)arg3 etaUpdataFlag:(int)arg4;
- (void)Core_Guide_onUpdateSAPA:(const struct ServiceAreaInfo *)arg1 num:(int)arg2;
- (void)Core_Guide_onNaviShowCamera:(const struct NaviCamera *)arg1 count:(int)arg2;
- (void)Core_Guide_onNaviRenderManeuverIconWithData:(char *)arg1 size:(unsigned int)arg2 config:(struct Config)arg3;
- (void)Core_Guide_onNaviShowManeuverWithSegIndex:(int)arg1 maneuverID:(int)arg2 bufData:(const char *)arg3 bufSize:(int)arg4;
- (void)Core_Guide_onNaviHideLaneInfo;
- (void)Core_Guide_onNaviShowLaneInfoWithBackArr:(const char *)arg1 frontArr:(const char *)arg2;
- (void)Core_Guide_onNaviThreeDLastPass;
- (void)Core_Guide_onNaviHideCross;
- (void)Core_Guide_onNaviShowCrossWithFormat:(int)arg1 dataBufBack:(const char *)arg2 bufLengthBack:(int)arg3 dataBufArrow:(const char *)arg4 bufLengthArrow:(int)arg5;
- (void)Core_Guide_onExitDirectionInfo:(struct GuideBoardInfo *)arg1;
- (void)Core_Guide_onNaviInfoChange:(struct NaviInfo *)arg1;
- (void)Core_Guide_onCruiseInfoChange:(struct RouteString *)arg1;
- (void)Core_Guide_onTbtStatusChange:(int)arg1;
- (_Bool)Core_Route_requestHttpPostWithModuleId:(int)arg1 reqId:(int)arg2 url:(const char *)arg3 data:(const char *)arg4 size:(unsigned long long)arg5;
- (_Bool)Core_Route_requestHttpGetWithModuleId:(int)arg1 reqId:(int)arg2 url:(const char *)arg3;
- (void)Core_Route_onPathChanged:(int)arg1;
- (void)Core_Route_onRouStatusChange:(int)arg1;
- (void)Core_Route_onNewRouteErrorWithType:(int)arg1 errorCode:(int)arg2 pathData:(long long)arg3 isLocal:(_Bool)arg4;
- (void)Core_Route_onNewRouteWithType:(int)arg1 routes:(struct IPathResult *)arg2 pathData:(long long)arg3 isLocal:(_Bool)arg4;
- (void)Core_Pos_onSignInfoUpdate:(const union tagLOCSIGNDATA *)arg1;
- (void)Core_Pos_onSwitchParallelRoadFinished;
- (void)Core_Pos_onParallelRoadUpdate:(const struct tagGDLOCPARALLELROAD *)arg1;
- (void)Core_Pos_onLocInfoUpdate:(const struct tagLOCINFO2D *)arg1 pstLocInfo3D:(const struct tagGDLOCINFO3D *)arg2;
- (void)setCarLocationWithCoordinate:(id)arg1 offset:(int)arg2;
- (void)setTimeForOneWord:(int)arg1;
- (id)getNaviGuideList;
- (id)getNaviStaticInfo;
- (void)setClientNetType:(int)arg1;
- (void)setCrossDisplayMode:(int)arg1;
- (void)setDetectedMode:(int)arg1;
- (void)closeTrafficRadio;
- (void)openTrafficRadio;
- (void)closeTMC;
- (void)openTMC;
- (void)closeCamera;
- (void)openCamera;
- (_Bool)readTrafficInfoManualWithFrontDistance:(int)arg1;
- (void)readNaviInfoManual;
- (_Bool)setBroadcastMode:(int)arg1;
- (_Bool)setETARestriction:(_Bool)arg1;
- (_Bool)setVehicleID:(id)arg1;
- (_Bool)setGuideControlParamWithKey:(id)arg1 value:(id)arg2;
- (void)resumeNavi;
- (void)pauseNavi;
- (void)stopNavi;
- (_Bool)startGPSNavi;
- (void)stopEmulatorNavi;
- (_Bool)startEmulatorNavi;
- (void)setEmulatorNaviSpeed:(int)arg1;
- (id)getDriveReport;
- (id)getGuideServicesVersion;
- (unsigned long long)getLinkTopologyIDWithRouteID:(int)arg1 segmentIndex:(int)arg2 linkIndex:(int)arg3;
- (long long)getLinkStatusWithRouteID:(int)arg1 segmentIndex:(int)arg2 linkIndex:(int)arg3;
- (int)getLinkOwnershipWithRouteID:(int)arg1 segmentIndex:(int)arg2 linkIndex:(int)arg3;
- (_Bool)getLinkIsBranchedWithRouteID:(int)arg1 segmentIndex:(int)arg2 linkIndex:(int)arg3;
- (_Bool)getLinkIsHadTrafficLightsWithRouteID:(int)arg1 segmentIndex:(int)arg2 linkIndex:(int)arg3;
- (long long)getLinkTypeWithRouteID:(int)arg1 segmentIndex:(int)arg2 linkIndex:(int)arg3;
- (long long)getLinkRoadClassWithRouteID:(int)arg1 segmentIndex:(int)arg2 linkIndex:(int)arg3;
- (long long)getLinkFormWayWithRouteID:(int)arg1 segmentIndex:(int)arg2 linkIndex:(int)arg3;
- (int)getLinkTimeWithRouteID:(int)arg1 segmentIndex:(int)arg2 linkIndex:(int)arg3;
- (int)getLinkLengthWithRouteID:(int)arg1 segmentIndex:(int)arg2 linkIndex:(int)arg3;
- (id)getLinkRoadNameWithRouteID:(int)arg1 segmentIndex:(int)arg2 linkIndex:(int)arg3;
- (id)getLinkCoordinateArrayWithRouteID:(int)arg1 segmentIndex:(int)arg2 linkIndex:(int)arg3;
- (int)getSegmentLinkNumberWithRouteID:(int)arg1 segmentIndex:(int)arg2;
- (struct ILink *)getLinkForRouteID:(int)arg1 segmentIndex:(int)arg2 linkIndex:(int)arg3;
- (int)getSegmentAssitActionWithRouteID:(int)arg1 segmentIndex:(int)arg2;
- (id)getSegmentCoordinateArrayWithRouteID:(int)arg1 segmentIndex:(int)arg2;
- (int)getSegmentTollCostWithRouteID:(int)arg1 segmentIndex:(int)arg2;
- (int)getSegmentChargeLengthWithRouteID:(int)arg1 segmentIndex:(int)arg2;
- (int)getSegmentTurnIconWithRouteID:(int)arg1 segmentIndex:(int)arg2;
- (int)getSegmentTimeWithRouteID:(int)arg1 segmentIndex:(int)arg2;
- (int)getSegmentLengthWithRouteID:(int)arg1 segmentIndex:(int)arg2;
- (id)getSegmentRouteNameWithRouteID:(int)arg1 segmentIndex:(int)arg2;
- (int)getSegmentNumberWithRouteID:(int)arg1;
- (struct ISegment *)getSegmentForRouteID:(int)arg1 segmentIndex:(int)arg2;
- (id)getRouteRestAreasWithRouteID:(int)arg1 maxCount:(int)arg2;
- (id)getRouteCamerasWithRouteID:(int)arg1;
- (id)getRouteIconPoints:(int)arg1;
- (id)getRouteCityAdcodeListWithRouteID:(int)arg1;
- (id)getRouteTrafficStatusesWithRouteID:(int)arg1;
- (id)getRouteRestrictionInfoWithRouteID:(int)arg1;
- (id)getRouteLabelsWithRouteID:(int)arg1;
- (int)getRouteStrategyWithRouteID:(int)arg1;
- (int)getRouteTimeWithRouteID:(int)arg1;
- (int)getRouteLengthWithRouteID:(int)arg1;
- (id)getGroupSegmentListWithRouteID:(int)arg1;
- (void)selectRouteWithRouteID:(int)arg1;
- (id)getAllRouteID;
- (_Bool)setRouteControlParamWithKey:(id)arg1 value:(id)arg2;
- (_Bool)reCalculateDriveRouteWithDrivingStrategy:(long long)arg1 rerouteType:(long long)arg2;
- (_Bool)calculateDriveRouteWithStartPoint:(id)arg1 endPoint:(id)arg2 wayPoints:(id)arg3 drivingStrategy:(long long)arg4;
- (struct PointOfInterestsForRequest)getCurrentPointOfInterestsForRequest;
- (id)getRouteEngineVersion;
- (id)getRouteServicesVersion;
- (void)setGPSInfoWithCurrentLocation:(id)arg1 offset:(_Bool)arg2;
- (id)getPosServicesVersion;
- (void)cancelAllNetworkRequest;
- (void)cleanupGuideObservers;
- (void)cleanupRouteObservers;
- (void)cleanupPosObservers;
- (void)cleanupAllObservers;
- (void)setupGuideObservers;
- (void)setupRouteObservers;
- (void)setupPosObservers;
- (_Bool)initGuideService;
- (_Bool)initRouteService;
- (_Bool)initPosService;
- (_Bool)initAllCoresWithMapDataPath:(id)arg1;
- (void)initAllObservers;
- (void)initAllProperties;
- (id)initWithMapDataPath:(id)arg1;
- (void)dealloc;
- (void)deallocAllServices;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

