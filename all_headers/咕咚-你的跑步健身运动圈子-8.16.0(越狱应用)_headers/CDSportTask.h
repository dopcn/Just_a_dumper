//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

#import "CDSportMovementRecognizerDelegate-Protocol.h"
#import "CDSportRecorderDelegate-Protocol.h"
#import "CDSportTaskWrapperDelegate-Protocol.h"

@class CDSportConfiguration, CDSportDataProcessor, CDSportGPSTaskWrapper, CDSportMotionStationaryRecognizer, CDSportMovementRecognizer, CDSportProgressProcessor, CDSportRecorder, CDSportReporter, CDSportSensorTaskWrapper, CDSportSilentKeeper, NSString, NSTimer, SportRecord;
@protocol CDSportTaskDelegate;

@interface CDSportTask : NSObject <CDSportRecorderDelegate, CDSportTaskWrapperDelegate, CDSportMovementRecognizerDelegate>
{
    _Bool _restored;
    _Bool _autoPaused;
    id <CDSportTaskDelegate> _delegate;
    unsigned long long _status;
    SportRecord *_sportRecord;
    CDSportDataProcessor *_dataProcessor;
    CDSportRecorder *_sportRecorder;
    CDSportReporter *_sportReporter;
    CDSportConfiguration *_configuration;
    CDSportGPSTaskWrapper *_GPSTaskWrapper;
    CDSportSensorTaskWrapper *_sensorTaskWrapper;
    CDSportProgressProcessor *_progressProcessor;
    CDSportMovementRecognizer *_movementRecognizer;
    CDSportMotionStationaryRecognizer *_motionStationaryRecognizer;
    NSTimer *_timer;
    CDSportSilentKeeper *_keeper;
}

@property(retain, nonatomic) CDSportSilentKeeper *keeper; // @synthesize keeper=_keeper;
@property(retain, nonatomic) NSTimer *timer; // @synthesize timer=_timer;
@property(retain, nonatomic) CDSportMotionStationaryRecognizer *motionStationaryRecognizer; // @synthesize motionStationaryRecognizer=_motionStationaryRecognizer;
@property(retain, nonatomic) CDSportMovementRecognizer *movementRecognizer; // @synthesize movementRecognizer=_movementRecognizer;
@property(retain, nonatomic) CDSportProgressProcessor *progressProcessor; // @synthesize progressProcessor=_progressProcessor;
@property(retain, nonatomic) CDSportSensorTaskWrapper *sensorTaskWrapper; // @synthesize sensorTaskWrapper=_sensorTaskWrapper;
@property(retain, nonatomic) CDSportGPSTaskWrapper *GPSTaskWrapper; // @synthesize GPSTaskWrapper=_GPSTaskWrapper;
@property(nonatomic) _Bool autoPaused; // @synthesize autoPaused=_autoPaused;
@property(nonatomic) _Bool restored; // @synthesize restored=_restored;
@property(retain, nonatomic) CDSportConfiguration *configuration; // @synthesize configuration=_configuration;
@property(retain, nonatomic) CDSportReporter *sportReporter; // @synthesize sportReporter=_sportReporter;
@property(retain, nonatomic) CDSportRecorder *sportRecorder; // @synthesize sportRecorder=_sportRecorder;
@property(retain, nonatomic) CDSportDataProcessor *dataProcessor; // @synthesize dataProcessor=_dataProcessor;
@property(retain, nonatomic) SportRecord *sportRecord; // @synthesize sportRecord=_sportRecord;
@property(nonatomic) unsigned long long status; // @synthesize status=_status;
@property(nonatomic) __weak id <CDSportTaskDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
@property(readonly) double relativeTimestamp;
- (_Bool)sensorEnabled;
- (_Bool)movementRecognizerShouldRestart:(id)arg1;
- (void)movementRecognizer:(id)arg1 didChangeState:(unsigned long long)arg2;
- (unsigned long long)taskWrapper:(id)arg1 shouldProcessData:(id)arg2;
- (void)taskWrapper:(id)arg1 didGenerateData:(id)arg2;
- (void)sportRecorder:(id)arg1 didReplaceOldPoints:(id)arg2 byNewPoint:(id)arg3;
- (void)sportRecorder:(id)arg1 didAppendSensorPoint:(id)arg2;
- (void)sportRecorder:(id)arg1 didAppendGPSPoint:(id)arg2;
- (void)timerDidFired;
@property(readonly) _Bool savable;
- (void)save;
- (void)drop;
- (void)finish;
- (void)cancel;
- (void)resume;
- (void)pause;
- (void)begin;
- (void)prepare;
- (id)initWithRestoredSportRecord:(id)arg1;
- (id)initWithSportRecord:(id)arg1;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

