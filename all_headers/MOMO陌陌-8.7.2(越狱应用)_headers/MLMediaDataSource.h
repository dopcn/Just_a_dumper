//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "MLUIDataSource.h"

#import "GPUImagePublisherDelegate-Protocol.h"
#import "MLCameraSourceAnalyticsDelegate-Protocol.h"
#import "MLConferenceVideoDelegate-Protocol.h"

@class MLAudioSource, MLBroadcastDataSourceCoordinator, MLCameraSource, MLColorMediaSource, MLFilterDescriptor, MLMediaCombiner, MLMediaViewController, MLPlayerConfiguration, MLPublisher, MLPublisherOptions, MLRoomDecorationDataSource, MLRoomLinkModel, NSDate, NSDictionary, NSMutableArray, NSMutableDictionary, NSNumber, NSString, NSTimer;
@protocol MLMediaDataSourceDelegate;

@interface MLMediaDataSource : MLUIDataSource <MLCameraSourceAnalyticsDelegate, GPUImagePublisherDelegate, MLConferenceVideoDelegate>
{
    _Bool _isVideoConnErrored;
    _Bool _switchingToConferenceStream;
    _Bool _firstStartLiveQueryPub;
    _Bool _startPublishFlag;
    _Bool _firstQueryPub;
    _Bool _publishingFlag;
    _Bool _alreadyRequestProfileLink;
    _Bool _requiresConferencePublisher;
    _Bool _isProhibitLiving;
    _Bool _sizeChange;
    _Bool _conferenceNeedCallOnMemberExit;
    _Bool _forceCreateCameraSource;
    _Bool _isAudioPlayMode;
    _Bool _hasClickBeginButton;
    _Bool _alreadyAutoApplyConnect;
    _Bool _hostFriendsModeEffectiveContentEnabled;
    _Bool _isAutoSelectVideoQualityTiped;
    MLFilterDescriptor *_currentFilterDescriptor;
    MLMediaViewController *_mediaController;
    MLBroadcastDataSourceCoordinator *_dataSourceCoordinator;
    MLPlayerConfiguration *_playerConfig;
    id <MLMediaDataSourceDelegate> _delegate;
    MLRoomLinkModel *_linkModel;
    MLPublisher *_publisher;
    MLPublisher *_connectPublisher;
    NSMutableDictionary *_doublePushDataSourceDict;
    NSMutableDictionary *_seiUserScreenTempStoreMDict;
    MLColorMediaSource *_colorMediaSource;
    MLCameraSource *_cameraSource;
    MLAudioSource *_audioSource;
    MLMediaCombiner *_mediaCombiner;
    unsigned long long _endPublisherType;
    long long _PublishingJudgingType;
    unsigned long long _endPublishingType;
    unsigned long long _closePublisherStatusType;
    unsigned long long _startPublishingType;
    NSString *_hostPublisherType;
    CDUnknownBlockType _publisherRestartCompletionCallback;
    CDUnknownBlockType _startEnterAndShowMaskViewBlock;
    unsigned long long _guestCloseConferencePublishingType;
    unsigned long long _conferencePublishingInterruptType;
    NSTimer *_switchPublishingTimer;
    NSString *_onMemberExitWithUserId;
    unsigned long long _debugPublisherType;
    MLPublisherOptions *_publisherOptions;
    NSDictionary *_publisherQualityInfo;
    long long _logUpCycleTime;
    NSString *_oldPublishingUrl;
    NSDate *_audioModeBeginDate;
    unsigned long long _starPKPublisherType;
    unsigned long long _originPublisherType;
    MLPublisherOptions *_originPublisherOptions;
    NSString *_pkConferenceRoomID;
    NSMutableArray *_tempMagicGestureArray;
    MLRoomDecorationDataSource *_decorationDataSource;
    NSDate *_uploadTime;
    NSNumber *_shouldPresentBadNetworkTipsForPublisherQuality;
    struct CGSize _videoSize;
    struct CGRect _ratioRect;
}

@property(retain, nonatomic) NSNumber *shouldPresentBadNetworkTipsForPublisherQuality; // @synthesize shouldPresentBadNetworkTipsForPublisherQuality=_shouldPresentBadNetworkTipsForPublisherQuality;
@property(retain, nonatomic) NSDate *uploadTime; // @synthesize uploadTime=_uploadTime;
@property(retain, nonatomic) MLRoomDecorationDataSource *decorationDataSource; // @synthesize decorationDataSource=_decorationDataSource;
@property(retain, nonatomic) NSMutableArray *tempMagicGestureArray; // @synthesize tempMagicGestureArray=_tempMagicGestureArray;
@property(nonatomic) _Bool isAutoSelectVideoQualityTiped; // @synthesize isAutoSelectVideoQualityTiped=_isAutoSelectVideoQualityTiped;
@property(nonatomic) _Bool hostFriendsModeEffectiveContentEnabled; // @synthesize hostFriendsModeEffectiveContentEnabled=_hostFriendsModeEffectiveContentEnabled;
@property(nonatomic) _Bool alreadyAutoApplyConnect; // @synthesize alreadyAutoApplyConnect=_alreadyAutoApplyConnect;
@property(retain, nonatomic) NSString *pkConferenceRoomID; // @synthesize pkConferenceRoomID=_pkConferenceRoomID;
@property(retain, nonatomic) MLPublisherOptions *originPublisherOptions; // @synthesize originPublisherOptions=_originPublisherOptions;
@property(nonatomic) unsigned long long originPublisherType; // @synthesize originPublisherType=_originPublisherType;
@property(nonatomic) unsigned long long starPKPublisherType; // @synthesize starPKPublisherType=_starPKPublisherType;
@property(retain, nonatomic) NSDate *audioModeBeginDate; // @synthesize audioModeBeginDate=_audioModeBeginDate;
@property(nonatomic) _Bool hasClickBeginButton; // @synthesize hasClickBeginButton=_hasClickBeginButton;
@property(nonatomic) _Bool isAudioPlayMode; // @synthesize isAudioPlayMode=_isAudioPlayMode;
@property(nonatomic) _Bool forceCreateCameraSource; // @synthesize forceCreateCameraSource=_forceCreateCameraSource;
@property(copy, nonatomic) NSString *oldPublishingUrl; // @synthesize oldPublishingUrl=_oldPublishingUrl;
@property(nonatomic) long long logUpCycleTime; // @synthesize logUpCycleTime=_logUpCycleTime;
@property(retain, nonatomic) NSDictionary *publisherQualityInfo; // @synthesize publisherQualityInfo=_publisherQualityInfo;
@property(retain, nonatomic) MLPublisherOptions *publisherOptions; // @synthesize publisherOptions=_publisherOptions;
@property(nonatomic) unsigned long long debugPublisherType; // @synthesize debugPublisherType=_debugPublisherType;
@property(copy, nonatomic) NSString *onMemberExitWithUserId; // @synthesize onMemberExitWithUserId=_onMemberExitWithUserId;
@property(nonatomic) _Bool conferenceNeedCallOnMemberExit; // @synthesize conferenceNeedCallOnMemberExit=_conferenceNeedCallOnMemberExit;
@property(retain, nonatomic) NSTimer *switchPublishingTimer; // @synthesize switchPublishingTimer=_switchPublishingTimer;
@property(nonatomic) unsigned long long conferencePublishingInterruptType; // @synthesize conferencePublishingInterruptType=_conferencePublishingInterruptType;
@property(nonatomic) unsigned long long guestCloseConferencePublishingType; // @synthesize guestCloseConferencePublishingType=_guestCloseConferencePublishingType;
@property(copy, nonatomic) CDUnknownBlockType startEnterAndShowMaskViewBlock; // @synthesize startEnterAndShowMaskViewBlock=_startEnterAndShowMaskViewBlock;
@property(copy, nonatomic) CDUnknownBlockType publisherRestartCompletionCallback; // @synthesize publisherRestartCompletionCallback=_publisherRestartCompletionCallback;
@property(copy, nonatomic) NSString *hostPublisherType; // @synthesize hostPublisherType=_hostPublisherType;
@property(nonatomic) _Bool sizeChange; // @synthesize sizeChange=_sizeChange;
@property(nonatomic) struct CGSize videoSize; // @synthesize videoSize=_videoSize;
@property(nonatomic) struct CGRect ratioRect; // @synthesize ratioRect=_ratioRect;
@property(nonatomic) _Bool isProhibitLiving; // @synthesize isProhibitLiving=_isProhibitLiving;
@property(nonatomic) unsigned long long startPublishingType; // @synthesize startPublishingType=_startPublishingType;
@property(nonatomic) unsigned long long closePublisherStatusType; // @synthesize closePublisherStatusType=_closePublisherStatusType;
@property(nonatomic) unsigned long long endPublishingType; // @synthesize endPublishingType=_endPublishingType;
@property(nonatomic) long long PublishingJudgingType; // @synthesize PublishingJudgingType=_PublishingJudgingType;
@property(nonatomic) unsigned long long endPublisherType; // @synthesize endPublisherType=_endPublisherType;
@property(nonatomic) _Bool requiresConferencePublisher; // @synthesize requiresConferencePublisher=_requiresConferencePublisher;
@property(retain, nonatomic) MLMediaCombiner *mediaCombiner; // @synthesize mediaCombiner=_mediaCombiner;
@property(retain, nonatomic) MLAudioSource *audioSource; // @synthesize audioSource=_audioSource;
@property(retain, nonatomic) MLCameraSource *cameraSource; // @synthesize cameraSource=_cameraSource;
@property(retain, nonatomic) MLColorMediaSource *colorMediaSource; // @synthesize colorMediaSource=_colorMediaSource;
@property(retain, nonatomic) NSMutableDictionary *seiUserScreenTempStoreMDict; // @synthesize seiUserScreenTempStoreMDict=_seiUserScreenTempStoreMDict;
@property(retain, nonatomic) NSMutableDictionary *doublePushDataSourceDict; // @synthesize doublePushDataSourceDict=_doublePushDataSourceDict;
@property(retain, nonatomic) MLPublisher *connectPublisher; // @synthesize connectPublisher=_connectPublisher;
@property(retain, nonatomic) MLPublisher *publisher; // @synthesize publisher=_publisher;
@property(retain, nonatomic) MLRoomLinkModel *linkModel; // @synthesize linkModel=_linkModel;
@property(nonatomic) _Bool alreadyRequestProfileLink; // @synthesize alreadyRequestProfileLink=_alreadyRequestProfileLink;
@property(nonatomic, getter=isPublishingFlag) _Bool publishingFlag; // @synthesize publishingFlag=_publishingFlag;
@property(nonatomic) _Bool firstQueryPub; // @synthesize firstQueryPub=_firstQueryPub;
@property(nonatomic) _Bool startPublishFlag; // @synthesize startPublishFlag=_startPublishFlag;
@property(nonatomic) _Bool firstStartLiveQueryPub; // @synthesize firstStartLiveQueryPub=_firstStartLiveQueryPub;
@property(nonatomic) _Bool switchingToConferenceStream; // @synthesize switchingToConferenceStream=_switchingToConferenceStream;
@property(nonatomic) __weak id <MLMediaDataSourceDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) _Bool isVideoConnErrored; // @synthesize isVideoConnErrored=_isVideoConnErrored;
@property(readonly, nonatomic) MLPlayerConfiguration *playerConfig; // @synthesize playerConfig=_playerConfig;
@property(nonatomic) __weak MLBroadcastDataSourceCoordinator *dataSourceCoordinator; // @synthesize dataSourceCoordinator=_dataSourceCoordinator;
@property(nonatomic) __weak MLMediaViewController *mediaController; // @synthesize mediaController=_mediaController;
- (void).cxx_destruct;
- (void)getPullURLSuccess:(id)arg1;
- (void)updatePullURLFromIM;
- (_Bool)needAgainCreatCameraSource;
- (id)linkUserWithMomoID:(id)arg1;
- (void)audioHostSetValueAEFilterWithName:(id)arg1;
- (void)audioHostSetSabineAudioEffectWithName:(id)arg1;
- (void)audioHostSetValuePitchShift:(int)arg1;
- (void)audioHostSetValueEQ:(int)arg1;
- (void)publisher:(id)arg1 onConferenceAudioPacket:(id)arg2 audioInfo:(id)arg3;
- (void)publisher:(id)arg1 onRemoteConferenceAudioFrame:(struct opaqueCMSampleBuffer *)arg2 userId:(unsigned int)arg3;
- (void)publisher:(id)arg1 onRemoteConferenceVideoFrame:(struct opaqueCMSampleBuffer *)arg2 userId:(unsigned int)arg3;
- (void)getAudioPlayURLError:(id)arg1;
- (void)getAudioPlayURLFail:(id)arg1;
- (void)getAudioPlayURLSuccess:(id)arg1;
- (void)getAudioPlayURL;
- (_Bool)isRadioRoom;
- (void)setVoiceSettingsCallbackSuccess:(id)arg1;
- (void)setVoiceSettingsCallbackWithRoomId:(unsigned long long)arg1;
- (void)setVoiceSettingsSuccess:(id)arg1;
- (void)resetScoreWithMomoIdSuccess:(id)arg1;
- (void)resetScoreWithMomoId:(id)arg1;
- (void)setVoiceSettingsWithRoomId:(id)arg1 type:(unsigned long long)arg2;
- (void)notifyFollowersWhenConferenceConnected:(id)arg1;
- (void)notifyConferenceToFollowers;
- (void)getConferenceRemainPushTimesSuccess:(id)arg1;
- (void)checkIfShouldAlertToNotifyFollowers;
- (void)requestSendAnimalIfNeedWithRoomId:(id)arg1;
- (void)updateConferneceWindowThumbs:(long long)arg1 forStarId:(id)arg2;
- (void)protobufMobileRoomDidReceiveChangeAnimal:(id)arg1 withGroupInfo:(id)arg2;
- (void)didRecvPublishConnectionReset:(_Bool)arg1;
- (_Bool)isPublisher;
- (void)downloadProductDecoration:(id)arg1 targetId:(id)arg2;
- (void)downloadARGiftBundle:(id)arg1 senderMomoid:(id)arg2;
- (unsigned long long)currentUsePubPushType;
- (id)currentUsedPublisherType;
- (void)startPublishingStatusError:(id)arg1;
- (void)startPublishingStatusFailure:(id)arg1;
- (void)startPublishingStatusSuccess:(id)arg1;
- (void)slaverConferenceCancel;
- (void)slaveConferencePause:(unsigned long long)arg1;
- (void)masterConferencePause;
- (void)invalideSwitchPublishingTimer;
- (void)switchPublishingJudgingType;
- (void)startSwitchPublishingTimer;
- (_Bool)masterConferenceNeedResume;
- (void)masterConferenceResume;
- (void)masterEnterForeground;
- (void)showCancelConferenceApply;
- (void)slaveConferenceResume;
- (void)startPubForConferenceFail:(id)arg1;
- (void)startPubForConferenceSuccess:(id)arg1;
- (void)onResumePublishing;
- (_Bool)publisherPushLevelChange:(id)arg1 withEncodeSize:(struct CGSize)arg2 withVideoBitrate:(int)arg3;
- (void)publisherPushDropPacket:(id)arg1 error:(id)arg2;
- (void)publisherPushNetworkWarning:(id)arg1 error:(id)arg2;
- (void)publisher:(id)arg1 updateConnectWaitViewsWithRemoteDisplays:(id)arg2;
- (void)publisher:(id)arg1 reportAudioVolumeIndicationOfSpeakers:(id)arg2;
- (void)publisher:(id)arg1 didReceivedVideoForRemoteId:(id)arg2 remoteView:(id)arg3;
- (void)publisher:(id)arg1 didOfflineOfUid:(id)arg2 reason:(unsigned long long)arg3;
- (void)publisher:(id)arg1 didOfflineOfUid:(id)arg2;
- (void)publisher:(id)arg1 hostDidJoinChannel:(id)arg2;
- (void)publisher:(id)arg1 updateSubviewFramesRatio:(id)arg2;
- (void)publisher:(id)arg1 updateDisplayFrames:(id)arg2;
- (void)publisherBufferEnd:(id)arg1;
- (void)publisherBufferStart:(id)arg1;
- (void)publisher:(id)arg1 onKickedWithGuestId:(id)arg2 reason:(int)arg3;
- (void)publisher:(id)arg1 onRemoteVideoIsLostWithUserId:(id)arg2;
- (void)liveGameNoticeWeb:(id)arg1;
- (void)publisher:(id)arg1 onConnectionSuccessWithHostId:(id)arg2 guestId:(id)arg3;
- (void)publisher:(id)arg1 onMemberExitWithUserId:(id)arg2 reason:(long long)arg3;
- (void)publisherAudioInterruptEnd:(id)arg1 error:(id)arg2;
- (void)publisherAudioInterruptBegin:(id)arg1 error:(id)arg2;
- (id)getNeedPlaySongModel;
- (void)autoPlayMusic;
- (void)musicPlayerDidCompleted:(id)arg1 error:(id)arg2;
- (void)musicPlayerDidfailed:(id)arg1 error:(id)arg2;
- (void)publisherDidStopPublishing:(id)arg1 error:(id)arg2;
- (void)publisherDidStartPublishing:(id)arg1 error:(id)arg2;
- (void)publisher:(id)arg1 streamPublishingFailedWithError:(id)arg2;
- (void)onGuestPublishFailByTimeOut;
- (void)cancelGuestPublishFail;
- (void)onGuestPublishFail;
- (void)publishingFailedAlertWithErrorcode:(long long)arg1;
- (void)kickOff;
- (void)endBroadcast:(unsigned long long)arg1;
- (void)requestRoomLinkProfileFailed:(id)arg1;
- (void)requestRoomLinkProfileError:(id)arg1;
- (void)requestRoomLinkProfileSuccess:(id)arg1;
- (void)requestRoomLinkProfileIfNeedWithVersion:(long long)arg1;
- (void)initAgoraPublisherWithInputVideoSize:(struct CGSize)arg1 isHost:(_Bool)arg2;
- (void)initConferencePublisherWithInputVideoSize:(struct CGSize)arg1 isHost:(_Bool)arg2;
- (void)initStreamPublisherWithInputVideoSize:(struct CGSize)arg1;
@property(retain, nonatomic) MLFilterDescriptor *currentFilterDescriptor; // @synthesize currentFilterDescriptor=_currentFilterDescriptor;
- (void)removeAllDecoration;
- (void)addTriggeredDecoration:(id)arg1;
- (void)addMagicGestureDecorationWithGestureGroupType:(id)arg1 gestureZipUrl:(id)arg2 modelUrlString:(id)arg3 triggerRegion:(id)arg4 duration:(double)arg5;
- (_Bool)magicGestureOnlineWithGestureID:(id)arg1 compareGroupArray:(id)arg2;
- (void)updateStorageToCameraSource;
- (void)decorationManagerDecorationFilterAdded:(id)arg1;
- (void)cameraSource:(id)arg1 logEventWithParameters:(id)arg2 images:(id)arg3;
- (void)createCameraSourceIfNeeded;
- (void)releaseCameraSourceIfNeeded;
- (void)createCameraSourceWitheType:(unsigned long long)arg1;
- (void)hostInitializePublisherForStopConference;
- (void)initPublisher;
- (void)mediaSourceStopPublishingWithErrorcode:(long long)arg1;
- (void)closePublisherWithErrorcode:(long long)arg1;
- (void)configPublisherSubVideos;
- (void)checkPublisherType:(unsigned long long)arg1;
- (void)checkPublisherParamValidForCurrentType:(id)arg1;
- (void)queryVideoPubParamFailure:(id)arg1;
- (void)queryVideoPubParamError:(id)arg1;
- (void)queryVideoPubParamSuccess:(id)arg1;
- (void)queryVideoPubParam;
- (unsigned long long)queryPubType;
- (void)updateRankingPhoto:(id)arg1 forStarId:(id)arg2;
- (void)queryUrlError:(id)arg1;
- (void)queryUrlFail:(id)arg1;
- (void)queryUrlSuccess:(id)arg1;
- (void)queryPlayURLWithSource:(id)arg1 URLID:(id)arg2;
- (void)refreshRoomVideoPlayURL;
- (void)refreshMobileRoomVideoPlayURL;
- (void)videoDidFinish;
- (id)getVideoByQuality:(long long)arg1 urls:(id)arg2;
- (id)getVideoByArray:(id)arg1;
- (_Bool)checkIJKPlayerVideoConfigInfoValid:(id)arg1;
- (id)currentVideoDetail;
- (id)initialPlayConfigure;
- (id)showProfile;
@property(readonly, nonatomic) unsigned long long offlineStatus;
@property(readonly, nonatomic) _Bool isFulltimeRoom;
- (void)dealloc;
- (id)init;
@property(retain, nonatomic) NSNumber *publisherQuality;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

