//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "NMSongProtocol-Protocol.h"
#import "NSCoding-Protocol.h"
#import "NSCopying-Protocol.h"
#import "NSItemProviderReading-Protocol.h"
#import "NSItemProviderWriting-Protocol.h"

@class MPMediaItem, NMAlbum, NMArtist, NMCollection, NMDjProgram, NMDownloadProgress, NMSimplePrivateCloud, NMSongCacheUrlInfo, NMSongFile, NMSongPrivilege, NMSongUrlInfo, NSArray, NSDictionary, NSMutableArray, NSMutableDictionary, NSNumber, NSString;

@interface NMSong : NSObject <NSItemProviderReading, NSItemProviderWriting, NSCopying, NSCoding, NMSongProtocol>
{
    NSString *_songId;
    NSString *_name;
    NSMutableArray *_songFile;
    NSString *_artistNames;
    NSString *_artistName;
    NSMutableArray *_artists;
    NMAlbum *_album;
    NSString *_albumId;
    NSString *_albumName;
    long long _popularity;
    unsigned long long _type;
    double _duration;
    NMDjProgram *_djProgram;
    MPMediaItem *_mediaItem;
    NSString *_mvId;
    NSString *_alg;
    NMCollection *_source;
    NSString *_expectedDownloadFileSizeCache;
    NSString *_currentDownloadFileSizeCache;
    NMDownloadProgress *_downloadProgressCache;
    NMSongPrivilege *_privilege;
    _Bool _hasGetArtistAlbumInfo;
    _Bool _exclusive;
    _Bool _fileExist;
    _Bool _isPod;
    _Bool _hasGetCommentCount;
    _Bool _hasGetRewardCount;
    NSString *_persistId;
    NSString *_artistNameWithAddtion;
    NSString *initial;
    NMArtist *_firstArtist;
    NSString *_artistAvatarUrl;
    NSString *_artistId;
    NSArray *_alias;
    NSArray *_transNames;
    NSArray *_addtionNames;
    NSString *_nameWithAddtion;
    NSArray *_relatedVideos;
    long long _serverDuration;
    NSString *_albumInitial;
    NSString *_artistInitial;
    NSString *_pinYin;
    NSString *_shuangPin;
    NSString *_addtionName;
    NSString *_addtionPinyin;
    NSString *_addtionShuangpin;
    unsigned long long _state;
    double _progress;
    NMDownloadProgress *_downloadProgress;
    NSString *_whereCopyFrom;
    NMSongFile *_targetDownloadSongFile;
    long long _radioType;
    long long _commentCount;
    long long _rewardCount;
    NSString *_equalizerString;
    NSString *_threadId;
    long long _ringToneInfo;
    NSString *_ringtoneUrl;
    NSString *_trackDisc;
    long long _trackNumber;
    long long _version;
    long long _cloudType;
    NMSimplePrivateCloud *_simplePrivateCloud;
    unsigned long long _fromType;
    NMSongFile *_lfile;
    NMSongFile *_mfile;
    NMSongFile *_hfile;
    NMSongFile *_auditionfile;
    NSMutableDictionary *_extraInfo;
    NMSongCacheUrlInfo *_playUrlInfo;
    NMSongUrlInfo *_downloadUrlInfo;
    NMSongUrlInfo *_savedDownloadUrlInfo;
    long long _downloadFailCode;
    long long _bpm;
    long long _userAverageBpm;
    NSDictionary *_artistUserIdDict;
}

+ (id)parseSongIdWithDictionary:(id)arg1;
+ (id)writableTypeIdentifiersForItemProvider;
+ (id)objectWithItemProviderData:(id)arg1 typeIdentifier:(id)arg2 error:(id *)arg3;
+ (id)readableTypeIdentifiersForItemProvider;
+ (id)typeIdentifier;
@property(copy, nonatomic) NSDictionary *artistUserIdDict; // @synthesize artistUserIdDict=_artistUserIdDict;
@property(nonatomic) long long userAverageBpm; // @synthesize userAverageBpm=_userAverageBpm;
@property(nonatomic) long long bpm; // @synthesize bpm=_bpm;
@property(nonatomic) long long downloadFailCode; // @synthesize downloadFailCode=_downloadFailCode;
@property(retain, nonatomic) NMSongUrlInfo *savedDownloadUrlInfo; // @synthesize savedDownloadUrlInfo=_savedDownloadUrlInfo;
@property(retain, nonatomic) NMSongUrlInfo *downloadUrlInfo; // @synthesize downloadUrlInfo=_downloadUrlInfo;
@property(retain, nonatomic) NMSongCacheUrlInfo *playUrlInfo; // @synthesize playUrlInfo=_playUrlInfo;
@property(retain, nonatomic) NSMutableDictionary *extraInfo; // @synthesize extraInfo=_extraInfo;
@property(retain, nonatomic) NMSongFile *auditionfile; // @synthesize auditionfile=_auditionfile;
@property(retain, nonatomic) NMSongFile *hfile; // @synthesize hfile=_hfile;
@property(retain, nonatomic) NMSongFile *mfile; // @synthesize mfile=_mfile;
@property(retain, nonatomic) NMSongFile *lfile; // @synthesize lfile=_lfile;
@property(nonatomic) unsigned long long fromType; // @synthesize fromType=_fromType;
@property(retain, nonatomic) NMSimplePrivateCloud *simplePrivateCloud; // @synthesize simplePrivateCloud=_simplePrivateCloud;
@property(nonatomic) long long cloudType; // @synthesize cloudType=_cloudType;
@property(nonatomic) long long version; // @synthesize version=_version;
@property(nonatomic) long long trackNumber; // @synthesize trackNumber=_trackNumber;
@property(retain, nonatomic) NSString *trackDisc; // @synthesize trackDisc=_trackDisc;
@property(retain, nonatomic) NSString *ringtoneUrl; // @synthesize ringtoneUrl=_ringtoneUrl;
@property(nonatomic) long long ringToneInfo; // @synthesize ringToneInfo=_ringToneInfo;
@property(retain, nonatomic) NSString *threadId; // @synthesize threadId=_threadId;
@property(retain, nonatomic) NSString *equalizerString; // @synthesize equalizerString=_equalizerString;
@property(nonatomic) _Bool hasGetRewardCount; // @synthesize hasGetRewardCount=_hasGetRewardCount;
@property(nonatomic) long long rewardCount; // @synthesize rewardCount=_rewardCount;
@property(nonatomic) _Bool hasGetCommentCount; // @synthesize hasGetCommentCount=_hasGetCommentCount;
@property(nonatomic) long long commentCount; // @synthesize commentCount=_commentCount;
@property(nonatomic) _Bool isPod; // @synthesize isPod=_isPod;
@property(nonatomic) long long radioType; // @synthesize radioType=_radioType;
@property(nonatomic) _Bool fileExist; // @synthesize fileExist=_fileExist;
@property(retain, nonatomic) NMCollection *source; // @synthesize source=_source;
@property(retain, nonatomic) NMSongFile *targetDownloadSongFile; // @synthesize targetDownloadSongFile=_targetDownloadSongFile;
@property(retain, nonatomic) NSString *whereCopyFrom; // @synthesize whereCopyFrom=_whereCopyFrom;
@property(nonatomic) _Bool exclusive; // @synthesize exclusive=_exclusive;
@property(retain, nonatomic) NMDownloadProgress *downloadProgress; // @synthesize downloadProgress=_downloadProgress;
@property(nonatomic) double progress; // @synthesize progress=_progress;
@property(nonatomic) unsigned long long state; // @synthesize state=_state;
@property(retain, nonatomic) NSString *addtionShuangpin; // @synthesize addtionShuangpin=_addtionShuangpin;
@property(retain, nonatomic) NSString *addtionPinyin; // @synthesize addtionPinyin=_addtionPinyin;
@property(retain, nonatomic) NSString *addtionName; // @synthesize addtionName=_addtionName;
@property(retain, nonatomic) NSString *shuangPin; // @synthesize shuangPin=_shuangPin;
@property(retain, nonatomic) NSString *pinYin; // @synthesize pinYin=_pinYin;
@property(retain, nonatomic) NSString *artistInitial; // @synthesize artistInitial=_artistInitial;
@property(retain, nonatomic) NSString *albumInitial; // @synthesize albumInitial=_albumInitial;
@property(nonatomic) long long serverDuration; // @synthesize serverDuration=_serverDuration;
@property(nonatomic) _Bool hasGetArtistAlbumInfo; // @synthesize hasGetArtistAlbumInfo=_hasGetArtistAlbumInfo;
@property(retain, nonatomic) NSArray *relatedVideos; // @synthesize relatedVideos=_relatedVideos;
@property(retain, nonatomic) NSString *nameWithAddtion; // @synthesize nameWithAddtion=_nameWithAddtion;
@property(retain, nonatomic) NSArray *addtionNames; // @synthesize addtionNames=_addtionNames;
@property(retain, nonatomic) NSArray *transNames; // @synthesize transNames=_transNames;
@property(retain, nonatomic) NSArray *alias; // @synthesize alias=_alias;
@property(retain, nonatomic) NSString *artistId; // @synthesize artistId=_artistId;
@property(retain, nonatomic) NSString *artistAvatarUrl; // @synthesize artistAvatarUrl=_artistAvatarUrl;
@property(retain, nonatomic) NMArtist *firstArtist; // @synthesize firstArtist=_firstArtist;
@property(retain, nonatomic) NSString *alg; // @synthesize alg=_alg;
@property(retain, nonatomic) NSString *mvId; // @synthesize mvId=_mvId;
@property(retain, nonatomic) NSString *initial; // @synthesize initial;
@property(nonatomic) double duration; // @synthesize duration=_duration;
@property(retain, nonatomic) NMDjProgram *djProgram; // @synthesize djProgram=_djProgram;
@property(nonatomic) unsigned long long type; // @synthesize type=_type;
@property(nonatomic) long long popularity; // @synthesize popularity=_popularity;
@property(retain, nonatomic) NSString *artistNames; // @synthesize artistNames=_artistNames;
@property(retain, nonatomic) NSString *artistNameWithAddtion; // @synthesize artistNameWithAddtion=_artistNameWithAddtion;
@property(retain, nonatomic) NSString *artistName; // @synthesize artistName=_artistName;
@property(retain, nonatomic) NSMutableArray *artists; // @synthesize artists=_artists;
@property(retain, nonatomic) NSString *albumName; // @synthesize albumName=_albumName;
@property(retain, nonatomic) NSString *albumId; // @synthesize albumId=_albumId;
@property(retain, nonatomic) NMAlbum *album; // @synthesize album=_album;
@property(retain, nonatomic) NSArray *songFile; // @synthesize songFile=_songFile;
@property(retain, nonatomic) NSString *name; // @synthesize name=_name;
@property(retain, nonatomic) NSString *persistId; // @synthesize persistId=_persistId;
@property(retain, nonatomic) MPMediaItem *mediaItem; // @synthesize mediaItem=_mediaItem;
@property(retain, nonatomic) NSString *songId; // @synthesize songId=_songId;
- (void).cxx_destruct;
@property(readonly, copy) NSString *description;
@property(readonly, nonatomic) _Bool hasRelatedVideo;
@property(readonly, nonatomic) _Bool hasAvailableDownloadedIncludeExpired;
@property(readonly, nonatomic) _Bool hasAvailableDownloadedOrDownloadingExcludeExpired;
@property(readonly, nonatomic) _Bool hasAvailableDownloadedExcludeExpired;
@property(readonly, nonatomic) _Bool isFreeEncryptedDownloadSong;
@property(readonly, nonatomic) _Bool isDownloadNCM;
@property(readonly, nonatomic) _Bool isQQCachOnlyExpired;
@property(readonly, nonatomic) _Bool hasRingTone;
@property(readonly, nonatomic) _Bool needSyncRingToneInfo;
@property(retain, nonatomic) NMSongPrivilege *privilege; // @dynamic privilege;
@property(readonly, nonatomic) NSString *expectedDownloadFileSize;
@property(readonly, nonatomic) _Bool isUnavailableMusic;
@property(readonly, nonatomic) _Bool needSelectTargetDownloadBitrate;
@property(readonly, nonatomic) _Bool canEnableMusic;
@property(readonly, nonatomic) _Bool canPlayMusic;
@property(readonly, nonatomic) _Bool canDownloadMusic;
@property(readonly, nonatomic) _Bool canSubMusic;
@property(readonly, nonatomic) _Bool canShareMusic;
@property(readonly, nonatomic) _Bool canCommentMusic;
@property(readonly, nonatomic) NSString *songIDWithCloudState;
@property(retain, nonatomic) NSString *copyrightText; // @dynamic copyrightText;
@property(readonly, nonatomic) _Bool isRadio;
@property(readonly, nonatomic) _Bool isMigu; // @dynamic isMigu;
- (_Bool)validFromType;
@property(readonly, nonatomic) _Bool isThirdParty; // @dynamic isThirdParty;
@property(readonly, nonatomic) _Bool isInSongLib; // @dynamic isInSongLib;
@property(readonly, nonatomic) _Bool isInMyCloud;
@property(readonly, nonatomic) _Bool isUnsupportedCloudSong;
@property(readonly, nonatomic) _Bool isCloudSong;
@property(readonly, nonatomic) _Bool isInCloud;
@property(readonly, nonatomic) _Bool isRegionOffline;
@property(readonly, nonatomic) _Bool isServerOffline;
@property(readonly, nonatomic) _Bool isPlayOnlySong;
@property(readonly, nonatomic) _Bool isNewSong;
@property(readonly, nonatomic) _Bool showVipIconForDownload;
@property(readonly, nonatomic) _Bool isFeeSong;
@property(readonly, nonatomic) _Bool isFeeSongPaid;
@property(readonly, nonatomic) _Bool hasFeeIssue;
@property(readonly, nonatomic) NSString *qualityString;
@property(readonly, nonatomic) long long currentPlayBitrate;
- (id)downloadAlbumCoverUrl;
- (_Bool)isEqualToSong:(id)arg1;
- (id)getArtistId;
- (_Bool)isDjProgram;
@property(readonly, nonatomic) NSString *link; // @dynamic link;
@property(readonly, nonatomic) _Bool canPlayLocally;
- (id)proxyForJson;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)refreshAlbumName:(id)arg1;
- (void)refreshArtistsNames:(id)arg1;
- (id)initWithMediaItem:(id)arg1;
- (id)initWithID3TagDict:(id)arg1 filesize:(unsigned long long)arg2 fileFormat:(id)arg3 pathExtension:(id)arg4;
- (id)initWithID3TagDict:(id)arg1 filesize:(unsigned long long)arg2 fileFormat:(id)arg3;
- (id)initWithDictionary:(id)arg1;
- (void)fillWithDictionary:(id)arg1;
- (_Bool)needShowSource;
- (void)fillEachSongFileIfNeeded;
- (void)fillWithDownloadTrack:(id)arg1;
- (void)fillWithExtraInfo:(id)arg1;
- (void)fillSongTrackInfo:(id)arg1;
- (void)fillWithSong:(id)arg1;
- (id)init;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)bestMatchAliaForKeywords:(id)arg1;
- (id)bestMatchAliaForKeyword:(id)arg1;
- (id)bestMatchTransNameForKeywords:(id)arg1;
- (id)bestMatchTransNameForKeyword:(id)arg1;
- (id)loadDataWithTypeIdentifier:(id)arg1 forItemProviderCompletionHandler:(CDUnknownBlockType)arg2;
@property(readonly, copy, nonatomic) NSArray *writableTypeIdentifiersForItemProvider; // @dynamic writableTypeIdentifiersForItemProvider;
- (id)proxyData;
- (id)initWithData:(id)arg1;
- (void)parseAlbumInitial:(id)arg1;
- (void)parseArtistInitial:(id)arg1;
- (void)parseSongInitial:(id)arg1;
- (long long)compareAsArtist:(id)arg1;
- (long long)compareAsAlbumTrack:(id)arg1;
- (long long)compareAsAlbum:(id)arg1;
- (long long)compareAsSong:(id)arg1;
@property(retain, nonatomic) NSString *downloadDfsId; // @dynamic downloadDfsId;
@property(retain, nonatomic) NSNumber *localUpdateTime; // @dynamic localUpdateTime;
@property(retain, nonatomic) NSNumber *createTime; // @dynamic createTime;
@property(retain, nonatomic) NSArray *playlistIds; // @dynamic playlistIds;
@property(nonatomic) long long downloadBitrate; // @dynamic downloadBitrate;
- (id)toWathSong;
- (id)toRewardResource;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

