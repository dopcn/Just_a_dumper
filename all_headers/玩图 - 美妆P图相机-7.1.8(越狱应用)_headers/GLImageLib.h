//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class EAGLContext, KGLProgram;

@interface GLImageLib : NSObject
{
    EAGLContext *glContext;
    KGLProgram *gaussianBlurProgram;
    KGLProgram *rippleProgram;
    KGLProgram *frostedGlassProgram;
    KGLProgram *bloomProgram;
    KGLProgram *dreamVisionProgram;
    KGLProgram *motionBlurProgram;
    KGLProgram *aBaoColorProgram;
    KGLProgram *themalVisionProgram;
    KGLProgram *crtScanlineProgram;
    KGLProgram *filmGrainProgram;
    KGLProgram *levelControlProgram;
    KGLProgram *sharpnessProgram;
    KGLProgram *cheapBloomProgram;
    KGLProgram *gammaCollectionProgram;
    KGLProgram *unsharpMaskProgram;
    KGLProgram *erodeProgram;
    KGLProgram *sepiaProgram;
    KGLProgram *channelMixerProgram;
    KGLProgram *colorCurveProgram;
    KGLProgram *colorLookupProgram;
    KGLProgram *photoFilterProgram;
    KGLProgram *alphaMaskProgram;
    KGLProgram *exBlendProgram;
    KGLProgram *blendColorCurveProgram;
    KGLProgram *sphereProgram;
    KGLProgram *swirlProgram;
    KGLProgram *pixellationProgram;
    KGLProgram *polkaDotProgram;
    KGLProgram *transferWrapProgram;
    KGLProgram *sceneLowSaturationProgram;
    unsigned int renderbuffer;
    unsigned int framebuffer;
    unsigned int renderTexture;
    unsigned int textureBuffer;
    int positionAttr;
    int inputTextureCoordinateAttr;
    int widthUni;
    int heightUni;
    int textureUni;
    unsigned int frameTexture;
    int matrixlengthUni;
    int cmatrixUni;
    int isHorBlur;
    int timeUni;
    int noiseTexUni;
    int pixelXUni;
    int pixelYUni;
    int freqUni;
    int strengthUni;
    int angleUni;
    int distanceUni;
    int zoomUni;
    int rotationUni;
    int scanlineUni;
    int rubyInputSizeUni;
    int rubyOutputSizeUni;
    int textureCoordinateSizeUni;
    int filmTimeUni;
    int grayscaleUni;
    int nIntensityUni;
    int sIntensityUni;
    int sCountUni;
    int gamaUni;
    int minInputUni;
    int maxInputUni;
    int minOutputUni;
    int maxOutputUni;
    unsigned int blurTexUni;
    unsigned int gammaUni;
    unsigned int unsharpStrengthUni;
    unsigned int unsharpBlurTexUni;
    unsigned int erodeSizeUni;
    unsigned int desaUni;
    unsigned int toningUni;
    unsigned int paperToneUni;
    unsigned int stainToneUni;
    unsigned int redUni;
    unsigned int greenUni;
    unsigned int blueUni;
    unsigned int grayUni;
    unsigned int desaturationUni;
    unsigned int curveTexUni;
    unsigned int lookupTexUni;
    unsigned int pfRedUni;
    unsigned int pfGreenUni;
    unsigned int pfBlueUni;
    unsigned int pfAlphaUni;
    unsigned int pfPreserveLumUni;
    unsigned int alphaMaskUni;
    unsigned int blendTexUni;
    unsigned int blendModeUni;
    unsigned int blendAlphaUni;
    unsigned int colorCurveMapUni;
    unsigned int colorCurveBlendTexUni;
    unsigned int colorCurveAlphaUni;
    unsigned int colorCurveBlendTypeUni;
    unsigned int radiusUni;
    unsigned int centerUni;
    unsigned int aspectRatioUni;
    unsigned int refractiveIndexUni;
    unsigned int swirlAngleUni;
    unsigned int swirlRadiusUni;
    unsigned int swirlCenterUni;
    unsigned int fractionalWidthOfPixelUni;
    unsigned int pixellationAspectRatioUni;
    unsigned int polkaFractionalWidthOfPixelUni;
    unsigned int polkaAspectRatioUni;
    unsigned int dotScalingUni;
    unsigned int transferCurveTexUni;
    int frameWidth;
    int frameHeight;
    struct CGSize size;
}

+ (void)releaseAll;
+ (int)maxResolution;
+ (id)instance;
@property(nonatomic) struct CGSize size; // @synthesize size;
@property(readonly, nonatomic) int frameHeight; // @synthesize frameHeight;
@property(readonly, nonatomic) int frameWidth; // @synthesize frameWidth;
@property(readonly, retain, nonatomic) EAGLContext *glContext; // @synthesize glContext;
- (id)cheapBloom:(id)arg1 blurImage:(id)arg2;
- (id)enforceScene:(id)arg1 blurImage:(id)arg2;
- (id)nightScene:(id)arg1;
- (id)lowSaturation:(id)arg1;
- (id)transferWrap:(id)arg1 curveTex:(id)arg2;
- (id)polkaDot:(id)arg1 fractional:(float)arg2 aspectRatio:(float)arg3 dotScaling:(float)arg4;
- (id)pixellation:(id)arg1 fractional:(float)arg2 aspectRatio:(float)arg3;
- (id)swirl:(id)arg1 angle:(float)arg2 center:(struct CGPoint)arg3 radius:(float)arg4;
- (id)sphereRefraction:(id)arg1 radius:(float)arg2 center:(struct CGPoint)arg3 aspectRatio:(float)arg4 refractiveIndex:(float)arg5;
- (id)blendColorCurve:(id)arg1 curveMapping:(id)arg2 blendType:(int)arg3 blendTex:(id)arg4 alpha:(float)arg5;
- (id)exBlendMode:(id)arg1 blendImage:(id)arg2 mode:(int)arg3 alpha:(float)arg4;
- (id)alphaMask:(id)arg1 mask:(id)arg2;
- (id)photoFilter:(id)arg1 red:(float)arg2 green:(float)arg3 blue:(float)arg4 alpha:(float)arg5 preserveLum:(_Bool)arg6;
- (id)softenImage:(id)arg1 softenLevel:(float)arg2;
- (id)colorLookup:(id)arg1 curveMapping:(id)arg2;
- (id)colorCurve:(id)arg1 curveMapping:(id)arg2;
- (id)channelMixer:(id)arg1 red:(float *)arg2 green:(float *)arg3 blue:(float *)arg4 gray:(float *)arg5 desaturation:(float)arg6;
- (id)sepia:(id)arg1 desaturation:(float)arg2 toning:(float)arg3 paperToneColor:(float *)arg4 stainToneColor:(float *)arg5;
- (id)erode:(id)arg1 kSize:(int)arg2;
- (id)unsharpMask:(id)arg1 blurImage:(id)arg2 strength:(float)arg3;
- (id)gammaCollection:(id)arg1 gamma:(float)arg2;
- (id)sharpness:(id)arg1;
- (id)levelControl:(id)arg1 minInput:(float)arg2 gama:(float)arg3 maxInput:(float)arg4 minOutput:(float)arg5 maxOutput:(float)arg6;
- (id)filmGrain:(id)arg1 time:(float)arg2 nIntensity:(float)arg3 sIntensity:(float)arg4 sCount:(float)arg5 bGrayscale:(_Bool)arg6;
- (id)crtScanline:(id)arg1;
- (id)gaussianBlurForFixRadius:(id)arg1;
- (id)gaussianBlur:(id)arg1 radius:(float)arg2;
- (id)themalVision:(id)arg1 scanValue:(float)arg2;
- (id)aBaoColor:(id)arg1;
- (id)motionBlur:(id)arg1 angle:(float)arg2 distance:(float)arg3 zoom:(float)arg4 rotation:(float)arg5;
- (id)dreamVision:(id)arg1;
- (id)bloom:(id)arg1 strength:(float)arg2;
- (id)frostedGlass:(id)arg1 noiseTex:(id)arg2 pixelX:(float)arg3 pixelY:(float)arg4 freq:(float)arg5;
- (id)ripple:(id)arg1 time:(float)arg2;
- (id)renderToImage;
- (void)prepareForRenderingBuildIn:(id)arg1 srcImage:(id)arg2;
- (void)prepareForRendering:(id)arg1 srcImage:(id)arg2;
- (unsigned int)prepareTexture:(id)arg1;
- (void)dealloc;
- (id)init;
- (void)setupShader;
- (void)resetCommenAttributesAndUniforms:(id)arg1;
- (id)loadShader:(id)arg1 fragmentShaderFilename:(id)arg2;
- (void)destroyFramebuffer;
- (_Bool)createFramebuffers;

@end

