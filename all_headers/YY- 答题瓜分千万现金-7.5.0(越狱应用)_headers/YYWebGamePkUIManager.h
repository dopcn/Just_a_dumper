//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "YYPluginPKModuleUIManager.h"

@class FBKVOController, NSArray, UIImageView, UIView, WebPKChallengeListView, WebPKChallengeListViewCountDown, WebPKGameChallengeView, YYWebGamePKGuestChangingPlayerTipView, YYWebGamePKGuestChoosingGameTipView, YYWebGamePKVSAnchorBarView;

@interface YYWebGamePkUIManager : YYPluginPKModuleUIManager
{
    _Bool _isShowingChallengeListView;
    CDUnknownBlockType _onGuestPKTemplateStart;
    CDUnknownBlockType _onGuestPkTemplateEnd;
    CDUnknownBlockType _onAnchorInfoTapped;
    long long _anchorStatus;
    UIImageView *_guestBackgroundView;
    UIView *_mediaBorderView;
    YYWebGamePKVSAnchorBarView *_vsBarView;
    YYWebGamePKGuestChangingPlayerTipView *_changePlyerTipView;
    YYWebGamePKGuestChoosingGameTipView *_chooseGameTipView;
    NSArray *_challengeList;
    WebPKChallengeListView *_challengeListView;
    WebPKGameChallengeView *_challengeView;
    WebPKChallengeListViewCountDown *_challengeListViewCountDown;
    FBKVOController *_kvo;
}

@property(retain, nonatomic) FBKVOController *kvo; // @synthesize kvo=_kvo;
@property(retain, nonatomic) WebPKChallengeListViewCountDown *challengeListViewCountDown; // @synthesize challengeListViewCountDown=_challengeListViewCountDown;
@property(nonatomic) _Bool isShowingChallengeListView; // @synthesize isShowingChallengeListView=_isShowingChallengeListView;
@property(retain, nonatomic) WebPKGameChallengeView *challengeView; // @synthesize challengeView=_challengeView;
@property(retain, nonatomic) WebPKChallengeListView *challengeListView; // @synthesize challengeListView=_challengeListView;
@property(retain, nonatomic) NSArray *challengeList; // @synthesize challengeList=_challengeList;
@property(nonatomic) __weak YYWebGamePKGuestChoosingGameTipView *chooseGameTipView; // @synthesize chooseGameTipView=_chooseGameTipView;
@property(nonatomic) __weak YYWebGamePKGuestChangingPlayerTipView *changePlyerTipView; // @synthesize changePlyerTipView=_changePlyerTipView;
@property(nonatomic) __weak YYWebGamePKVSAnchorBarView *vsBarView; // @synthesize vsBarView=_vsBarView;
@property(nonatomic) __weak UIView *mediaBorderView; // @synthesize mediaBorderView=_mediaBorderView;
@property(nonatomic) __weak UIImageView *guestBackgroundView; // @synthesize guestBackgroundView=_guestBackgroundView;
@property(nonatomic) long long anchorStatus; // @synthesize anchorStatus=_anchorStatus;
@property(copy, nonatomic) CDUnknownBlockType onAnchorInfoTapped; // @synthesize onAnchorInfoTapped=_onAnchorInfoTapped;
@property(copy, nonatomic) CDUnknownBlockType onGuestPkTemplateEnd; // @synthesize onGuestPkTemplateEnd=_onGuestPkTemplateEnd;
@property(copy, nonatomic) CDUnknownBlockType onGuestPKTemplateStart; // @synthesize onGuestPKTemplateStart=_onGuestPKTemplateStart;
- (void).cxx_destruct;
- (double)getSpecialGiftIconContainerViewHeight;
- (void)layoutSubViewswithRotate:(_Bool)arg1;
- (void)liveChannelViewController:(id)arg1 didChangeLayout:(_Bool)arg2;
- (void)channelViewController:(id)arg1 didChangeLayout:(long long)arg2;
- (_Bool)_isAnchor;
- (void)showGuestSeeAnchorChangingPlayer:(_Bool)arg1;
- (void)onGuestSeeAnchorChangingPlayer;
- (void)showGuestSeeAnchorPickingGame:(_Bool)arg1;
- (void)onGuestSeeAnchorChoosingGame;
- (void)showGuestBlurBackgroundView:(_Bool)arg1;
- (void)showGuestPKbar:(_Bool)arg1;
- (void)onGuestSeeAnchorInGame;
- (void)_restoreMdeiaVideoSize;
- (void)_updateMdeiaViewSize;
- (void)onVideoSizeChange:(id)arg1;
- (void)onVideoChanged;
- (void)onGuestSeeAnchorEndTemplate;
- (void)onGuestSeeAnchorStartTemplate;
- (_Bool)isAnchorInWebGamePK;
- (void)switchToGamePKTemplateFromRandomMatch:(_Bool)arg1;
- (void)onGuestJoinChannelQueryPluginStatus;
- (void)onOwRightRequestHasResult:(_Bool)arg1;
- (void)onChannelChanged:(id)arg1;
- (void)updateCurrentAnchor:(id)arg1;
- (void)onReceiveWebGamePKChooseConfirmNotice:(id)arg1;
- (void)onReceiveWebGamePKChooseNotice:(id)arg1;
- (void)onReceiveWebGamePKChallengeChangeBroadcast:(id)arg1;
- (void)onReceiveWebGamePKChallengeStatusBroadcast:(id)arg1;
- (void)onReceiveWebGamePKPrepareBroadcast:(id)arg1;
- (void)onReceiveWebGamePKChangePlayerBroadcast:(id)arg1;
- (void)onReceiveWebGamePKExitHallBroadcast:(id)arg1;
- (void)onReceiveWebGamePKInHallBroadcast:(id)arg1;
- (void)onReceiveWebGamePKInviteHallResultNotification:(id)arg1;
- (void)onReceiveWebGamePKMatchNotification:(id)arg1;
- (void)onReceiveWebGamePKInviteHallNotification:(id)arg1;
- (void)requestInviteFriend:(id)arg1 isRetry:(_Bool)arg2;
- (void)updateInviteViewFriendNum;
- (void)requestConfirmInvitation:(_Bool)arg1 reason:(id)arg2 userInfo:(id)arg3;
- (void)requestCancelRandomMatchWithMobileLiveIntention:(unsigned long long)arg1;
- (void)requestInRandomMatchWithShowView:(_Bool)arg1 isAddMinButton:(_Bool)arg2;
- (void)requestChallengeList:(CDUnknownBlockType)arg1;
- (void)showChallengeEntranceViewIfNeeded;
- (void)recoverChallengeEntranceViewIfNeeded;
- (void)showJoinApplyChallengeListToastWithNick:(id)arg1;
- (void)getAnchorNickNameWithUid:(long long)arg1;
- (void)requestJoinAnchorApplyList;
- (_Bool)isInChallengeList:(id)arg1;
- (void)requestSwitchChangelleStatusSwitch:(_Bool)arg1;
- (void)forbidenMicANDRequestSwitchChangelleStatusSwitch;
- (void)requestQueryChangelleSwitchStatus;
- (void)requestQueryInviteSwitchStatus;
- (void)requestSwitchInviteStatusSwitch:(_Bool)arg1;
- (void)jumpToPlayWebPKGameWithInfo:(id)arg1;
- (void)showChallengerConfirmView:(id)arg1;
- (void)showReceiveInviteView:(id)arg1;
- (void)showInviteFailViewWithMsg:(id)arg1 uid:(long long)arg2 name:(id)arg3;
- (void)removeWaitingFriendConfirmViewAndBallView;
- (void)pkWaitingFriendConfirmViewWillRemoveblock:(id)arg1;
- (void)pkRandomMatchingViewWillRemove:(id)arg1;
- (void)pkInviteViewDidClickSelectFriend:(id)arg1;
- (void)showInRandomMatchViewWithMobileLiveIntention:(unsigned long long)arg1;
- (void)showPKHistoryView;
- (void)showHelpTip;
- (void)changeAnchorForWebGame;
- (void)showChallengeEntranceView;
- (void)showChallengeListView;
- (void)pkInviteViewDidClickSelfplay:(id)arg1;
- (void)pkInviteViewDidClickRandomMatch:(id)arg1;
- (void)showInviteView;
- (void)initNavigationViewIfNeedWithMobileLiveIntention:(unsigned long long)arg1;
- (void)launchPluginAsync:(CDUnknownBlockType)arg1;
- (void)dealloc;
- (void)downloadResource;
- (void)initNotification;
- (void)initBridge;
- (id)init;

@end

