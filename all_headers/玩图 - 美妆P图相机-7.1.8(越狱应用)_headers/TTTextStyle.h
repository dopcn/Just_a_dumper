//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "TTStyle.h"

@class UIColor, UIFont;

@interface TTTextStyle : TTStyle
{
    UIFont *_font;
    UIColor *_color;
    UIColor *_shadowColor;
    struct CGSize _shadowOffset;
    double _minimumFontSize;
    long long _numberOfLines;
    long long _textAlignment;
    long long _verticalAlignment;
    long long _lineBreakMode;
}

+ (id)styleWithFont:(id)arg1 color:(id)arg2 minimumFontSize:(double)arg3 shadowColor:(id)arg4 shadowOffset:(struct CGSize)arg5 textAlignment:(long long)arg6 verticalAlignment:(long long)arg7 lineBreakMode:(long long)arg8 numberOfLines:(long long)arg9 next:(id)arg10;
+ (id)styleWithFont:(id)arg1 color:(id)arg2 minimumFontSize:(double)arg3 shadowColor:(id)arg4 shadowOffset:(struct CGSize)arg5 next:(id)arg6;
+ (id)styleWithFont:(id)arg1 color:(id)arg2 shadowColor:(id)arg3 shadowOffset:(struct CGSize)arg4 next:(id)arg5;
+ (id)styleWithFont:(id)arg1 color:(id)arg2 textAlignment:(long long)arg3 next:(id)arg4;
+ (id)styleWithFont:(id)arg1 color:(id)arg2 next:(id)arg3;
+ (id)styleWithColor:(id)arg1 next:(id)arg2;
+ (id)styleWithFont:(id)arg1 next:(id)arg2;
@property(nonatomic) long long lineBreakMode; // @synthesize lineBreakMode=_lineBreakMode;
@property(nonatomic) long long verticalAlignment; // @synthesize verticalAlignment=_verticalAlignment;
@property(nonatomic) long long textAlignment; // @synthesize textAlignment=_textAlignment;
@property(nonatomic) long long numberOfLines; // @synthesize numberOfLines=_numberOfLines;
@property(nonatomic) double minimumFontSize; // @synthesize minimumFontSize=_minimumFontSize;
@property(nonatomic) struct CGSize shadowOffset; // @synthesize shadowOffset=_shadowOffset;
@property(retain, nonatomic) UIColor *shadowColor; // @synthesize shadowColor=_shadowColor;
@property(retain, nonatomic) UIColor *color; // @synthesize color=_color;
@property(retain, nonatomic) UIFont *font; // @synthesize font=_font;
- (struct CGSize)addToSize:(struct CGSize)arg1 context:(id)arg2;
- (void)draw:(id)arg1;
- (void)drawText:(id)arg1 context:(id)arg2;
- (struct CGRect)rectForText:(id)arg1 forSize:(struct CGSize)arg2 withFont:(id)arg3;
- (struct CGSize)sizeOfText:(id)arg1 withFont:(id)arg2 size:(struct CGSize)arg3;
- (void)dealloc;
- (id)initWithNext:(id)arg1;

@end

