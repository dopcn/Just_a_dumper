//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

#import "IJKMediaPlayback-Protocol.h"

@class IJKFFMonitor, IJKFFMoviePlayerMessagePool, IJKNotificationManager, IJKSDLGLView, NSString, NSTimer, NSURL, UIView;
@protocol IJKMediaNativeInvokeDelegate, IJKMediaUrlOpenDelegate;

@interface IJKFFMoviePlayerController : NSObject <IJKMediaPlayback>
{
    struct IjkMediaPlayer *_mediaPlayer;
    IJKSDLGLView *_glView;
    IJKFFMoviePlayerMessagePool *_msgPool;
    NSString *_urlString;
    long long _videoWidth;
    long long _videoHeight;
    long long _sampleAspectRatioNumerator;
    long long _sampleAspectRatioDenominator;
    _Bool _seeking;
    long long _bufferingTime;
    long long _bufferingPosition;
    _Bool _pauseInBackground;
    _Bool _isVideoToolboxOpen;
    _Bool _playingBeforeInterruption;
    IJKNotificationManager *_notificationManager;
    struct AVAppAsyncStatistic _asyncStat;
    _Bool _shouldShowHudView;
    NSTimer *_hudTimer;
    _Bool _ifSetVideoDecoderMode;
    NSString *_reloadUrl;
    NSString *_ipString;
    _Bool _isPreparedToPlay;
    _Bool _shouldAutoplay;
    _Bool _allowsMediaAirPlay;
    _Bool _airPlayMediaActive;
    _Bool _isDanmakuMediaAirPlay;
    _Bool _shouldMute;
    float _beforeMuteValue;
    float _netspeed;
    UIView *_view;
    double currentPlaybackTime;
    double duration;
    double playableDuration;
    long long _bufferingProgress;
    long long _numberOfBytesTransferred;
    long long _playbackState;
    unsigned long long _loadState;
    long long _scalingMode;
    IJKFFMonitor *_monitor;
    unsigned long long _videoDecoderMode;
    NSURL *_contentURL;
    NSString *_videoToolbox;
    NSString *_ip;
    NSString *_http;
    NSString *_tcpSpeed;
    NSString *_vdps;
    NSString *_vfps;
    NSString *_videoCacheDuration;
    NSString *_videoCacheByte;
    NSString *_videoCachePacket;
    NSString *_audioCacheDuration;
    NSString *_audioCacheByte;
    NSString *_audioCachePacket;
    NSString *_avdelay;
    NSString *_avdiff;
    double _fpsInMeta;
    id <IJKMediaUrlOpenDelegate> _segmentOpenDelegate;
    id <IJKMediaUrlOpenDelegate> _tcpOpenDelegate;
    id <IJKMediaUrlOpenDelegate> _httpOpenDelegate;
    id <IJKMediaUrlOpenDelegate> _liveOpenDelegate;
    id <IJKMediaNativeInvokeDelegate> _nativeInvokeDelegate;
    struct CGSize _naturalSize;
}

+ (_Bool)checkIfPlayerVersionMatch:(_Bool)arg1 version:(id)arg2;
+ (_Bool)checkIfFFmpegVersionMatch:(_Bool)arg1;
+ (void)setLogLevel:(int)arg1;
+ (void)setLogReport:(_Bool)arg1;
@property(retain, nonatomic) id <IJKMediaNativeInvokeDelegate> nativeInvokeDelegate; // @synthesize nativeInvokeDelegate=_nativeInvokeDelegate;
@property(retain, nonatomic) id <IJKMediaUrlOpenDelegate> liveOpenDelegate; // @synthesize liveOpenDelegate=_liveOpenDelegate;
@property(retain, nonatomic) id <IJKMediaUrlOpenDelegate> httpOpenDelegate; // @synthesize httpOpenDelegate=_httpOpenDelegate;
@property(retain, nonatomic) id <IJKMediaUrlOpenDelegate> tcpOpenDelegate; // @synthesize tcpOpenDelegate=_tcpOpenDelegate;
@property(retain, nonatomic) id <IJKMediaUrlOpenDelegate> segmentOpenDelegate; // @synthesize segmentOpenDelegate=_segmentOpenDelegate;
@property(readonly, nonatomic) double fpsInMeta; // @synthesize fpsInMeta=_fpsInMeta;
@property(nonatomic) float netspeed; // @synthesize netspeed=_netspeed;
@property(retain, nonatomic) NSString *http; // @synthesize http=_http;
@property(retain, nonatomic) NSString *ip; // @synthesize ip=_ip;
@property(readonly, nonatomic) NSURL *contentURL; // @synthesize contentURL=_contentURL;
@property(nonatomic) float beforeMuteValue; // @synthesize beforeMuteValue=_beforeMuteValue;
@property(nonatomic) unsigned long long videoDecoderMode; // @synthesize videoDecoderMode=_videoDecoderMode;
@property(readonly, nonatomic) IJKFFMonitor *monitor; // @synthesize monitor=_monitor;
@property(nonatomic) long long scalingMode; // @synthesize scalingMode=_scalingMode;
@property(readonly, nonatomic) unsigned long long loadState; // @synthesize loadState=_loadState;
@property(readonly, nonatomic) _Bool isPreparedToPlay; // @synthesize isPreparedToPlay=_isPreparedToPlay;
@property(readonly, nonatomic) long long numberOfBytesTransferred; // @synthesize numberOfBytesTransferred=_numberOfBytesTransferred;
@property(readonly, nonatomic) long long bufferingProgress; // @synthesize bufferingProgress=_bufferingProgress;
@property(readonly, nonatomic) UIView *view; // @synthesize view=_view;
- (void).cxx_destruct;
- (void)applicationWillTerminate;
- (void)applicationDidEnterBackground;
- (void)applicationWillResignActive;
- (void)applicationDidBecomeActive;
- (void)applicationWillEnterForeground;
- (void)audioSessionInterrupt:(id)arg1;
- (void)unregisterApplicationObservers;
- (void)registerApplicationObservers;
- (void)setMaxBufferSize:(int)arg1;
- (void)setPlayerOptionIntValue:(long long)arg1 forKey:(id)arg2;
- (void)setSwsOptionIntValue:(long long)arg1 forKey:(id)arg2;
- (void)setCodecOptionIntValue:(long long)arg1 forKey:(id)arg2;
- (void)setFormatOptionIntValue:(long long)arg1 forKey:(id)arg2;
- (void)setPlayerOptionValue:(id)arg1 forKey:(id)arg2;
- (void)setSwsOptionValue:(id)arg1 forKey:(id)arg2;
- (void)setCodecOptionValue:(id)arg1 forKey:(id)arg2;
- (void)setFormatOptionValue:(id)arg1 forKey:(id)arg2;
@property(nonatomic) _Bool isDanmakuMediaAirPlay; // @synthesize isDanmakuMediaAirPlay=_isDanmakuMediaAirPlay;
@property(readonly, nonatomic) _Bool airPlayMediaActive; // @synthesize airPlayMediaActive=_airPlayMediaActive;
@property(nonatomic) _Bool allowsMediaAirPlay; // @synthesize allowsMediaAirPlay=_allowsMediaAirPlay;
- (id)obtainMessage;
- (void)postEvent:(id)arg1;
@property(nonatomic) float playbackVolume;
@property(nonatomic) float playbackRate;
@property(nonatomic) _Bool shouldShowHudView;
- (void)stopHudTimer;
- (void)startHudTimer;
- (void)refreshHudView;
@property(readonly, nonatomic) double fpsAtOutput;
- (id)thumbnailImageAtCurrentTime;
- (id)thumbnailImageAtTime:(double)arg1 timeOption:(long long)arg2;
- (void)changeNaturalSize;
@property(readonly, nonatomic) struct CGSize naturalSize; // @synthesize naturalSize=_naturalSize;
@property(readonly, nonatomic) double playableDuration; // @synthesize playableDuration;
@property(readonly, nonatomic) double duration; // @synthesize duration;
@property(nonatomic) double currentPlaybackTime; // @synthesize currentPlaybackTime;
@property(readonly, nonatomic) long long playbackState; // @synthesize playbackState=_playbackState;
- (void)setOptionIntValue:(long long)arg1 forKey:(id)arg2 ofCategory:(int)arg3;
- (void)setOptionValue:(id)arg1 forKey:(id)arg2 ofCategory:(int)arg3;
- (_Bool)isVideoToolboxOpen;
- (void)setPauseInBackground:(_Bool)arg1;
- (void)setUrl:(id)arg1;
- (void)reset:(_Bool)arg1 isLiving:(_Bool)arg2;
@property(nonatomic) _Bool shouldMute; // @synthesize shouldMute=_shouldMute;
- (void)setVolume:(float)arg1 rigthVolume:(float)arg2;
- (void)reload:(id)arg1 isLiving:(_Bool)arg2 holdLastPic:(_Bool)arg3;
- (_Bool)isPlaying;
- (void)didShutdown;
- (void)shutdownClose:(id)arg1;
- (void)shutdownWaitStop:(id)arg1;
- (void)stop;
- (void)pause;
- (void)start;
- (void)setHudUrl:(id)arg1;
- (void)prepareToPlay;
@property(retain, nonatomic) NSString *avdiff; // @synthesize avdiff=_avdiff;
@property(retain, nonatomic) NSString *avdelay; // @synthesize avdelay=_avdelay;
@property(retain, nonatomic) NSString *audioCachePacket; // @synthesize audioCachePacket=_audioCachePacket;
@property(retain, nonatomic) NSString *audioCacheByte; // @synthesize audioCacheByte=_audioCacheByte;
@property(retain, nonatomic) NSString *audioCacheDuration; // @synthesize audioCacheDuration=_audioCacheDuration;
@property(retain, nonatomic) NSString *videoCachePacket; // @synthesize videoCachePacket=_videoCachePacket;
@property(retain, nonatomic) NSString *videoCacheByte; // @synthesize videoCacheByte=_videoCacheByte;
@property(retain, nonatomic) NSString *videoCacheDuration; // @synthesize videoCacheDuration=_videoCacheDuration;
@property(retain, nonatomic) NSString *vfps; // @synthesize vfps=_vfps;
@property(retain, nonatomic) NSString *vdps; // @synthesize vdps=_vdps;
- (id)getVersion;
- (float)getNetSpeed;
@property(retain, nonatomic) NSString *tcpSpeed; // @synthesize tcpSpeed=_tcpSpeed;
@property(retain, nonatomic) NSString *videoToolbox; // @synthesize videoToolbox=_videoToolbox;
@property(nonatomic) _Bool shouldAutoplay; // @synthesize shouldAutoplay=_shouldAutoplay;
- (void)dealloc;
- (void)setScreenOn:(_Bool)arg1;
- (id)initWithContentURLString:(id)arg1 isLiving:(_Bool)arg2;
- (id)initWithContentURL:(id)arg1 isLiving:(_Bool)arg2;
- (void)converSetIJKMoiveScalingMode:(long long)arg1;
- (long long)convertMPMovieScalingMode;
- (unsigned long long)convertLoadState;
- (long long)convertPlaybackState;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

