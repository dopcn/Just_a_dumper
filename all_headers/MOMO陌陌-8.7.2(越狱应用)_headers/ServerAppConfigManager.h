//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

@class MDRefereeHTTPPrefixHandler, MDRefereeParserHelper, MDThreadSafeDictionary, NSDate, NSMutableDictionary, ServerAppConnectingHost;

@interface ServerAppConfigManager : NSObject
{
    _Bool _useDebug;
    NSMutableDictionary *_debugDomainDic;
    ServerAppConnectingHost *_currentDomianHosts;
    NSMutableDictionary *_currentTestRetryCountDict;
    MDThreadSafeDictionary *_refreeDataDict;
    NSDate *_firstFailDate;
    long long _continuousFailTimes;
    NSDate *_lastQequestRefereeStartDate;
    NSMutableDictionary *_allTypeHostsDic;
    NSMutableDictionary *_apsDic;
    MDRefereeParserHelper *_parserHelper;
    MDRefereeHTTPPrefixHandler *_prefixHandler;
}

+ (id)httpUrlPrefixStringWithDomainType:(int)arg1 suffix:(id)arg2;
+ (id)httpsUrlPrefixStringWithDomainType:(int)arg1 suffix:(id)arg2;
+ (id)httpUrlPrefixStringWithDomainType:(int)arg1;
+ (id)httpsUrlPrefixStringWithDomainType:(int)arg1;
@property(retain, nonatomic) MDRefereeHTTPPrefixHandler *prefixHandler; // @synthesize prefixHandler=_prefixHandler;
@property(retain, nonatomic) MDRefereeParserHelper *parserHelper; // @synthesize parserHelper=_parserHelper;
@property(retain, nonatomic) NSMutableDictionary *apsDic; // @synthesize apsDic=_apsDic;
@property(retain, nonatomic) NSMutableDictionary *allTypeHostsDic; // @synthesize allTypeHostsDic=_allTypeHostsDic;
@property(retain, nonatomic) NSDate *lastQequestRefereeStartDate; // @synthesize lastQequestRefereeStartDate=_lastQequestRefereeStartDate;
@property(nonatomic) long long continuousFailTimes; // @synthesize continuousFailTimes=_continuousFailTimes;
@property(retain, nonatomic) NSDate *firstFailDate; // @synthesize firstFailDate=_firstFailDate;
@property(retain, nonatomic) MDThreadSafeDictionary *refreeDataDict; // @synthesize refreeDataDict=_refreeDataDict;
@property(retain, nonatomic) NSMutableDictionary *currentTestRetryCountDict; // @synthesize currentTestRetryCountDict=_currentTestRetryCountDict;
@property(retain, nonatomic) ServerAppConnectingHost *currentDomianHosts; // @synthesize currentDomianHosts=_currentDomianHosts;
@property(retain, nonatomic) NSMutableDictionary *debugDomainDic; // @synthesize debugDomainDic=_debugDomainDic;
@property(nonatomic) _Bool useDebug; // @synthesize useDebug=_useDebug;
- (void).cxx_destruct;
- (id)allApiDomainList;
- (id)refereeDict;
- (id)domainWithDomainType:(int)arg1;
- (void)handleImjRefereeChanged:(id)arg1;
- (double)getMaxConnectionTimeForIMJ;
- (int)serverHostTypeWithString:(id)arg1;
- (id)hostListForDomainType:(int)arg1;
- (id)defaultApList;
- (id)defaultDomainForDomainType:(int)arg1;
- (id)defaultServerHostForDomainType:(int)arg1;
- (void)stuffApiHostUrl:(id)arg1 To:(id)arg2 isHttps:(_Bool)arg3;
- (id)getCurrentUsedDomains;
- (double)refereeListVersion;
- (id)allDomainList;
- (id)allApiHostList;
- (id)allApPortList;
- (id)serverHostsWithDomain:(id)arg1;
- (void)setupAllTypeHostsDicWithHost:(id)arg1;
- (void)setupHostsAndAps;
- (void)queryServerHostsError:(id)arg1;
- (void)queryServerHostsFail:(id)arg1;
- (void)queryServerHostsSuccess:(id)arg1;
- (void)queryServerHostsWithUrl:(id)arg1;
- (void)queryServerHosts;
- (void)checkAndQueryServerHostsWithUrl:(id)arg1;
- (void)checkAndQueryServerHostsWithIsContinuousFail:(_Bool)arg1;
- (void)checkAndQueryServerHosts;
- (void)handleContinuousFail:(_Bool)arg1;
- (void)setFail:(_Bool)arg1 forAccessPointWithHost:(id)arg2 andPort:(long long)arg3;
- (void)handleOldDomain:(id)arg1 failed:(_Bool)arg2;
- (void)setDomain:(id)arg1 failed:(_Bool)arg2;
- (void)setApWithInfo:(id)arg1;
- (id)avalibleAccessPoint;
- (id)defaultServerHostsDic;
- (void)syncRefereeInfoToConfigFile;
- (void)handleIMJAPNotification:(id)arg1;
- (void)dealloc;
- (id)init;
- (void)startAccessPointListTest;
- (void)startDefaultAccessPointTest;
- (void)handleAPFailed:(_Bool)arg1 WithHost:(id)arg2 andPort:(long long)arg3;
- (void)startIPListTestWithType:(int)arg1;
- (void)startDefaultDomainTestWithType:(int)arg1;
- (void)handleNewDomain:(id)arg1 failed:(_Bool)arg2;
- (id)debug_useDefaultDomain:(int)arg1;
- (id)debug_avalibleAccessPoint;
- (id)debug_domainWithDomainType:(int)arg1;
- (id)debug_stringForType:(int)arg1;
- (_Bool)debug_isValidType:(id)arg1;
- (void)debug_discardDebugOperation;
- (void)debug_useThisDomain:(id)arg1 forType:(id)arg2;
- (void)debug_useThisDomain:(id)arg1;

@end

