//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

@interface AE1_CommandGenerator : NSObject
{
    double cmdOutputFrequency;
    int audioCallbackCode;
    short node01_11025[8];
    short node10_11025[8];
    short node00_11025[8];
    short node11_11025[8];
    short node01_11025_s[8];
    short node10_11025_s[8];
    short node00_11025_s[8];
    short node11_11025_s[8];
    short fsk_14700_symbol[6];
    short fsk_11025_symbol[8];
    short fsk_7350_symbol[12];
    short fsk_5512_symbol[16];
    short fsk_1837_symbol[48];
    short fsk_1225_symbol[72];
    unsigned char prevState[2];
    short *wavResult1;
    short *wavResult2;
    int wavResultLen1;
    int wavResultLen2;
    _Bool isUseWavResult1;
    _Bool isNeedToResetPacket;
    _Bool isPlayZero;
    _Bool isPlayFrequencyAndNonCmd;
    _Bool isPlayPrefixFreq;
    _Bool isPlayNonStopPowerFreq;
    double freqRate_Prefix;
    double freqRate2;
    double freqPlayTimeInSecond_Prefix;
    double freqPlayTimeInSecond2;
    int totalPlayedPackage;
}

@property(nonatomic) double freqPlayTimeInSecond2; // @synthesize freqPlayTimeInSecond2;
@property(nonatomic) double freqPlayTimeInSecond_Prefix; // @synthesize freqPlayTimeInSecond_Prefix;
@property(nonatomic) double freqRate2; // @synthesize freqRate2;
@property(nonatomic) double freqRate_Prefix; // @synthesize freqRate_Prefix;
@property(nonatomic) int audioCallbackCode; // @synthesize audioCallbackCode;
@property(nonatomic) int totalPlayedPackage; // @synthesize totalPlayedPackage;
@property(nonatomic) double cmdOutputFrequency; // @synthesize cmdOutputFrequency;
@property(nonatomic) int wavResultLen2; // @synthesize wavResultLen2;
@property(nonatomic) int wavResultLen1; // @synthesize wavResultLen1;
@property(nonatomic) _Bool isPlayNonStopPowerFreq; // @synthesize isPlayNonStopPowerFreq;
@property(nonatomic) _Bool isPlayPrefixFreq; // @synthesize isPlayPrefixFreq;
@property(nonatomic) _Bool isPlayFrequencyAndNonCmd; // @synthesize isPlayFrequencyAndNonCmd;
@property(nonatomic) _Bool isPlayZero; // @synthesize isPlayZero;
@property(nonatomic) _Bool isNeedToResetPacket; // @synthesize isNeedToResetPacket;
@property(nonatomic) _Bool isUseWavResult1; // @synthesize isUseWavResult1;
@property(nonatomic) short *wavResult2; // @synthesize wavResult2;
@property(nonatomic) short *wavResult1; // @synthesize wavResult1;
- (void)playerCallbackHandler_C06:(int)arg1 audioBufferList:(struct AudioBufferList *)arg2;
- (void)playerCallbackHandler_C05:(int)arg1 audioBufferList:(struct AudioBufferList *)arg2;
- (void)playerCallbackHandler_C04:(int)arg1 audioBufferList:(struct AudioBufferList *)arg2;
- (void)playerCallbackHandler_C03:(int)arg1 audioBufferList:(struct AudioBufferList *)arg2;
- (void)playerCallbackHandler_C01:(int)arg1 audioBufferList:(struct AudioBufferList *)arg2;
- (void)playerCallbackHandler:(int)arg1 audioBufferList:(struct AudioBufferList *)arg2;
- (id)decimalToBinary:(long long)arg1;
- (double)getSampleRate;
- (void)Clear;
- (int)WriteSymbol_FSK:(short *)arg1 current:(int)arg2 symbolType:(int)arg3 Mode:(int)arg4;
- (int)WriteBit_FSK:(short *)arg1 current:(int)arg2 bOne:(_Bool)arg3 Mode:(int)arg4;
- (int)WriteSymbol_11025:(short *)arg1 current:(int)arg2 symbolType:(int)arg3 Mode:(int)arg4;
- (int)WriteBit_11025:(short *)arg1 current:(int)arg2 bOne:(_Bool)arg3 Mode:(int)arg4;
- (int)WriteBit:(short *)arg1 current:(int)arg2 bOne:(_Bool)arg3;
- (int)WriteByte:(short *)arg1 current:(int)arg2 data:(unsigned char)arg3 Mode:(int)arg4;
- (void)GenerateTone_Command:(id)arg1 wavLength:(int)arg2 Mode:(int)arg3;
- (void)GenerateTone_Command:(id)arg1 wavLength:(int)arg2;
- (void)GenerateTone_FreqAndCommand:(double)arg1 freqPlayTimeInSecond:(double)arg2 wholeCmdData:(id)arg3 wavLength:(int)arg4 Mode:(int)arg5;
- (void)GenerateTone_FreqAndCommand:(double)arg1 freqPlayTimeInSecond:(double)arg2 wholeCmdData:(id)arg3 wavLength:(int)arg4;
- (void)resetWavResultWithNewLength:(int)arg1;
- (void)GenerateTone_Frequency:(double)arg1 playTimeInSecond1:(double)arg2 frequency2:(double)arg3 playTimeInSecond2:(double)arg4;
- (void)GenerateTone_Frequency:(double)arg1 playTimeInSecond:(double)arg2;
- (void)GenerateTone_PlayNonStopPowerFreq;
- (void)GenerateTone_PlayZero;
- (void)dealloc;
- (id)init;

@end

