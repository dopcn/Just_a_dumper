//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

@class NSMutableDictionary;

@interface JMAppMediator : NSObject
{
    NSMutableDictionary *_cachedTarget;
}

+ (id)sharedInstance;
+ (void)JMACS_ResumeMonitoringConfigServer;
+ (void)JMACS_registerConfigServerWithProcessType:(long long)arg1 observerObj:(id)arg2 observerKey:(id)arg3 openFileLog:(_Bool)arg4;
+ (void)JMACSDoveDemux_RegisterDoveBroadCast:(CDUnknownBlockType)arg1;
+ (void)JMConnection_GetGuideFlowHostList;
+ (void)JMConnectionDemux_RegisterSCMQTT:(id)arg1 subscribeNext:(CDUnknownBlockType)arg2;
+ (void)JMConnectionDemux_RegisterConfigServerName:(id)arg1 subscribeNext:(CDUnknownBlockType)arg2;
+ (void)JMConnectionDemux_StartWithUser:(id)arg1 andUserIdKey:(id)arg2;
+ (void)JMConnectionDemux_StartJMServerDataInfo;
+ (void)JMEagleEye_owlTrackEvent:(id)arg1 extra:(id)arg2;
+ (id)JMH5Container_H5ContainerVersion;
+ (id)JMH5Container_HybridVersion;
+ (void)JMH5Container_StartHybridManagerWithOpenLog:(_Bool)arg1 andUseLocalServer:(_Bool)arg2;
+ (void)JMNetWorkProbe_RestartWithNextProject:(id)arg1 nextCaseID:(id)arg2;
+ (id)JMNetWorkProbe_RegisterProbeProject:(id)arg1 caseID:(id)arg2 ObserverObj:(id)arg3 observerKey:(id)arg4 openFileLog:(_Bool)arg5;
+ (_Bool)JMNetWorkProbe_GetIsRuning;
+ (_Bool)JMNetWorkProbe_GetProbeAlive;
+ (void)JMOWL_StartOwlSystem;
+ (void)JMOWL_EnableLogOut:(_Bool)arg1;
+ (void)JMOWL_SetOWLSwitchValue:(long long)arg1;
+ (void)JMWatcher_setEnabled:(_Bool)arg1 observerJMUser:(id)arg2 observerKey:(id)arg3;
+ (void)JMWatcher_UploadWatcherFileWithPhoneNumber:(id)arg1 uid:(id)arg2 progress:(CDUnknownBlockType)arg3 success:(CDUnknownBlockType)arg4 failure:(CDUnknownBlockType)arg5;
+ (void)setTestBOOLValue:(_Bool)arg1;
+ (void)testBlock:(CDUnknownBlockType)arg1;
+ (CDUnknownBlockType)returnBlock;
+ (int)returnIntValue;
+ (long long)returnIntegerValue;
+ (float)returnfloatValue;
+ (double)returnCGFloatValue;
+ (_Bool)returnBoolValue;
+ (void)ArgumentsSEL:(SEL)arg1;
+ (void)ArgumentsNSIntegerFloatValue:(float)arg1 andCGFloatValue:(double)arg2;
+ (void)ArgumentsIntValue:(int)arg1 andIntegerValue:(long long)arg2 andShortValue:(short)arg3;
@property(retain, nonatomic) NSMutableDictionary *cachedTarget; // @synthesize cachedTarget=_cachedTarget;
- (void).cxx_destruct;
- (void)releaseCachedTargetWithTargetName:(id)arg1;
- (id)returnValueFromInvocation:(id)arg1 WithSignature:(id)arg2;
- (void)Invocation:(id)arg1 setArgument:(id)arg2 withType:(const char *)arg3 AtNum:(int)arg4;
- (id)performClass:(id)arg1 action:(id)arg2 params:(id)arg3;
- (id)performTarget:(id)arg1 action:(id)arg2 params:(id)arg3 shouldCacheTarget:(_Bool)arg4;
- (id)performActionWithUrl:(id)arg1 completion:(CDUnknownBlockType)arg2;

@end

