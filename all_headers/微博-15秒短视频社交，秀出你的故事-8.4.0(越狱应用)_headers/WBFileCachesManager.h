//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

@class NSMutableDictionary, NSMutableSet;
@protocol OS_dispatch_queue;

@interface WBFileCachesManager : NSObject
{
    id observerEnterForeground;
    CDUnknownBlockType blockClear;
    _Bool _isClearing;
    float _defaultRate;
    NSMutableSet *_nssetNameSpaceClearExclude;
    unsigned long long _defaultType;
    unsigned long long _defaultSize;
    unsigned long long _defaultTime;
    unsigned long long _defaultSort;
    unsigned long long _defaultByte;
    NSMutableDictionary *_dictionaryCustomeNameSpaceNotification;
    NSObject<OS_dispatch_queue> *_dispatch_queue_file_caches;
}

+ (void)writeNameSpace:(id)arg1 filename:(id)arg2 data:(id)arg3 type:(id)arg4 completion:(CDUnknownBlockType)arg5;
+ (id)writeNameSpace:(id)arg1 filename:(id)arg2 data:(id)arg3 type:(id)arg4;
+ (id)itemInfoPathfull:(id)arg1 itemType:(id)arg2 nextsub:(_Bool)arg3;
+ (id)sortItemfull:(id)arg1 sortKey:(id)arg2 sortOrder:(id)arg3;
+ (id)itemfullPathfull:(id)arg1 sort:(unsigned long long)arg2;
+ (id)fileListNameSpace:(id)arg1;
+ (id)itemListNameSpace:(id)arg1;
+ (unsigned long long)sizeFolder:(const char *)arg1;
+ (id)timeItemfull:(id)arg1;
+ (id)sizeItemfull:(id)arg1;
+ (unsigned long long)sizeNameSpaceTotal;
+ (unsigned long long)sizeNameSpace:(id)arg1;
+ (id)pathInfoType:(unsigned long long)arg1;
+ (id)pathInfoPathType:(id)arg1;
+ (id)pathfullNameSpace:(id)arg1;
+ (id)filefullNameSpace:(id)arg1 filename:(id)arg2;
+ (id)pathfullNameSpace:(id)arg1 type:(unsigned long long)arg2;
+ (id)pathfullType:(unsigned long long)arg1;
+ (id)pathfullDirectory:(unsigned long long)arg1;
+ (id)firstNameSelector:(SEL)arg1;
+ (id)stringTrim:(id)arg1;
+ (void)userDefaultSave:(id)arg1;
+ (id)userDefaultRead;
+ (id)pathfullDescriptionTotal;
+ (id)pathfullDescription:(id)arg1;
+ (id)getPolicyPathfull:(id)arg1 type:(unsigned long long *)arg2 mbyte:(unsigned long long *)arg3 day:(unsigned long long *)arg4 sort:(unsigned long long *)arg5 rate:(float *)arg6;
+ (id)getPolicyPathfull:(id)arg1 type:(unsigned long long *)arg2 size:(unsigned long long *)arg3 time:(unsigned long long *)arg4 sort:(unsigned long long *)arg5 rate:(float *)arg6;
+ (id)nameSpaceDescriptionTotal;
+ (id)nameSpaceDescription:(id)arg1;
+ (id)getNameSpace:(id)arg1 type:(unsigned long long *)arg2 size:(unsigned long long *)arg3 time:(unsigned long long *)arg4 sort:(unsigned long long *)arg5;
+ (id)dictionaryPolicyFilePathfull:(id)arg1;
+ (id)dictionaryPolicy:(unsigned long long)arg1 rate:(float)arg2;
+ (void)componentPolicy:(unsigned long long)arg1 type:(unsigned long long *)arg2 size:(unsigned long long *)arg3 time:(unsigned long long *)arg4 sort:(unsigned long long *)arg5;
+ (id)enumSortConvertDescription:(unsigned long long)arg1;
+ (id)enumSortConvertString:(unsigned long long)arg1;
+ (unsigned long long)dayConvertEnumTime:(unsigned long long)arg1;
+ (unsigned long long)enumTimeConvertDay:(unsigned long long)arg1;
+ (unsigned long long)mbyteConvertEnumSize:(unsigned long long)arg1;
+ (unsigned long long)enumSizeConvertMbyte:(unsigned long long)arg1;
+ (id)enumTypeConvertString:(unsigned long long)arg1;
+ (void)scanFileCachesRootFile;
+ (void)emptyTemp;
+ (void)autoEmptyFileCaches:(CDUnknownBlockType)arg1;
+ (void)autoClearFileCaches:(CDUnknownBlockType)arg1;
+ (void)autoEmptyFileCaches;
+ (void)autoClearFileCaches;
+ (void)emptyNameSpace:(id)arg1 fileExclude:(id)arg2;
+ (void)clearNameSpace:(id)arg1 fileExclude:(id)arg2;
+ (void)clearPathfull:(id)arg1 type:(unsigned long long)arg2 size:(unsigned long long)arg3 time:(unsigned long long)arg4 sort:(unsigned long long)arg5 rate:(float)arg6 fileExclude:(id)arg7;
+ (void)clearPathfull:(id)arg1 arrayFilefull:(id)arg2 type:(unsigned long long)arg3 size:(unsigned long long)arg4 time:(unsigned long long)arg5 sort:(unsigned long long)arg6 rate:(float)arg7 fileExclude:(id)arg8;
+ (id)fileHandleEditTempFilename:(id)arg1;
+ (id)fileHandleEditWeekRemoveFilename:(id)arg1;
+ (id)fileHandleEditPermanentFilename:(id)arg1;
+ (id)fileHandleEditPermanentBackupFilename:(id)arg1;
+ (id)fileHandleEditNonrenewableFilename:(id)arg1;
+ (id)fileHandleSaveTempFilename:(id)arg1;
+ (id)fileHandleSaveWeekRemoveFilename:(id)arg1;
+ (id)fileHandleSavePermanentFilename:(id)arg1;
+ (id)fileHandleSavePermanentBackupFilename:(id)arg1;
+ (id)fileHandleSaveNonrenewableFilename:(id)arg1;
+ (id)fileHandleReadTempFilename:(id)arg1;
+ (id)fileHandleReadWeekRemoveFilename:(id)arg1;
+ (id)fileHandleReadPermanentFilename:(id)arg1;
+ (id)fileHandleReadPermanentBackupFilename:(id)arg1;
+ (id)fileHandleReadNonrenewableFilename:(id)arg1;
+ (id)attributeTempFilename:(id)arg1;
+ (id)attributeWeekRemoveFilename:(id)arg1;
+ (id)attributePermanentFilename:(id)arg1;
+ (id)attributePermanentBackupFilename:(id)arg1;
+ (id)attributeNonrenewableFilename:(id)arg1;
+ (id)removeTempFilename:(id)arg1;
+ (id)removeWeekRemoveFilename:(id)arg1;
+ (id)removePermanentFilename:(id)arg1;
+ (id)removePermanentBackupFilename:(id)arg1;
+ (id)removeNonrenewableFilename:(id)arg1;
+ (void)appendTempFilename:(id)arg1 data:(id)arg2;
+ (void)appendWeekRemoveFilename:(id)arg1 data:(id)arg2;
+ (void)appendPermanentFilename:(id)arg1 data:(id)arg2;
+ (void)appendPermanentBackupFilename:(id)arg1 data:(id)arg2;
+ (void)appendNonrenewableFilename:(id)arg1 data:(id)arg2;
+ (void)insertTempFilename:(id)arg1 data:(id)arg2;
+ (void)insertWeekRemoveFilename:(id)arg1 data:(id)arg2;
+ (void)insertPermanentFilename:(id)arg1 data:(id)arg2;
+ (void)insertPermanentBackupFilename:(id)arg1 data:(id)arg2;
+ (void)insertNonrenewableFilename:(id)arg1 data:(id)arg2;
+ (void)saveTempFilename:(id)arg1 data:(id)arg2;
+ (void)saveWeekRemoveFilename:(id)arg1 data:(id)arg2;
+ (void)savePermanentFilename:(id)arg1 data:(id)arg2;
+ (void)savePermanentBackupFilename:(id)arg1 data:(id)arg2;
+ (void)saveNonrenewableFilename:(id)arg1 data:(id)arg2;
+ (id)readTempFilename:(id)arg1;
+ (id)readWeekRemoveFilename:(id)arg1;
+ (id)readPermanentFilename:(id)arg1;
+ (id)readPermanentBackupFilename:(id)arg1;
+ (id)readNonrenewableFilename:(id)arg1;
+ (id)fileHandleNameSpace:(id)arg1 filename:(id)arg2 type:(id)arg3;
+ (id)fileHandleEditNameSpace:(id)arg1 filename:(id)arg2;
+ (id)fileHandleSaveNameSpace:(id)arg1 filename:(id)arg2;
+ (id)fileHandleReadNameSpace:(id)arg1 filename:(id)arg2;
+ (id)attributeNameSpace:(id)arg1 filename:(id)arg2;
+ (id)removeNameSpace:(id)arg1 filename:(id)arg2;
+ (void)appendNameSpace:(id)arg1 filename:(id)arg2 data:(id)arg3 completion:(CDUnknownBlockType)arg4;
+ (id)appendNameSpace:(id)arg1 filename:(id)arg2 data:(id)arg3;
+ (void)insertNameSpace:(id)arg1 filename:(id)arg2 data:(id)arg3 completion:(CDUnknownBlockType)arg4;
+ (id)insertNameSpace:(id)arg1 filename:(id)arg2 data:(id)arg3;
+ (void)saveNameSpace:(id)arg1 filename:(id)arg2 data:(id)arg3 completion:(CDUnknownBlockType)arg4;
+ (id)saveNameSpace:(id)arg1 filename:(id)arg2 data:(id)arg3;
+ (void)readNameSpace:(id)arg1 filename:(id)arg2 pathfullMoveFrom:(id)arg3 completion:(CDUnknownBlockType)arg4;
+ (id)readNameSpace:(id)arg1 filename:(id)arg2 pathfullMoveFrom:(id)arg3;
+ (void)readNameSpace:(id)arg1 filename:(id)arg2 completion:(CDUnknownBlockType)arg3;
+ (id)readNameSpace:(id)arg1 filename:(id)arg2;
+ (id)changeNameSpace:(id)arg1 nameSpaceNew:(id)arg2 policy:(unsigned long long)arg3 rate:(float)arg4;
+ (id)changeNameSpace:(id)arg1 nameSpaceNew:(id)arg2 policy:(unsigned long long)arg3;
+ (id)changeNameSpace:(id)arg1 policy:(unsigned long long)arg2;
+ (id)removeNameSpace:(id)arg1;
+ (id)createNameSpace:(id)arg1 policy:(unsigned long long)arg2 rate:(float)arg3;
+ (id)createNameSpace:(id)arg1 policy:(unsigned long long)arg2;
+ (_Bool)existsNameSpace:(id)arg1 filename:(id)arg2;
+ (_Bool)existsNameSpace:(id)arg1;
+ (id)sharedInstance;
+ (void)createPredefinedNameSpace;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *dispatch_queue_file_caches; // @synthesize dispatch_queue_file_caches=_dispatch_queue_file_caches;
@property(retain, nonatomic) NSMutableDictionary *dictionaryCustomeNameSpaceNotification; // @synthesize dictionaryCustomeNameSpaceNotification=_dictionaryCustomeNameSpaceNotification;
@property(nonatomic) unsigned long long defaultByte; // @synthesize defaultByte=_defaultByte;
@property(nonatomic) float defaultRate; // @synthesize defaultRate=_defaultRate;
@property(nonatomic) unsigned long long defaultSort; // @synthesize defaultSort=_defaultSort;
@property(nonatomic) unsigned long long defaultTime; // @synthesize defaultTime=_defaultTime;
@property(nonatomic) unsigned long long defaultSize; // @synthesize defaultSize=_defaultSize;
@property(nonatomic) unsigned long long defaultType; // @synthesize defaultType=_defaultType;
@property(retain, nonatomic) NSMutableSet *nssetNameSpaceClearExclude; // @synthesize nssetNameSpaceClearExclude=_nssetNameSpaceClearExclude;
- (void).cxx_destruct;
- (void)enterForeground;
@property(nonatomic) _Bool isClearing; // @synthesize isClearing=_isClearing;
- (void)dealloc;
- (id)init;

@end

