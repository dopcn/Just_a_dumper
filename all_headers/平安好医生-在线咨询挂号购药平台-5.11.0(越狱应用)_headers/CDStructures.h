//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#pragma mark Function Pointers and Blocks

typedef void (*CDUnknownFunctionPointerType)(void); // return type and parameters are unknown

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct ASRClientWrapper {
    int count;
    struct asr_client *asrService;
};

struct ASRVadBeepWapper {
    CDUnknownFunctionPointerType *_field1;
    struct LibVAD _field2;
    id _field3;
    long long _field4;
    _Bool _field5;
    id _field6;
    id _field7;
    _Bool _field8;
    id _field9;
};

struct AUTHORITY_KEYID_st;

struct AVAppAsyncStatistic {
    unsigned long long size;
    long long buf_backwards;
    long long buf_forwards;
    long long buf_capacity;
};

struct AVMessage {
    int what;
    int arg1;
    int arg2;
    long long long_arg;
    void *obj;
    CDUnknownFunctionPointerType free_l;
    struct AVMessage *next;
};

struct Aec_produce {
    void *p;
    int necho;
    _Bool is_aec_finish;
};

struct AudioBuffer {
    unsigned int _field1;
    unsigned int _field2;
    void *_field3;
};

struct AudioBufferList {
    unsigned int _field1;
    struct AudioBuffer _field2[1];
};

struct AudioComponentDescription {
    unsigned int componentType;
    unsigned int componentSubType;
    unsigned int componentManufacturer;
    unsigned int componentFlags;
    unsigned int componentFlagsMask;
};

struct AudioQueueBuffer {
    unsigned int _field1;
    void *_field2;
    unsigned int _field3;
    void *_field4;
    unsigned int _field5;
    struct AudioStreamPacketDescription *_field6;
    unsigned int _field7;
};

struct AudioStreamBasicDescription {
    double mSampleRate;
    unsigned int mFormatID;
    unsigned int mFormatFlags;
    unsigned int mBytesPerPacket;
    unsigned int mFramesPerPacket;
    unsigned int mBytesPerFrame;
    unsigned int mChannelsPerFrame;
    unsigned int mBitsPerChannel;
    unsigned int mReserved;
};

struct AudioStreamPacketDescription;

struct AudioTimeStamp {
    double _field1;
    unsigned long long _field2;
    double _field3;
    unsigned long long _field4;
    struct SMPTETime _field5;
    unsigned int _field6;
    unsigned int _field7;
};

struct CATransform3D {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
    double _field5;
    double _field6;
    double _field7;
    double _field8;
    double _field9;
    double _field10;
    double _field11;
    double _field12;
    double _field13;
    double _field14;
    double _field15;
    double _field16;
};

struct CGAffineTransform {
    double a;
    double b;
    double c;
    double d;
    double tx;
    double ty;
};

struct CGColor;

struct CGPoint {
    double x;
    double y;
};

struct CGRect {
    struct CGPoint origin;
    struct CGSize size;
};

struct CGSize {
    double width;
    double height;
};

struct CHLS;

struct CImCenter {
    CDUnknownFunctionPointerType *_field1;
    CDUnknownFunctionPointerType _field2;
    struct CIosConfig _field3;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field4;
    long long _field5;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field6;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field7;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field8;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field9;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field10;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field11;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field12;
    int _field13;
    int _field14;
    int _field15;
    int _field16;
    int _field17;
    _Bool _field18;
    struct CImSocket *_field19;
    _Bool _field20;
    _Bool _field21;
    struct CHLS *_field22;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field23;
    _Bool _field24;
    long long _field25;
    _Bool _field26;
    struct _opaque_pthread_t *_field27;
    int *_field28;
    int *_field29;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field30;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field31;
    struct list<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> _field32;
    struct _opaque_pthread_mutex_t _field33;
    struct _opaque_pthread_mutex_t _field34;
    struct _opaque_pthread_mutex_t _field35;
    int *_field36;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field37;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field38;
    struct _opaque_pthread_mutex_t _field39;
    _Bool _field40;
    int _field41;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field42;
};

struct CImSocket;

struct CIosConfig {
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field1;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field2;
    _Bool _field3;
    int _field4;
    int _field5;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field6;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field7;
    int _field8;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field9;
    int _field10;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field11;
    int _field12;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field13;
    CDUnknownFunctionPointerType _field14;
    CDUnknownFunctionPointerType _field15;
    CDUnknownFunctionPointerType _field16;
};

struct CLLocationCoordinate2D {
    double latitude;
    double longitude;
};

struct CascadeClassifier {
    CDUnknownFunctionPointerType *_vptr$CascadeClassifier;
    struct Data data;
    struct Ptr<cv::FeatureEvaluator> featureEvaluator;
    struct Ptr<CvHaarClassifierCascade> oldCascade;
    struct Ptr<cv::CascadeClassifier::MaskGenerator> maskGenerator;
};

struct CvHaarClassifierCascade;

struct DDListNode {
    void *_field1;
    struct DDListNode *_field2;
    struct DDListNode *_field3;
};

struct DTree;

struct DTreeNode;

struct Data {
    _Bool isStumpBased;
    int stageType;
    int featureType;
    int ncategories;
    struct Size_<int> origWinSize;
    struct vector<cv::CascadeClassifier::Data::Stage, std::__1::allocator<cv::CascadeClassifier::Data::Stage>> stages;
    struct vector<cv::CascadeClassifier::Data::DTree, std::__1::allocator<cv::CascadeClassifier::Data::DTree>> classifiers;
    struct vector<cv::CascadeClassifier::Data::DTreeNode, std::__1::allocator<cv::CascadeClassifier::Data::DTreeNode>> nodes;
    struct vector<float, std::__1::allocator<float>> leaves;
    struct vector<int, std::__1::allocator<int>> subsets;
};

struct EffectFx;

struct EffectParam {
    struct EffectFx *_field1[11];
    int _field2;
    struct {
        char _field1[20];
        float _field2;
    } _field3[10];
};

struct FeatureEvaluator;

struct IJKAVInject_AsyncStatistic {
    unsigned long long size;
    long long buf_backwards;
    long long buf_forwards;
    long long buf_capacity;
};

struct IjkIOAppCacheStatistic {
    long long cache_physical_pos;
    long long cache_file_forwards;
    long long cache_file_pos;
    long long cache_count_bytes;
    long long logical_file_size;
};

struct LOT_Subpath {
    int _field1;
    double _field2;
    struct CGPoint _field3;
    struct CGPoint _field4;
    struct CGPoint _field5;
    struct LOT_Subpath *_field6;
};

struct LibVAD {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    _Bool _field3;
    _Bool _field4;
    int _field5;
    int _field6;
    int _field7;
    int _field8;
    int _field9;
    int _field10;
    int _field11;
    int _field12;
    int _field13;
    short _field14[640];
    void *_field15;
};

struct MGSwipeAnimationData {
    double from;
    double to;
    double duration;
    double start;
};

struct MSize {
    int *_field1;
};

struct MStep {
    unsigned long long *_field1;
    unsigned long long _field2[2];
};

struct MaskGenerator;

struct Mat {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
    char *_field5;
    int *_field6;
    char *_field7;
    char *_field8;
    char *_field9;
    struct MatAllocator *_field10;
    struct MSize _field11;
    struct MStep _field12;
};

struct MatAllocator;

struct MatchParam;

struct ModuleData;

struct NAME_CONSTRAINTS_st;

struct NSDictionary {
    Class _field1;
};

struct NSMutableDictionary {
    Class _field1;
};

struct NSURL {
    Class _field1;
    id _field2;
    id _field3;
    void *_field4;
    void *_field5;
};

struct Node;

struct PAFaceAttr {
    _Bool has_face;
    float yaw;
    float pitch;
    float blurness_motion;
    struct CGRect face_rect;
    int eye_hwratio;
    float brightness;
    float gaussian;
    float deflecion_h;
    float deflecion_v;
    struct CGPoint eye_left;
    struct CGPoint eye_right;
    float quality;
};

struct PAFaceCheckBasicInfo {
    int result;
    struct CGRect face_rect;
    struct CGRect face_rect_max;
    _Bool validFace;
    double confidence;
    float pitch;
    float yaw;
    float roll;
    _Bool head_shake;
    _Bool mouth_open;
    float blurness_motion;
    float brightness;
};

struct PAFaceImageInfo {
    _Bool has_face;
    float yaw;
    float pitch;
    float blurness_motion;
    struct CGRect face_rect;
    float brightness;
};

struct PAPH_void {
    CDUnknownFunctionPointerType _field1;
    CDUnknownFunctionPointerType _field2;
};

struct POPAnimatorItem;

struct Ptr<CvHaarClassifierCascade> {
    struct CvHaarClassifierCascade *obj;
    int *refcount;
};

struct Ptr<cv::CascadeClassifier::MaskGenerator> {
    struct MaskGenerator *obj;
    int *refcount;
};

struct Ptr<cv::FeatureEvaluator> {
    struct FeatureEvaluator *obj;
    int *refcount;
};

struct RCTJSContextData {
    _Bool _field1;
    id _field2;
    id _field3;
};

struct RCTMethodInfo {
    char *_field1;
    char *_field2;
    _Bool _field3;
};

struct RandomAccessBundleData {
    struct unique_ptr<__sFILE, int (*)(__sFILE *)> bundle;
    unsigned long long baseOffset;
    unsigned long long numTableEntries;
    struct unique_ptr<ModuleData [], std::__1::default_delete<ModuleData []>> table;
};

struct SDL_AudioSpec {
    int freq;
    unsigned short format;
    unsigned char channels;
    unsigned char silence;
    unsigned short samples;
    unsigned short padding;
    unsigned int size;
    CDUnknownFunctionPointerType callback;
    void *userdata;
};

struct SDL_Class;

struct SDL_SpeedSampler2 {
    long long sample_range;
    long long last_profile_tick;
    long long last_profile_duration;
    long long last_profile_quantity;
    long long last_profile_speed;
};

struct SDL_VoutOverlay {
    int _field1;
    int _field2;
    unsigned int _field3;
    int _field4;
    unsigned short *_field5;
    char **_field6;
    int _field7;
    int _field8;
    int _field9;
    struct SDL_Class *_field10;
    struct SDL_VoutOverlay_Opaque *_field11;
    CDUnknownFunctionPointerType _field12;
    CDUnknownFunctionPointerType _field13;
    CDUnknownFunctionPointerType _field14;
    CDUnknownFunctionPointerType _field15;
    CDUnknownFunctionPointerType _field16;
};

struct SDL_VoutOverlay_Opaque;

struct SMPTETime {
    short _field1;
    short _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
    short _field6;
    short _field7;
    short _field8;
    short _field9;
};

struct SSState<POP::Vector4<double>> {
    struct Vector4<double> _field1;
    struct Vector4<double> _field2;
};

struct SceneRender {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    struct map<std::basic_string<char>, EffectFx::FxUniform, std::less<std::basic_string<char>>, std::allocator<std::pair<const std::basic_string<char>, EffectFx::FxUniform>>> _field3;
    struct map<std::basic_string<char>, EffectFx::FxAttribute, std::less<std::basic_string<char>>, std::allocator<std::pair<const std::basic_string<char>, EffectFx::FxAttribute>>> _field4;
    int _field5;
    int _field6;
    int _field7[16];
    int _field8;
    int _field9;
    int _field10;
    union _GLKMatrix4 _field11;
};

struct Size_<int> {
    int width;
    int height;
};

struct SpringSolver<POP::Vector4<double>> {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
    double _field5;
    double _field6;
    double _field7;
    struct SSState<POP::Vector4<double>> _field8;
    struct Vector4<double> _field9;
    _Bool _field10;
};

struct Stage;

struct UIEdgeInsets {
    double top;
    double left;
    double bottom;
    double right;
};

struct UIOffset {
    double horizontal;
    double vertical;
};

struct USCOfflineWrapper {
    _Bool _field1;
};

struct USCTTSHandler {
    void *_field1;
    _Bool _field2;
};

struct Vector4<double> {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
};

struct WBSDKJKConstBuffer {
    struct WBSDKJKConstPtrRange _field1;
};

struct WBSDKJKConstPtrRange {
    char *_field1;
    unsigned long long _field2;
};

struct WBSDKJKEncodeCache {
    id _field1;
    unsigned long long _field2;
    unsigned long long _field3;
};

struct WBSDKJKEncodeState {
    struct WBSDKJKManagedBuffer _field1;
    struct WBSDKJKManagedBuffer _field2;
    unsigned long long _field3;
    struct WBSDKJKFastClassLookup _field4;
    struct WBSDKJKEncodeCache _field5[1024];
    unsigned long long _field6;
    unsigned long long _field7;
    unsigned long long _field8;
    id _field9;
    id _field10;
    SEL _field11;
    CDUnknownFunctionPointerType _field12;
    CDUnknownBlockType _field13;
};

struct WBSDKJKFastClassLookup {
    void *_field1;
    void *_field2;
    void *_field3;
    void *_field4;
    void *_field5;
};

struct WBSDKJKHashTableEntry {
    unsigned long long _field1;
    id _field2;
    id _field3;
};

struct WBSDKJKManagedBuffer {
    struct WBSDKJKPtrRange _field1;
    unsigned long long _field2;
    unsigned long long _field3;
};

struct WBSDKJKObjCImpCache {
    Class _field1;
    CDUnknownFunctionPointerType _field2;
    CDUnknownFunctionPointerType _field3;
};

struct WBSDKJKObjectStack {
    void **_field1;
    void **_field2;
    unsigned long long *_field3;
    unsigned long long _field4;
    unsigned long long _field5;
    unsigned long long _field6;
    unsigned long long _field7;
};

struct WBSDKJKParseState {
    unsigned long long _field1;
    struct WBSDKJKConstBuffer _field2;
    unsigned long long _field3;
    unsigned long long _field4;
    unsigned long long _field5;
    unsigned long long _field6;
    unsigned long long _field7;
    unsigned long long _field8;
    struct WBSDKJKParseToken _field9;
    struct WBSDKJKObjectStack _field10;
    struct WBSDKJKTokenCache _field11;
    struct WBSDKJKObjCImpCache _field12;
    id _field13;
    int _field14;
    _Bool _field15;
};

struct WBSDKJKParseToken {
    struct WBSDKJKConstPtrRange _field1;
    unsigned long long _field2;
    struct WBSDKJKTokenValue _field3;
    struct WBSDKJKManagedBuffer _field4;
};

struct WBSDKJKPtrRange {
    char *_field1;
    unsigned long long _field2;
};

struct WBSDKJKTokenCache {
    struct WBSDKJKTokenCacheItem *_field1;
    unsigned long long _field2;
    unsigned int _field3;
    unsigned char _field4[1024];
};

struct WBSDKJKTokenCacheItem;

struct WBSDKJKTokenValue {
    struct WBSDKJKConstPtrRange _field1;
    unsigned long long _field2;
    unsigned long long _field3;
    union {
        long long _field1;
        unsigned long long _field2;
        double _field3;
    } _field4;
    struct WBSDKJKTokenCacheItem *_field5;
};

struct X509_POLICY_CACHE_st;

struct X509_algor_st;

struct YGValue {
    float value;
    int unit;
};

struct _IplImage {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
    int _field5;
    char _field6[4];
    char _field7[4];
    int _field8;
    int _field9;
    int _field10;
    int _field11;
    int _field12;
    struct _IplROI *_field13;
    struct _IplImage *_field14;
    void *_field15;
    struct _IplTileInfo *_field16;
    int _field17;
    char *_field18;
    int _field19;
    int _field20[4];
    int _field21[4];
    char *_field22;
};

struct _IplROI;

struct _IplTileInfo;

struct _NSRange {
    unsigned long long location;
    unsigned long long length;
};

struct _POPAnimationState {
    CDUnknownFunctionPointerType *_field1;
    id _field2;
    int _field3;
    id _field4;
    unsigned long long _field5;
    double _field6;
    double _field7;
    double _field8;
    id _field9;
    CDUnknownBlockType _field10;
    CDUnknownBlockType _field11;
    CDUnknownBlockType _field12;
    CDUnknownBlockType _field13;
    id _field14;
    id _field15;
    double _field16;
    long long _field17;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
};

struct _Rb_tree<UIView *, std::pair<UIView *const, id<ZmfRender>>, std::_Select1st<std::pair<UIView *const, id<ZmfRender>>>, std::less<UIView *>, std::allocator<std::pair<UIView *const, id<ZmfRender>>>> {
    struct _Rb_tree_impl<std::less<UIView *>, false> _field1;
};

struct _Rb_tree<int, std::pair<const int, Layer *>, std::_Select1st<std::pair<const int, Layer *>>, std::less<int>, std::allocator<std::pair<const int, Layer *>>> {
    struct _Rb_tree_impl<std::less<int>, false> _M_impl;
};

struct _Rb_tree<std::basic_string<char>, std::pair<const std::basic_string<char>, CaptureDevice *>, std::_Select1st<std::pair<const std::basic_string<char>, CaptureDevice *>>, std::less<std::basic_string<char>>, std::allocator<std::pair<const std::basic_string<char>, CaptureDevice *>>> {
    struct _Rb_tree_impl<std::less<std::basic_string<char>>, false> _M_impl;
};

struct _Rb_tree<std::basic_string<char>, std::pair<const std::basic_string<char>, EffectFx::FxAttribute>, std::_Select1st<std::pair<const std::basic_string<char>, EffectFx::FxAttribute>>, std::less<std::basic_string<char>>, std::allocator<std::pair<const std::basic_string<char>, EffectFx::FxAttribute>>> {
    struct _Rb_tree_impl<std::less<std::basic_string<char>>, false> _field1;
};

struct _Rb_tree<std::basic_string<char>, std::pair<const std::basic_string<char>, EffectFx::FxUniform>, std::_Select1st<std::pair<const std::basic_string<char>, EffectFx::FxUniform>>, std::less<std::basic_string<char>>, std::allocator<std::pair<const std::basic_string<char>, EffectFx::FxUniform>>> {
    struct _Rb_tree_impl<std::less<std::basic_string<char>>, false> _field1;
};

struct _Rb_tree<std::basic_string<char>, std::pair<const std::basic_string<char>, Layer *>, std::_Select1st<std::pair<const std::basic_string<char>, Layer *>>, std::less<std::basic_string<char>>, std::allocator<std::pair<const std::basic_string<char>, Layer *>>> {
    struct _Rb_tree_impl<std::less<std::basic_string<char>>, false> _M_impl;
};

struct _Rb_tree_impl<std::less<UIView *>, false> {
    struct less<UIView *> _field1;
    struct _Rb_tree_node_base _field2;
    unsigned long long _field3;
};

struct _Rb_tree_impl<std::less<int>, false> {
    struct less<int> _M_key_compare;
    struct _Rb_tree_node_base _M_header;
    unsigned long long _M_node_count;
};

struct _Rb_tree_impl<std::less<std::basic_string<char>>, false> {
    struct less<std::basic_string<char>> _M_key_compare;
    struct _Rb_tree_node_base _M_header;
    unsigned long long _M_node_count;
};

struct _Rb_tree_node_base {
    int _M_color;
    struct _Rb_tree_node_base *_M_parent;
    struct _Rb_tree_node_base *_M_left;
    struct _Rb_tree_node_base *_M_right;
};

struct _SkyEyeFucatorUtil {
    CDUnknownFunctionPointerType _field1;
    CDUnknownFunctionPointerType _field2;
};

struct __CFString;

struct __list_node_base<std::__1::basic_string<char>, void *> {
    struct __list_node_base<std::__1::basic_string<char>, void *> *_field1;
    struct __list_node_base<std::__1::basic_string<char>, void *> *_field2;
};

struct __list_node_base<std::__1::shared_ptr<POPAnimatorItem>, void *> {
    struct __list_node_base<std::__1::shared_ptr<POPAnimatorItem>, void *> *__prev_;
    struct __list_node_base<std::__1::shared_ptr<POPAnimatorItem>, void *> *__next_;
};

struct __sFILE {
    char *_field1;
    int _field2;
    int _field3;
    short _field4;
    short _field5;
    struct __sbuf _field6;
    int _field7;
    void *_field8;
    CDUnknownFunctionPointerType _field9;
    CDUnknownFunctionPointerType _field10;
    CDUnknownFunctionPointerType _field11;
    CDUnknownFunctionPointerType _field12;
    struct __sbuf _field13;
    struct __sFILEX *_field14;
    int _field15;
    unsigned char _field16[3];
    unsigned char _field17[1];
    struct __sbuf _field18;
    int _field19;
    long long _field20;
};

struct __sbuf {
    char *_field1;
    int _field2;
};

struct __shared_weak_count;

struct _opaque_pthread_mutex_t {
    long long __sig;
    char __opaque[56];
};

struct _xmlAttr {
    void *_field1;
    int _field2;
    char *_field3;
    struct _xmlNode *_field4;
    struct _xmlNode *_field5;
    struct _xmlNode *_field6;
    struct _xmlAttr *_field7;
    struct _xmlAttr *_field8;
    struct _xmlDoc *_field9;
    struct _xmlNs *_field10;
    int _field11;
    void *_field12;
};

struct _xmlDict;

struct _xmlDoc {
    void *_field1;
    int _field2;
    char *_field3;
    struct _xmlNode *_field4;
    struct _xmlNode *_field5;
    struct _xmlNode *_field6;
    struct _xmlNode *_field7;
    struct _xmlNode *_field8;
    struct _xmlDoc *_field9;
    int _field10;
    int _field11;
    struct _xmlDtd *_field12;
    struct _xmlDtd *_field13;
    struct _xmlNs *_field14;
    char *_field15;
    char *_field16;
    void *_field17;
    void *_field18;
    char *_field19;
    int _field20;
    struct _xmlDict *_field21;
    void *_field22;
    int _field23;
    int _field24;
};

struct _xmlDtd;

struct _xmlHashTable;

struct _xmlKind {
    void *_field1;
    int _field2;
};

struct _xmlNode {
    void *_field1;
    int _field2;
    char *_field3;
    struct _xmlNode *_field4;
    struct _xmlNode *_field5;
    struct _xmlNode *_field6;
    struct _xmlNode *_field7;
    struct _xmlNode *_field8;
    struct _xmlDoc *_field9;
    struct _xmlNs *_field10;
    char *_field11;
    struct _xmlAttr *_field12;
    struct _xmlNs *_field13;
    void *_field14;
    unsigned short _field15;
    unsigned short _field16;
};

struct _xmlNs {
    struct _xmlNs *_field1;
    int _field2;
    char *_field3;
    char *_field4;
    void *_field5;
    struct _xmlDoc *_field6;
};

struct _xmlParserInput;

struct _xmlParserNodeInfo;

struct _xmlStd {
    void *_field1;
    int _field2;
    char *_field3;
    struct _xmlNode *_field4;
    struct _xmlNode *_field5;
    struct _xmlNode *_field6;
    struct _xmlStd *_field7;
    struct _xmlStd *_field8;
    struct _xmlDoc *_field9;
};

struct _xmlValidState;

struct aqueue<AudioBufferList> {
    struct Node *_field1;
    struct Node *_field2;
    struct Node *_field3;
    struct Node *_field4;
    unsigned int _field5;
    unsigned int _field6;
};

struct asn1_string_st;

struct asr_client;

struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
    struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
        struct __rep {
            union {
                struct __long {
                    char *_field1;
                    unsigned long long _field2;
                    unsigned long long _field3;
                } _field1;
                struct __short {
                    char _field1[23];
                    struct {
                        unsigned char _field1;
                    } _field2;
                } _field2;
                struct __raw {
                    unsigned long long _field1[3];
                } _field3;
            } _field1;
        } _field1;
    } _field1;
};

struct bignum_st;

struct bn_blinding_st;

struct bn_mont_ctx_st;

struct cmp_ctx_s {
    unsigned char _field1;
    void *_field2;
    CDUnknownFunctionPointerType _field3;
    CDUnknownFunctionPointerType _field4;
};

struct crypto_ex_data_st {
    struct stack_st_void *_field1;
    int _field2;
};

struct dh_st;

struct dsa_st;

struct ec_key_st;

struct engine_st;

struct evp_pkey_asn1_method_st;

struct evp_pkey_st {
    int _field1;
    int _field2;
    int _field3;
    struct evp_pkey_asn1_method_st *_field4;
    struct engine_st *_field5;
    union {
        char *_field1;
        struct rsa_st *_field2;
        struct dsa_st *_field3;
        struct dh_st *_field4;
        struct ec_key_st *_field5;
    } _field6;
    int _field7;
    struct stack_st_X509_ATTRIBUTE *_field8;
};

struct in6_addr {
    union {
        unsigned char _field1[16];
        unsigned short _field2[8];
        unsigned int _field3[4];
    } _field1;
};

struct in_addr {
    unsigned int _field1;
};

struct internal_state;

struct less<UIView *>;

struct less<int>;

struct less<std::basic_string<char>>;

struct list<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> {
    struct __list_node_base<std::__1::basic_string<char>, void *> _field1;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<std::__1::basic_string<char>, void *>>> {
        unsigned long long _field1;
    } _field2;
};

struct list<std::__1::shared_ptr<POPAnimatorItem>, std::__1::allocator<std::__1::shared_ptr<POPAnimatorItem>>> {
    struct __list_node_base<std::__1::shared_ptr<POPAnimatorItem>, void *> __end_;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<std::__1::shared_ptr<POPAnimatorItem>, void *>>> {
        unsigned long long __first_;
    } __size_alloc_;
};

struct map<UIView *, id<ZmfRender>, std::less<UIView *>, std::allocator<std::pair<UIView *const, id<ZmfRender>>>> {
    struct _Rb_tree<UIView *, std::pair<UIView *const, id<ZmfRender>>, std::_Select1st<std::pair<UIView *const, id<ZmfRender>>>, std::less<UIView *>, std::allocator<std::pair<UIView *const, id<ZmfRender>>>> _field1;
};

struct map<int, Layer *, std::less<int>, std::allocator<std::pair<const int, Layer *>>> {
    struct _Rb_tree<int, std::pair<const int, Layer *>, std::_Select1st<std::pair<const int, Layer *>>, std::less<int>, std::allocator<std::pair<const int, Layer *>>> _M_t;
};

struct map<std::basic_string<char>, CaptureDevice *, std::less<std::basic_string<char>>, std::allocator<std::pair<const std::basic_string<char>, CaptureDevice *>>> {
    struct _Rb_tree<std::basic_string<char>, std::pair<const std::basic_string<char>, CaptureDevice *>, std::_Select1st<std::pair<const std::basic_string<char>, CaptureDevice *>>, std::less<std::basic_string<char>>, std::allocator<std::pair<const std::basic_string<char>, CaptureDevice *>>> _M_t;
};

struct map<std::basic_string<char>, EffectFx::FxAttribute, std::less<std::basic_string<char>>, std::allocator<std::pair<const std::basic_string<char>, EffectFx::FxAttribute>>> {
    struct _Rb_tree<std::basic_string<char>, std::pair<const std::basic_string<char>, EffectFx::FxAttribute>, std::_Select1st<std::pair<const std::basic_string<char>, EffectFx::FxAttribute>>, std::less<std::basic_string<char>>, std::allocator<std::pair<const std::basic_string<char>, EffectFx::FxAttribute>>> _field1;
};

struct map<std::basic_string<char>, EffectFx::FxUniform, std::less<std::basic_string<char>>, std::allocator<std::pair<const std::basic_string<char>, EffectFx::FxUniform>>> {
    struct _Rb_tree<std::basic_string<char>, std::pair<const std::basic_string<char>, EffectFx::FxUniform>, std::_Select1st<std::pair<const std::basic_string<char>, EffectFx::FxUniform>>, std::less<std::basic_string<char>>, std::allocator<std::pair<const std::basic_string<char>, EffectFx::FxUniform>>> _field1;
};

struct map<std::basic_string<char>, Layer *, std::less<std::basic_string<char>>, std::allocator<std::pair<const std::basic_string<char>, Layer *>>> {
    struct _Rb_tree<std::basic_string<char>, std::pair<const std::basic_string<char>, Layer *>, std::_Select1st<std::pair<const std::basic_string<char>, Layer *>>, std::less<std::basic_string<char>>, std::allocator<std::pair<const std::basic_string<char>, Layer *>>> _M_t;
};

struct msgpack_object {
    int _field1;
    union {
        _Bool _field1;
        unsigned long long _field2;
        long long _field3;
        double _field4;
        struct {
            unsigned int _field1;
            struct msgpack_object *_field2;
        } _field5;
        struct {
            unsigned int _field1;
            struct msgpack_object_kv *_field2;
        } _field6;
        struct {
            unsigned int _field1;
            char *_field2;
        } _field7;
    } _field2;
};

struct msgpack_object_kv;

struct msgpack_packer {
    void *_field1;
    CDUnknownFunctionPointerType _field2;
};

struct mutex {
    struct _opaque_pthread_mutex_t __m_;
};

struct rsa_meth_st;

struct rsa_st {
    int _field1;
    long long _field2;
    struct rsa_meth_st *_field3;
    struct engine_st *_field4;
    struct bignum_st *_field5;
    struct bignum_st *_field6;
    struct bignum_st *_field7;
    struct bignum_st *_field8;
    struct bignum_st *_field9;
    struct bignum_st *_field10;
    struct bignum_st *_field11;
    struct bignum_st *_field12;
    struct crypto_ex_data_st _field13;
    int _field14;
    int _field15;
    struct bn_mont_ctx_st *_field16;
    struct bn_mont_ctx_st *_field17;
    struct bn_mont_ctx_st *_field18;
    char *_field19;
    struct bn_blinding_st *_field20;
    struct bn_blinding_st *_field21;
};

struct shared_ptr<POPAnimatorItem> {
    struct POPAnimatorItem *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<void> {
    void *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct sockaddr {
    unsigned char _field1;
    unsigned char _field2;
    char _field3[14];
};

struct sockaddr_in {
    unsigned char _field1;
    unsigned char _field2;
    unsigned short _field3;
    struct in_addr _field4;
    char _field5[8];
};

struct sockaddr_in6 {
    unsigned char _field1;
    unsigned char _field2;
    unsigned short _field3;
    unsigned int _field4;
    struct in6_addr _field5;
    unsigned int _field6;
};

struct sockaddr_un {
    unsigned char _field1;
    unsigned char _field2;
    char _field3[104];
};

struct stack_st_DIST_POINT;

struct stack_st_GENERAL_NAME;

struct stack_st_X509_ATTRIBUTE;

struct stack_st_void;

struct tagZOS_INET_ADDR {
    unsigned short wType;
    unsigned short wPort;
    unsigned char aucSpareX64[4];
    CDUnion_6f38cfd9 u;
};

struct tagZOS_INET_IP {
    unsigned short _field1;
    unsigned char _field2[2];
    unsigned char _field3[4];
    CDUnion_6f38cfd9 _field4;
};

struct tagZPIOS_SOCK_CFG {
    CDUnknownFunctionPointerType pfnOnConnOk;
    CDUnknownFunctionPointerType pfnOnDisced;
    CDUnknownFunctionPointerType pfnOnAccepted;
    CDUnknownFunctionPointerType pfnOnReadable;
    CDUnknownFunctionPointerType pfnOnWritable;
    CDUnknownFunctionPointerType pfnOnRecvData;
};

struct tm_zip_s {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned int _field6;
};

struct unique_ptr<ModuleData [], std::__1::default_delete<ModuleData []>> {
    struct __compressed_pair<ModuleData *, std::__1::default_delete<ModuleData []>> {
        struct ModuleData *__first_;
    } __ptr_;
};

struct unique_ptr<__sFILE, int (*)(__sFILE *)> {
    struct __compressed_pair<__sFILE *, int (*)(__sFILE *)> {
        struct __sFILE *__first_;
        CDUnknownFunctionPointerType __second_;
    } __ptr_;
};

struct uregex;

struct vector<cv::CascadeClassifier::Data::DTree, std::__1::allocator<cv::CascadeClassifier::Data::DTree>> {
    struct DTree *__begin_;
    struct DTree *__end_;
    struct __compressed_pair<cv::CascadeClassifier::Data::DTree *, std::__1::allocator<cv::CascadeClassifier::Data::DTree>> {
        struct DTree *__first_;
    } __end_cap_;
};

struct vector<cv::CascadeClassifier::Data::DTreeNode, std::__1::allocator<cv::CascadeClassifier::Data::DTreeNode>> {
    struct DTreeNode *__begin_;
    struct DTreeNode *__end_;
    struct __compressed_pair<cv::CascadeClassifier::Data::DTreeNode *, std::__1::allocator<cv::CascadeClassifier::Data::DTreeNode>> {
        struct DTreeNode *__first_;
    } __end_cap_;
};

struct vector<cv::CascadeClassifier::Data::Stage, std::__1::allocator<cv::CascadeClassifier::Data::Stage>> {
    struct Stage *__begin_;
    struct Stage *__end_;
    struct __compressed_pair<cv::CascadeClassifier::Data::Stage *, std::__1::allocator<cv::CascadeClassifier::Data::Stage>> {
        struct Stage *__first_;
    } __end_cap_;
};

struct vector<float, std::__1::allocator<float>> {
    float *__begin_;
    float *__end_;
    struct __compressed_pair<float *, std::__1::allocator<float>> {
        float *__first_;
    } __end_cap_;
};

struct vector<int, std::__1::allocator<int>> {
    int *__begin_;
    int *__end_;
    struct __compressed_pair<int *, std::__1::allocator<int>> {
        int *__first_;
    } __end_cap_;
};

struct x509_cert_aux_st;

struct x509_cinf_st;

struct x509_st {
    struct x509_cinf_st *_field1;
    struct X509_algor_st *_field2;
    struct asn1_string_st *_field3;
    int _field4;
    int _field5;
    char *_field6;
    struct crypto_ex_data_st _field7;
    long long _field8;
    long long _field9;
    unsigned long long _field10;
    unsigned long long _field11;
    unsigned long long _field12;
    unsigned long long _field13;
    struct asn1_string_st *_field14;
    struct AUTHORITY_KEYID_st *_field15;
    struct X509_POLICY_CACHE_st *_field16;
    struct stack_st_DIST_POINT *_field17;
    struct stack_st_GENERAL_NAME *_field18;
    struct NAME_CONSTRAINTS_st *_field19;
    unsigned char _field20[20];
    struct x509_cert_aux_st *_field21;
};

struct z_stream_s {
    char *next_in;
    unsigned int avail_in;
    unsigned long long total_in;
    char *next_out;
    unsigned int avail_out;
    unsigned long long total_out;
    char *msg;
    struct internal_state *state;
    CDUnknownFunctionPointerType zalloc;
    CDUnknownFunctionPointerType zfree;
    void *opaque;
    int data_type;
    unsigned long long adler;
    unsigned long long reserved;
};

#pragma mark Typedef'd Structures

typedef struct {
    _Bool _field1;
    unsigned char _field2;
    _Bool _field3;
    unsigned long long _field4;
} CDStruct_6a6a01a4;

typedef struct {
    _Bool skipPermissionRequests;
} CDStruct_3f9b6990;

typedef struct {
    unsigned int types;
    unsigned int timeStampMs;
    float gravity[3];
    float acceleration[3];
    float rotationRate[3];
    float pitch;
    float roll;
    float yaw;
    float brightness;
} CDStruct_036056bd;

typedef struct {
    unsigned long long _field1;
    id *_field2;
    unsigned long long *_field3;
    unsigned long long _field4[5];
} CDStruct_70511ce9;

typedef struct {
    unsigned long long count;
    double *array;
} CDStruct_3b9f1d24;

typedef struct {
    double timeout;
    double maximumAge;
    double accuracy;
    double distanceFilter;
    _Bool useSignificantChanges;
} CDStruct_6dd8fab3;

typedef struct {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
} CDStruct_d2b197d1;

typedef struct {
    double _field1;
    double _field2;
    double _field3;
} CDStruct_39925896;

typedef struct {
    int _field1;
    int _field2;
    int _field3;
} CDStruct_77932685;

typedef struct {
    long long version;
    void *info;
    CDUnknownFunctionPointerType retain;
    CDUnknownFunctionPointerType release;
    CDUnknownFunctionPointerType copyDescription;
} CDStruct_4210025a;

typedef struct {
    long long value;
    int timescale;
    unsigned int flags;
    long long epoch;
} CDStruct_1b6d18a9;

typedef struct {
    unsigned long long count;
    double baseLine;
    double lineHeight;
    struct __CTLine **lines;
    double *widths;
} CDStruct_7a56664d;

typedef struct {
    char _field1[512];
    int _field2;
    unsigned long long _field3;
    int _field4;
    int _field5;
    int _field6;
    int _field7;
    int _field8;
    int _field9;
    int _field10;
    int _field11;
    char *_field12;
    int _field13;
    char *_field14;
    int _field15;
    int _field16;
    int _field17;
    int _field18;
    int _field19;
    int _field20;
    unsigned int _field21[3];
    int _field22;
    float _field23;
    float _field24;
    float _field25;
    float _field26;
    id _field27;
    _Bool _field28;
    int _field29;
    int _field30;
    struct EffectParam *_field31;
    struct MatchParam *_field32;
    float _field33;
    float _field34;
    float _field35;
    float _field36;
} CDStruct_b8cb1407;

typedef struct {
    struct CGColor *_field1;
    struct CGColor *_field2;
    struct CGColor *_field3;
    struct CGColor *_field4;
} CDStruct_a5ac02f4;

typedef struct {
    CDStruct_1b6d18a9 _field1;
    CDStruct_1b6d18a9 _field2;
} CDStruct_5c5366e1;

typedef struct {
    struct tm_zip_s _field1;
    unsigned long long _field2;
    unsigned long long _field3;
    unsigned long long _field4;
} CDStruct_192a48cb;

// Template types
typedef struct SpringSolver<POP::Vector4<double>> {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
    double _field5;
    double _field6;
    double _field7;
    struct SSState<POP::Vector4<double>> _field8;
    struct Vector4<double> _field9;
    _Bool _field10;
} SpringSolver_fe820e75;

typedef struct list<std::__1::shared_ptr<POPAnimatorItem>, std::__1::allocator<std::__1::shared_ptr<POPAnimatorItem>>> {
    struct __list_node_base<std::__1::shared_ptr<POPAnimatorItem>, void *> __end_;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<std::__1::shared_ptr<POPAnimatorItem>, void *>>> {
        unsigned long long __first_;
    } __size_alloc_;
} list_670f5810;

typedef struct shared_ptr<POPAnimatorItem> {
    struct POPAnimatorItem *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_1553c9f8;

typedef struct shared_ptr<void> {
    void *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_b60d0e1e;

#pragma mark Named Unions

union _GLKMatrix4 {
    struct {
        float _field1;
        float _field2;
        float _field3;
        float _field4;
        float _field5;
        float _field6;
        float _field7;
        float _field8;
        float _field9;
        float _field10;
        float _field11;
        float _field12;
        float _field13;
        float _field14;
        float _field15;
        float _field16;
    } _field1;
    float _field2[16];
};

union _GLKQuaternion {
    struct {
        union _GLKVector3 v;
        float s;
    } ;
    struct {
        float x;
        float y;
        float z;
        float w;
    } ;
    float q[4];
};

union _GLKVector3 {
    struct {
        float x;
        float y;
        float z;
    } ;
    struct {
        float r;
        float g;
        float b;
    } ;
    struct {
        float s;
        float t;
        float p;
    } ;
    float v[3];
};

#pragma mark Typedef'd Unions

typedef union {
    unsigned int iIp;
    unsigned char aucIp[4];
    unsigned char aucIpv6[16];
} CDUnion_6f38cfd9;

