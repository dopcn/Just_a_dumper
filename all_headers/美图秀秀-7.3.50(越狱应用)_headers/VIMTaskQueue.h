//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "VIMTaskDelegate-Protocol.h"

@class NSMutableArray, NSString, VIMTask;
@protocol OS_dispatch_queue, VIMTaskQueueArchiverProtocol;

@interface VIMTaskQueue : NSObject <VIMTaskDelegate>
{
    NSObject<OS_dispatch_queue> *_archivalQueue;
    NSObject<OS_dispatch_queue> *_tasksQueue;
    _Bool _suspended;
    NSString *_name;
    id <VIMTaskQueueArchiverProtocol> _archiver;
    long long _taskCount;
    NSMutableArray *_tasks;
    VIMTask *_currentTask;
}

@property(retain, nonatomic) VIMTask *currentTask; // @synthesize currentTask=_currentTask;
@property(retain, nonatomic) NSMutableArray *tasks; // @synthesize tasks=_tasks;
@property(nonatomic, getter=isSuspended) _Bool suspended; // @synthesize suspended=_suspended;
@property(nonatomic) long long taskCount; // @synthesize taskCount=_taskCount;
@property(retain, nonatomic) id <VIMTaskQueueArchiverProtocol> archiver; // @synthesize archiver=_archiver;
@property(retain, nonatomic) NSString *name; // @synthesize name=_name;
- (void).cxx_destruct;
- (void)logTaskStatus:(id)arg1;
- (void)respondToTaskCompletion:(id)arg1;
- (void)taskDidComplete:(id)arg1;
- (void)task:(id)arg1 didCompleteSubtask:(id)arg2;
- (void)task:(id)arg1 didStartSubtask:(id)arg2;
- (void)taskDidStart:(id)arg1;
- (void)load;
- (void)save;
- (void)updateTaskCount;
- (void)startNextTask;
- (void)restart;
- (void)prepareTask:(id)arg1;
- (id)_taskForIdentifier:(id)arg1;
- (id)taskForIdentifier:(id)arg1;
- (void)cancelTaskForIdentifier:(id)arg1;
- (void)resume;
- (void)suspend;
- (void)cancelTask:(id)arg1;
- (void)cancelAllTasks;
- (void)addTask:(id)arg1;
- (void)addTasks:(id)arg1;
- (id)initWithName:(id)arg1 archiver:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

