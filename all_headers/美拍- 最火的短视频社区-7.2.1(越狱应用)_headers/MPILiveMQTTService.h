//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "MPIMQTTSessionManagerDelegate-Protocol.h"

@class MPIMQTTSessionManager, NSLock, NSMutableArray, NSString, NSThread, NSTimer, Reachability, UserInfo;
@protocol MPILiveMQTTServiceDelegate;

@interface MPILiveMQTTService : NSObject <MPIMQTTSessionManagerDelegate>
{
    _Bool _needPubUser;
    _Bool _receivedCurrentData;
    _Bool _manualDisconnect;
    _Bool _hasUserinfoACK;
    _Bool _useHTTPConnect;
    _Bool _hasReportAPMData;
    _Bool _isAnchor;
    _Bool _alwaysLongConnect;
    NSString *_currentLiveID;
    UserInfo *_currentUser;
    id <MPILiveMQTTServiceDelegate> _delegate;
    MPIMQTTSessionManager *_manager;
    NSString *_userTopic;
    NSString *_messageTopic;
    NSString *_versionTopic;
    NSString *_allTopic;
    double _lastRefreshTime;
    NSMutableArray *_cachedDatas;
    NSMutableArray *_increaseData;
    NSThread *_mqttThread;
    Reachability *_netReachability;
    long long _lastNetworkStatus;
    NSTimer *_updateIPTimer;
    long long _updateIPInterval;
    NSTimer *_idleEvictionTimer;
    long long _idleEvictionInterval;
    NSString *_ipAddr;
    long long _ipPort;
    long long _protocol;
    NSMutableArray *_ipArray;
    NSMutableArray *_apmDataArray;
    long long _mqttKeepAliveInterval;
    NSLock *_connectLock;
    long long _mqttConnectTimeout;
    long long _mqttTimeToWait;
}

+ (id)sharedInstance;
@property(nonatomic) _Bool alwaysLongConnect; // @synthesize alwaysLongConnect=_alwaysLongConnect;
@property(nonatomic) long long mqttTimeToWait; // @synthesize mqttTimeToWait=_mqttTimeToWait;
@property(nonatomic) long long mqttConnectTimeout; // @synthesize mqttConnectTimeout=_mqttConnectTimeout;
@property(retain, nonatomic) NSLock *connectLock; // @synthesize connectLock=_connectLock;
@property(nonatomic) long long mqttKeepAliveInterval; // @synthesize mqttKeepAliveInterval=_mqttKeepAliveInterval;
@property(nonatomic) _Bool isAnchor; // @synthesize isAnchor=_isAnchor;
@property(nonatomic) _Bool hasReportAPMData; // @synthesize hasReportAPMData=_hasReportAPMData;
@property(retain, nonatomic) NSMutableArray *apmDataArray; // @synthesize apmDataArray=_apmDataArray;
@property(retain, nonatomic) NSMutableArray *ipArray; // @synthesize ipArray=_ipArray;
@property(nonatomic) _Bool useHTTPConnect; // @synthesize useHTTPConnect=_useHTTPConnect;
@property(nonatomic) long long protocol; // @synthesize protocol=_protocol;
@property(nonatomic) long long ipPort; // @synthesize ipPort=_ipPort;
@property(copy, nonatomic) NSString *ipAddr; // @synthesize ipAddr=_ipAddr;
@property(nonatomic) long long idleEvictionInterval; // @synthesize idleEvictionInterval=_idleEvictionInterval;
@property(retain, nonatomic) NSTimer *idleEvictionTimer; // @synthesize idleEvictionTimer=_idleEvictionTimer;
@property(nonatomic) long long updateIPInterval; // @synthesize updateIPInterval=_updateIPInterval;
@property(retain, nonatomic) NSTimer *updateIPTimer; // @synthesize updateIPTimer=_updateIPTimer;
@property(nonatomic) long long lastNetworkStatus; // @synthesize lastNetworkStatus=_lastNetworkStatus;
@property(retain, nonatomic) Reachability *netReachability; // @synthesize netReachability=_netReachability;
@property(retain, nonatomic) NSThread *mqttThread; // @synthesize mqttThread=_mqttThread;
@property(nonatomic) _Bool hasUserinfoACK; // @synthesize hasUserinfoACK=_hasUserinfoACK;
@property(nonatomic) _Bool manualDisconnect; // @synthesize manualDisconnect=_manualDisconnect;
@property(retain, nonatomic) NSMutableArray *increaseData; // @synthesize increaseData=_increaseData;
@property(nonatomic) _Bool receivedCurrentData; // @synthesize receivedCurrentData=_receivedCurrentData;
@property(retain, nonatomic) NSMutableArray *cachedDatas; // @synthesize cachedDatas=_cachedDatas;
@property(nonatomic) double lastRefreshTime; // @synthesize lastRefreshTime=_lastRefreshTime;
@property(copy, nonatomic) NSString *allTopic; // @synthesize allTopic=_allTopic;
@property(copy, nonatomic) NSString *versionTopic; // @synthesize versionTopic=_versionTopic;
@property(copy, nonatomic) NSString *messageTopic; // @synthesize messageTopic=_messageTopic;
@property(copy, nonatomic) NSString *userTopic; // @synthesize userTopic=_userTopic;
@property(nonatomic) _Bool needPubUser; // @synthesize needPubUser=_needPubUser;
@property(retain, nonatomic) MPIMQTTSessionManager *manager; // @synthesize manager=_manager;
@property(nonatomic) __weak id <MPILiveMQTTServiceDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, nonatomic) UserInfo *currentUser; // @synthesize currentUser=_currentUser;
@property(copy, nonatomic) NSString *currentLiveID; // @synthesize currentLiveID=_currentLiveID;
- (void).cxx_destruct;
- (void)handleMessage:(id)arg1 onTopic:(id)arg2 retained:(_Bool)arg3;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)handleNetworkStatusChanged;
- (void)reachabilityChanged:(id)arg1;
- (void)stopNotifier;
- (void)startNotifier;
- (void)reportAPMData;
- (void)reportAPMDataWithDic:(id)arg1;
- (void)handleGetIPDic:(id)arg1;
- (void)stopIdle;
- (void)idleEvictionTimerAction:(id)arg1;
- (void)startIdle;
- (void)updateIPTimerAction:(id)arg1;
- (void)parseIP;
- (void)handleData:(id)arg1;
- (void)mqttThread:(id)arg1;
- (void)connectToServerIfNeeded;
- (void)reconnected;
- (void)checkUserinfoACK;
- (void)checkReconnectedWith:(id)arg1;
- (void)publishUser:(id)arg1;
- (void)publishUserInfo;
- (void)createConnectManager;
- (void)destroyConnectManager;
- (void)disconnect;
- (void)commonInit;
- (void)reset;
- (void)unsubscribeAllTopic;
- (void)subscribeMessageForLive:(id)arg1 isAnchor:(_Bool)arg2;
- (void)stopGetIPCycle;
- (void)startGetIPCycle;
- (id)useHttpConnectSignal;
- (id)init;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

