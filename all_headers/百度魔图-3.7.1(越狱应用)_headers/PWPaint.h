//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <UIKit/UIView.h>

@class GLKTextureInfo, GLProgram, GPUImageFramebuffer, UIImage;

@interface PWPaint : UIView
{
    GPUImageFramebuffer *inputFramebuffer;
    GPUImageFramebuffer *outputFramebuffer;
    unsigned int displayRenderbuffer;
    unsigned int displayFramebuffer;
    int displayPositionAttribute;
    int displayTextureCoordinateAttribute;
    int displayInputTextureUniform;
    float imageVertices[8];
    float backgroundColorRed;
    float backgroundColorGreen;
    float backgroundColorBlue;
    float backgroundColorAlpha;
    GLKTextureInfo *texture;
    unsigned int positionAttribute;
    unsigned int inputTextureColorAttribute;
    unsigned int inputTextureCoordinateAttribute;
    unsigned int inputTextureUniform;
    unsigned int orthographicMatrixUniform;
    unsigned int transformMatrixUniform;
    int particleIndex;
    int vertexIndex;
    unsigned int vboId;
    struct {
        CDStruct_90ecaa05 _field1;
        CDStruct_90ecaa05 _field2;
        CDStruct_90ecaa05 _field3;
        CDStruct_90ecaa05 _field4;
    } *quads;
    unsigned short *indices;
    int pointCount;
    _Bool isLoadBackground;
    struct CGContext *contextRef;
    char *imageData;
    _Bool _active;
    float _brushSize;
    float _angle;
    GLProgram *_program;
    GLProgram *_paintProgram;
    UIImage *_backgroundImage;
    struct CGSize _sizeInPixels;
}

+ (Class)layerClass;
@property(nonatomic) float angle; // @synthesize angle=_angle;
@property(nonatomic) float brushSize; // @synthesize brushSize=_brushSize;
@property(retain, nonatomic) UIImage *backgroundImage; // @synthesize backgroundImage=_backgroundImage;
@property(retain, nonatomic) GLProgram *paintProgram; // @synthesize paintProgram=_paintProgram;
@property(nonatomic) _Bool active; // @synthesize active=_active;
@property(retain, nonatomic) GLProgram *program; // @synthesize program=_program;
- (void).cxx_destruct;
- (struct CGContext *)createARGBBitmapContextFromImage:(struct CGImage *)arg1;
- (union _GLKVector4)getPixelColorAtPoint:(struct CGPoint)arg1;
- (void)setupImageData:(id)arg1;
- (id)captureCurrentView;
@property(readonly, nonatomic) struct CGSize sizeInPixels; // @synthesize sizeInPixels=_sizeInPixels;
- (struct CGSize)maximumOutputSize;
- (void)presentFramebuffer;
- (void)setDisplayFramebuffer;
- (void)destroyDisplayFramebuffer;
- (void)createDisplayFramebuffer;
- (void)dealloc;
- (void)reset;
- (void)touchCanceledAtPoint:(struct CGPoint)arg1;
- (void)touchEndedAtPoint:(struct CGPoint)arg1;
- (void)touchMovedAtPoint:(struct CGPoint)arg1;
- (void)touchBeganAtPoint:(struct CGPoint)arg1;
- (struct CGSize)sizeOfFBO;
- (void)updateDataWithPoint:(struct CGPoint)arg1;
- (void)display;
- (void)drawBackground;
- (void)draw;
- (void)setInputFrameBuffer:(id)arg1;
- (void)setBackgroundImage:(id)arg1 penImage:(id)arg2;
- (void)setupArrays;
- (void)setupShaders;
- (void)commonInit;
- (void)initLayer;
- (id)initWithFrame:(struct CGRect)arg1;

@end

