//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class NSLock, OMGAnnularList, OMGFPSMonitor;
@protocol OS_dispatch_source;

@interface OMGSmoothMonitor : NSObject
{
    _Bool _isMonitoring;
    double _lowFpsThreshold;
    unsigned long long _lowFpsCountThreshold;
    unsigned long long _count;
    NSLock *_lock;
    OMGAnnularList *_fpsList;
    OMGFPSMonitor *_fpsMonitor;
    NSObject<OS_dispatch_source> *_monitorTimer;
    NSObject<OS_dispatch_source> *_fpsUploadTimer;
}

+ (id)sharedInstance;
@property(retain, nonatomic) NSObject<OS_dispatch_source> *fpsUploadTimer; // @synthesize fpsUploadTimer=_fpsUploadTimer;
@property(retain, nonatomic) NSObject<OS_dispatch_source> *monitorTimer; // @synthesize monitorTimer=_monitorTimer;
@property(retain, nonatomic) OMGFPSMonitor *fpsMonitor; // @synthesize fpsMonitor=_fpsMonitor;
@property(retain, nonatomic) OMGAnnularList *fpsList; // @synthesize fpsList=_fpsList;
@property(retain, nonatomic) NSLock *lock; // @synthesize lock=_lock;
@property(nonatomic) _Bool isMonitoring; // @synthesize isMonitoring=_isMonitoring;
@property(nonatomic) unsigned long long count; // @synthesize count=_count;
@property(nonatomic) unsigned long long lowFpsCountThreshold; // @synthesize lowFpsCountThreshold=_lowFpsCountThreshold;
@property(nonatomic) double lowFpsThreshold; // @synthesize lowFpsThreshold=_lowFpsThreshold;
- (void).cxx_destruct;
- (void)_reportLowFpsLastMinute:(id)arg1;
- (long long)_getLowFpssCountFromFpss:(id)arg1;
- (void)_reportIfLowFpsExceedThresholdInLastMinute;
- (double)_getFpsWithActiveStatus:(long long)arg1 andFps:(double)arg2;
- (double)_getNonActiveFps;
- (id)_monitorQueue;
- (void)_createTimer;
- (void)_stop;
- (void)_start;
- (void)applicationWillEnterForeground;
- (void)applicationDidEnterBackground;
- (void)dealloc;
- (id)listFpsOfLastSeconds:(int)arg1;
- (id)listFpsOfLastMinute;
- (void)stop;
- (void)start;
- (id)init;

@end

