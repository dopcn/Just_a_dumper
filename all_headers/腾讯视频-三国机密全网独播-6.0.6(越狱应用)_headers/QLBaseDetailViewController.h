//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "QLFeedSupportViewController.h"

#import "KKMediaPlayerActionDelegate-Protocol.h"
#import "KKMediaPlayerControlProtocol-Protocol.h"
#import "KKMediaPlayerDataSource-Protocol.h"
#import "KKMediaPlayerMutilCameraDelegate-Protocol.h"
#import "KKMediaPlayerRemoteDelegate-Protocol.h"
#import "KKMediaPlayerTopViewControlProtocol-Protocol.h"
#import "KKMediaPlayerTryWatchDelegate-Protocol.h"
#import "P_QLDragToRefresh-Protocol.h"
#import "QLDetailPageNaviBarV1Delegate-Protocol.h"
#import "QLDetailPostImgViewDelegate-Protocol.h"
#import "QLImageLoadDelegate-Protocol.h"
#import "QLMBProgressHUDDelegate-Protocol.h"
#import "QLModelsUserInfoDataSource-Protocol.h"
#import "QLShareDataSource-Protocol.h"

@class KKMediaRootViewController, NSArray, NSData, NSDictionary, NSString, QLDetailPageNaviBarV1, QLJCEMiniProgramInfo, QLLiveV3TitleUpdateOperation, QLMBProgressHUD, QLMovieItem, QLShareMomentItem, QLSmallPlayerHeaderView, QLSprayContext, UIButton, UIImage, UILabel, UIViewController;
@protocol QlChangeSmallScreenDelegate;

@interface QLBaseDetailViewController : QLFeedSupportViewController <QLImageLoadDelegate, QLDetailPostImgViewDelegate, QLMBProgressHUDDelegate, KKMediaPlayerActionDelegate, KKMediaPlayerTopViewControlProtocol, KKMediaPlayerControlProtocol, KKMediaPlayerDataSource, KKMediaPlayerTryWatchDelegate, KKMediaPlayerRemoteDelegate, KKMediaPlayerMutilCameraDelegate, P_QLDragToRefresh, QLShareDataSource, QLDetailPageNaviBarV1Delegate, QLModelsUserInfoDataSource>
{
    QLMBProgressHUD *HUD;
    _Bool _isMannlyUpdated;
    QLDetailPageNaviBarV1 *_myNaviBar;
    QLSmallPlayerHeaderView *_headerView;
    long long _curCmdPage;
    _Bool _adPausedByPush;
    _Bool _didClickJumpAdsBtn;
    UIButton *_btnComments;
    UILabel *_btCommentsLbl;
    QLLiveV3TitleUpdateOperation *_titleUpdateOperation;
    _Bool isFolderMediaScreen;
    double _prevCallOffset;
    _Bool _playActionFired;
    long long _rootPlayerPlayStateWhenLeaveDetailPage;
    _Bool _shouldCheckPlayerStatusWhenAppear;
    _Bool _isShowStoreViewCtl;
    _Bool _popupByUser;
    _Bool _enteredFromClickStartMoment;
    _Bool _isFullScreenMode;
    _Bool _bFromPaySeriesH5Page;
    _Bool _isWaitingForVideoBillState;
    _Bool _shouldAutoPlay;
    _Bool _bForcePlay;
    _Bool _modelLoaded;
    _Bool _isShowPhoto;
    _Bool _headerPosterPlayClicked;
    _Bool _oldDetailView;
    _Bool _didAppeared;
    QLSprayContext *_sprayContext;
    QLMovieItem *_movieItem;
    id _commentModel;
    NSString *_commentText;
    KKMediaRootViewController *_rootPlayer;
    long long _playerViewStyle;
    long long _lastPlayIndex;
    id <QlChangeSmallScreenDelegate> _changeSmallScreenDelegate;
}

@property(nonatomic) _Bool didAppeared; // @synthesize didAppeared=_didAppeared;
@property __weak id <QlChangeSmallScreenDelegate> changeSmallScreenDelegate; // @synthesize changeSmallScreenDelegate=_changeSmallScreenDelegate;
@property(nonatomic) _Bool oldDetailView; // @synthesize oldDetailView=_oldDetailView;
@property(nonatomic) _Bool headerPosterPlayClicked; // @synthesize headerPosterPlayClicked=_headerPosterPlayClicked;
@property(nonatomic) _Bool isShowPhoto; // @synthesize isShowPhoto=_isShowPhoto;
@property _Bool modelLoaded; // @synthesize modelLoaded=_modelLoaded;
@property _Bool bForcePlay; // @synthesize bForcePlay=_bForcePlay;
@property _Bool shouldAutoPlay; // @synthesize shouldAutoPlay=_shouldAutoPlay;
@property long long lastPlayIndex; // @synthesize lastPlayIndex=_lastPlayIndex;
@property _Bool isWaitingForVideoBillState; // @synthesize isWaitingForVideoBillState=_isWaitingForVideoBillState;
@property(nonatomic) _Bool bFromPaySeriesH5Page; // @synthesize bFromPaySeriesH5Page=_bFromPaySeriesH5Page;
@property(nonatomic) long long playerViewStyle; // @synthesize playerViewStyle=_playerViewStyle;
@property(nonatomic) _Bool isFullScreenMode; // @synthesize isFullScreenMode=_isFullScreenMode;
@property(retain, nonatomic) KKMediaRootViewController *rootPlayer; // @synthesize rootPlayer=_rootPlayer;
@property(nonatomic) _Bool enteredFromClickStartMoment; // @synthesize enteredFromClickStartMoment=_enteredFromClickStartMoment;
@property(copy, nonatomic) NSString *commentText; // @synthesize commentText=_commentText;
@property(readonly) __weak id commentModel; // @synthesize commentModel=_commentModel;
@property(retain) QLMovieItem *movieItem; // @synthesize movieItem=_movieItem;
@property _Bool popupByUser; // @synthesize popupByUser=_popupByUser;
@property(retain, nonatomic) QLSprayContext *sprayContext; // @synthesize sprayContext=_sprayContext;
- (void).cxx_destruct;
- (void)resumePlayerToStateWhenEnterIntoDetailPageIfNecessary;
- (_Bool)checkPagePlayerStatus;
- (_Bool)ifNeedFeedFlowModel;
- (void)resumeRemoteRenderView;
- (void)handleBecomeVipButtonHidden:(_Bool)arg1;
- (void)configtryWatchNaviBtnHidden:(_Bool)arg1 shouldReport:(_Bool)arg2;
- (void)forceRereshPayBillForPayVideo;
- (void)iapViewActionWithButton:(id)arg1;
- (id)getActorInfo:(id)arg1;
- (long long)getOnlineNumber;
- (_Bool)isShowPresentEntry;
- (id)pid;
- (void)action:(id)arg1 didPressMomentButton:(id)arg2;
- (unsigned long long)actionShouldSupportActionTypeMask:(id)arg1;
@property(readonly, nonatomic) QLShareMomentItem *shareMomentItem;
@property(readonly, nonatomic) NSDictionary *shareReportInfo;
@property(readonly, nonatomic) QLMovieItem *shareVideoInfo;
@property(readonly, nonatomic) unsigned long long sharePlatformMask;
@property(readonly, nonatomic) NSString *shareFromPage;
@property(readonly, nonatomic) unsigned long long shareDataType;
@property(readonly, nonatomic) NSString *shareURL;
@property(readonly, nonatomic) UIImage *shareImage;
@property(readonly, nonatomic) NSString *shareImageURL;
@property(readonly, nonatomic) NSString *shareSubTitle;
@property(readonly, nonatomic) NSString *shareTitle;
@property(readonly, nonatomic) NSString *shareID;
- (void)updateCurrentTotal:(long long)arg1 updateIntervel:(long long)arg2;
- (id)titleUpdateOperation;
- (id)canPerformReply;
- (void)scrollViewWillBeginDragging:(id)arg1;
- (_Bool)dataSourceLoadFinished;
- (id)getCurrentLoadingConfig;
- (id)viewForCurrentPoster;
- (id)getCurrentAttentionItem;
- (_Bool)responseDragbackAtScreenPoint:(struct CGPoint)arg1;
- (void)setTopViewHiddenWithScrollOffset:(double)arg1;
- (void)scrollViewDidScroll:(id)arg1;
- (void)makeShouldRespondScrollYes;
- (void)scrollToTop;
- (void)showNavbar:(_Bool)arg1;
- (void)resetFloatCommentLocation:(double)arg1 headFixed:(_Bool)arg2;
- (void)resetHeaderLocation:(_Bool)arg1 animated:(_Bool)arg2;
- (void)unFixHeaderViewLocation:(_Bool)arg1 animate:(_Bool)arg2;
- (void)fixHeaderViewLocation:(_Bool)arg1;
- (id)floatCommentView;
- (_Bool)shouldShowStarTheme;
- (double)heightOfPresentedSubViewCtl;
- (long long)headerViewHeight;
- (_Bool)shouldHeaderViewFixed;
- (long long)headerDragRefreshStyle;
- (_Bool)hasFootterDragRefresh;
- (_Bool)hasHeaderDragRefresh;
- (id)dragRefreshView;
- (long long)footerDragRefreshStyle;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (double)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (void)refreshHeaderNotifyState;
- (void)backClicked:(id)arg1;
- (void)moreCmdsClicked:(id)arg1;
- (void)shareClicked:(id)arg1;
- (void)commentsClicked:(id)arg1;
- (void)requestNewPageSel;
- (long long)qlStausBarStyle;
- (_Bool)navigationBarHidden;
- (struct CGRect)frameOfPageStatusView;
- (void)enterH5PayPage;
- (void)configHeadPosterWhenSwitchVideo;
- (void)updatePaySeriesInfo;
- (void)refreshCurrentBill;
- (void)userAccountAuthorizeForceCheck:(_Bool)arg1;
- (id)currentVideoMainTitle;
- (void)headerPosterPlayClicked:(id)arg1;
- (void)removeHeaderPosterMasksAndReAddBottom;
- (_Bool)shouldAutoPlayVideo;
- (void)hiddenHeadViewWhenAutoPlay;
- (id)myNaviBar;
- (id)headerView;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidUnload;
- (void)didReceiveMemoryWarning;
- (void)detailPageNavibarDidClickVIPBtn:(id)arg1;
- (void)detailPageNavibarDidClickPlayBtn:(id)arg1;
- (void)detailPageNavibarDidClickChangeSmallbtn:(id)arg1;
- (void)detailPageNavibarDidClickAttendBtn:(id)arg1;
- (void)detailPageNavibarDidClickShareBtn:(id)arg1;
- (void)detailPageNavibarDidClickDLNABtn:(id)arg1;
- (void)detailPageNavibarDidClickBackBtn:(id)arg1;
- (_Bool)hasUnfolderButton;
- (_Bool)showedIapView;
- (_Bool)headPosterDismiss;
- (_Bool)headerViewIsFixed;
- (void)notificationLoginChange:(id)arg1;
- (_Bool)shouldEditComment:(id)arg1;
- (void)loginOKForComment;
- (void)resetBottomCommentView;
- (void)refreshTipsLbl:(int)arg1;
- (void)requestCommends:(long long)arg1;
- (void)startCmdRequest;
- (void)resetViewFrame;
- (void)setCommentButtonHidden:(_Bool)arg1;
- (void)prepareForReviews;
- (void)playIndexChanged:(id)arg1;
- (id)detailMovieItem;
- (void)playerWillAutoJumpAD;
- (void)jumpAdRefreshed:(id)arg1;
- (void)updatePayBill;
- (id)getTicketInfo;
- (void)iapViewButtonClick:(id)arg1;
- (void)setNavigationVipButtonHidden:(_Bool)arg1;
- (void)kkPlayer:(id)arg1 tryWatchState:(long long)arg2;
- (void)upateBottomPlayBtnInDLNAStatusWithkkPlayer:(id)arg1;
- (void)kkPlayer:(id)arg1 didClickButton:(unsigned long long)arg2;
- (void)forceResetPlayer:(long long)arg1 withHistory:(_Bool)arg2;
- (void)resetPlayerIgnore3G:(long long)arg1 withHistory:(_Bool)arg2;
- (void)resetPlayer:(long long)arg1 withHistory:(_Bool)arg2;
- (void)resetPlayerWithSubIndex:(long long)arg1;
- (_Bool)hasPrewatchWithIndex:(long long)arg1;
- (_Bool)payCanbePlayedWithIndex:(int)arg1;
- (void)clickJumpAdsAndEnterHollywood;
- (void)updateHeadViewWhenPlayAd;
- (void)setVideoID:(id)arg1;
- (void)showSmallPlayer;
- (id)titleOfOperationalActivity;
- (id)titleOfVipActivity;
- (_Bool)canbePlayOfVideo;
- (id)titleForPlayerRightTopBecomeVIPBtn;
- (_Bool)isFreeVideo;
- (_Bool)hasTitleForPlayerRightTopBecomeVIPBtn;
- (void)willRotateToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (unsigned long long)supportedInterfaceOrientations;
- (_Bool)shouldAutorotate;
- (void)requestModelDidFinishLoad:(id)arg1;
- (id)userInfoForModelWithIdentifier:(id)arg1;
- (void)momentDidUpdateInfoNotification:(id)arg1;
- (void)payStatusChangeRefreshDetail;
- (void)enterForground:(id)arg1;
- (void)loginStateChange:(id)arg1;
- (void)doThingsWhenLoginStateChanged;
- (_Bool)shouldPlayAutomatically;
- (id)currentDataItem;
- (id)getCurrentVideoID;
- (void)dragReload:(_Bool)arg1;
- (id)dicInfoWithUserIsLogin:(_Bool)arg1 videoPayType:(long long)arg2 needCoupon:(_Bool)arg3 isVip:(_Bool)arg4 displayStyle:(int)arg5;
- (void)resetHeaderPlayerView;
- (_Bool)playerCanbePlayed;
- (_Bool)payCanbePlayed;
- (_Bool)hasHeaderDefaultPosterMask;
- (_Bool)isPotraitInterface;
- (_Bool)isJCEStyleUI;
- (id)getPlayingMovieItem;
- (void)forceShowPlayerHeaderImg;
- (void)removeHeadThumbnailDLNAGuide;
- (void)addMiniPlayerView;
- (_Bool)needReportKeyParamWhenPageExp;
- (id)reportMovieItem;
- (_Bool)hasPrePlayHeaderThumbClickPlay;
- (id)imgUrlForCurrentPlayingVideo;
- (id)headerDefaultImageURL;
- (void)detailPosterView:(id)arg1 didLoadImage:(id)arg2;
- (void)headerPosterPlayClickAction:(id)arg1;
- (void)delayResetCommentView:(id)arg1;
- (struct CGRect)rectForSmallPlayView;
- (id)unicomBtn;
- (void)configBottomView;
- (void)adjustTheFloatingSubView;
- (double)getBottomOfThePlayer;
- (void)removeHeaderPosterMasks;
- (void)refreshMainTitle;
- (_Bool)pageLoadFinished;
- (_Bool)isRemoteRenderingDLNAOrAirPlay;
- (void)kkPlayer:(id)arg1 didPackup:(_Bool)arg2;
- (void)viewDidLoad;
- (void)initKKPlayer;
- (void)refreshOrigenValue;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (struct CGRect)rectForheaderView;
- (id)createKKPlayer;
- (void)setPlayBtnHidden:(_Bool)arg1;
- (void)playerToggleToFullScreen:(id)arg1;
- (void)refreshHeaderUIWithPlayFired;
- (void)storeProductViewControllerDisappear;
- (void)storeProductViewControllerAppear;
- (void)doThingsWhenBecomeActive;
- (void)doThingsWhenResignActive;
- (void)registerNotifications;
- (void)playLiveProgram:(id)arg1 url:(id)arg2 shareInfo:(id)arg3;
- (_Bool)simplePlayCID:(id)arg1 title:(id)arg2 shareInfo:(id)arg3;
- (_Bool)simplePlayVID:(id)arg1 title:(id)arg2 shareInfo:(id)arg3;
- (_Bool)simplePlayVideoItemdata:(id)arg1;
- (void)loadMovieImageForPlayer:(id)arg1;
- (void)popUp:(_Bool)arg1;
- (void)doSomethingBeforePopup;
- (void)resetMediaPlayerDelegate;
- (void)resetPlayerDelegates;
- (id)bottomViewOfSmallCtlView;
- (id)btnHeadPlay;
- (id)imgHeadThumbnail;
- (void)dealloc;
- (void)handleMarkedFeedbackBoardIfNeededWithType:(unsigned long long)arg1;
- (void)insertNewPoster:(id)arg1 afterCell:(id)arg2;
- (id)sprayContextDataItems;
- (long long)mainVideoPlayBackState;
- (void)tryPlayActionNotify;
- (id)sparyFloatPlayerView;
- (void)reachabilityChanged;
- (_Bool)currentPlayHasCurrentPlay;
- (_Bool)isCurrentPreviewCharater;
- (void)resetSprayContextCharacter;
- (void)unfoldPlayerIfNeeded;
- (void)setSprayContextPreviewCharacter:(_Bool)arg1;
- (unsigned long long)getSprayContextType;
- (void)requestMoreDataIfNeeded;
- (void)cellDidUpdateUIWithObject:(id)arg1;
- (void)cellDidTapEraseButton:(id)arg1;
- (id)sprayContextDataModel;
- (_Bool)sc_isFeedVideoStartPlay;
- (void)sc_handlePageCurrentPlayEnv;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly, nonatomic) _Bool needShare;
@property(readonly, nonatomic) _Bool notUpdateShareItem;
@property(readonly, nonatomic) NSString *shareActionUrl;
@property(readonly, nonatomic) NSString *shareCircleDataKey;
@property(readonly, nonatomic) NSString *shareContent;
@property(readonly, nonatomic) NSString *shareContentTail;
@property(readonly, nonatomic) UIViewController *shareController;
@property(readonly, nonatomic) NSString *shareCopyContent;
@property(readonly, nonatomic) NSString *shareDataKey;
@property(readonly, nonatomic) NSDictionary *shareExtendInfo;
@property(readonly, nonatomic) NSData *shareGifData;
@property(readonly, nonatomic) QLJCEMiniProgramInfo *shareMiniProgramInfo;
@property(readonly, nonatomic) NSData *shareOriImgData;
@property(readonly, nonatomic) NSArray *sharePictureList;
@property(readonly, nonatomic) NSString *shareSingleTitle;
@property(readonly, nonatomic) unsigned long long shareStyle;
@property(readonly) Class superclass;

@end

