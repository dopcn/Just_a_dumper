//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class NSArray, NSDate, NSDictionary, NSString, QQPimAppConfigInfo, QQPimUserInfo, QQPimWeChatUserProfile;

@interface QQPimUtil : NSObject
{
    _Bool _shouldExchangeGuide;
    _Bool _openChangeRemindV2;
    _Bool _hasBackupPhotos;
    _Bool _settingViewBackFromPhotoSync;
    _Bool _isBindPhoneSucceedBack;
    _Bool _isPhoneSecurityChanged;
    _Bool _isUsingNewFeedback;
    _Bool _isOpenAPPSync;
    _Bool _isOpenWiFiSDK;
    _Bool _isComeFromQQ;
    _Bool _isLogining;
    _Bool _isChineseLanguage;
    _Bool _isCloudTipsClose;
    _Bool _enableSuspensionViewForNote;
    _Bool _isTestFlightConfigOpen;
    _Bool _useRNFeedBack;
    _Bool _webViewCacheEnable;
    _Bool _wkWebViewEnable;
    _Bool _showNewDeviceRecommend;
    _Bool _showFunTime;
    _Bool _refreshingLoginKey;
    int _finishedFromType;
    int _webViewCachePersistDay;
    int _numberOfCommonAPPs;
    int _refreshLoginKeyCount;
    int _forXiangCeFlag;
    long long _localTotalContactsCount;
    NSString *_testImsi;
    long long _systemLangCode;
    unsigned long long _enterAppFromType;
    long long _savedVcardCount;
    QQPimWeChatUserProfile *_weChatUserInfo;
    NSDictionary *_accountInfo;
    QQPimUserInfo *_userInfo;
    QQPimAppConfigInfo *_appConfigInfo;
    NSString *_bindPhoneSucceedBackNumer;
    unsigned long long _activityShareType;
    NSArray *_webViewCacheHostList;
    NSString *_quickLoginSchema;
    NSArray *_allCloudPhotoModels;
    NSArray *_allLocalPhotoModels;
    NSString *_newDeviceRecommendTitle;
    NSString *_gameRecommendTitle;
    NSString *_funTimeTitle;
    NSString *_funTimeJumpURL;
    NSString *_oldLoginKey;
    NSString *_loginRefreshKey;
}

+ (_Bool)isGuidHitByGrayStr:(id)arg1;
+ (void)setupQQPimAccountInfo;
+ (id)turnToHttps:(id)arg1;
+ (void)reportEventRate:(unsigned long long)arg1 action:(unsigned long long)arg2;
+ (void)reportAppSyncType:(unsigned long long)arg1 action:(unsigned long long)arg2 scheme:(id)arg3;
+ (void)reportAppSyncType:(unsigned long long)arg1 action:(unsigned long long)arg2 appModel:(id)arg3;
+ (void)reportAppSyncType:(unsigned long long)arg1 action:(unsigned long long)arg2 appInfo:(id)arg3;
+ (void)reportNormalErrorType:(id)arg1 errorCode:(int)arg2;
+ (void)reportLoginType:(id)arg1 errorCode:(int)arg2;
+ (void)actionCountReport:(id)arg1 count:(int)arg2;
+ (void)multiPhoneReport:(unsigned long long)arg1 count:(int)arg2;
+ (void)splashReport:(id)arg1 action:(unsigned long long)arg2;
+ (id)dataToHex:(id)arg1;
+ (void)openFAQView:(id)arg1;
+ (void)pushToInvalidContactViewController:(id)arg1;
+ (void)openFeedBackView:(id)arg1;
+ (void)restrictUITextField:(id)arg1 byMaxLen:(unsigned long long)arg2 removeHeadSpaces:(_Bool)arg3;
+ (void)moveViewFrame:(id)arg1 xOffset:(double)arg2 yOffset:(double)arg3;
+ (void)LocalizedCancelButtonFromSearchBar:(id)arg1;
+ (long long)getKeyboardTableHeight;
+ (_Bool)addSyncLogForUIN:(id)arg1 state:(int)arg2 statics:(id)arg3 reason:(long long)arg4;
+ (int)logTypeConvertFromSyncType:(long long)arg1 syncMode:(long long)arg2 isSuccess:(_Bool)arg3;
+ (id)initWithXXXXMobileString:(id)arg1;
+ (_Bool)isHasChineseWord:(id)arg1;
+ (_Bool)isHasSpace:(id)arg1;
+ (_Bool)isPureFloat:(id)arg1;
+ (_Bool)isPureInt:(id)arg1;
+ (void)gotoRateApp;
+ (_Bool)installOverDays:(long long)arg1;
+ (void)update;
+ (void)copyFilesToSharePath;
+ (id)sharedInstance;
@property(nonatomic) int forXiangCeFlag; // @synthesize forXiangCeFlag=_forXiangCeFlag;
@property(retain, nonatomic) NSString *loginRefreshKey; // @synthesize loginRefreshKey=_loginRefreshKey;
@property(retain, nonatomic) NSString *oldLoginKey; // @synthesize oldLoginKey=_oldLoginKey;
@property(nonatomic) int refreshLoginKeyCount; // @synthesize refreshLoginKeyCount=_refreshLoginKeyCount;
@property(nonatomic) _Bool refreshingLoginKey; // @synthesize refreshingLoginKey=_refreshingLoginKey;
@property(retain, nonatomic) NSString *funTimeJumpURL; // @synthesize funTimeJumpURL=_funTimeJumpURL;
@property(retain, nonatomic) NSString *funTimeTitle; // @synthesize funTimeTitle=_funTimeTitle;
@property(retain, nonatomic) NSString *gameRecommendTitle; // @synthesize gameRecommendTitle=_gameRecommendTitle;
@property(retain, nonatomic) NSString *newDeviceRecommendTitle; // @synthesize newDeviceRecommendTitle=_newDeviceRecommendTitle;
@property(nonatomic) _Bool showFunTime; // @synthesize showFunTime=_showFunTime;
@property(nonatomic) _Bool showNewDeviceRecommend; // @synthesize showNewDeviceRecommend=_showNewDeviceRecommend;
@property(nonatomic) int numberOfCommonAPPs; // @synthesize numberOfCommonAPPs=_numberOfCommonAPPs;
@property(retain, nonatomic) NSArray *allLocalPhotoModels; // @synthesize allLocalPhotoModels=_allLocalPhotoModels;
@property(retain, nonatomic) NSArray *allCloudPhotoModels; // @synthesize allCloudPhotoModels=_allCloudPhotoModels;
@property(retain, nonatomic) NSString *quickLoginSchema; // @synthesize quickLoginSchema=_quickLoginSchema;
@property(nonatomic) _Bool wkWebViewEnable; // @synthesize wkWebViewEnable=_wkWebViewEnable;
@property(retain, nonatomic) NSArray *webViewCacheHostList; // @synthesize webViewCacheHostList=_webViewCacheHostList;
@property(nonatomic) int webViewCachePersistDay; // @synthesize webViewCachePersistDay=_webViewCachePersistDay;
@property(nonatomic) _Bool webViewCacheEnable; // @synthesize webViewCacheEnable=_webViewCacheEnable;
@property(nonatomic) _Bool useRNFeedBack; // @synthesize useRNFeedBack=_useRNFeedBack;
@property(nonatomic) _Bool isTestFlightConfigOpen; // @synthesize isTestFlightConfigOpen=_isTestFlightConfigOpen;
@property(nonatomic) _Bool enableSuspensionViewForNote; // @synthesize enableSuspensionViewForNote=_enableSuspensionViewForNote;
@property(nonatomic) _Bool isCloudTipsClose; // @synthesize isCloudTipsClose=_isCloudTipsClose;
@property(nonatomic) unsigned long long activityShareType; // @synthesize activityShareType=_activityShareType;
@property(nonatomic) _Bool isChineseLanguage; // @synthesize isChineseLanguage=_isChineseLanguage;
@property(nonatomic) _Bool isLogining; // @synthesize isLogining=_isLogining;
@property(nonatomic) _Bool isComeFromQQ; // @synthesize isComeFromQQ=_isComeFromQQ;
@property(nonatomic) _Bool isOpenWiFiSDK; // @synthesize isOpenWiFiSDK=_isOpenWiFiSDK;
@property(nonatomic) _Bool isOpenAPPSync; // @synthesize isOpenAPPSync=_isOpenAPPSync;
@property(nonatomic) _Bool isUsingNewFeedback; // @synthesize isUsingNewFeedback=_isUsingNewFeedback;
@property(nonatomic) _Bool isPhoneSecurityChanged; // @synthesize isPhoneSecurityChanged=_isPhoneSecurityChanged;
@property(retain, nonatomic) NSString *bindPhoneSucceedBackNumer; // @synthesize bindPhoneSucceedBackNumer=_bindPhoneSucceedBackNumer;
@property(nonatomic) _Bool isBindPhoneSucceedBack; // @synthesize isBindPhoneSucceedBack=_isBindPhoneSucceedBack;
@property(nonatomic) _Bool settingViewBackFromPhotoSync; // @synthesize settingViewBackFromPhotoSync=_settingViewBackFromPhotoSync;
@property(nonatomic) _Bool hasBackupPhotos; // @synthesize hasBackupPhotos=_hasBackupPhotos;
@property(retain, nonatomic) QQPimAppConfigInfo *appConfigInfo; // @synthesize appConfigInfo=_appConfigInfo;
@property(retain, nonatomic) QQPimUserInfo *userInfo; // @synthesize userInfo=_userInfo;
@property(retain, nonatomic) NSDictionary *accountInfo; // @synthesize accountInfo=_accountInfo;
@property(retain, nonatomic) QQPimWeChatUserProfile *weChatUserInfo; // @synthesize weChatUserInfo=_weChatUserInfo;
@property(nonatomic) int finishedFromType; // @synthesize finishedFromType=_finishedFromType;
@property(nonatomic) long long savedVcardCount; // @synthesize savedVcardCount=_savedVcardCount;
@property(nonatomic) unsigned long long enterAppFromType; // @synthesize enterAppFromType=_enterAppFromType;
@property(nonatomic) long long systemLangCode; // @synthesize systemLangCode=_systemLangCode;
@property(retain, nonatomic) NSString *testImsi; // @synthesize testImsi=_testImsi;
@property(nonatomic) _Bool openChangeRemindV2; // @synthesize openChangeRemindV2=_openChangeRemindV2;
@property(nonatomic) _Bool shouldExchangeGuide; // @synthesize shouldExchangeGuide=_shouldExchangeGuide;
@property(readonly, nonatomic) long long localTotalContactsCount; // @synthesize localTotalContactsCount=_localTotalContactsCount;
- (void).cxx_destruct;
- (void)configSharkDataRP;
- (_Bool)isOpenableByScheme:(id)arg1;
- (unsigned long long)getActionViewID:(id)arg1;
- (void)updateSkeyAndSetCookie;
- (void)clearPengYouCookie;
- (void)setSkeyCookie:(id)arg1;
- (void)updateAccountSecurityState:(CDUnknownBlockType)arg1;
- (void)clearConfigureImageIfNeeded;
- (void)checkDirectionAndCreateIfNeed:(id)arg1;
- (id)configureImageFileDirection;
- (long long)photoSyncSimilarThreshold;
- (double)usedMemory;
- (void)websiteConfigUpdateNotification:(id)arg1;
- (void)handleWebsiteResourceUpdateWithCompleteHandler:(CDUnknownBlockType)arg1;
- (id)websiteResourcePath;
- (void)setupWebsiteResourceFromBundle;
- (void)_makeSharkCloudUpdateCustomFileWithSourceFilePath:(id)arg1 outputPath:(id)arg2;
- (void)_makeWebsiteResourceFile;
- (void)handleConfigUpdateWithRecords:(id)arg1;
- (void)loginNeedPimPassword:(id)arg1;
- (void)loginFailed:(id)arg1;
- (void)loginSuccess:(id)arg1;
@property(readonly, nonatomic) NSString *idfa;
- (id)xiangCeScheme;
- (void)loadLocalPhotos;
- (void)loadCloudPhotos;
- (_Bool)isForXiangCeApp;
- (id)exChangeTipsFilename;
- (id)iCloudTipsFilename;
- (void)checkiCloudTipsHtmlPath;
- (id)getiCloudTipsHtmlPath;
- (id)sharedAppConfigInfoFilePath;
- (id)appConfigInfoFilePath;
- (void)saveAppConfigInfoToDisk;
- (void)readAppConfigInfoFromDisk;
- (id)sharedUserInfoFilePathForAccount:(id)arg1;
- (id)userInfoFilePathForAccount:(id)arg1;
- (_Bool)readWeChatLoginInfoFromDisk;
- (void)saveWeChatLoginInfoToDisk;
- (_Bool)readLoginInfoFromDisk;
- (void)saveLoginInfoToDisk;
@property(readonly, nonatomic) _Bool showGameRecommendForInit;
@property(readonly, nonatomic) _Bool showGameRecommend;
@property(nonatomic) int daysNotSync;
- (void)setAppRate_Action:(int)arg1;
@property(nonatomic) int appRateAction;
- (void)setAppRate_RateVersion:(long long)arg1;
@property(nonatomic) long long appRateVersion;
- (void)setAppRate_RateTime:(id)arg1;
@property(copy, nonatomic) NSDate *appRateTime;
@property(copy, nonatomic) NSDate *lastDateGoIntoHome;
@property(nonatomic) long long lastCountOfDuplicateContacts;
@property(copy, nonatomic) NSDate *lastRemindDateForChangeAndDuplicateContacts;
@property(nonatomic) _Bool duplicateContactsRemindOn;
@property(nonatomic) _Bool regularRemindOn;
@property(nonatomic) long long regularRemindType;
@property(nonatomic) _Bool wifiSDKSwitch;
@property(nonatomic) _Bool openChangeRemind;
@property(nonatomic) _Bool firstShowBatchRestore;
@property(nonatomic) long long initserverDeleteCount;
@property(nonatomic) _Bool hasUserEverLogin;
@property(nonatomic) float syncguideversion;
@property(nonatomic) float syncversion;
@property(nonatomic) _Bool soundEnable;
@property(copy, nonatomic) NSString *softlockPassword;
- (void)weChatLogout;
- (void)weChatLogin:(id)arg1;
- (id)weChatOpenID;
- (void)logout;
- (void)loginPimEngineWithAccount:(id)arg1 password:(id)arg2 verifyCode:(id)arg3 pimPassword:(id)arg4 isMobileAccount:(_Bool)arg5 withAreaCode:(id)arg6;
- (void)refreshLoginKey:(CDUnknownBlockType)arg1;
- (_Bool)canRefreshLoginKey;
- (_Bool)isQQLoginAcount;
- (void)checkOKLoginState;
- (int)accountSecurityLevel;
- (void)setAccountSecurityLevel:(int)arg1;
- (_Bool)qqLoginWithAccount:(id)arg1;
- (_Bool)weakLogin;
- (_Bool)shouldUsingNewFeedback;
- (_Bool)isReadyShowRateAlert:(int)arg1;
@property(nonatomic) _Bool firstShowOCR;
@property(nonatomic) _Bool firstShowBirthday;
@property(nonatomic) long long autoBackupShowCount;
@property(nonatomic) long long autoBackupCount;
@property(nonatomic) unsigned long long autoBackupType;
- (void)setShouldInitGuide:(_Bool)arg1;
- (_Bool)shouldInitGuideOld;
- (_Bool)shouldInitGuide;
@property(nonatomic) _Bool isClickGoAppStore;
@property(copy, nonatomic) NSDate *lastClickNextTimeDate;
@property(copy, nonatomic) NSDate *lastCloudLoginDate;
@property(copy, nonatomic) NSDate *lastSyncDate;
@property(copy, nonatomic) NSDate *firstSyncDate;
@property(copy, nonatomic) NSDate *locationDisplayEndDate;
@property(readonly, copy, nonatomic) NSString *mobileNumber;
@property(readonly, copy, nonatomic) NSString *areaCode;
@property(readonly, nonatomic) long long accountType;
@property(readonly, nonatomic) _Bool isMobileAccount;
@property(readonly, copy, nonatomic) NSString *account;
@property(readonly, nonatomic) _Bool canWeakLogin;
- (void)dealloc;
- (id)init;

@end

