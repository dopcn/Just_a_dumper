//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@interface FMMatrix : NSObject
{
}

+ (_Bool)remapCoordinateSystemImpl:(float *)arg1 inLength:(int)arg2 x:(int)arg3 y:(int)arg4 outR:(float *)arg5 outLength:(int)arg6;
+ (_Bool)remapCoordinateSystem:(float *)arg1 inLength:(int)arg2 x:(int)arg3 y:(int)arg4 outR:(float *)arg5 outLength:(int)arg6;
+ (void)rotationMatrixFromVector:(float *)arg1 resLength:(int)arg2 rotation:(float *)arg3 rotationLength:(int)arg4;
+ (void)setLookAtM:(float *)arg1 rmLength:(int)arg2 rmOffset:(int)arg3 eyeX:(float)arg4 eyeY:(float)arg5 eyeZ:(float)arg6 centerX:(float)arg7 centerY:(float)arg8 centerZ:(float)arg9 upX:(float)arg10 upY:(float)arg11 upZ:(float)arg12;
+ (void)setRotateEulerM:(float *)arg1 rmOffset:(int)arg2 x:(float)arg3 y:(float)arg4 z:(float)arg5;
+ (void)setRotateM:(float *)arg1 rmLength:(int)arg2 rmOffset:(int)arg3 a:(float)arg4 x:(float)arg5 y:(float)arg6 z:(float)arg7;
+ (void)rotateM:(float *)arg1 mLength:(int)arg2 mOffset:(int)arg3 a:(float)arg4 x:(float)arg5 y:(float)arg6 z:(float)arg7;
+ (void)rotateM:(float *)arg1 rmLength:(int)arg2 rmOffset:(int)arg3 m:(float *)arg4 mLength:(int)arg5 mOffset:(int)arg6 a:(float)arg7 x:(float)arg8 y:(float)arg9 z:(float)arg10;
+ (void)translateM:(float *)arg1 mLength:(int)arg2 mOffset:(int)arg3 x:(float)arg4 y:(float)arg5 z:(float)arg6;
+ (void)translateM:(float *)arg1 tmLength:(int)arg2 tmOffset:(int)arg3 m:(float *)arg4 mLength:(int)arg5 mOffset:(int)arg6 x:(float)arg7 y:(float)arg8 z:(float)arg9;
+ (void)scaleM:(float *)arg1 mLength:(int)arg2 offSet:(int)arg3 x:(float)arg4 y:(float)arg5 z:(float)arg6;
+ (void)scaleM:(float *)arg1 smLength:(int)arg2 smOffset:(int)arg3 m:(float *)arg4 offset:(int)arg5 x:(float)arg6 y:(float)arg7 z:(float)arg8;
+ (void)setIdentityM:(float *)arg1 smOffset:(int)arg2;
+ (float)length:(float)arg1 y:(float)arg2 z:(float)arg3;
+ (void)perspectiveM:(float *)arg1 length:(int)arg2 offset:(int)arg3 fovy:(float)arg4 aspect:(float)arg5 zNear:(float)arg6 zFar:(float)arg7;
+ (void)frustumM:(float *)arg1 offset:(int)arg2 left:(float)arg3 right:(float)arg4 bottom:(float)arg5 top:(float)arg6 near:(float)arg7 far:(float)arg8;
+ (void)orthoM:(float *)arg1 length:(int)arg2 offset:(int)arg3 left:(float)arg4 right:(float)arg5 bottom:(float)arg6 top:(float)arg7 near:(float)arg8 far:(float)arg9;
+ (_Bool)invertM:(float *)arg1 mInvLength:(int)arg2 invOffset:(int)arg3 m:(float *)arg4 length:(int)arg5 mOffset:(int)arg6;
+ (void)transposeM:(float *)arg1 length:(int)arg2 offSet:(int)arg3 m:(float *)arg4 length:(int)arg5 mOffset:(int)arg6;
+ (void)multiplyMV:(float *)arg1 resultVecLength:(int)arg2 resultVecOffset:(int)arg3 lhsMat:(float *)arg4 lhsMatLength:(int)arg5 lhsMatOffset:(int)arg6 rhsVec:(float *)arg7 rhsVecLength:(int)arg8 rhsVecOffset:(int)arg9;
+ (void)multiplyMM:(float *)arg1 resultVecLength:(int)arg2 resultVecOffset:(int)arg3 lhsMat:(float *)arg4 lhsMatLength:(int)arg5 lhsMatOffset:(int)arg6 rhsVec:(float *)arg7 rhsVecLength:(int)arg8 rhsVecOffset:(int)arg9;

@end

