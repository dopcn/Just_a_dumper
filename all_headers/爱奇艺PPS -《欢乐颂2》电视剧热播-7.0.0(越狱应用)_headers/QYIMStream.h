//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

#import "GCDAsyncSocketDelegate-Protocol.h"

@class GCDMulticastDelegate, NSData, NSMutableArray, NSMutableDictionary, NSString, QYPPGCDAsyncSocket, QiyiStreamDataBuffer;
@protocol OS_dispatch_queue, OS_dispatch_source, QiyiStreamDelegate;

@interface QYIMStream : NSObject <GCDAsyncSocketDelegate>
{
    NSObject<OS_dispatch_queue> *qiyiStreamQueue;
    void *qiyiStreamQueueTag;
    NSObject<OS_dispatch_queue> *willSendDataQueue;
    NSObject<OS_dispatch_queue> *willReceiveDataQueue;
    NSObject<OS_dispatch_source> *connectTimer;
    double keepAliveInterval;
    NSObject<OS_dispatch_source> *keepAliveTimer;
    double lastSendReceiveTime;
    NSData *keepAliveData;
    NSString *_hostName;
    unsigned short _hostPort;
    GCDMulticastDelegate<QiyiStreamDelegate> *multicastDelegate;
    QYPPGCDAsyncSocket *asyncSocket;
    NSMutableArray *registeredModules;
    NSMutableDictionary *registerDic;
    unsigned long long state;
    QiyiStreamDataBuffer *dataBuffer;
    unsigned long long needBytes;
    NSMutableArray *readQueue;
    NSData *preData;
    _Bool _resetByteCountPerConnection;
    _Bool _skipStartSession;
    _Bool _needWrapper;
    unsigned long long _startTLSPolicy;
    unsigned long long _numberOfBytesSent;
    unsigned long long _numberOfBytesReceived;
    id _tag;
    NSString *_extraContent;
}

+ (id)shareStream;
@property(nonatomic) _Bool needWrapper; // @synthesize needWrapper=_needWrapper;
@property(copy, nonatomic) NSString *extraContent; // @synthesize extraContent=_extraContent;
@property _Bool skipStartSession; // @synthesize skipStartSession=_skipStartSession;
@property(retain) id tag; // @synthesize tag=_tag;
@property _Bool resetByteCountPerConnection; // @synthesize resetByteCountPerConnection=_resetByteCountPerConnection;
@property(readonly) unsigned long long numberOfBytesReceived; // @synthesize numberOfBytesReceived=_numberOfBytesReceived;
@property(readonly) unsigned long long numberOfBytesSent; // @synthesize numberOfBytesSent=_numberOfBytesSent;
@property unsigned long long startTLSPolicy; // @synthesize startTLSPolicy=_startTLSPolicy;
- (void).cxx_destruct;
- (id)iterProcessDataToPacket:(id)arg1;
- (void)doNewProcessData:(id)arg1;
- (_Bool)enableBackgroundingOnSocket;
- (void)doProcessData:(id)arg1;
- (void)socket:(id)arg1 didReceiveTrust:(struct __SecTrust *)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)socket:(id)arg1 didAcceptNewSocket:(id)arg2;
- (void)socketDidDisconnect:(id)arg1 withError:(id)arg2;
- (void)socket:(id)arg1 didWriteDataWithTag:(long long)arg2;
- (void)socket:(id)arg1 didReadData:(id)arg2 withTag:(long long)arg3;
- (void)socketDidSecure:(id)arg1;
- (void)socket:(id)arg1 didConnectToHost:(id)arg2 port:(unsigned short)arg3;
@property BOOL keepAliveWhitespaceCharacter;
@property double keepAliveInterval;
- (void)keepAlive;
- (void)setupKeepAliveTimer;
- (void)doConnectTimeout;
- (void)endConnectTimeout;
- (void)startConnectTimeout:(double)arg1;
- (void)performBlock:(CDUnknownBlockType)arg1;
- (void)disconnectAfterWriting;
- (void)disconnectAfterSending;
- (void)continueReceiveData:(id)arg1 withTag:(long long)arg2;
- (void)receiveDataWithTimeout:(double)arg1 tag:(long long)arg2;
- (void)sendPacket:(id)arg1;
- (void)continueSendData:(id)arg1 withTimeout:(double)arg2 tag:(long long)arg3;
- (void)sendData:(id)arg1;
- (void)sendWrapperData:(id)arg1 withTimeout:(double)arg2 tag:(long long)arg3;
- (void)sendData:(id)arg1 withTimeout:(double)arg2 tag:(long long)arg3;
- (void)startTLS:(id)arg1;
- (void)disconnectSocket;
- (void)disconnect;
- (void)forwardPacket:(id)arg1;
- (void)forwardData:(id)arg1 withTag:(long long)arg2;
- (_Bool)unregisterModule:(id)arg1;
- (_Bool)registerModule:(id)arg1 withError:(id *)arg2;
- (void)removeDelegate:(id)arg1;
- (void)removeDelegate:(id)arg1 delegateQueue:(id)arg2;
- (void)addDelegate:(id)arg1 delegateQueue:(id)arg2;
- (_Bool)isConnected;
- (_Bool)isConnecting;
- (_Bool)isDisconnected;
- (void)setDelegate:(id)arg1 delegateQueue:(id)arg2;
- (void)configSocket:(id)arg1;
- (_Bool)connectToHost:(id)arg1 onPort:(unsigned short)arg2 withTimeout:(double)arg3 error:(id *)arg4;
- (_Bool)connectToHost:(id)arg1 onPort:(unsigned short)arg2 error:(id *)arg3;
- (_Bool)connectToAddress:(id)arg1 error:(id *)arg2;
- (_Bool)connectWithError:(id *)arg1;
@property(readonly) NSData *connectedAddress;
@property unsigned short hostPort; // @synthesize hostPort=_hostPort;
@property(copy) NSString *hostName; // @synthesize hostName=_hostName;
- (void)commonInit;
- (void)dealloc;
- (id)init;

@end

