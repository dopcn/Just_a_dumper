//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

#import "ImageLoaderDelegate-Protocol.h"

@class AdOpenAgreementModel, NSArray, NSDictionary, NSString, UIImage;
@protocol BAAdDelegate;

__attribute__((visibility("hidden")))
@interface BAAdManager : NSObject <ImageLoaderDelegate>
{
    _Bool _isAdLoaded;
    _Bool _isGetPinyouError;
    int _actionType;
    int _adType;
    float _showupTime;
    int _sequence;
    int _adSource;
    NSString *_imgUrl;
    NSArray *_imgUrlArray;
    UIImage *_image;
    id <BAAdDelegate> _delegate;
    NSString *_adId;
    NSString *_title;
    NSString *_summary;
    NSString *_actionUrl;
    NSDictionary *_rawData;
    NSDictionary *_expandedPairs;
    NSString *_flag;
    NSString *_appUrl;
    NSString *_resourceId;
    NSString *_hideBar;
    NSString *_commentCount;
    NSArray *_brandAdArray;
    AdOpenAgreementModel *_adAgreementModel;
    struct CGSize _desiredImageSize;
}

+ (void)prasePinyouResponse:(id)arg1 ToADManager:(id)arg2;
+ (void)loadFile;
+ (id)historyPath;
+ (void)storeFile;
+ (void)cleanHisoty;
+ (id)getHistory;
+ (_Bool)addHistory:(id)arg1;
+ (id)originAdsDataWithAdInterfaceType:(int)arg1;
+ (id)localAdManagersType:(int)arg1 imgSize:(struct CGSize)arg2 cityId:(id)arg3;
+ (id)adManagersForType:(int)arg1 imgSize:(struct CGSize)arg2;
@property(retain, nonatomic) AdOpenAgreementModel *adAgreementModel; // @synthesize adAgreementModel=_adAgreementModel;
@property(retain, nonatomic) NSArray *brandAdArray; // @synthesize brandAdArray=_brandAdArray;
@property(copy, nonatomic) NSString *commentCount; // @synthesize commentCount=_commentCount;
@property(retain, nonatomic) NSString *hideBar; // @synthesize hideBar=_hideBar;
@property(copy, nonatomic) NSString *resourceId; // @synthesize resourceId=_resourceId;
@property(nonatomic) _Bool isGetPinyouError; // @synthesize isGetPinyouError=_isGetPinyouError;
@property(nonatomic) int adSource; // @synthesize adSource=_adSource;
@property(copy, nonatomic) NSString *appUrl; // @synthesize appUrl=_appUrl;
@property(retain, nonatomic) NSString *flag; // @synthesize flag=_flag;
@property(retain, nonatomic) NSDictionary *expandedPairs; // @synthesize expandedPairs=_expandedPairs;
@property(retain, nonatomic) NSDictionary *rawData; // @synthesize rawData=_rawData;
@property(nonatomic) struct CGSize desiredImageSize; // @synthesize desiredImageSize=_desiredImageSize;
@property(nonatomic) int sequence; // @synthesize sequence=_sequence;
@property(nonatomic) float showupTime; // @synthesize showupTime=_showupTime;
@property(retain, nonatomic) NSString *actionUrl; // @synthesize actionUrl=_actionUrl;
@property(retain, nonatomic) NSString *summary; // @synthesize summary=_summary;
@property(retain, nonatomic) NSString *title; // @synthesize title=_title;
@property(retain, nonatomic) NSString *adId; // @synthesize adId=_adId;
@property(readonly, nonatomic) _Bool isAdLoaded; // @synthesize isAdLoaded=_isAdLoaded;
@property(nonatomic) __weak id <BAAdDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) UIImage *image; // @synthesize image=_image;
@property(retain, nonatomic) NSArray *imgUrlArray; // @synthesize imgUrlArray=_imgUrlArray;
@property(retain, nonatomic) NSString *imgUrl; // @synthesize imgUrl=_imgUrl;
@property(readonly, nonatomic) int adType; // @synthesize adType=_adType;
@property(nonatomic) int actionType; // @synthesize actionType=_actionType;
- (void).cxx_destruct;
- (_Bool)isHistoryAds;
- (void)read;
- (_Bool)isEqual:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)imageDidLoaded:(id)arg1 animate:(_Bool)arg2 forUrl:(id)arg3;
- (void)handleUrls:(id)arg1;
- (void)downloadImage;
- (void)configWithDictionary:(id)arg1;
- (void)cofigLocalAdWithDictionary:(id)arg1;
- (void)loadAd;
- (void)dealloc;
- (id)initWithAdType:(int)arg1 withInfo:(id)arg2 withImgSize:(struct CGSize)arg3 withAdInterfaceType:(int)arg4;

@end

