//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "NSURLConnectionDataDelegate-Protocol.h"
#import "NSURLConnectionDelegate-Protocol.h"
#import "NSURLSessionDataDelegate-Protocol.h"
#import "NSURLSessionDelegate-Protocol.h"
#import "NSURLSessionDownloadDelegate-Protocol.h"
#import "NSURLSessionTaskDelegate-Protocol.h"

@class MQQURLSession, NSData, NSDictionary, NSError, NSFileHandle, NSLock, NSMutableData, NSMutableDictionary, NSMutableURLRequest, NSString, NSURL, NSURLConnection, NSURLSession, NSURLSessionTask;

@interface MQQHttpRequest : NSObject <NSURLSessionDelegate, NSURLSessionTaskDelegate, NSURLSessionDataDelegate, NSURLSessionDownloadDelegate, NSURLConnectionDataDelegate, NSURLConnectionDelegate>
{
    long long _responseStatusCode;
    NSDictionary *_responseHeaders;
    unsigned long long _receivedDataLength;
    CDUnknownBlockType _completionBlock;
    CDUnknownBlockType _failedBlock;
    _Bool _isCompleted;
    _Bool _isCancelled;
    NSLock *_stateLock;
    long long _retryCount;
    _Bool _addedRetryCount;
    unsigned long long _resumeOffsetForFileDownload;
    _Bool _allowsCellularAccess;
    _Bool _allowResumeForFileDownloads;
    double _timeOutSeconds;
    long long _numberOfTimesToRetryOnTimeout;
    NSString *_requestMethod;
    NSMutableData *_postBody;
    long long _priority;
    NSData *_responseData;
    NSError *_error;
    NSString *_downloadDestinationPath;
    NSString *_temporaryFileDownloadPath;
    id _delegate;
    unsigned long long _ID;
    NSDictionary *_userInfo;
    SEL _didReceiveResponseHeadersSelector;
    SEL _didReceiveDataSelector;
    SEL _didFinishSelector;
    SEL _didFailSelector;
    SEL _willPerformRedirectionSelector;
    MQQURLSession *_session;
    NSURLSession *_urlSession;
    NSURLSessionTask *_sessionTask;
    NSURLConnection *_urlConnection;
    NSURL *_url;
    NSMutableData *_tempData;
    NSMutableURLRequest *_request;
    NSMutableDictionary *_requestHeaders;
    NSFileHandle *_downloadFileHandle;
}

+ (id)requestWithURL:(id)arg1;
+ (id)downloadingFileSet;
+ (id)defaultRequestQueue;
@property(retain, nonatomic) NSFileHandle *downloadFileHandle; // @synthesize downloadFileHandle=_downloadFileHandle;
@property(retain, nonatomic) NSMutableDictionary *requestHeaders; // @synthesize requestHeaders=_requestHeaders;
@property(retain, nonatomic) NSMutableURLRequest *request; // @synthesize request=_request;
@property(retain, nonatomic) NSMutableData *tempData; // @synthesize tempData=_tempData;
@property(retain, nonatomic) NSURL *url; // @synthesize url=_url;
@property(retain, nonatomic) NSURLConnection *urlConnection; // @synthesize urlConnection=_urlConnection;
@property(retain, nonatomic) NSURLSessionTask *sessionTask; // @synthesize sessionTask=_sessionTask;
@property(retain, nonatomic) NSURLSession *urlSession; // @synthesize urlSession=_urlSession;
@property(nonatomic) MQQURLSession *session; // @synthesize session=_session;
@property SEL willPerformRedirectionSelector; // @synthesize willPerformRedirectionSelector=_willPerformRedirectionSelector;
@property SEL didFailSelector; // @synthesize didFailSelector=_didFailSelector;
@property SEL didFinishSelector; // @synthesize didFinishSelector=_didFinishSelector;
@property SEL didReceiveDataSelector; // @synthesize didReceiveDataSelector=_didReceiveDataSelector;
@property SEL didReceiveResponseHeadersSelector; // @synthesize didReceiveResponseHeadersSelector=_didReceiveResponseHeadersSelector;
@property(retain, nonatomic) NSDictionary *userInfo; // @synthesize userInfo=_userInfo;
@property(nonatomic) unsigned long long ID; // @synthesize ID=_ID;
@property(nonatomic) id delegate; // @synthesize delegate=_delegate;
@property(copy, nonatomic) NSString *temporaryFileDownloadPath; // @synthesize temporaryFileDownloadPath=_temporaryFileDownloadPath;
@property(copy, nonatomic) NSString *downloadDestinationPath; // @synthesize downloadDestinationPath=_downloadDestinationPath;
@property(nonatomic) _Bool allowResumeForFileDownloads; // @synthesize allowResumeForFileDownloads=_allowResumeForFileDownloads;
@property(readonly, retain, nonatomic) NSDictionary *responseHeaders; // @synthesize responseHeaders=_responseHeaders;
@property(readonly, nonatomic) long long responseStatusCode; // @synthesize responseStatusCode=_responseStatusCode;
@property(retain, nonatomic) NSError *error; // @synthesize error=_error;
@property(retain, nonatomic) NSData *responseData; // @synthesize responseData=_responseData;
@property(readonly, nonatomic) unsigned long long receivedDataLength; // @synthesize receivedDataLength=_receivedDataLength;
@property(nonatomic) _Bool allowsCellularAccess; // @synthesize allowsCellularAccess=_allowsCellularAccess;
@property(nonatomic) long long priority; // @synthesize priority=_priority;
@property(retain, nonatomic) NSMutableData *postBody; // @synthesize postBody=_postBody;
@property(retain, nonatomic) NSString *requestMethod; // @synthesize requestMethod=_requestMethod;
@property(nonatomic) long long numberOfTimesToRetryOnTimeout; // @synthesize numberOfTimesToRetryOnTimeout=_numberOfTimesToRetryOnTimeout;
@property(nonatomic) double timeOutSeconds; // @synthesize timeOutSeconds=_timeOutSeconds;
- (void)notifyDelegate:(_Bool)arg1;
@property(readonly, nonatomic) unsigned long long resumeOffsetForFileDownload;
@property(readonly, nonatomic) _Bool isDownloadRequest;
- (void)addRequestHeader:(id)arg1 value:(id)arg2;
- (void)suspend;
- (void)resume;
- (void)clearDownloadingFiles;
- (void)clearAll;
- (void)clearDelegatesAndCancel;
- (void)startConnect;
- (_Bool)prepareForDownloadWithError:(id *)arg1;
- (void)_startAsynchronous;
- (void)startAsynchronous;
- (void)startSynchronous;
@property(readonly, nonatomic) _Bool isCancelled;
@property(readonly, nonatomic) _Bool isCompleted;
- (void)setFailedBlock:(CDUnknownBlockType)arg1;
- (void)setCompletionBlock:(CDUnknownBlockType)arg1;
- (void)dealloc;
- (id)initWithURL:(id)arg1;
- (id)init;
- (id)requestWillPerformRedirection:(id)arg1 newRequest:(id)arg2;
- (void)requestDidStop;
- (void)requestDidFailWithError:(id)arg1 shouldRetry:(_Bool)arg2;
- (void)requestDidFinish;
- (void)requestDidStart;
- (void)requestWillStart;
- (_Bool)managedByRequestQueue;
- (void)URLSession:(id)arg1 downloadTask:(id)arg2 didResumeAtOffset:(long long)arg3 expectedTotalBytes:(long long)arg4;
- (void)URLSession:(id)arg1 downloadTask:(id)arg2 didWriteData:(long long)arg3 totalBytesWritten:(long long)arg4 totalBytesExpectedToWrite:(long long)arg5;
- (void)URLSession:(id)arg1 downloadTask:(id)arg2 didFinishDownloadingToURL:(id)arg3;
- (void)URLSession:(id)arg1 dataTask:(id)arg2 didReceiveData:(id)arg3;
- (void)URLSession:(id)arg1 dataTask:(id)arg2 didReceiveResponse:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)URLSession:(id)arg1 task:(id)arg2 willPerformHTTPRedirection:(id)arg3 newRequest:(id)arg4 completionHandler:(CDUnknownBlockType)arg5;
- (void)URLSession:(id)arg1 task:(id)arg2 didCompleteWithError:(id)arg3;
- (_Bool)SS_handleDownloadedFile:(id *)arg1;
- (void)SS_clearUnfinishedDownloadingFiles;
- (void)SS_clearDownloadingFiles;
- (_Bool)SS_prepareForDownloadWithError:(id *)arg1;
- (void)SS_suspend;
- (void)SS_resume;
- (void)SS_clearAll;
- (void)SS_startConnect;
- (id)connection:(id)arg1 willSendRequest:(id)arg2 redirectResponse:(id)arg3;
- (void)connection:(id)arg1 didFailWithError:(id)arg2;
- (void)connectionDidFinishLoading:(id)arg1;
- (void)connection:(id)arg1 didReceiveData:(id)arg2;
- (void)connection:(id)arg1 didReceiveResponse:(id)arg2;
- (_Bool)CN_handleDownloadedFileWithError:(id *)arg1;
- (void)CN_clearUnfinishedDownloadingFiles:(_Bool)arg1;
- (_Bool)CN_writeDataToDownloadingFile:(id)arg1;
- (_Bool)CN_initDownloadFileHandleIfNeeded;
- (void)CN_clearDownloadingFiles;
- (_Bool)CN_prepareForDownloadWithError:(id *)arg1;
- (void)CN_clearAll;
- (void)CN_startConnect;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

