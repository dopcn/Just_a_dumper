//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

@class GPBMessage, NSData, NSObject, NSOutputStream, NSString;

#pragma mark Function Pointers and Blocks

typedef void (*CDUnknownFunctionPointerType)(void); // return type and parameters are unknown

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct AVFoundationVideoCapturer {
    CDUnknownFunctionPointerType *_field1;
    CDUnknownFunctionPointerType *_field2;
    struct set<sigslot::_signal_base_interface *, std::__1::less<sigslot::_signal_base_interface *>, std::__1::allocator<sigslot::_signal_base_interface *>> _field3;
    CDUnknownFunctionPointerType *_field4;
    struct signal2<cricket::VideoCapturer *, cricket::CaptureState, sigslot::single_threaded> _field5;
    struct signal2<cricket::VideoCapturer *, const cricket::CapturedFrame *, sigslot::multi_threaded_local> _field6;
    struct ThreadChecker _field7;
    basic_string_a490aa4c _field8;
    int _field9;
    struct unique_ptr<cricket::VideoFrameFactory, std::__1::default_delete<cricket::VideoFrameFactory>> _field10;
    struct unique_ptr<cricket::VideoFormat, std::__1::default_delete<cricket::VideoFormat>> _field11;
    struct vector<cricket::VideoFormat, std::__1::allocator<cricket::VideoFormat>> _field12;
    struct unique_ptr<cricket::VideoFormat, std::__1::default_delete<cricket::VideoFormat>> _field13;
    struct vector<cricket::VideoFormat, std::__1::allocator<cricket::VideoFormat>> _field14;
    _Bool _field15;
    int _field16;
    int _field17;
    struct VideoBroadcaster _field18;
    _Bool _field19;
    struct VideoAdapter _field20;
    struct CriticalSection _field21;
    _Bool _field22;
    int _field23;
    int _field24;
    _Bool _field25;
    struct TimestampAligner _field26;
    id _field27;
    struct I420BufferPool _field28;
};

struct AVMessage {
    int what;
    int arg1;
    int arg2;
    struct AVMessage *next;
};

struct AudioSessionObserver {
    CDUnknownFunctionPointerType *_field1;
};

struct AudioSourceInterface;

struct AudioTrackInterface;

struct BCSegment {
    union BCPoint _field1;
    union BCPoint _field2;
};

struct BMMapMsgObserver {
    CDUnknownFunctionPointerType *_field1;
};

struct BMMapStatus {
    double fLevel;
    double fRotation;
    double fOverlooking;
    struct BMPoint ptCenter;
    struct BMQuadrangle mapRound;
    struct BMRect winRound;
    double centerXoffset;
    double centerYoffset;
};

struct BMPoint {
    double x;
    double y;
};

struct BMQuadrangle {
    struct BMPoint lb;
    struct BMPoint lt;
    struct BMPoint rt;
    struct BMPoint rb;
};

struct BMRect {
    long long left;
    long long right;
    long long top;
    long long bottom;
};

struct CATransform3D {
    double m11;
    double m12;
    double m13;
    double m14;
    double m21;
    double m22;
    double m23;
    double m24;
    double m31;
    double m32;
    double m33;
    double m34;
    double m41;
    double m42;
    double m43;
    double m44;
};

struct CAssoc;

struct CGAffineTransform {
    double a;
    double b;
    double c;
    double d;
    double tx;
    double ty;
};

struct CGPoint {
    double x;
    double y;
};

struct CGRect {
    struct CGPoint origin;
    struct CGSize size;
};

struct CGSize {
    double width;
    double height;
};

struct CLLocationCoordinate2D {
    double latitude;
    double longitude;
};

struct CMapGesture {
    CDUnknownFunctionPointerType *_vptr$CMapGesture;
    int m_bMouseDown;
    struct CVPoint m_ptMove;
    struct CVPoint m_ptUp;
    struct CVPoint m_ptDown;
    unsigned long long m_LastDownTime;
    float m_level;
    struct CVArray<tag_PaoPaoAttribute, tag_PaoPaoAttribute &> m_PaopaoAtt;
    struct IVMapbaseInterface *m_mapControl;
    float m_minZoomLevel;
    float m_maxZoomLevel;
};

struct CMapModeEngine {
    CDUnknownFunctionPointerType *_vptr$CMapModeEngine;
    struct IVMapbaseInterface *m_mapControl;
};

struct CSearchInterface {
    CDUnknownFunctionPointerType *_field1;
};

struct CVArray<_baidu_vi::CVBundle, _baidu_vi::CVBundle &> {
    CDUnknownFunctionPointerType *_field1;
    struct CVBundle *_field2;
    int _field3;
    int _field4;
    int _field5;
    int _field6;
};

struct CVArray<_baidu_vi::CVString, _baidu_vi::CVString &> {
    CDUnknownFunctionPointerType *_field1;
    struct CVString *_field2;
    int _field3;
    int _field4;
    int _field5;
    int _field6;
};

struct CVArray<tag_PaoPaoAttribute, tag_PaoPaoAttribute &> {
    CDUnknownFunctionPointerType *_vptr$CVArray;
    struct tag_PaoPaoAttribute *m_pData;
    int m_iSize;
    int m_iMaxSize;
    int m_iGrowBy;
    int m_iTemp;
};

struct CVBundle {
    struct CVMapStringToPtr _field1;
};

struct CVGpsDetailInfo {
    int _field1;
    float _field2;
    float _field3;
    float _field4;
    float _field5;
    float _field6;
    float _field7;
    unsigned short _field8;
    unsigned short _field9;
    struct tagVTime _field10;
    int _field11;
};

struct CVMapStringToPtr {
    CDUnknownFunctionPointerType *_field1;
    struct CAssoc **_field2;
    unsigned int _field3;
    int _field4;
    struct CAssoc *_field5;
    int _field6;
    struct CVPlex *_field7;
};

struct CVPlex;

struct CVPoint {
    int x;
    int y;
};

struct CVString {
    CDUnknownFunctionPointerType *_field1;
    unsigned short *_field2;
};

struct Constraint;

struct Constraints {
    struct Constraint *_field1;
    struct Constraint *_field2;
    struct __compressed_pair<webrtc::MediaConstraintsInterface::Constraint *, std::__1::allocator<webrtc::MediaConstraintsInterface::Constraint>> {
        struct Constraint *_field1;
    } _field3;
};

struct CopyOnWriteBuffer {
    struct scoped_refptr<rtc::RefCountedObject<rtc::BufferT<unsigned char>>> _field1;
};

struct CriticalSection {
    int lock_queue_;
    int recursion_;
    NSObject *semaphore_;
    struct _opaque_pthread_t *owning_thread_;
};

struct CriticalSectionWrapper;

struct DataBuffer {
    struct CopyOnWriteBuffer _field1;
    _Bool _field2;
};

struct DataChannelDelegateAdapter;

struct DataChannelInit {
    _Bool reliable;
    _Bool ordered;
    int maxRetransmitTime;
    int maxRetransmits;
    basic_string_a490aa4c protocol;
    _Bool negotiated;
    int id;
};

struct DataChannelInterface;

struct EAGLContext {
    Class _field1;
    struct _EAGLContextPrivate *_field2;
};

struct FileRotatingLogSink;

struct GPBCodedInputStreamState {
    char *bytes;
    unsigned long long bufferSize;
    unsigned long long bufferPos;
    unsigned long long currentLimit;
    int lastTag;
    unsigned long long recursionDepth;
};

struct GPBExtensionDescription {
    CDUnion_88782d86 _field1;
    char *_field2;
    char *_field3;
    char *_field4;
    CDUnknownFunctionPointerType _field5;
    int _field6;
    unsigned char _field7;
    unsigned char _field8;
};

struct GPBExtensionRange {
    unsigned int _field1;
    unsigned int _field2;
};

struct GPBMessageFieldDescription {
    char *_field1;
    union {
        char *_field1;
        CDUnknownFunctionPointerType _field2;
        CDUnknownFunctionPointerType _field3;
    } _field2;
    unsigned int _field3;
    int _field4;
    unsigned int _field5;
    unsigned short _field6;
    unsigned char _field7;
};

struct GPBMessage_Storage {
    unsigned int _field1[0];
};

struct GPBOutputBufferState {
    char *bytes;
    unsigned long long size;
    unsigned long long position;
    NSOutputStream *output;
};

struct GPUByteColorVector {
    unsigned char _field1;
    unsigned char _field2;
    unsigned char _field3;
    unsigned char _field4;
};

struct GPUMatrix3x3 {
    struct GPUVector3 one;
    struct GPUVector3 two;
    struct GPUVector3 three;
};

struct GPUMatrix4x4 {
    struct GPUVector4 one;
    struct GPUVector4 two;
    struct GPUVector4 three;
    struct GPUVector4 four;
};

struct GPUTextureOptions {
    unsigned int minFilter;
    unsigned int magFilter;
    unsigned int wrapS;
    unsigned int wrapT;
    unsigned int internalFormat;
    unsigned int format;
    unsigned int type;
};

struct GPUVector3 {
    float one;
    float two;
    float three;
};

struct GPUVector4 {
    float one;
    float two;
    float three;
    float four;
};

struct I420BufferPool {
    struct RaceChecker _field1;
    struct list<rtc::scoped_refptr<rtc::RefCountedObject<webrtc::I420Buffer>>, std::__1::allocator<rtc::scoped_refptr<rtc::RefCountedObject<webrtc::I420Buffer>>>> _field2;
    _Bool _field3;
};

struct IVMapbaseInterface {
    CDUnknownFunctionPointerType *_field1;
};

struct IceCandidateInterface {
    CDUnknownFunctionPointerType *_field1;
};

struct IceServer {
    basic_string_a490aa4c _field1;
    struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> _field2;
    basic_string_a490aa4c _field3;
    basic_string_a490aa4c _field4;
};

struct IdBase;

struct JSObjectionPropertyInfo {
    id _field1;
    int _field2;
};

struct MSize {
    int *_field1;
};

struct MStep {
    unsigned long long *_field1;
    unsigned long long _field2[2];
};

struct Mat {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
    char *_field5;
    int *_field6;
    char *_field7;
    char *_field8;
    char *_field9;
    struct MatAllocator *_field10;
    struct MSize _field11;
    struct MStep _field12;
};

struct MatAllocator;

struct MediaConfig {
    _Bool _field1;
    struct Video _field2;
};

struct MediaConstraints;

struct MediaSourceInterface;

struct MediaStreamInterface;

struct MediaStreamTrackInterface;

struct Msg {
    long long _field1;
    long long _field2;
    long long _field3;
    int _field4;
    int _field5;
    int _field6;
    basic_string_a490aa4c _field7;
    basic_string_a490aa4c _field8;
    basic_string_a490aa4c _field9;
    int _field10;
    basic_string_a490aa4c _field11;
    basic_string_a490aa4c _field12;
    basic_string_a490aa4c _field13;
    basic_string_a490aa4c _field14;
    int _field15;
    basic_string_a490aa4c _field16;
    int _field17;
    long long _field18;
    basic_string_a490aa4c _field19;
    basic_string_a490aa4c _field20;
    basic_string_a490aa4c _field21;
    int _field22;
    int _field23;
    int _field24;
    int _field25;
};

struct NSDictionary {
    Class _field1;
};

struct NSMutableDictionary {
    Class _field1;
};

struct Optional<bool> {
    _Bool _field1;
    union {
        char _field1;
        _Bool _field2;
    } _field2;
};

struct Optional<cricket::VideoFormat> {
    _Bool _field1;
    union {
        char _field1;
        struct VideoFormat _field2;
    } _field2;
};

struct Optional<int> {
    _Bool _field1;
    CDUnion_073fe123 _field2;
};

struct Optional<long long> {
    _Bool _field1;
    union {
        char _field1;
        long long _field2;
    } _field2;
};

struct Optional<unsigned int> {
    _Bool _field1;
    union {
        char _field1;
        unsigned int _field2;
    } _field2;
};

struct Optional<webrtc::VideoRotation> {
    _Bool has_value_;
    CDUnion_073fe123 ;
};

struct PeerConnectionDelegateAdapter;

struct PeerConnectionFactoryInterface;

struct PeerConnectionInterface;

struct Point2f;

struct PoseLivenessDetector {
    int _field1;
    int _field2;
    struct vector<PoseDirection, std::__1::allocator<PoseDirection>> _field3;
    struct vector<float, std::__1::allocator<float>> _field4;
    struct vector<float, std::__1::allocator<float>> _field5;
    struct vector<float, std::__1::allocator<float>> _field6;
    float _field7;
    float _field8;
    float _field9;
    int _field10;
};

struct RTCConfiguration {
    int _field1;
    struct vector<webrtc::PeerConnectionInterface::IceServer, std::__1::allocator<webrtc::PeerConnectionInterface::IceServer>> _field2;
    int _field3;
    int _field4;
    int _field5;
    int _field6;
    int _field7;
    _Bool _field8;
    int _field9;
    int _field10;
    int _field11;
    struct vector<rtc::scoped_refptr<rtc::RTCCertificate>, std::__1::allocator<rtc::scoped_refptr<rtc::RTCCertificate>>> _field12;
    _Bool _field13;
    struct MediaConfig _field14;
    _Bool _field15;
    _Bool _field16;
    _Bool _field17;
    struct Optional<int> _field18;
    struct Optional<bool> _field19;
    struct Optional<bool> _field20;
    int _field21;
    _Bool _field22;
    _Bool _field23;
    _Bool _field24;
    _Bool _field25;
};

struct RaceChecker {
    int _field1;
    struct _opaque_pthread_t *_field2;
};

struct Rect {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RefCountedObject<rtc::BufferT<unsigned char>>;

struct RtpCodecParameters {
    int _field1;
    basic_string_a490aa4c _field2;
    int _field3;
    int _field4;
};

struct RtpEncodingParameters {
    struct Optional<unsigned int> _field1;
    _Bool _field2;
    int _field3;
};

struct RtpParameters {
    struct vector<webrtc::RtpEncodingParameters, std::__1::allocator<webrtc::RtpEncodingParameters>> _field1;
    struct vector<webrtc::RtpCodecParameters, std::__1::allocator<webrtc::RtpCodecParameters>> _field2;
};

struct RtpReceiverInterface;

struct RtpSenderInterface;

struct SDL_AudioSpec {
    int freq;
    unsigned short format;
    unsigned char channels;
    unsigned char silence;
    unsigned short samples;
    unsigned short padding;
    unsigned int size;
    CDUnknownFunctionPointerType callback;
    void *userdata;
};

struct SDL_Class;

struct SDL_SpeedSampler2 {
    long long sample_range;
    long long last_profile_tick;
    long long last_profile_duration;
    long long last_profile_quantity;
    long long last_profile_speed;
};

struct SDL_VoutOverlay {
    int _field1;
    int _field2;
    unsigned int _field3;
    int _field4;
    unsigned short *_field5;
    char **_field6;
    int _field7;
    int _field8;
    int _field9;
    struct SDL_Class *_field10;
    struct SDL_VoutOverlay_Opaque *_field11;
    CDUnknownFunctionPointerType _field12;
    CDUnknownFunctionPointerType _field13;
    CDUnknownFunctionPointerType _field14;
    CDUnknownFunctionPointerType _field15;
    CDUnknownFunctionPointerType _field16;
};

struct SDL_VoutOverlay_Opaque;

struct SRDelegateAvailableMethods {
    unsigned int didReceiveMessage:1;
    unsigned int didReceiveMessageWithString:1;
    unsigned int didReceiveMessageWithData:1;
    unsigned int didOpen:1;
    unsigned int didFailWithError:1;
    unsigned int didCloseWithCode:1;
    unsigned int didReceivePong:1;
    unsigned int shouldConvertTextFrameToString:1;
};

struct SampleInfo {
    basic_string_a490aa4c _field1;
    int _field2;
    int _field3;
    unsigned long long _field4;
    struct map<int, int, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, int>>> _field5;
};

struct SessionDescriptionInterface {
    CDUnknownFunctionPointerType *_field1;
};

struct SinkPair;

struct StatsReport {
    struct scoped_refptr<webrtc::StatsReport::IdBase> _field1;
    double _field2;
    struct map<webrtc::StatsReport::StatsValueName, rtc::linked_ptr<webrtc::StatsReport::Value>, std::__1::less<webrtc::StatsReport::StatsValueName>, std::__1::allocator<std::__1::pair<const webrtc::StatsReport::StatsValueName, rtc::linked_ptr<webrtc::StatsReport::Value>>>> _field3;
};

struct TC_FaceAlignmentRunner {
    struct UFA *_field1;
};

struct Thread;

struct ThreadChecker;

struct TimestampAligner {
    int _field1;
    long long _field2;
    long long _field3;
    long long _field4;
};

struct UFA;

struct UIEdgeInsets {
    double top;
    double left;
    double bottom;
    double right;
};

struct Video {
    _Bool _field1;
    _Bool _field2;
    _Bool _field3;
};

struct VideoAdapter {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    int _field3;
    int _field4;
    int _field5;
    int _field6;
    int _field7;
    struct Optional<long long> _field8;
    struct Optional<cricket::VideoFormat> _field9;
    int _field10;
    int _field11;
    struct CriticalSection _field12;
};

struct VideoBroadcaster {
    CDUnknownFunctionPointerType *_field1;
    struct ThreadChecker _field2;
    struct vector<rtc::VideoSourceBase::SinkPair, std::__1::allocator<rtc::VideoSourceBase::SinkPair>> _field3;
    CDUnknownFunctionPointerType *_field4;
    struct ThreadChecker _field5;
    struct CriticalSection _field6;
    struct VideoSinkWants _field7;
    scoped_refptr_30488dd1 _field8;
};

struct VideoCaptureCapability {
    int width;
    int height;
    int maxFPS;
    int expectedCaptureDelay;
    int rawType;
    int codecType;
    _Bool interlaced;
};

struct VideoCaptureDataCallback;

struct VideoCaptureFeedBack;

struct VideoCaptureIos {
    CDUnknownFunctionPointerType *_field1;
    CDUnknownFunctionPointerType *_field2;
    int _field3;
    char *_field4;
    struct CriticalSectionWrapper *_field5;
    int _field6;
    struct VideoCaptureCapability _field7;
    struct CriticalSectionWrapper *_field8;
    long long _field9;
    long long _field10;
    _Bool _field11;
    _Bool _field12;
    int _field13;
    int _field14;
    struct VideoCaptureDataCallback *_field15;
    struct VideoCaptureFeedBack *_field16;
    long long _field17;
    long long _field18[90];
    int _field19;
    struct VideoFrame _field20;
    _Bool _field21;
    id _field22;
    _Bool _field23;
    int _field24;
    struct VideoCaptureCapability _field25;
};

struct VideoFormat {
    int _field1;
    int _field2;
    long long _field3;
    unsigned int _field4;
};

struct VideoFrame {
    scoped_refptr_30488dd1 _field1;
    unsigned int _field2;
    long long _field3;
    long long _field4;
    int _field5;
};

struct VideoFrameBuffer;

struct VideoFrameFactory;

struct VideoRendererAdapter;

struct VideoSinkInterface<cricket::VideoFrame> {
    CDUnknownFunctionPointerType *_field1;
};

struct VideoSinkWants {
    _Bool _field1;
    _Bool _field2;
    struct Optional<int> _field3;
    struct Optional<int> _field4;
};

struct VideoTrackInterface;

struct VideoTrackSourceInterface;

struct WBAVInject_AsyncStatistic {
    unsigned long long size;
    long long buf_backwards;
    long long buf_forwards;
    long long buf_capacity;
};

struct WBSDKJKConstBuffer {
    struct WBSDKJKConstPtrRange _field1;
};

struct WBSDKJKConstPtrRange {
    char *_field1;
    unsigned long long _field2;
};

struct WBSDKJKEncodeCache {
    id _field1;
    unsigned long long _field2;
    unsigned long long _field3;
};

struct WBSDKJKEncodeState {
    struct WBSDKJKManagedBuffer _field1;
    struct WBSDKJKManagedBuffer _field2;
    unsigned long long _field3;
    struct WBSDKJKFastClassLookup _field4;
    struct WBSDKJKEncodeCache _field5[1024];
    unsigned long long _field6;
    unsigned long long _field7;
    unsigned long long _field8;
    id _field9;
    id _field10;
    SEL _field11;
    CDUnknownFunctionPointerType _field12;
    CDUnknownBlockType _field13;
};

struct WBSDKJKFastClassLookup {
    void *_field1;
    void *_field2;
    void *_field3;
    void *_field4;
    void *_field5;
};

struct WBSDKJKHashTableEntry {
    unsigned long long _field1;
    id _field2;
    id _field3;
};

struct WBSDKJKManagedBuffer {
    struct WBSDKJKPtrRange _field1;
    unsigned long long _field2;
    unsigned long long _field3;
};

struct WBSDKJKObjCImpCache {
    Class _field1;
    CDUnknownFunctionPointerType _field2;
    CDUnknownFunctionPointerType _field3;
};

struct WBSDKJKObjectStack {
    void **_field1;
    void **_field2;
    unsigned long long *_field3;
    unsigned long long _field4;
    unsigned long long _field5;
    unsigned long long _field6;
    unsigned long long _field7;
};

struct WBSDKJKParseState {
    unsigned long long _field1;
    struct WBSDKJKConstBuffer _field2;
    unsigned long long _field3;
    unsigned long long _field4;
    unsigned long long _field5;
    unsigned long long _field6;
    unsigned long long _field7;
    unsigned long long _field8;
    struct WBSDKJKParseToken _field9;
    struct WBSDKJKObjectStack _field10;
    struct WBSDKJKTokenCache _field11;
    struct WBSDKJKObjCImpCache _field12;
    id _field13;
    int _field14;
    _Bool _field15;
};

struct WBSDKJKParseToken {
    struct WBSDKJKConstPtrRange _field1;
    unsigned long long _field2;
    struct WBSDKJKTokenValue _field3;
    struct WBSDKJKManagedBuffer _field4;
};

struct WBSDKJKPtrRange {
    char *_field1;
    unsigned long long _field2;
};

struct WBSDKJKTokenCache {
    struct WBSDKJKTokenCacheItem *_field1;
    unsigned long long _field2;
    unsigned int _field3;
    unsigned char _field4[1024];
};

struct WBSDKJKTokenCacheItem;

struct WBSDKJKTokenValue {
    struct WBSDKJKConstPtrRange _field1;
    unsigned long long _field2;
    unsigned long long _field3;
    union {
        long long _field1;
        unsigned long long _field2;
        double _field3;
    } _field4;
    struct WBSDKJKTokenCacheItem *_field5;
};

struct _00066 {
    struct _00651 {
        struct _00651 {
            struct _00219 _field1;
            struct _00219 _field2;
        } _field1;
        int _field2;
        int _field3;
        float _field4;
    } _field1;
    _Bool _field2;
    int _field3;
    int _field4;
    int _field5;
    unsigned long long _field6;
    struct _00445 {
        struct unique_ptr<_00509::_00445::_00716, std::__1::default_delete<_00509::_00445::_00716>> _field1;
    } _field7;
    struct _00206 {
        struct unique_ptr<_00509::_00206::_00716, std::__1::default_delete<_00509::_00206::_00716>> _field1;
    } _field8;
    struct _00599 _field9;
    struct _00084 {
        struct time_point<std::__1::chrono::steady_clock, std::__1::chrono::duration<long long, std::__1::ratio<1, 1000000000>>> _field1;
        _Bool _field2;
    } _field10;
    struct _00460 _field11;
    int _field12;
    struct _00111 {
        struct _00184 _field1;
        struct _00599 _field2;
    } _field13;
};

struct _00184 {
    int _field1;
    struct _00210 {
        _Bool _field1;
        struct _00367 _field2;
        struct _00367 _field3;
        struct _00599 _field4;
    } _field2;
};

struct _00219 {
    float _field1;
    float _field2;
    float _field3;
    float _field4;
    float _field5;
    float _field6;
};

struct _00348 {
    int _field1;
    float _field2;
    float _field3;
};

struct _00367 {
    _Bool _field1;
    int _field2;
    float _field3;
    float _field4;
    float _field5;
    float _field6;
    float _field7;
    float _field8;
};

struct _00460 {
    unsigned long long _field1;
    struct _00650 _field2;
    float _field3;
};

struct _00599 {
    struct _00611 {
        _Bool _field1;
        _Bool _field2;
        _Bool _field3;
        _Bool _field4;
        _Bool _field5;
        _Bool _field6;
        _Bool _field7;
        _Bool _field8;
    } _field1;
    struct _00650 _field2;
    struct _00687 {
        float _field1;
        float _field2;
    } _field3;
    struct _00348 _field4[7];
    struct _00348 _field5[7];
    unsigned long long _field6;
    struct _00671 {
        float _field1;
        float _field2;
        float _field3;
        float _field4;
    } _field7;
    struct _00614 {
        float _field1;
        float _field2;
        float _field3;
        float _field4;
    } _field8;
    struct _00621 {
        float _field1;
        float _field2;
        float _field3;
    } _field9;
    float _field10;
    float _field11;
    float _field12;
    float _field13;
    float _field14;
    float _field15;
    float _field16;
    float _field17;
    float _field18;
    float _field19;
};

struct _00650 {
    float _field1;
    float _field2;
};

struct _00716;

struct _DetectorConfig {
    double timeout;
    int maxTaskQueueSize;
    int minFaceSize;
    float maxYawAngle;
    float maxPitchAngle;
    float minBrightness;
    float maxBrightness;
    float maxMotionBlurness;
    float maxGaussianBlurness;
    float maxEyeOpen;
    float maxMouthOpen;
    float minIntegrity;
};

struct _EAGLContextPrivate;

struct _NSRange {
    unsigned long long location;
    unsigned long long length;
};

struct _Rect {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
};

struct _TC_FaceProfile {
    vector_71c4c584 points;
};

struct _TC_FaceShape {
    struct _TC_FaceProfile faceProfile;
    struct _TC_LeftEyebrow leftEyebrow;
    struct _TC_RightEyebrow rightEyebrow;
    struct _TC_LeftEye leftEye;
    struct _TC_RightEye rightEye;
    struct _TC_Nose nose;
    struct _TC_Mouth mouth;
    struct _TC_Pupil pupil;
};

struct _TC_LeftEye {
    vector_71c4c584 points;
};

struct _TC_LeftEyebrow {
    vector_71c4c584 points;
};

struct _TC_Mouth {
    vector_71c4c584 points;
};

struct _TC_Nose {
    vector_71c4c584 points;
};

struct _TC_Pupil {
    vector_71c4c584 points;
};

struct _TC_RightEye {
    vector_71c4c584 points;
};

struct _TC_RightEyebrow {
    vector_71c4c584 points;
};

struct __CFString;

struct __list_node_base<rtc::scoped_refptr<rtc::RefCountedObject<webrtc::I420Buffer>>, void *> {
    struct __list_node_base<rtc::scoped_refptr<rtc::RefCountedObject<webrtc::I420Buffer>>, void *> *_field1;
    struct __list_node_base<rtc::scoped_refptr<rtc::RefCountedObject<webrtc::I420Buffer>>, void *> *_field2;
};

struct __list_node_base<sigslot::_connection_base2<cricket::VideoCapturer *, const cricket::CapturedFrame *, sigslot::multi_threaded_local>*, void *> {
    struct __list_node_base<sigslot::_connection_base2<cricket::VideoCapturer *, const cricket::CapturedFrame *, sigslot::multi_threaded_local>*, void *> *_field1;
    struct __list_node_base<sigslot::_connection_base2<cricket::VideoCapturer *, const cricket::CapturedFrame *, sigslot::multi_threaded_local>*, void *> *_field2;
};

struct __list_node_base<sigslot::_connection_base2<cricket::VideoCapturer *, cricket::CaptureState, sigslot::single_threaded>*, void *> {
    struct __list_node_base<sigslot::_connection_base2<cricket::VideoCapturer *, cricket::CaptureState, sigslot::single_threaded>*, void *> *_field1;
    struct __list_node_base<sigslot::_connection_base2<cricket::VideoCapturer *, cricket::CaptureState, sigslot::single_threaded>*, void *> *_field2;
};

struct __tree_end_node<std::__1::__tree_node_base<void *>*> {
    struct __tree_node_base<void *> *_field1;
};

struct _opaque_pthread_t;

struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
    struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
        struct __rep {
            union {
                struct __long {
                    char *__data_;
                    unsigned long long __size_;
                    unsigned long long __cap_;
                } __l;
                struct __short {
                    char __data_[23];
                    struct {
                        unsigned char __size_;
                    } ;
                } __s;
                struct __raw {
                    unsigned long long __words[3];
                } __r;
            } ;
        } __first_;
    } __r_;
};

struct bignum_st;

struct bn_blinding_st;

struct bn_mont_ctx_st;

struct crypto_ex_data_st {
    struct stack_st_void *_field1;
    int _field2;
};

struct duration<long long, std::__1::ratio<1, 1000000000>> {
    long long _field1;
};

struct engine_st;

struct in_addr {
    unsigned int _field1;
};

struct list<rtc::scoped_refptr<rtc::RefCountedObject<webrtc::I420Buffer>>, std::__1::allocator<rtc::scoped_refptr<rtc::RefCountedObject<webrtc::I420Buffer>>>> {
    struct __list_node_base<rtc::scoped_refptr<rtc::RefCountedObject<webrtc::I420Buffer>>, void *> _field1;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<rtc::scoped_refptr<rtc::RefCountedObject<webrtc::I420Buffer>>, void *>>> {
        unsigned long long _field1;
    } _field2;
};

struct list<sigslot::_connection_base2<cricket::VideoCapturer *, const cricket::CapturedFrame *, sigslot::multi_threaded_local>*, std::__1::allocator<sigslot::_connection_base2<cricket::VideoCapturer *, const cricket::CapturedFrame *, sigslot::multi_threaded_local>*>> {
    struct __list_node_base<sigslot::_connection_base2<cricket::VideoCapturer *, const cricket::CapturedFrame *, sigslot::multi_threaded_local>*, void *> _field1;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<sigslot::_connection_base2<cricket::VideoCapturer *, const cricket::CapturedFrame *, sigslot::multi_threaded_local>*, void *>>> {
        unsigned long long _field1;
    } _field2;
};

struct list<sigslot::_connection_base2<cricket::VideoCapturer *, cricket::CaptureState, sigslot::single_threaded>*, std::__1::allocator<sigslot::_connection_base2<cricket::VideoCapturer *, cricket::CaptureState, sigslot::single_threaded>*>> {
    struct __list_node_base<sigslot::_connection_base2<cricket::VideoCapturer *, cricket::CaptureState, sigslot::single_threaded>*, void *> _field1;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<sigslot::_connection_base2<cricket::VideoCapturer *, cricket::CaptureState, sigslot::single_threaded>*, void *>>> {
        unsigned long long _field1;
    } _field2;
};

struct map<int, int, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, int>>> {
    struct __tree<std::__1::__value_type<int, int>, std::__1::__map_value_compare<int, std::__1::__value_type<int, int>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, int>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, int>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<int, std::__1::__value_type<int, int>, std::__1::less<int>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<webrtc::StatsReport::StatsValueName, rtc::linked_ptr<webrtc::StatsReport::Value>, std::__1::less<webrtc::StatsReport::StatsValueName>, std::__1::allocator<std::__1::pair<const webrtc::StatsReport::StatsValueName, rtc::linked_ptr<webrtc::StatsReport::Value>>>> {
    struct __tree<std::__1::__value_type<webrtc::StatsReport::StatsValueName, rtc::linked_ptr<webrtc::StatsReport::Value>>, std::__1::__map_value_compare<webrtc::StatsReport::StatsValueName, std::__1::__value_type<webrtc::StatsReport::StatsValueName, rtc::linked_ptr<webrtc::StatsReport::Value>>, std::__1::less<webrtc::StatsReport::StatsValueName>, true>, std::__1::allocator<std::__1::__value_type<webrtc::StatsReport::StatsValueName, rtc::linked_ptr<webrtc::StatsReport::Value>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<webrtc::StatsReport::StatsValueName, rtc::linked_ptr<webrtc::StatsReport::Value>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<webrtc::StatsReport::StatsValueName, std::__1::__value_type<webrtc::StatsReport::StatsValueName, rtc::linked_ptr<webrtc::StatsReport::Value>>, std::__1::less<webrtc::StatsReport::StatsValueName>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct rsa_meth_st;

struct rsa_st {
    int _field1;
    long long _field2;
    struct rsa_meth_st *_field3;
    struct engine_st *_field4;
    struct bignum_st *_field5;
    struct bignum_st *_field6;
    struct bignum_st *_field7;
    struct bignum_st *_field8;
    struct bignum_st *_field9;
    struct bignum_st *_field10;
    struct bignum_st *_field11;
    struct bignum_st *_field12;
    struct crypto_ex_data_st _field13;
    int _field14;
    int _field15;
    struct bn_mont_ctx_st *_field16;
    struct bn_mont_ctx_st *_field17;
    struct bn_mont_ctx_st *_field18;
    char *_field19;
    struct bn_blinding_st *_field20;
    struct bn_blinding_st *_field21;
};

struct scoped_refptr<rtc::RTCCertificate>;

struct scoped_refptr<rtc::RefCountedObject<rtc::BufferT<unsigned char>>> {
    struct RefCountedObject<rtc::BufferT<unsigned char>> *_field1;
};

struct scoped_refptr<webrtc::AudioSourceInterface> {
    struct AudioSourceInterface *ptr_;
};

struct scoped_refptr<webrtc::AudioTrackInterface> {
    struct AudioTrackInterface *_field1;
};

struct scoped_refptr<webrtc::DataChannelInterface> {
    struct DataChannelInterface *ptr_;
};

struct scoped_refptr<webrtc::MediaSourceInterface> {
    struct MediaSourceInterface *ptr_;
};

struct scoped_refptr<webrtc::MediaStreamInterface> {
    struct MediaStreamInterface *ptr_;
};

struct scoped_refptr<webrtc::MediaStreamTrackInterface> {
    struct MediaStreamTrackInterface *ptr_;
};

struct scoped_refptr<webrtc::PeerConnectionFactoryInterface> {
    struct PeerConnectionFactoryInterface *ptr_;
};

struct scoped_refptr<webrtc::PeerConnectionInterface> {
    struct PeerConnectionInterface *ptr_;
};

struct scoped_refptr<webrtc::RtpReceiverInterface> {
    struct RtpReceiverInterface *ptr_;
};

struct scoped_refptr<webrtc::RtpSenderInterface> {
    struct RtpSenderInterface *ptr_;
};

struct scoped_refptr<webrtc::StatsReport::IdBase> {
    struct IdBase *_field1;
};

struct scoped_refptr<webrtc::VideoFrameBuffer> {
    struct VideoFrameBuffer *ptr_;
};

struct scoped_refptr<webrtc::VideoTrackInterface> {
    struct VideoTrackInterface *_field1;
};

struct scoped_refptr<webrtc::VideoTrackSourceInterface> {
    struct VideoTrackSourceInterface *ptr_;
};

struct set<sigslot::_signal_base_interface *, std::__1::less<sigslot::_signal_base_interface *>, std::__1::allocator<sigslot::_signal_base_interface *>> {
    struct __tree<sigslot::_signal_base_interface *, std::__1::less<sigslot::_signal_base_interface *>, std::__1::allocator<sigslot::_signal_base_interface *>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<sigslot::_signal_base_interface *, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::less<sigslot::_signal_base_interface *>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct signal2<cricket::VideoCapturer *, const cricket::CapturedFrame *, sigslot::multi_threaded_local> {
    CDUnknownFunctionPointerType *_field1;
    CDUnknownFunctionPointerType *_field2;
    struct _opaque_pthread_mutex_t {
        long long _field1;
        char _field2[56];
    } _field3;
    struct list<sigslot::_connection_base2<cricket::VideoCapturer *, const cricket::CapturedFrame *, sigslot::multi_threaded_local>*, std::__1::allocator<sigslot::_connection_base2<cricket::VideoCapturer *, const cricket::CapturedFrame *, sigslot::multi_threaded_local>*>> _field4;
};

struct signal2<cricket::VideoCapturer *, cricket::CaptureState, sigslot::single_threaded> {
    CDUnknownFunctionPointerType *_field1;
    CDUnknownFunctionPointerType *_field2;
    struct list<sigslot::_connection_base2<cricket::VideoCapturer *, cricket::CaptureState, sigslot::single_threaded>*, std::__1::allocator<sigslot::_connection_base2<cricket::VideoCapturer *, cricket::CaptureState, sigslot::single_threaded>*>> _field3;
};

struct sockaddr {
    unsigned char _field1;
    unsigned char _field2;
    char _field3[14];
};

struct sockaddr_in {
    unsigned char _field1;
    unsigned char _field2;
    unsigned short _field3;
    struct in_addr _field4;
    char _field5[8];
};

struct stack_st_void;

struct tagVTime {
    union {
        struct {
            unsigned long long _field1;
            unsigned int :4;
            unsigned int :5;
            unsigned int :5;
            unsigned int :6;
            unsigned int :6;
            unsigned int :6;
        } _field1;
        unsigned long long _field2;
        unsigned long long _field3;
    } _field1;
};

struct tag_PaoPaoAttribute;

struct time_point<std::__1::chrono::steady_clock, std::__1::chrono::duration<long long, std::__1::ratio<1, 1000000000>>> {
    struct duration<long long, std::__1::ratio<1, 1000000000>> _field1;
};

struct tm {
    int tm_sec;
    int tm_min;
    int tm_hour;
    int tm_mday;
    int tm_mon;
    int tm_year;
    int tm_wday;
    int tm_yday;
    int tm_isdst;
    long long tm_gmtoff;
    char *tm_zone;
};

struct unique_ptr<_00509::_00206::_00716, std::__1::default_delete<_00509::_00206::_00716>> {
    struct __compressed_pair<_00509::_00206::_00716 *, std::__1::default_delete<_00509::_00206::_00716>> {
        struct _00716 *_field1;
    } _field1;
};

struct unique_ptr<_00509::_00445::_00716, std::__1::default_delete<_00509::_00445::_00716>> {
    struct __compressed_pair<_00509::_00445::_00716 *, std::__1::default_delete<_00509::_00445::_00716>> {
        struct _00716 *_field1;
    } _field1;
};

struct unique_ptr<cricket::VideoFormat, std::__1::default_delete<cricket::VideoFormat>> {
    struct __compressed_pair<cricket::VideoFormat *, std::__1::default_delete<cricket::VideoFormat>> {
        struct VideoFormat *_field1;
    } _field1;
};

struct unique_ptr<cricket::VideoFrameFactory, std::__1::default_delete<cricket::VideoFrameFactory>> {
    struct __compressed_pair<cricket::VideoFrameFactory *, std::__1::default_delete<cricket::VideoFrameFactory>> {
        struct VideoFrameFactory *_field1;
    } _field1;
};

struct unique_ptr<rtc::FileRotatingLogSink, std::__1::default_delete<rtc::FileRotatingLogSink>> {
    struct __compressed_pair<rtc::FileRotatingLogSink *, std::__1::default_delete<rtc::FileRotatingLogSink>> {
        struct FileRotatingLogSink *__first_;
    } __ptr_;
};

struct unique_ptr<rtc::Thread, std::__1::default_delete<rtc::Thread>> {
    struct __compressed_pair<rtc::Thread *, std::__1::default_delete<rtc::Thread>> {
        struct Thread *__first_;
    } __ptr_;
};

struct unique_ptr<webrtc::DataBuffer, std::__1::default_delete<webrtc::DataBuffer>> {
    struct __compressed_pair<webrtc::DataBuffer *, std::__1::default_delete<webrtc::DataBuffer>> {
        struct DataBuffer *__first_;
    } __ptr_;
};

struct unique_ptr<webrtc::DataChannelDelegateAdapter, std::__1::default_delete<webrtc::DataChannelDelegateAdapter>> {
    struct __compressed_pair<webrtc::DataChannelDelegateAdapter *, std::__1::default_delete<webrtc::DataChannelDelegateAdapter>> {
        struct DataChannelDelegateAdapter *__first_;
    } __ptr_;
};

struct unique_ptr<webrtc::IceCandidateInterface, std::__1::default_delete<webrtc::IceCandidateInterface>> {
    struct __compressed_pair<webrtc::IceCandidateInterface *, std::__1::default_delete<webrtc::IceCandidateInterface>> {
        struct IceCandidateInterface *_field1;
    } _field1;
};

struct unique_ptr<webrtc::MediaConstraints, std::__1::default_delete<webrtc::MediaConstraints>> {
    struct __compressed_pair<webrtc::MediaConstraints *, std::__1::default_delete<webrtc::MediaConstraints>> {
        struct MediaConstraints *_field1;
    } _field1;
};

struct unique_ptr<webrtc::PeerConnectionDelegateAdapter, std::__1::default_delete<webrtc::PeerConnectionDelegateAdapter>> {
    struct __compressed_pair<webrtc::PeerConnectionDelegateAdapter *, std::__1::default_delete<webrtc::PeerConnectionDelegateAdapter>> {
        struct PeerConnectionDelegateAdapter *__first_;
    } __ptr_;
};

struct unique_ptr<webrtc::VideoRendererAdapter, std::__1::default_delete<webrtc::VideoRendererAdapter>> {
    struct __compressed_pair<webrtc::VideoRendererAdapter *, std::__1::default_delete<webrtc::VideoRendererAdapter>> {
        struct VideoRendererAdapter *__first_;
    } __ptr_;
};

struct uregex;

struct vector<PoseDirection, std::__1::allocator<PoseDirection>> {
    int *_field1;
    int *_field2;
    struct __compressed_pair<PoseDirection *, std::__1::allocator<PoseDirection>> {
        int *_field1;
    } _field3;
};

struct vector<__weak id<RTCAudioSessionDelegate>, std::__1::allocator<__weak id<RTCAudioSessionDelegate>>> {
    id *__begin_;
    id *__end_;
    struct __compressed_pair<__weak id<RTCAudioSessionDelegate>*, std::__1::allocator<__weak id<RTCAudioSessionDelegate>>> {
        id *__first_;
    } __end_cap_;
};

struct vector<cricket::VideoFormat, std::__1::allocator<cricket::VideoFormat>> {
    struct VideoFormat *_field1;
    struct VideoFormat *_field2;
    struct __compressed_pair<cricket::VideoFormat *, std::__1::allocator<cricket::VideoFormat>> {
        struct VideoFormat *_field1;
    } _field3;
};

struct vector<float, std::__1::allocator<float>> {
    float *_field1;
    float *_field2;
    struct __compressed_pair<float *, std::__1::allocator<float>> {
        float *_field1;
    } _field3;
};

struct vector<ncv::Point2f, std::__1::allocator<ncv::Point2f>> {
    struct Point2f *__begin_;
    struct Point2f *__end_;
    struct __compressed_pair<ncv::Point2f *, std::__1::allocator<ncv::Point2f>> {
        struct Point2f *__first_;
    } __end_cap_;
};

struct vector<rtc::VideoSourceBase::SinkPair, std::__1::allocator<rtc::VideoSourceBase::SinkPair>> {
    struct SinkPair *_field1;
    struct SinkPair *_field2;
    struct __compressed_pair<rtc::VideoSourceBase::SinkPair *, std::__1::allocator<rtc::VideoSourceBase::SinkPair>> {
        struct SinkPair *_field1;
    } _field3;
};

struct vector<rtc::scoped_refptr<rtc::RTCCertificate>, std::__1::allocator<rtc::scoped_refptr<rtc::RTCCertificate>>> {
    struct scoped_refptr<rtc::RTCCertificate> *_field1;
    struct scoped_refptr<rtc::RTCCertificate> *_field2;
    struct __compressed_pair<rtc::scoped_refptr<rtc::RTCCertificate>*, std::__1::allocator<rtc::scoped_refptr<rtc::RTCCertificate>>> {
        struct scoped_refptr<rtc::RTCCertificate> *_field1;
    } _field3;
};

struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> {
    basic_string_a490aa4c *_field1;
    basic_string_a490aa4c *_field2;
    struct __compressed_pair<std::__1::basic_string<char>*, std::__1::allocator<std::__1::basic_string<char>>> {
        basic_string_a490aa4c *_field1;
    } _field3;
};

struct vector<unsigned char, std::__1::allocator<unsigned char>> {
    char *__begin_;
    char *__end_;
    struct __compressed_pair<unsigned char *, std::__1::allocator<unsigned char>> {
        char *__first_;
    } __end_cap_;
};

struct vector<webrtc::PeerConnectionInterface::IceServer, std::__1::allocator<webrtc::PeerConnectionInterface::IceServer>> {
    struct IceServer *_field1;
    struct IceServer *_field2;
    struct __compressed_pair<webrtc::PeerConnectionInterface::IceServer *, std::__1::allocator<webrtc::PeerConnectionInterface::IceServer>> {
        struct IceServer *_field1;
    } _field3;
};

struct vector<webrtc::RtpCodecParameters, std::__1::allocator<webrtc::RtpCodecParameters>> {
    struct RtpCodecParameters *_field1;
    struct RtpCodecParameters *_field2;
    struct __compressed_pair<webrtc::RtpCodecParameters *, std::__1::allocator<webrtc::RtpCodecParameters>> {
        struct RtpCodecParameters *_field1;
    } _field3;
};

struct vector<webrtc::RtpEncodingParameters, std::__1::allocator<webrtc::RtpEncodingParameters>> {
    struct RtpEncodingParameters *_field1;
    struct RtpEncodingParameters *_field2;
    struct __compressed_pair<webrtc::RtpEncodingParameters *, std::__1::allocator<webrtc::RtpEncodingParameters>> {
        struct RtpEncodingParameters *_field1;
    } _field3;
};

#pragma mark Typedef'd Structures

typedef struct {
    _Bool _field1;
    unsigned char _field2;
    _Bool _field3;
    unsigned long long _field4;
} CDStruct_6a6a01a4;

typedef struct {
    unsigned long long _field1;
    id *_field2;
    unsigned long long *_field3;
    unsigned long long _field4[5];
} CDStruct_70511ce9;

typedef struct {
    char *_field1;
    void **_field2;
    unsigned int _field3;
    int _field4;
} CDStruct_19471fff;

typedef struct {
    int width;
    int height;
} CDStruct_79c71658;

typedef struct {
    long long _field1;
    CDUnknownFunctionPointerType _field2;
    CDUnknownFunctionPointerType _field3;
    CDUnknownFunctionPointerType _field4;
    CDUnknownFunctionPointerType _field5;
} CDStruct_70d275a4;

typedef struct {
    long long _field1;
    void *_field2;
    CDUnknownFunctionPointerType _field3;
    CDUnknownFunctionPointerType _field4;
    CDUnknownFunctionPointerType _field5;
} CDStruct_e097db04;

typedef struct {
    long long value;
    int timescale;
    unsigned int flags;
    long long epoch;
} CDStruct_1b6d18a9;

typedef struct {
    long long _field1;
    int _field2;
} CDStruct_87dc826d;

typedef struct {
    long long location;
    long long length;
} CDStruct_627e0f85;

typedef struct {
    CDStruct_1b6d18a9 start;
    CDStruct_1b6d18a9 duration;
} CDStruct_e83c9415;

typedef struct {
    struct CLLocationCoordinate2D _field1;
    struct {
        double _field1;
        double _field2;
    } _field2;
} CDStruct_26e8d939;

typedef struct {
    _Bool has_face;
    float yaw;
    float pitch;
    float blurness_motion;
    float blurness_gaussian;
    struct CGRect face_rect;
    struct CGPoint face_landmarks[7];
    float eye_left_hwratio;
    float eye_right_hwratio;
    float mouth_hwratio;
    float glasses;
    float brightness;
    float integrity;
    int frame_type;
    _Bool not_video;
    float smooth_yaw;
    float smooth_pitch;
    float eye_left_det;
    float eye_right_det;
    float mouth_det;
    float eye_left_occlusion;
    float eye_right_occlusion;
    float mouth_occlusion;
    _Bool eye_blink;
    _Bool mouth_open;
    _Bool pitch3d;
    float quality;
    float smooth_quality;
    _Bool face_too_large;
} CDStruct_e441acf7;

// Ambiguous groups
typedef struct {
    double _field1;
    double _field2;
} CDStruct_c3b9c2ee;

typedef struct {
    double latitude;
    double longitude;
} CDStruct_2c43369c;

typedef struct {
    struct {
        double _field1;
        double _field2;
    } _field1;
    struct {
        double _field1;
        double _field2;
    } _field2;
} CDStruct_90e2a262;

typedef struct {
    CDStruct_2c43369c northEast;
    CDStruct_2c43369c southWest;
} CDStruct_dafdc2cb;

typedef struct {
    struct {
        double x;
        double y;
    } origin;
    struct {
        double width;
        double height;
    } size;
} CDStruct_02837cd9;

typedef struct CVArray<_baidu_vi::CVBundle, _baidu_vi::CVBundle &> {
    CDUnknownFunctionPointerType *_field1;
    struct CVBundle *_field2;
    int _field3;
    int _field4;
    int _field5;
    int _field6;
} CVArray_4812fe32;

typedef struct CVArray<_baidu_vi::CVString, _baidu_vi::CVString &> {
    CDUnknownFunctionPointerType *_field1;
    struct CVString *_field2;
    int _field3;
    int _field4;
    int _field5;
    int _field6;
} CVArray_59d409db;

typedef struct VideoSinkInterface<cricket::VideoFrame> {
    CDUnknownFunctionPointerType *_field1;
} VideoSinkInterface_f63caa8b;

typedef struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
    struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
        struct __rep {
            union {
                struct __long {
                    char *__data_;
                    unsigned long long __size_;
                    unsigned long long __cap_;
                } __l;
                struct __short {
                    char __data_[23];
                    struct {
                        unsigned char __size_;
                    } ;
                } __s;
                struct __raw {
                    unsigned long long __words[3];
                } __r;
            } ;
        } __first_;
    } __r_;
} basic_string_a490aa4c;

typedef struct scoped_refptr<webrtc::AudioSourceInterface> {
    struct AudioSourceInterface *ptr_;
} scoped_refptr_8b29514b;

typedef struct scoped_refptr<webrtc::AudioTrackInterface> {
    struct AudioTrackInterface *_field1;
} scoped_refptr_833c0867;

typedef struct scoped_refptr<webrtc::DataChannelInterface> {
    struct DataChannelInterface *ptr_;
} scoped_refptr_09a33b10;

typedef struct scoped_refptr<webrtc::MediaSourceInterface> {
    struct MediaSourceInterface *ptr_;
} scoped_refptr_74f9e477;

typedef struct scoped_refptr<webrtc::MediaStreamInterface> {
    struct MediaStreamInterface *ptr_;
} scoped_refptr_6217ee82;

typedef struct scoped_refptr<webrtc::MediaStreamTrackInterface> {
    struct MediaStreamTrackInterface *ptr_;
} scoped_refptr_7d7e84a9;

typedef struct scoped_refptr<webrtc::PeerConnectionFactoryInterface> {
    struct PeerConnectionFactoryInterface *ptr_;
} scoped_refptr_1eaeeec2;

typedef struct scoped_refptr<webrtc::PeerConnectionInterface> {
    struct PeerConnectionInterface *ptr_;
} scoped_refptr_1f0d680a;

typedef struct scoped_refptr<webrtc::RtpReceiverInterface> {
    struct RtpReceiverInterface *ptr_;
} scoped_refptr_92bf499b;

typedef struct scoped_refptr<webrtc::RtpSenderInterface> {
    struct RtpSenderInterface *ptr_;
} scoped_refptr_3635276f;

typedef struct scoped_refptr<webrtc::VideoFrameBuffer> {
    struct VideoFrameBuffer *ptr_;
} scoped_refptr_30488dd1;

typedef struct scoped_refptr<webrtc::VideoTrackInterface> {
    struct VideoTrackInterface *_field1;
} scoped_refptr_cae59c25;

typedef struct scoped_refptr<webrtc::VideoTrackSourceInterface> {
    struct VideoTrackSourceInterface *ptr_;
} scoped_refptr_a41c3e90;

typedef struct unique_ptr<webrtc::IceCandidateInterface, std::__1::default_delete<webrtc::IceCandidateInterface>> {
    struct __compressed_pair<webrtc::IceCandidateInterface *, std::__1::default_delete<webrtc::IceCandidateInterface>> {
        struct IceCandidateInterface *_field1;
    } _field1;
} unique_ptr_eddc2ff2;

typedef struct unique_ptr<webrtc::MediaConstraints, std::__1::default_delete<webrtc::MediaConstraints>> {
    struct __compressed_pair<webrtc::MediaConstraints *, std::__1::default_delete<webrtc::MediaConstraints>> {
        struct MediaConstraints *_field1;
    } _field1;
} unique_ptr_ba2c75b1;

typedef struct vector<__weak id<RTCAudioSessionDelegate>, std::__1::allocator<__weak id<RTCAudioSessionDelegate>>> {
    id *__begin_;
    id *__end_;
    struct __compressed_pair<__weak id<RTCAudioSessionDelegate>*, std::__1::allocator<__weak id<RTCAudioSessionDelegate>>> {
        id *__first_;
    } __end_cap_;
} vector_ac2cc512;

typedef struct vector<ncv::Point2f, std::__1::allocator<ncv::Point2f>> {
    struct Point2f *__begin_;
    struct Point2f *__end_;
    struct __compressed_pair<ncv::Point2f *, std::__1::allocator<ncv::Point2f>> {
        struct Point2f *__first_;
    } __end_cap_;
} vector_71c4c584;

#pragma mark Named Unions

union BCPoint {
    struct {
        double _field1;
        double _field2;
    } _field1;
    double _field2[2];
};

union BCTrapezoid {
    struct {
        union BCPoint _field1;
        union BCPoint _field2;
        union BCPoint _field3;
        union BCPoint _field4;
    } _field1;
    union BCPoint _field2[4];
};

#pragma mark Typedef'd Unions

typedef union {
    _Bool valueBool;
    int valueInt32;
    long long valueInt64;
    unsigned int valueUInt32;
    unsigned long long valueUInt64;
    float valueFloat;
    double valueDouble;
    NSData *valueData;
    NSString *valueString;
    GPBMessage *valueMessage;
    int valueEnum;
} CDUnion_88782d86;

typedef union {
    char empty_;
    int value_;
} CDUnion_073fe123;

