//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "GPBMessage.h"

@class KSUUrlPackage, NSMutableArray, NSString;

@interface KSUAudienceStatEvent : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(retain, nonatomic) KSUUrlPackage *URLPackage; // @dynamic URLPackage;
@property(nonatomic) unsigned long long analyzeDnsDuration; // @dynamic analyzeDnsDuration;
@property(nonatomic) unsigned long long analyzeStreamInfoDuration; // @dynamic analyzeStreamInfoDuration;
@property(nonatomic) unsigned long long backgroundDuration; // @dynamic backgroundDuration;
@property(nonatomic) unsigned long long badFpsDuration; // @dynamic badFpsDuration;
@property(nonatomic) unsigned long long bestFpsDuration; // @dynamic bestFpsDuration;
@property(nonatomic) unsigned long long betterFpsDuration; // @dynamic betterFpsDuration;
@property(nonatomic) unsigned long long blockCnt; // @dynamic blockCnt;
@property(nonatomic) unsigned long long bufferTime; // @dynamic bufferTime;
@property(nonatomic) unsigned int cid; // @dynamic cid;
@property(copy, nonatomic) NSString *clientId; // @dynamic clientId;
@property(nonatomic) unsigned long long connectHTTPDuration; // @dynamic connectHTTPDuration;
@property(nonatomic) unsigned long long decodeFirstPackageDuration; // @dynamic decodeFirstPackageDuration;
@property(copy, nonatomic) NSString *dnsProviderName; // @dynamic dnsProviderName;
@property(copy, nonatomic) NSString *dnsResolveHost; // @dynamic dnsResolveHost;
@property(copy, nonatomic) NSString *dnsResolvedIp; // @dynamic dnsResolvedIp;
@property(copy, nonatomic) NSString *dnsResolvedURL; // @dynamic dnsResolvedURL;
@property(copy, nonatomic) NSString *dnsResolverName; // @dynamic dnsResolverName;
@property(nonatomic) unsigned long long dropPackageTotalDuration; // @dynamic dropPackageTotalDuration;
@property(nonatomic) unsigned long long emptyFpsDuration; // @dynamic emptyFpsDuration;
@property(nonatomic) unsigned long long firstFeedTime; // @dynamic firstFeedTime;
@property(nonatomic) unsigned long long firstRaceStartTime; // @dynamic firstRaceStartTime;
@property(nonatomic) unsigned long long firstScreenDropPackageDuration; // @dynamic firstScreenDropPackageDuration;
@property(nonatomic) unsigned long long firstScreenTotalDuration; // @dynamic firstScreenTotalDuration;
@property(nonatomic) unsigned long long fullscreenDuration; // @dynamic fullscreenDuration;
@property(nonatomic) _Bool hasReferURLPackage; // @dynamic hasReferURLPackage;
@property(nonatomic) _Bool hasURLPackage; // @dynamic hasURLPackage;
@property(nonatomic) _Bool initiativeLeave; // @dynamic initiativeLeave;
@property(nonatomic) unsigned int lac; // @dynamic lac;
@property(nonatomic) unsigned long long landscapeDuration; // @dynamic landscapeDuration;
@property(nonatomic) unsigned long long likeCnt; // @dynamic likeCnt;
@property(nonatomic) unsigned long long liveDecodeType; // @dynamic liveDecodeType;
@property(nonatomic) unsigned long long livePlayEndTime; // @dynamic livePlayEndTime;
@property(nonatomic) unsigned long long livePlayStartTime; // @dynamic livePlayStartTime;
@property(copy, nonatomic) NSString *liveStreamHost; // @dynamic liveStreamHost;
@property(copy, nonatomic) NSString *liveStreamId; // @dynamic liveStreamId;
@property(copy, nonatomic) NSString *liveStreamIp; // @dynamic liveStreamIp;
@property(nonatomic) int liveStreamType; // @dynamic liveStreamType;
@property(copy, nonatomic) NSString *liveVideoEncodeInfo; // @dynamic liveVideoEncodeInfo;
@property(nonatomic) unsigned int mcc; // @dynamic mcc;
@property(nonatomic) unsigned int mnc; // @dynamic mnc;
@property(nonatomic) unsigned long long normalFpsDuration; // @dynamic normalFpsDuration;
@property(nonatomic) unsigned long long onlineCntEnter; // @dynamic onlineCntEnter;
@property(nonatomic) unsigned long long onlineCntLeave; // @dynamic onlineCntLeave;
@property(nonatomic) unsigned long long openCodecDuration; // @dynamic openCodecDuration;
@property(nonatomic) unsigned long long openStreamDuration; // @dynamic openStreamDuration;
@property(copy, nonatomic) NSString *playerQosJson; // @dynamic playerQosJson;
@property(nonatomic) unsigned long long portraitDuration; // @dynamic portraitDuration;
@property(nonatomic) unsigned long long preDecodeFirstPackageDuration; // @dynamic preDecodeFirstPackageDuration;
@property(nonatomic) unsigned long long prepareTime; // @dynamic prepareTime;
@property(copy, nonatomic) NSString *pushURL; // @dynamic pushURL;
@property(copy, nonatomic) NSString *raceVersion; // @dynamic raceVersion;
@property(nonatomic) unsigned long long realtimeUploadCnt; // @dynamic realtimeUploadCnt;
@property(nonatomic) unsigned long long receiveFirstPackageDuration; // @dynamic receiveFirstPackageDuration;
@property(retain, nonatomic) KSUUrlPackage *referURLPackage; // @dynamic referURLPackage;
@property(nonatomic) unsigned long long renderFirstPackageDuration; // @dynamic renderFirstPackageDuration;
@property(retain, nonatomic) NSMutableArray *resolutionSlicePackageArray; // @dynamic resolutionSlicePackageArray;
@property(readonly, nonatomic) unsigned long long resolutionSlicePackageArray_Count; // @dynamic resolutionSlicePackageArray_Count;
@property(nonatomic) unsigned long long retryCnt; // @dynamic retryCnt;
@property(nonatomic) unsigned int rssi; // @dynamic rssi;
@property(nonatomic) int screenOrientationLeaveType; // @dynamic screenOrientationLeaveType;
@property(nonatomic) unsigned int screenOrientationSwitchCnt; // @dynamic screenOrientationSwitchCnt;
@property(nonatomic) unsigned long long streamDuration; // @dynamic streamDuration;
@property(nonatomic) unsigned long long stuckCnt; // @dynamic stuckCnt;
@property(nonatomic) unsigned long long totalDuration; // @dynamic totalDuration;
@property(nonatomic) unsigned long long traffic; // @dynamic traffic;
@property(retain, nonatomic) NSMutableArray *trafficSlicePackageArray; // @dynamic trafficSlicePackageArray;
@property(readonly, nonatomic) unsigned long long trafficSlicePackageArray_Count; // @dynamic trafficSlicePackageArray_Count;

@end

