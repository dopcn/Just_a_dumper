//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "BDVoiceRecognitionClient.h"

#import "AVAudioPlayerDelegate-Protocol.h"
#import "HttpConnectionSchedulerDelegate-Protocol.h"
#import "MListenCurrentDBLevelMeterDelegate-Protocol.h"

@class AVAudioPlayer, BDVRDBLevelMeterListener, BDVRHTTPRequestScheduler, BDVRPostData, BDVRThreadSafeQueue, NSArray, NSLock, NSMutableArray, NSMutableData, NSString, NSThread;
@protocol MVoiceRecognitionClientDelegate;

@interface BDVRClientImp : BDVoiceRecognitionClient <MListenCurrentDBLevelMeterDelegate, HttpConnectionSchedulerDelegate, AVAudioPlayerDelegate>
{
    id <MVoiceRecognitionClientDelegate> voiceRecognitionDelegate;
    int result;
    _Bool isVoiceEnd;
    int mfeResult;
    _Bool canRecorder;
    NSMutableData *_sendData;
    NSThread *_MFEThread;
    _Bool isUserEnd;
    _Bool isSendNULLData;
    _Bool isCalledRecordEndOperation;
    int recordBufferByteSize;
    BDVRHTTPRequestScheduler *_httpConnectionScheduler;
    _Bool isSetApiKey;
    _Bool isSetProductId;
    _Bool isSetResourceType;
    NSString *_apiKey;
    NSString *_secretKey;
    int iDebugFlag;
    int iPlayToneFlag;
    _Bool isWifiNet;
    int iCurrentSampleRate;
    int ListenCurrentDBLevelRefreshRate;
    _Bool isListenCurrentDBLevelMeter;
    int iCurrentDBLevelMeter;
    BDVRPostData *_sendToServerAudioData;
    int iCurrrentPreAudioDataStatus;
    int iRecordSampleMode;
    AVAudioPlayer *_avAudioPlayer;
    _Bool isEndHintAudio;
    double recordStartTime;
    long long recordLengthSinceUserEnd;
    long long currentRecordLength;
    _Bool isRecordStart;
    _Bool isSpeakFinish;
    _Bool isRecognitionFinish;
    _Bool isNotifyStartNet;
    NSArray *_searchResultArray;
    NSMutableArray *_inputResultArray;
    _Bool isUseAmr;
    _Bool isEnableDRC;
    int preVoiceRecognitionStauts;
    _Bool isUserCancel;
    BDVRThreadSafeQueue *_recordDataSafeQueue;
    int recordDataIdx;
    _Bool isSendRecordFinishNotifiy;
    _Bool isSendWorkStartNotify;
    _Bool isStartConfigAudioSession;
    struct BDVRAQRecorder *recorder;
    BDVRDBLevelMeterListener *_dBLevelMeterListener;
    _Bool isNeedVad;
    _Bool isNeedServerVad;
    _Bool isNeedCompress;
    _Bool isNeedOriginJsonResult;
    _Bool _isResignActive;
    _Bool _isNeedSignal;
    int recognitionMode;
    long long vadLibType;
    double max_wait_speech_duration;
    struct dispatch_semaphore_s *_waitMicrophonePermission;
    NSLock *_startStopLock;
    NSLock *_semaphoreLock;
    NSString *_resultCorpus_no;
}

+ (void)releaseInstance;
+ (id)sharedInstance;
@property(retain, nonatomic) NSString *resultCorpus_no; // @synthesize resultCorpus_no=_resultCorpus_no;
@property(retain, nonatomic) NSLock *semaphoreLock; // @synthesize semaphoreLock=_semaphoreLock;
@property(retain, nonatomic) NSLock *startStopLock; // @synthesize startStopLock=_startStopLock;
@property(nonatomic) struct dispatch_semaphore_s *waitMicrophonePermission; // @synthesize waitMicrophonePermission=_waitMicrophonePermission;
@property(nonatomic) _Bool isNeedSignal; // @synthesize isNeedSignal=_isNeedSignal;
@property(nonatomic) _Bool isResignActive; // @synthesize isResignActive=_isResignActive;
@property(nonatomic) double max_wait_speech_duration; // @synthesize max_wait_speech_duration;
@property(nonatomic) long long vadLibType; // @synthesize vadLibType;
@property(nonatomic) _Bool isNeedOriginJsonResult; // @synthesize isNeedOriginJsonResult;
@property(nonatomic) _Bool isNeedCompress; // @synthesize isNeedCompress;
@property(nonatomic) _Bool isNeedServerVad; // @synthesize isNeedServerVad;
@property(nonatomic) _Bool isNeedVad; // @synthesize isNeedVad;
@property _Bool isUserCancel; // @synthesize isUserCancel;
@property _Bool isSendRecordFinishNotifiy; // @synthesize isSendRecordFinishNotifiy;
@property(retain) BDVRThreadSafeQueue *recordDataSafeQueue; // @synthesize recordDataSafeQueue=_recordDataSafeQueue;
@property(copy, nonatomic) NSMutableArray *inputResultArray; // @synthesize inputResultArray=_inputResultArray;
@property(copy, nonatomic) NSArray *searchResultArray; // @synthesize searchResultArray=_searchResultArray;
@property long long currentRecordLength; // @synthesize currentRecordLength;
@property long long recordLengthSinceUserEnd; // @synthesize recordLengthSinceUserEnd;
@property double recordStartTime; // @synthesize recordStartTime;
@property(retain, nonatomic) AVAudioPlayer *avAudioPlayer; // @synthesize avAudioPlayer=_avAudioPlayer;
@property(readonly, nonatomic) _Bool isWifiNet; // @synthesize isWifiNet;
@property(nonatomic) int iCurrentSampleRate; // @synthesize iCurrentSampleRate;
@property(copy, nonatomic) NSString *secretKey; // @synthesize secretKey=_secretKey;
@property(copy, nonatomic) NSString *apiKey; // @synthesize apiKey=_apiKey;
@property(nonatomic) int recordBufferByteSize; // @synthesize recordBufferByteSize;
@property(nonatomic) _Bool isUserEnd; // @synthesize isUserEnd;
@property(retain, nonatomic) BDVRDBLevelMeterListener *BDVRDBLevelMeterListener; // @synthesize BDVRDBLevelMeterListener=_dBLevelMeterListener;
@property(retain, nonatomic) BDVRHTTPRequestScheduler *httpConnectionScheduler; // @synthesize httpConnectionScheduler=_httpConnectionScheduler;
@property(retain, nonatomic) NSThread *MFEThread; // @synthesize MFEThread=_MFEThread;
@property(retain, nonatomic) NSMutableData *sendData; // @synthesize sendData=_sendData;
@property(nonatomic) _Bool canRecorder; // @synthesize canRecorder;
@property(readonly) struct BDVRAQRecorder *recorder; // @synthesize recorder;
@property(nonatomic) int recognitionMode; // @synthesize recognitionMode;
@property(nonatomic) id <MVoiceRecognitionClientDelegate> voiceRecognitionDelegate; // @synthesize voiceRecognitionDelegate;
- (void)postInterruptionNotifyWithStatus:(int)arg1;
- (void)set_max_wait_duration:(double)arg1;
- (id)getServerSpeechID;
- (void)setResourceType:(int)arg1;
- (void)disablePuncs:(_Bool)arg1;
- (id)getRecognitionPropertyList;
- (_Bool)judgePropertyList;
- (void)setPropertyList:(id)arg1;
- (void)setCityID:(long long)arg1;
- (void)setProperty:(int)arg1;
- (void)setRecordSampleRate:(int)arg1;
- (void)setParamForKey:(id)arg1 withValue:(id)arg2;
- (void)updateLocation:(id)arg1;
- (void)setBrowserUa:(id)arg1;
- (void)setApiKey:(id)arg1 withSecretKey:(id)arg2;
- (void)setLanguage:(int)arg1;
- (void)setConfig:(id)arg1 withFlag:(_Bool)arg2;
- (void)setServerURL:(id)arg1 withMode:(int)arg2;
- (void)setProductId:(id)arg1;
- (_Bool)setPlayTone:(int)arg1 isPlay:(_Bool)arg2;
- (void)didBecomeActiveNotification:(id)arg1;
- (void)willEnterForegroundNotification:(id)arg1;
- (void)willResignActiveNotification:(id)arg1;
- (void)connectionOverTime:(id)arg1;
- (void)connectinoFail:(id)arg1 withMessage:(id)arg2;
- (long long)convertErrorTypeWithServerError:(long long)arg1;
- (void)sendShangQiaoPackage;
- (id)generateTextForBaiduShangQiao;
- (id)getAbnormalIdxsOfGlobalKey:(id)arg1;
- (long long)getNormalIdxOfGlobalKey:(id)arg1;
- (void)handleErrorBasedOnGlobalKey:(id)arg1 status:(long long)arg2 andIndex:(long long)arg3;
- (void)finishWhenSearchMode:(id)arg1;
- (void)finishWhenShakeMode:(id)arg1;
- (void)finishWhenMusicMode:(id)arg1;
- (void)finishWhenInputMode:(id)arg1;
- (void)flushData:(id)arg1;
- (void)flushDataWithShakeMode:(id)arg1;
- (void)flushDataWithMusicMode:(id)arg1;
- (void)connectionFinish:(id)arg1 withData:(id)arg2;
- (void)MFEProcessNewDataCallback:(id)arg1;
- (void)MFEWithInputModeProcessNewDataCallback:(id)arg1;
- (void)recordFinish;
- (void)MFEThreadRunFinish;
- (void)stopMFE;
- (void)MFEDetectRuningThreadFun;
- (void)MFEDetectWithInputModeRuningThreadFun;
- (void)MFEMusicRecogModeThreadFun;
- (_Bool)startMFE;
- (void)tryDeactivateAudioSession;
- (void)audioPlayerDecodeErrorDidOccur:(id)arg1 error:(id)arg2;
- (void)audioPlayerDidFinishPlaying:(id)arg1 successfully:(_Bool)arg2;
- (void)stoptPlayHintAudio;
- (void)startPlayHintAudioWithIsEnd:(_Bool)arg1;
- (unsigned long long)getDataFromThreadSafeQueue:(void *)arg1 length:(unsigned long long)arg2;
- (int)sendDataToThreadSafeQueue:(void *)arg1 length:(unsigned long long)arg2 isEnd:(_Bool)arg3;
- (void)resetRecordThreadSafeQueue;
- (void)recorderNewDataCallback:(void *)arg1 length:(unsigned long long)arg2;
- (void)recorderNewDataCallback:(void *)arg1 length:(unsigned long long)arg2 isUserData:(_Bool)arg3;
- (void)sendNULLData;
- (void)speakFinish;
- (void)stopRecord;
- (int)startRecord;
- (void)currentDBLevelMeter:(float)arg1;
- (void)cancelListenCurrentDBLevelMeter;
- (int)getCurrentDBLevelMeter;
- (void)setVadLibraryType:(long long)arg1;
- (void)setEnableDRCFlag:(_Bool)arg1;
- (_Bool)getNeedOriginJsonResultFlag;
- (void)setNeedOriginJsonResultFlag:(_Bool)arg1;
- (void)setUseAmrWhenWwanFlag:(_Bool)arg1;
- (void)setNeedCompressFlag:(_Bool)arg1;
- (void)setServerVAD:(_Bool)arg1;
- (void)setLocalVAD:(_Bool)arg1;
- (_Bool)listenCurrentDBLevelMeter;
- (void)finishThisTimeRecognitionAndNotifyObsWithObj:(id)arg1;
- (void)finishThisTimeRecognitionAndNotifyObsInInputModeWithObj:(id)arg1;
- (void)stopThisTimeRecognitionAndNotifyObs;
- (void)newStopThisTimeInRecodThread:(id)arg1;
- (void)currentTimeRecognitionStatusNotifyObs;
- (void)currentTimeRecognitionStatusNotifyObsInMFEDetectWithStatus:(id)arg1;
- (void)currentTimeRecognitionStatusNotifyObsWithStatus:(int)arg1;
- (void)stopVoiceRecognition_;
- (void)stopVoiceRecognition;
- (void)resolveProtocol;
- (void)resolveProductID;
- (int)getRecognitionProperty;
- (_Bool)isNBestResult:(id)arg1;
- (_Bool)isShouldReturnJSON:(id)arg1;
- (void)setCurrentVoiceRecognitionMode:(int)arg1;
- (int)getCurrentVoiceRecognitionMode;
- (int)getCurrentSampleRate;
- (double)recordDurationTime;
- (void)resetAttributes;
- (void)verifyAccessToken:(_Bool)arg1;
- (int)preRequirements:(id)arg1;
- (int)startVoiceRecognition:(id)arg1;
- (int)startVoiceDataRecognition:(long long)arg1 withPropertyGroup:(id)arg2 cityID:(long long)arg3 delegate:(id)arg4;
- (int)verifyApiKey:(id)arg1 withSecretKey:(id)arg2;
- (_Bool)isCanRecorder;
@property(nonatomic) _Bool isCalledRecordEndOperation; // @synthesize isCalledRecordEndOperation;
@property(nonatomic) _Bool isVoiceEnd;
@property(nonatomic) _Bool isSendNULLData; // @synthesize isSendNULLData;
@property(nonatomic) int mfeResult;
@property(nonatomic) int result; // @synthesize result;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

