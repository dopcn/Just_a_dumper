//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <UIKit/UIViewController.h>

#import "CAAnimationDelegate-Protocol.h"
#import "NFChannelScrollGuider-Protocol.h"
#import "NFChannelViewControllerWrapDelegate-Protocol.h"
#import "NFChannelsManagerObserver-Protocol.h"
#import "NFContentsBaseViewControllerDelegate-Protocol.h"
#import "NFSearchViewControllerWrapDelegate-Protocol.h"
#import "NewsFlowChannelTabProtocolDelegate-Protocol.h"
#import "NewsFlowGalleryProxy-Protocol.h"
#import "NewsFlowGuideProxy-Protocol.h"
#import "NewsFlowIMChatProxy-Protocol.h"
#import "NewsFlowManagerObserver-Protocol.h"
#import "NewsFlowVideoProxy-Protocol.h"
#import "NewsFlowViewDelegate-Protocol.h"
#import "NewsFlowWebviewProxy-Protocol.h"
#import "UCListTitleFontObserver-Protocol.h"
#import "UCUTPageProtocol-Protocol.h"

@class NFChannelContentViewController, NFChatExtendCon, NFSearchViewControllerWrap, NSMutableArray, NSString, UIScrollView, UITableView;
@protocol NewsFlowChannelTabProtocol, NewsFlowChannelsDelegate, NewsFlowGalleryProxy, NewsFlowGuideProxy, NewsFlowVideoProxy, NewsFlowWebviewProxy;

@interface NewsFlowChannelsViewController : UIViewController <NFContentsBaseViewControllerDelegate, NewsFlowGalleryProxy, NewsFlowWebviewProxy, NewsFlowIMChatProxy, NewsFlowVideoProxy, NewsFlowViewDelegate, NewsFlowGuideProxy, NFSearchViewControllerWrapDelegate, NFChannelViewControllerWrapDelegate, UCUTPageProtocol, NewsFlowChannelTabProtocolDelegate, NewsFlowManagerObserver, NFChannelScrollGuider, NFChannelsManagerObserver, UCListTitleFontObserver, CAAnimationDelegate>
{
    id <NewsFlowGalleryProxy> _galleryProvider;
    id <NewsFlowWebviewProxy> _webviewProvider;
    id <NewsFlowVideoProxy> _videoProvider;
    id <NewsFlowChannelsDelegate> _delegate;
    id <NewsFlowGuideProxy> _guideProvider;
    NFChannelContentViewController *_activeChannelController;
    UIScrollView *_channelPageView;
    NSMutableArray *_channelCtrItems;
    _Bool m_viewDidLayOut;
    _Bool m_isChannelMode;
    long long m_indexOfChannelPage;
    NFChatExtendCon *_chatExtendCon;
    _Bool _scrollOverSideDidStat;
    _Bool _scrollingStatEnable;
    _Bool _enablePageScroll;
    _Bool _canControlByGoHomeBtn;
    _Bool _canPerformAnimation;
    _Bool _sliderMode;
    _Bool _enableAutoRefresh;
    _Bool _viewIsShowing;
    _Bool _isPageScrollByUser;
    _Bool _channelShouldUpDate;
    _Bool _isViewDidDisappear;
    _Bool _isMarkPageShow;
    _Bool _viewShouldRotate;
    _Bool _isFirstRefreshed;
    _Bool _shouldStopGuid;
    _Bool _lastShowsVerticalScrollIndicator;
    _Bool _lastCanControlByGoHomeBtn;
    _Bool _isDoScrollAnimating;
    NSString *_currentChannel;
    unsigned long long _pageSwitchStyle;
    id <NewsFlowChannelTabProtocol> _channelTab;
    NSMutableArray *_channelsControllerArray;
    NFSearchViewControllerWrap *_searchViewWrap;
}

+ (void)__uc_stat__nfVideo_markChangeTabInMiniWindow;
@property(retain, nonatomic) NFSearchViewControllerWrap *searchViewWrap; // @synthesize searchViewWrap=_searchViewWrap;
@property(nonatomic) _Bool isDoScrollAnimating; // @synthesize isDoScrollAnimating=_isDoScrollAnimating;
@property(nonatomic) _Bool lastCanControlByGoHomeBtn; // @synthesize lastCanControlByGoHomeBtn=_lastCanControlByGoHomeBtn;
@property(nonatomic) _Bool lastShowsVerticalScrollIndicator; // @synthesize lastShowsVerticalScrollIndicator=_lastShowsVerticalScrollIndicator;
@property(retain, nonatomic) NSMutableArray *channelsControllerArray; // @synthesize channelsControllerArray=_channelsControllerArray;
@property(nonatomic) _Bool shouldStopGuid; // @synthesize shouldStopGuid=_shouldStopGuid;
@property(nonatomic) _Bool isFirstRefreshed; // @synthesize isFirstRefreshed=_isFirstRefreshed;
@property(nonatomic) _Bool viewShouldRotate; // @synthesize viewShouldRotate=_viewShouldRotate;
@property(nonatomic) _Bool isMarkPageShow; // @synthesize isMarkPageShow=_isMarkPageShow;
@property(nonatomic) _Bool isViewDidDisappear; // @synthesize isViewDidDisappear=_isViewDidDisappear;
@property(nonatomic) _Bool channelShouldUpDate; // @synthesize channelShouldUpDate=_channelShouldUpDate;
@property(nonatomic) _Bool isPageScrollByUser; // @synthesize isPageScrollByUser=_isPageScrollByUser;
@property(retain, nonatomic) id <NewsFlowChannelTabProtocol> channelTab; // @synthesize channelTab=_channelTab;
@property(retain, nonatomic) NFChannelContentViewController *activeChannelController; // @synthesize activeChannelController=_activeChannelController;
@property(retain, nonatomic) NSMutableArray *channelCtrItems; // @synthesize channelCtrItems=_channelCtrItems;
@property(retain, nonatomic) UIScrollView *channelPageView; // @synthesize channelPageView=_channelPageView;
@property(nonatomic) _Bool viewIsShowing; // @synthesize viewIsShowing=_viewIsShowing;
@property(nonatomic) _Bool enableAutoRefresh; // @synthesize enableAutoRefresh=_enableAutoRefresh;
@property(nonatomic) _Bool sliderMode; // @synthesize sliderMode=_sliderMode;
@property(nonatomic) unsigned long long pageSwitchStyle; // @synthesize pageSwitchStyle=_pageSwitchStyle;
@property(nonatomic) _Bool canPerformAnimation; // @synthesize canPerformAnimation=_canPerformAnimation;
@property(nonatomic) _Bool canControlByGoHomeBtn; // @synthesize canControlByGoHomeBtn=_canControlByGoHomeBtn;
@property(nonatomic) _Bool enablePageScroll; // @synthesize enablePageScroll=_enablePageScroll;
@property(readonly, copy, nonatomic) NSString *currentChannel; // @synthesize currentChannel=_currentChannel;
@property(nonatomic) id <NewsFlowGuideProxy> guideProvider; // @synthesize guideProvider=_guideProvider;
@property(nonatomic) id <NewsFlowChannelsDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) id <NewsFlowVideoProxy> videoProvider; // @synthesize videoProvider=_videoProvider;
@property(nonatomic) id <NewsFlowWebviewProxy> webviewProvider; // @synthesize webviewProvider=_webviewProvider;
@property(nonatomic) id <NewsFlowGalleryProxy> galleryProvider; // @synthesize galleryProvider=_galleryProvider;
- (void)didUCFontSetChanged;
- (id)nextChannel;
- (void)createNextChannelIfNeed;
- (void)stopScrollAnimation;
- (void)doScrollAgain;
- (void)animationDidStop:(id)arg1 finished:(_Bool)arg2;
- (void)doScrollAnimation;
- (void)didChannelsUpdated;
- (void)didChannelListUpdatedByUser;
- (void)didFailWithError:(id)arg1 historicalUpdate:(_Bool)arg2 reqInfo:(id)arg3;
- (void)didLoadDataSucceed:(id)arg1 reqInfo:(id)arg2;
- (_Bool)channelIsReqWithIndex:(long long)arg1;
- (void)channelTab:(id)arg1 didChannelsChangeTo:(id)arg2;
- (void)__uc_stat__nfguiderRelational_channelTabChanged:(id)arg1;
- (void)__uc_stat__newHomeSD_channelTabChanged;
- (void)__uc_stat__newHomeKernel_channelTabChanged_begin;
- (void)__uc_stat__newHomeKernel_channelTabChanged_end;
- (void)channelTab:(id)arg1 fromChannel:(id)arg2 toChannel:(id)arg3;
- (void)createLocalChannelIfNeed;
- (void)triggerAction:(id)arg1;
- (id)getChannelViewControllerWithChannel:(id)arg1 createIfNeeded:(_Bool)arg2;
- (_Bool)isExistChannel:(id)arg1;
- (long long)getChannelIndexWithChannel:(id)arg1;
- (void)detachChannelTab:(id)arg1 checkChannelTapUpdate:(_Bool)arg2;
- (void)attachChannelTab:(id)arg1;
- (void)quitChannelMode;
- (void)realEnterChannelModel;
- (void)enterChannelMode;
- (void)__uc_stat__userbehavior_quitChannelMode;
- (void)__uc_stat__userbehavior_enterChannelMode;
- (void)willQuitChannelMode;
- (void)willEnterChannelMode;
- (void)autoRefreshNewsflowDataIfNeed;
- (void)firstRequstNewDataIfNeed;
- (void)__uc_stat__newhomerelational_refreshDataIfNeed;
- (void)refreshDataIfNeed:(long long)arg1;
- (void)refreshChannelData;
- (void)simulateEndDragging;
- (_Bool)isNewsLoading;
- (_Bool)didReadCurrentItem;
- (void)didChangeTheme:(_Bool)arg1;
- (void)searchNewsWithKeyword:(id)arg1 searchBar:(id)arg2 animated:(_Bool)arg3 animationType:(int)arg4;
- (void)switchToChannelWithNoAnimation:(id)arg1 tryScrollToContentOffset:(struct CGPoint)arg2;
- (_Bool)switchSubChannel:(id)arg1;
- (_Bool)switchChannel:(id)arg1 animate:(_Bool)arg2 showWidge:(_Bool)arg3 userInfo:(id)arg4;
@property(readonly, nonatomic) UITableView *tableView;
- (long long)requestInterval;
- (void)setCurrentChannel:(id)arg1;
- (void)__uc_stat__newhomerelational_requestChannelDataNow;
- (void)requestChannelNewDataAfterChannelSwitch;
- (void)requestChannelDataNow;
- (void)updateChannelsInChannelMode:(_Bool)arg1;
- (void)canControlByGoHome;
- (void)initChannelItems;
- (_Bool)isSingleChannelShowing;
- (void)didReceiveMemoryWarning;
- (void)viewDidLayoutSubviews;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (void)tryUpdateChannels;
- (void)__uc_stat__newHomeSD_viewDidLoad:(_Bool)arg1;
- (void)dealloc;
- (void)__uc_stat__newhomerelational_Init;
- (id)init;
- (void)pageScrollViewDidScrollToTop:(id)arg1;
- (_Bool)pageScrollViewShouldScrollToTop:(id)arg1;
- (void)pageScrollViewDidEndZooming:(id)arg1 withView:(id)arg2 atScale:(double)arg3;
- (void)pageScrollViewWillBeginZooming:(id)arg1 withView:(id)arg2;
- (id)pageViewForZoomingInScrollView:(id)arg1;
- (void)pageScrollViewDidEndScrollingAnimation:(id)arg1;
- (void)__uc_stat__nfguiderRelational_pageScrollViewDidEndDecelerating:(id)arg1;
- (void)pageScrollViewDidEndDecelerating:(id)arg1;
- (void)pageScrollViewWillBeginDecelerating:(id)arg1;
- (void)pageScrollViewDidEndDragging:(id)arg1 willDecelerate:(_Bool)arg2;
- (void)pageScrollViewWillEndDragging:(id)arg1 withVelocity:(struct CGPoint)arg2 targetContentOffset:(inout struct CGPoint *)arg3;
- (void)pageScrollViewWillBeginDragging:(id)arg1;
- (void)pageScrollViewDidZoom:(id)arg1;
- (void)__uc_stat__nfpageScrollViewOnScrollingOverRight;
- (void)__uc_stat__nfpageScrollViewOnScrollingOverLeft;
- (void)pageStatAboutOnScrolling:(unsigned long long)arg1;
- (void)pageScrollViewDidScroll:(id)arg1;
- (void)didContentsTabClicked;
- (void)requestChannelNewData;
- (void)requestChannelDataIfNeed;
- (void)showNotCurrentViews;
- (void)hideNotCurrentViews;
- (void)moveToChannelBeforeRotate;
- (void)resizePageScrollView;
- (void)createPageScrollView;
- (_Bool)switchToChannel:(id)arg1 animate:(_Bool)arg2 cleanUnused:(_Bool)arg3 showWidge:(_Bool)arg4 userInfo:(id)arg5;
- (void)__uc_stat__nfChannelSwitch_switchToChannel;
- (void)updatePlaceHolderView;
- (void)analyzeCurrentChannel:(id)arg1;
- (void)__uc_stat__newHomeKernel_analyzeCurrentChannel_begin;
- (void)__uc_stat__newHomeKernel_analyzeCurrentChannel_end;
- (void)__uc_stat__nfChannelSwitch_analyzeCurrentChannel;
- (void)__uc_stat__newHomeSD_analyzeCurrentChannel;
- (id)createCurrentChannel:(id)arg1 cleanUnused:(_Bool)arg2;
- (id)createSingleChannelController:(id)arg1;
- (void)switchToPage:(long long)arg1 animate:(_Bool)arg2;
- (void)setCurrentChannelTab;
- (long long)indexOfChannel:(id)arg1;
- (double)offsetXForPageIndex:(long long)arg1;
- (long long)pageIndexForOffsetX;
- (id)channelWithIndex:(long long)arg1;
- (id)channelControllerWithIndex:(long long)arg1;
- (id)channelControllerWithName:(id)arg1;
- (void)channelControllerDidQuit:(id)arg1;
- (void)guideToShowProfile;
- (void)guideToWebsite;
- (void)guideToRefresh;
- (id)tabSnapshot;
- (void)searchControllerDidDismiss:(id)arg1;
- (void)searchControllerWillDismiss:(id)arg1;
- (void)searchControllerDidShow:(id)arg1;
- (void)searchControllerWillToShow:(id)arg1;
- (void)showSingleChannel:(id)arg1 userInfo:(id)arg2;
- (void)__uc_stat__nfsearch_newsFlowDidShowSearchBar;
- (void)__uc_stat__nfguiderRelational_newsFlowDidClickSearchBar:(_Bool)arg1 channelType:(id)arg2;
- (void)__uc_stat__nfsearch_searchRegionBecomeAction;
- (void)newsFlowViewDidActiveContainers:(id)arg1;
- (void)newsFlowDidShowSearchBar;
- (void)newsFlowDidClickSearchBar:(id)arg1 withVC:(id)arg2;
- (void)tryGotoChannel:(id)arg1 forceSingleMode:(_Bool)arg2 userInfo:(id)arg3;
- (long long)indexWithChannel:(id)arg1;
- (void)openNewHomePage;
- (void)newsFlowViewHorizontalDidScroll:(double)arg1;
- (void)checkTableViewFrame;
- (void)scrollViewDidScrollToTop:(id)arg1;
- (_Bool)scrollViewShouldScrollToTop:(id)arg1;
- (void)scrollViewDidEndZooming:(id)arg1 withView:(id)arg2 atScale:(double)arg3;
- (void)scrollViewWillBeginZooming:(id)arg1 withView:(id)arg2;
- (id)viewForZoomingInScrollView:(id)arg1;
- (void)scrollViewDidEndScrollingAnimation:(id)arg1;
- (void)scrollViewDidEndDecelerating:(id)arg1;
- (void)scrollViewWillBeginDecelerating:(id)arg1;
- (void)scrollViewDidEndDragging:(id)arg1 willDecelerate:(_Bool)arg2;
- (void)scrollViewWillEndDragging:(id)arg1 withVelocity:(struct CGPoint)arg2 targetContentOffset:(inout struct CGPoint *)arg3;
- (void)scrollViewWillBeginDragging:(id)arg1;
- (void)scrollViewDidZoom:(id)arg1;
- (void)scrollViewDidScroll:(id)arg1;
- (void)newsFlowViewIsRequesting:(_Bool)arg1 channel:(id)arg2;
- (_Bool)newsFlowViewShouldOpenDetail:(id)arg1;
- (_Bool)isInSingleChannelMode;
- (_Bool)isInChannelMode;
- (_Bool)isInWeMedia;
- (_Bool)homePageIsShowing;
- (id)activeChannel;
- (void)removeObserver:(id)arg1;
- (void)addObserver:(id)arg1;
- (void)seekToTime:(double)arg1;
- (void)stop;
- (void)pause;
- (void)play;
@property(readonly, nonatomic) double playbackTime; // @dynamic playbackTime;
@property(readonly, nonatomic) double totalDuration; // @dynamic totalDuration;
- (void)playVideoWithArticleItem:(id)arg1 parentView:(id)arg2 frame:(struct CGRect)arg3 source:(id)arg4;
- (id)currentPlayingItem;
- (_Bool)playerIsUsing;
- (void)playMovie:(id)arg1 container:(id)arg2 recordID:(id)arg3 channelType:(id)arg4 videoFrame:(struct CGRect)arg5 extInfo:(id)arg6;
- (void)baseViewControllerDidViewFristShow:(id)arg1;
- (void)baseViewController:(id)arg1 didLoadMoreData:(id)arg2;
- (void)baseViewController:(id)arg1 didEndScrolling:(id)arg2;
- (void)baseViewController:(id)arg1 didScroll:(id)arg2;
- (_Bool)stopPlayVideoAd;
- (void)baseViewController:(id)arg1 playMovie:(id)arg2 container:(id)arg3 recordID:(id)arg4 channelType:(id)arg5 videoFrame:(struct CGRect)arg6;
- (void)openVideoWebPageWithItem:(id)arg1 preferPageUrl:(id)arg2 andParentView:(id)arg3 enterType:(long long)arg4;
- (void)loadExt:(id)arg1;
- (void)openWMHomePageWithNewsFlowItem:(id)arg1 waStatDict:(id)arg2;
- (void)openWMHomePageWithKolInfo:(id)arg1 waStatDict:(id)arg2;
- (void)loadTargetURL:(id)arg1 withNewsFlowItem:(id)arg2 containerView:(id)arg3 animated:(_Bool)arg4 isSearchEnter:(_Bool)arg5;
- (void)loadTargetURL:(id)arg1 withNewsFlowItem:(id)arg2 containerView:(id)arg3 animated:(_Bool)arg4;
- (void)openNewsFlowIMChatWithNewsFlowItem:(id)arg1;
- (void)showPictureBrowser:(id)arg1 index:(long long)arg2 title:(id)arg3 enterBiz:(long long)arg4 activeCompletion:(CDUnknownBlockType)arg5;
- (void)showPictureBrowser:(id)arg1 index:(long long)arg2 title:(id)arg3 activeCompletion:(CDUnknownBlockType)arg4;
- (void)showPictureBrowser:(id)arg1 index:(long long)arg2 title:(id)arg3;
- (void)showPictureBrowser:(id)arg1 pageURL:(id)arg2 title:(id)arg3 newsFlowItem:(id)arg4;
- (void)viewWillAnimateRotationToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (void)viewWillRotateToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (id)pageName;
- (id)spmBPoint;
- (id)spmAPoint;
- (void)onSuggestionViewDidDisAppear:(id)arg1;
- (void)onSuggestionViewWillAppear:(id)arg1;
- (void)notifySubChannelClicked;
- (void)notifyChannelDidChangedFrom:(id)arg1 to:(id)arg2 showWidge:(_Bool)arg3;
- (void)notifyChannelWillChangedFrom:(id)arg1 to:(id)arg2 showWidge:(_Bool)arg3;
- (void)markPageHide;
- (void)markPageShow;
- (void)delayMarkPageShow:(double)arg1;
- (id)pageShowProperties;
- (void)channelEditViewDismiss;
- (void)channelEditViewShow;
- (void)newsFlowWillExit;
- (void)makeNewsFlowTableViewScrollUnable;
- (void)makeNewsFlowTableViewScrollEnable;
- (void)tryPushSingleChannelNotification:(id)arg1;
- (void)__uc_stat__nfPicModeTryPushSingleChannel:(id)arg1;
- (void)tryPushPicSingleChannelNotification:(id)arg1;
- (void)tryGotoChannelNotification:(id)arg1;
- (void)requireNewsFlowRequestNewData:(id)arg1;
- (void)didEnterBackgroundWithNotification:(id)arg1;
- (void)willBecomeActiveWithNotification:(id)arg1;
- (void)removeEventListener;
- (void)addEventListener;
- (void)removeNotifyObservers;
- (void)addNotifyObservers;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

