//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class NSDictionary, NSMutableArray, NSMutableDictionary, NSString, NSTimer;

@interface AVAnalyticsImpl : NSObject
{
    _Bool _enableAnalytics;
    _Bool _enableCrashReport;
    _Bool _enableIgnoreCrash;
    _Bool _enableDebugLog;
    _Bool _enableReport;
    int _reportPolicy;
    int _messageCount;
    NSDictionary *_ignoreCrashAlertStrings;
    NSString *_appChannel;
    double _sendInterval;
    NSMutableDictionary *_onlineConfig;
    NSDictionary *_customInfo;
    NSString *_currentSessionName;
    double _pauseTimeStamp;
    double _latitude;
    double _longitude;
    NSMutableArray *_sessions;
    NSTimer *_reportTimer;
}

+ (id)myObjectPath;
+ (id)sharedInstance;
@property(retain, nonatomic) NSTimer *reportTimer; // @synthesize reportTimer=_reportTimer;
@property(retain, nonatomic) NSMutableArray *sessions; // @synthesize sessions=_sessions;
@property(nonatomic) double longitude; // @synthesize longitude=_longitude;
@property(nonatomic) double latitude; // @synthesize latitude=_latitude;
@property(nonatomic) double pauseTimeStamp; // @synthesize pauseTimeStamp=_pauseTimeStamp;
@property(nonatomic) int messageCount; // @synthesize messageCount=_messageCount;
@property(copy, nonatomic) NSString *currentSessionName; // @synthesize currentSessionName=_currentSessionName;
@property(retain, nonatomic) NSDictionary *customInfo; // @synthesize customInfo=_customInfo;
@property(retain, nonatomic) NSMutableDictionary *onlineConfig; // @synthesize onlineConfig=_onlineConfig;
@property(nonatomic) double sendInterval; // @synthesize sendInterval=_sendInterval;
@property(copy, nonatomic) NSString *appChannel; // @synthesize appChannel=_appChannel;
@property(nonatomic) _Bool enableReport; // @synthesize enableReport=_enableReport;
@property(retain, nonatomic) NSDictionary *ignoreCrashAlertStrings; // @synthesize ignoreCrashAlertStrings=_ignoreCrashAlertStrings;
@property(nonatomic) _Bool enableDebugLog; // @synthesize enableDebugLog=_enableDebugLog;
@property(nonatomic) _Bool enableIgnoreCrash; // @synthesize enableIgnoreCrash=_enableIgnoreCrash;
@property(nonatomic) _Bool enableCrashReport; // @synthesize enableCrashReport=_enableCrashReport;
@property(nonatomic) _Bool enableAnalytics; // @synthesize enableAnalytics=_enableAnalytics;
- (void).cxx_destruct;
- (void)debugDump;
- (void)clearLocation;
- (void)setLatitude:(double)arg1 longitude:(double)arg2;
- (void)onlineConfigChanged:(id)arg1;
- (_Bool)isLocalEnabled;
- (void)reportTimerFired:(id)arg1;
- (void)sendWithInterval;
- (void)sendWithBatch;
- (void)postRecording;
@property(nonatomic) int reportPolicy; // @synthesize reportPolicy=_reportPolicy;
- (void)resetMessageCount;
- (_Bool)exceedMessageCountThreshold;
- (int)incMessageCount;
- (void)sendSessionsThenClearAll:(_Bool)arg1;
- (void)sendOneSession:(id)arg1;
- (void)sendSessionsThenClose;
- (void)sendSessions;
- (void)cleanSessionFinished;
- (void)clearSessionEventsAndActivities:(id)arg1;
- (void)clearAllSessionData;
- (id)allSessionData;
- (void)sync;
- (id)eventDictionary;
- (id)launchDictionary;
- (void)endEvent:(id)arg1 label:(id)arg2 key:(id)arg3 attributes:(id)arg4;
- (void)beginEvent:(id)arg1 label:(id)arg2 key:(id)arg3 attributes:(id)arg4;
- (void)addEvent:(id)arg1 label:(id)arg2 key:(id)arg3 acc:(long long)arg4 du:(int)arg5 attributes:(id)arg6;
- (void)endActivity:(id)arg1;
- (void)beginActivity:(id)arg1;
- (void)addActivity:(id)arg1 seconds:(int)arg2;
- (void)endSession;
- (void)endSessionWithoutPost;
- (void)beginSession;
- (id)createSession;
- (void)av_applicationDidBecomeActive:(id)arg1;
- (void)av_applicationWillResignActive:(id)arg1;
- (_Bool)shouldRegardAsNewSession;
- (double)threshold;
- (id)currentSession;
- (void)addException:(id)arg1;
- (void)setEnableCrashReport:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;
- (void)_enableCrashReportRunloop;
- (void)loadOnlineConfig:(id)arg1;
- (void)stopRun;
- (id)init;

@end

