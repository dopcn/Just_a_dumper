//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

@class NSMutableArray, NSMutableDictionary;

@interface TangramDataSourceHelper : NSObject
{
    NSMutableDictionary *_layoutTypeMap;
    NSMutableDictionary *_modelTypeMap;
    NSMutableDictionary *_elementTypeMap;
    NSMutableDictionary *_elementPropertyMap;
    NSMutableDictionary *_namespaceLayoutMap;
    NSMutableDictionary *_namespaceElementTypeMap;
    NSMutableDictionary *_namespaceModelDictTransferMap;
    NSMutableArray *_elementForbiddenPropertyArray;
}

+ (float)floatMarginValueByObject:(id)arg1;
+ (id)parseArrayWithRP:(id)arg1;
+ (id)itemModelByJSONDictionary:(id)arg1;
+ (id)styleDictFromMinskByClass:(id)arg1;
+ (unsigned long long)innerModelCountInLayouts:(id)arg1;
+ (unsigned long long)innerViewCountInLayouts:(id)arg1;
+ (id)decodeElementTypeMap:(id)arg1;
+ (id)decodeTypeMap:(id)arg1;
+ (id)generateLayoutIdByOriginLayoutId:(id)arg1 layoutDict:(id)arg2;
+ (_Bool)isTypeRegisted:(id)arg1;
+ (void)registElementType:(id)arg1 className:(id)arg2;
+ (id)fillLayoutProperty:(id)arg1 withDict:(id)arg2 namespace:(id)arg3 tangramBus:(id)arg4;
+ (id)fillLayoutProperty:(id)arg1 withDict:(id)arg2 tangramBus:(id)arg3;
+ (_Bool)objectHasGetter:(id)arg1 propertyName:(id)arg2;
+ (_Bool)objectHasSetter:(id)arg1 propertyName:(id)arg2;
+ (void)fillObjectProperty:(id)arg1 model:(id)arg2 propertyDict:(id)arg3;
+ (id)objectWithPropertyDict:(id)arg1 model:(id)arg2;
+ (void)fillObjectPropertyByObject:(id)arg1 viewModel:(id)arg2;
+ (void)fillObjectPropertyByObject:(id)arg1 key:(id)arg2 value:(id)arg3;
+ (id)elementByModel:(id)arg1 layout:(id)arg2 tangramBus:(id)arg3;
+ (id)elementByModel:(id)arg1;
+ (id)refreshElement:(id)arg1 byModel:(id)arg2 layout:(id)arg3 tangramBus:(id)arg4;
+ (id)refreshElement:(id)arg1 byModel:(id)arg2;
+ (id)modelsWithLayoutDictionary:(id)arg1 namespace:(id)arg2;
+ (id)modelsWithLayoutDictionary:(id)arg1;
+ (id)modelWithDictionary:(id)arg1 namespace:(id)arg2;
+ (id)modelsWithDictArray:(id)arg1;
+ (id)modelWithDictionary:(id)arg1;
+ (id)transferDict:(id)arg1 nameSpace:(id)arg2;
+ (id)layoutsWithArray:(id)arg1 namespace:(id)arg2 tangramBus:(id)arg3;
+ (id)layoutsWithArray:(id)arg1 namespace:(id)arg2;
+ (id)layoutsWithArray:(id)arg1 tangramBus:(id)arg2;
+ (id)layoutsWithArray:(id)arg1;
+ (id)layoutWithDictionary:(id)arg1 namespace:(id)arg2 tangramBus:(id)arg3;
+ (id)layoutWithDictionary:(id)arg1 tangramBus:(id)arg2;
+ (id)layoutWithDictionary:(id)arg1 namespace:(id)arg2;
+ (id)layoutWithDictionary:(id)arg1;
+ (id)sharedInstance;
@property(retain, nonatomic) NSMutableArray *elementForbiddenPropertyArray; // @synthesize elementForbiddenPropertyArray=_elementForbiddenPropertyArray;
@property(retain, nonatomic) NSMutableDictionary *namespaceModelDictTransferMap; // @synthesize namespaceModelDictTransferMap=_namespaceModelDictTransferMap;
@property(retain, nonatomic) NSMutableDictionary *namespaceElementTypeMap; // @synthesize namespaceElementTypeMap=_namespaceElementTypeMap;
@property(retain, nonatomic) NSMutableDictionary *namespaceLayoutMap; // @synthesize namespaceLayoutMap=_namespaceLayoutMap;
@property(retain, nonatomic) NSMutableDictionary *elementPropertyMap; // @synthesize elementPropertyMap=_elementPropertyMap;
@property(retain, nonatomic) NSMutableDictionary *elementTypeMap; // @synthesize elementTypeMap=_elementTypeMap;
@property(retain, nonatomic) NSMutableDictionary *modelTypeMap; // @synthesize modelTypeMap=_modelTypeMap;
@property(retain, nonatomic) NSMutableDictionary *layoutTypeMap; // @synthesize layoutTypeMap=_layoutTypeMap;
- (void).cxx_destruct;
- (void)registerCustomModelDictTransferWithPlistname:(id)arg1 namespace:(id)arg2;
- (void)registerCustomModelWithPlistname:(id)arg1 namespace:(id)arg2;
- (void)registerCustomLayoutWithPlistname:(id)arg1 namespace:(id)arg2;
- (void)addElementMapDict:(id)arg1;
- (void)addModelMapArray:(id)arg1;
- (void)addLayoutMapArray:(id)arg1;
- (id)init;

@end

