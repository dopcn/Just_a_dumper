//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

@class NSArray, NSDictionary, NSError, NSString, TTVPlayerModel, TTVPlayerWatchTimer;
@protocol TTVPlayerStateModelDelegate;

@interface TTVPlayerStateModel : NSObject
{
    _Bool _showVideoFirstFrame;
    _Bool _isUsingLocalURL;
    _Bool _playingWithCache;
    _Bool _isFullScreen;
    _Bool _isRotating;
    _Bool _enableResulutionButtonClicked;
    _Bool _isInDetail;
    _Bool _hasEnterDetail;
    _Bool _isDragging;
    _Bool _forbidLoadingAnimtaion;
    _Bool _sliderEnableDrag;
    _Bool _muted;
    _Bool _banLoading;
    _Bool _titleBarViewAlwaysHide;
    _Bool _showTitleInNonFullscreen;
    _Bool _hasPlayed;
    _Bool _enableRotate;
    _Bool _isAutoPlaying;
    _Bool _isShowingTrafficAlert;
    _Bool _isFullScreenButtonType;
    _Bool _disableTrafficAlert;
    _Bool _disableExitFullScreenWhenPlayEnd;
    _Bool _enableRotateWhenPlayEnd;
    _Bool _pasterFadeAnimationExecuting;
    _Bool _changeResolutionAlertShowed;
    _Bool _resolutionAlertShowed;
    _Bool _enableSmothlySwitch;
    _Bool _isChangingResolution;
    float _bannerHeight;
    NSObject<TTVPlayerStateModelDelegate> *_delegate;
    TTVPlayerModel *_playerModel;
    NSDictionary *_extraDic;
    NSError *_error;
    long long _videoSize;
    long long _minVideoSize;
    double _duration;
    double _currentPlaybackTime;
    double _playableTime;
    double _watchedProgress;
    double _cacheProgress;
    long long _playbackState;
    unsigned long long _loadingState;
    long long _currentResolution;
    NSArray *_supportedResolutionTypes;
    long long _resolutionState;
    unsigned long long _tipType;
    unsigned long long _toolBarState;
    long long _exitFullScreeenType;
    NSString *_trackLabel;
    long long _playStateVirtualStack;
    NSArray *_insertTimes;
    TTVPlayerWatchTimer *_watchTimer;
}

+ (id)typeStrings;
+ (id)typeStringForType:(long long)arg1;
@property(nonatomic) __weak TTVPlayerWatchTimer *watchTimer; // @synthesize watchTimer=_watchTimer;
@property(nonatomic) _Bool isChangingResolution; // @synthesize isChangingResolution=_isChangingResolution;
@property(nonatomic) _Bool enableSmothlySwitch; // @synthesize enableSmothlySwitch=_enableSmothlySwitch;
@property(nonatomic) _Bool resolutionAlertShowed; // @synthesize resolutionAlertShowed=_resolutionAlertShowed;
@property(nonatomic) _Bool changeResolutionAlertShowed; // @synthesize changeResolutionAlertShowed=_changeResolutionAlertShowed;
@property(nonatomic) _Bool pasterFadeAnimationExecuting; // @synthesize pasterFadeAnimationExecuting=_pasterFadeAnimationExecuting;
@property(retain, nonatomic) NSArray *insertTimes; // @synthesize insertTimes=_insertTimes;
@property(nonatomic) _Bool enableRotateWhenPlayEnd; // @synthesize enableRotateWhenPlayEnd=_enableRotateWhenPlayEnd;
@property(nonatomic) _Bool disableExitFullScreenWhenPlayEnd; // @synthesize disableExitFullScreenWhenPlayEnd=_disableExitFullScreenWhenPlayEnd;
@property(nonatomic) _Bool disableTrafficAlert; // @synthesize disableTrafficAlert=_disableTrafficAlert;
@property(nonatomic) long long playStateVirtualStack; // @synthesize playStateVirtualStack=_playStateVirtualStack;
@property(nonatomic) _Bool isFullScreenButtonType; // @synthesize isFullScreenButtonType=_isFullScreenButtonType;
@property(nonatomic) _Bool isShowingTrafficAlert; // @synthesize isShowingTrafficAlert=_isShowingTrafficAlert;
@property(nonatomic) float bannerHeight; // @synthesize bannerHeight=_bannerHeight;
@property(nonatomic) _Bool isAutoPlaying; // @synthesize isAutoPlaying=_isAutoPlaying;
@property(nonatomic) _Bool enableRotate; // @synthesize enableRotate=_enableRotate;
@property(nonatomic) _Bool hasPlayed; // @synthesize hasPlayed=_hasPlayed;
@property(copy, nonatomic) NSString *trackLabel; // @synthesize trackLabel=_trackLabel;
@property(nonatomic) long long exitFullScreeenType; // @synthesize exitFullScreeenType=_exitFullScreeenType;
@property(nonatomic) unsigned long long toolBarState; // @synthesize toolBarState=_toolBarState;
@property(nonatomic) unsigned long long tipType; // @synthesize tipType=_tipType;
@property(nonatomic) long long resolutionState; // @synthesize resolutionState=_resolutionState;
@property(copy, nonatomic) NSArray *supportedResolutionTypes; // @synthesize supportedResolutionTypes=_supportedResolutionTypes;
@property(nonatomic) _Bool showTitleInNonFullscreen; // @synthesize showTitleInNonFullscreen=_showTitleInNonFullscreen;
@property(nonatomic) _Bool titleBarViewAlwaysHide; // @synthesize titleBarViewAlwaysHide=_titleBarViewAlwaysHide;
@property(nonatomic) _Bool banLoading; // @synthesize banLoading=_banLoading;
@property(nonatomic) _Bool muted; // @synthesize muted=_muted;
@property(nonatomic) long long currentResolution; // @synthesize currentResolution=_currentResolution;
@property(nonatomic) _Bool sliderEnableDrag; // @synthesize sliderEnableDrag=_sliderEnableDrag;
@property(nonatomic) _Bool forbidLoadingAnimtaion; // @synthesize forbidLoadingAnimtaion=_forbidLoadingAnimtaion;
@property(nonatomic) unsigned long long loadingState; // @synthesize loadingState=_loadingState;
@property(nonatomic) long long playbackState; // @synthesize playbackState=_playbackState;
@property(nonatomic) _Bool isDragging; // @synthesize isDragging=_isDragging;
@property(nonatomic) _Bool hasEnterDetail; // @synthesize hasEnterDetail=_hasEnterDetail;
@property(nonatomic) _Bool isInDetail; // @synthesize isInDetail=_isInDetail;
@property(nonatomic) _Bool enableResulutionButtonClicked; // @synthesize enableResulutionButtonClicked=_enableResulutionButtonClicked;
@property(nonatomic) _Bool isRotating; // @synthesize isRotating=_isRotating;
@property(nonatomic) _Bool isFullScreen; // @synthesize isFullScreen=_isFullScreen;
@property(nonatomic) double cacheProgress; // @synthesize cacheProgress=_cacheProgress;
@property(nonatomic) double watchedProgress; // @synthesize watchedProgress=_watchedProgress;
@property(nonatomic) double playableTime; // @synthesize playableTime=_playableTime;
@property(nonatomic) double currentPlaybackTime; // @synthesize currentPlaybackTime=_currentPlaybackTime;
@property(nonatomic) double duration; // @synthesize duration=_duration;
@property(nonatomic) _Bool playingWithCache; // @synthesize playingWithCache=_playingWithCache;
@property(nonatomic) _Bool isUsingLocalURL; // @synthesize isUsingLocalURL=_isUsingLocalURL;
@property(nonatomic) long long minVideoSize; // @synthesize minVideoSize=_minVideoSize;
@property(nonatomic) long long videoSize; // @synthesize videoSize=_videoSize;
@property(retain, nonatomic) NSError *error; // @synthesize error=_error;
@property(nonatomic) _Bool showVideoFirstFrame; // @synthesize showVideoFirstFrame=_showVideoFirstFrame;
@property(retain, nonatomic) NSDictionary *extraDic; // @synthesize extraDic=_extraDic;
@property(retain, nonatomic) TTVPlayerModel *playerModel; // @synthesize playerModel=_playerModel;
@property(nonatomic) __weak NSObject<TTVPlayerStateModelDelegate> *delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (id)minResolution;
- (id)ttv_logV3CommonDic;
- (id)ttv_position;
- (long long)ttv_playPercent;
- (_Bool)ttv_isPlaybackEnded;
@property(readonly, nonatomic) _Bool isPlaybackEnded;
@property(readonly, nonatomic) long long playPercent;
@property(readonly, nonatomic) double totalWatchTime;
- (void)setPlayerWatchTimer:(id)arg1;
- (void)dealloc;
- (id)init;

@end

