//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

@class AVPlayerItemVideoOutput, AVURLAsset, NSArray, NSDate, NSString, NSTimer, NSURL, QLAVPlayer, QLAVPlayerItem, QZResourceLoader;

@interface QQMediaPlayerController : NSObject
{
    _Bool shouldAutoplay;
    _Bool wasScrubbed;
    _Bool wasNeedCancedCache;
    _Bool wasItem0AddedObserver;
    _Bool wasItem1AddedObserver;
    _Bool wasPlayer0AddedObserver;
    _Bool wasPlayer0AddedTimerObserver;
    _Bool wasPlayer1AddedTimerObserver;
    _Bool itemNeedSeek;
    _Bool needRequestFailedItem;
    _Bool wasUpdatedUrls;
    _Bool sysVersionIs43AndLater;
    _Bool sysVersionIs50AndLater;
    _Bool sysVersionIs60AndLater;
    _Bool advancePLayMediaEable;
    _Bool manualPaused;
    _Bool maualPlayed;
    _Bool initalPlayed;
    _Bool isReduceFilesArray;
    _Bool shouldCheckAssetKeyStatus;
    _Bool enableVideoScreenShot;
    _Bool _fullscreen;
    _Bool _enableResoureLoader;
    _Bool _muted;
    _Bool _cacheOederFildDidCached;
    _Bool _wasLayerReadyForDisplayObserver;
    _Bool _player0ReadyForDisplay;
    _Bool _player1ReadyForDisplay;
    _Bool _playedFinished;
    int _playId;
    NSURL *contentURL;
    double duration;
    double playableDuration;
    long long checkUrlState;
    long long requestState;
    long long loadState;
    long long playbackState;
    long long seekState;
    double initialPlaybackTime;
    id delegate;
    NSString *version;
    double currentPlaybackTime;
    QLAVPlayer *player;
    QLAVPlayer *player0;
    QLAVPlayer *player1;
    QLAVPlayerItem *playerItem;
    QLAVPlayerItem *cacheItem;
    AVURLAsset *cacheAsset;
    long long selectCachePlayer;
    long long selectPlayingPlayer;
    long long mediaUrlType;
    NSArray *fileUrlsArray;
    NSArray *times;
    long long cacheOrder;
    long long playToOrder;
    long long playingOrder;
    long long seekOrder;
    unsigned long long mediaQuence;
    double itemNeedSeekTime;
    double scrubedTime;
    double preItemsTime;
    double preCacheItemsTime;
    id timeObserver0;
    id timeObserver1;
    NSTimer *protectPlayTimer;
    long long retryConnectNums;
    double nextAdvanceTime;
    NSTimer *checkPlayedUsedTimer;
    long long networkType;
    long long needCacheFilesNum;
    double seekNeedToWaitingTime;
    AVPlayerItemVideoOutput *hlsVideoOutput;
    long long _sessionId;
    long long _releaseModel;
    double _customNextAdvanceTime;
    double _downloadSpeed;
    id _viewDelegate;
    long long _forceSelectPlayerIndex;
    double _startPrepare;
    QZResourceLoader *_resourceLoader0;
    QZResourceLoader *_resourceLoader1;
    struct CGSize naturalSize;
    struct CachedFailedData cachedFailedData;
}

@property(nonatomic) _Bool playedFinished; // @synthesize playedFinished=_playedFinished;
@property(retain, nonatomic) QZResourceLoader *resourceLoader1; // @synthesize resourceLoader1=_resourceLoader1;
@property(retain, nonatomic) QZResourceLoader *resourceLoader0; // @synthesize resourceLoader0=_resourceLoader0;
@property(nonatomic) double startPrepare; // @synthesize startPrepare=_startPrepare;
@property(nonatomic) _Bool player1ReadyForDisplay; // @synthesize player1ReadyForDisplay=_player1ReadyForDisplay;
@property(nonatomic) _Bool player0ReadyForDisplay; // @synthesize player0ReadyForDisplay=_player0ReadyForDisplay;
@property(nonatomic) _Bool wasLayerReadyForDisplayObserver; // @synthesize wasLayerReadyForDisplayObserver=_wasLayerReadyForDisplayObserver;
@property(nonatomic) _Bool cacheOederFildDidCached; // @synthesize cacheOederFildDidCached=_cacheOederFildDidCached;
@property(nonatomic) long long forceSelectPlayerIndex; // @synthesize forceSelectPlayerIndex=_forceSelectPlayerIndex;
@property(retain, nonatomic) id viewDelegate; // @synthesize viewDelegate=_viewDelegate;
@property(readonly, nonatomic) double downloadSpeed; // @synthesize downloadSpeed=_downloadSpeed;
@property(nonatomic, getter=isMuted) _Bool muted; // @synthesize muted=_muted;
@property(nonatomic) double customNextAdvanceTime; // @synthesize customNextAdvanceTime=_customNextAdvanceTime;
@property(nonatomic) _Bool enableResoureLoader; // @synthesize enableResoureLoader=_enableResoureLoader;
@property(nonatomic) int playId; // @synthesize playId=_playId;
@property(nonatomic) long long releaseModel; // @synthesize releaseModel=_releaseModel;
@property(nonatomic) long long sessionId; // @synthesize sessionId=_sessionId;
@property(nonatomic, getter=isFullscreen) _Bool fullscreen; // @synthesize fullscreen=_fullscreen;
@property(retain, nonatomic) AVPlayerItemVideoOutput *hlsVideoOutput; // @synthesize hlsVideoOutput;
@property(nonatomic) _Bool enableVideoScreenShot; // @synthesize enableVideoScreenShot;
@property(nonatomic) _Bool shouldCheckAssetKeyStatus; // @synthesize shouldCheckAssetKeyStatus;
@property(nonatomic) double seekNeedToWaitingTime; // @synthesize seekNeedToWaitingTime;
@property(nonatomic) struct CachedFailedData cachedFailedData; // @synthesize cachedFailedData;
@property(nonatomic) _Bool isReduceFilesArray; // @synthesize isReduceFilesArray;
@property(nonatomic) long long needCacheFilesNum; // @synthesize needCacheFilesNum;
@property(nonatomic) long long networkType; // @synthesize networkType;
@property(retain, nonatomic) NSTimer *checkPlayedUsedTimer; // @synthesize checkPlayedUsedTimer;
@property(nonatomic) _Bool initalPlayed; // @synthesize initalPlayed;
@property(nonatomic) _Bool maualPlayed; // @synthesize maualPlayed;
@property(nonatomic) _Bool manualPaused; // @synthesize manualPaused;
@property(nonatomic) _Bool advancePLayMediaEable; // @synthesize advancePLayMediaEable;
@property(nonatomic) double nextAdvanceTime; // @synthesize nextAdvanceTime;
@property(nonatomic) _Bool sysVersionIs60AndLater; // @synthesize sysVersionIs60AndLater;
@property(nonatomic) _Bool sysVersionIs50AndLater; // @synthesize sysVersionIs50AndLater;
@property(nonatomic) _Bool sysVersionIs43AndLater; // @synthesize sysVersionIs43AndLater;
@property(nonatomic) long long retryConnectNums; // @synthesize retryConnectNums;
@property(retain, nonatomic) NSTimer *protectPlayTimer; // @synthesize protectPlayTimer;
@property(retain, nonatomic) id timeObserver1; // @synthesize timeObserver1;
@property(retain, nonatomic) id timeObserver0; // @synthesize timeObserver0;
@property(nonatomic) double preCacheItemsTime; // @synthesize preCacheItemsTime;
@property(nonatomic) double preItemsTime; // @synthesize preItemsTime;
@property(nonatomic) double scrubedTime; // @synthesize scrubedTime;
@property(nonatomic) _Bool wasUpdatedUrls; // @synthesize wasUpdatedUrls;
@property(nonatomic) _Bool needRequestFailedItem; // @synthesize needRequestFailedItem;
@property(nonatomic) double itemNeedSeekTime; // @synthesize itemNeedSeekTime;
@property(nonatomic) _Bool itemNeedSeek; // @synthesize itemNeedSeek;
@property(nonatomic) _Bool wasPlayer1AddedTimerObserver; // @synthesize wasPlayer1AddedTimerObserver;
@property(nonatomic) _Bool wasPlayer0AddedTimerObserver; // @synthesize wasPlayer0AddedTimerObserver;
@property(nonatomic) _Bool wasPlayer0AddedObserver; // @synthesize wasPlayer0AddedObserver;
@property(nonatomic) _Bool wasItem1AddedObserver; // @synthesize wasItem1AddedObserver;
@property(nonatomic) _Bool wasItem0AddedObserver; // @synthesize wasItem0AddedObserver;
@property(nonatomic) _Bool wasNeedCancedCache; // @synthesize wasNeedCancedCache;
@property(nonatomic) _Bool wasScrubbed; // @synthesize wasScrubbed;
@property(nonatomic) unsigned long long mediaQuence; // @synthesize mediaQuence;
@property(nonatomic) long long seekOrder; // @synthesize seekOrder;
@property(nonatomic) long long playingOrder; // @synthesize playingOrder;
@property(readonly, nonatomic) long long playToOrder; // @synthesize playToOrder;
@property(nonatomic) long long cacheOrder; // @synthesize cacheOrder;
@property(retain, nonatomic) NSArray *times; // @synthesize times;
@property(retain, nonatomic) NSArray *fileUrlsArray; // @synthesize fileUrlsArray;
@property(nonatomic) long long mediaUrlType; // @synthesize mediaUrlType;
@property(nonatomic) long long selectPlayingPlayer; // @synthesize selectPlayingPlayer;
@property(nonatomic) long long selectCachePlayer; // @synthesize selectCachePlayer;
@property(retain, nonatomic) AVURLAsset *cacheAsset; // @synthesize cacheAsset;
@property(retain, nonatomic) QLAVPlayerItem *cacheItem; // @synthesize cacheItem;
@property(retain, nonatomic) QLAVPlayerItem *playerItem; // @synthesize playerItem;
@property(retain, nonatomic) QLAVPlayer *player1; // @synthesize player1;
@property(retain, nonatomic) QLAVPlayer *player0; // @synthesize player0;
@property(nonatomic) __weak QLAVPlayer *player; // @synthesize player;
@property(copy, nonatomic) NSString *version; // @synthesize version;
@property(nonatomic) __weak id delegate; // @synthesize delegate;
@property(nonatomic) _Bool shouldAutoplay; // @synthesize shouldAutoplay;
@property(nonatomic) double initialPlaybackTime; // @synthesize initialPlaybackTime;
@property(readonly, nonatomic) long long seekState; // @synthesize seekState;
@property(readonly, nonatomic) long long playbackState; // @synthesize playbackState;
@property(readonly, nonatomic) long long loadState; // @synthesize loadState;
@property(readonly, nonatomic) long long requestState; // @synthesize requestState;
@property(readonly, nonatomic) long long checkUrlState; // @synthesize checkUrlState;
@property(readonly, nonatomic) struct CGSize naturalSize; // @synthesize naturalSize;
@property(retain, nonatomic) NSURL *contentURL; // @synthesize contentURL;
- (void).cxx_destruct;
- (void)player:(id)arg1 replaceCurrentItemWithPlayerItem:(id)arg2;
- (void)setBgColor:(id)arg1;
- (void)prepare:(id)arg1;
- (id)error;
- (id)asset;
- (id)getVideoFillMode;
- (void)setVideoFillMode:(id)arg1;
@property(readonly, nonatomic) double duration; // @synthesize duration;
- (void)seek:(double)arg1;
- (float)rate;
- (_Bool)isPlaying;
- (CDStruct_1b6d18a9)currentTime;
- (_Bool)readyToPlay:(_Bool)arg1;
@property(readonly, nonatomic) NSDate *currentDate;
- (void)countPlayedTime:(id)arg1;
- (void)manualSwithPlayersView:(id)arg1;
- (void)monitorCurrentPlayingStatus:(id)arg1;
- (void)playerItemDidReachEnd:(id)arg1;
- (void)starttoPLayTheNextMediaFile:(id)arg1;
- (void)changeOrderValues;
- (void)monitorPlayingStateWithItemEndToPlay;
- (void)monitorPlayingStateWithItemEnd;
- (void)removeObserversAfterItemEnd;
- (void)changePlayerLoadState:(long long)arg1 withError:(id)arg2 withMediaCacheOrder:(long long)arg3 withIsCurrentMediaFile:(_Bool)arg4;
- (void)endPlayerCache;
- (void)changePlayerRequestState:(long long)arg1 withError:(id)arg2 withMediaRequestOrder:(long long)arg3 withIsCurrentMediaFile:(_Bool)arg4;
- (void)changeStructCachedFailedData:(_Bool)arg1 withCacheOrder:(long long)arg2;
- (void)changeWhichPlayerToPlay:(_Bool)arg1 withJumpTime:(CDStruct_1b6d18a9)arg2;
- (void)changeWhichPlayerIsCurrentPlayer;
- (void)removeOtherPlayerResourceWithPlayerIndex:(long long)arg1;
- (void)removeNotificaton:(id)arg1;
- (void)removePlayerItemObserver:(id)arg1 withPlayerObserver:(id)arg2;
- (void)removePlayerObserver:(id)arg1;
- (void)removeAVPlayerItemObservers:(id)arg1;
- (void)removePlayerTimeObserverImp;
- (void)removePlayerTimeObserver;
- (void)clearPlayerResource:(id)arg1;
- (void)realInitScrubberTimer;
- (void)initScrubberTimer;
- (void)playerAddTimeObserver:(id)arg1 withTimeObserverIndex:(long long)arg2;
- (void)syncScrubber;
- (void)checkCurrentPlayingStatus;
- (void)checkPlayingIsNormalInSeperate:(id)arg1;
- (void)mediaPLayerOccuredFailed:(id)arg1;
- (void)startPlayWithInterval:(id)arg1;
- (void)startToCacheNextMP4;
- (CDStruct_1b6d18a9)playerItemDuration;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)checkDuration;
- (void)playerCacheStateDidChangeWithError:(id)arg1 withFileCacheOrder:(long long)arg2 withCacheState:(long long)arg3 withIsCurrentPlayFile:(_Bool)arg4;
- (_Bool)checkThePlayerBufferState:(id)arg1;
- (void)startConnectMediaFileWithCancelOtherRequests;
- (void)resetValuesInner:(_Bool)arg1;
- (void)resetValues;
- (void)removeReadyToDisplayObserver;
- (void)makePlayerToNil;
- (void)makePlayer1ToNil;
- (void)makePlayer0ToNil;
- (void)controlPlayerItem:(id)arg1 withJumpTime:(double)arg2 withChangePlayState:(_Bool)arg3;
- (void)switchPlayerAndView:(_Bool)arg1 withJumpTime:(CDStruct_1b6d18a9)arg2;
- (void)removeHLSVideoOutput;
- (id)getMp4CurrentShots:(long long)arg1 timeTolerance:(double)arg2 interval:(double)arg3 error:(id *)arg4;
- (id)getHLSCurrentShot;
- (id)getCurrentVideoScreenShot;
- (void)cancelTheAssetLoading:(id)arg1;
- (void)deleteResourceLoader;
- (void)closeMediaPlayerReduce;
- (void)closeMediaPlayer;
- (void)mediaPlayerRetryRequestUrls:(double)arg1;
- (void)slideHLS:(double)arg1;
- (void)updateContentsUrls:(id)arg1 withTimes:(id)arg2 withStartCacheNextFile:(_Bool)arg3;
- (void)updateContentsUrls:(id)arg1;
- (void)mediaContentsUrls:(id)arg1 withContentTimes:(id)arg2 withContentType:(long long)arg3;
- (void)dealloc;
- (id)init;
- (void)checkTheInitaTimeToSeekItem;
- (void)addPlayItemByURL:(id)arg1 withCacheOrder:(long long)arg2;
- (void)prepareToPlayAsset:(id)arg1 withMediaUrl:(id)arg2 withKeys:(id)arg3 withCacheOrder:(long long)arg4 withMediaQuence:(long long)arg5;
- (id)getResourceLoadFromAsset:(id)arg1 withCacheOrder:(long long)arg2;
- (void)makeFirstPlayer:(id)arg1 withSecondPlayer:(id)arg2 withCacheOrder:(long long)arg3;
- (void)addobserverForPlayerItem:(id)arg1 withForPlayer:(id)arg2;
- (long long)mediaPlayerCacheState;
@property(readonly, nonatomic) double playableDuration; // @synthesize playableDuration;
@property(nonatomic) double currentPlaybackTime; // @synthesize currentPlaybackTime;
- (void)slideMP4:(double)arg1;
@property(readonly, nonatomic) NSArray *urls;
- (long long)countMP4Order:(double)arg1;
- (double)countPasedMP4Times:(long long)arg1;
- (void)cancelTheCachingItem:(long long)arg1 withToCacheOrder:(long long)arg2;
- (void)cancelFailedCachingItem:(long long)arg1 withToCacheOrder:(long long)arg2;
- (void)switchToPlay:(long long)arg1 withTime:(CDStruct_1b6d18a9)arg2;
- (void)modieyStates;
- (void)removeAllObserversAndStopPlayersReduce;
- (void)removeAllObserversAndStopPlayers;
- (_Bool)isStoped;
- (void)stop;
- (void)pause;
- (void)play;
- (void)tryToPlay;
- (_Bool)isLayerReadyToDisplay;
- (void)changePlayerPlaybackStateToPause;
- (_Bool)changePlayerPlaybackStateToPlaying;
- (void)cancelPlayerItemPending:(id)arg1 WithIOSVersion:(double)arg2;
- (void)handleTimedMetadata:(id)arg1;
- (void)checkRedirect:(id)arg1;

@end

