//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

@class IFlyPcmPlayer;

#pragma mark Function Pointers and Blocks

typedef void (*CDUnknownFunctionPointerType)(void); // return type and parameters are unknown

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct ABDetectInfo {
    struct CGRect faceSize;
    struct CGRect position;
    int faceCount;
    float yaw;
    float pitch;
    float motionBlur;
    float gaussianBlur;
    float leftEyeHwratio;
    float rightEyeHwratio;
    float mouthHwratio;
    float wearGlasses;
    float brightness;
    float integrity;
    _Bool notVideo;
    float smoothYaw;
    float smoothPitch;
    _Bool eyeBlink;
    _Bool mouthOpen;
    _Bool pitch3d;
    float quality;
    float staticQuality;
    float frontbright;
    float backbright;
    float faceshift;
    float inputImageWidth;
    float inputImageHeight;
    float pitchScore;
    float yawScore;
    float mouthScore;
    float blinkScore;
    float landmarkScore;
    float brightDiff;
    float backHightlight;
    float faceSpeed;
    int checkResult;
    char *exts;
};

struct ABDetectResult {
    _Bool faceExist;
    int failReason;
    int promptMessage;
    char *failLog;
    struct LivenessStatus status;
    struct ImageBuffer imagebuffer;
    char *pBigImage;
    char *pLocalImage;
    char *pOriginImage;
    char *pGlobalImage;
    char *pActionImage0;
    char *pActionImage1;
    int bigImageWidth;
    int bigImageHeight;
    int originImageWidth;
    int originImageHeight;
    int globalImageWidth;
    int globalImageHeight;
    int localImageWidth;
    int localImageHeight;
    int actionImageWidth;
    int actionImageHeight;
};

struct ABFaceDetectResult {
    int facesDetected;
    struct CGRect faceSize;
    struct CGRect position;
    float gaussianBlur;
    float brightness;
    float quality;
    int checkResult;
    float pitchScore;
    float yawScore;
    float mouthScore;
    float blinkScore;
    float landmarkScore;
    float brightDiff;
    float backHightlight;
    float faceSpeed;
};

struct APTaskInfoData {
    unsigned char _field1[30];
};

struct AQCallBackStruct {
    struct OpaqueAudioQueue *queue;
    unsigned int frameCount;
    struct AudioQueueBuffer *mBuffers[3];
    struct AudioStreamBasicDescription mDataFormat;
    unsigned int sampleLen;
    unsigned int playPtr;
    IFlyPcmPlayer *player;
    CDStruct_183601bc *bufferQueue;
};

struct ARRecognition {
    unsigned char _field1[20000];
    int _field2;
    int _field3;
    char _field4[368640];
    char *_field5;
};

struct AliFaceEmotionDetector {
    int _field1;
    _Bool _field2;
    int _field3;
    _Bool _field4;
    _Bool _field5;
    _Bool _field6;
    _Bool _field7;
    int _field8;
    int _field9;
    int _field10;
    _Bool _field11;
    int _field12;
    _Bool _field13;
    int _field14;
    _Bool _field15;
};

struct ArtcManager {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    CDUnknownFunctionPointerType *_field3;
    basic_string_a490aa4c _field4;
    int _field5;
    _Bool _field6;
    _Bool _field7;
    struct ArtcManagerLiveOption _field8;
    struct ArtcNativeEngine *_field9;
    struct Looper *_field10;
    struct Event *_field11;
    id _field12;
};

struct ArtcManagerLiveOption {
    basic_string_a490aa4c _field1;
    basic_string_a490aa4c _field2;
    basic_string_a490aa4c _field3;
    _Bool _field4;
    _Bool _field5;
    _Bool _field6;
    _Bool _field7;
    int _field8;
    int _field9;
    int _field10;
    int _field11;
    int _field12;
    int _field13;
    int _field14;
    int _field15;
};

struct ArtcMediaEngine {
    CDUnknownFunctionPointerType *_field1;
};

struct ArtcNativeEngine;

struct AspectTransform;

struct AudioQueueBuffer {
    unsigned int _field1;
    void *_field2;
    unsigned int _field3;
    void *_field4;
    unsigned int _field5;
    struct AudioStreamPacketDescription *_field6;
    unsigned int _field7;
};

struct AudioQueueLevelMeterState;

struct AudioStreamBasicDescription {
    double mSampleRate;
    unsigned int mFormatID;
    unsigned int mFormatFlags;
    unsigned int mBytesPerPacket;
    unsigned int mFramesPerPacket;
    unsigned int mBytesPerFrame;
    unsigned int mChannelsPerFrame;
    unsigned int mBitsPerChannel;
    unsigned int mReserved;
};

struct AudioStreamPacketDescription;

struct CATransform3D {
    double m11;
    double m12;
    double m13;
    double m14;
    double m21;
    double m22;
    double m23;
    double m24;
    double m31;
    double m32;
    double m33;
    double m34;
    double m41;
    double m42;
    double m43;
    double m44;
};

struct CFaceDynamicEngine {
    CDUnknownFunctionPointerType *_field1;
};

struct CGAffineTransform {
    double a;
    double b;
    double c;
    double d;
    double tx;
    double ty;
};

struct CGPoint {
    double x;
    double y;
};

struct CGRect {
    struct CGPoint origin;
    struct CGSize size;
};

struct CGSize {
    double width;
    double height;
};

struct CImNtfImmessage {
    basic_string_1cdf7af0 _field1;
    unsigned long long _field2;
    basic_string_1cdf7af0 *_field3;
    basic_string_1cdf7af0 _field4;
    unsigned long long _field5;
    basic_string_1cdf7af0 *_field6;
    basic_string_1cdf7af0 _field7;
    unsigned int _field8;
    unsigned char _field9;
    long long _field10;
    basic_string_1cdf7af0 _field11;
    basic_string_1cdf7af0 _field12;
    map_7e3c2a19 _field13;
    unsigned long long _field14;
    basic_string_1cdf7af0 _field15;
};

struct CImNtfOperationtip {
    basic_string_1cdf7af0 _field1;
    unsigned long long _field2;
    basic_string_1cdf7af0 *_field3;
    basic_string_1cdf7af0 _field4;
    unsigned long long _field5;
    basic_string_1cdf7af0 *_field6;
    basic_string_1cdf7af0 _field7;
    unsigned int _field8;
    unsigned char _field9;
    basic_string_1cdf7af0 _field10;
};

struct CLLocationCoordinate2D {
    double latitude;
    double longitude;
};

struct CVPlanarComponentInfo {
    int _field1;
    unsigned int _field2;
};

struct CVPlanarPixelBufferInfo_YCbCrBiPlanar {
    struct CVPlanarComponentInfo _field1;
    struct CVPlanarComponentInfo _field2;
};

struct Callback;

struct CameraSource;

struct CaptureParams;

struct CipherDatabase {
    CDUnknownFunctionPointerType *_field1;
    struct sqlite3 *_field2;
    basic_string_a490aa4c _field3;
    _Bool _field4;
    int _field5;
};

struct CipherError {
    int _field1;
    basic_string_a490aa4c _field2;
};

struct CipherStatement {
    struct sqlite3 *_field1;
    struct sqlite3_stmt *_field2;
    int _field3;
    struct map<std::__1::basic_string<char>, int, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, int>>> _field4;
};

struct DeviceToken;

struct DynArray<Callback *> {
    CDUnknownFunctionPointerType *_field1;
    struct Callback **_field2;
    int _field3;
    int _field4;
};

struct DynArray<CaptureParams *> {
    CDUnknownFunctionPointerType *_field1;
    struct CaptureParams **_field2;
    int _field3;
    int _field4;
};

struct DynArray<GTransform> {
    CDUnknownFunctionPointerType *_field1;
    struct GTransform *_field2;
    int _field3;
    int _field4;
};

struct Event;

struct FGGridFrame {
    double left;
    double top;
    double width;
    double height;
};

struct FGGridVector {
    struct CGPoint start;
    struct CGPoint end;
};

struct GCanvas {
    CDUnknownFunctionPointerType *_field1;
    CDUnknownFunctionPointerType _field2;
    CDUnknownFunctionPointerType _field3;
    CDUnknownFunctionPointerType _field4;
    _Bool _field5;
    short _field6;
    short _field7;
    struct GTransform _field8;
    struct GPath _field9;
    struct vector<GCanvasState, std::__1::allocator<GCanvasState>> _field10;
    struct GCanvasState *_field11;
    _Bool _field12;
    _Bool _field13;
    int _field14;
    struct GShader *_field15;
    unsigned int _field16;
    unsigned int _field17;
    int _field18;
    union {
        struct {
            float _field1;
            float _field2;
            float _field3;
            float _field4;
        } _field1;
        float _field2[4];
    } _field19;
    struct GTexture _field20;
    float _field21;
    int _field22;
    _Bool _field23;
    basic_string_a490aa4c _field24;
    unsigned long long _field25;
    int _field26;
    int _field27;
    float _field28;
    int _field29;
    _Bool _field30;
    short _field31;
    basic_string_a490aa4c _field32;
    int _field33;
    int _field34;
    _Bool _field35;
    struct DynArray<GTransform> _field36;
    struct TextureMgr _field37;
    struct DynArray<CaptureParams *> _field38;
    struct DynArray<Callback *> _field39;
    basic_string_a490aa4c _field40;
    struct map<int, int, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, int>>> _field41;
};

struct GCanvasState;

struct GERange {
    float location;
    float length;
};

struct GPUByteColorVector {
    unsigned char _field1;
    unsigned char _field2;
    unsigned char _field3;
    unsigned char _field4;
};

struct GPUMatrix3x3 {
    struct GPUVector3 one;
    struct GPUVector3 two;
    struct GPUVector3 three;
};

struct GPUMatrix4x4 {
    struct GPUVector4 one;
    struct GPUVector4 two;
    struct GPUVector4 three;
    struct GPUVector4 four;
};

struct GPUTextureOptions {
    unsigned int minFilter;
    unsigned int magFilter;
    unsigned int wrapS;
    unsigned int wrapT;
    unsigned int internalFormat;
    unsigned int format;
    unsigned int type;
};

struct GPUVector3 {
    float one;
    float two;
    float three;
};

struct GPUVector4 {
    float one;
    float two;
    float three;
    float four;
};

struct GPath {
    CDStruct_b2fbf00d _field1;
    CDStruct_b2fbf00d _field2;
    _Bool _field3;
    struct {
        struct vector<GPoint, std::__1::allocator<GPoint>> _field1;
        _Bool _field2;
    } _field4;
    struct vector<tSubPath, std::__1::allocator<tSubPath>> _field5;
    float _field6;
};

struct GShader;

struct GTexture {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
};

struct GTransform {
    float _field1;
    float _field2;
    float _field3;
    float _field4;
    float _field5;
    float _field6;
};

struct IAudioMixer;

struct ICMPHeader {
    unsigned char _field1;
    unsigned char _field2;
    unsigned short _field3;
    unsigned short _field4;
    unsigned short _field5;
};

struct IMNetAsyncNotifyBaseService {
    CDUnknownFunctionPointerType *_field1;
};

struct IMNetAsyncNotifyService4iOS {
    CDUnknownFunctionPointerType *_field1;
    id _field2;
    _Bool _field3;
    struct dispatch_queue_s *_field4;
};

struct IOutput;

struct IOutputSession;

struct ITRDEngineInterface;

struct ITransform;

struct IVideoMixer;

struct ImageBuffer {
    int eyeDisInBigImage;
    int imageWidth;
    int imageHeight;
    char *pFrameBuffer0;
    char *pFrameBuffer1;
    float faceMinX0;
    float faceMinY0;
    float faceMaxX0;
    float faceMaxY0;
    float faceMinX1;
    float faceMinY1;
    float faceMaxX1;
    float faceMaxY1;
    int faceLeft;
    int faceTop;
    int faceWidth;
    int faceHeight;
    float minPoseScore;
    float maxPitchValue;
    float maxYawValue;
    float maxMouthValue;
    float minBlinkValue;
    float landmarkInFrameBuffer0[36];
    int outputBigImageSize;
    int outputLosslessImageSize;
    int outputActionImageSize;
    char *pOutputBigImage;
    char *pOutputGlobalLosslessImage;
    char *pOutputLocalLosslessImage;
    char *pOutputActionImage0;
    char *pOutputActionImage1;
};

struct JDYBinaryImageTextSegmentRange {
    unsigned long long _field1;
    unsigned long long _field2;
};

struct LOT_Subpath {
    int _field1;
    double _field2;
    struct CGPoint _field3;
    struct CGPoint _field4;
    struct CGPoint _field5;
    struct LOT_Subpath *_field6;
};

struct LivenessStatus {
    _Bool bFaceExist;
    _Bool bFaceExistOnce;
    int faceExistTime;
    float landmark[36];
    int faceRectSmoothToDraw[4];
    unsigned long long initTime;
    int detectType;
    int detectTypeOld;
    int detectState;
    int msecChangeDetectType;
    int msecCurrentTime;
    _Bool bOutOfRegion;
    _Bool bTooSmall;
    _Bool bTooBig;
    _Bool bStill;
    _Bool bTooDark;
    _Bool bUneven;
    _Bool bYawNeutral;
    _Bool bPitchNeutral;
    _Bool bEyeClose;
    _Bool bSmallGesture;
    float brightness;
    float quality;
    float staticQuality;
    float pitchScore;
    float yawScore;
    float mouthScore;
    float blinkScore;
    float landmarkScore;
    float brightDiff;
    float backHightlight;
    float faceSpeed;
    int countPitch;
    int msecLatestPitch;
    int countYaw;
    int msecLatestYaw;
    int countRoll;
    int countMouth;
    int msecLatestMouth;
    int countBlink;
    int msecLatestBlink;
    int countPanning;
    int msecLatestGetBigImage;
    int countFaceDisappear;
    _Bool bFaceChange;
    _Bool bMouthOcclusion;
    _Bool bEyeOcclusionOnce;
    _Bool bConfirm3D;
    _Bool bGetValidBigImage;
    int msecLeft;
};

struct Looper;

struct MACoordinateBounds {
    struct CLLocationCoordinate2D northEast;
    struct CLLocationCoordinate2D southWest;
};

struct MACoordinateRegion {
    struct CLLocationCoordinate2D center;
    struct MACoordinateSpan span;
};

struct MACoordinateSpan {
    double latitudeDelta;
    double longitudeDelta;
};

struct MAMapPoint {
    double x;
    double y;
};

struct MAMapRect {
    struct MAMapPoint origin;
    struct MAMapSize size;
};

struct MAMapSize {
    double width;
    double height;
};

struct MATileOverlayPath {
    long long _field1;
    long long _field2;
    long long _field3;
    double _field4;
};

struct MP4Multiplexer;

struct MSize {
    int *_field1;
};

struct MStep {
    unsigned long long *_field1;
    unsigned long long _field2[2];
};

struct Mat {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
    char *_field5;
    int *_field6;
    char *_field7;
    char *_field8;
    char *_field9;
    struct MatAllocator *_field10;
    struct MSize _field11;
    struct MStep _field12;
};

struct MatAllocator;

struct MicSource {
    CDUnknownFunctionPointerType *_field1;
    struct weak_ptr<videocore::iOS::MicSource> _field2;
    id _field3;
    struct OpaqueAudioComponentInstance *_field4;
    struct OpaqueAudioComponent *_field5;
    double _field6;
    int _field7;
    struct weak_ptr<videocore::IOutput> _field8;
};

struct MirrorMatrix3x3 {
    struct MirrorVector3 _field1;
    struct MirrorVector3 _field2;
    struct MirrorVector3 _field3;
};

struct MirrorMatrix4x4 {
    struct MirrorVector4 _field1;
    struct MirrorVector4 _field2;
    struct MirrorVector4 _field3;
    struct MirrorVector4 _field4;
};

struct MirrorTextureOptions {
    unsigned int minFilter;
    unsigned int magFilter;
    unsigned int wrapS;
    unsigned int wrapT;
    unsigned int internalFormat;
    unsigned int format;
    unsigned int type;
};

struct MirrorVector3 {
    float _field1;
    float _field2;
    float _field3;
};

struct MirrorVector4 {
    float _field1;
    float _field2;
    float _field3;
    float _field4;
};

struct NAL_addr_t {
    unsigned short _field1;
    unsigned short _field2;
    unsigned short _field3;
    unsigned short _field4;
    CDUnion_7059b8d6 _field5;
    CDUnion_7059b8d6 _field6;
    unsigned int _field7;
};

struct NAL_connection_count_t {
    unsigned long long _field1;
    unsigned long long _field2;
    int _field3;
    unsigned int _field4;
    unsigned long long _field5;
    unsigned long long _field6;
    unsigned long long _field7;
    int _field8;
    unsigned long long _field9;
};

struct NAL_data {
    char *_field1;
    unsigned long long _field2;
    _Bool _field3;
};

struct NAL_option {
    int *_field1;
    char *_field2;
    int _field3;
};

struct NAL_request_count_t {
    unsigned long long _field1;
    unsigned long long _field2;
    unsigned long long _field3;
    unsigned long long _field4;
    unsigned long long _field5;
    int _field6;
    int _field7;
    int _field8;
    int _field9;
    int _field10;
    int _field11;
    int _field12;
};

struct NAL_request_handler {
    CDUnknownFunctionPointerType _field1;
    CDUnknownFunctionPointerType _field2;
    CDUnknownFunctionPointerType _field3;
};

struct NAL_request_meta {
    struct NAL_request_handler _field1;
    void *_field2;
};

struct NAL_request_t {
    unsigned char _field1;
    int _field2;
    struct NAL_option _field3;
    char **_field4;
    char *_field5;
    struct NAL_data _field6;
    struct NAL_request_meta _field7;
    int _field8;
};

struct NAL_session_handler {
    CDUnknownFunctionPointerType _field1;
    CDUnknownFunctionPointerType _field2;
    CDUnknownFunctionPointerType _field3;
    CDUnknownFunctionPointerType _field4;
    CDUnknownFunctionPointerType _field5;
    CDUnknownFunctionPointerType _field6;
    CDUnknownFunctionPointerType _field7;
    CDUnknownFunctionPointerType _field8;
    CDUnknownFunctionPointerType _field9;
    CDUnknownFunctionPointerType _field10;
    CDUnknownFunctionPointerType _field11;
    CDUnknownFunctionPointerType _field12;
    CDUnknownFunctionPointerType _field13;
};

struct NSArray {
    Class _field1;
};

struct NSMutableDictionary {
    Class _field1;
};

struct OpaqueAudioComponent;

struct OpaqueAudioComponentInstance;

struct OpaqueAudioFileID;

struct OpaqueAudioQueue;

struct PLCrashHostInfoVersion {
    unsigned long long major;
    unsigned long long minor;
    unsigned long long revision;
};

struct PLCrashReporterCallbacks {
    unsigned short _field1;
    void *_field2;
    CDUnknownFunctionPointerType _field3;
};

struct PixelBufferOutput;

struct PixelBufferSource;

struct Point_<float>;

struct Point_<int> {
    int _field1;
    int _field2;
};

struct PositionTransform;

struct RecursiveMutex {
    struct _opaque_pthread_mutex_t _field1;
};

struct SMsgItem {
    unsigned char _field1;
    basic_string_1cdf7af0 _field2;
    basic_string_1cdf7af0 _field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned int _field6;
    basic_string_1cdf7af0 _field7;
    basic_string_1cdf7af0 _field8;
};

struct SNotifyContactOperate {
    unsigned char _field1;
    basic_string_1cdf7af0 _field2;
    basic_string_1cdf7af0 _field3;
    basic_string_1cdf7af0 _field4;
};

struct SNotifyPlugin {
    unsigned int _field1;
    basic_string_1cdf7af0 _field2;
    basic_string_1cdf7af0 _field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned int _field6;
    basic_string_1cdf7af0 _field7;
    basic_string_1cdf7af0 _field8;
    basic_string_1cdf7af0 _field9;
    basic_string_1cdf7af0 _field10;
    basic_string_1cdf7af0 _field11;
    unsigned int _field12;
    unsigned int _field13;
};

struct Split;

struct StreamSession {
    CDUnknownFunctionPointerType *_field1;
    void *_field2;
    void *_field3;
    void *_field4;
    void *_field5;
    struct function<void (videocore::IStreamSession &, long)> _field6;
    long long _field7;
    int _field8;
};

struct TBundle {
    struct map<std::__1::basic_string<char>, void *, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, void *>>> _field1;
};

struct TCMKVStore {
    CDUnknownFunctionPointerType *_field1;
};

struct TCMServicePosix {
    CDUnknownFunctionPointerType *_field1;
    CDUnknownFunctionPointerType *_field2;
    unsigned int _field3;
    struct map<int, std::tr1::shared_ptr<ClientHandle>, std::less<int>, std::allocator<std::pair<const int, std::tr1::shared_ptr<ClientHandle>>>> _field4;
    struct map<std::basic_string<char>, std::tr1::shared_ptr<TCMCORE::SessionKey>, std::less<std::basic_string<char>>, std::allocator<std::pair<const std::basic_string<char>, std::tr1::shared_ptr<TCMCORE::SessionKey>>>> _field5;
    struct RecursiveMutex _field6;
    int _field7;
    _Bool _field8;
    basic_string_1cdf7af0 _field9;
};

struct TRDLogEngine {
    CDUnknownFunctionPointerType *_field1;
    struct ITRDEngineInterface *_field2;
};

struct TextureMgr {
    struct map<int, TextureGroup, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, TextureGroup>>> _field1;
};

struct UIEdgeInsets {
    double top;
    double left;
    double bottom;
    double right;
};

struct UIOffset {
    double horizontal;
    double vertical;
};

struct UITextView {
    Class _field1;
};

struct UMCLLocationCoordinate2D {
    double _field1;
    double _field2;
};

struct UMCMRotationRate {
    double _field1;
    double _field2;
    double _field3;
};

struct VRContext {
    union _GLKMatrix4 modelViewProjectionMatrix;
    union _GLKMatrix4 projectionMatrix;
    union _GLKMatrix4 viewMatrix;
    union _GLKMatrix4 translationMatrix;
    union _GLKMatrix4 rotationMatrix;
    union _GLKMatrix4 scaleMatrix;
};

struct Vec<float, 3>;

struct WBSDKJKConstBuffer {
    struct WBSDKJKConstPtrRange _field1;
};

struct WBSDKJKConstPtrRange {
    char *_field1;
    unsigned long long _field2;
};

struct WBSDKJKEncodeCache {
    id _field1;
    unsigned long long _field2;
    unsigned long long _field3;
};

struct WBSDKJKEncodeState {
    struct WBSDKJKManagedBuffer _field1;
    struct WBSDKJKManagedBuffer _field2;
    unsigned long long _field3;
    struct WBSDKJKFastClassLookup _field4;
    struct WBSDKJKEncodeCache _field5[1024];
    unsigned long long _field6;
    unsigned long long _field7;
    unsigned long long _field8;
    id _field9;
    id _field10;
    SEL _field11;
    CDUnknownFunctionPointerType _field12;
    CDUnknownBlockType _field13;
};

struct WBSDKJKFastClassLookup {
    void *_field1;
    void *_field2;
    void *_field3;
    void *_field4;
    void *_field5;
};

struct WBSDKJKHashTableEntry {
    unsigned long long _field1;
    id _field2;
    id _field3;
};

struct WBSDKJKManagedBuffer {
    struct WBSDKJKPtrRange _field1;
    unsigned long long _field2;
    unsigned long long _field3;
};

struct WBSDKJKObjCImpCache {
    Class _field1;
    CDUnknownFunctionPointerType _field2;
    CDUnknownFunctionPointerType _field3;
};

struct WBSDKJKObjectStack {
    void **_field1;
    void **_field2;
    unsigned long long *_field3;
    unsigned long long _field4;
    unsigned long long _field5;
    unsigned long long _field6;
    unsigned long long _field7;
};

struct WBSDKJKParseState {
    unsigned long long _field1;
    struct WBSDKJKConstBuffer _field2;
    unsigned long long _field3;
    unsigned long long _field4;
    unsigned long long _field5;
    unsigned long long _field6;
    unsigned long long _field7;
    unsigned long long _field8;
    struct WBSDKJKParseToken _field9;
    struct WBSDKJKObjectStack _field10;
    struct WBSDKJKTokenCache _field11;
    struct WBSDKJKObjCImpCache _field12;
    id _field13;
    int _field14;
    _Bool _field15;
};

struct WBSDKJKParseToken {
    struct WBSDKJKConstPtrRange _field1;
    unsigned long long _field2;
    struct WBSDKJKTokenValue _field3;
    struct WBSDKJKManagedBuffer _field4;
};

struct WBSDKJKPtrRange {
    char *_field1;
    unsigned long long _field2;
};

struct WBSDKJKTokenCache {
    struct WBSDKJKTokenCacheItem *_field1;
    unsigned long long _field2;
    unsigned int _field3;
    unsigned char _field4[1024];
};

struct WBSDKJKTokenCacheItem;

struct WBSDKJKTokenValue {
    struct WBSDKJKConstPtrRange _field1;
    unsigned long long _field2;
    unsigned long long _field3;
    union {
        long long _field1;
        unsigned long long _field2;
        double _field3;
    } _field4;
    struct WBSDKJKTokenCacheItem *_field5;
};

struct WXContext;

struct WXJSArrayExpression {
    CDUnknownFunctionPointerType *_field1;
    struct vector<WXJSExpression *, std::__1::allocator<WXJSExpression *>> _field2;
};

struct WXJSExceptionInfo {
    Class _field1;
};

struct WXJSExpression {
    CDUnknownFunctionPointerType *_field1;
};

struct WXJSLiteral {
    CDUnknownFunctionPointerType *_field1;
};

struct WXJSToken {
    unsigned long long _field1;
    basic_string_a490aa4c _field2;
    double _field3;
    _Bool _field4;
    int _field5;
    int _field6;
};

struct WXOGIF_Color {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
};

struct XPush;

struct XPushClient;

struct YW_LYKCSSEdgeInsets {
    double top;
    double left;
    double bottom;
    double right;
};

struct _AccsSDKOperationTypeSF {
    long long accsSDKOperationTypeSuccess;
    long long accsSDKOperationTypeFail;
};

struct _Alloc_hider {
    char *_field1;
};

struct _FileHashComputationContext {
    CDUnknownFunctionPointerType _field1;
    CDUnknownFunctionPointerType _field2;
    CDUnknownFunctionPointerType _field3;
    unsigned long long _field4;
    char **_field5;
};

struct _IplImage {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
    int _field5;
    char _field6[4];
    char _field7[4];
    int _field8;
    int _field9;
    int _field10;
    int _field11;
    int _field12;
    struct _IplROI *_field13;
    struct _IplImage *_field14;
    void *_field15;
    struct _IplTileInfo *_field16;
    int _field17;
    char *_field18;
    int _field19;
    int _field20[4];
    int _field21[4];
    char *_field22;
};

struct _IplROI;

struct _IplTileInfo;

struct _JMergePoint {
    int _field1;
    int _field2;
};

struct _NSRange {
    unsigned long long location;
    unsigned long long length;
};

struct _PLCrashReportDecoder {
    struct _Plcrash__CrashReport *_field1;
};

struct _Plcrash__CrashReport {
    struct _ProtobufCMessage _field1;
    struct _Plcrash__CrashReport__SystemInfo *_field2;
    struct _Plcrash__CrashReport__ApplicationInfo *_field3;
    unsigned long long _field4;
    struct _Plcrash__CrashReport__Thread **_field5;
    unsigned long long _field6;
    struct _Plcrash__CrashReport__BinaryImage **_field7;
    struct _Plcrash__CrashReport__Exception *_field8;
    struct _Plcrash__CrashReport__Signal *_field9;
    struct _Plcrash__CrashReport__ProcessInfo *_field10;
    struct _Plcrash__CrashReport__MachineInfo *_field11;
    struct _Plcrash__CrashReport__ReportInfo *_field12;
};

struct _Plcrash__CrashReport__ApplicationInfo {
    struct _ProtobufCMessage _field1;
    char *_field2;
    char *_field3;
    char *_field4;
};

struct _Plcrash__CrashReport__BinaryImage;

struct _Plcrash__CrashReport__Exception {
    struct _ProtobufCMessage _field1;
    char *_field2;
    char *_field3;
    unsigned long long _field4;
    struct _Plcrash__CrashReport__Thread__StackFrame **_field5;
};

struct _Plcrash__CrashReport__MachineInfo {
    struct _ProtobufCMessage _field1;
    char *_field2;
    struct _Plcrash__CrashReport__Processor *_field3;
    unsigned int _field4;
    unsigned int _field5;
};

struct _Plcrash__CrashReport__ProcessInfo {
    struct _ProtobufCMessage _field1;
    char *_field2;
    unsigned int _field3;
    char *_field4;
    char *_field5;
    unsigned int _field6;
    int _field7;
    int _field8;
    unsigned long long _field9;
};

struct _Plcrash__CrashReport__Processor {
    struct _ProtobufCMessage _field1;
    int _field2;
    int _field3;
    unsigned long long _field4;
    unsigned long long _field5;
};

struct _Plcrash__CrashReport__ReportInfo;

struct _Plcrash__CrashReport__Signal {
    struct _ProtobufCMessage _field1;
    char *_field2;
    char *_field3;
    unsigned long long _field4;
    struct _Plcrash__CrashReport__Signal__MachException *_field5;
};

struct _Plcrash__CrashReport__Signal__MachException {
    struct _ProtobufCMessage _field1;
    unsigned long long _field2;
    unsigned long long _field3;
    unsigned long long *_field4;
};

struct _Plcrash__CrashReport__Symbol {
    struct _ProtobufCMessage _field1;
    char *_field2;
    unsigned long long _field3;
    int _field4;
    unsigned long long _field5;
};

struct _Plcrash__CrashReport__SystemInfo {
    struct _ProtobufCMessage _field1;
    int _field2;
    int _field3;
    char *_field4;
    int _field5;
    long long _field6;
    char *_field7;
};

struct _Plcrash__CrashReport__Thread;

struct _Plcrash__CrashReport__Thread__StackFrame {
    struct _ProtobufCMessage _field1;
    unsigned long long _field2;
    struct _Plcrash__CrashReport__Symbol *_field3;
};

struct _ProtobufCMessage {
    struct _ProtobufCMessageDescriptor *_field1;
    unsigned int _field2;
    struct _ProtobufCMessageUnknownField *_field3;
};

struct _ProtobufCMessageDescriptor;

struct _ProtobufCMessageUnknownField;

struct _Rb_tree<int, std::pair<const int, std::tr1::shared_ptr<ClientHandle>>, std::_Select1st<std::pair<const int, std::tr1::shared_ptr<ClientHandle>>>, std::less<int>, std::allocator<std::pair<const int, std::tr1::shared_ptr<ClientHandle>>>> {
    struct _Rb_tree_impl<std::less<int>, false> _field1;
};

struct _Rb_tree<std::basic_string<char>, std::pair<const std::basic_string<char>, std::basic_string<char>>, std::_Select1st<std::pair<const std::basic_string<char>, std::basic_string<char>>>, std::less<std::basic_string<char>>, std::allocator<std::pair<const std::basic_string<char>, std::basic_string<char>>>> {
    struct _Rb_tree_impl<std::less<std::basic_string<char>>, false> _field1;
};

struct _Rb_tree<std::basic_string<char>, std::pair<const std::basic_string<char>, std::tr1::shared_ptr<TCMCORE::SessionKey>>, std::_Select1st<std::pair<const std::basic_string<char>, std::tr1::shared_ptr<TCMCORE::SessionKey>>>, std::less<std::basic_string<char>>, std::allocator<std::pair<const std::basic_string<char>, std::tr1::shared_ptr<TCMCORE::SessionKey>>>> {
    struct _Rb_tree_impl<std::less<std::basic_string<char>>, false> _field1;
};

struct _Rb_tree_impl<std::less<int>, false> {
    struct less<int> _field1;
    struct _Rb_tree_node_base _field2;
    unsigned long long _field3;
};

struct _Rb_tree_impl<std::less<std::basic_string<char>>, false> {
    struct less<std::basic_string<char>> _field1;
    struct _Rb_tree_node_base _field2;
    unsigned long long _field3;
};

struct _Rb_tree_node_base {
    int _field1;
    struct _Rb_tree_node_base *_field2;
    struct _Rb_tree_node_base *_field3;
    struct _Rb_tree_node_base *_field4;
};

struct _Sp_counted_base<__gnu_cxx::_Lock_policy::_S_atomic>;

struct _Vector_impl {
    struct DeviceToken *_field1;
    struct DeviceToken *_field2;
    struct DeviceToken *_field3;
};

struct __CFString;

struct __hash_node<std::__1::__hash_value_type<int, GFontGlyphInfo>, void *>;

struct __imgRawData {
    int _field1;
    int _field2;
    long long _field3;
    int _field4;
    _Bool _field5;
    int _field6;
    char *_field7;
    char *_field8;
    char *_field9;
    char *_field10;
};

struct __sFILE {
    char *_field1;
    int _field2;
    int _field3;
    short _field4;
    short _field5;
    struct __sbuf _field6;
    int _field7;
    void *_field8;
    CDUnknownFunctionPointerType _field9;
    CDUnknownFunctionPointerType _field10;
    CDUnknownFunctionPointerType _field11;
    CDUnknownFunctionPointerType _field12;
    struct __sbuf _field13;
    struct __sFILEX *_field14;
    int _field15;
    unsigned char _field16[3];
    unsigned char _field17[1];
    struct __sbuf _field18;
    int _field19;
    long long _field20;
};

struct __sbuf {
    char *_field1;
    int _field2;
};

struct __shared_count<__gnu_cxx::_Lock_policy::_S_atomic> {
    struct _Sp_counted_base<__gnu_cxx::_Lock_policy::_S_atomic> *_M_pi;
};

struct __shared_weak_count;

struct __tree_end_node<std::__1::__tree_node_base<void *>*> {
    struct __tree_node_base<void *> *_field1;
};

struct _opaque_pthread_mutex_t {
    long long __sig;
    char __opaque[56];
};

struct _opaque_pthread_mutexattr_t {
    long long __sig;
    char __opaque[8];
};

struct _opaque_pthread_rwlock_t {
    long long __sig;
    char __opaque[192];
};

struct _opaque_pthread_t {
    long long _field1;
    struct __darwin_pthread_handler_rec *_field2;
    char _field3[8176];
};

struct _utils {
    CDUnknownFunctionPointerType _field1;
};

struct _vm_param {
    int _field1;
    union {
        int _field1;
        unsigned char _field2;
        int _field3;
        long long _field4;
        float _field5;
        double _field6;
        char *_field7;
        struct _byte_data {
            char *_field1;
            int _field2;
            int _field3;
        } _field8;
    } _field2;
};

struct addrinfo {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
    unsigned int _field5;
    char *_field6;
    struct sockaddr *_field7;
    struct addrinfo *_field8;
};

struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
    struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
        struct __rep {
            union {
                struct __long {
                    char *__data_;
                    unsigned long long __size_;
                    unsigned long long __cap_;
                } __l;
                struct __short {
                    char __data_[23];
                    struct {
                        unsigned char __size_;
                    } ;
                } __s;
                struct __raw {
                    unsigned long long __words[3];
                } __r;
            } ;
        } __first_;
    } __r_;
};

struct basic_string<char, std::char_traits<char>, std::allocator<char>> {
    struct _Alloc_hider _field1;
};

struct css_node {
    struct {
        int _field1;
        int _field2;
        int _field3;
        int _field4;
        int _field5;
        int _field6;
        float _field7;
        float _field8[4];
        float _field9[4];
        float _field10[4];
        float _field11[4];
        float _field12[2];
    } _field1;
    struct {
        float _field1[2];
        float _field2[2];
        _Bool _field3;
        float _field4[2];
        float _field5;
        float _field6[2];
        float _field7[2];
    } _field2;
    int _field3;
    CDUnknownFunctionPointerType _field4;
    CDUnknownFunctionPointerType _field5;
    CDUnknownFunctionPointerType _field6;
    CDUnknownFunctionPointerType _field7;
    void *_field8;
};

struct dispatch_queue_s;

struct function<void (videocore::IStreamSession &, long)> {
    struct type _field1;
    struct __base<void (videocore::IStreamSession &, long)> *_field2;
};

struct in6_addr {
    union {
        unsigned char _field1[16];
        unsigned short _field2[8];
        unsigned int _field3[4];
    } _field1;
};

struct in_addr {
    unsigned int _field1;
};

struct internal_state;

struct less<int>;

struct less<std::basic_string<char>>;

struct mach_header {
    unsigned int _field1;
    int _field2;
    int _field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned int _field6;
    unsigned int _field7;
};

struct mach_header_64 {
    unsigned int _field1;
    int _field2;
    int _field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned int _field6;
    unsigned int _field7;
    unsigned int _field8;
};

struct map<int, TextureGroup, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, TextureGroup>>> {
    struct __tree<std::__1::__value_type<int, TextureGroup>, std::__1::__map_value_compare<int, std::__1::__value_type<int, TextureGroup>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, TextureGroup>>> {
        struct __tree_node<std::__1::__value_type<int, TextureGroup>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, TextureGroup>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<int, std::__1::__value_type<int, TextureGroup>, std::__1::less<int>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<int, int, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, int>>> {
    struct __tree<std::__1::__value_type<int, int>, std::__1::__map_value_compare<int, std::__1::__value_type<int, int>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, int>>> {
        struct __tree_node<std::__1::__value_type<int, int>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, int>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<int, std::__1::__value_type<int, int>, std::__1::less<int>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<int, std::tr1::shared_ptr<ClientHandle>, std::less<int>, std::allocator<std::pair<const int, std::tr1::shared_ptr<ClientHandle>>>> {
    struct _Rb_tree<int, std::pair<const int, std::tr1::shared_ptr<ClientHandle>>, std::_Select1st<std::pair<const int, std::tr1::shared_ptr<ClientHandle>>>, std::less<int>, std::allocator<std::pair<const int, std::tr1::shared_ptr<ClientHandle>>>> _field1;
};

struct map<std::__1::basic_string<char>, int, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, int>>> {
    struct __tree<std::__1::__value_type<std::__1::basic_string<char>, int>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, int>, std::__1::less<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, int>>> {
        struct __tree_node<std::__1::__value_type<std::__1::basic_string<char>, int>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, int>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, int>, std::__1::less<std::__1::basic_string<char>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::basic_string<char>, void *, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, void *>>> {
    struct __tree<std::__1::__value_type<std::__1::basic_string<char>, void *>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, void *>, std::__1::less<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, void *>>> {
        struct __tree_node<std::__1::__value_type<std::__1::basic_string<char>, void *>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, void *>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, void *>, std::__1::less<std::__1::basic_string<char>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<std::basic_string<char>, std::basic_string<char>, std::less<std::basic_string<char>>, std::allocator<std::pair<const std::basic_string<char>, std::basic_string<char>>>> {
    struct _Rb_tree<std::basic_string<char>, std::pair<const std::basic_string<char>, std::basic_string<char>>, std::_Select1st<std::pair<const std::basic_string<char>, std::basic_string<char>>>, std::less<std::basic_string<char>>, std::allocator<std::pair<const std::basic_string<char>, std::basic_string<char>>>> _field1;
};

struct map<std::basic_string<char>, std::tr1::shared_ptr<TCMCORE::SessionKey>, std::less<std::basic_string<char>>, std::allocator<std::pair<const std::basic_string<char>, std::tr1::shared_ptr<TCMCORE::SessionKey>>>> {
    struct _Rb_tree<std::basic_string<char>, std::pair<const std::basic_string<char>, std::tr1::shared_ptr<TCMCORE::SessionKey>>, std::_Select1st<std::pair<const std::basic_string<char>, std::tr1::shared_ptr<TCMCORE::SessionKey>>>, std::less<std::basic_string<char>>, std::allocator<std::pair<const std::basic_string<char>, std::tr1::shared_ptr<TCMCORE::SessionKey>>>> _field1;
};

struct mig15_video_optimizer {
    struct Mat _field1;
    struct Mat _field2;
    unsigned char _field3;
    unsigned long long _field4;
    unsigned int _field5;
    unsigned int _field6;
    struct vector<cv::Vec<float, 3>, std::__1::allocator<cv::Vec<float, 3>>> _field7;
    struct vector<cv::Vec<float, 3>, std::__1::allocator<cv::Vec<float, 3>>> _field8;
    struct vector<cv::Vec<float, 3>, std::__1::allocator<cv::Vec<float, 3>>> _field9;
    struct Point_<int> _field10;
    struct Point_<int> _field11;
    struct vector<bool, std::__1::allocator<bool>> _field12;
    struct vector<cv::Point_<float>, std::__1::allocator<cv::Point_<float>>> _field13;
};

struct objc_method_description {
    SEL _field1;
    char *_field2;
};

struct plcrash_exception_server_context {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    CDUnknownFunctionPointerType _field5;
    void *_field6;
    struct _opaque_pthread_mutex_t _field7;
    struct _opaque_pthread_cond_t {
        long long _field1;
        char _field2[40];
    } _field8;
    unsigned int _field9;
    _Bool _field10;
};

struct plcrash_mach_exception_port_set {
    unsigned int count;
    unsigned int masks[14];
    unsigned int ports[14];
    int behaviors[14];
    int flavors[14];
};

struct recursive_mutex {
    struct _opaque_pthread_mutex_t __m_;
};

struct scaled_size {
    unsigned long long _field1;
    unsigned long long _field2;
};

struct shared_ptr<TCMCORE::XPush> {
    struct XPush *_M_ptr;
    struct __shared_count<__gnu_cxx::_Lock_policy::_S_atomic> _M_refcount;
};

struct shared_ptr<TCMCORE::XPushClient> {
    struct XPushClient *_M_ptr;
    struct __shared_count<__gnu_cxx::_Lock_policy::_S_atomic> _M_refcount;
};

struct shared_ptr<WXContext> {
    struct WXContext *_M_ptr;
    struct __shared_count<__gnu_cxx::_Lock_policy::_S_atomic> _M_refcount;
};

struct shared_ptr<videocore::Apple::MP4Multiplexer> {
    struct MP4Multiplexer *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<videocore::Apple::PixelBufferSource> {
    struct PixelBufferSource *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<videocore::AspectTransform> {
    struct AspectTransform *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<videocore::IAudioMixer> {
    struct IAudioMixer *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<videocore::IOutputSession> {
    struct IOutputSession *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<videocore::ITransform> {
    struct ITransform *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<videocore::IVideoMixer> {
    struct IVideoMixer *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<videocore::PositionTransform> {
    struct PositionTransform *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<videocore::Split> {
    struct Split *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<videocore::iOS::CameraSource> {
    struct CameraSource *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<videocore::iOS::MicSource> {
    struct MicSource *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<videocore::simpleApi::PixelBufferOutput> {
    struct PixelBufferOutput *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct sockaddr {
    unsigned char _field1;
    unsigned char _field2;
    char _field3[14];
};

struct sockaddr_in {
    unsigned char _field1;
    unsigned char _field2;
    unsigned short _field3;
    struct in_addr _field4;
    char _field5[8];
};

struct sockaddr_in6 {
    unsigned char _field1;
    unsigned char _field2;
    unsigned short _field3;
    unsigned int _field4;
    struct in6_addr _field5;
    unsigned int _field6;
};

struct sqlite3;

struct sqlite3_stmt;

struct stars_s {
    union _GLKVector3 position;
};

struct timeval {
    long long tv_sec;
    int tv_usec;
};

struct tm_zip_s {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned int _field6;
};

struct type {
    unsigned char _field1[24];
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<int, GFontGlyphInfo>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, GFontGlyphInfo>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<int, GFontGlyphInfo>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, GFontGlyphInfo>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<int, GFontGlyphInfo>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, GFontGlyphInfo>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, GFontGlyphInfo>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unordered_map<int, GFontGlyphInfo, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, GFontGlyphInfo>>> {
    struct __hash_table<std::__1::__hash_value_type<int, GFontGlyphInfo>, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, GFontGlyphInfo>, std::__1::hash<int>, true>, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, GFontGlyphInfo>, std::__1::equal_to<int>, true>, std::__1::allocator<std::__1::__hash_value_type<int, GFontGlyphInfo>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<int, GFontGlyphInfo>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, GFontGlyphInfo>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, GFontGlyphInfo>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, GFontGlyphInfo>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, GFontGlyphInfo>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<int, GFontGlyphInfo>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, GFontGlyphInfo>, std::__1::hash<int>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, GFontGlyphInfo>, std::__1::equal_to<int>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct uregex;

struct vector<GCanvasState, std::__1::allocator<GCanvasState>> {
    struct GCanvasState *_field1;
    struct GCanvasState *_field2;
    struct __compressed_pair<GCanvasState *, std::__1::allocator<GCanvasState>> {
        struct GCanvasState *_field1;
    } _field3;
};

struct vector<GPoint, std::__1::allocator<GPoint>> {
    CDStruct_183601bc *_field1;
    CDStruct_183601bc *_field2;
    struct __compressed_pair<GPoint *, std::__1::allocator<GPoint>> {
        CDStruct_183601bc *_field1;
    } _field3;
};

struct vector<TCM::DeviceToken, std::allocator<TCM::DeviceToken>> {
    struct _Vector_impl _field1;
};

struct vector<WXJSExpression *, std::__1::allocator<WXJSExpression *>> {
    struct WXJSExpression **_field1;
    struct WXJSExpression **_field2;
    struct __compressed_pair<WXJSExpression **, std::__1::allocator<WXJSExpression *>> {
        struct WXJSExpression **_field1;
    } _field3;
};

struct vector<WXJSToken *, std::__1::allocator<WXJSToken *>> {
    struct WXJSToken **__begin_;
    struct WXJSToken **__end_;
    struct __compressed_pair<WXJSToken **, std::__1::allocator<WXJSToken *>> {
        struct WXJSToken **__first_;
    } __end_cap_;
};

struct vector<bool, std::__1::allocator<bool>> {
    unsigned long long *_field1;
    unsigned long long _field2;
    struct __compressed_pair<unsigned long, std::__1::allocator<unsigned long>> {
        unsigned long long _field1;
    } _field3;
};

struct vector<cv::Point_<float>, std::__1::allocator<cv::Point_<float>>> {
    struct Point_<float> *_field1;
    struct Point_<float> *_field2;
    struct __compressed_pair<cv::Point_<float>*, std::__1::allocator<cv::Point_<float>>> {
        struct Point_<float> *_field1;
    } _field3;
};

struct vector<cv::Vec<float, 3>, std::__1::allocator<cv::Vec<float, 3>>> {
    struct Vec<float, 3> *_field1;
    struct Vec<float, 3> *_field2;
    struct __compressed_pair<cv::Vec<float, 3>*, std::__1::allocator<cv::Vec<float, 3>>> {
        struct Vec<float, 3> *_field1;
    } _field3;
};

struct vector<tSubPath, std::__1::allocator<tSubPath>> {
    CDStruct_183601bc *_field1;
    CDStruct_183601bc *_field2;
    struct __compressed_pair<tSubPath *, std::__1::allocator<tSubPath>> {
        CDStruct_183601bc *_field1;
    } _field3;
};

struct weak_ptr<videocore::IOutput> {
    struct IOutput *_field1;
    struct __shared_weak_count *_field2;
};

struct weak_ptr<videocore::iOS::CameraSource> {
    struct CameraSource *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct weak_ptr<videocore::iOS::MicSource> {
    struct MicSource *_field1;
    struct __shared_weak_count *_field2;
};

struct wx_css_node {
    struct {
        int _field1;
        int _field2;
        int _field3;
        int _field4;
        int _field5;
        int _field6;
        int _field7;
        int _field8;
        float _field9;
        float _field10[6];
        float _field11[4];
        float _field12[6];
        float _field13[6];
        float _field14[2];
        float _field15[2];
        float _field16[2];
    } _field1;
    struct {
        float _field1[4];
        float _field2[2];
        int _field3;
        _Bool _field4;
        float _field5[2];
        float _field6;
        float _field7;
        float _field8[2];
        float _field9[2];
        int _field10;
    } _field2;
    int _field3;
    int _field4;
    struct wx_css_node *_field5;
    struct wx_css_node *_field6;
    CDUnknownFunctionPointerType _field7;
    CDUnknownFunctionPointerType _field8;
    CDUnknownFunctionPointerType _field9;
    CDUnknownFunctionPointerType _field10;
    void *_field11;
};

struct z_stream_s {
    char *next_in;
    unsigned int avail_in;
    unsigned long long total_in;
    char *next_out;
    unsigned int avail_out;
    unsigned long long total_out;
    char *msg;
    struct internal_state *state;
    CDUnknownFunctionPointerType zalloc;
    CDUnknownFunctionPointerType zfree;
    void *opaque;
    int data_type;
    unsigned long long adler;
    unsigned long long reserved;
};

#if 0
// Names with conflicting types:
typedef struct {
    struct NAL_addr_t _field1;
    int _field2;
    unsigned short _field3;
    unsigned short _field4;
    struct NAL_session_meta {
        void *_field1;
        struct NAL_session_handler _field2;
        unsigned int :1;
    } _field5;
} NAL_session_t_e4d01b93;

typedef struct {
    struct NAL_addr_t _field1;
    int _field2;
    unsigned short _field3;
    unsigned short _field4;
    struct NAL_session_meta {
        void *_field1;
        struct NAL_session_handler _field2;
    } _field5;
} NAL_session_t_4c293883;

#endif

#pragma mark Typedef'd Structures

typedef struct {
    _Bool _field1;
    unsigned char _field2;
    _Bool _field3;
    unsigned long long _field4;
} CDStruct_6a6a01a4;

typedef struct {
    _Bool set;
    unsigned char flags;
    int value;
} CDStruct_2ea23212;

typedef struct {
    unsigned char _field1;
    unsigned char _field2;
    unsigned char _field3;
    unsigned char _field4;
    unsigned char _field5;
    unsigned char _field6;
    unsigned char _field7;
    unsigned char _field8;
    unsigned char _field9;
    unsigned char _field10;
    unsigned char _field11;
    unsigned char _field12;
    unsigned char _field13;
    unsigned char _field14;
    unsigned char _field15;
    unsigned char _field16;
} CDStruct_bd2f613f;

typedef struct {
    unsigned int x;
    unsigned int y;
    short zoom;
} CDStruct_c8e85508;

typedef struct {
    unsigned long long _field1;
    id *_field2;
    unsigned long long *_field3;
    unsigned long long _field4[5];
} CDStruct_70511ce9;

typedef struct {
    CDUnknownFunctionPointerType _field1;
    CDUnknownFunctionPointerType _field2;
    CDUnknownFunctionPointerType _field3;
    CDUnknownFunctionPointerType _field4;
    CDUnknownFunctionPointerType _field5;
    CDUnknownFunctionPointerType _field6;
    CDUnknownFunctionPointerType _field7;
    CDUnknownFunctionPointerType _field8;
    CDUnknownFunctionPointerType _field9;
    CDUnknownFunctionPointerType _field10;
    CDUnknownFunctionPointerType _field11;
    CDUnknownFunctionPointerType _field12;
    CDUnknownFunctionPointerType _field13;
    CDUnknownFunctionPointerType _field14;
    CDUnknownFunctionPointerType _field15;
} CDStruct_e6af4fdc;

typedef struct {
    void *_field1;
    unsigned int _field2;
} CDStruct_f8bc7150;

typedef struct {
    double x;
    double y;
    double z;
} CDStruct_31142d93;

typedef struct {
    float _field1;
    float _field2;
    float _field3;
    float _field4;
    unsigned short _field5;
    float _field6;
    float _field7;
    float _field8;
    float _field9;
} CDStruct_85cb660e;

typedef struct {
    float _field1;
    float _field2;
} CDStruct_b2fbf00d;

typedef struct {
    int _field1;
    int _field2;
} CDStruct_1ef3fb1f;

typedef struct {
    long long version;
    void *info;
    CDUnknownFunctionPointerType retain;
    CDUnknownFunctionPointerType release;
    CDUnknownFunctionPointerType copyDescription;
} CDStruct_4210025a;

typedef struct {
    long long value;
    int timescale;
    unsigned int flags;
    long long epoch;
} CDStruct_1b6d18a9;

typedef struct {
    long long _field1;
    int _field2;
} CDStruct_87dc826d;

typedef struct {
    long long _field1;
    long long _field2;
} CDStruct_912cb5d2;

typedef struct CDStruct_183601bc;

typedef struct {
    CDStruct_bd2f613f _field1;
    CDStruct_bd2f613f _field2;
} CDStruct_2c0d991e;

typedef struct {
    CDStruct_1b6d18a9 start;
    CDStruct_1b6d18a9 duration;
} CDStruct_e83c9415;

typedef struct {
    struct tm_zip_s _field1;
    unsigned long long _field2;
    unsigned long long _field3;
    unsigned long long _field4;
} CDStruct_192a48cb;

// Ambiguous groups
typedef struct {
    float _field1;
    float _field2;
    float _field3;
} CDStruct_869f9c67;

typedef struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
    struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
        struct __rep {
            union {
                struct __long {
                    char *__data_;
                    unsigned long long __size_;
                    unsigned long long __cap_;
                } __l;
                struct __short {
                    char __data_[23];
                    struct {
                        unsigned char __size_;
                    } ;
                } __s;
                struct __raw {
                    unsigned long long __words[3];
                } __r;
            } ;
        } __first_;
    } __r_;
} basic_string_a490aa4c;

typedef struct basic_string<char, std::char_traits<char>, std::allocator<char>> {
    struct _Alloc_hider _field1;
} basic_string_1cdf7af0;

typedef struct map<std::basic_string<char>, std::basic_string<char>, std::less<std::basic_string<char>>, std::allocator<std::pair<const std::basic_string<char>, std::basic_string<char>>>> {
    struct _Rb_tree<std::basic_string<char>, std::pair<const std::basic_string<char>, std::basic_string<char>>, std::_Select1st<std::pair<const std::basic_string<char>, std::basic_string<char>>>, std::less<std::basic_string<char>>, std::allocator<std::pair<const std::basic_string<char>, std::basic_string<char>>>> _field1;
} map_7e3c2a19;

typedef struct shared_ptr<TCMCORE::XPush> {
    struct XPush *_M_ptr;
    struct __shared_count<__gnu_cxx::_Lock_policy::_S_atomic> _M_refcount;
} shared_ptr_7b3d4c74;

typedef struct shared_ptr<TCMCORE::XPushClient> {
    struct XPushClient *_M_ptr;
    struct __shared_count<__gnu_cxx::_Lock_policy::_S_atomic> _M_refcount;
} shared_ptr_ff5fb5c2;

typedef struct vector<TCM::DeviceToken, std::allocator<TCM::DeviceToken>> {
    struct _Vector_impl _field1;
} vector_95edad43;

typedef struct weak_ptr<videocore::iOS::CameraSource> {
    struct CameraSource *__ptr_;
    struct __shared_weak_count *__cntrl_;
} weak_ptr_48e2a55c;

#pragma mark Named Unions

union _GLKMatrix4 {
    struct {
        float m00;
        float m01;
        float m02;
        float m03;
        float m10;
        float m11;
        float m12;
        float m13;
        float m20;
        float m21;
        float m22;
        float m23;
        float m30;
        float m31;
        float m32;
        float m33;
    } ;
    float m[16];
};

union _GLKVector3 {
    struct {
        float x;
        float y;
        float z;
    } ;
    struct {
        float r;
        float g;
        float b;
    } ;
    struct {
        float s;
        float t;
        float p;
    } ;
    float v[3];
};

union _GLKVector4 {
    struct {
        float x;
        float y;
        float z;
        float w;
    } ;
    struct {
        float r;
        float g;
        float b;
        float a;
    } ;
    struct {
        float s;
        float t;
        float p;
        float q;
    } ;
    float v[4];
};

#pragma mark Typedef'd Unions

typedef union {
    unsigned int _field1;
    unsigned char _field2[16];
    char *_field3;
} CDUnion_7059b8d6;

