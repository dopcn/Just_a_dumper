//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class KGDirectoryMgr, KGRecordMgr, KGRuntimeMgr, NSLock;

@interface KGFileMgr : NSObject
{
    KGRuntimeMgr *_runtimeMgr;
    KGDirectoryMgr *_dirMgr;
    KGRecordMgr *_recordMgr;
    NSLock *_lockerFileMgr;
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (id)sharedSingleton;
- (void).cxx_destruct;
- (void)runtimeInfos;
- (void)setPlayerDuration:(int)arg1 forJobId:(long long)arg2;
- (void)reinit;
- (id)addBatchDownloads:(id)arg1 from:(id)arg2 start:(_Bool)arg3;
- (void)removeStatisticsHandler:(id)arg1;
- (void)addStatisticsHandler:(id)arg1;
- (void)removeClient:(long long)arg1;
- (void)addClient:(id)arg1 whoId:(long long)arg2;
- (void)releaseBandwidthForClient:(long long)arg1;
- (void)grabBandwidth:(long long)arg1 forClient:(long long)arg2;
- (_Bool)setConcurrentCount:(int)arg1 forClient:(long long)arg2;
- (_Bool)deleteDownloadsWithHolder:(id)arg1 error:(id *)arg2;
- (_Bool)stopDownloadsWithHolder:(id)arg1 error:(id *)arg2;
- (_Bool)startDownloads:(id)arg1 from:(id)arg2 error:(id *)arg3;
- (_Bool)startDownloadsWithHolder:(id)arg1 error:(id *)arg2;
- (id)infoDownload:(long long)arg1 error:(id *)arg2;
- (_Bool)deleteDownload:(long long)arg1 error:(id *)arg2;
- (_Bool)stopDownload:(long long)arg1 error:(id *)arg2;
- (_Bool)startDownload:(long long)arg1 isMoveJob:(_Bool)arg2 error:(id *)arg3;
- (_Bool)startDownload:(long long)arg1 error:(id *)arg2;
- (id)insertDownloadMusicFile:(id)arg1 from:(id)arg2 start:(_Bool)arg3 preempt:(_Bool)arg4 error:(id *)arg5;
- (id)addDownloadMusicFile:(id)arg1 from:(id)arg2 start:(_Bool)arg3 error:(id *)arg4;
- (void)dealloc;
- (void)configAllData;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)init;
- (_Bool)MigrateDirectoryFrom:(id)arg1 to:(id)arg2 error:(id *)arg3;
- (_Bool)setTempDirectory:(id)arg1 error:(id *)arg2;
- (_Bool)setOfflineDirectory:(id)arg1 error:(id *)arg2;
- (_Bool)setSharedDirectory:(id)arg1 error:(id *)arg2;
- (_Bool)setCacheDirectory:(id)arg1 error:(id *)arg2;
- (_Bool)setDownloadDirectory:(id)arg1 error:(id *)arg2;
- (void)addHashForfile:(id)arg1 hash:(id)arg2 qualityType:(int)arg3;
- (void)synchronizeSharedFiles:(id)arg1 holder:(id)arg2;
- (void)synchronizeIpodFiles:(id)arg1 holder:(id)arg2;
- (_Bool)deleteFiles:(id)arg1;
- (_Bool)deleteFile:(id)arg1 error:(id *)arg2;
- (int)deleteHolderForFiles:(id)arg1 holder:(id)arg2 error:(id *)arg3;
- (int)deleteFilesHolder:(id)arg1 except:(id)arg2 error:(id *)arg3;
- (int)deleteFilesHolder:(id)arg1 error:(id *)arg2;
- (_Bool)deleteFileHolder:(id)arg1 file:(id)arg2 error:(id *)arg3;
- (void)insertFiles:(id)arg1 holder:(id)arg2;
- (void)migrateDownloadedFiles:(id)arg1 holder:(id)arg2;
- (id)getTempFileQualities:(id)arg1 error:(id *)arg2;
- (int)increasePlayCount:(id)arg1;
- (int)getPlayCount:(id)arg1;
- (id)queryDownloadedNumber:(id)arg1;
- (id)getFileQualities:(id)arg1 error:(id *)arg2;
- (id)getFileDownloadInfos:(id)arg1 holder:(id)arg2 error:(id *)arg3;
- (id)getFileDownloadInfoWithFile:(id)arg1 error:(id *)arg2;
- (id)getFileDownloadInfo:(id)arg1 error:(id *)arg2;
- (id)getFileInfo:(id)arg1 error:(id *)arg2;
- (id)getFileSource:(id)arg1 error:(id *)arg2;
- (id)getFilesInfoDictonary:(id)arg1;
- (id)getFilePathWithFile:(id)arg1;
- (id)getFilePath:(id)arg1;
- (_Bool)isUnderControl:(id)arg1;
- (_Bool)fileIsExist:(id)arg1 error:(id *)arg2;
- (_Bool)isLocalExist:(id)arg1 error:(id *)arg2;
- (long long)pHandleRuntimeJob:(id)arg1 fileId:(long long)arg2 from:(id)arg3;
- (long long)pRecordForDownFile:(id)arg1 from:(id)arg2 error:(id *)arg3;
- (_Bool)pVerifyDownFile:(id)arg1 error:(id *)arg2;
- (_Bool)pVerifyHolder:(id)arg1 error:(id *)arg2;
- (_Bool)pVerifyJobId:(long long)arg1 error:(id *)arg2;
- (id)pAddDownloadMusicFile:(id)arg1 from:(id)arg2 start:(_Bool)arg3 isInsert:(_Bool)arg4 preempt:(_Bool)arg5 error:(id *)arg6;
- (id)pFindFileRecordsDictionaryWithKeys:(id)arg1;
- (id)pFindFileRecordsWithKeys:(id)arg1;
- (id)pFindFileRecord:(id)arg1;
- (id)pFindFileListRecord:(id)arg1;
- (id)pFindFileRecordWithFileId:(long long)arg1;
- (id)pFindFileRecordWithKey:(id)arg1;
- (_Bool)pDeleteFileHolder:(id)arg1 fileInfo:(id)arg2;
- (void)reinitMvProxy;
- (void)setForceMVProxy:(_Bool)arg1;
- (_Bool)isMVProxyRunning;
- (double)GetDownloadProgressForMvHash:(id)arg1;
- (_Bool)isRequestAvrival:(id)arg1 orProxyUrl:(id)arg2;
- (id)mapHashToProxyUrl:(id)arg1 holder:(id)arg2 error:(id *)arg3;
- (id)mapHashToProxyUrl:(id)arg1 holder:(id)arg2 returnJobId:(long long *)arg3 error:(id *)arg4;
- (id)localEncryptFileRecords;
- (_Bool)fileNeedDownload:(id)arg1 fileHolderMask:(unsigned long long)arg2 error:(id *)arg3;
- (struct StreamBase *)makeLocalStreamPath:(id)arg1;
- (struct StreamObjectAutoPtr)makeStream:(id)arg1 holder:(id)arg2 error:(id *)arg3;
- (id)queryHoldersForId:(long long)arg1;

@end

