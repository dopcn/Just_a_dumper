//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "HXVNoDelayTouchTableView.h"

#import "HXVConnectCustomerTableViewCellDelegate-Protocol.h"
#import "HXVContainerResponder-Protocol.h"
#import "HXVCustomerQueueTableViewCellDelegate-Protocol.h"
#import "HXVCustomerServiceChatTableViewCellDelegate-Protocol.h"
#import "HXVCustomerServiceEvaluateTableViewCellDelegate-Protocol.h"
#import "HXVCustomerServiceTableCellDelegate-Protocol.h"
#import "HXVMulButtonsTableViewCellDelegate-Protocol.h"
#import "HXVNewsRelatedRecommendAskCellDelegate-Protocol.h"
#import "HXVQuestionCellViewModelDelegate-Protocol.h"
#import "HXVReSelectTableViewCellDelegate-Protocol.h"
#import "HXVRecommendAskCellDelegate-Protocol.h"
#import "HXVSSMFormViewCellDelegate-Protocol.h"
#import "HXVUserFeedbackTableViewCellDelegate-Protocol.h"
#import "HXVoiceSayingTableViewCellDelegate-Protocol.h"
#import "UITableViewDataSource-Protocol.h"
#import "UITableViewDelegate-Protocol.h"
#import "UITextViewDelegate-Protocol.h"

@class HXVChatRecordManager, HXVHistoryDataService, HXVQuestionCellViewModel, NSString, UITextView, UIView;
@protocol HXVContainerResponder, HXVoiceChatTableViewDelegate;

@interface HXVoiceChatTableView : HXVNoDelayTouchTableView <UITableViewDataSource, UITableViewDelegate, UITextViewDelegate, HXVContainerResponder, HXVCustomerServiceTableCellDelegate, HXVReSelectTableViewCellDelegate, HXVQuestionCellViewModelDelegate, HXVNewsRelatedRecommendAskCellDelegate, HXVoiceSayingTableViewCellDelegate, HXVConnectCustomerTableViewCellDelegate, HXVCustomerServiceEvaluateTableViewCellDelegate, HXVCustomerQueueTableViewCellDelegate, HXVCustomerServiceChatTableViewCellDelegate, HXVMulButtonsTableViewCellDelegate, HXVUserFeedbackTableViewCellDelegate, HXVRecommendAskCellDelegate, HXVSSMFormViewCellDelegate>
{
    _Bool _scrollAnimation;
    _Bool _isSearching;
    _Bool _isEditing;
    id <HXVContainerResponder> _nextContainerResponder;
    id <HXVoiceChatTableViewDelegate> _chatViewDelegate;
    UITextView *_textView;
    NSString *_textViewTempText;
    UIView *_keyBoardOverlay;
    double _keyboardHeight;
    HXVQuestionCellViewModel *_underGoingQuestionModel;
    HXVChatRecordManager *_recordManager;
    HXVHistoryDataService *_historyService;
    unsigned long long _currentChatType;
}

+ (double)timeIntervalFromQuestionInToAnswerShowWithoutNetwork;
@property(nonatomic) unsigned long long currentChatType; // @synthesize currentChatType=_currentChatType;
@property(retain, nonatomic) HXVHistoryDataService *historyService; // @synthesize historyService=_historyService;
@property(retain, nonatomic) HXVChatRecordManager *recordManager; // @synthesize recordManager=_recordManager;
@property(retain, nonatomic) HXVQuestionCellViewModel *underGoingQuestionModel; // @synthesize underGoingQuestionModel=_underGoingQuestionModel;
@property(nonatomic) double keyboardHeight; // @synthesize keyboardHeight=_keyboardHeight;
@property(retain, nonatomic) UIView *keyBoardOverlay; // @synthesize keyBoardOverlay=_keyBoardOverlay;
@property(copy, nonatomic) NSString *textViewTempText; // @synthesize textViewTempText=_textViewTempText;
@property(nonatomic) _Bool isEditing; // @synthesize isEditing=_isEditing;
@property(retain, nonatomic) UITextView *textView; // @synthesize textView=_textView;
@property(nonatomic) _Bool isSearching; // @synthesize isSearching=_isSearching;
@property(nonatomic) _Bool scrollAnimation; // @synthesize scrollAnimation=_scrollAnimation;
@property(nonatomic) __weak id <HXVoiceChatTableViewDelegate> chatViewDelegate; // @synthesize chatViewDelegate=_chatViewDelegate;
@property(nonatomic) __weak id <HXVContainerResponder> nextContainerResponder; // @synthesize nextContainerResponder=_nextContainerResponder;
- (void).cxx_destruct;
- (id)sayArray;
- (id)resultArray;
- (id)dataSourceArray;
- (void)unsatisfyButtonClicked:(id)arg1;
- (void)mulButtonClickedWithIndex:(long long)arg1 model:(id)arg2;
- (void)sayingImageViewClicked:(id)arg1;
- (void)sayingTableViewDidSelectSubscriptionWithQuestion:(id)arg1 isSubscribed:(_Bool)arg2 subscribeButton:(id)arg3;
- (void)sayingTableViewCellClicked:(id)arg1;
- (void)questionModelChangeToFinishLoadingForModel:(id)arg1;
- (void)newsRelatedRecommendAskCellDidSelectQuestionAtIndex:(long long)arg1 atCell:(id)arg2;
- (void)newsRelatedRecommendAskCellDidExpandRecommendAtCell:(id)arg1;
- (void)customerServiceChatImageClicked:(id)arg1 imageView:(id)arg2;
- (void)customerQueceButtonClickedWithIsQueuing:(_Bool)arg1;
- (void)customerServiceEvaluateButtonClickedWithGrade:(unsigned long long)arg1 userId:(id)arg2;
- (void)connectCustomerServiceButtonClicked;
- (void)reselectTableViewCellButtonClicked:(id)arg1;
- (void)customerServiceImageViewClicked:(id)arg1 imageView:(id)arg2;
- (void)customerServiceTableCellDidSelectRowWithString:(id)arg1;
- (void)reloadTableViewCallbackWithRecommendAskCell:(id)arg1;
- (void)formCellDidStartAllMonitorSuccess:(id)arg1;
- (void)investAnalysisViewItemClicked:(id)arg1;
- (void)radarContainerCloseTutorialView:(id)arg1;
- (void)multiTableContainerViewChangeTab:(id)arg1;
- (id)nextContainerResponser;
- (_Bool)canHandlingEvent:(id)arg1;
- (void)receiveEvent:(id)arg1;
- (void)scrollViewDidScroll:(id)arg1;
- (double)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (void)changeViewWithChatType:(unsigned long long)arg1;
- (void)updateQuestionCollectionStatus;
- (void)shakeRecommendCell;
- (void)addResultWithResult:(id)arg1;
- (void)addSayWithResult:(id)arg1 type:(unsigned long long)arg2;
- (id)initWithFrame:(struct CGRect)arg1 chatViewDelegate:(id)arg2;
- (_Bool)isShowingSemiScreen;
- (void)showAnswerAnimationWithCell:(id)arg1;
- (void)showAddSayingAnimationWithCell:(id)arg1;
- (void)scrollResultIfNeedWithResultCount:(long long)arg1;
- (void)scrollToLastResultCell;
- (double)getLastSayCellYPos;
- (double)getCellsYPosWithIndex:(long long)arg1;
- (double)getCellHeightWithModel:(id)arg1;
- (void)headerRefreshingAction;
- (void)initRefreshHeader;
- (void)initView;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

