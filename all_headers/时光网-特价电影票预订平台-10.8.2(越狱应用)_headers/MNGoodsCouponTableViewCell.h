//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "MTBDynamicHeightTableViewCell.h"

@class CouponListEntity, MASConstraint, MTBAttributedStringLabel, MTBImageView, MTBLabel, MTCPromptLabel;

@interface MNGoodsCouponTableViewCell : MTBDynamicHeightTableViewCell
{
    long long _goodsCouponTag;
    CouponListEntity *_entity;
    MTBLabel *_labelPrice;
    MTCPromptLabel *_labelPrompt;
    MTBLabel *_labelName;
    MTBAttributedStringLabel *_labelDescription;
    MTBLabel *_labelExpiryDate;
    MTBImageView *_imageOutOfDate;
    MASConstraint *_priceConstraintWithPrompt;
    MASConstraint *_priceConstraintWithOutPrompt;
}

@property(retain, nonatomic) MASConstraint *priceConstraintWithOutPrompt; // @synthesize priceConstraintWithOutPrompt=_priceConstraintWithOutPrompt;
@property(retain, nonatomic) MASConstraint *priceConstraintWithPrompt; // @synthesize priceConstraintWithPrompt=_priceConstraintWithPrompt;
@property(retain, nonatomic) MTBImageView *imageOutOfDate; // @synthesize imageOutOfDate=_imageOutOfDate;
@property(retain, nonatomic) MTBLabel *labelExpiryDate; // @synthesize labelExpiryDate=_labelExpiryDate;
@property(retain, nonatomic) MTBAttributedStringLabel *labelDescription; // @synthesize labelDescription=_labelDescription;
@property(retain, nonatomic) MTBLabel *labelName; // @synthesize labelName=_labelName;
@property(retain, nonatomic) MTCPromptLabel *labelPrompt; // @synthesize labelPrompt=_labelPrompt;
@property(retain, nonatomic) MTBLabel *labelPrice; // @synthesize labelPrice=_labelPrice;
@property(retain, nonatomic) CouponListEntity *entity; // @synthesize entity=_entity;
@property(nonatomic) long long goodsCouponTag; // @synthesize goodsCouponTag=_goodsCouponTag;
- (void).cxx_destruct;
- (id)getDateStringWithTimeInterval:(id)arg1;
- (void)setDatas;
- (void)updateSubviewsConstraints;
- (void)setupViews;
- (void)prepareForReuse;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;

@end

