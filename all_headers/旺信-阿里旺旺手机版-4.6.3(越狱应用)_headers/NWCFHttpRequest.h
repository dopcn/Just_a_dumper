//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSOperation.h>

@class NSDate, NSDictionary, NSError, NSInputStream, NSMutableDictionary, NSRecursiveLock, NSString, NSThread, NSTimer, NSURL, NSURLRequest, NWCFDataDecompressor;
@protocol NWCFHttpRequestDelegate;

@interface NWCFHttpRequest : NSOperation
{
    struct __CFHTTPMessage *httpRequest;
    _Bool _readStreamIsScheduled;
    _Bool _needsRedirect;
    _Bool _ignorePartialNotifyWhenRedirect;
    int _responseStatusCode;
    NSURL *_originalURL;
    NSURL *_redirectURL;
    NSURL *_url;
    NSURLRequest *_urlRequest;
    NSMutableDictionary *_requestHeaders;
    NSDictionary *_responseHeaders;
    NSError *_error;
    NSThread *_currentThread;
    id <NWCFHttpRequestDelegate> _delegate;
    NSMutableDictionary *_sslProperties;
    NSInputStream *_readStream;
    double _timeOutSeconds;
    NSTimer *_timer;
    unsigned long long _contentLength;
    NSString *_requestMethod;
    NSDate *_lastActivityTime;
    NSRecursiveLock *_cancelledLock;
    NWCFDataDecompressor *_dataDecompressor;
    long long _state;
}

+ (void)runRequests;
+ (id)threadForRequest:(id)arg1;
+ (void)initialize;
@property(nonatomic) long long state; // @synthesize state=_state;
@property(retain) NWCFDataDecompressor *dataDecompressor; // @synthesize dataDecompressor=_dataDecompressor;
@property(retain) NSRecursiveLock *cancelledLock; // @synthesize cancelledLock=_cancelledLock;
@property(retain) NSDate *lastActivityTime; // @synthesize lastActivityTime=_lastActivityTime;
@property _Bool ignorePartialNotifyWhenRedirect; // @synthesize ignorePartialNotifyWhenRedirect=_ignorePartialNotifyWhenRedirect;
@property(nonatomic) _Bool needsRedirect; // @synthesize needsRedirect=_needsRedirect;
@property(retain, nonatomic) NSString *requestMethod; // @synthesize requestMethod=_requestMethod;
@property unsigned long long contentLength; // @synthesize contentLength=_contentLength;
@property(retain, nonatomic) NSTimer *timer; // @synthesize timer=_timer;
@property(nonatomic) double timeOutSeconds; // @synthesize timeOutSeconds=_timeOutSeconds;
@property(nonatomic) _Bool readStreamIsScheduled; // @synthesize readStreamIsScheduled=_readStreamIsScheduled;
@property(retain, nonatomic) NSInputStream *readStream; // @synthesize readStream=_readStream;
@property(retain, nonatomic) NSMutableDictionary *sslProperties; // @synthesize sslProperties=_sslProperties;
@property __weak id <NWCFHttpRequestDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) NSThread *currentThread; // @synthesize currentThread=_currentThread;
@property(retain) NSError *error; // @synthesize error=_error;
@property int responseStatusCode; // @synthesize responseStatusCode=_responseStatusCode;
@property(retain) NSDictionary *responseHeaders; // @synthesize responseHeaders=_responseHeaders;
@property(retain) NSMutableDictionary *requestHeaders; // @synthesize requestHeaders=_requestHeaders;
@property(retain, nonatomic) NSURLRequest *urlRequest; // @synthesize urlRequest=_urlRequest;
@property(retain) NSURL *url; // @synthesize url=_url;
@property(retain) NSURL *redirectURL; // @synthesize redirectURL=_redirectURL;
@property(copy) NSURL *originalURL; // @synthesize originalURL=_originalURL;
- (void).cxx_destruct;
- (void)resume;
- (_Bool)isPaused;
- (void)operationDidPause;
- (void)pause;
- (void)cancel;
- (void)finish;
- (void)start;
- (_Bool)isConcurrent;
- (_Bool)isFinished;
- (_Bool)isExecuting;
- (_Bool)isReady;
- (void)requestDidReceiveData:(id)arg1;
- (void)requestFailed;
- (void)requestFinished;
- (void)requestWillRedirect:(id)arg1;
- (void)requestDidReceiveResponse:(id)arg1;
- (_Bool)isResponseCompressed;
- (void)cancelLoad;
- (void)checkRequestStatus;
- (_Bool)shouldTimeOut;
- (void)handleStreamError;
- (void)markAsFinished;
- (void)handleStreamComplete;
- (_Bool)willRedirect;
- (void)readResponseHeaders;
- (void)handleBytesAvailable;
- (void)handleNetworkEvent:(unsigned long long)arg1;
- (void)destroyReadStream;
- (void)unscheduleReadStream;
- (void)scheduleReadStream;
- (void)failWithError:(id)arg1;
- (void)requestSuccess;
- (void)cancelOnRequestThread;
- (void)updateStatus:(id)arg1;
- (void)stopTimer;
- (void)buildPostBody;
- (void)buildRequestHeaders;
- (_Bool)ignoreHTTPHeader:(id)arg1 value:(id)arg2;
- (void)addRequestHeader:(id)arg1 value:(id)arg2;
- (void)sendInThread;
- (void)sendRequest;
- (id)runLoopMode;
- (void)dealloc;
- (id)initWithURLRequest:(id)arg1 delegate:(id)arg2;

@end

