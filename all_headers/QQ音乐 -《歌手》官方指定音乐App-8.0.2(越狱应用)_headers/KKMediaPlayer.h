//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

#import "QQMediaPlaybackDelegate-Protocol.h"

@class KKMediaPlayInfo, KKMediaRootViewController, KKVideoInfo, NSError, NSMutableArray, NSString, QQMediaPlayerController, StatusReportCtl;
@protocol KKMediaPlayerDelegate, KKMediaPlayerPlayerItemExchange, KKMediaPlayerUrlExchange;

@interface KKMediaPlayer : NSObject <QQMediaPlaybackDelegate>
{
    id <KKMediaPlayerDelegate> _delegate;
    long long _drmCacheProxyFailedIndex;
    long long _drmProxyRetryTimes;
    long long _currentClipIndex;
    _Bool _moviePlayerCacheStarted;
    long long _replayCountForPresentError;
    int playid;
    _Bool _disableAirplay;
    int _playRequestSeq;
    QQMediaPlayerController *_moviePlayerController;
    KKMediaPlayInfo *_mediaPlayInfo;
    KKVideoInfo *_videoInfo;
    StatusReportCtl *_reportCtrl;
    NSMutableArray *_videoUrlsArray;
    NSMutableArray *_videoTimeArray;
    NSError *_lastPlayerError;
    NSString *_lastPlayerErrorURL;
    id <KKMediaPlayerUrlExchange> _urlExchange;
    NSString *_ipv6Pref;
    KKMediaRootViewController *_mainCtrl;
    id <KKMediaPlayerPlayerItemExchange> _itemExchange;
}

@property(nonatomic) id <KKMediaPlayerPlayerItemExchange> itemExchange; // @synthesize itemExchange=_itemExchange;
@property(nonatomic) int playRequestSeq; // @synthesize playRequestSeq=_playRequestSeq;
@property(nonatomic) _Bool disableAirplay; // @synthesize disableAirplay=_disableAirplay;
@property(nonatomic) KKMediaRootViewController *mainCtrl; // @synthesize mainCtrl=_mainCtrl;
@property(copy, nonatomic) NSString *ipv6Pref; // @synthesize ipv6Pref=_ipv6Pref;
@property(nonatomic) id <KKMediaPlayerDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) id <KKMediaPlayerUrlExchange> urlExchange; // @synthesize urlExchange=_urlExchange;
@property(retain) NSString *lastPlayerErrorURL; // @synthesize lastPlayerErrorURL=_lastPlayerErrorURL;
@property(retain) NSError *lastPlayerError; // @synthesize lastPlayerError=_lastPlayerError;
@property(readonly, retain, nonatomic) NSMutableArray *videoTimeArray; // @synthesize videoTimeArray=_videoTimeArray;
@property(readonly, retain, nonatomic) NSMutableArray *videoUrlsArray; // @synthesize videoUrlsArray=_videoUrlsArray;
@property(retain) StatusReportCtl *reportCtrl; // @synthesize reportCtrl=_reportCtrl;
@property(retain) KKVideoInfo *videoInfo; // @synthesize videoInfo=_videoInfo;
@property(retain) KKMediaPlayInfo *mediaPlayInfo; // @synthesize mediaPlayInfo=_mediaPlayInfo;
@property(retain) QQMediaPlayerController *moviePlayerController; // @synthesize moviePlayerController=_moviePlayerController;
- (_Bool)isHls;
- (void)rePlayCurrentVideoUsingAVPlayer;
- (void)sendQQPlayerCallbackEvent:(id)arg1 eventID:(int)arg2 message:(id)arg3;
- (void)sendSwitchEventMsg:(id)arg1 eventid:(int)arg2;
- (void)updateQQPlayerSetting;
- (void)updateIPV6Pref;
- (id)getVideoScreenShotAtTime:(CDStruct_1b6d18a9)arg1;
- (id)getCurrentScreenShot;
- (id)updateCurrentItem:(id)arg1;
- (void)mediaPlayerPresentationSize:(struct CGSize)arg1 withFileCacheOrder:(long long)arg2;
- (void)mediaPlayerError:(id)arg1 log:(id)arg2;
- (void)mediaPlayerKeyPath:(id)arg1 change:(id)arg2;
- (void)airPlayVideoDidActive:(_Bool)arg1;
- (void)onAVErrorOccurs:(id)arg1;
- (void)sendMediaPlayerLog:(int)arg1 withLogInfo:(id)arg2;
- (void)mediaPlayerCacheStateDidChange:(id)arg1 withError:(id)arg2 withFileCacheOrder:(long long)arg3 withCacheState:(long long)arg4 withIsCurrentPlayFile:(_Bool)arg5;
- (void)mediaPlayerDidExitFullscreen:(id)arg1;
- (void)mediaPlayerDidEnterFullscreen:(id)arg1;
- (void)mediaPlayerCheckMediaUrlError:(id)arg1 withError:(id)arg2 withFileCacheOrder:(long long)arg3 withIsCurrentFile:(_Bool)arg4;
- (void)mediaPlayerRequestStateChange:(id)arg1 withError:(id)arg2 withFileCacheOrder:(long long)arg3 withIsCurrentFile:(_Bool)arg4;
- (void)mediaPlayerPlaybackDidFinish:(id)arg1;
- (void)mediaPlayerPlaybackStateDidChange:(id)arg1 withError:(id)arg2 withFileCacheOrder:(long long)arg3 withIsCurrentFile:(_Bool)arg4;
- (void)mediaPlayerLoadStateDidChange:(id)arg1 withError:(id)arg2 withFileCacheOrder:(long long)arg3 withIsCurrentFile:(_Bool)arg4;
- (void)mediaPlayerNaturalSizeAvailable:(id)arg1;
- (id)deviceIPAddress;
- (long long)getQQMediaTypeByVideoDataType:(long long)arg1;
- (int)getPlayerFlag;
- (id)getAndComponentCurSInfoUrl;
- (id)getAndComponentCurHlsUrl;
- (_Bool)checkCachingTimeWithDuration;
- (double)checkCachingTimeThanPlayingTime;
- (_Bool)checkMediaPlayerStateIsPlayed;
- (void)onPlayerMediaState:(long long)arg1 withError:(id)arg2 withFileCacheOrder:(long long)arg3;
- (_Bool)isNetworkAvaliable;
- (void)onHLSProxyReady:(id)arg1 mediaID:(id)arg2 mediaIndex:(long long)arg3;
- (void)onContentProxyReady:(id)arg1 mediaID:(id)arg2 mediaIndex:(long long)arg3;
- (void)onDrmProxyResult:(id)arg1;
- (_Bool)checkDrmContentProxy:(long long)arg1 currentClipFlag:(long long)arg2 delayedTime:(double)arg3;
- (_Bool)checkDrmHlsProxy:(id)arg1;
- (void)prepareForDrmVideoPlay;
- (double)playableDuration;
- (double)duration;
- (double)currentPlaybackTime;
- (_Bool)testIfIpv4:(id)arg1;
- (void)updateVideoUrlsForIpv6;
- (void)slideToPlay:(double)arg1;
- (void)moviePlayerStartToCache;
- (void)startToPlayVideo:(id)arg1 withVideoInfo:(id)arg2 withReportCtrl:(id)arg3;
- (void)rePlayCurrentVideo;
- (void)closePlayer;
- (void)updateVideoUrls:(id)arg1;
- (void)updateUrlsForProxyPlayWithUrlsArray:(id)arg1 Init:(_Bool)arg2;
- (void)resetPlayer;
- (void)dealloc;
- (id)initWithPlayerController:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

