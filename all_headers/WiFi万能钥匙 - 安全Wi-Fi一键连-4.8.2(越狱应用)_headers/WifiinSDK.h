//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "CCNetWifiManagerDelegate-Protocol.h"

@class CCWICommercial, CCWIConnection, CCWINetProvider, CCWINetWifiManager, CCWITimer, NSString;
@protocol WifiinDelegate, WifiinMemberBindDelegate;

@interface WifiinSDK : NSObject <CCNetWifiManagerDelegate>
{
    CCWINetWifiManager *_wifiManager;
    CCWINetProvider *_currentNetProvider;
    CCWIConnection *_connection;
    CCWICommercial *_commercial;
    int _connStatus;
    CCWITimer *_connectWifitimer;
    double _timeCounter;
    double _onlineTime;
    NSString *_nation;
    NSString *_province;
    NSString *_city;
    int _commercialApid;
    int count;
    _Bool _stopConnect;
    id <WifiinDelegate> _wifiDelegate;
    id <WifiinMemberBindDelegate> _memberDelegate;
    NSString *_connectSSID;
}

+ (_Bool)checkNetwork;
+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (id)sharedWifiinSDK;
@property(nonatomic) _Bool stopConnect; // @synthesize stopConnect=_stopConnect;
@property(retain, nonatomic) NSString *connectSSID; // @synthesize connectSSID=_connectSSID;
@property(nonatomic) int connStatus; // @synthesize connStatus=_connStatus;
@property(nonatomic) double onlineTime; // @synthesize onlineTime=_onlineTime;
@property(nonatomic) double timeCounter; // @synthesize timeCounter=_timeCounter;
@property(nonatomic) int commercialApid; // @synthesize commercialApid=_commercialApid;
@property(retain, nonatomic) CCWITimer *connectWifitimer; // @synthesize connectWifitimer=_connectWifitimer;
@property(retain, nonatomic) CCWICommercial *commercial; // @synthesize commercial=_commercial;
@property(retain, nonatomic) CCWINetWifiManager *wifiManager; // @synthesize wifiManager=_wifiManager;
@property(nonatomic) __weak id <WifiinMemberBindDelegate> memberDelegate; // @synthesize memberDelegate=_memberDelegate;
@property(nonatomic) __weak id <WifiinDelegate> wifiDelegate; // @synthesize wifiDelegate=_wifiDelegate;
@property(retain, nonatomic) CCWIConnection *connection; // @synthesize connection=_connection;
@property(retain, nonatomic) CCWINetProvider *currentNetProvider; // @synthesize currentNetProvider=_currentNetProvider;
@property(retain, nonatomic) NSString *city; // @synthesize city=_city;
@property(retain, nonatomic) NSString *province; // @synthesize province=_province;
@property(retain, nonatomic) NSString *nation; // @synthesize nation=_nation;
- (void).cxx_destruct;
- (id)getPassword:(id)arg1;
- (void)setWifiPassword:(id)arg1;
- (void)applicationWillTerminate:(id)arg1;
- (void)applicationDidBecomeActive:(id)arg1;
- (void)applicationWillResignActive:(id)arg1;
- (void)networkDisconnect:(id)arg1;
- (void)timerCallback:(id)arg1;
- (void)commercialTimerCallback:(id)arg1;
- (void)didConnect:(id)arg1;
- (void)willConnect:(id)arg1;
- (void)didScanning:(id)arg1 error:(id)arg2;
- (void)scanWifi;
- (void)sendPersonalWifiHeartbeatNation:(id)arg1 province:(id)arg2 city:(id)arg3 ssid:(id)arg4 mac:(id)arg5 apid:(int)arg6 latitude:(float)arg7 longitude:(float)arg8 geoSupplier:(int)arg9;
- (id)aes128DecryptString:(id)arg1;
- (int)getUserID;
- (id)qureyWifiHostInfoList:(int)arg1 pageSize:(int)arg2 latitude:(float)arg3 longitude:(float)arg4 apType:(id)arg5 radius:(int)arg6;
- (id)getCacheWifiHostInfo;
- (void)reportEventCompletetion:(CDUnknownBlockType)arg1;
- (id)shareApSSID:(id)arg1 mac:(id)arg2 latitude:(float)arg3 longitude:(float)arg4 geoSupplier:(int)arg5 psk:(id)arg6 bussinessType:(int)arg7 apType:(int)arg8;
- (_Bool)recordNearbyHotSpots:(id)arg1 latitude:(float)arg2 longitude:(float)arg3 province:(id)arg4 city:(id)arg5;
- (double)distanceBetweenOrderBylat1:(double)arg1 lat2:(double)arg2 lng1:(double)arg3 lng2:(double)arg4;
- (double)radians:(double)arg1;
- (_Bool)isThisVersionApid:(int)arg1;
- (id)matchWifiList:(id)arg1 cacheWifiHostArray:(id)arg2;
- (void)getNearHotFromServer:(float)arg1 longitude:(float)arg2 wifiArray:(id)arg3 withCompleteHandler:(CDUnknownBlockType)arg4;
- (void)uploadApInfoApid:(int)arg1 latitude:(float)arg2 longitude:(float)arg3 province:(id)arg4 city:(id)arg5 connected:(int)arg6 geoSupplier:(int)arg7 businessType:(int)arg8 psk:(id)arg9;
- (void)updateLocalApAccount:(_Bool)arg1;
- (int)getWifiCertificationStatus;
- (void)cancelConnect;
- (void)disConnect;
- (void)connect:(id)arg1 province:(id)arg2 city:(id)arg3 latitude:(float)arg4 longitude:(float)arg5 geoSupplier:(int)arg6 partnerarg:(id)arg7;
- (_Bool)isSupportLocation:(id)arg1 province:(id)arg2 city:(id)arg3;
- (void)disconnectBusinessWifi:(id)arg1 apid:(long long)arg2;
- (void)backCallWithError:(id)arg1 apId:(long long)arg2 latitude:(float)arg3 longitude:(float)arg4 geoSupplier:(int)arg5 logic:(id)arg6 psk:(id)arg7;
- (void)connectNotSMSBusinessWifi:(id)arg1 province:(id)arg2 city:(id)arg3 ssid:(id)arg4 apid:(long long)arg5 latitude:(float)arg6 longitude:(float)arg7 geoSupplier:(int)arg8 partnerarg:(id)arg9 psk:(id)arg10;
- (void)checkSMSWithApId:(long long)arg1 latitude:(float)arg2 longitude:(float)arg3 geoSupplier:(int)arg4 ssid:(id)arg5 logic:(id)arg6 psk:(id)arg7;
- (void)connectSMSBusinessWifi:(id)arg1 province:(id)arg2 city:(id)arg3 ssid:(id)arg4 apid:(long long)arg5 latitude:(float)arg6 longitude:(float)arg7 geoSupplier:(int)arg8 partnerarg:(id)arg9 phoneNumber:(id)arg10 psk:(id)arg11;
- (void)connectUndistinguishBusinessWifi:(id)arg1 province:(id)arg2 city:(id)arg3 ssid:(id)arg4 apid:(long long)arg5 latitude:(float)arg6 longitude:(float)arg7 geoSupplier:(int)arg8 partnerarg:(id)arg9 phoneNumber:(id)arg10 psk:(id)arg11;
- (void)connectBusinessWifi:(id)arg1 province:(id)arg2 city:(id)arg3 ssid:(id)arg4 apid:(long long)arg5 latitude:(float)arg6 longitude:(float)arg7 geoSupplier:(int)arg8 partnerarg:(id)arg9;
- (void)connectBusinessWifi:(id)arg1 province:(id)arg2 city:(id)arg3 ssid:(id)arg4 apid:(long long)arg5 latitude:(float)arg6 longitude:(float)arg7 geoSupplier:(int)arg8 partnerarg:(id)arg9 phoneNumber:(id)arg10;
- (_Bool)isPhoneNumber:(id)arg1;
- (_Bool)isBind:(id)arg1 memberId:(id)arg2;
- (void)memberBind:(id)arg1 memberId:(id)arg2;
- (id)getWifiinSDkVersion;
- (void)dealloc;
- (id)init;
- (id)autorelease;
- (void)release;
- (unsigned long long)retainCount;
- (id)retain;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

