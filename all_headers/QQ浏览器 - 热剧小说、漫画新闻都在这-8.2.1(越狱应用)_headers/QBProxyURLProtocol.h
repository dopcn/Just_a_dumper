//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSURLProtocol.h>

#import "CocoaSPDYDelegate-Protocol.h"
#import "QBNetworkDelegate-Protocol.h"

@class NSDate, NSError, NSMutableData, NSString, NSThread, QBDNSQueryItem, QBNetwork, QBProtocolProxy, SPDYProtocol, _QBHostInfo;
@protocol NSURLProtocolClient;

@interface QBProxyURLProtocol : NSURLProtocol <QBNetworkDelegate, CocoaSPDYDelegate>
{
    SPDYProtocol *_cocoaSPDYRequest;
    long long _directReasonType;
    _Bool _stopLoading;
    int _resourceType;
    QBProtocolProxy *_protocolProxy;
    _Bool _is803or805error;
    _Bool _receivedResponsed;
    NSError *_httpsError;
    QBDNSQueryItem *_currentQueryItem;
    QBDNSQueryItem *_preQueryItem;
    NSDate *_startTime;
    long long _dnsHTTPStatus;
    long long _preQueryErr;
    _Bool _isTBSInnerRequest;
    _Bool _isWML;
    NSMutableData *_wmlData;
    _Bool _isSharpP;
    NSMutableData *_sharpPData;
    _Bool _fromSPDY;
    _Bool _isHTMLRespnse;
    _Bool _hadProceJs;
    _Bool _hadFindFirstFlag;
    unsigned char _FindInsertPostionStatus;
    char *_firstTag;
    unsigned long long _firstTagPos;
    _Bool _firstTagFound;
    _Bool _isWKType;
    _Bool _hadCSPHeader;
    _Bool _NoRspCharset;
    long long _adFilterType;
    _Bool _adFilterForceProxyFlag;
    NSString *_originPOSTURLString;
    _Bool _isDaWangCanFreeFlow;
    NSString *_proxzTokenInfo;
    unsigned long long _contentLength;
    unsigned long long _headersLength;
    unsigned long long _daWangDataLength;
    long long _daWangReqType;
    long long _statusCode_8xx;
    long long _daWangDirectType;
    NSThread *_oldReqThread;
    _Bool _hadStartLoading;
    NSString *_dwContentType;
    long long _dwRetCode;
    _QBHostInfo *_currentHttpsProxzHost;
    NSString *_currentSpdyServerPort;
    _Bool _hadRetryTunnel;
    long long _qCount;
    QBNetwork *_network;
    id <NSURLProtocolClient> _preClient;
}

+ (struct _opaque_pthread_t *)getWebThread;
+ (void)getSystemThreads;
+ (id)toInjectScriptTags;
+ (void)removeAllFrameInfo;
+ (void)removeFrameInfoWithAddress:(id)arg1;
+ (_Bool)isFrameSrcForInjectWithURLString:(id)arg1;
+ (_Bool)isFrameSrcForRedirectWithURLString:(id)arg1;
+ (void)addFrameInfoWithAddress:(id)arg1 withURLString:(id)arg2;
+ (_Bool)isValidCachedResponse:(id)arg1;
+ (_Bool)requestIsCacheEquivalent:(id)arg1 toRequest:(id)arg2;
+ (id)canonicalRequestForRequest:(id)arg1;
+ (_Bool)isTBSInnerURL:(id)arg1;
+ (_Bool)canInitWithRequest:(id)arg1;
+ (id)getCurrentMainURL;
+ (void)setCurrentMainURL:(id)arg1;
+ (id)currentQProxyManager;
+ (void)startProxyWithWorker:(Class)arg1;
+ (_Bool)isStartProxy;
@property __weak id <NSURLProtocolClient> preClient; // @synthesize preClient=_preClient;
@property(retain, nonatomic) QBNetwork *network; // @synthesize network=_network;
- (void).cxx_destruct;
- (void)reportDaWangInfo;
- (void)reportDNSHijack:(id)arg1 queryItem:(id)arg2;
- (void)reportDNSDadRequest:(long long)arg1 aInterval:(long long)arg2 bInterval:(long long)arg3 cInterval:(long long)arg4;
- (id)qbNetworkOriginHost:(id)arg1;
- (void)qbNetwork:(id)arg1 didReceiveChallenge:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)qbNetwork:(id)arg1 willSendRequestForAuthenticationChallenge:(id)arg2;
- (struct __SecTrust *)newServerTrust:(struct __SecTrust *)arg1 forDomain:(id)arg2;
- (id)qbNetwork:(id)arg1 willCacheResponse:(id)arg2;
- (id)qbNetwork:(id)arg1 willSendRequest:(id)arg2 redirectResponse:(id)arg3;
- (void)qbNetwork:(id)arg1 didFailWithError:(id)arg2;
- (void)qbNetworkDidFinishLoading:(id)arg1;
- (void)qbNetwork:(id)arg1 didReceiveData:(id)arg2;
- (void)sendRspToWebView:(id)arg1;
- (void)qbNetwork:(id)arg1 didReceiveResponse:(id)arg2;
- (void)_procInValidToken;
- (void)ifNeedNotfiyJsGetCookieResponse:(id)arg1;
- (_Bool)isNeedSpecialRedirectedProcessByHttpResponseHeaders:(id)arg1;
- (void)didFailWithErrorCocoaSPDY:(id)arg1;
- (void)didFinishLoadingCocoaSPDY;
- (void)wasRedirectedToRequestCocoaSPDY:(id)arg1 redirectResponse:(id)arg2;
- (void)didLoadDataCocoaSPDY:(id)arg1;
- (void)didReceiveResponseCocoaSPDY:(id)arg1;
- (void)sendRspToWebViewForRedirectWithLocation:(id)arg1;
- (_Bool)isNeedProcRedirectForLess_9_2_IOS;
- (id)injectScriptToData:(id)arg1;
- (void)recordRspContentType:(id)arg1;
- (id)fromSPDY;
- (_Bool)returnCacheDataFor304:(unsigned long long)arg1;
- (_Bool)isValidateConditionalRequest;
- (_Bool)canLoadCacheData;
- (id)cachedURLResponseIfPossible;
- (void)dealloc;
- (void)mttStopLoading;
- (void)stopLoading;
- (void)_doSendRequest:(id)arg1 directType:(long long)arg2;
- (void)_doSendRequestWarpper:(id)arg1;
- (id)_dnsQueryItem:(id)arg1 cached:(_Bool)arg2;
- (void)_sendRequestDirect:(long long)arg1;
- (void)probeSPDYServerIfNeeded;
- (void)buildQproxyRequest;
- (id)madeProxzExtraHeaders;
- (void)_set_Q_PROXY_PARAM:(id)arg1 withParam:(id)arg2;
- (void)_sendRequestByQProxy;
- (void)mttStartLoading;
- (void)sendInTunnelWithToken:(id)arg1;
- (void)notifyWebViewError;
- (void)observerForStartLoading:(id)arg1;
- (void)runStartLoading;
- (void)startLoading;
- (id)initWithRequest:(id)arg1 cachedResponse:(id)arg2 client:(id)arg3;
- (id)client;
- (void)preStopLoading;
- (void)preStartLoading;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

