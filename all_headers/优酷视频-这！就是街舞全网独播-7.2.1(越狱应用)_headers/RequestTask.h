//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "YKFTask.h"

#import "ConnectionDelegate-Protocol.h"

@class NSString, NSTimer;
@protocol ConnectionProtocol, RequestProtocol, ResponseHandleProtocol, ResponseProtocol;

@interface RequestTask : YKFTask <ConnectionDelegate>
{
    id <RequestProtocol> _request;
    id <ResponseProtocol> _response;
    _Bool _useSPDY;
    _Bool _useProxy;
    _Bool _onlyReachableViaWifi;
    _Bool _needRequestWhenNetworkOK;
    _Bool _isHeadRequest;
    int _downloadSpeed;
    int _retryCount;
    int _maxDownloadSpeed;
    int _currentRetryCount;
    int _lastOneSecondReadBytes;
    double _maxProgress;
    CDUnknownBlockType _dataTransformBlock;
    CDUnknownBlockType _startBlock;
    id _userData;
    double _requestBeginTime;
    double _requestEndTime;
    long long _uploadBytes;
    long long _receiveBytes;
    CDUnknownBlockType _exceptionCallback;
    CDUnknownBlockType _receiveResponseCallback;
    CDUnknownBlockType _receiveDataCallback;
    CDUnknownBlockType _didFinishedCallback;
    double _retryIncrementTime;
    CDUnknownBlockType _trafficCallback;
    id <ResponseHandleProtocol> _responseHandle;
    id <ConnectionProtocol> _connection;
    double _beginRequestTime;
    long long _totalReadBytes;
    long long _lastReadBytes;
    double _lastShowSpeedTime;
    NSTimer *_retryTimer;
    double _lastGetResponseTime;
    NSTimer *_lastResponseCheckTimer;
    double _lastOneSecondBeginTime;
}

@property(nonatomic) int lastOneSecondReadBytes; // @synthesize lastOneSecondReadBytes=_lastOneSecondReadBytes;
@property(nonatomic) double lastOneSecondBeginTime; // @synthesize lastOneSecondBeginTime=_lastOneSecondBeginTime;
@property(retain, nonatomic) NSTimer *lastResponseCheckTimer; // @synthesize lastResponseCheckTimer=_lastResponseCheckTimer;
@property(nonatomic) double lastGetResponseTime; // @synthesize lastGetResponseTime=_lastGetResponseTime;
@property(nonatomic) _Bool isHeadRequest; // @synthesize isHeadRequest=_isHeadRequest;
@property(nonatomic) _Bool needRequestWhenNetworkOK; // @synthesize needRequestWhenNetworkOK=_needRequestWhenNetworkOK;
@property(retain, nonatomic) NSTimer *retryTimer; // @synthesize retryTimer=_retryTimer;
@property(nonatomic) int currentRetryCount; // @synthesize currentRetryCount=_currentRetryCount;
@property(nonatomic) double lastShowSpeedTime; // @synthesize lastShowSpeedTime=_lastShowSpeedTime;
@property(nonatomic) long long lastReadBytes; // @synthesize lastReadBytes=_lastReadBytes;
@property(nonatomic) long long totalReadBytes; // @synthesize totalReadBytes=_totalReadBytes;
@property(nonatomic) double beginRequestTime; // @synthesize beginRequestTime=_beginRequestTime;
@property(retain, nonatomic) id <ConnectionProtocol> connection; // @synthesize connection=_connection;
@property(retain, nonatomic) id <ResponseHandleProtocol> responseHandle; // @synthesize responseHandle=_responseHandle;
@property(copy, nonatomic) CDUnknownBlockType trafficCallback; // @synthesize trafficCallback=_trafficCallback;
@property(nonatomic) int maxDownloadSpeed; // @synthesize maxDownloadSpeed=_maxDownloadSpeed;
@property(nonatomic) double retryIncrementTime; // @synthesize retryIncrementTime=_retryIncrementTime;
@property(nonatomic) int retryCount; // @synthesize retryCount=_retryCount;
@property(copy, nonatomic) CDUnknownBlockType didFinishedCallback; // @synthesize didFinishedCallback=_didFinishedCallback;
@property(copy, nonatomic) CDUnknownBlockType receiveDataCallback; // @synthesize receiveDataCallback=_receiveDataCallback;
@property(copy, nonatomic) CDUnknownBlockType receiveResponseCallback; // @synthesize receiveResponseCallback=_receiveResponseCallback;
@property(nonatomic) _Bool onlyReachableViaWifi; // @synthesize onlyReachableViaWifi=_onlyReachableViaWifi;
@property(copy, nonatomic) CDUnknownBlockType exceptionCallback; // @synthesize exceptionCallback=_exceptionCallback;
@property(nonatomic) _Bool useProxy; // @synthesize useProxy=_useProxy;
@property(nonatomic) _Bool useSPDY; // @synthesize useSPDY=_useSPDY;
@property(nonatomic) long long receiveBytes; // @synthesize receiveBytes=_receiveBytes;
@property(nonatomic) long long uploadBytes; // @synthesize uploadBytes=_uploadBytes;
@property(nonatomic) double requestEndTime; // @synthesize requestEndTime=_requestEndTime;
@property(nonatomic) double requestBeginTime; // @synthesize requestBeginTime=_requestBeginTime;
@property(nonatomic) int downloadSpeed; // @synthesize downloadSpeed=_downloadSpeed;
@property(retain, nonatomic) id userData; // @synthesize userData=_userData;
@property(copy, nonatomic) CDUnknownBlockType startBlock; // @synthesize startBlock=_startBlock;
@property(copy, nonatomic) CDUnknownBlockType dataTransformBlock; // @synthesize dataTransformBlock=_dataTransformBlock;
@property(nonatomic) double maxProgress; // @synthesize maxProgress=_maxProgress;
@property(readonly, nonatomic) id <ResponseProtocol> response; // @synthesize response=_response;
@property(readonly, nonatomic) id <RequestProtocol> request; // @synthesize request=_request;
- (void).cxx_destruct;
- (id)connection:(id)arg1 willSendRequest:(id)arg2 redirectResponse:(id)arg3;
- (void)connection:(id)arg1 didSendBodyData:(long long)arg2 totalBytesWritten:(long long)arg3;
- (void)connection:(id)arg1 data:(id)arg2 didReceiveData:(long long)arg3 totalBytesCount:(long long)arg4;
- (void)connection:(id)arg1 didFinishedWithError:(id)arg2;
- (void)_retryDownload;
- (_Bool)isErrorCanRetry:(id)arg1;
- (void)connection:(id)arg1 didReceiveResponse:(id)arg2;
- (void)operationWillResume;
- (void)operationDidPaused;
- (void)operationDidFinish;
- (void)operationWillFinish;
- (void)operationDidStart;
- (void)_internalStart;
- (void)onNetworkChanged:(id)arg1;
- (_Bool)checkNetworkState;
- (id)initWithRequest:(id)arg1 responseHandle:(id)arg2;
- (id)initWithRequest:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

