//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

#import "LMInternalPlayerDelegate-Protocol.h"

@class LMDataManager, LMInternalPlayer, LMLogData, LMPlayInfo, LMPlayLogManager, LMTrackItemContainer, NSString;

@interface LMPlayerBase : NSObject <LMInternalPlayerDelegate>
{
    _Bool needToPlay;
    _Bool _isRegisteredNotifications;
    LMInternalPlayer *_internalPlayer;
    LMPlayLogManager *_playLogManager;
    LMDataManager *_dataManager;
    CDUnknownBlockType _requestCompletionBlock;
    unsigned long long _playLocation;
    long long _playType;
    LMPlayInfo *_currentPlayInfo;
    LMTrackItemContainer *_currentTrackItemContainer;
    Class _requestServiceDelegateClass;
    LMLogData *_logData;
    NSString *_playLogID;
    unsigned long long _playLogSequence;
    NSString *_ticketId;
    NSString *_credential;
}

+ (id)sharedPlayer;
@property(nonatomic) _Bool isRegisteredNotifications; // @synthesize isRegisteredNotifications=_isRegisteredNotifications;
@property(copy, nonatomic) NSString *credential; // @synthesize credential=_credential;
@property(copy, nonatomic) NSString *ticketId; // @synthesize ticketId=_ticketId;
@property(nonatomic) unsigned long long playLogSequence; // @synthesize playLogSequence=_playLogSequence;
@property(copy, nonatomic) NSString *playLogID; // @synthesize playLogID=_playLogID;
@property(retain, nonatomic) LMLogData *logData; // @synthesize logData=_logData;
@property(retain, nonatomic) Class requestServiceDelegateClass; // @synthesize requestServiceDelegateClass=_requestServiceDelegateClass;
@property(retain, nonatomic) LMTrackItemContainer *currentTrackItemContainer; // @synthesize currentTrackItemContainer=_currentTrackItemContainer;
@property(retain, nonatomic) LMPlayInfo *currentPlayInfo; // @synthesize currentPlayInfo=_currentPlayInfo;
@property(nonatomic) long long playType; // @synthesize playType=_playType;
@property(nonatomic) unsigned long long playLocation; // @synthesize playLocation=_playLocation;
@property(copy, nonatomic) CDUnknownBlockType requestCompletionBlock; // @synthesize requestCompletionBlock=_requestCompletionBlock;
@property(retain, nonatomic) LMDataManager *dataManager; // @synthesize dataManager=_dataManager;
@property(retain, nonatomic) LMPlayLogManager *playLogManager; // @synthesize playLogManager=_playLogManager;
@property(retain, nonatomic) LMInternalPlayer *internalPlayer; // @synthesize internalPlayer=_internalPlayer;
@property(nonatomic) _Bool needToPlay; // @synthesize needToPlay;
- (void).cxx_destruct;
- (void)fillExtraLogField:(id)arg1;
- (id)currentAKey;
- (_Bool)checkAkeyHeader:(id)arg1;
- (void)handleInvalidTrack:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (_Bool)authenticateRequest:(id)arg1;
- (_Bool)authenticateRequest:(id)arg1 withEncryptedKey:(id)arg2;
- (void)onFail:(id)arg1;
- (void)onEndScrub:(CDStruct_1b6d18a9)arg1;
- (void)onBeginScrub:(CDStruct_1b6d18a9)arg1;
- (void)internalPause:(CDStruct_1b6d18a9)arg1;
- (void)onPause:(CDStruct_1b6d18a9)arg1;
- (void)onEnd:(CDStruct_1b6d18a9)arg1;
- (void)onPlay:(CDStruct_1b6d18a9)arg1;
- (void)pause;
- (void)play;
- (void)stop;
- (void)addObserverBlock:(CDUnknownBlockType)arg1;
- (void)changePlayItemWithPlayURL:(id)arg1 seekTime:(CDStruct_1b6d18a9)arg2;
- (void)changePlayItemWithPlayInfo:(id)arg1;
- (unsigned long long)getPlayerStatus;
- (CDStruct_1b6d18a9)getDuration;
- (CDStruct_1b6d18a9)getCurrentTime;
- (_Bool)isPlaying;
- (void)onLoadedTime:(CDStruct_e83c9415)arg1;
- (void)onPlaybackLikelyKeepup;
- (void)onBufferEmpty;
- (void)next;
- (void)prev;
- (void)playerDidPlayToEndTime:(id)arg1;
- (id)getParentEntityId;
- (id)getCurrentTrackId;
- (void)stopPlayingCenter;
- (void)pausePlayingCenter;
- (void)playPlayingCenter;
- (id)init;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

