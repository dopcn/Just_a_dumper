//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

#import "TopIOSSdk-Protocol.h"
#import "TopIOSSdkExt-Protocol.h"

@class NSMutableArray, NSMutableDictionary, NSOperationQueue, NSString, RainbowManager, TopReachability, TopTracker;

@interface TopIOSClient : NSObject <TopIOSSdk, TopIOSSdkExt>
{
    RainbowManager *_rainbowManager;
    _Bool _needCheckMainThreadBlockThreaten;
    _Bool _isLocalTrack;
    NSString *_appKey;
    NSString *_appSecret;
    NSString *_callbackUrl;
    NSString *_authEntryUrl;
    NSString *_apiEntryUrl;
    NSString *_authRefreshEntryUrl;
    NSString *_tqlEntryUrl;
    NSString *_scheduleEntryUrl;
    NSString *_logServerUrl;
    NSOperationQueue *eventQueue;
    NSMutableDictionary *errorCallbackPool;
    NSMutableDictionary *serviceErrorCallbackPool;
    NSMutableDictionary *sessionQueue;
    NSString *_sysName;
    NSString *_sysVersion;
    NSString *_sdkVersion;
    NSString *_deviceName;
    NSString *_clientVersion;
    NSMutableDictionary *_features;
    double _lastFeatureCheckTimeStamp;
    NSString *_activeUserId;
    NSString *_topMergedApiEntryUrl;
    NSMutableArray *_controllerTracker;
    TopTracker *_topTracker;
    TopReachability *_topReachability;
}

+ (id)getResponseObject:(id)arg1;
+ (void)removeIOSClientByAppKey:(id)arg1;
+ (id)getIOSClientByAppKey:(id)arg1;
+ (id)registerIOSClientWithTracker:(id)arg1 appSecret:(id)arg2 callbackUrl:(id)arg3 isLocalTrack:(_Bool)arg4 maxFlushInterval:(int)arg5 maxBufferSize:(int)arg6 logServerUrl:(id)arg7 useLongChannel:(_Bool)arg8 poolConfiguration:(id)arg9;
+ (id)registerIOSClient:(id)arg1 appSecret:(id)arg2 callbackUrl:(id)arg3 useLongChannel:(_Bool)arg4 poolConfiguration:(id)arg5;
+ (void)setLanguageCode:(id)arg1;
+ (void)setTopAcn:(id)arg1;
+ (void)setTopHeadSignKey:(id)arg1;
+ (void)setStaticUmidToken:(id)arg1;
+ (void)setStaticDeviceIp:(id)arg1;
+ (void)setBehalfUserIdDic:(id)arg1;
+ (void)dispatchOnceInitPools;
+ (id)getTopIOSClientWithPlugin:(id)arg1;
@property _Bool isLocalTrack; // @synthesize isLocalTrack=_isLocalTrack;
@property(retain, nonatomic) TopReachability *topReachability; // @synthesize topReachability=_topReachability;
@property(retain, nonatomic) TopTracker *topTracker; // @synthesize topTracker=_topTracker;
@property(readonly, retain, nonatomic) NSMutableArray *controllerTracker; // @synthesize controllerTracker=_controllerTracker;
@property(copy) NSString *topMergedApiEntryUrl; // @synthesize topMergedApiEntryUrl=_topMergedApiEntryUrl;
@property(copy) NSString *activeUserId; // @synthesize activeUserId=_activeUserId;
@property(readonly, nonatomic) RainbowManager *rainbowManager; // @synthesize rainbowManager=_rainbowManager;
@property double lastFeatureCheckTimeStamp; // @synthesize lastFeatureCheckTimeStamp=_lastFeatureCheckTimeStamp;
@property(readonly, nonatomic) NSMutableDictionary *features; // @synthesize features=_features;
@property(copy, nonatomic) NSString *clientVersion; // @synthesize clientVersion=_clientVersion;
@property(copy, nonatomic) NSString *deviceName; // @synthesize deviceName=_deviceName;
@property(copy, nonatomic) NSString *sdkVersion; // @synthesize sdkVersion=_sdkVersion;
@property(copy, nonatomic) NSString *sysVersion; // @synthesize sysVersion=_sysVersion;
@property(copy, nonatomic) NSString *sysName; // @synthesize sysName=_sysName;
@property(retain, nonatomic) NSMutableDictionary *sessionQueue; // @synthesize sessionQueue;
@property(readonly, nonatomic) NSMutableDictionary *serviceErrorCallbackPool; // @synthesize serviceErrorCallbackPool;
@property(readonly, nonatomic) NSMutableDictionary *errorCallbackPool; // @synthesize errorCallbackPool;
@property(readonly) NSOperationQueue *eventQueue; // @synthesize eventQueue;
@property(copy) NSString *logServerUrl; // @synthesize logServerUrl=_logServerUrl;
@property(copy) NSString *scheduleEntryUrl; // @synthesize scheduleEntryUrl=_scheduleEntryUrl;
@property(copy) NSString *tqlEntryUrl; // @synthesize tqlEntryUrl=_tqlEntryUrl;
@property(copy) NSString *authRefreshEntryUrl; // @synthesize authRefreshEntryUrl=_authRefreshEntryUrl;
@property(copy) NSString *apiEntryUrl; // @synthesize apiEntryUrl=_apiEntryUrl;
@property(copy) NSString *authEntryUrl; // @synthesize authEntryUrl=_authEntryUrl;
@property _Bool needCheckMainThreadBlockThreaten; // @synthesize needCheckMainThreadBlockThreaten=_needCheckMainThreadBlockThreaten;
@property(copy) NSString *callbackUrl; // @synthesize callbackUrl=_callbackUrl;
@property(copy) NSString *appSecret; // @synthesize appSecret=_appSecret;
@property(copy) NSString *appKey; // @synthesize appKey=_appKey;
- (void).cxx_destruct;
- (_Bool)containsAttachmentInParam:(id)arg1;
- (id)generateUrlParamFromDictionary:(id)arg1;
- (id)getSessionFromUserId:(id)arg1;
- (void)removePublicParam:(id)arg1 inTopMergeableRequests:(id)arg2;
- (id)getPublicParamFromTopMergeableRequests:(id)arg1;
- (id)generatePayloadFromTopMergeableRequests:(id)arg1;
- (id)signForTopMergeableRequestsWithProtocolParam:(id)arg1 appSecret:(id)arg2 payload:(id)arg3;
- (void)addTimestampIntoRequestParam:(id)arg1;
- (id)generateTopProtocolUrlParamWithPayload:(id)arg1 session:(id)arg2;
- (void)callbackForMergeableRequest:(id)arg1 withResponse:(id)arg2 cachePolicy:(id)arg3 hit:(_Bool)arg4 completion:(CDUnknownBlockType)arg5;
- (id)generateCacheKeyForTopMergeableRequests:(id)arg1 withUserId:(id)arg2;
- (void)_sendTopMergedRequest:(id)arg1 withOriginalRequests:(id)arg2 cachePolicy:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)_asyncSendTopMergeableRequests:(id)arg1 withUserId:(id)arg2 headers:(id)arg3 behalf:(id)arg4 cachePolicy:(id)arg5 completion:(CDUnknownBlockType)arg6;
- (void)asyncSendTopMergeableRequests:(id)arg1 withUserId:(id)arg2 headers:(id)arg3 cachePolicy:(id)arg4 completion:(CDUnknownBlockType)arg5;
- (void)asyncSendTopMergeableRequests:(id)arg1 withUserId:(id)arg2 cachePolicy:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (_Bool)setApiCallErrorResp:(id)arg1 response:(id)arg2 isIgnore:(_Bool)arg3;
- (_Bool)processServiceErrorEvent:(id)arg1 isIgnore:(_Bool)arg2;
- (_Bool)setApiCallResponse:(id)arg1 response:(id)arg2 isIgnore:(_Bool)arg3;
- (void)sendAsynchronousRequest:(id)arg1 queue:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)notifyIfConfigVersionChange:(id)arg1;
- (void)dispatchCallbackBlock:(CDUnknownBlockType)arg1 needMainThreadCallBack:(_Bool)arg2 withResponse:(id)arg3 target:(id)arg4 cb:(SEL)arg5;
- (unsigned char)prepareRequest:(id)arg1 reqParams:(id)arg2 files:(id)arg3 userId:(id)arg4 ignoreProtocol:(_Bool)arg5;
- (void)asyncCallViaRainbowWithRequest:(id)arg1 params:(id)arg2 userId:(id)arg3 rainbowRequestType:(int)arg4 method:(id)arg5 url:(id)arg6 needMainThreadCallBack:(_Bool)arg7 callbackBlock:(CDUnknownBlockType)arg8 target:(id)arg9 cb:(SEL)arg10 ignoreInterception:(_Bool)arg11;
- (id)asynCall:(id)arg1 method:(id)arg2 params:(id)arg3 headers:(id)arg4 target:(id)arg5 cb:(SEL)arg6 callbackBlock:(CDUnknownBlockType)arg7 userId:(id)arg8 needMainThreadCallBack:(unsigned char)arg9 ignoreProtocol:(_Bool)arg10 requestType:(int)arg11 ignoreInterception:(_Bool)arg12;
- (id)asynCall:(id)arg1 method:(id)arg2 params:(id)arg3 target:(id)arg4 cb:(SEL)arg5 callbackBlock:(CDUnknownBlockType)arg6 userId:(id)arg7 needMainThreadCallBack:(unsigned char)arg8 ignoreProtocol:(_Bool)arg9 requestType:(int)arg10 ignoreInterception:(_Bool)arg11;
- (id)asynCall:(id)arg1 method:(id)arg2 params:(id)arg3 target:(id)arg4 cb:(SEL)arg5 callbackBlock:(CDUnknownBlockType)arg6 userId:(id)arg7 needMainThreadCallBack:(unsigned char)arg8 ignoreProtocol:(_Bool)arg9 ignoreInterception:(_Bool)arg10;
- (id)asynCall:(id)arg1 method:(id)arg2 params:(id)arg3 target:(id)arg4 cb:(SEL)arg5 callbackBlock:(CDUnknownBlockType)arg6 userId:(id)arg7 needMainThreadCallBack:(unsigned char)arg8 ignoreProtocol:(_Bool)arg9;
- (id)call:(id)arg1 method:(id)arg2 params:(id)arg3 userId:(id)arg4 ignoreProtocol:(_Bool)arg5 needTrack:(_Bool)arg6 useLongChannel:(_Bool)arg7 ignoreInterception:(_Bool)arg8;
- (id)generateSessionKey:(double)arg1;
- (_Bool)cancel:(id)arg1;
- (id)prepareCall:(id)arg1 method:(id)arg2 params:(id)arg3 userId:(id)arg4 behalf:(id)arg5 reqParams:(id)arg6 ignoreProtocol:(_Bool)arg7;
- (id)schedule:(id)arg1 params:(id)arg2 userId:(id)arg3;
- (id)tql:(id)arg1 params:(id)arg2 userId:(id)arg3;
- (id)api:(id)arg1 method:(id)arg2 params:(id)arg3 userId:(id)arg4 ignoreProtocol:(_Bool)arg5 needTrack:(_Bool)arg6 useLongChannel:(_Bool)arg7;
- (id)api:(id)arg1 method:(id)arg2 params:(id)arg3 userId:(id)arg4 ignoreProtocol:(_Bool)arg5 needTrack:(_Bool)arg6;
- (id)api:(id)arg1 method:(id)arg2 params:(id)arg3 userId:(id)arg4 ignoreProtocol:(_Bool)arg5;
- (id)api:(id)arg1 params:(id)arg2 userId:(id)arg3;
- (id)tql:(id)arg1 params:(id)arg2 callbackBlock:(CDUnknownBlockType)arg3 userId:(id)arg4 needMainThreadCallBack:(unsigned char)arg5;
- (id)api:(id)arg1 method:(id)arg2 params:(id)arg3 callbackBlock:(CDUnknownBlockType)arg4 userId:(id)arg5 needMainThreadCallBack:(unsigned char)arg6 ignoreProtocol:(_Bool)arg7 ignoreInterception:(_Bool)arg8;
- (id)api:(id)arg1 method:(id)arg2 params:(id)arg3 headers:(id)arg4 callbackBlock:(CDUnknownBlockType)arg5 userId:(id)arg6 needMainThreadCallBack:(unsigned char)arg7 ignoreProtocol:(_Bool)arg8;
- (id)api:(id)arg1 method:(id)arg2 params:(id)arg3 callbackBlock:(CDUnknownBlockType)arg4 userId:(id)arg5 needMainThreadCallBack:(unsigned char)arg6 ignoreProtocol:(_Bool)arg7;
- (id)api:(id)arg1 method:(id)arg2 params:(id)arg3 callbackBlock:(CDUnknownBlockType)arg4 userId:(id)arg5 needMainThreadCallBack:(unsigned char)arg6 ignoreProtocol:(_Bool)arg7 requestType:(int)arg8;
- (id)api:(id)arg1 params:(id)arg2 callbackBlock:(CDUnknownBlockType)arg3 userId:(id)arg4 needMainThreadCallBack:(unsigned char)arg5;
- (id)tql:(id)arg1 params:(id)arg2 target:(id)arg3 cb:(SEL)arg4 userId:(id)arg5 needMainThreadCallBack:(unsigned char)arg6;
- (id)api:(id)arg1 method:(id)arg2 params:(id)arg3 target:(id)arg4 cb:(SEL)arg5 userId:(id)arg6 needMainThreadCallBack:(unsigned char)arg7 ignoreProtocol:(_Bool)arg8;
- (id)api:(id)arg1 params:(id)arg2 target:(id)arg3 cb:(SEL)arg4 userId:(id)arg5 needMainThreadCallBack:(unsigned char)arg6;
- (id)addClientAuthToUrl:(id)arg1;
- (void)addClientAuthHeader:(id)arg1 topAuth:(id)arg2 behalf:(id)arg3 timestamp:(id)arg4;
- (void)addTopHeader:(id)arg1 withRequestParmas:(id)arg2 andUid:(id)arg3;
- (id)getCurrentNetWorkStatus;
- (id)getAuthSysParams:(id)arg1 timestamp:(id)arg2;
- (_Bool)canRequestByBehalfForUserId:(id)arg1;
- (id)getTopSignHeadParamsWithUserId:(id)arg1 withRequestParmas:(id)arg2;
- (long long)uptime;
- (double)getCurrentServerTimeInterval;
- (void)updateTimeFormTopServerAndForceUpdate:(_Bool)arg1;
- (void)updateTimeFormTopServer;
- (id)makeTrackId:(id)arg1 timestamp:(id)arg2;
- (id)getAuthSysParams:(id)arg1;
- (id)getAuthByUserId:(id)arg1;
- (void)dealloc;
- (void)registerErrorCodeCallbackEvent:(id)arg1 eventCallback:(id)arg2;
- (void)registerServiceErrorCodeCallbackEvent:(id)arg1 eventCallback:(id)arg2;
- (void)stopClient;
- (void)addSessionKVToQueue:(id)arg1 value:(id)arg2;
- (void)removeSessionFromQueue:(id)arg1;
- (id)getFeature:(id)arg1;
@property(readonly, nonatomic) NSString *deviceUUID;
- (id)initIOSClient:(id)arg1 appSecret:(id)arg2 callbackUrl:(id)arg3 useLongChannel:(_Bool)arg4 poolConfiguration:(id)arg5;
- (_Bool)useRainbowFeature;
- (void)downgradeRainbow2Version;
- (void)enableRainbowLongChannelWithConfig:(id)arg1;
- (void)disableRainbowLongChannel;
- (id)innerTracker;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

