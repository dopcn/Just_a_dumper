//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "IGRTCCommonPeerConnection-Protocol.h"
#import "IGRTCVideoViewManagerDelegate-Protocol.h"
#import "RTCPeerConnectionDelegate-Protocol.h"

@class IGBitrateTracker, IGRTCAudioDeviceModule, IGRTCVideoViewManager, NSMutableDictionary, NSString, RTCPeerConnection, RTCPeerConnectionFactory, RTCRtpSender, RTCVideoCapturer, RTCVideoSource;
@protocol IGWebRTCPeerConnectionControllerDelegate, OS_dispatch_queue;

@interface IGWebRTCPeerConnectionController : NSObject <IGRTCCommonPeerConnection, RTCPeerConnectionDelegate, IGRTCVideoViewManagerDelegate>
{
    _Bool _audioEnabled;
    _Bool _videoEnabled;
    _Bool _audioDeviceEnabled;
    _Bool _enableAudioNacks;
    NSString *_audioTrackId;
    NSString *_videoTrackId;
    id <IGWebRTCPeerConnectionControllerDelegate> _delegate;
    NSString *_streamId;
    long long _maxBitrateBps;
    NSObject<OS_dispatch_queue> *_peerConnectionQueue;
    RTCPeerConnectionFactory *_factory;
    RTCPeerConnection *_peerConnection;
    RTCRtpSender *_audioSender;
    RTCRtpSender *_videoSender;
    NSMutableDictionary *_trackOwnership;
    RTCVideoCapturer *_videoCapturer;
    RTCVideoSource *_videoSource;
    long long _previousConnectionState;
    IGBitrateTracker *_bitrateTracker;
    IGRTCVideoViewManager *_videoViewManager;
    IGRTCAudioDeviceModule *_audioDeviceModule;
    long long _currentSampleTime;
    NSString *_codecPreference;
    struct CGSize _lastSeenVideoSize;
}

+ (void)setAudioSessionConfiguration;
+ (id)defaultOfferConstraintsWithAdditionalConstraints:(id)arg1;
@property(nonatomic) struct CGSize lastSeenVideoSize; // @synthesize lastSeenVideoSize=_lastSeenVideoSize;
@property(copy, nonatomic) NSString *codecPreference; // @synthesize codecPreference=_codecPreference;
@property(nonatomic) long long currentSampleTime; // @synthesize currentSampleTime=_currentSampleTime;
@property(readonly, nonatomic) IGRTCAudioDeviceModule *audioDeviceModule; // @synthesize audioDeviceModule=_audioDeviceModule;
@property(retain, nonatomic) IGRTCVideoViewManager *videoViewManager; // @synthesize videoViewManager=_videoViewManager;
@property(retain, nonatomic) IGBitrateTracker *bitrateTracker; // @synthesize bitrateTracker=_bitrateTracker;
@property(nonatomic) long long previousConnectionState; // @synthesize previousConnectionState=_previousConnectionState;
@property(retain, nonatomic) RTCVideoSource *videoSource; // @synthesize videoSource=_videoSource;
@property(retain, nonatomic) RTCVideoCapturer *videoCapturer; // @synthesize videoCapturer=_videoCapturer;
@property(readonly, nonatomic) NSMutableDictionary *trackOwnership; // @synthesize trackOwnership=_trackOwnership;
@property(retain, nonatomic) RTCRtpSender *videoSender; // @synthesize videoSender=_videoSender;
@property(retain, nonatomic) RTCRtpSender *audioSender; // @synthesize audioSender=_audioSender;
@property(retain, nonatomic) RTCPeerConnection *peerConnection; // @synthesize peerConnection=_peerConnection;
@property(readonly, nonatomic) RTCPeerConnectionFactory *factory; // @synthesize factory=_factory;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *peerConnectionQueue; // @synthesize peerConnectionQueue=_peerConnectionQueue;
@property(readonly, nonatomic) _Bool enableAudioNacks; // @synthesize enableAudioNacks=_enableAudioNacks;
@property(nonatomic) long long maxBitrateBps; // @synthesize maxBitrateBps=_maxBitrateBps;
@property(readonly, copy, nonatomic) NSString *streamId; // @synthesize streamId=_streamId;
@property(nonatomic) __weak id <IGWebRTCPeerConnectionControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) _Bool audioDeviceEnabled; // @synthesize audioDeviceEnabled=_audioDeviceEnabled;
@property(readonly, copy, nonatomic) NSString *videoTrackId; // @synthesize videoTrackId=_videoTrackId;
@property(readonly, copy, nonatomic) NSString *audioTrackId; // @synthesize audioTrackId=_audioTrackId;
@property(nonatomic) _Bool videoEnabled; // @synthesize videoEnabled=_videoEnabled;
@property(nonatomic) _Bool audioEnabled; // @synthesize audioEnabled=_audioEnabled;
- (void).cxx_destruct;
- (void)peerConnection:(id)arg1 didOpenDataChannel:(id)arg2;
- (void)peerConnection:(id)arg1 didRemoveIceCandidates:(id)arg2;
- (void)peerConnection:(id)arg1 didGenerateIceCandidate:(id)arg2;
- (void)peerConnection:(id)arg1 didChangeIceGatheringState:(long long)arg2;
- (void)peerConnection:(id)arg1 didChangeIceConnectionState:(long long)arg2;
- (void)peerConnectionShouldNegotiate:(id)arg1;
- (void)peerConnection:(id)arg1 didRemoveStream:(id)arg2;
- (void)peerConnection:(id)arg1 didAddStream:(id)arg2;
- (void)peerConnection:(id)arg1 didChangeSignalingState:(long long)arg2;
- (void)videoViewManager:(id)arg1 didResumeVideoStreamId:(id)arg2;
- (void)videoViewManager:(id)arg1 didStallVideoStreamId:(id)arg2;
- (void)videoViewManager:(id)arg1 didRemoveReadyToDisplayVideoStreamId:(id)arg2;
- (void)videoViewManager:(id)arg1 didHaveVideoViewReadyToDisplay:(id)arg2;
- (void)createVideoSender;
- (void)createAudioSender;
- (void)statsWithCompletion:(CDUnknownBlockType)arg1;
- (void)onInterruptionEnded;
- (void)onInterruption;
- (id)getTrackInfo:(id)arg1;
- (id)getVideoViewForStreamId:(id)arg1;
- (void)updateMaxBitrateBps:(long long)arg1;
- (void)processVideoSampleBuffer:(struct opaqueCMSampleBuffer *)arg1 cropRect:(struct CGRect)arg2 scaleSize:(struct CGSize)arg3;
- (void)disconnectWithCompletion:(CDUnknownBlockType)arg1;
- (void)acceptConnectionOfferWithSdpAnswer:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)updateSdpOfferForRestart:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;
@property(readonly, nonatomic) _Bool isConnected;
- (id)initWithUserId:(id)arg1 maxBitrateBps:(long long)arg2 enableAudioNacks:(_Bool)arg3 codecPreference:(id)arg4 delegate:(id)arg5;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

