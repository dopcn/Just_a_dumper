//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

#import "NSCopying-Protocol.h"

@class NSDate, NSMutableDictionary, NSString;

@interface RequestItem : NSObject <NSCopying>
{
    id _owner;
    id _delegateTarget;
    long long _requestID;
    NSString *_finalUrl;
    _Bool _shouldEncodeUrl;
    _Bool _useDelegate;
    _Bool _useNotification;
    _Bool _loadImdiately;
    _Bool _shouldParseResult;
    _Bool _needsResponse;
    _Bool _isCancelled;
    _Bool _loadCacheBeforeRequest;
    _Bool _needParseOriData;
    _Bool _autoSendPerformanceLog;
    int _maxRetryCount;
    int _timeOutSeconds;
    NSString *_page;
    NSString *_size;
    NSString *_categoryID;
    long long _orderType;
    NSMutableDictionary *_additionalParams;
    NSMutableDictionary *_requestHeader;
    long long _httpType;
    SEL _succeedMethod;
    SEL _failedMethod;
    NSString *_notificationName;
    id _userInfo;
    SEL _validateMethod;
    SEL _parseMethod;
    SEL _defaultSucceedMethod;
    SEL _defaultFailedMethod;
    NSString *_defaultNotificationName;
    long long _cachePolicy;
    NSString *_cursor;
    CDUnknownBlockType _success;
    CDUnknownBlockType _failure;
    id _parseObject;
    id _validateObject;
    long long _performanceLogID;
    NSDate *_startDate;
    NSDate *_endDate;
}

+ (id)isMutableArray:(id)arg1 containsRequestItem:(id)arg2;
+ (id)requestItemWithOwner:(id)arg1;
@property(retain, nonatomic) NSDate *endDate; // @synthesize endDate=_endDate;
@property(retain, nonatomic) NSDate *startDate; // @synthesize startDate=_startDate;
@property(nonatomic) long long performanceLogID; // @synthesize performanceLogID=_performanceLogID;
@property(nonatomic) _Bool autoSendPerformanceLog; // @synthesize autoSendPerformanceLog=_autoSendPerformanceLog;
@property(nonatomic) _Bool needParseOriData; // @synthesize needParseOriData=_needParseOriData;
@property(nonatomic) __weak id validateObject; // @synthesize validateObject=_validateObject;
@property(nonatomic) __weak id parseObject; // @synthesize parseObject=_parseObject;
@property(copy, nonatomic) CDUnknownBlockType failure; // @synthesize failure=_failure;
@property(copy, nonatomic) CDUnknownBlockType success; // @synthesize success=_success;
@property(nonatomic) _Bool loadCacheBeforeRequest; // @synthesize loadCacheBeforeRequest=_loadCacheBeforeRequest;
@property(copy, nonatomic) NSString *cursor; // @synthesize cursor=_cursor;
@property(nonatomic) long long cachePolicy; // @synthesize cachePolicy=_cachePolicy;
@property(copy, nonatomic) NSString *defaultNotificationName; // @synthesize defaultNotificationName=_defaultNotificationName;
@property(nonatomic) SEL defaultFailedMethod; // @synthesize defaultFailedMethod=_defaultFailedMethod;
@property(nonatomic) SEL defaultSucceedMethod; // @synthesize defaultSucceedMethod=_defaultSucceedMethod;
@property(nonatomic) _Bool isCancelled; // @synthesize isCancelled=_isCancelled;
@property(nonatomic) SEL parseMethod; // @synthesize parseMethod=_parseMethod;
@property(nonatomic) SEL validateMethod; // @synthesize validateMethod=_validateMethod;
@property(copy, nonatomic) NSString *finalUrl; // @synthesize finalUrl=_finalUrl;
@property(nonatomic) long long requestID; // @synthesize requestID=_requestID;
@property(retain, nonatomic) id userInfo; // @synthesize userInfo=_userInfo;
@property(nonatomic) __weak id owner; // @synthesize owner=_owner;
@property(nonatomic) int timeOutSeconds; // @synthesize timeOutSeconds=_timeOutSeconds;
@property(nonatomic) _Bool needsResponse; // @synthesize needsResponse=_needsResponse;
@property(nonatomic) _Bool shouldParseResult; // @synthesize shouldParseResult=_shouldParseResult;
@property(nonatomic) _Bool loadImdiately; // @synthesize loadImdiately=_loadImdiately;
@property(nonatomic) int maxRetryCount; // @synthesize maxRetryCount=_maxRetryCount;
@property(copy, nonatomic) NSString *notificationName; // @synthesize notificationName=_notificationName;
@property(nonatomic) SEL failedMethod; // @synthesize failedMethod=_failedMethod;
@property(nonatomic) SEL succeedMethod; // @synthesize succeedMethod=_succeedMethod;
@property(nonatomic) __weak id delegateTarget; // @synthesize delegateTarget=_delegateTarget;
@property(nonatomic) _Bool useNotification; // @synthesize useNotification=_useNotification;
@property(nonatomic) _Bool useDelegate; // @synthesize useDelegate=_useDelegate;
@property(nonatomic) long long httpType; // @synthesize httpType=_httpType;
@property(nonatomic) _Bool shouldEncodeUrl; // @synthesize shouldEncodeUrl=_shouldEncodeUrl;
@property(retain, nonatomic) NSMutableDictionary *requestHeader; // @synthesize requestHeader=_requestHeader;
@property(retain, nonatomic) NSMutableDictionary *additionalParams; // @synthesize additionalParams=_additionalParams;
@property(nonatomic) long long orderType; // @synthesize orderType=_orderType;
@property(copy, nonatomic) NSString *categoryID; // @synthesize categoryID=_categoryID;
@property(copy, nonatomic) NSString *size; // @synthesize size=_size;
@property(copy, nonatomic) NSString *page; // @synthesize page=_page;
- (void).cxx_destruct;
- (void)dealloc;
- (id)payVideoglobalHeaders;
- (id)globalParameters;
- (void)printSEL:(SEL)arg1;
- (id)requestIDString;
- (void)printDescription;
- (void)cancelled;
- (_Bool)validateNetWorkSetting;
- (_Bool)validateResponseSetting;
- (_Bool)validatePageAndSizeWithPage:(id)arg1 size:(id)arg2;
- (id)getOrderTypeStringForSearching_iPad;
- (id)getOrderTypeString_iPad;
- (id)getOrderTypeString_iPhone;
- (_Bool)validateWithDefaultPageAndSize;
- (_Bool)validate;
- (void)setDefaultResponseSettingWithNotifyName:(id)arg1 successMethod:(SEL)arg2 failedMethod:(SEL)arg3;
- (void)setNotificationName:(id)arg1 requestSender:(id)arg2;
- (void)setDelegateTarget:(id)arg1 succeedMethod:(SEL)arg2 failedMethod:(SEL)arg3;
- (void)setSuccess:(CDUnknownBlockType)arg1 failure:(CDUnknownBlockType)arg2;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithOwner:(id)arg1;
- (id)init;

@end

