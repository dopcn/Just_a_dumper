//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "AVCaptureAudioDataOutputSampleBufferDelegate-Protocol.h"
#import "AVCaptureMetadataOutputObjectsDelegate-Protocol.h"
#import "AVCapturePhotoCaptureDelegate-Protocol.h"
#import "AVCaptureVideoDataOutputSampleBufferDelegate-Protocol.h"
#import "IGCaptureDeviceDelegate-Protocol.h"
#import "IGVideoCapturing-Protocol.h"

@class AVCaptureAudioDataOutput, AVCaptureDeviceInput, AVCaptureMetadataOutput, AVCapturePhotoOutput, AVCaptureSession, AVCaptureStillImageOutput, AVCaptureVideoPreviewLayer, FBAudioEchoCanceller, FBTimer, IGCaptureDevice, IGCaptureQueueManager, IGCaptureVideoDataOutput, IGTargetBlock, NSMutableSet, NSString;
@protocol IGCaptureManagerAudioSampleBufferDelegate, IGCaptureManagerAudioSessionDelegate, IGCaptureManagerDelegate, IGCaptureManagerVideoPreviewSampleBufferDelegate, IGCaptureManagerVideoSampleBufferDelegate, IGCaptureManagerVideoSessionDelegate, IGVideoProcessorControlling, OS_dispatch_queue;

@interface IGCaptureManager : NSObject <AVCaptureVideoDataOutputSampleBufferDelegate, AVCaptureAudioDataOutputSampleBufferDelegate, AVCapturePhotoCaptureDelegate, IGCaptureDeviceDelegate, AVCaptureMetadataOutputObjectsDelegate, IGVideoCapturing>
{
    double _targetBrightness;
    _Bool _isUsingAutoFaceExposure;
    _Bool _canUseAutoFaceExposure;
    AVCaptureMetadataOutput *_metaDataOutput;
    struct CGPoint _currentExposurePoint;
    double _minDistanceToRecomputeExposure;
    long long _numFramesSinceLastFaceDetectorComputation;
    long long _minNumFramesBetweenFaceDetectorComputations;
    NSObject<OS_dispatch_queue> *_autoFaceExposureQueue;
    FBTimer *_faceExposureStateResetTimer;
    NSMutableSet *_lowLightModeEnabledDevices;
    FBAudioEchoCanceller *_echoCanceller;
    _Bool _audioEnabled;
    _Bool _videoStabilizationEnabled;
    _Bool _lowLightModeEnabled;
    _Bool _highFrameRateEnabled;
    _Bool _videoMirrored;
    _Bool _videoCapturePaused;
    _Bool _focusTapped;
    _Bool _hasFaceEffect;
    _Bool _echoCancellationEnabled;
    _Bool _sessionStarted;
    _Bool _startSessionOnEnteringForeground;
    _Bool _needsResume;
    _Bool _allowAudioSessionDeactivation;
    unsigned int _videoPixelFormatType;
    id <IGVideoProcessorControlling> _videoProcessorController;
    id <IGCaptureManagerDelegate> _delegate;
    id <IGCaptureManagerVideoPreviewSampleBufferDelegate> _videoPreviewSampleBufferDelegate;
    id <IGCaptureManagerVideoSampleBufferDelegate> _videoSampleBufferDelegate;
    id <IGCaptureManagerAudioSampleBufferDelegate> _audioSampleBufferDelegate;
    id <IGCaptureManagerAudioSessionDelegate> _audioSessionDelegate;
    id <IGCaptureManagerVideoSessionDelegate> _videoSessionDelegate;
    long long _sessionPreset;
    IGCaptureQueueManager *_queueManager;
    IGCaptureDevice *_captureDevice;
    AVCaptureSession *_videoSession;
    AVCaptureSession *_audioSession;
    AVCaptureVideoPreviewLayer *_previewLayer;
    AVCaptureDeviceInput *_videoDeviceInput;
    IGCaptureVideoDataOutput *_videoDataOutput;
    AVCaptureDeviceInput *_audioDeviceInput;
    AVCaptureAudioDataOutput *_audioDataOutput;
    AVCaptureStillImageOutput *_stillImageOutput;
    AVCapturePhotoOutput *_photoOutput;
    CDUnknownBlockType _imageCompletionHandler;
    IGTargetBlock *_exposureUpdateBlock;
    long long _videoOrientation;
    long long _captureManagerMode;
    struct CGSize _videoSize;
}

+ (struct CGRect)cameraCropRectForImage:(id)arg1;
+ (struct CGRect)cameraCropRectForSize:(struct CGSize)arg1;
@property(readonly, nonatomic) long long captureManagerMode; // @synthesize captureManagerMode=_captureManagerMode;
@property(nonatomic) _Bool allowAudioSessionDeactivation; // @synthesize allowAudioSessionDeactivation=_allowAudioSessionDeactivation;
@property(nonatomic) struct CGSize videoSize; // @synthesize videoSize=_videoSize;
@property(nonatomic) long long videoOrientation; // @synthesize videoOrientation=_videoOrientation;
@property(readonly, nonatomic) unsigned int videoPixelFormatType; // @synthesize videoPixelFormatType=_videoPixelFormatType;
@property(retain, nonatomic) IGTargetBlock *exposureUpdateBlock; // @synthesize exposureUpdateBlock=_exposureUpdateBlock;
@property(nonatomic) _Bool needsResume; // @synthesize needsResume=_needsResume;
@property(nonatomic) _Bool startSessionOnEnteringForeground; // @synthesize startSessionOnEnteringForeground=_startSessionOnEnteringForeground;
@property(nonatomic) _Bool sessionStarted; // @synthesize sessionStarted=_sessionStarted;
@property(copy, nonatomic) CDUnknownBlockType imageCompletionHandler; // @synthesize imageCompletionHandler=_imageCompletionHandler;
@property(retain, nonatomic) AVCapturePhotoOutput *photoOutput; // @synthesize photoOutput=_photoOutput;
@property(retain, nonatomic) AVCaptureStillImageOutput *stillImageOutput; // @synthesize stillImageOutput=_stillImageOutput;
@property(retain, nonatomic) AVCaptureAudioDataOutput *audioDataOutput; // @synthesize audioDataOutput=_audioDataOutput;
@property(retain, nonatomic) AVCaptureDeviceInput *audioDeviceInput; // @synthesize audioDeviceInput=_audioDeviceInput;
@property(retain, nonatomic) IGCaptureVideoDataOutput *videoDataOutput; // @synthesize videoDataOutput=_videoDataOutput;
@property(retain, nonatomic) AVCaptureDeviceInput *videoDeviceInput; // @synthesize videoDeviceInput=_videoDeviceInput;
@property(retain, nonatomic) AVCaptureVideoPreviewLayer *previewLayer; // @synthesize previewLayer=_previewLayer;
@property(retain, nonatomic) AVCaptureSession *audioSession; // @synthesize audioSession=_audioSession;
@property(retain, nonatomic) AVCaptureSession *videoSession; // @synthesize videoSession=_videoSession;
@property(retain, nonatomic) IGCaptureDevice *captureDevice; // @synthesize captureDevice=_captureDevice;
@property(readonly, nonatomic) IGCaptureQueueManager *queueManager; // @synthesize queueManager=_queueManager;
@property(nonatomic, getter=isEchoCancellationEnabled) _Bool echoCancellationEnabled; // @synthesize echoCancellationEnabled=_echoCancellationEnabled;
@property(nonatomic) _Bool hasFaceEffect; // @synthesize hasFaceEffect=_hasFaceEffect;
@property(nonatomic) _Bool focusTapped; // @synthesize focusTapped=_focusTapped;
@property(nonatomic) _Bool videoCapturePaused; // @synthesize videoCapturePaused=_videoCapturePaused;
@property(nonatomic) _Bool videoMirrored; // @synthesize videoMirrored=_videoMirrored;
@property(nonatomic) _Bool highFrameRateEnabled; // @synthesize highFrameRateEnabled=_highFrameRateEnabled;
@property(nonatomic) _Bool lowLightModeEnabled; // @synthesize lowLightModeEnabled=_lowLightModeEnabled;
@property(nonatomic) _Bool videoStabilizationEnabled; // @synthesize videoStabilizationEnabled=_videoStabilizationEnabled;
@property(nonatomic) _Bool audioEnabled; // @synthesize audioEnabled=_audioEnabled;
@property(nonatomic) long long sessionPreset; // @synthesize sessionPreset=_sessionPreset;
@property(nonatomic) __weak id <IGCaptureManagerVideoSessionDelegate> videoSessionDelegate; // @synthesize videoSessionDelegate=_videoSessionDelegate;
@property(nonatomic) __weak id <IGCaptureManagerAudioSessionDelegate> audioSessionDelegate; // @synthesize audioSessionDelegate=_audioSessionDelegate;
@property(nonatomic) __weak id <IGCaptureManagerAudioSampleBufferDelegate> audioSampleBufferDelegate; // @synthesize audioSampleBufferDelegate=_audioSampleBufferDelegate;
@property(nonatomic) __weak id <IGCaptureManagerVideoSampleBufferDelegate> videoSampleBufferDelegate; // @synthesize videoSampleBufferDelegate=_videoSampleBufferDelegate;
@property(nonatomic) __weak id <IGCaptureManagerVideoPreviewSampleBufferDelegate> videoPreviewSampleBufferDelegate; // @synthesize videoPreviewSampleBufferDelegate=_videoPreviewSampleBufferDelegate;
@property(nonatomic) __weak id <IGCaptureManagerDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) id <IGVideoProcessorControlling> videoProcessorController; // @synthesize videoProcessorController=_videoProcessorController;
- (void).cxx_destruct;
- (id)cameraCaptureSettings;
- (void)videoProcessorController:(id)arg1 didFinishProcessingAudioBuffer:(struct opaqueCMSampleBuffer *)arg2;
- (void)videoProcessorController:(id)arg1 didFinishProcessingVideoBuffer:(struct opaqueCMSampleBuffer *)arg2;
- (void)videoProcessorControllerIsReadyToProcessNewFaceEffect:(id)arg1;
- (void)captureDeviceDidSatisfyFocusRequest;
- (void)captureOutput:(id)arg1 didFinishProcessingPhotoSampleBuffer:(struct opaqueCMSampleBuffer *)arg2 previewPhotoSampleBuffer:(struct opaqueCMSampleBuffer *)arg3 resolvedSettings:(id)arg4 bracketSettings:(id)arg5 error:(id)arg6;
- (void)takePictureWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)postProcessCapturedSampleBuffer:(struct opaqueCMSampleBuffer *)arg1 error:(id)arg2 completionHandler:(CDUnknownBlockType)arg3 imageConnection:(id)arg4;
- (void)positionExposurePOIsToFace:(id)arg1 videoSize:(struct CGSize)arg2 videoOrientation:(long long)arg3;
- (struct CGPoint)captureDevicePointOfInterestForPoint:(struct CGPoint)arg1 withViewSize:(struct CGSize)arg2;
- (struct CGPoint)captureDevicePointOfInterestForPoint:(struct CGPoint)arg1 view:(id)arg2;
- (_Bool)unlockFocus;
- (_Bool)lockFocus;
- (_Bool)exposeAtPoint:(struct CGPoint)arg1;
- (_Bool)focusAtPoint:(struct CGPoint)arg1;
@property(nonatomic) double zoomPercent;
@property(nonatomic) double zoom;
- (double)currentCameraISO;
- (double)maxISOForCurrentFormat;
@property(nonatomic) long long flashMode;
@property(nonatomic) long long torchMode;
@property(readonly, nonatomic) long long videoOutputOrientation;
@property(nonatomic) long long cameraPosition;
- (void)configureForVideoMirrored:(_Bool)arg1;
- (void)configureForVideoOrientation:(long long)arg1;
- (void)switchBackToDefaultExposureMode;
- (void)switchCameras;
- (id)capturePreset;
- (struct CGSize)videoSizeForCurrentSessionPreset;
- (void)stopAudioSession;
- (void)startAudioSession;
- (_Bool)canStartAudio;
- (_Bool)isAudioSessionAuthorized;
- (void)configureVideoStabilization;
- (void)configureAudioDeviceInput;
- (void)configureDefaultExposureMode;
- (void)configureVideoDeviceInput;
- (_Bool)isUsingPhotoSessionPreset;
- (_Bool)isUsingVideoSessionPreset;
- (void)performVideoSessionUpdateWithBlock:(CDUnknownBlockType)arg1;
- (void)captureOutput:(id)arg1 didOutputMetadataObjects:(id)arg2 fromConnection:(id)arg3;
- (void)captureOutput:(id)arg1 didOutputSampleBuffer:(struct opaqueCMSampleBuffer *)arg2 fromConnection:(id)arg3;
- (void)adjustBrightnessForCinema;
- (void)captureOutput:(id)arg1 didDropSampleBuffer:(struct opaqueCMSampleBuffer *)arg2 fromConnection:(id)arg3;
- (_Bool)isAudioSessionRunning;
- (_Bool)isVideoSessionRunning;
- (void)captureControllerDidStopRecording;
- (void)captureControllerDidStartRecording;
- (void)stopVideoSessionIfRunning;
- (void)stopAllSessionsAndCleanUpWithCompletion:(CDUnknownBlockType)arg1;
- (void)didExitCameraView;
- (void)applicationWillEnterForeground;
- (void)internalStartSession;
- (void)startSession;
- (_Bool)currentDeviceHasFlash;
- (id)outputForPhotoCapture;
- (id)imageCaptureOutputSettings;
- (_Bool)shouldUseHighResCapture;
- (_Bool)shouldUseAVCapturePhotoOutput;
- (id)stringForApplicationState;
- (void)sessionNotification:(id)arg1;
- (void)didEnterBackground;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *audioBufferQueue;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *videoBufferQueue;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *captureQueue;
- (void)resetFaceExposureState;
- (id)initWithCameraPosition:(long long)arg1 sessionPreset:(long long)arg2 audioEnabled:(_Bool)arg3 allowAudioSessionDeactivation:(_Bool)arg4 captureManagerMode:(long long)arg5 videoPixelFormatType:(unsigned int)arg6;
- (id)initWithCameraPosition:(long long)arg1 sessionPreset:(long long)arg2 audioEnabled:(_Bool)arg3 allowAudioSessionDeactivation:(_Bool)arg4;
- (id)initWithCameraPosition:(long long)arg1 sessionPreset:(long long)arg2 audioEnabled:(_Bool)arg3;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

