//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <UIKit/UIButton.h>

@class NSAttributedString, NSString, UIColor;

@interface CTVectorButton : UIButton
{
    _Bool _autoSizable;
    int _adapterImageSize;
    int _textSize;
    double _imageSize;
    UIColor *_normalStateColor;
    NSString *_normalStateName;
    UIColor *_highlightedStateColor;
    NSString *_highlightedStateName;
    UIColor *_selectedStateColor;
    NSString *_selectedStateName;
    UIColor *_disabledStateColor;
    NSString *_disabledStateName;
    NSString *_text;
    NSAttributedString *_scaleAttrutedString;
}

@property(copy, nonatomic) NSAttributedString *scaleAttrutedString; // @synthesize scaleAttrutedString=_scaleAttrutedString;
@property(copy, nonatomic) NSString *text; // @synthesize text=_text;
@property(nonatomic) int textSize; // @synthesize textSize=_textSize;
@property(nonatomic) int adapterImageSize; // @synthesize adapterImageSize=_adapterImageSize;
@property(copy, nonatomic) NSString *disabledStateName; // @synthesize disabledStateName=_disabledStateName;
@property(retain, nonatomic) UIColor *disabledStateColor; // @synthesize disabledStateColor=_disabledStateColor;
@property(copy, nonatomic) NSString *selectedStateName; // @synthesize selectedStateName=_selectedStateName;
@property(retain, nonatomic) UIColor *selectedStateColor; // @synthesize selectedStateColor=_selectedStateColor;
@property(copy, nonatomic) NSString *highlightedStateName; // @synthesize highlightedStateName=_highlightedStateName;
@property(retain, nonatomic) UIColor *highlightedStateColor; // @synthesize highlightedStateColor=_highlightedStateColor;
@property(copy, nonatomic) NSString *normalStateName; // @synthesize normalStateName=_normalStateName;
@property(retain, nonatomic) UIColor *normalStateColor; // @synthesize normalStateColor=_normalStateColor;
@property(nonatomic) _Bool autoSizable; // @synthesize autoSizable=_autoSizable;
@property(nonatomic) double imageSize; // @synthesize imageSize=_imageSize;
- (void).cxx_destruct;
@property(readonly, nonatomic) _Bool isIconfont;
- (id)toUIImage;
- (void)setImage:(id)arg1 forState:(unsigned long long)arg2;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)cancelAutoSize;
- (void)autoSize;
- (void)dealloc;
- (_Bool)isInvaidFontFamilyName:(id)arg1;
- (id)analysisImageName:(id)arg1;
- (id)getFontNameWithImageName:(id)arg1;
- (id)imageNameForState:(unsigned long long)arg1;
- (id)imageColorForState:(unsigned long long)arg1;
- (void)setVectorImageName:(id)arg1 forState:(unsigned long long)arg2;
- (void)setAnyVectorName:(id)arg1 forState:(unsigned long long)arg2;
- (void)setVectorImageColor:(id)arg1 forState:(unsigned long long)arg2;
- (void)setAnyVectorColor:(id)arg1 forState:(unsigned long long)arg2;
- (void)setVectorFontFamliyName:(id)arg1 imageCode:(id)arg2 imageText:(id)arg3 textSize:(long long)arg4 forState:(unsigned long long)arg5;
- (void)setVectorFontFamliyNameWith:(long long)arg1 imageCode:(id)arg2 imageText:(id)arg3 textSize:(long long)arg4 forState:(unsigned long long)arg5;
- (void)setVectorFontFamliyName:(id)arg1 imageCode:(id)arg2 forState:(unsigned long long)arg3;
- (void)setVectorFontFamliyName:(id)arg1 imageCode:(id)arg2;
- (void)setVectorFontFamliyNameWith:(long long)arg1 imageCode:(id)arg2 forState:(unsigned long long)arg3;
- (void)setVectorFontFamliyNameWith:(long long)arg1 imageCode:(id)arg2;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

