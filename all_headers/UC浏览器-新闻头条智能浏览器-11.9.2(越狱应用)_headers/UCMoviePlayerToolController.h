//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <UIKit/UIViewController.h>

#import "ResCacheDelegate-Protocol.h"
#import "UCMPNetworkStatusListenerDelegate-Protocol.h"
#import "UCMoviePlaybackLoadingViewDelegate-Protocol.h"
#import "UCMoviePlayerAdvertisingProcesserDelegate-Protocol.h"
#import "UCMoviePlayerAlertViewDelegate-Protocol.h"
#import "UCMoviePlayerExtendViewDelegate-Protocol.h"
#import "UCMoviePlayerNetworkAlertDelegate-Protocol.h"
#import "UCMoviePlayerToolPanelDelegate-Protocol.h"
#import "UCVideoFreeFlowTipActionDelegate-Protocol.h"

@class NSString, NSTimer, UCMoviePlaybackLoadingView, UCMoviePlayerAdvertisingProcesser, UCMoviePlayerNetworkAlert, UCMoviePlayerNetworkStatusListener, UCMoviePlayerNextTipsView, UCMoviePlayerToolPanel, UCVideoAppCallController, UCVideoFreeFlowTipManager, UIImage, UIView;
@protocol UCMoviePlayerExtendViewProtocol, UCMoviePlayerSource, UCMoviePlayerToolControllerDelegate;

@interface UCMoviePlayerToolController : UIViewController <UCMoviePlayerToolPanelDelegate, UCMoviePlaybackLoadingViewDelegate, UCMoviePlayerAlertViewDelegate, UCMPNetworkStatusListenerDelegate, UCMoviePlayerNetworkAlertDelegate, UCMoviePlayerExtendViewDelegate, UCMoviePlayerAdvertisingProcesserDelegate, ResCacheDelegate, UCVideoFreeFlowTipActionDelegate>
{
    NSTimer *m_refreshTimer;
    UCMoviePlayerToolPanel *m_toolPanel;
    UCMoviePlaybackLoadingView *m_loadingView;
    long long m_toolState;
    long long m_toolLoadState;
    UCMoviePlayerNetworkStatusListener *m_networkStatusListener;
    UCMoviePlayerNetworkAlert *m_networkAlert;
    UCMoviePlayerAdvertisingProcesser *m_advertisingProcesser;
    _Bool m_isAlertShowing;
    _Bool m_isInterrupt;
    float m_lastPlaybackStalledTime;
    long long m_playbackStalledCounter;
    double m_initialTime;
    _Bool m_barrageEnable;
    _Bool m_advertisingEnable;
    _Bool m_isChangeToWWAN;
    _Bool m_needRefresh;
    _Bool m_sniffingScreenshot;
    UCMoviePlayerNextTipsView *m_nextPlayView;
    _Bool _isHideTool;
    _Bool _isShowPosterImage;
    _Bool _enableBackStyle;
    _Bool _hidePlayButtonForPlugin;
    _Bool _hadSendWillReachEndNotice;
    id <UCMoviePlayerToolControllerDelegate> _delegate;
    id <UCMoviePlayerSource> _moviePlayerSource;
    NSString *_posterUrl;
    UIImage *_posterImage;
    UIView<UCMoviePlayerExtendViewProtocol> *_extendView;
    UCVideoAppCallController *_videoAppCallController;
    UCVideoFreeFlowTipManager *_tipMgr;
}

@property(nonatomic) _Bool hadSendWillReachEndNotice; // @synthesize hadSendWillReachEndNotice=_hadSendWillReachEndNotice;
@property(retain, nonatomic) UCVideoFreeFlowTipManager *tipMgr; // @synthesize tipMgr=_tipMgr;
@property(retain, nonatomic) UCVideoAppCallController *videoAppCallController; // @synthesize videoAppCallController=_videoAppCallController;
@property(retain, nonatomic) UIView<UCMoviePlayerExtendViewProtocol> *extendView; // @synthesize extendView=_extendView;
@property(nonatomic) _Bool hidePlayButtonForPlugin; // @synthesize hidePlayButtonForPlugin=_hidePlayButtonForPlugin;
@property(nonatomic) _Bool enableBackStyle; // @synthesize enableBackStyle=_enableBackStyle;
@property(retain, nonatomic) UIImage *posterImage; // @synthesize posterImage=_posterImage;
@property(copy, nonatomic) NSString *posterUrl; // @synthesize posterUrl=_posterUrl;
@property(nonatomic) _Bool isShowPosterImage; // @synthesize isShowPosterImage=_isShowPosterImage;
@property(nonatomic) _Bool isHideTool; // @synthesize isHideTool=_isHideTool;
@property(nonatomic) id <UCMoviePlayerSource> moviePlayerSource; // @synthesize moviePlayerSource=_moviePlayerSource;
@property(nonatomic) id <UCMoviePlayerToolControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (void)onMicroWindowSlipOut:(id)arg1;
- (void)onMicroWindowGuideShow:(id)arg1;
- (void)stopRecordGif;
- (void)startRecordGif:(id)arg1;
- (void)setGifParametersWithWidth:(double)arg1 height:(double)arg2 fps:(long long)arg3;
- (_Bool)isLoadingFinish;
- (void)toolPanel:(id)arg1 didHotMovieViewShow:(_Bool)arg2;
- (void)toolPanel:(id)arg1 didClickMovieRecommendView:(id)arg2;
- (_Bool)canEnterBusinessPage:(id)arg1;
- (void)shareEnterBusinessPage;
- (void)tipMgr:(id)arg1 flowWarningTipCancelButtonClicked:(id)arg2;
- (void)tipMgr:(id)arg1 flowWarningTipPlayButtonClicked:(id)arg2;
- (void)moviePlayDidStalled;
- (void)checkStalledWithPlaybackTime:(double)arg1;
- (void)checkExceptionPlaybackState:(double)arg1;
- (void)showTools:(_Bool)arg1;
- (_Bool)isShowingAdvisoryCallVideoAppView;
- (void)showAdvisoryCallVideoAppView;
- (_Bool)needsCallVideoApp;
- (void)checkVideoAppCallSwitch;
- (void)onUCMPExtendViewHideStateChange:(_Bool)arg1;
- (void)onUCMPExtendViewBtnClicked:(unsigned long long)arg1;
- (_Bool)testCanSeekWithTime:(float)arg1;
- (void)processCachingTaskState:(double)arg1;
- (void)playerAlertView:(id)arg1 didDismissWithButtonIndex:(long long)arg2;
- (void)playerAlertView:(id)arg1 willDismissWithButtonIndex:(long long)arg2;
- (void)playerAlertView:(id)arg1 clickedButtonAtIndex:(long long)arg2;
- (void)networkAlertDidUserWantSubscribeFreePackets:(id)arg1;
- (void)networkAlert:(id)arg1 didConfirmPlay:(_Bool)arg2;
- (void)networkStateChangedTo:(long long)arg1;
- (double)loadPercentageForPlaybackLoadingView:(id)arg1;
- (double)bpsForPlaybackLoadingView:(id)arg1;
- (void)moviePlayerAdvertisingTryToPause:(id)arg1;
- (void)moviePlayerAdvertisingTryToPlay:(id)arg1;
- (void)toolPanel:(id)arg1 didClickAuthorADDetail:(id)arg2 fromList:(_Bool)arg3;
- (void)toolPanel:(id)arg1 didAuthorADButtonClicked:(id)arg2;
- (void)toolPanel:(id)arg1 didAuthorADButtonShowed:(id)arg2;
- (void)toolPanel:(id)arg1 didAuthorADClose:(id)arg2;
- (void)toolPanel:(id)arg1 didAuthorADDispeared:(id)arg2;
- (void)toolPanel:(id)arg1 didAuthorADShowed:(id)arg2;
- (void)toolPanelDidEnterBusinessPage:(id)arg1;
- (_Bool)toolPanelCanForceDismiss:(id)arg1;
- (void)toolPanelDidClickAdUrl:(id)arg1;
- (void)toolPanelNextEpisodeOrRelatedClicked:(id)arg1;
- (void)toolPanelBarrageInputBtnClicked:(id)arg1;
- (void)toolPanelBarrageClicked:(id)arg1;
- (void)toolPanelDoubleClicked:(id)arg1;
- (void)toolPanel:(id)arg1 dragToTime:(double)arg2;
- (void)toolPanelTryToPause:(id)arg1;
- (void)toolPanelTryToPlay:(id)arg1;
- (void)toolPanelTryToStop:(id)arg1;
- (_Bool)isShowingAlertView;
- (_Bool)showNetAlertWhileReadyToPlayURL:(id)arg1 showReason:(long long)arg2;
- (long long)showNetToastIfNeed:(id)arg1;
- (void)closeNetworkAlertIfShow;
- (_Bool)canShowAdvertising;
- (_Bool)checkIfNeedAddFav;
- (void)networkChangedToWiFi;
- (void)networkChangedToWWAN;
- (void)showWWANToast;
- (void)addFavAlertViewDismiss;
- (void)addFavAlertViewClicked:(long long)arg1;
- (void)askIfAddFav;
- (void)pluginVideoInfoFetched;
- (void)setMoviePlayerToolHasNextEpisodeOrRelated;
- (void)setMoviePlayerPresented:(_Bool)arg1;
- (void)setMoviePlayerToolLoadState:(long long)arg1;
- (void)setMoviePlayerToolState:(long long)arg1;
- (void)setMoviePlayerToolHasBarrage:(_Bool)arg1;
- (void)setShowType:(long long)arg1;
- (void)setPlayButtonCanShow:(_Bool)arg1;
@property(readonly, nonatomic) UIView *toolTopBar;
@property(readonly, nonatomic) UIView *toolView;
@property(readonly, nonatomic) UIView *gestureView;
- (void)stopRefreshTimerIfNeeded;
- (_Bool)showMoviePlayerNetworkAlertIfNeeded:(id)arg1;
- (void)willPresendHighLevelController:(CDUnknownBlockType)arg1;
- (void)showMoviePlayerExtendView:(id)arg1;
- (void)cleanExtendView;
- (void)showMoviePlayerPlayError:(id)arg1;
- (void)showMoviePlayerWillPlayNextVideo;
- (void)refreshProgressInfo:(id)arg1;
- (void)startRefreshTimer;
- (void)moviePlayerAquireThumbnail:(id)arg1;
- (void)moviePlayerWillChangeAnim;
- (void)moviePlayerDidChangeAnim;
- (void)moviePlayerShowChanged:(id)arg1;
- (void)moviePlayerUserPlay;
- (void)moviePlayerUserStop;
- (void)barrageTryPlay;
- (void)delayBecomeActive;
- (void)becomeActive;
- (void)resignActive;
- (void)viewDidLoad;
- (void)didReceiveImage:(id)arg1 forUrl:(id)arg2;
- (id)requestImageForUrl:(id)arg1;
- (id)imageCacheManager;
@property(nonatomic) long long posterImageContentMode; // @dynamic posterImageContentMode;
- (void)setToolPanelHide:(_Bool)arg1;
- (void)onFavoriteChange;
- (_Bool)isAdHoldingPlayer;
- (void)stopLoadingViewLoading;
- (id)init;
- (void)dealloc;
- (void)stopSimpleLoadingAnimation;
- (void)startSimpleLoadingAnimation;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

