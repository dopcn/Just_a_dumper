//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <UIKit/UIView.h>

#import "TBMPBPlayerProtocol-Protocol.h"

@class AVAsset, AVPlayer, AVPlayerItem, NSMutableArray, NSObject, NSString, NSTimer, TBMPBPlayerOptions;
@protocol OS_dispatch_source;

@interface TBMPBAVPlayerView : UIView <TBMPBPlayerProtocol>
{
    _Bool _muted;
    _Bool _isLoadingFromCache;
    _Bool _isPlayerItemAddedKVO;
    _Bool _isUseProxy;
    _Bool _isFirstCanPlayed;
    _Bool _isVideoOutInTimeReported;
    _Bool _shouldSetErrorInfoInPlayExperience;
    _Bool _isSeeking;
    _Bool _isPlayingBeforeSeek;
    _Bool _willResumeAfterInterruption;
    _Bool _isPlayExperienceReported;
    _Bool _isFirstVideoFrameRenderedReported;
    _Bool _isError;
    int _playerStatus;
    int _stallsCount;
    int _loopCount;
    long long _playerContentMode;
    double _preferredForwardBufferDuration;
    double _currentPlaybackTime;
    double _duration;
    double _cacheProgress;
    CDUnknownBlockType _playerEventFired;
    CDUnknownBlockType _playerDataPopped;
    double _lastActiveTime;
    TBMPBPlayerOptions *_options;
    NSString *_url;
    AVPlayer *_player;
    AVAsset *_asset;
    AVPlayerItem *_playerItem;
    NSString *_cdnIP;
    id _periodicTimeObserver;
    id _boundaryTimeObserver;
    double _videoDurationForCache;
    double _videoDurationLimitForCache;
    NSString *_businessID;
    NSString *_subBusinessType;
    NSString *_logToken;
    NSString *_serverIP;
    NSTimer *_checkTimer;
    double _startTime;
    double _playerItemPreparedTime;
    double _outStartTime;
    double _userFirstFrameTime;
    double _outPreloadStartTime;
    double _userPreloadTime;
    long long _lastErrorCode;
    long long _lastErrorExtra;
    long long _lastErrorNetworkStatus;
    double _startStallTime;
    double _lastStallEndTime;
    double _totalStallsDuration;
    double _lastPlayingPointReportTime;
    NSObject<OS_dispatch_source> *_logTimer;
    double _videoDuration;
    NSMutableArray *_playerStatusNodes;
    double _playingTime;
    double _startPlayingTimeStamp;
    double _firstVideoFrameRenderingTime;
    struct CGRect _videoRect;
}

+ (Class)layerClass;
@property(nonatomic) _Bool isError; // @synthesize isError=_isError;
@property(nonatomic) int loopCount; // @synthesize loopCount=_loopCount;
@property(nonatomic) double firstVideoFrameRenderingTime; // @synthesize firstVideoFrameRenderingTime=_firstVideoFrameRenderingTime;
@property(nonatomic) _Bool isFirstVideoFrameRenderedReported; // @synthesize isFirstVideoFrameRenderedReported=_isFirstVideoFrameRenderedReported;
@property(nonatomic) double startPlayingTimeStamp; // @synthesize startPlayingTimeStamp=_startPlayingTimeStamp;
@property(nonatomic) double playingTime; // @synthesize playingTime=_playingTime;
@property(nonatomic) _Bool isPlayExperienceReported; // @synthesize isPlayExperienceReported=_isPlayExperienceReported;
@property(retain, nonatomic) NSMutableArray *playerStatusNodes; // @synthesize playerStatusNodes=_playerStatusNodes;
@property(nonatomic) double videoDuration; // @synthesize videoDuration=_videoDuration;
@property(retain, nonatomic) NSObject<OS_dispatch_source> *logTimer; // @synthesize logTimer=_logTimer;
@property(nonatomic) double lastPlayingPointReportTime; // @synthesize lastPlayingPointReportTime=_lastPlayingPointReportTime;
@property(nonatomic) double totalStallsDuration; // @synthesize totalStallsDuration=_totalStallsDuration;
@property(nonatomic) int stallsCount; // @synthesize stallsCount=_stallsCount;
@property(nonatomic) double lastStallEndTime; // @synthesize lastStallEndTime=_lastStallEndTime;
@property(nonatomic) double startStallTime; // @synthesize startStallTime=_startStallTime;
@property(nonatomic) _Bool willResumeAfterInterruption; // @synthesize willResumeAfterInterruption=_willResumeAfterInterruption;
@property(nonatomic) _Bool isPlayingBeforeSeek; // @synthesize isPlayingBeforeSeek=_isPlayingBeforeSeek;
@property(nonatomic) _Bool isSeeking; // @synthesize isSeeking=_isSeeking;
@property(nonatomic) _Bool shouldSetErrorInfoInPlayExperience; // @synthesize shouldSetErrorInfoInPlayExperience=_shouldSetErrorInfoInPlayExperience;
@property(nonatomic) long long lastErrorNetworkStatus; // @synthesize lastErrorNetworkStatus=_lastErrorNetworkStatus;
@property(nonatomic) long long lastErrorExtra; // @synthesize lastErrorExtra=_lastErrorExtra;
@property(nonatomic) long long lastErrorCode; // @synthesize lastErrorCode=_lastErrorCode;
@property(nonatomic) double userPreloadTime; // @synthesize userPreloadTime=_userPreloadTime;
@property(nonatomic) double outPreloadStartTime; // @synthesize outPreloadStartTime=_outPreloadStartTime;
@property(nonatomic) double userFirstFrameTime; // @synthesize userFirstFrameTime=_userFirstFrameTime;
@property(nonatomic) double outStartTime; // @synthesize outStartTime=_outStartTime;
@property(nonatomic) double playerItemPreparedTime; // @synthesize playerItemPreparedTime=_playerItemPreparedTime;
@property(nonatomic) double startTime; // @synthesize startTime=_startTime;
@property(nonatomic) _Bool isVideoOutInTimeReported; // @synthesize isVideoOutInTimeReported=_isVideoOutInTimeReported;
@property(nonatomic) _Bool isFirstCanPlayed; // @synthesize isFirstCanPlayed=_isFirstCanPlayed;
@property(retain, nonatomic) NSTimer *checkTimer; // @synthesize checkTimer=_checkTimer;
@property(copy, nonatomic) NSString *serverIP; // @synthesize serverIP=_serverIP;
@property(nonatomic) _Bool isUseProxy; // @synthesize isUseProxy=_isUseProxy;
@property(copy, nonatomic) NSString *logToken; // @synthesize logToken=_logToken;
@property(copy, nonatomic) NSString *subBusinessType; // @synthesize subBusinessType=_subBusinessType;
@property(copy, nonatomic) NSString *businessID; // @synthesize businessID=_businessID;
@property(nonatomic) double videoDurationLimitForCache; // @synthesize videoDurationLimitForCache=_videoDurationLimitForCache;
@property(nonatomic) double videoDurationForCache; // @synthesize videoDurationForCache=_videoDurationForCache;
@property(nonatomic) _Bool isPlayerItemAddedKVO; // @synthesize isPlayerItemAddedKVO=_isPlayerItemAddedKVO;
@property(nonatomic) id boundaryTimeObserver; // @synthesize boundaryTimeObserver=_boundaryTimeObserver;
@property(nonatomic) id periodicTimeObserver; // @synthesize periodicTimeObserver=_periodicTimeObserver;
@property(nonatomic) NSString *cdnIP; // @synthesize cdnIP=_cdnIP;
@property(nonatomic) int playerStatus; // @synthesize playerStatus=_playerStatus;
@property(retain, nonatomic) AVPlayerItem *playerItem; // @synthesize playerItem=_playerItem;
@property(retain, nonatomic) AVAsset *asset; // @synthesize asset=_asset;
@property(retain, nonatomic) AVPlayer *player; // @synthesize player=_player;
@property(copy, nonatomic) NSString *url; // @synthesize url=_url;
@property(retain, nonatomic) TBMPBPlayerOptions *options; // @synthesize options=_options;
@property(nonatomic) double lastActiveTime; // @synthesize lastActiveTime=_lastActiveTime;
@property(copy, nonatomic) CDUnknownBlockType playerDataPopped; // @synthesize playerDataPopped=_playerDataPopped;
@property(copy, nonatomic) CDUnknownBlockType playerEventFired; // @synthesize playerEventFired=_playerEventFired;
@property(nonatomic) _Bool isLoadingFromCache; // @synthesize isLoadingFromCache=_isLoadingFromCache;
@property(nonatomic) long long playerContentMode; // @synthesize playerContentMode=_playerContentMode;
@property(nonatomic) _Bool muted; // @synthesize muted=_muted;
- (void).cxx_destruct;
- (id)playerStatusData;
- (id)snapshotImageAtCurrentTime;
- (_Bool)isPlaying;
- (void)setInfo:(id)arg1;
- (void)setConfig:(id)arg1;
- (void)prepareToRecycle;
- (void)shutdown;
- (void)stop;
- (void)pause;
- (void)play;
- (void)prepareToPlay;
- (void)logPlayerStatus;
- (id)setupDispatchTimerWithInterval:(unsigned long long)arg1 leeway:(unsigned long long)arg2 queue:(id)arg3 block:(CDUnknownBlockType)arg4;
- (void)stopLogTimer;
- (void)startLogTimer;
- (void)checkIfFirstVideoFrameRendered;
- (void)removeObservers;
- (void)addObservers;
- (void)audioSessionInterruption:(id)arg1;
- (void)playerItemPlaybackStalled:(id)arg1;
- (void)playerItemFailedToPlayToEndTime:(id)arg1;
- (void)playerItemDidPlayToEndTime:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (id)playerStatusNodesDescription;
- (id)getPlayerKeyData;
- (double)playableDuration;
- (void)reportPlaying;
- (void)reportStalled;
- (id)errorInfoWithErrorCode:(long long)arg1;
- (void)reportPlayExperience;
- (void)popPlaybackTimeData;
- (id)getAVLayerVideoGravityWithContentMode:(long long)arg1;
- (void)dealloc;
- (void)setupPlayer;
- (id)initWithMediaURL:(id)arg1 playerOptions:(id)arg2;
@property(readonly, nonatomic) struct CGSize naturalSize;
@property(readonly, nonatomic) struct CGRect videoRect; // @synthesize videoRect=_videoRect;
- (id)playerLayer;
@property(readonly, nonatomic) double cacheProgress; // @synthesize cacheProgress=_cacheProgress;
@property(readonly, nonatomic) double cacheDuration;
@property(readonly, nonatomic) double duration; // @synthesize duration=_duration;
@property(nonatomic) double currentPlaybackTime; // @synthesize currentPlaybackTime=_currentPlaybackTime;
@property(nonatomic) double preferredForwardBufferDuration; // @synthesize preferredForwardBufferDuration=_preferredForwardBufferDuration;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(nonatomic) long long renderViewOrientation;
@property(readonly) Class superclass;

@end

