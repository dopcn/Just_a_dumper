//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

@class EAAccessory, EASession, NSString, NSThread, SDLMutableDataQueue, SDLStreamDelegate;
@protocol OS_dispatch_semaphore, SDLIAPSessionDelegate;

@interface SDLIAPSession : NSObject
{
    _Bool _isInputStreamOpen;
    _Bool _isOutputStreamOpen;
    _Bool _isDataSession;
    EAAccessory *_accessory;
    NSString *_protocol;
    EASession *_easession;
    id <SDLIAPSessionDelegate> _delegate;
    SDLStreamDelegate *_streamDelegate;
    NSThread *_ioStreamThread;
    SDLMutableDataQueue *_sendDataQueue;
    NSObject<OS_dispatch_semaphore> *_canceledSemaphore;
}

@property(retain, nonatomic) NSObject<OS_dispatch_semaphore> *canceledSemaphore; // @synthesize canceledSemaphore=_canceledSemaphore;
@property(retain, nonatomic) SDLMutableDataQueue *sendDataQueue; // @synthesize sendDataQueue=_sendDataQueue;
@property(retain, nonatomic) NSThread *ioStreamThread; // @synthesize ioStreamThread=_ioStreamThread;
@property(nonatomic) _Bool isDataSession; // @synthesize isDataSession=_isDataSession;
@property _Bool isOutputStreamOpen; // @synthesize isOutputStreamOpen=_isOutputStreamOpen;
@property _Bool isInputStreamOpen; // @synthesize isInputStreamOpen=_isInputStreamOpen;
@property(retain) SDLStreamDelegate *streamDelegate; // @synthesize streamDelegate=_streamDelegate;
@property __weak id <SDLIAPSessionDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain) EASession *easession; // @synthesize easession=_easession;
@property(retain) NSString *protocol; // @synthesize protocol=_protocol;
@property(retain) EAAccessory *accessory; // @synthesize accessory=_accessory;
- (void).cxx_destruct;
- (CDUnknownBlockType)sdl_streamHasSpaceHandler;
- (CDUnknownBlockType)streamErroredHandler;
- (CDUnknownBlockType)streamOpenedHandler;
- (void)stopStream:(id)arg1;
- (void)startStream:(id)arg1;
- (void)sdl_closeSession;
- (void)sdl_accessoryEventLoop;
- (void)sdl_handleOutputStreamWriteError:(id)arg1;
- (_Bool)sdl_dequeueAndWriteToOutputStream:(id *)arg1;
- (void)sendData:(id)arg1;
@property(readonly, getter=isStopped) _Bool stopped;
- (void)stop;
- (_Bool)start;
- (id)initWithAccessory:(id)arg1 forProtocol:(id)arg2;

@end

