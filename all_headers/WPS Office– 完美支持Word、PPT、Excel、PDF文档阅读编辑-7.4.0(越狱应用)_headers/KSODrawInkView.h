//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <UIKit/UIView.h>

@class CAShapeLayer, KSOInkLines, NSString;

@interface KSODrawInkView : UIView
{
    struct CGLayer *mLayerRef;
    struct CGLayer *mTmpLayerRef;
    CAShapeLayer *mTmpLayer;
    _Bool _isAcceptData;
    _Bool _shareCoordinateSystem;
    KSOInkLines *_linesData;
    KSOInkLines *_redoData;
    NSString *_superViewAddress;
    double _scale;
    struct CGRect _logicFrame;
    struct CGRect _limitRect;
}

@property(nonatomic) _Bool shareCoordinateSystem; // @synthesize shareCoordinateSystem=_shareCoordinateSystem;
@property(nonatomic) double scale; // @synthesize scale=_scale;
@property(copy, nonatomic) NSString *superViewAddress; // @synthesize superViewAddress=_superViewAddress;
@property(nonatomic) _Bool isAcceptData; // @synthesize isAcceptData=_isAcceptData;
@property(nonatomic) KSOInkLines *redoData; // @synthesize redoData=_redoData;
@property(nonatomic) KSOInkLines *linesData; // @synthesize linesData=_linesData;
@property(nonatomic) struct CGRect limitRect; // @synthesize limitRect=_limitRect;
@property(nonatomic) struct CGRect logicFrame; // @synthesize logicFrame=_logicFrame;
- (void)setNeedsDisplayInRect:(struct CGRect)arg1;
- (void)setNeedsDisplay;
- (void)setContentScaleFactor:(double)arg1;
- (void)clearLayerCache;
- (struct CGRect)convertToLocationRect:(struct CGRect)arg1;
- (struct CGPoint)convertToLogicPoint:(struct CGPoint)arg1;
- (struct CGPoint)convertToLocationPoint:(struct CGPoint)arg1;
- (struct CGLayer *)obtainLayerRef:(struct CGSize)arg1;
- (void)checkIsNeedRedraw:(struct CGRect)arg1;
- (void)js_init;
- (void)setNeedRedraw:(unsigned long long)arg1;
- (void)dealloc;
- (id)init;
- (_Bool)checkPenTmpLayerNeedDestory:(id)arg1;
- (struct CGRect)drawNonStrokeLineWithPoint:(struct CGContext **)arg1 first:(struct CGPoint)arg2 second:(struct CGPoint)arg3 third:(struct CGPoint)arg4 lineData:(id)arg5;
- (struct CGRect)drawNonStrokeLine:(struct CGContext **)arg1 first:(id)arg2 second:(id)arg3 third:(id)arg4 lineData:(id)arg5;
- (struct CGRect)drawStrokLineWithArray:(struct CGContext **)arg1 points:(id)arg2 lineWidth:(id)arg3 lineData:(id)arg4;
- (struct CGRect)drawStrokeLine:(struct CGContext **)arg1 first:(id)arg2 second:(id)arg3 third:(id)arg4 lineData:(id)arg5;
- (struct CGRect)drawLineOrCircleWithArray:(id)arg1 context:(struct CGContext **)arg2 lineData:(id)arg3;
- (struct CGRect)drawLineOrCircle:(struct CGContext **)arg1 lineData:(id)arg2;
- (_Bool)drawRectangleIfNeed:(id)arg1;
- (struct CGRect)drawRectangle:(struct CGContext **)arg1 lineData:(id)arg2;
- (_Bool)drawStraightLineIfNeed:(id)arg1;
- (struct CGRect)drawStraightLine:(struct CGContext **)arg1 lineData:(id)arg2;
- (_Bool)drawStraightLineWithArrowIfNeed:(id)arg1;
- (struct CGRect)drawStraightLineWithArrow:(struct CGContext **)arg1 lineData:(id)arg2;
- (_Bool)drawOvalIfNeed:(id)arg1;
- (struct CGRect)drawOval:(struct CGContext **)arg1 lineData:(id)arg2;
- (struct CGRect)drawSpecialShape:(struct CGContext **)arg1 lineData:(id)arg2;
- (struct CGRect)drawLastTwoPoint:(struct CGContext **)arg1 lineData:(id)arg2;
- (_Bool)pointInLogicFrame:(struct CGPoint)arg1;
- (struct CGRect)drawLine:(struct CGContext **)arg1 first:(id)arg2 second:(id)arg3 third:(id)arg4 lineData:(id)arg5;
- (struct CGRect)drawLine:(id)arg1;
- (struct CGRect)drawRedo:(id)arg1;
- (struct CGRect)drawUndo:(id)arg1;
- (struct CGRect)drawAllLines;
- (struct CGRect)drawLastTwoPoint;
- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;
- (void)drawRect:(struct CGRect)arg1;
- (struct CGRect)obtainRectangleInLocation:(id)arg1;
- (_Bool)drawSpecialShapeIfNeed:(CDUnknownBlockType)arg1 lineData:(id)arg2;
- (void)addDrawAreaLimitIfNeed:(struct CGContext *)arg1 lineData:(id)arg2 scale:(double)arg3;

@end

