//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <UIKit/UIViewController.h>

#import "A3DViewDelegate-Protocol.h"

@class A3DView, FARA3DModel, NSString, UIPanGestureRecognizer, UIPinchGestureRecognizer;
@protocol FAR3DBrowserViewControllerDelegate;

@interface FAR3DBrowserViewController : UIViewController <A3DViewDelegate>
{
    struct ModelNode {
        CDUnknownFunctionPointerType *;
        int;
        struct vector<ali3d::Animation::Channel *, std::__1::allocator<ali3d::Animation::Channel *>> *;
        _Bool;
        struct Matrix;
        struct Vector3;
        struct Quaternion;
        struct Vector3;
        struct Matrix;
        char;
        struct list<ali3d::Transform::TransformListener, std::__1::allocator<ali3d::Transform::TransformListener>> *;
        CDUnknownFunctionPointerType *;
        unsigned int;
        basic_string_a490aa4c;
        basic_string_a490aa4c;
        long long;
        struct Matrix;
        struct Matrix;
        struct Matrix;
        struct Matrix;
        int;
        struct Scene *;
        struct Node *;
        struct Node *;
        struct Node *;
        struct Node *;
        unsigned int;
        _Bool;
        struct map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char>>>> *;
        struct Drawable *;
        struct Camera *;
        struct Light *;
        struct AudioSource *;
        struct Ref *;
        struct Matrix;
        struct Matrix;
        struct BoundingSphere;
        int;
        struct BoundingBox;
        _Bool;
        struct unordered_map<std::__1::basic_string<char>, ali3d::Component *, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, ali3d::Component *>>> {
            struct __hash_table<std::__1::__hash_value_type<std::__1::basic_string<char>, ali3d::Component *>, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, ali3d::Component *>, std::__1::hash<std::__1::basic_string<char>>, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, ali3d::Component *>, std::__1::equal_to<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char>, ali3d::Component *>>> {
                struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, ali3d::Component *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, ali3d::Component *>, void *>*>*>>>;
                struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, ali3d::Component *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, ali3d::Component *>, void *>>>;
                struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, ali3d::Component *>, std::__1::hash<std::__1::basic_string<char>>, true>>;
                struct __compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, ali3d::Component *>, std::__1::equal_to<std::__1::basic_string<char>>, true>>;
            };
        };
        struct vector<ali3d::Node *, std::__1::allocator<ali3d::Node *>>;
        struct vector<ali3d::Animation *, std::__1::allocator<ali3d::Animation *>>;
        struct vector<ali3d::Material *, std::__1::allocator<ali3d::Material *>>;
        struct map<std::__1::basic_string<char>, ali3d::Material *, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, ali3d::Material *>>>;
    } *_modelNode;
    float _lastPanX;
    float _lastPanY;
    float _totalRotateX;
    float _totalRotateY;
    float _totalScale;
    _Bool _panX;
    double _lastScale;
    _Bool _playing;
    _Bool _pausing;
    _Bool _hasObservers;
    _Bool _pause;
    FARA3DModel *_model;
    id <FAR3DBrowserViewControllerDelegate> _delegate;
    A3DView *_glView;
    UIPanGestureRecognizer *_panGesture;
    UIPinchGestureRecognizer *_pinchGesture;
}

@property(nonatomic, getter=isPaused) _Bool pause; // @synthesize pause=_pause;
@property(nonatomic) _Bool hasObservers; // @synthesize hasObservers=_hasObservers;
@property(retain, nonatomic) UIPinchGestureRecognizer *pinchGesture; // @synthesize pinchGesture=_pinchGesture;
@property(retain, nonatomic) UIPanGestureRecognizer *panGesture; // @synthesize panGesture=_panGesture;
@property(retain, nonatomic) A3DView *glView; // @synthesize glView=_glView;
@property(nonatomic) _Bool pausing; // @synthesize pausing=_pausing;
@property(nonatomic) _Bool playing; // @synthesize playing=_playing;
@property(nonatomic) __weak id <FAR3DBrowserViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) FARA3DModel *model; // @synthesize model=_model;
- (void).cxx_destruct;
- (void)rendererPreRender;
- (void)applicationWillEnterForegroundNotification:(id)arg1;
- (void)applicationWillResignActiveNotification:(id)arg1;
- (void)removeNotifications;
- (void)addNotifications;
- (void)syncRotateAndScale;
- (void)pinchGestureHandler:(id)arg1;
- (void)arbiPan:(id)arg1;
- (void)pause;
- (void)resume;
- (void)parseLightJSONWithFile:(id)arg1;
- (void)setupGLView;
- (_Bool)animationEnable;
- (void)stopPlayAnimation;
- (void)pauseAnimation;
- (void)startPlayAnimation;
- (void)loadModelWithA3DModel:(id)arg1;
- (void)dealloc;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

