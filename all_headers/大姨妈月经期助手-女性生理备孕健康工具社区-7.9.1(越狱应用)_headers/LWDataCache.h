//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "NSCacheDelegate-Protocol.h"

@class NSDictionary, NSMutableDictionary, NSString;

@interface LWDataCache : NSObject <NSCacheDelegate>
{
    double _defaultTimeoutInterval;
    struct dispatch_queue_s *_diskQueue;
    struct dispatch_queue_s *_cacheInfoQueue;
    struct dispatch_queue_s *_frozenCacheInfoQueue;
    NSString *_frozenCacheInfoQueueSpecific;
    NSMutableDictionary *_cacheInfo;
    NSString *_cacheInfoFile;
    NSMutableDictionary *_cacheStat;
    unsigned int _cacheStatHitDisk;
    unsigned int _cacheStatHitMemory;
    unsigned int _cacheStatQueryTimes;
    _Bool _cacheInfoFileNeedsSave;
    NSDictionary *_frozenCacheInfo;
    NSString *_poolName;
    NSString *_poolPath;
}

+ (unsigned long long)freeDiskSpace;
+ (unsigned long long)sizeOfDirectory:(id)arg1;
+ (void)purgePools;
+ (unsigned long long)maxCachedSpaceAllow;
+ (void)cleanPoolsIfNeeded;
+ (void)cleanPools;
+ (unsigned long long)allPoolSize;
+ (id)allCachedPools;
+ (void)cleanMemory;
+ (id)cachePoolWithName:(id)arg1;
+ (id)sharedPool;
@property(copy, nonatomic) NSString *poolPath; // @synthesize poolPath=_poolPath;
@property(copy, nonatomic) NSString *poolName; // @synthesize poolName=_poolName;
- (void).cxx_destruct;
- (void)cache:(id)arg1 willEvictObject:(id)arg2;
- (_Bool)isKindOfImage:(id)arg1;
- (id)statistics;
- (unsigned long long)poolDiskSize;
- (void)removeMemoryCacheForKey:(id)arg1;
- (void)setObjectInMemory:(id)arg1 forKey:(id)arg2;
- (id)objectForKeyInMemory:(id)arg1;
- (_Bool)hasCacheForKeyInMemory:(id)arg1;
- (void)cleanDisk;
- (void)purgeDisk;
- (void)removeCacheForKey:(id)arg1;
- (void)setImage:(id)arg1 forKey:(id)arg2 withTimeoutInterval:(double)arg3;
- (void)setImage:(id)arg1 forKey:(id)arg2;
- (id)imageForKey:(id)arg1;
- (void)setObject:(id)arg1 forKey:(id)arg2 withTimeoutInterval:(double)arg3;
- (void)setObject:(id)arg1 forKey:(id)arg2;
- (id)objectForKey:(id)arg1;
- (void)setCacheTimeoutInterval:(double)arg1 forKey:(id)arg2;
- (void)setData:(id)arg1 forKey:(id)arg2 inMemory:(_Bool)arg3 withTimeoutInterval:(double)arg4;
- (void)setData:(id)arg1 forKey:(id)arg2 withTimeoutInterval:(double)arg3;
- (void)setData:(id)arg1 forKey:(id)arg2;
- (id)dataForKey:(id)arg1 storeInMemory:(_Bool)arg2;
- (id)dataForKey:(id)arg1;
- (void)setNeedsSaveCacheInfo;
- (id)infoForKey:(id)arg1;
- (_Bool)hasCacheForKey:(id)arg1;
- (id)cachePathForHashKey:(id)arg1;
- (id)cachePathForKey:(id)arg1;
- (id)subDirectoryForKey:(id)arg1;
- (id)md5ForString:(id)arg1;
- (id)hashForString:(id)arg1;
- (_Bool)createDirectoryIfNeeded:(id)arg1;
@property(copy, nonatomic) NSDictionary *frozenCacheInfo; // @synthesize frozenCacheInfo=_frozenCacheInfo;
@property(readonly, copy) NSString *description;
- (void)dealloc;
- (id)init;
- (id)initWithPoolName:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

