//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <UIKit/UIView.h>

#import "MPICommodityTagContainerViewDelegate-Protocol.h"
#import "MPILivePlaybackCoverViewDelegate-Protocol.h"
#import "MPIMediaRecommendViewDelegate-Protocol.h"
#import "MPIMediaViewInterface-Protocol.h"
#import "MPIPlayerManagerDelegate-Protocol.h"
#import "MPPlayViewDelegate-Protocol.h"
#import "MTCommentLabelDelegate-Protocol.h"
#import "MTTagImageViewDelegate-Protocol.h"

@class MPICommodityTagContainerView, MPILivePlaybackCoverView, MPIMediaGiftButton, MPIMediaRecommendView, MPIMusicTopicButton, MPPlayView, MTCommentLabel, MTTagImageView, MediaDetail, NSDictionary, NSLayoutConstraint, NSNumber, NSString, UIButton, UILabel;
@protocol MPMediaViewCellPreloadDelegate, MPMediaViewDelegate, MPMediaViewRecommendViewDelegate, MPMediaViewStatisticsDataSource;

@interface MPMediaView : UIView <MPPlayViewDelegate, MTTagImageViewDelegate, MPILivePlaybackCoverViewDelegate, MPIMediaRecommendViewDelegate, MPICommodityTagContainerViewDelegate, MPIPlayerManagerDelegate, MTCommentLabelDelegate, MPIMediaViewInterface>
{
    _Bool _needHotRecommend;
    _Bool _fullscreening;
    _Bool _showRecommend;
    _Bool _isChangingFollowState;
    _Bool _hasTransitionToOtherPlayView;
    _Bool _hasShowDoubleTapLikeTip;
    _Bool _expand;
    _Bool _hasRequestedDynamicFriendRecommendMedia;
    _Bool _hasPlayedInFullScreen;
    _Bool _hasStatisticPlayInSeconds;
    _Bool _hasCountMediaPlay;
    UIView *_mainView;
    UIButton *_followButton;
    UIButton *_followedButton;
    MTCommentLabel *_caption;
    MPIMediaGiftButton *_giftButton;
    UILabel *_postTime;
    UIButton *_privacyButton;
    NSLayoutConstraint *_giftRightSpace;
    NSLayoutConstraint *_followButtonWidthConstraint;
    UIView *_mediaCell;
    id <MPMediaViewDelegate> _delegate;
    id <MPMediaViewCellPreloadDelegate> _preloadDelegate;
    id <MPMediaViewRecommendViewDelegate> _recommendViewDelegate;
    id <MPMediaViewStatisticsDataSource> _statisticsDataSource;
    MediaDetail *_media;
    NSDictionary *_linkTag;
    long long _recommendMediaFrom;
    unsigned long long _shareButtonType;
    Class _recommendViewClass;
    MPIMediaRecommendView *_mediaRecommendView;
    MPPlayView *_playerView;
    MPICommodityTagContainerView *_commodityContainerView;
    NSString *_playIdentify;
    unsigned long long _mediaViewType;
    double _playViewHeight;
    double _coverRatio;
    long long _playViewSource;
    MediaDetail *_repostMedia;
    UIButton *_likeButton;
    UIButton *_replyButton;
    UIButton *_moreButton;
    UIButton *_zoomButton;
    NSLayoutConstraint *_privacyButtonLeftSpace;
    NSLayoutConstraint *_privacyButtonBottomSpace;
    NSLayoutConstraint *_mainViewLeftSpace;
    NSLayoutConstraint *_mainViewRightSpace;
    NSLayoutConstraint *_mainViewHeight;
    NSLayoutConstraint *_giftButtonWidthConstraint;
    MTTagImageView *_tagImageView;
    MPILivePlaybackCoverView *_liveCoverView;
    UIButton *_tipButton;
    MPIMusicTopicButton *_musicTopicButton;
    double _videoRatio;
    NSNumber *_fromId;
    unsigned long long _disPlaySource;
    unsigned long long _playFrom;
}

+ (void)initialize;
@property(nonatomic) _Bool hasCountMediaPlay; // @synthesize hasCountMediaPlay=_hasCountMediaPlay;
@property(nonatomic) _Bool hasStatisticPlayInSeconds; // @synthesize hasStatisticPlayInSeconds=_hasStatisticPlayInSeconds;
@property(nonatomic) _Bool hasPlayedInFullScreen; // @synthesize hasPlayedInFullScreen=_hasPlayedInFullScreen;
@property(nonatomic) unsigned long long playFrom; // @synthesize playFrom=_playFrom;
@property(nonatomic) unsigned long long disPlaySource; // @synthesize disPlaySource=_disPlaySource;
@property(retain, nonatomic) NSNumber *fromId; // @synthesize fromId=_fromId;
@property(nonatomic) double videoRatio; // @synthesize videoRatio=_videoRatio;
@property(nonatomic) _Bool hasRequestedDynamicFriendRecommendMedia; // @synthesize hasRequestedDynamicFriendRecommendMedia=_hasRequestedDynamicFriendRecommendMedia;
@property(nonatomic) _Bool expand; // @synthesize expand=_expand;
@property(retain, nonatomic) MPIMusicTopicButton *musicTopicButton; // @synthesize musicTopicButton=_musicTopicButton;
@property(retain, nonatomic) UIButton *tipButton; // @synthesize tipButton=_tipButton;
@property(retain, nonatomic) MPILivePlaybackCoverView *liveCoverView; // @synthesize liveCoverView=_liveCoverView;
@property(retain, nonatomic) MTTagImageView *tagImageView; // @synthesize tagImageView=_tagImageView;
@property(nonatomic) __weak NSLayoutConstraint *giftButtonWidthConstraint; // @synthesize giftButtonWidthConstraint=_giftButtonWidthConstraint;
@property(nonatomic) __weak NSLayoutConstraint *mainViewHeight; // @synthesize mainViewHeight=_mainViewHeight;
@property(nonatomic) __weak NSLayoutConstraint *mainViewRightSpace; // @synthesize mainViewRightSpace=_mainViewRightSpace;
@property(nonatomic) __weak NSLayoutConstraint *mainViewLeftSpace; // @synthesize mainViewLeftSpace=_mainViewLeftSpace;
@property(nonatomic) __weak NSLayoutConstraint *privacyButtonBottomSpace; // @synthesize privacyButtonBottomSpace=_privacyButtonBottomSpace;
@property(nonatomic) __weak NSLayoutConstraint *privacyButtonLeftSpace; // @synthesize privacyButtonLeftSpace=_privacyButtonLeftSpace;
@property(nonatomic) __weak UIButton *zoomButton; // @synthesize zoomButton=_zoomButton;
@property(nonatomic) __weak UIButton *moreButton; // @synthesize moreButton=_moreButton;
@property(nonatomic) __weak UIButton *replyButton; // @synthesize replyButton=_replyButton;
@property(nonatomic) __weak UIButton *likeButton; // @synthesize likeButton=_likeButton;
@property(retain, nonatomic) MediaDetail *repostMedia; // @synthesize repostMedia=_repostMedia;
@property(nonatomic) long long playViewSource; // @synthesize playViewSource=_playViewSource;
@property(nonatomic) _Bool hasShowDoubleTapLikeTip; // @synthesize hasShowDoubleTapLikeTip=_hasShowDoubleTapLikeTip;
@property(nonatomic) _Bool hasTransitionToOtherPlayView; // @synthesize hasTransitionToOtherPlayView=_hasTransitionToOtherPlayView;
@property(nonatomic) double coverRatio; // @synthesize coverRatio=_coverRatio;
@property(nonatomic) double playViewHeight; // @synthesize playViewHeight=_playViewHeight;
@property(nonatomic) _Bool isChangingFollowState; // @synthesize isChangingFollowState=_isChangingFollowState;
@property(nonatomic) unsigned long long mediaViewType; // @synthesize mediaViewType=_mediaViewType;
@property(copy, nonatomic) NSString *playIdentify; // @synthesize playIdentify=_playIdentify;
@property(retain, nonatomic) MPICommodityTagContainerView *commodityContainerView; // @synthesize commodityContainerView=_commodityContainerView;
@property(retain, nonatomic) MPPlayView *playerView; // @synthesize playerView=_playerView;
@property(retain, nonatomic) MPIMediaRecommendView *mediaRecommendView; // @synthesize mediaRecommendView=_mediaRecommendView;
@property(nonatomic) _Bool showRecommend; // @synthesize showRecommend=_showRecommend;
@property(nonatomic) Class recommendViewClass; // @synthesize recommendViewClass=_recommendViewClass;
@property(nonatomic) unsigned long long shareButtonType; // @synthesize shareButtonType=_shareButtonType;
@property(nonatomic, getter=isFullscreening) _Bool fullscreening; // @synthesize fullscreening=_fullscreening;
@property(nonatomic) long long recommendMediaFrom; // @synthesize recommendMediaFrom=_recommendMediaFrom;
@property(nonatomic) _Bool needHotRecommend; // @synthesize needHotRecommend=_needHotRecommend;
@property(retain, nonatomic) NSDictionary *linkTag; // @synthesize linkTag=_linkTag;
@property(retain, nonatomic) MediaDetail *media; // @synthesize media=_media;
@property(nonatomic) __weak id <MPMediaViewStatisticsDataSource> statisticsDataSource; // @synthesize statisticsDataSource=_statisticsDataSource;
@property(nonatomic) __weak id <MPMediaViewRecommendViewDelegate> recommendViewDelegate; // @synthesize recommendViewDelegate=_recommendViewDelegate;
@property(nonatomic) __weak id <MPMediaViewCellPreloadDelegate> preloadDelegate; // @synthesize preloadDelegate=_preloadDelegate;
@property(nonatomic) __weak id <MPMediaViewDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) __weak UIView *mediaCell; // @synthesize mediaCell=_mediaCell;
@property(nonatomic) __weak NSLayoutConstraint *followButtonWidthConstraint; // @synthesize followButtonWidthConstraint=_followButtonWidthConstraint;
@property(nonatomic) __weak NSLayoutConstraint *giftRightSpace; // @synthesize giftRightSpace=_giftRightSpace;
@property(nonatomic) __weak UIButton *privacyButton; // @synthesize privacyButton=_privacyButton;
@property(nonatomic) __weak UILabel *postTime; // @synthesize postTime=_postTime;
@property(nonatomic) __weak MPIMediaGiftButton *giftButton; // @synthesize giftButton=_giftButton;
@property(nonatomic) __weak MTCommentLabel *caption; // @synthesize caption=_caption;
@property(nonatomic) __weak UIButton *followedButton; // @synthesize followedButton=_followedButton;
@property(nonatomic) __weak UIButton *followButton; // @synthesize followButton=_followButton;
@property(nonatomic) __weak UIView *mainView; // @synthesize mainView=_mainView;
- (void).cxx_destruct;
- (void)followStateDidChangeNotification:(id)arg1;
- (void)applicationWillResignActive:(id)arg1;
- (void)applicationDidBecomeActive:(id)arg1;
- (void)barrageStateDidChangeNotification:(id)arg1;
- (_Bool)shouldReponsePoint:(struct CGPoint)arg1 inView:(id)arg2;
- (void)commodityTagContainerView:(id)arg1 didTapDeleteView:(id)arg2;
- (void)commodityTagContainerView:(id)arg1 didDoubleTapTagView:(id)arg2;
- (void)commodityTagContainerView:(id)arg1 didTapTagView:(id)arg2;
- (void)mediaRecommendView:(id)arg1 turnToMediaDetailWithMediaID:(id)arg2;
- (void)mediaRecommendViewDidTapLike:(id)arg1;
- (void)mediaRecommendViewDidTapReplay:(id)arg1;
- (void)commentLabel:(id)arg1 tagString:(id)arg2 type:(unsigned long long)arg3;
- (void)livePlaybackConverViewDidTapPlayback:(id)arg1;
- (void)tagImageViewDidDoubleTap:(id)arg1;
- (void)tagImageViewDidStartEditWithTagView:(id)arg1;
- (void)tagImageViewDidSingleTap:(id)arg1 position:(struct CGPoint)arg2;
- (void)playerManager:(id)arg1 loadFailed:(id)arg2;
- (void)playerManager:(id)arg1 saveRestoreDic:(id)arg2;
- (void)playerManager:(id)arg1 progressDidChange:(double)arg2;
- (void)updatePrivacyButtonWithPlayerStatus:(unsigned long long)arg1;
- (void)playerManager:(id)arg1 statusDidChanged:(unsigned long long)arg2;
- (void)playView:(id)arg1 controlViewDidExpand:(_Bool)arg2;
- (void)playViewDidTouchBarrage:(id)arg1;
- (void)playViewDidEnterFullScreenMode:(id)arg1;
- (void)playViewDidDoubleTap:(id)arg1;
- (void)playViewDidTap:(id)arg1;
- (void)playView:(id)arg1 touchUpOnValue:(double)arg2;
- (void)playView:(id)arg1 startDragOnValue:(double)arg2;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (_Bool)canAutoPlay;
- (void)transitionToOtherPlayView;
- (void)transitionPlayViewFromOtherPlayView;
- (void)updateCommodities:(id)arg1;
- (void)updateCommodities:(id)arg1 animated:(_Bool)arg2;
- (id)recommendMediaIDString;
- (void)requestDynamicFriendRecommendMediaByProgress:(double)arg1;
- (void)handleLikeMedia;
- (void)addMediaRecommendView:(id)arg1;
- (void)configShareButton;
- (void)hideFollowedButton;
- (void)handleBarrage;
- (void)requestBarragesWithMediaId:(id)arg1;
- (void)updateCommodityContainerViewWithCurrentTime:(double)arg1 animated:(_Bool)arg2;
- (void)reloadCommoditiesData;
- (void)setupPlayManagerWithMedia:(id)arg1;
- (id)preloadInfoFromDelegate;
- (void)handleShowDoubleTapTipWithProgress:(double)arg1;
- (void)handleDoubleTap;
- (void)hideDoubleLikeTips;
- (void)updateTipButtonFrame;
- (void)showAlreadyLikeTips;
- (void)showDoubleLikeTips;
- (void)playLikeAnimation;
- (id)playIdentifyWithMediaViewType:(unsigned long long)arg1;
- (void)setupLiveCoverView;
- (void)setupTagImageView;
- (void)setupPlayerView;
- (void)configButton:(id)arg1 withCount:(long long)arg2 defaultTitle:(id)arg3;
- (void)followButtonStyleABTesting;
- (void)commonInit;
- (void)countMediaPlayIsReachEnd:(_Bool)arg1;
- (void)resetCountMediaPlay;
- (void)statisticInSecondsIfNeeded;
- (void)resetStatisticInSecondsFlag;
- (void)addPlayView:(id)arg1;
- (void)removePlayView;
- (void)restorePlayView:(id)arg1;
- (void)startPlayForce;
- (void)didDisplayNeedPlay:(_Bool)arg1;
- (void)didDisplay;
- (void)willDisplay;
- (void)viewEndDisplayWithCenter:(_Bool)arg1;
- (void)stopVoiceTagAnimating;
- (void)showTags;
- (id)emojiShareImageWithoutCoverPic;
- (id)shareImage;
- (void)showPlayIcon:(_Bool)arg1;
- (void)statisticsPlayVideoIsStop:(_Bool)arg1;
- (void)statisticsCommodityPopView;
- (void)setupPlayFrom:(unsigned long long)arg1 fromId:(id)arg2;
- (void)setupPlayFrom:(unsigned long long)arg1 fromId:(id)arg2 displaySource:(unsigned long long)arg3;
- (void)updateLikeUIWithDoubleClick:(_Bool)arg1 animated:(_Bool)arg2;
- (void)updateLikeUIWithDoubleClick:(_Bool)arg1;
- (void)hideMediaRecommendViewIfNeed;
- (void)hideMediaRecommendViewIfNeedWithAnimated:(_Bool)arg1;
- (void)showRecommendIfNeedWithAnimated:(_Bool)arg1;
- (void)recommendMediaRequest;
- (void)recommendMediaRequestWithCount:(unsigned long long)arg1 completion:(CDUnknownBlockType)arg2;
- (void)configureMediaViewWithMediaDetail:(id)arg1 type:(unsigned long long)arg2;
- (void)configureMediaViewWithMediaDetail:(id)arg1 type:(unsigned long long)arg2 expand:(_Bool)arg3;
@property(readonly, nonatomic) _Bool needShowRecommendView;
- (void)resetForReuse;
- (void)restoreMediaViewWithDictionary:(id)arg1;
- (void)updateMediaViewBeforeRestoreWithMediaDetail:(id)arg1;
- (void)updateUserFollowGiftButtonState;
- (void)musicTopicButtonAction:(id)arg1;
- (void)followAction:(id)arg1;
- (void)actionSendGift:(id)arg1;
- (void)privacyButtonPressed:(id)arg1;
- (void)zoomButtonAction:(id)arg1;
- (void)moreButtonAction:(id)arg1;
- (void)replyButtonAction:(id)arg1;
- (void)likeButtonAction:(id)arg1;
- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;
- (void)awakeFromNib;
- (id)init;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

