//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

@class GPBMessage, KSYAudioReverb, NSData, NSOutputStream, NSString, TAGPBArray, TAGPBGeneratedMessage;

#pragma mark Function Pointers and Blocks

typedef void (*CDUnknownFunctionPointerType)(void); // return type and parameters are unknown

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct APTaskInfoData {
    unsigned char _field1[30];
};

struct AQRecorder {
    unsigned long long _field1;
    struct __CFString *_field2;
    struct OpaqueAudioQueue *_field3;
    struct AudioQueueBuffer *_field4[3];
    struct OpaqueAudioFileID *_field5;
    long long _field6;
    struct CAStreamBasicDescription _field7;
    unsigned char _field8;
};

struct ARSystem {
    int _field1;
    int _field2;
    struct Camera _field3;
    struct shared_ptr<ar::Frame> _field4;
    struct shared_ptr<ar::Frame> _field5;
    struct shared_ptr<ar::Frame> _field6;
    _Bool _field7;
    float _field8;
    float _field9;
    struct Mat {
        int _field1;
        int _field2;
        int _field3;
        int _field4;
        char *_field5;
        char *_field6;
        char *_field7;
        char *_field8;
        struct MatAllocator *_field9;
        struct UMatData *_field10;
        struct MatSize _field11;
        struct MatStep _field12;
    } _field10;
    struct Mat {
        int _field1;
        int _field2;
        int _field3;
        int _field4;
        char *_field5;
        char *_field6;
        char *_field7;
        char *_field8;
        struct MatAllocator *_field9;
        struct UMatData *_field10;
        struct MatSize _field11;
        struct MatStep _field12;
    } _field11;
    struct Mat {
        int _field1;
        int _field2;
        int _field3;
        int _field4;
        char *_field5;
        char *_field6;
        char *_field7;
        char *_field8;
        struct MatAllocator *_field9;
        struct UMatData *_field10;
        struct MatSize _field11;
        struct MatStep _field12;
    } _field12;
    struct Mat {
        int _field1;
        int _field2;
        int _field3;
        int _field4;
        char *_field5;
        char *_field6;
        char *_field7;
        char *_field8;
        struct MatAllocator *_field9;
        struct UMatData *_field10;
        struct MatSize _field11;
        struct MatStep _field12;
    } _field13;
    _Bool _field14;
    double _field15;
    double _field16;
    _Bool _field17;
};

struct AURenderCallbackStruct {
    CDUnknownFunctionPointerType inputProc;
    void *inputProcRefCon;
};

struct AVAudioCtrlProxy {
    CDUnknownFunctionPointerType *_field1;
    CDUnknownFunctionPointerType *_field2;
    struct CAsynCallProxy *_field3;
};

struct AVAudioEnableDelegate<AudioCallback> {
    CDUnknownFunctionPointerType *_field1;
    struct AVEnableCallbackSafeImpl<AudioCallback> *_field2;
};

struct AVAudioEnableDelegate<VideoCallback> {
    CDUnknownFunctionPointerType *_field1;
    struct AVEnableCallbackSafeImpl<VideoCallback> *_field2;
};

struct AVBasicRoomDeletateImp;

struct AVBufferRef;

struct AVCameraDeviceIOS {
    CDUnknownFunctionPointerType *_field1;
    CDUnknownFunctionPointerType *_field2;
    struct CAsynCallProxy *_field3;
    CDUnknownFunctionPointerType *_field4;
    int _field5;
    int _field6;
    int _field7;
    long long _field8;
    int _field9;
    int _field10;
    int _field11;
    int _field12;
    _Bool _field13;
    CDUnknownFunctionPointerType _field14;
    void *_field15;
    int _field16;
    int _field17;
};

struct AVChapter;

struct AVClass;

struct AVCodec {
    char *_field1;
    char *_field2;
    int _field3;
    int _field4;
    int _field5;
    struct AVRational *_field6;
    int *_field7;
    int *_field8;
    int *_field9;
    unsigned long long *_field10;
    unsigned char _field11;
    struct AVClass *_field12;
    struct AVProfile *_field13;
    int _field14;
    struct AVCodec *_field15;
    CDUnknownFunctionPointerType _field16;
    CDUnknownFunctionPointerType _field17;
    struct AVCodecDefault *_field18;
    CDUnknownFunctionPointerType _field19;
    CDUnknownFunctionPointerType _field20;
    CDUnknownFunctionPointerType _field21;
    CDUnknownFunctionPointerType _field22;
    CDUnknownFunctionPointerType _field23;
    CDUnknownFunctionPointerType _field24;
    CDUnknownFunctionPointerType _field25;
    int _field26;
};

struct AVCodecContext {
    struct AVClass *_field1;
    int _field2;
    int _field3;
    struct AVCodec *_field4;
    char _field5[32];
    int _field6;
    unsigned int _field7;
    unsigned int _field8;
    void *_field9;
    struct AVCodecInternal *_field10;
    void *_field11;
    long long _field12;
    int _field13;
    int _field14;
    int _field15;
    int _field16;
    int _field17;
    char *_field18;
    int _field19;
    struct AVRational _field20;
    int _field21;
    int _field22;
    int _field23;
    int _field24;
    int _field25;
    int _field26;
    int _field27;
    int _field28;
    int _field29;
    CDUnknownFunctionPointerType _field30;
    CDUnknownFunctionPointerType _field31;
    int _field32;
    float _field33;
    int _field34;
    int _field35;
    float _field36;
    int _field37;
    int _field38;
    float _field39;
    float _field40;
    float _field41;
    float _field42;
    float _field43;
    float _field44;
    float _field45;
    int _field46;
    int _field47;
    int *_field48;
    struct AVRational _field49;
    int _field50;
    int _field51;
    int _field52;
    int _field53;
    int _field54;
    int _field55;
    int _field56;
    int _field57;
    int _field58;
    int _field59;
    int _field60;
    int _field61;
    int _field62;
    int _field63;
    int _field64;
    int _field65;
    int _field66;
    unsigned short *_field67;
    unsigned short *_field68;
    int _field69;
    int _field70;
    int _field71;
    int _field72;
    int _field73;
    int _field74;
    int _field75;
    float _field76;
    int _field77;
    int _field78;
    int _field79;
    int _field80;
    int _field81;
    int _field82;
    int _field83;
    int _field84;
    int _field85;
    int _field86;
    int _field87;
    int _field88;
    int _field89;
    int _field90;
    int _field91;
    int _field92;
    int _field93;
    int _field94;
    int _field95;
    int _field96;
    int _field97;
    int _field98;
    int _field99;
    int _field100;
    int _field101;
    unsigned long long _field102;
    unsigned long long _field103;
    int _field104;
    int _field105;
    CDUnknownFunctionPointerType _field106;
    int _field107;
    float _field108;
    float _field109;
    int _field110;
    int _field111;
    int _field112;
    float _field113;
    float _field114;
    int _field115;
    int _field116;
    int _field117;
    struct RcOverride *_field118;
    char *_field119;
    long long _field120;
    long long _field121;
    float _field122;
    float _field123;
    float _field124;
    float _field125;
    int _field126;
    int _field127;
    int _field128;
    int _field129;
    int _field130;
    int _field131;
    int _field132;
    int _field133;
    int _field134;
    int _field135;
    int _field136;
    int _field137;
    int _field138;
    long long _field139;
    CDUnknownFunctionPointerType _field140;
    int _field141;
    int _field142;
    int _field143;
    int _field144;
    int _field145;
    int _field146;
    int _field147;
    int _field148;
    int _field149;
    int _field150;
    char *_field151;
    char *_field152;
    int _field153;
    int _field154;
    int _field155;
    int _field156;
    int _field157;
    int _field158;
    long long _field159;
    struct AVHWAccel *_field160;
    void *_field161;
    unsigned long long _field162[8];
    int _field163;
    int _field164;
    int _field165;
    int _field166;
    int _field167;
    struct AVFrame *_field168;
    int _field169;
    int _field170;
    int _field171;
    int _field172;
    CDUnknownFunctionPointerType _field173;
    CDUnknownFunctionPointerType _field174;
    int _field175;
    int _field176;
    int _field177;
    int _field178;
    int _field179;
    int _field180;
    char *_field181;
    int _field182;
    int _field183;
    unsigned long long _field184;
    int _field185;
    int _field186;
    struct AVRational _field187;
    int _field188;
    struct AVRational _field189;
    struct AVCodecDescriptor *_field190;
    long long _field191;
    long long _field192;
    long long _field193;
    long long _field194;
    char *_field195;
    int _field196;
    int _field197;
    int _field198;
    unsigned short *_field199;
    char *_field200;
    char *_field201;
    unsigned int _field202;
    struct AVPacketSideData *_field203;
    int _field204;
};

struct AVCodecDefault;

struct AVCodecDescriptor;

struct AVCodecInternal;

struct AVCodecParserContext;

struct AVContextProxy {
    CDUnknownFunctionPointerType *_field1;
    CDUnknownFunctionPointerType *_field2;
    struct CAsynCallProxy *_field3;
    struct CScopePtr<tencent::av::IAVCoreRoomMultiDelegate> _field4;
    struct AVCoreRoomMultiDelegatePtr<tencent::av::AVContextProxy> _field5;
    struct AVScopePtr<tencent::av::AVRoomProxy> _field6;
    struct AVAudioCtrlProxy _field7;
    struct AVVideoCtrlProxy _field8;
    struct AVCoreContext *_field9;
};

struct AVCoreContext;

struct AVCoreRoomMultiDelegate<tencent::av::AVContextProxy>;

struct AVCoreRoomMultiDelegatePtr<tencent::av::AVContextProxy> {
    struct AVCoreRoomMultiDelegate<tencent::av::AVContextProxy> *_field1;
};

struct AVDictionary;

struct AVEnableCallbackSafeImpl<AudioCallback>;

struct AVEnableCallbackSafeImpl<VideoCallback>;

struct AVEndpoint {
    CDUnknownFunctionPointerType *_field1;
};

struct AVFilter;

struct AVFilterCommand;

struct AVFilterContext {
    struct AVClass *_field1;
    struct AVFilter *_field2;
    char *_field3;
    struct AVFilterPad *_field4;
    struct AVFilterLink **_field5;
    unsigned int _field6;
    struct AVFilterPad *_field7;
    struct AVFilterLink **_field8;
    unsigned int _field9;
    void *_field10;
    struct AVFilterGraph *_field11;
    int _field12;
    struct AVFilterInternal *_field13;
    struct AVFilterCommand *_field14;
    char *_field15;
    void *_field16;
    double *_field17;
    int _field18;
};

struct AVFilterGraph {
    struct AVClass *_field1;
    struct AVFilterContext **_field2;
    unsigned int _field3;
    char *_field4;
    char *_field5;
    int _field6;
    int _field7;
    struct AVFilterGraphInternal *_field8;
    void *_field9;
    CDUnknownFunctionPointerType _field10;
    char *_field11;
    struct AVFilterLink **_field12;
    int _field13;
    unsigned int _field14;
};

struct AVFilterGraphInternal;

struct AVFilterInternal;

struct AVFilterLink;

struct AVFilterPad;

struct AVFormatContext {
    struct AVClass *_field1;
    struct AVInputFormat *_field2;
    struct AVOutputFormat *_field3;
    void *_field4;
    struct AVIOContext *_field5;
    int _field6;
    unsigned int _field7;
    struct AVStream **_field8;
    char _field9[1024];
    long long _field10;
    long long _field11;
    long long _field12;
    unsigned int _field13;
    int _field14;
    int _field15;
    long long _field16;
    long long _field17;
    char *_field18;
    int _field19;
    unsigned int _field20;
    struct AVProgram **_field21;
    int _field22;
    int _field23;
    int _field24;
    unsigned int _field25;
    unsigned int _field26;
    unsigned int _field27;
    struct AVChapter **_field28;
    struct AVDictionary *_field29;
    long long _field30;
    int _field31;
    int _field32;
    struct AVIOInterruptCB _field33;
    int _field34;
    long long _field35;
    int _field36;
    int _field37;
    int _field38;
    int _field39;
    int _field40;
    int _field41;
    int _field42;
    int _field43;
    int _field44;
    int _field45;
    int _field46;
    long long _field47;
    unsigned int _field48;
    int _field49;
    int _field50;
    int _field51;
    int _field52;
    char *_field53;
    char *_field54;
    struct AVFormatInternal *_field55;
    int _field56;
    struct AVCodec *_field57;
    struct AVCodec *_field58;
    struct AVCodec *_field59;
    struct AVCodec *_field60;
    int _field61;
    void *_field62;
    CDUnknownFunctionPointerType _field63;
    long long _field64;
    char *_field65;
    int _field66;
    CDUnknownFunctionPointerType _field67;
    int _field68;
    char *_field69;
    CDUnknownFunctionPointerType _field70;
    CDUnknownFunctionPointerType _field71;
};

struct AVFormatInternal;

struct AVFrac {
    long long _field1;
    long long _field2;
    long long _field3;
};

struct AVFrame {
    char *_field1[8];
    int _field2[8];
    char **_field3;
    int _field4;
    int _field5;
    int _field6;
    int _field7;
    int _field8;
    int _field9;
    struct AVRational _field10;
    long long _field11;
    long long _field12;
    long long _field13;
    int _field14;
    int _field15;
    int _field16;
    void *_field17;
    unsigned long long _field18[8];
    int _field19;
    int _field20;
    int _field21;
    int _field22;
    long long _field23;
    int _field24;
    unsigned long long _field25;
    struct AVBufferRef *_field26[8];
    struct AVBufferRef **_field27;
    int _field28;
    struct AVFrameSideData **_field29;
    int _field30;
    int _field31;
    int _field32;
    int _field33;
    int _field34;
    int _field35;
    int _field36;
    long long _field37;
    long long _field38;
    long long _field39;
    struct AVDictionary *_field40;
    int _field41;
    int _field42;
    int _field43;
    char *_field44;
    int _field45;
    int _field46;
    struct AVBufferRef *_field47;
    double _field48;
};

struct AVFrameRgbaTextureConverter {
    struct ShaderProgramPool *_field1;
    struct SwsContext *_field2;
    struct unique_ptr<AVFrame, void (*)(AVFrame *)> _field3;
    struct __CVOpenGLESTextureCache *_field4;
};

struct AVFrameSideData;

struct AVHWAccel;

struct AVHttpsClientIOS {
    CDUnknownFunctionPointerType *_field1;
    struct AVWeakRef *_field2;
    int _field3;
    CDUnknownFunctionPointerType *_field4;
    CDUnknownFunctionPointerType *_field5;
    struct CAsynCallProxy *_field6;
};

struct AVIOContext;

struct AVIOInterruptCB {
    CDUnknownFunctionPointerType _field1;
    void *_field2;
};

struct AVIndexEntry;

struct AVInputFormat;

struct AVMessage {
    int what;
    int arg1;
    int arg2;
    struct AVMessage *next;
};

struct AVOutputFormat;

struct AVPacket {
    struct AVBufferRef *_field1;
    long long _field2;
    long long _field3;
    char *_field4;
    int _field5;
    int _field6;
    int _field7;
    int _field8;
    struct AVPacketSideData *_field9;
    int _field10;
    long long _field11;
    long long _field12;
    long long _field13;
    int _field14;
    int _field15;
};

struct AVPacketList;

struct AVPacketSideData;

struct AVProbeData {
    char *_field1;
    char *_field2;
    int _field3;
    char *_field4;
};

struct AVProfile;

struct AVProgram;

struct AVRational {
    int _field1;
    int _field2;
};

struct AVRequestViewCallbackDelegate<tencent::av::AVRoomProxy>;

struct AVRoomExtendEduDelegateImp {
    CDUnknownFunctionPointerType *_field1;
    id _field2;
};

struct AVRoomProxy {
    CDUnknownFunctionPointerType *_field1;
    struct AVWeakRef *_field2;
    int _field3;
    CDUnknownFunctionPointerType *_field4;
    CDUnknownFunctionPointerType *_field5;
    struct CAsynCallProxy *_field6;
    struct AVScopePtr<tencent::av::AVRequestViewCallbackDelegate<tencent::av::AVRoomProxy>> _field7;
    struct AVScopePtr<tencent::av::CancelDelegate<tencent::av::AVRoomProxy>> _field8;
    struct AVScopePtr<tencent::av::ChangeAuthorityDelegate<tencent::av::AVRoomProxy>> _field9;
    struct AVScopePtr<tencent::av::ChangeRoleDelegate<tencent::av::AVRoomProxy>> _field10;
    struct AVScopePtr<tencent::av::ChangeRoleTotallyDelegate<tencent::av::AVRoomProxy>> _field11;
    CDUnknownFunctionPointerType _field12;
    void *_field13;
    CDUnknownFunctionPointerType _field14;
    void *_field15;
    CDUnknownFunctionPointerType _field16;
    void *_field17;
    CDUnknownFunctionPointerType _field18;
    void *_field19;
    CDUnknownFunctionPointerType _field20;
    void *_field21;
};

struct AVScopePtr<tencent::av::AVRequestViewCallbackDelegate<tencent::av::AVRoomProxy>> {
    struct AVRequestViewCallbackDelegate<tencent::av::AVRoomProxy> *_field1;
};

struct AVScopePtr<tencent::av::AVRoomProxy> {
    struct AVRoomProxy *_field1;
};

struct AVScopePtr<tencent::av::CancelDelegate<tencent::av::AVRoomProxy>> {
    struct CancelDelegate<tencent::av::AVRoomProxy> *_field1;
};

struct AVScopePtr<tencent::av::ChangeAuthorityDelegate<tencent::av::AVRoomProxy>> {
    struct ChangeAuthorityDelegate<tencent::av::AVRoomProxy> *_field1;
};

struct AVScopePtr<tencent::av::ChangeRoleDelegate<tencent::av::AVRoomProxy>> {
    struct ChangeRoleDelegate<tencent::av::AVRoomProxy> *_field1;
};

struct AVScopePtr<tencent::av::ChangeRoleTotallyDelegate<tencent::av::AVRoomProxy>> {
    struct ChangeRoleTotallyDelegate<tencent::av::AVRoomProxy> *_field1;
};

struct AVScopePtr<tencent::av::MultiVideoCsCmdCallback> {
    struct MultiVideoCsCmdCallback *_field1;
};

struct AVStream {
    int _field1;
    int _field2;
    struct AVCodecContext *_field3;
    void *_field4;
    struct AVFrac _field5;
    struct AVRational _field6;
    long long _field7;
    long long _field8;
    long long _field9;
    int _field10;
    int _field11;
    struct AVRational _field12;
    struct AVDictionary *_field13;
    struct AVRational _field14;
    struct AVPacket _field15;
    struct AVPacketSideData *_field16;
    int _field17;
    int _field18;
    CDStruct_183601bc *_field19;
    int _field20;
    long long _field21;
    long long _field22;
    long long _field23;
    int _field24;
    int _field25;
    int _field26;
    int _field27;
    struct AVCodecParserContext *_field28;
    struct AVPacketList *_field29;
    struct AVProbeData _field30;
    long long _field31[17];
    struct AVIndexEntry *_field32;
    int _field33;
    unsigned int _field34;
    struct AVRational _field35;
    int _field36;
    long long _field37;
    long long _field38;
    int _field39;
    int _field40;
    int _field41;
    long long _field42;
    long long _field43;
    long long _field44;
    int _field45;
    long long _field46;
    long long _field47;
    int _field48;
    int _field49;
    long long _field50[17];
    unsigned char _field51[17];
    long long _field52;
    unsigned char _field53;
    unsigned char _field54;
    int _field55;
    char *_field56;
    struct AVRational _field57;
    struct FFFrac *_field58;
    struct AVStreamInternal *_field59;
};

struct AVStreamInternal;

struct AVSwitchCallbackSafeImpl<VideoCallback>;

struct AVSwitchDelegate<VideoCallback> {
    CDUnknownFunctionPointerType *_field1;
    struct AVSwitchCallbackSafeImpl<VideoCallback> *_field2;
};

struct AVVideoCtrlProxy {
    CDUnknownFunctionPointerType *_field1;
    CDUnknownFunctionPointerType *_field2;
    struct CAsynCallProxy *_field3;
};

struct AVWeakRef;

struct AnimationInterfaceAbstract<CGE::TimeActionInterfaceAbstract>;

struct Arena;

struct ArenaStringPtr {
    basic_string_a490aa4c *_field1;
};

struct ArrayData {
    unsigned int _field1;
    unsigned int _field2;
    struct GenericValue<rapidjson::UTF8<char>, rapidjson::MemoryPoolAllocator<rapidjson::CrtAllocator>> *_field3;
};

struct AudioCallback {
    struct AVAudioEnableDelegate<AudioCallback> _field1;
    struct AVAudioEnableDelegate<AudioCallback> _field2;
    void *_field3;
};

struct AudioComponentDescription {
    unsigned int componentType;
    unsigned int componentSubType;
    unsigned int componentManufacturer;
    unsigned int componentFlags;
    unsigned int componentFlagsMask;
};

struct AudioFrame {
    basic_string_1cdf7af0 _field1;
    struct AudioFrameDesc _field2;
    unsigned int _field3;
    char *_field4;
    unsigned long long _field5;
};

struct AudioFrameDesc {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    int _field4;
};

struct AudioPlay;

struct AudioQueueBuffer {
    unsigned int _field1;
    void *_field2;
    unsigned int _field3;
    void *_field4;
    unsigned int _field5;
    struct AudioStreamPacketDescription *_field6;
    unsigned int _field7;
};

struct AudioSampleRingBuffer<unsigned char> {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    int _field3;
    int _field4;
    double _field5;
    _Bool _field6;
    int _field7;
    int _field8;
    struct unique_ptr<unsigned char [], std::__1::default_delete<unsigned char []>> _field9;
    struct unique_ptr<kuaishou::base::Pts [], std::__1::default_delete<kuaishou::base::Pts []>> _field10;
    struct mutex _field11;
    struct condition_variable _field12;
    struct condition_variable _field13;
};

struct AudioStreamBasicDescription {
    double mSampleRate;
    unsigned int mFormatID;
    unsigned int mFormatFlags;
    unsigned int mBytesPerPacket;
    unsigned int mFramesPerPacket;
    unsigned int mBytesPerFrame;
    unsigned int mChannelsPerFrame;
    unsigned int mBitsPerChannel;
    unsigned int mReserved;
};

struct AudioStreamPacketDescription;

struct AuidoDataCallback {
    CDUnknownFunctionPointerType *_field1;
    struct AVWeakRef *_field2;
    int _field3;
    void *_field4;
};

struct BandAOp;

struct BeautyFilterParam;

struct BindStateBase;

struct BlendMaskOp;

struct BlockingQueue<double> {
    CDUnknownFunctionPointerType *_field1;
    vector_3f7ffb82 _field2;
    struct mutex _field3;
    struct condition_variable _field4;
    struct condition_variable _field5;
    int _field6;
    _Bool _field7;
    struct function<double ()> _field8;
};

struct BlockingQueue<kuaishou::editorsdk2::ThumbnailJob> {
    CDUnknownFunctionPointerType *_field1;
    struct vector<kuaishou::editorsdk2::ThumbnailJob, std::__1::allocator<kuaishou::editorsdk2::ThumbnailJob>> _field2;
    struct mutex _field3;
    struct condition_variable _field4;
    struct condition_variable _field5;
    int _field6;
    _Bool _field7;
    struct function<kuaishou::editorsdk2::ThumbnailJob ()> _field8;
};

struct BlockingQueue<std::__1::unique_ptr<AVFrame, void (*)(AVFrame *)>> {
    CDUnknownFunctionPointerType *_field1;
    struct vector<std::__1::unique_ptr<AVFrame, void (*)(AVFrame *)>, std::__1::allocator<std::__1::unique_ptr<AVFrame, void (*)(AVFrame *)>>> _field2;
    struct mutex _field3;
    struct condition_variable _field4;
    struct condition_variable _field5;
    int _field6;
    _Bool _field7;
    struct function<std::__1::unique_ptr<AVFrame, void (*)(AVFrame *)>()> _field8;
};

struct BorderOp;

struct BufferData<float>;

struct CAStreamBasicDescription {
    double _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned int _field6;
    unsigned int _field7;
    unsigned int _field8;
    unsigned int _field9;
};

struct CATransform3D {
    double m11;
    double m12;
    double m13;
    double m14;
    double m21;
    double m22;
    double m23;
    double m24;
    double m31;
    double m32;
    double m33;
    double m34;
    double m41;
    double m42;
    double m43;
    double m44;
};

struct CAsynCallProxy;

struct CAudioDenoise {
    struct SpeexPreprocessState_ **_field1;
    int _field2;
    int _field3;
    int _field4;
    basic_string_a490aa4c _field5;
    struct RingBuf<false, false> _field6;
    struct RingBuf<false, false> _field7;
    struct unique_ptr<short [], std::__1::default_delete<short []>> _field8;
};

struct CBIBuffer {
    char *_field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
};

struct CGAffineTransform {
    double a;
    double b;
    double c;
    double d;
    double tx;
    double ty;
};

struct CGE2DParticleConfig;

struct CGE2DParticleFilter {
    struct CGE2DParticleConfig *_field1;
    double _field2;
    double _field3;
    double _field4;
    int _field5;
    int _field6;
    int _field7;
    struct FrameBuffer *_field8;
    struct FrameBuffer *_field9;
    struct FrameBuffer *_field10;
    unsigned int _field11;
    unsigned int _field12;
    unsigned int _field13;
    struct Vec<float, 3> *_field14;
    struct ProgramObject _field15;
    struct ProgramObject _field16;
    unsigned int _field17;
    unsigned int _field18;
    unsigned int _field19;
    CDStruct_6259bb0c _field20;
    CDStruct_6259bb0c _field21;
    struct map<int, unsigned int, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, unsigned int>>> _field22;
    int _field23;
    int _field24;
    int _field25;
    _Bool _field26;
    int _field27;
    int _field28;
    double _field29;
    double _field30;
    int _field31;
    int _field32;
    float _field33;
    Vec_190d90d4 _field34;
    int _field35;
    double _field36;
    _Bool _field37;
    struct Vec<float, 3> _field38;
    struct Vec<float, 3> _field39;
    struct Vec<float, 3> _field40;
    Vec_190d90d4 _field41;
    float _field42[4];
    float _field43[4];
    float _field44[4];
    int _field45;
    struct CGEHandGestureInfo _field46;
    Vec_190d90d4 _field47[4][101];
    struct CGEPose _field48;
    _Bool _field49;
    struct CGECacheManager *_field50;
};

struct CGECVBufferData {
    void *_field1;
    int _field2;
    int _field3;
    int _field4;
    int _field5;
};

struct CGECacheFilter {
    basic_string_a490aa4c _field1;
    basic_string_a490aa4c _field2;
    int _field3;
    float _field4;
    double _field5;
    _Bool _field6;
    int _field7;
    int _field8;
    struct TextureDrawer *_field9;
    struct FrameBuffer *_field10;
    struct list<CGETextureInfo, std::__1::allocator<CGETextureInfo>> _field11;
    basic_string_a490aa4c _field12;
    int _field13;
    _Bool _field14;
    struct CGECacheManager *_field15;
};

struct CGECacheManager {
    struct map<std::__1::basic_string<char>, CGE::CGECacheFilter *, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, CGE::CGECacheFilter *>>> _field1;
};

struct CGECommonDeformUtil {
    struct ProgramObject _field1;
    struct vector<float, std::__1::allocator<float>> _field2;
    struct vector<CGE::CGELiquidationUtil::LiquidationPath, std::__1::allocator<CGE::CGELiquidationUtil::LiquidationPath>> _field3;
    struct vector<CGE::CGELiquidationUtil::LiquidationPath, std::__1::allocator<CGE::CGELiquidationUtil::LiquidationPath>> _field4;
    struct vector<CGE::Vec<float, 2>, std::__1::allocator<CGE::Vec<float, 2>>> _field5;
    struct vector<CGE::Vec<float, 2>, std::__1::allocator<CGE::Vec<float, 2>>> _field6;
    int _field7;
    unsigned int _field8;
    unsigned int _field9;
    unsigned int _field10;
    Vec_190d90d4 _field11;
    int _field12;
    int _field13;
    int _field14;
    int _field15;
};

struct CGEFMConfig {
    int _field1;
    int _field2;
    basic_string_a490aa4c _field3;
    basic_string_a490aa4c _field4;
    basic_string_a490aa4c _field5;
};

struct CGEFMFilter {
    CDUnknownFunctionPointerType *_field1;
    CDUnknownFunctionPointerType *_field2;
    CDUnknownFunctionPointerType *_field3;
    CDUnknownFunctionPointerType *_field4;
    CDUnknownFunctionPointerType *_field5;
    CDUnknownFunctionPointerType *_field6;
    struct vector<CGE::CGEFMFilter::FBOState, std::__1::allocator<CGE::CGEFMFilter::FBOState>> _field7;
    struct CGEFMConfig _field8;
    struct CGECacheManager *_field9;
    float _field10;
    float _field11;
    _Bool _field12;
};

struct CGEFace {
    Vec_190d90d4 outline[19];
    Vec_190d90d4 leftBrow[10];
    Vec_190d90d4 rightBrow[10];
    Vec_190d90d4 leftEye[12];
    Vec_190d90d4 rightEye[12];
    Vec_190d90d4 nose[12];
    Vec_190d90d4 mouth[12];
    Vec_190d90d4 lip[8];
    Vec_190d90d4 leftPupil;
    Vec_190d90d4 rightPupil;
    Vec_190d90d4 noseBridge[4];
};

struct CGEFaceDeformFullData {
    Vec_190d90d4 _field1[130];
};

struct CGEFaceMagicInterface {
    CDUnknownFunctionPointerType *_field1;
    struct vector<CGE::CGEFaceMagicInterface::FaceData, std::__1::allocator<CGE::CGEFaceMagicInterface::FaceData>> _field2;
};

struct CGEFacePoseFilterInterface {
    CDUnknownFunctionPointerType *_field1;
    struct FacePoseData _field2;
};

struct CGEFaceSpecialDeformUtil {
    float _field1;
    float _field2;
    Vec_190d90d4 _field3;
    Vec_190d90d4 _field4;
    struct ProgramObject _field5;
    unsigned int _field6;
    unsigned int _field7;
    unsigned int _field8;
    int _field9;
    int _field10;
    struct vector<CGE::Vec<float, 2>, std::__1::allocator<CGE::Vec<float, 2>>> _field11;
};

struct CGEHandGestureInfo {
    int _field1;
    Vec_190d90d4 _field2;
    float _field3;
    float _field4;
    float _field5;
};

struct CGEImageFilterInterfaceAbstract {
    CDUnknownFunctionPointerType *_field1;
};

struct CGEImageHandler {
    CDUnknownFunctionPointerType *_field1;
    unsigned int _field2;
    struct CGESizei _field3;
    unsigned int _field4[2];
    unsigned int _field5;
    unsigned int _field6;
    _Bool _field7;
    struct vector<CGE::CGEImageFilterInterfaceAbstract *, std::__1::allocator<CGE::CGEImageFilterInterfaceAbstract *>> _field8;
    struct TextureDrawer *_field9;
    struct TextureDrawer *_field10;
};

struct CGEImageHandlerIOS {
    CDUnknownFunctionPointerType *_field1;
    unsigned int _field2;
    struct CGESizei _field3;
    unsigned int _field4[2];
    unsigned int _field5;
    unsigned int _field6;
    _Bool _field7;
    struct vector<CGE::CGEImageFilterInterfaceAbstract *, std::__1::allocator<CGE::CGEImageFilterInterfaceAbstract *>> _field8;
    struct TextureDrawer *_field9;
    struct TextureDrawer *_field10;
    char *_field11;
    int _field12;
    double _field13;
};

struct CGELerpBlurUtil {
    struct TextureCache _field1[8];
    unsigned int _field2;
    int _field3;
    int _field4;
    int _field5;
    _Bool _field6;
    struct ProgramObject _field7;
    struct FrameBuffer _field8;
};

struct CGELiquidationUtil {
    struct ProgramObject _field1;
    struct LiquidationPath _field2;
    unsigned int _field3;
    unsigned int _field4;
    int _field5;
    struct CGESizef _field6;
    int _field7;
    int _field8;
    int _field9;
    int _field10;
    int _field11;
    int _field12;
    int _field13;
    int _field14;
};

struct CGELuaFilter {
    struct lua_State *_field1;
    basic_string_a490aa4c _field2;
    basic_string_a490aa4c _field3;
    struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> _field4;
    _Bool _field5;
    struct TextureDrawer *_field6;
    struct CGECacheManager *_field7;
    _Bool _field8;
    _Bool _field9;
    int _field10;
    _Bool _field11;
    struct Vec<float, 3> _field12[4];
    struct BufferData<float> *_field13[4];
    struct BufferData<float> *_field14;
    struct GestureInfo _field15;
};

struct CGELuaSignalGenerator {
    struct lua_State *_field1;
    basic_string_a490aa4c _field2;
    basic_string_a490aa4c _field3;
};

struct CGEMakeupElements;

struct CGEMakeupFaceFeature;

struct CGEMakeupFilter {
    struct vector<CGE::CGEMakeupElements *, std::__1::allocator<CGE::CGEMakeupElements *>> _field1;
    struct vector<CGE::CGEMakeupFaceFeature, std::__1::allocator<CGE::CGEMakeupFaceFeature>> _field2;
    struct vector<CGE::CGEMakeupFaceFeature, std::__1::allocator<CGE::CGEMakeupFaceFeature>> _field3;
    struct TextureDrawer *_field4;
};

struct CGEMeshMappingBlendFilter_S {
    CDUnknownFunctionPointerType *_field1;
    unsigned int _field2;
    unsigned int _field3;
    struct ProgramObject _field4;
    unsigned int _field5;
    unsigned int _field6;
    unsigned int _field7;
    int _field8;
    int _field9;
    int _field10;
    int _field11;
    int _field12;
    struct CGELerpBlurUtil *_field13;
    unsigned int _field14;
    int _field15;
    int _field16;
    int _field17;
    int _field18;
    char *_field19;
    char *_field20;
};

struct CGEMeshMappingFilter_S {
    CDUnknownFunctionPointerType *_field1;
    unsigned int _field2;
    unsigned int _field3;
    struct ProgramObject _field4;
    unsigned int _field5;
    unsigned int _field6;
    unsigned int _field7;
    int _field8;
    int _field9;
    int _field10;
    int _field11;
    int _field12;
};

struct CGEPose {
    Vec_08cf5610 _field1[3];
    Vec_08cf5610 _field2[3];
    Vec_08cf5610 _field3;
    Vec_08cf5610 _field4;
    Vec_08cf5610 _field5[3];
    Vec_08cf5610 _field6[3];
};

struct CGEPose2D {
    Vec_190d90d4 _field1[3];
    Vec_190d90d4 _field2[3];
    Vec_190d90d4 _field3;
    Vec_190d90d4 _field4;
    Vec_190d90d4 _field5[3];
    Vec_190d90d4 _field6[3];
};

struct CGEPoseDanceInterface {
    CDUnknownFunctionPointerType *_field1;
};

struct CGEPoseFilterAbstract {
    CDUnknownFunctionPointerType *_field1;
    struct CGEPose _field2;
    struct CGEPose _field3;
    struct CGEPose2D _field4;
    struct CGEPose2D _field5;
    struct CGEPose2D _field6;
    struct CGEPose2D _field7;
    _Bool _field8;
    struct CGESizef _field9;
    unsigned int _field10;
    struct map<std::__1::basic_string<char>, CGE::SharedTexture, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, CGE::SharedTexture>>> _field11;
    struct time_point<std::__1::chrono::steady_clock, std::__1::chrono::duration<long long, std::__1::ratio<1, 1000000000>>> _field12;
    double _field13;
    double _field14;
    basic_string_a490aa4c _field15;
    basic_string_a490aa4c _field16;
    struct GenericDocument<rapidjson::UTF8<char>, rapidjson::MemoryPoolAllocator<rapidjson::CrtAllocator>, rapidjson::CrtAllocator> _field17;
};

struct CGERippleFilter {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    int _field5;
    unsigned int _field6;
    unsigned int _field7;
    unsigned int _field8;
    unsigned int _field9;
    unsigned int _field10;
    float _field11;
    float _field12;
    float _field13;
    float _field14;
    float *_field15;
    float *_field16;
    float *_field17;
    float *_field18;
    float *_field19;
    unsigned short *_field20;
    float _field21;
};

struct CGESizef {
    float _field1;
    float _field2;
};

struct CGESizei {
    int width;
    int height;
};

struct CGESubstitutionFilterInterface {
    CDUnknownFunctionPointerType *_field1;
};

struct CGETextureInfo {
    int width;
    int height;
    unsigned int name;
};

struct CGETriggerFilterInterface {
    CDUnknownFunctionPointerType *_field1;
};

struct CGEVideoHandlerCV {
    CDUnknownFunctionPointerType *_field1;
    unsigned int _field2;
    struct CGESizei _field3;
    unsigned int _field4[2];
    unsigned int _field5;
    unsigned int _field6;
    _Bool _field7;
    struct vector<CGE::CGEImageFilterInterfaceAbstract *, std::__1::allocator<CGE::CGEImageFilterInterfaceAbstract *>> _field8;
    struct TextureDrawer *_field9;
    struct TextureDrawer *_field10;
    struct __CVOpenGLESTextureCache *_field11;
    struct __CVBuffer *_field12;
    struct __CVBuffer *_field13;
    struct TextureDrawerYUV *_field14;
    _Bool _field15;
};

struct CGLProgram;

struct CGPUImageBaseFilter;

struct CGPUImageBlendFilter {
    CDUnknownFunctionPointerType *_vptr$CGPUImageBaseFilter;
    struct TaskQueue _runOnDrawTasks;
    struct CGPUImageProgram _program;
    struct vector<CGPUImage::RotationEx, std::__1::allocator<CGPUImage::RotationEx>> _rotationExList;
    basic_string_a490aa4c _vertexShader;
    basic_string_a490aa4c _fragmentShader;
    int mGLAttribPosition;
    int mGLUniformTexture;
    int mGLAttribTextureCoordinate;
    _Bool mIsInitialized;
    int _outputWidth;
    int _outputHeight;
    int _status;
    struct vector<CGPUImage::CGPUImageBaseFilter *, std::__1::allocator<CGPUImage::CGPUImageBaseFilter *>> _managesFilters;
    int _inputNumber;
    struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> _textureUniformNames;
    struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> _textureCoordinateAttributeNames;
    int *_filterTextureCoordinateAttribute;
    int *_filterInputTextureUniform;
    unsigned int *_filterSourceTexture;
    _Bool *_filterSourceTextureForDelete;
    struct RotationMatrix2_2x2 *_textureCoordinatesBuffer;
    float mix;
    _Bool _reloadProgram;
    int _mode;
    struct CGPUImageNInputFilter *_filter;
};

struct CGPUImageBrightnessFilter {
    CDUnknownFunctionPointerType *_vptr$CGPUImageBaseFilter;
    struct TaskQueue _runOnDrawTasks;
    struct CGPUImageProgram _program;
    struct vector<CGPUImage::RotationEx, std::__1::allocator<CGPUImage::RotationEx>> _rotationExList;
    basic_string_a490aa4c _vertexShader;
    basic_string_a490aa4c _fragmentShader;
    int mGLAttribPosition;
    int mGLUniformTexture;
    int mGLAttribTextureCoordinate;
    _Bool mIsInitialized;
    int _outputWidth;
    int _outputHeight;
    int _status;
    struct vector<CGPUImage::CGPUImageBaseFilter *, std::__1::allocator<CGPUImage::CGPUImageBaseFilter *>> _managesFilters;
    int _inputNumber;
    struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> _textureUniformNames;
    struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> _textureCoordinateAttributeNames;
    int *_filterTextureCoordinateAttribute;
    int *_filterInputTextureUniform;
    unsigned int *_filterSourceTexture;
    _Bool *_filterSourceTextureForDelete;
    struct RotationMatrix2_2x2 *_textureCoordinatesBuffer;
    float brightness;
    unsigned int brightnessUniform;
};

struct CGPUImageDrawer {
    CDUnknownFunctionPointerType *_vptr$CGPUImageBaseFilter;
    struct TaskQueue _runOnDrawTasks;
    struct CGPUImageProgram _program;
    struct vector<CGPUImage::RotationEx, std::__1::allocator<CGPUImage::RotationEx>> _rotationExList;
    basic_string_a490aa4c _vertexShader;
    basic_string_a490aa4c _fragmentShader;
    int mGLAttribPosition;
    int mGLUniformTexture;
    int mGLAttribTextureCoordinate;
    _Bool mIsInitialized;
    int _outputWidth;
    int _outputHeight;
    int _status;
    struct vector<CGPUImage::CGPUImageBaseFilter *, std::__1::allocator<CGPUImage::CGPUImageBaseFilter *>> _managesFilters;
    int _inputNumber;
    struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> _textureUniformNames;
    struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> _textureCoordinateAttributeNames;
    int *_filterTextureCoordinateAttribute;
    int *_filterInputTextureUniform;
    unsigned int *_filterSourceTexture;
    _Bool *_filterSourceTextureForDelete;
    struct RotationMatrix2_2x2 *_textureCoordinatesBuffer;
};

struct CGPUImageFramebuffer;

struct CGPUImageGaussianBlurFilter {
    CDUnknownFunctionPointerType *_vptr$CGPUImageBaseFilter;
    struct TaskQueue _runOnDrawTasks;
    struct CGPUImageProgram _program;
    struct vector<CGPUImage::RotationEx, std::__1::allocator<CGPUImage::RotationEx>> _rotationExList;
    basic_string_a490aa4c _vertexShader;
    basic_string_a490aa4c _fragmentShader;
    int mGLAttribPosition;
    int mGLUniformTexture;
    int mGLAttribTextureCoordinate;
    _Bool mIsInitialized;
    int _outputWidth;
    int _outputHeight;
    int _status;
    struct vector<CGPUImage::CGPUImageBaseFilter *, std::__1::allocator<CGPUImage::CGPUImageBaseFilter *>> _managesFilters;
    int _inputNumber;
    struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> _textureUniformNames;
    struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> _textureCoordinateAttributeNames;
    int *_filterTextureCoordinateAttribute;
    int *_filterInputTextureUniform;
    unsigned int *_filterSourceTexture;
    _Bool *_filterSourceTextureForDelete;
    struct RotationMatrix2_2x2 *_textureCoordinatesBuffer;
    struct vector<CGPUImage::CGPUImageNInputFilter *, std::__1::allocator<CGPUImage::CGPUImageNInputFilter *>> _filters;
    struct map<const CGPUImage::CGPUImageNInputFilter *, CGPUImage::CGPUImageFilterGroup::FilterInfo, std::__1::less<const CGPUImage::CGPUImageNInputFilter *>, std::__1::allocator<std::__1::pair<const CGPUImage::CGPUImageNInputFilter *const, CGPUImage::CGPUImageFilterGroup::FilterInfo>>> _filterInfos;
    struct vector<CGPUImage::CGPUImageFramebuffer *, std::__1::allocator<CGPUImage::CGPUImageFramebuffer *>> _frameBuffers;
    _Bool _needRefreshFramebuffers;
    struct CGPUImageNInputFilter _rotationFilter;
    struct CGPUImageNInputFilter _horizontalFilter;
    struct CGPUImageNInputFilter _verticalFilter;
    float blurSize;
};

struct CGPUImageLookupFilter {
    CDUnknownFunctionPointerType *_vptr$CGPUImageBaseFilter;
    struct TaskQueue _runOnDrawTasks;
    struct CGPUImageProgram _program;
    struct vector<CGPUImage::RotationEx, std::__1::allocator<CGPUImage::RotationEx>> _rotationExList;
    basic_string_a490aa4c _vertexShader;
    basic_string_a490aa4c _fragmentShader;
    int mGLAttribPosition;
    int mGLUniformTexture;
    int mGLAttribTextureCoordinate;
    _Bool mIsInitialized;
    int _outputWidth;
    int _outputHeight;
    int _status;
    struct vector<CGPUImage::CGPUImageBaseFilter *, std::__1::allocator<CGPUImage::CGPUImageBaseFilter *>> _managesFilters;
    int _inputNumber;
    struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> _textureUniformNames;
    struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> _textureCoordinateAttributeNames;
    int *_filterTextureCoordinateAttribute;
    int *_filterInputTextureUniform;
    unsigned int *_filterSourceTexture;
    _Bool *_filterSourceTextureForDelete;
    struct RotationMatrix2_2x2 *_textureCoordinatesBuffer;
    float intensity;
};

struct CGPUImageMeshRenderer {
    CDUnknownFunctionPointerType *_vptr$CGPUImageBaseFilter;
    struct TaskQueue _runOnDrawTasks;
    struct CGPUImageProgram _program;
    struct vector<CGPUImage::RotationEx, std::__1::allocator<CGPUImage::RotationEx>> _rotationExList;
    basic_string_a490aa4c _vertexShader;
    basic_string_a490aa4c _fragmentShader;
    int mGLAttribPosition;
    int mGLUniformTexture;
    int mGLAttribTextureCoordinate;
    _Bool mIsInitialized;
    int _outputWidth;
    int _outputHeight;
    int _status;
    struct vector<CGPUImage::CGPUImageBaseFilter *, std::__1::allocator<CGPUImage::CGPUImageBaseFilter *>> _managesFilters;
    int _inputNumber;
    struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> _textureUniformNames;
    struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> _textureCoordinateAttributeNames;
    int *_filterTextureCoordinateAttribute;
    int *_filterInputTextureUniform;
    unsigned int *_filterSourceTexture;
    _Bool *_filterSourceTextureForDelete;
    struct RotationMatrix2_2x2 *_textureCoordinatesBuffer;
    struct mutex _m;
    struct function<void ()> _updateRenderDataCallback;
    _Bool _allowGrouping;
    _Bool _renderDataSetted;
    struct CGPUImageRenderData _renderData;
    struct Mesh *_mesh;
    struct vector<unsigned short, std::__1::allocator<unsigned short>> _indexBuffer;
    unsigned int mMeshBufferIndex;
    unsigned int mTextureBufferIndex;
    unsigned int mIndexBufferIndex;
    struct vector<float, std::__1::allocator<float>> mTexBufferForLastDraw;
    struct vector<CGPUImage::CGPUImageMeshRenderer::RenderTexture, std::__1::allocator<CGPUImage::CGPUImageMeshRenderer::RenderTexture>> _textures;
};

struct CGPUImageNInputFilter {
    CDUnknownFunctionPointerType *_vptr$CGPUImageBaseFilter;
    struct TaskQueue _runOnDrawTasks;
    struct CGPUImageProgram _program;
    struct vector<CGPUImage::RotationEx, std::__1::allocator<CGPUImage::RotationEx>> _rotationExList;
    basic_string_a490aa4c _vertexShader;
    basic_string_a490aa4c _fragmentShader;
    int mGLAttribPosition;
    int mGLUniformTexture;
    int mGLAttribTextureCoordinate;
    _Bool mIsInitialized;
    int _outputWidth;
    int _outputHeight;
    int _status;
    struct vector<CGPUImage::CGPUImageBaseFilter *, std::__1::allocator<CGPUImage::CGPUImageBaseFilter *>> _managesFilters;
    int _inputNumber;
    struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> _textureUniformNames;
    struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> _textureCoordinateAttributeNames;
    int *_filterTextureCoordinateAttribute;
    int *_filterInputTextureUniform;
    unsigned int *_filterSourceTexture;
    _Bool *_filterSourceTextureForDelete;
    struct RotationMatrix2_2x2 *_textureCoordinatesBuffer;
};

struct CGPUImageProgram {
    struct map<std::__1::basic_string<char>, int *, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, int *>>> _attributeBindMap;
    struct map<std::__1::basic_string<char>, int *, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, int *>>> _uniformBindMap;
    struct TaskQueue _setParamTasks;
    struct CGLProgram *_program;
};

struct CGPUImageRenderData {
    CDUnknownFunctionPointerType *_vptr$CGPUImageRenderData;
    struct function<CGPUImage::Mesh *()> _meshCallback;
    struct function<std::__1::vector<CGPUImage::CGPUImageRenderTexture, std::__1::allocator<CGPUImage::CGPUImageRenderTexture>>()> _textureCallback;
    struct function<bool ()> _isDynamicMakeupTextureCallback;
};

struct CGPUImageTest2Filter {
    CDUnknownFunctionPointerType *_vptr$CGPUImageBaseFilter;
    struct TaskQueue _runOnDrawTasks;
    struct CGPUImageProgram _program;
    struct vector<CGPUImage::RotationEx, std::__1::allocator<CGPUImage::RotationEx>> _rotationExList;
    basic_string_a490aa4c _vertexShader;
    basic_string_a490aa4c _fragmentShader;
    int mGLAttribPosition;
    int mGLUniformTexture;
    int mGLAttribTextureCoordinate;
    _Bool mIsInitialized;
    int _outputWidth;
    int _outputHeight;
    int _status;
    struct vector<CGPUImage::CGPUImageBaseFilter *, std::__1::allocator<CGPUImage::CGPUImageBaseFilter *>> _managesFilters;
    int _inputNumber;
    struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> _textureUniformNames;
    struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> _textureCoordinateAttributeNames;
    int *_filterTextureCoordinateAttribute;
    int *_filterInputTextureUniform;
    unsigned int *_filterSourceTexture;
    _Bool *_filterSourceTextureForDelete;
    struct RotationMatrix2_2x2 *_textureCoordinatesBuffer;
    struct vector<CGPUImage::CGPUImageNInputFilter *, std::__1::allocator<CGPUImage::CGPUImageNInputFilter *>> _filters;
    struct map<const CGPUImage::CGPUImageNInputFilter *, CGPUImage::CGPUImageFilterGroup::FilterInfo, std::__1::less<const CGPUImage::CGPUImageNInputFilter *>, std::__1::allocator<std::__1::pair<const CGPUImage::CGPUImageNInputFilter *const, CGPUImage::CGPUImageFilterGroup::FilterInfo>>> _filterInfos;
    struct vector<CGPUImage::CGPUImageFramebuffer *, std::__1::allocator<CGPUImage::CGPUImageFramebuffer *>> _frameBuffers;
    _Bool _needRefreshFramebuffers;
    struct CGPUImageNInputFilter _filter;
};

struct CGPUImageTexture {
    CDUnknownFunctionPointerType *_vptr$CGPUImageBaseFilter;
    struct TaskQueue _runOnDrawTasks;
    struct CGPUImageProgram _program;
    struct vector<CGPUImage::RotationEx, std::__1::allocator<CGPUImage::RotationEx>> _rotationExList;
    basic_string_a490aa4c _vertexShader;
    basic_string_a490aa4c _fragmentShader;
    int mGLAttribPosition;
    int mGLUniformTexture;
    int mGLAttribTextureCoordinate;
    _Bool mIsInitialized;
    int _outputWidth;
    int _outputHeight;
    int _status;
    struct vector<CGPUImage::CGPUImageBaseFilter *, std::__1::allocator<CGPUImage::CGPUImageBaseFilter *>> _managesFilters;
    int _inputNumber;
    struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> _textureUniformNames;
    struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> _textureCoordinateAttributeNames;
    int *_filterTextureCoordinateAttribute;
    int *_filterInputTextureUniform;
    unsigned int *_filterSourceTexture;
    _Bool *_filterSourceTextureForDelete;
    struct RotationMatrix2_2x2 *_textureCoordinatesBuffer;
    struct Image _image;
    struct Data _data;
    void *_pixels;
    int _width;
    int _height;
    struct CGPUTextureOptions _textureOptions;
    struct CGPUImageFramebuffer *_framebuffer;
};

struct CGPUImageUnsharpMaskFilter {
    CDUnknownFunctionPointerType *_vptr$CGPUImageBaseFilter;
    struct TaskQueue _runOnDrawTasks;
    struct CGPUImageProgram _program;
    struct vector<CGPUImage::RotationEx, std::__1::allocator<CGPUImage::RotationEx>> _rotationExList;
    basic_string_a490aa4c _vertexShader;
    basic_string_a490aa4c _fragmentShader;
    int mGLAttribPosition;
    int mGLUniformTexture;
    int mGLAttribTextureCoordinate;
    _Bool mIsInitialized;
    int _outputWidth;
    int _outputHeight;
    int _status;
    struct vector<CGPUImage::CGPUImageBaseFilter *, std::__1::allocator<CGPUImage::CGPUImageBaseFilter *>> _managesFilters;
    int _inputNumber;
    struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> _textureUniformNames;
    struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> _textureCoordinateAttributeNames;
    int *_filterTextureCoordinateAttribute;
    int *_filterInputTextureUniform;
    unsigned int *_filterSourceTexture;
    _Bool *_filterSourceTextureForDelete;
    struct RotationMatrix2_2x2 *_textureCoordinatesBuffer;
    struct vector<CGPUImage::CGPUImageNInputFilter *, std::__1::allocator<CGPUImage::CGPUImageNInputFilter *>> _filters;
    struct map<const CGPUImage::CGPUImageNInputFilter *, CGPUImage::CGPUImageFilterGroup::FilterInfo, std::__1::less<const CGPUImage::CGPUImageNInputFilter *>, std::__1::allocator<std::__1::pair<const CGPUImage::CGPUImageNInputFilter *const, CGPUImage::CGPUImageFilterGroup::FilterInfo>>> _filterInfos;
    struct vector<CGPUImage::CGPUImageFramebuffer *, std::__1::allocator<CGPUImage::CGPUImageFramebuffer *>> _frameBuffers;
    _Bool _needRefreshFramebuffers;
    float blurRadiusInPixels;
    float intensity;
    struct CGPUImageGaussianBlurFilter _blurFilter;
    struct CGPUImageNInputFilter _unsharpMaskFilter;
};

struct CGPUTextureOptions {
    unsigned int minFilter;
    unsigned int magFilter;
    unsigned int wrapS;
    unsigned int wrapT;
    unsigned int internalFormat;
    unsigned int format;
    unsigned int type;
};

struct CGPoint {
    double x;
    double y;
};

struct CGRect {
    struct CGPoint origin;
    struct CGSize size;
};

struct CGSize {
    double width;
    double height;
};

struct CKSAssetRenderRange {
    long long _field1;
    int _field2;
    int _field3;
};

struct CKSCNNModeInfo;

struct CKSEffectRange;

struct CKSForUIOper {
    struct KSAProject _field1;
    struct KSAPlayInfo _field2;
    _Bool _field3;
    _Bool _field4;
    struct _opaque_pthread_mutex_t _field5;
    struct _opaque_pthread_mutex_t _field6;
};

struct CKSHandGestureDetect;

struct CKSHumanPoseDetect;

struct CKSMPSRender;

struct CKSModelBase;

struct CKSProject;

struct CKSTimeAverage {
    vector_3f7ffb82 m_Data;
    int m_MaxNum;
    long long mIndex;
};

struct CKSTimeRange {
    double _field1;
    double _field2;
};

struct CKSTimeShow {
    double m_t0;
    int m_times;
    int m_count;
    basic_string_a490aa4c m_strHead;
    basic_string_a490aa4c m_strEnd;
    struct CKSTimeAverage m_average;
};

struct CKSVideoDecodeLegacy {
    int _field1;
    double _field2;
    struct AVRational _field3;
    double _field4;
    int _field5;
    int _field6;
    float _field7;
    int _field8;
    int _field9;
    int _field10;
    basic_string_a490aa4c _field11;
    struct AVFormatContext *_field12;
    int _field13;
    struct AVCodecContext *_field14;
    struct AVStream *_field15;
    struct AVCodec *_field16;
    struct SwsContext *_field17;
    struct AVFrame *_field18;
    struct AVFrame *_field19;
    char *_field20;
    int _field21;
    long long _field22;
    long long _field23;
    int _field24;
    double _field25;
    int _field26;
};

struct CKSYUVConvert {
    CDUnknownFunctionPointerType *_field1;
    struct vector<unsigned char, std::__1::allocator<unsigned char>> _field2;
    struct vector<unsigned char, std::__1::allocator<unsigned char>> _field3;
    struct vector<unsigned char, std::__1::allocator<unsigned char>> _field4;
    struct vector<unsigned char, std::__1::allocator<unsigned char>> _field5;
    struct vector<unsigned char, std::__1::allocator<unsigned char>> _field6;
    struct vector<unsigned char, std::__1::allocator<unsigned char>> _field7;
    struct vector<unsigned char, std::__1::allocator<unsigned char>> _field8;
    struct vector<unsigned char, std::__1::allocator<unsigned char>> _field9;
    int _field10;
    int _field11;
    int _field12;
    _Bool _field13;
    int _field14;
    char *_field15;
    struct CKSTimeShow _field16;
    struct CKSTimeShow _field17;
};

struct CLLocationCoordinate2D {
    double _field1;
    double _field2;
};

struct CLSMachOFile {
    int fd;
    unsigned long long mappedSize;
    void *mappedFile;
};

struct CLSMachOSlice {
    void *startAddress;
    int cputype;
    int cpusubtype;
};

struct CNNContext {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    struct CKSCNNModeInfo *_field3;
    struct MemoryAccessor *_field4;
    struct OpFactory *_field5;
    struct DataCache *_field6;
};

struct CScopePtr<AVBasicRoomDeletateImp> {
    struct AVBasicRoomDeletateImp *p;
};

struct CScopePtr<AVHttpsClientIOS> {
    struct AVHttpsClientIOS *p;
};

struct CScopePtr<tag_st_obj> {
    struct tag_st_obj *_field1;
};

struct CScopePtr<tencent::av::IAVCoreRoomMultiDelegate> {
    struct IAVCoreRoomMultiDelegate *_field1;
};

struct Callback<void ()> {
    struct scoped_refptr<QAVBase::internal::BindStateBase> _field1;
    CDUnknownFunctionPointerType _field2;
};

struct Camera {
    int _field1;
    float _field2;
    float _field3;
    float _field4;
    float _field5;
    float _field6;
    float _field7;
    float _field8;
    float _field9;
    float _field10;
    float _field11;
    float _field12;
    int _field13;
    int _field14;
    struct Mat {
        int _field1;
        int _field2;
        int _field3;
        int _field4;
        char *_field5;
        char *_field6;
        char *_field7;
        char *_field8;
        struct MatAllocator *_field9;
        struct UMatData *_field10;
        struct MatSize _field11;
        struct MatStep _field12;
    } _field15;
    struct Mat {
        int _field1;
        int _field2;
        int _field3;
        int _field4;
        char *_field5;
        char *_field6;
        char *_field7;
        char *_field8;
        struct MatAllocator *_field9;
        struct UMatData *_field10;
        struct MatSize _field11;
        struct MatStep _field12;
    } _field16;
    int _field17;
    int _field18;
    int _field19;
    int _field20;
};

struct CancelDelegate<tencent::av::AVRoomProxy>;

struct ChangeAuthorityDelegate<tencent::av::AVRoomProxy>;

struct ChangeRoleDelegate<tencent::av::AVRoomProxy>;

struct ChangeRoleTotallyDelegate<tencent::av::AVRoomProxy>;

struct ColorFilterParam {
    CDUnknownFunctionPointerType *_field1;
    struct ArenaStringPtr _field2;
    struct Arena *_field3;
    _Bool _field4;
    double _field5;
    unsigned long long _field6;
    struct RepeatedPtrField<std::__1::basic_string<char>> _field7;
    int _field8;
    int _field9;
};

struct CopyMesh {
    struct function<std::__1::vector<float, std::__1::allocator<float>>()> _positionBufferCallback;
    struct function<std::__1::vector<float, std::__1::allocator<float>>()> _textureCoordinateBufferCallback;
    struct function<std::__1::vector<int, std::__1::allocator<int>>()> _indexesCallback;
    struct vector<float, std::__1::allocator<float>> _positionBuffer;
    struct vector<float, std::__1::allocator<float>> _textureCoordinateBuffer;
    struct vector<int, std::__1::allocator<int>> _indexes;
};

struct CropOp;

struct CrtAllocator;

struct Data {
    void *_buffer;
    unsigned long long _length;
};

struct DataCache;

struct DecodePositionChangeRequest;

struct DelayStat_t {
    long long period_last_calc_time;
    int period_sum;
    int period_count;
    int period_avg;
    long long total_last_calc_time;
    long long total_sum;
    int total_count;
    int total_avg;
    int distributed_duration[6];
};

struct DepthProc {
    char *_field1;
    long long _field2;
    long long _field3;
    float _field4;
    long long _field5;
    int _field6;
    int _field7;
    struct vector<depthInfor, std::__1::allocator<depthInfor>> _field8;
};

struct DilationOp;

struct EditorSdkError {
    CDUnknownFunctionPointerType *_field1;
    struct ArenaStringPtr _field2;
    struct Arena *_field3;
    _Bool _field4;
    struct ArenaStringPtr _field5;
    int _field6;
    int _field7;
    int _field8;
};

struct EncoderAdapter {
    float _field1;
    float _field2;
    float _field3;
    int _field4;
    int _field5;
    int _field6;
    int _field7;
    int _field8;
    struct X264Opts **_field9;
    char *_field10;
    int _field11;
    int _field12;
    int _field13;
    float _field14;
    long long _field15;
    struct _opaque_pthread_mutex_t _field16;
};

struct ErosionOp;

struct ExpansionInfo {
    unsigned short _field1;
    id _field2;
    _Bool _field3;
    id _field4;
};

struct ExportOptions {
    CDUnknownFunctionPointerType *_field1;
    struct ArenaStringPtr _field2;
    struct Arena *_field3;
    _Bool _field4;
    int _field5;
    int _field6;
    long long _field7;
    int _field8;
    int _field9;
    struct ArenaStringPtr _field10;
    struct ArenaStringPtr _field11;
    struct Rational *_field12;
    long long _field13;
    int _field14;
    int _field15;
    unsigned long long _field16;
    struct ArenaStringPtr _field17;
    int _field18;
    int _field19;
};

struct FBOState;

struct FBSDKLikeControlLayout {
    struct CGSize _field1;
    struct CGRect _field2;
    struct CGRect _field3;
};

struct FFFrac;

struct FMAnimation2dSprite;

struct FMAnimationSpriteWrapper {
    struct FMAnimation2dSprite *_field1;
    struct vector<int, std::__1::allocator<int>> _field2;
    struct vector<int, std::__1::allocator<int>> _field3;
    float _field4;
    float _field5;
    float _field6;
    int _field7;
    int _field8;
    _Bool _field9;
    int _field10;
    _Bool _field11;
};

struct FMFaceSpriteCorePoint {
    Vec_190d90d4 points[2];
    struct Vec<int, 2> anchor;
    int maskIndex;
    float radius;
};

struct FMFaceSpriteMaskData;

struct FMHairClipFilterTexture;

struct FOSkinSmootherFilter {
    CDUnknownFunctionPointerType *_vptr$CGPUImageBaseFilter;
    struct TaskQueue _runOnDrawTasks;
    struct CGPUImageProgram _program;
    struct vector<CGPUImage::RotationEx, std::__1::allocator<CGPUImage::RotationEx>> _rotationExList;
    basic_string_a490aa4c _vertexShader;
    basic_string_a490aa4c _fragmentShader;
    int mGLAttribPosition;
    int mGLUniformTexture;
    int mGLAttribTextureCoordinate;
    _Bool mIsInitialized;
    int _outputWidth;
    int _outputHeight;
    int _status;
    struct vector<CGPUImage::CGPUImageBaseFilter *, std::__1::allocator<CGPUImage::CGPUImageBaseFilter *>> _managesFilters;
    int _inputNumber;
    struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> _textureUniformNames;
    struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> _textureCoordinateAttributeNames;
    int *_filterTextureCoordinateAttribute;
    int *_filterInputTextureUniform;
    unsigned int *_filterSourceTexture;
    _Bool *_filterSourceTextureForDelete;
    struct RotationMatrix2_2x2 *_textureCoordinatesBuffer;
    struct vector<CGPUImage::CGPUImageNInputFilter *, std::__1::allocator<CGPUImage::CGPUImageNInputFilter *>> _filters;
    struct map<const CGPUImage::CGPUImageNInputFilter *, CGPUImage::CGPUImageFilterGroup::FilterInfo, std::__1::less<const CGPUImage::CGPUImageNInputFilter *>, std::__1::allocator<std::__1::pair<const CGPUImage::CGPUImageNInputFilter *const, CGPUImage::CGPUImageFilterGroup::FilterInfo>>> _filterInfos;
    struct vector<CGPUImage::CGPUImageFramebuffer *, std::__1::allocator<CGPUImage::CGPUImageFramebuffer *>> _frameBuffers;
    _Bool _needRefreshFramebuffers;
    float distanceNormalizationFactor;
    float texelSpacingMultiplier;
    float filterOpacity;
    struct SmallBilateralFilter _bilateralFilter;
    struct MixFilter _mixFilter;
};

struct FaceData;

struct FaceMesh;

struct FacePoints {
    struct map<int, CGPUImage::__tag_pointf, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, CGPUImage::__tag_pointf>>> _map;
    struct Property _property;
};

struct FacePoseData {
    Vec_190d90d4 _field1;
    float _field2;
    float _field3;
    float _field4;
    float _field5;
    float _field6;
    float _field7;
    float _field8;
};

struct Feature;

struct Flag {
    char _field1[22];
    unsigned short _field2;
};

struct Frame;

struct FrameBuffer {
    unsigned int _field1;
};

struct FrameTexture {
    basic_string_a490aa4c _field1;
    unsigned int _field2;
    int _field3;
    int _field4;
    int _field5;
    int _field6;
    int _field7;
};

struct GAIReachabilityApi {
    CDUnknownFunctionPointerType _field1;
    CDUnknownFunctionPointerType _field2;
    CDUnknownFunctionPointerType _field3;
    CDUnknownFunctionPointerType _field4;
    CDUnknownFunctionPointerType _field5;
};

struct GLMatrix {
    float _field1[16];
};

struct GPBCodedInputStreamState {
    char *bytes;
    unsigned long long bufferSize;
    unsigned long long bufferPos;
    unsigned long long currentLimit;
    int lastTag;
    unsigned long long recursionDepth;
};

struct GPBExtensionDescription {
    CDUnion_88782d86 _field1;
    char *_field2;
    char *_field3;
    char *_field4;
    CDUnknownFunctionPointerType _field5;
    int _field6;
    unsigned char _field7;
    unsigned char _field8;
};

struct GPBExtensionRange {
    unsigned int _field1;
    unsigned int _field2;
};

struct GPBMessageFieldDescription {
    char *_field1;
    union {
        char *_field1;
        CDUnknownFunctionPointerType _field2;
        CDUnknownFunctionPointerType _field3;
    } _field2;
    unsigned int _field3;
    int _field4;
    unsigned int _field5;
    unsigned short _field6;
    unsigned char _field7;
};

struct GPBMessage_Storage {
    unsigned int _field1[0];
};

struct GPBOutputBufferState {
    char *bytes;
    unsigned long long size;
    unsigned long long position;
    NSOutputStream *output;
};

struct GPUByteColorVector {
    unsigned char _field1;
    unsigned char _field2;
    unsigned char _field3;
    unsigned char _field4;
};

struct GPUMatrix3x3 {
    struct GPUVector3 one;
    struct GPUVector3 two;
    struct GPUVector3 three;
};

struct GPUMatrix4x4 {
    struct GPUVector4 one;
    struct GPUVector4 two;
    struct GPUVector4 three;
    struct GPUVector4 four;
};

struct GPUTextureOptions {
    unsigned int minFilter;
    unsigned int magFilter;
    unsigned int wrapS;
    unsigned int wrapT;
    unsigned int internalFormat;
    unsigned int format;
    unsigned int type;
};

struct GPUVector3 {
    float one;
    float two;
    float three;
};

struct GPUVector4 {
    float one;
    float two;
    float three;
    float four;
};

struct GaussianOp;

struct GenericDocument<rapidjson::UTF8<char>, rapidjson::MemoryPoolAllocator<rapidjson::CrtAllocator>, rapidjson::CrtAllocator> {
    union Data _field1;
    struct MemoryPoolAllocator<rapidjson::CrtAllocator> *_field2;
    struct MemoryPoolAllocator<rapidjson::CrtAllocator> *_field3;
    struct Stack<rapidjson::CrtAllocator> _field4;
    struct ParseResult _field5;
};

struct GenericMember<rapidjson::UTF8<char>, rapidjson::MemoryPoolAllocator<rapidjson::CrtAllocator>>;

struct GenericValue<rapidjson::UTF8<char>, rapidjson::MemoryPoolAllocator<rapidjson::CrtAllocator>>;

struct GestureInfo {
    float _field1;
    float _field2[2];
    float _field3;
    float _field4;
    float _field5;
    float _field6;
    float _field7;
    float _field8;
    float _field9;
};

struct I {
    int _field1;
    char _field2[4];
};

struct IAVCoreRoomMultiDelegate;

struct ICMPHeader {
    unsigned char _field1;
    unsigned char _field2;
    unsigned short _field3;
    unsigned short _field4;
    unsigned short _field5;
};

struct IDCSpeedTester;

struct Image {
    int _width;
    int _height;
    int _bpp;
    void *_pixels;
};

struct InsFilter {
    CDUnknownFunctionPointerType *_field1;
    struct TaskQueue _field2;
    struct CGPUImageProgram _field3;
    struct vector<CGPUImage::RotationEx, std::__1::allocator<CGPUImage::RotationEx>> _field4;
    basic_string_a490aa4c _field5;
    basic_string_a490aa4c _field6;
    int _field7;
    int _field8;
    int _field9;
    _Bool _field10;
    int _field11;
    int _field12;
    int _field13;
    struct vector<CGPUImage::CGPUImageBaseFilter *, std::__1::allocator<CGPUImage::CGPUImageBaseFilter *>> _field14;
    int _field15;
    struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> _field16;
    struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> _field17;
    int *_field18;
    int *_field19;
    unsigned int *_field20;
    _Bool *_field21;
    struct RotationMatrix2_2x2 *_field22;
    struct vector<CGPUImage::CGPUImageNInputFilter *, std::__1::allocator<CGPUImage::CGPUImageNInputFilter *>> _field23;
    struct map<const CGPUImage::CGPUImageNInputFilter *, CGPUImage::CGPUImageFilterGroup::FilterInfo, std::__1::less<const CGPUImage::CGPUImageNInputFilter *>, std::__1::allocator<std::__1::pair<const CGPUImage::CGPUImageNInputFilter *const, CGPUImage::CGPUImageFilterGroup::FilterInfo>>> _field24;
    struct vector<CGPUImage::CGPUImageFramebuffer *, std::__1::allocator<CGPUImage::CGPUImageFramebuffer *>> _field25;
    _Bool _field26;
    float _field27;
    struct CGPUImageTexture _field28;
    struct CGPUImageTexture _field29;
    struct CGPUImageTexture _field30;
    struct CGPUImageTexture _field31;
    struct CGPUImageTexture _field32;
    struct CGPUImageTexture _field33;
    struct Data _field34;
    int _field35;
    struct CGPUImageNInputFilter *_field36;
    struct CGPUImageBlendFilter _field37;
    struct CGPUImageBlendFilter _field38;
};

struct JKConstBuffer {
    struct JKConstPtrRange _field1;
};

struct JKConstPtrRange {
    char *_field1;
    unsigned long long _field2;
};

struct JKEncodeCache {
    id _field1;
    unsigned long long _field2;
    unsigned long long _field3;
};

struct JKEncodeState {
    struct JKManagedBuffer _field1;
    struct JKManagedBuffer _field2;
    unsigned long long _field3;
    struct JKFastClassLookup _field4;
    struct JKEncodeCache _field5[1024];
    unsigned long long _field6;
    unsigned long long _field7;
    unsigned long long _field8;
    id _field9;
    id _field10;
    SEL _field11;
    CDUnknownFunctionPointerType _field12;
    CDUnknownBlockType _field13;
};

struct JKFastClassLookup {
    void *_field1;
    void *_field2;
    void *_field3;
    void *_field4;
    void *_field5;
};

struct JKHashTableEntry {
    unsigned long long _field1;
    id _field2;
    id _field3;
};

struct JKManagedBuffer {
    struct JKPtrRange _field1;
    unsigned long long _field2;
    unsigned long long _field3;
};

struct JKObjCImpCache {
    Class _field1;
    CDUnknownFunctionPointerType _field2;
    CDUnknownFunctionPointerType _field3;
};

struct JKObjectStack {
    void **_field1;
    void **_field2;
    unsigned long long *_field3;
    unsigned long long _field4;
    unsigned long long _field5;
    unsigned long long _field6;
    unsigned long long _field7;
};

struct JKParseState {
    unsigned long long _field1;
    struct JKConstBuffer _field2;
    unsigned long long _field3;
    unsigned long long _field4;
    unsigned long long _field5;
    unsigned long long _field6;
    unsigned long long _field7;
    unsigned long long _field8;
    struct JKParseToken _field9;
    struct JKObjectStack _field10;
    struct JKTokenCache _field11;
    struct JKObjCImpCache _field12;
    id _field13;
    int _field14;
    _Bool _field15;
};

struct JKParseToken {
    struct JKConstPtrRange _field1;
    unsigned long long _field2;
    struct JKTokenValue _field3;
    struct JKManagedBuffer _field4;
};

struct JKPtrRange {
    char *_field1;
    unsigned long long _field2;
};

struct JKTokenCache {
    struct JKTokenCacheItem *_field1;
    unsigned long long _field2;
    unsigned int _field3;
    unsigned char _field4[1024];
};

struct JKTokenCacheItem;

struct JKTokenValue {
    struct JKConstPtrRange _field1;
    unsigned long long _field2;
    unsigned long long _field3;
    CDUnion_abebb5d1 _field4;
    struct JKTokenCacheItem *_field5;
};

struct JointBilateralOp;

struct KSAAsset;

struct KSAPlayInfo {
    long long _field1;
    _Bool _field2;
    float _field3;
    float _field4;
    float _field5;
    int _field6;
    long long _field7;
    int _field8;
    long long _field9;
    _Bool _field10;
    long long _field11;
    long long _field12;
    double _field13;
    int _field14;
};

struct KSAProject {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
    int _field5;
    float _field6;
    float _field7;
    long long _field8;
    basic_string_a490aa4c _field9;
    long long _field10;
    _Bool _field11;
    _Bool _field12;
    _Bool _field13;
    _Bool _field14;
    float _field15;
    basic_string_a490aa4c _field16;
    float _field17;
    _Bool _field18;
    _Bool _field19;
    _Bool _field20;
    _Bool _field21;
    _Bool _field22;
    _Bool _field23;
    _Bool _field24;
    _Bool _field25;
    float _field26;
    struct vector<KSAAsset *, std::__1::allocator<KSAAsset *>> _field27;
    struct vector<KSAAsset *, std::__1::allocator<KSAAsset *>> _field28;
    struct vector<KSAAsset *, std::__1::allocator<KSAAsset *>> _field29;
    struct vector<KSAAsset *, std::__1::allocator<KSAAsset *>> _field30;
    struct vector<KSAAsset *, std::__1::allocator<KSAAsset *>> _field31;
    struct KSAAsset *_field32;
    basic_string_a490aa4c _field33;
    struct vector<CKSTimeRange, std::__1::allocator<CKSTimeRange>> _field34;
    struct vector<CKSEffectRange, std::__1::allocator<CKSEffectRange>> _field35;
    int _field36;
    struct CKSTimeRange _field37;
    double _field38;
    int _field39;
    int _field40;
    int _field41;
};

struct KSBinaryNet {
    struct CKSTimeAverage _field1;
    struct CKSTimeAverage _field2;
    struct CKSTimeAverage _field3;
    struct CKSTimeAverage _field4;
    struct CKSTimeAverage _field5;
    struct CKSTimeAverage _field6;
    struct CKSTimeAverage _field7;
    struct CKSTimeAverage _field8;
    struct CKSTimeAverage _field9;
    struct CKSTimeAverage _field10;
    struct CKSTimeAverage _field11;
    struct CKSTimeAverage _field12;
    struct CKSTimeAverage _field13;
    struct CKSTimeAverage _field14;
    double _field15;
    double _field16;
    double _field17;
    double _field18;
    struct KSTexInput *_field19;
    struct CKSHumanPoseDetect *_field20;
    struct CKSModelBase *_field21;
    struct CKSHandGestureDetect *_field22;
    struct CKSTimeShow _field23;
    struct CKSTimeShow _field24;
    struct CKSTimeShow _field25;
    basic_string_a490aa4c _field26;
    struct KSHumanMattingParam _field27;
    struct KSHairParam _field28;
    struct KSHumanPoseParam _field29;
    struct KSNetRenderParam _field30;
    struct CNNContext *_field31;
    long long _field32;
    _Bool _field33;
    struct CKSMPSRender *_field34;
    struct CKSMPSRender *_field35;
    struct Network *_field36;
    struct Network *_field37;
    _Bool _field38;
    struct BlendMaskOp *_field39;
    struct PassThroughOp *_field40;
    struct PassThroughOp *_field41;
    struct PassThroughOp *_field42;
    struct PassThroughOp *_field43;
    struct CropOp *_field44;
    struct RGB2YUVOp *_field45;
    struct shared_ptr<Data> _field46;
    struct shared_ptr<Data> _field47;
    struct shared_ptr<Data> _field48;
    struct shared_ptr<Data> _field49;
    struct shared_ptr<Data> _field50;
    struct shared_ptr<Data> _field51;
    struct shared_ptr<Data> _field52;
    struct shared_ptr<Data> _field53;
    struct shared_ptr<Data> _field54;
    struct shared_ptr<Data> _field55;
    struct shared_ptr<Data> _field56;
    struct shared_ptr<Data> _field57;
    struct shared_ptr<Data> _field58;
    struct shared_ptr<Data> _field59;
    struct shared_ptr<Data> _field60;
    struct shared_ptr<Data> _field61;
    struct shared_ptr<Data> _field62;
    struct shared_ptr<Data> _field63;
    struct shared_ptr<Data> _field64;
    struct shared_ptr<Data> _field65;
    struct shared_ptr<Data> _field66;
    struct shared_ptr<Data> _field67;
    struct shared_ptr<Data> _field68;
    struct shared_ptr<Data> _field69;
    struct shared_ptr<Data> _field70;
    struct shared_ptr<Data> _field71;
    _Bool _field72;
    _Bool _field73;
    int _field74;
    double _field75;
    struct BorderOp *_field76;
    struct GaussianOp *_field77;
    struct BandAOp *_field78;
    struct PostBlendOp *_field79;
    struct GaussianOp *_field80;
    struct GaussianOp *_field81;
    struct GaussianOp *_field82;
    struct GaussianOp *_field83;
    struct ErosionOp *_field84;
    struct DilationOp *_field85;
    struct JointBilateralOp *_field86;
    struct JointBilateralOp *_field87;
    struct JointBilateralOp *_field88;
    struct TransformOp *_field89;
    struct StepOp *_field90;
    struct TemporalBilateralOp *_field91;
    struct RescaleImageOp *_field92;
    struct _opaque_pthread_mutex_t _field93;
    struct CKSYUVConvert _field94;
    struct vector<unsigned char, std::__1::allocator<unsigned char>> _field95;
    struct KSPoseOut _field96;
    struct KSPoseOut _field97;
    int _field98;
};

struct KSCNNPoseInfo;

struct KSDescParam {
    int strideX;
    int strideY;
    int padH;
    int padW;
    int dilationH;
    int dilationW;
    int numIn;
    int numOut;
    int kH;
    int kW;
    struct vector<float, std::__1::allocator<float>> weights;
    struct vector<float, std::__1::allocator<float>> biases;
    _Bool depthwise;
};

struct KSEBeautyWrapper;

struct KSEditorProjectObj {
    int _field1;
    int _field2;
    int _field3;
    long long _field4;
    _Bool _field5;
    float _field6;
    float _field7;
    float _field8;
    int _field9;
    int _field10;
    long long _field11;
    long long _field12;
    _Bool _field13;
    _Bool _field14;
    float _field15;
    float _field16[12];
    float _field17[8];
    int _field18;
    int _field19;
    int _field20;
    int _field21;
    _Bool _field22;
    int _field23;
    int _field24;
    int _field25;
    long long _field26;
    long long _field27;
    int _field28;
    int _field29;
    double _field30;
    double _field31;
    double _field32;
    double _field33;
    int _field34;
    struct vector<KSPlaybackEvent, std::__1::allocator<KSPlaybackEvent>> _field35;
    struct CKSProject *_field36;
};

struct KSGestureInfo;

struct KSHairParam {
    int _field1;
};

struct KSHandGestureOut {
    struct vector<KSGestureInfo, std::__1::allocator<KSGestureInfo>> _field1;
};

struct KSHumanMattingParam {
    int _field1;
    float _field2;
    float _field3;
};

struct KSHumanPoseParam {
    struct vector<float, std::__1::allocator<float>> smoothXY;
    struct vector<float, std::__1::allocator<float>> smoothZ;
    struct vector<float, std::__1::allocator<float>> sensitiveXY;
    struct vector<float, std::__1::allocator<float>> sensitiveZ;
    _Bool smoothFilterXY;
    _Bool smoothFilterZ;
    float continuity;
    _Bool has3DInfo;
    int numDeferredFrames;
    int numMotionPredictFrames;
    _Bool fastMode;
    int delayFrames;
};

struct KSIMultiVideoCsCmdCallback {
    CDUnknownFunctionPointerType *_field1;
    CDUnknownFunctionPointerType *_field2;
    struct CAsynCallProxy *_field3;
    struct AVScopePtr<tencent::av::MultiVideoCsCmdCallback> _field4;
    int _field5;
    int _field6;
    basic_string_1cdf7af0 _field7;
    struct CBIBuffer _field8;
};

struct KSLiveGift {
    Class _field1;
};

struct KSLiveGiftEdge {
    double top;
    double left;
    double bottom;
    double right;
};

struct KSLiveHeartGPUInstance;

struct KSNetRenderParam {
    int _field1;
    _Bool _field2;
    _Bool _field3;
    _Bool _field4;
    _Bool _field5;
    _Bool _field6;
    _Bool _field7;
    _Bool _field8;
};

struct KSPopoverSize {
    double _field1;
    double _field2;
    struct CGSize _field3;
};

struct KSPoseInfo;

struct KSPoseOut {
    struct vector<KSPoseInfo, std::__1::allocator<KSPoseInfo>> _field1;
};

struct KSRect {
    float _field1;
    float _field2;
    float _field3;
    float _field4;
};

struct KSRenderCallbackCtx {
    KSYAudioReverb *audioReverbOfFoldback;
    struct SMBContext *smbCtxOfFoldback;
    struct OpaqueAudioComponentInstance *audioUnit;
    double audioSampleRate;
};

struct KSSegmentInsets {
    CDStruct_1b6d18a9 _field1;
    CDStruct_1b6d18a9 _field2;
};

struct KSTexInput;

struct KSUIDCSpeedTester {
    struct IDCSpeedTester *_field1;
    struct KSUIDCTestRequestGenerator *_field2;
};

struct KSUIDCTestRequestGenerator;

struct KSYStreamerBaseMetricSnapshot {
    Class _field1;
    int _field2;
    int _field3;
    int _field4;
    int _field5;
    double _field6;
    double _field7;
    double _field8;
    double _field9;
    double _field10;
    double _field11;
    double _field12;
    double _field13;
    double _field14;
    double _field15;
    double _field16;
    double _field17;
};

struct KS_comment {
    Class _field1;
};

struct KS_feed {
    Class _field1;
};

struct KS_notifys {
    Class _field1;
};

struct KsyQosInfo {
    int _field1;
    int _field2;
    long long _field3;
    int _field4;
    int _field5;
    long long _field6;
    long long _field7;
    int _field8;
    int _field9;
    int _field10;
    int _field11;
    int _field12;
    int _field13;
    int _field14;
    int _field15;
    int _field16;
    int _field17;
    int _field18;
    int _field19;
    int _field20;
    int _field21;
    int _field22;
    int _field23;
    int _field24;
    char _field25[512];
    char _field26[512];
    char _field27[512];
    char _field28[512];
    char *_field29;
};

struct LRUFrameCache {
    struct mutex _field1;
    unsigned long long _field2;
    struct unordered_map<long long, std::__1::__list_iterator<kuaishou::editorsdk2::LRUFrameCache::Item, void *>, std::__1::hash<long long>, std::__1::equal_to<long long>, std::__1::allocator<std::__1::pair<const long long, std::__1::__list_iterator<kuaishou::editorsdk2::LRUFrameCache::Item, void *>>>> _field3;
    struct list<kuaishou::editorsdk2::LRUFrameCache::Item, std::__1::allocator<kuaishou::editorsdk2::LRUFrameCache::Item>> _field4;
};

struct LiquidationPath {
    int _field1[24];
    Vec_08cf5610 _field2[24];
    float _field3[24];
    float _field4[24];
    Vec_19636d0e _field5[24];
    Vec_190d90d4 _field6[24];
    struct Vec<int, 2> _field7[24];
    int _field8;
};

struct Location {
    char *_field1;
    char *_field2;
    int _field3;
    void *_field4;
};

struct MSize {
    int *_field1;
};

struct MStep {
    unsigned long long *_field1;
    unsigned long long _field2[2];
};

struct MakeupFilterGroup {
    CDUnknownFunctionPointerType *_vptr$CGPUImageBaseFilter;
    struct TaskQueue _runOnDrawTasks;
    struct CGPUImageProgram _program;
    struct vector<CGPUImage::RotationEx, std::__1::allocator<CGPUImage::RotationEx>> _rotationExList;
    basic_string_a490aa4c _vertexShader;
    basic_string_a490aa4c _fragmentShader;
    int mGLAttribPosition;
    int mGLUniformTexture;
    int mGLAttribTextureCoordinate;
    _Bool mIsInitialized;
    int _outputWidth;
    int _outputHeight;
    int _status;
    struct vector<CGPUImage::CGPUImageBaseFilter *, std::__1::allocator<CGPUImage::CGPUImageBaseFilter *>> _managesFilters;
    int _inputNumber;
    struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> _textureUniformNames;
    struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> _textureCoordinateAttributeNames;
    int *_filterTextureCoordinateAttribute;
    int *_filterInputTextureUniform;
    unsigned int *_filterSourceTexture;
    _Bool *_filterSourceTextureForDelete;
    struct RotationMatrix2_2x2 *_textureCoordinatesBuffer;
    struct CGPUImageFramebuffer *_textureBuffer[2];
    struct vector<CGPUImage::CGPUImageMeshRenderer *, std::__1::allocator<CGPUImage::CGPUImageMeshRenderer *>> _renderers;
    struct vector<std::__1::vector<CGPUImage::CGPUImageMeshRenderer *, std::__1::allocator<CGPUImage::CGPUImageMeshRenderer *>>, std::__1::allocator<std::__1::vector<CGPUImage::CGPUImageMeshRenderer *, std::__1::allocator<CGPUImage::CGPUImageMeshRenderer *>>>> _rendererGroups;
    unsigned int _copyTextureId;
    struct CGPUImageMeshRenderer _copyFilter;
    struct CGPUImageNInputFilter _filter;
    struct CopyMesh _copyMesh;
    struct vector<std::__1::vector<CGPUImage::Triangle, std::__1::allocator<CGPUImage::Triangle>>, std::__1::allocator<std::__1::vector<CGPUImage::Triangle, std::__1::allocator<CGPUImage::Triangle>>>> _copyTriangles;
    vector_6a9a9531 _features;
    struct vector<CGFModel::FaceMesh::TextureMeshData, std::__1::allocator<CGFModel::FaceMesh::TextureMeshData>> _textureMeshDatas;
    struct CGPUImageNInputFilter _filter;
    struct CGPUImageFramebuffer *_textureBuffer[2];
    _Bool _filtersDidReady;
    struct FacePoints _facePoints;
    struct mutex _pointsMutex;
    struct vector<CGPUImage::CGPUImageMeshRenderer *, std::__1::allocator<CGPUImage::CGPUImageMeshRenderer *>> _filters;
    struct MeshDrawer _meshDrawer;
    _Bool _showMesh;
};

struct MapPoint;

struct MatAllocator;

struct MatSize {
    int *p;
};

struct MatStep {
    unsigned long long *p;
    unsigned long long buf[2];
};

struct MemoryAccessor;

struct MemoryPoolAllocator<rapidjson::CrtAllocator>;

struct Mesh;

struct MeshDrawer {
    CDUnknownFunctionPointerType *_vptr$CGPUImageBaseFilter;
    struct TaskQueue _runOnDrawTasks;
    struct CGPUImageProgram _program;
    struct vector<CGPUImage::RotationEx, std::__1::allocator<CGPUImage::RotationEx>> _rotationExList;
    basic_string_a490aa4c _vertexShader;
    basic_string_a490aa4c _fragmentShader;
    int mGLAttribPosition;
    int mGLUniformTexture;
    int mGLAttribTextureCoordinate;
    _Bool mIsInitialized;
    int _outputWidth;
    int _outputHeight;
    int _status;
    struct vector<CGPUImage::CGPUImageBaseFilter *, std::__1::allocator<CGPUImage::CGPUImageBaseFilter *>> _managesFilters;
    int _inputNumber;
    struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> _textureUniformNames;
    struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> _textureCoordinateAttributeNames;
    int *_filterTextureCoordinateAttribute;
    int *_filterInputTextureUniform;
    unsigned int *_filterSourceTexture;
    _Bool *_filterSourceTextureForDelete;
    struct RotationMatrix2_2x2 *_textureCoordinatesBuffer;
    struct CGPUImageDrawer _pointDrawer;
    struct FaceMesh *_mesh;
};

struct MetalContext {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    struct CKSCNNModeInfo *_field3;
    struct MemoryAccessor *_field4;
    struct OpFactory *_field5;
    struct DataCache *_field6;
    struct MetalContextWrapper *_field7;
    struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> _field8;
    struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> _field9;
    _Bool _field10;
    int _field11;
};

struct MetalContextWrapper;

struct MixFilter {
    CDUnknownFunctionPointerType *_vptr$CGPUImageBaseFilter;
    struct TaskQueue _runOnDrawTasks;
    struct CGPUImageProgram _program;
    struct vector<CGPUImage::RotationEx, std::__1::allocator<CGPUImage::RotationEx>> _rotationExList;
    basic_string_a490aa4c _vertexShader;
    basic_string_a490aa4c _fragmentShader;
    int mGLAttribPosition;
    int mGLUniformTexture;
    int mGLAttribTextureCoordinate;
    _Bool mIsInitialized;
    int _outputWidth;
    int _outputHeight;
    int _status;
    struct vector<CGPUImage::CGPUImageBaseFilter *, std::__1::allocator<CGPUImage::CGPUImageBaseFilter *>> _managesFilters;
    int _inputNumber;
    struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> _textureUniformNames;
    struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> _textureCoordinateAttributeNames;
    int *_filterTextureCoordinateAttribute;
    int *_filterInputTextureUniform;
    unsigned int *_filterSourceTexture;
    _Bool *_filterSourceTextureForDelete;
    struct RotationMatrix2_2x2 *_textureCoordinatesBuffer;
    float opacity;
};

struct MixFilter2 {
    CDUnknownFunctionPointerType *_vptr$CGPUImageBaseFilter;
    struct TaskQueue _runOnDrawTasks;
    struct CGPUImageProgram _program;
    struct vector<CGPUImage::RotationEx, std::__1::allocator<CGPUImage::RotationEx>> _rotationExList;
    basic_string_a490aa4c _vertexShader;
    basic_string_a490aa4c _fragmentShader;
    int mGLAttribPosition;
    int mGLUniformTexture;
    int mGLAttribTextureCoordinate;
    _Bool mIsInitialized;
    int _outputWidth;
    int _outputHeight;
    int _status;
    struct vector<CGPUImage::CGPUImageBaseFilter *, std::__1::allocator<CGPUImage::CGPUImageBaseFilter *>> _managesFilters;
    int _inputNumber;
    struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> _textureUniformNames;
    struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> _textureCoordinateAttributeNames;
    int *_filterTextureCoordinateAttribute;
    int *_filterInputTextureUniform;
    unsigned int *_filterSourceTexture;
    _Bool *_filterSourceTextureForDelete;
    struct RotationMatrix2_2x2 *_textureCoordinatesBuffer;
};

struct MixFilter2Fast {
    CDUnknownFunctionPointerType *_vptr$CGPUImageBaseFilter;
    struct TaskQueue _runOnDrawTasks;
    struct CGPUImageProgram _program;
    struct vector<CGPUImage::RotationEx, std::__1::allocator<CGPUImage::RotationEx>> _rotationExList;
    basic_string_a490aa4c _vertexShader;
    basic_string_a490aa4c _fragmentShader;
    int mGLAttribPosition;
    int mGLUniformTexture;
    int mGLAttribTextureCoordinate;
    _Bool mIsInitialized;
    int _outputWidth;
    int _outputHeight;
    int _status;
    struct vector<CGPUImage::CGPUImageBaseFilter *, std::__1::allocator<CGPUImage::CGPUImageBaseFilter *>> _managesFilters;
    int _inputNumber;
    struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> _textureUniformNames;
    struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> _textureCoordinateAttributeNames;
    int *_filterTextureCoordinateAttribute;
    int *_filterInputTextureUniform;
    unsigned int *_filterSourceTexture;
    _Bool *_filterSourceTextureForDelete;
    struct RotationMatrix2_2x2 *_textureCoordinatesBuffer;
};

struct MixFilter4 {
    CDUnknownFunctionPointerType *_vptr$CGPUImageBaseFilter;
    struct TaskQueue _runOnDrawTasks;
    struct CGPUImageProgram _program;
    struct vector<CGPUImage::RotationEx, std::__1::allocator<CGPUImage::RotationEx>> _rotationExList;
    basic_string_a490aa4c _vertexShader;
    basic_string_a490aa4c _fragmentShader;
    int mGLAttribPosition;
    int mGLUniformTexture;
    int mGLAttribTextureCoordinate;
    _Bool mIsInitialized;
    int _outputWidth;
    int _outputHeight;
    int _status;
    struct vector<CGPUImage::CGPUImageBaseFilter *, std::__1::allocator<CGPUImage::CGPUImageBaseFilter *>> _managesFilters;
    int _inputNumber;
    struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> _textureUniformNames;
    struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> _textureCoordinateAttributeNames;
    int *_filterTextureCoordinateAttribute;
    int *_filterInputTextureUniform;
    unsigned int *_filterSourceTexture;
    _Bool *_filterSourceTextureForDelete;
    struct RotationMatrix2_2x2 *_textureCoordinatesBuffer;
};

struct MixFilter4Fast {
    CDUnknownFunctionPointerType *_vptr$CGPUImageBaseFilter;
    struct TaskQueue _runOnDrawTasks;
    struct CGPUImageProgram _program;
    struct vector<CGPUImage::RotationEx, std::__1::allocator<CGPUImage::RotationEx>> _rotationExList;
    basic_string_a490aa4c _vertexShader;
    basic_string_a490aa4c _fragmentShader;
    int mGLAttribPosition;
    int mGLUniformTexture;
    int mGLAttribTextureCoordinate;
    _Bool mIsInitialized;
    int _outputWidth;
    int _outputHeight;
    int _status;
    struct vector<CGPUImage::CGPUImageBaseFilter *, std::__1::allocator<CGPUImage::CGPUImageBaseFilter *>> _managesFilters;
    int _inputNumber;
    struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> _textureUniformNames;
    struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> _textureCoordinateAttributeNames;
    int *_filterTextureCoordinateAttribute;
    int *_filterInputTextureUniform;
    unsigned int *_filterSourceTexture;
    _Bool *_filterSourceTextureForDelete;
    struct RotationMatrix2_2x2 *_textureCoordinatesBuffer;
};

struct MultiVideoCsCmdCallback;

struct NSArray {
    Class _field1;
};

struct NativeExportTask {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    int _field3;
    _Bool _field4;
    _Bool _field5;
    _Bool _field6;
    struct ExportOptions _field7;
    struct TrackVideoDecodeService _field8;
    struct TrackAudioDecodeService _field9;
    struct SubAssetDecodeService _field10;
    struct SubAssetRenderRangeBuilder _field11;
    struct function<void (kuaishou::editorsdk2::model::ExportEvent)> _field12;
    basic_string_a490aa4c _field13;
    basic_string_a490aa4c _field14;
    struct VideoColorProperties _field15;
    struct mutex _field16;
    struct thread _field17;
    struct BlockingQueue<std::__1::unique_ptr<AVFrame, void (*)(AVFrame *)>> _field18;
    struct thread _field19;
    struct condition_variable _field20;
    struct VideoEditorProject _field21;
    struct PerfLogger _field22;
    struct EditorSdkError _field23;
    struct function<void (unsigned char *, unsigned char *, const kuaishou::editorsdk2::model::FrameBeautyDesc &, int *)> _field24;
};

struct NativePreviewPlayer {
    CDUnknownFunctionPointerType *_field1;
    struct TrackAudioDecodeService _field2;
    _Bool _field3;
    struct EditorSdkError _field4;
    _Bool _field5;
    _Bool _field6;
    struct mutex _field7;
    _Bool _field8;
    _Bool _field9;
    _Bool _field10;
    _Bool _field11;
    int _field12;
    _Bool _field13;
    _Bool _field14;
    double _field15;
    _Bool _field16;
    int _field17;
    struct PerfLogger _field18;
    struct VideoEditorProject _field19;
    struct ProjectRenderer _field20;
    struct TrackVideoDecodeService _field21;
    struct SubAssetDecodeService _field22;
    struct RefClock _field23;
    struct unique_ptr<AudioPlay, std::__1::default_delete<AudioPlay>> _field24;
    struct TimeMessageCenter _field25;
    struct function<void (kuaishou::editorsdk2::model::PerfEntry)> _field26;
    struct function<void (kuaishou::editorsdk2::model::PreviewEvent)> _field27;
    basic_string_a490aa4c _field28;
};

struct NativeThumbnailGenerator {
    CDUnknownFunctionPointerType *_field1;
    struct VideoEditorProject _field2;
    struct TrackVideoDecodeService _field3;
    struct SubAssetDecodeService _field4;
    struct ProjectRenderer _field5;
    struct unique_ptr<SwsContext, void (*)(SwsContext *)> _field6;
    struct LRUFrameCache _field7;
    struct BlockingQueue<kuaishou::editorsdk2::ThumbnailJob> _field8;
    struct mutex _field9;
    struct mutex _field10;
    struct condition_variable _field11;
    struct thread _field12;
    double _field13;
    int _field14;
    int _field15;
    int _field16;
    int _field17;
    _Bool _field18;
    _Bool _field19;
};

struct Network;

struct ObjectData {
    unsigned int _field1;
    unsigned int _field2;
    struct GenericMember<rapidjson::UTF8<char>, rapidjson::MemoryPoolAllocator<rapidjson::CrtAllocator>> *_field3;
};

struct OpFactory;

struct OpaqueAudioComponent;

struct OpaqueAudioComponentInstance;

struct OpaqueAudioFileID;

struct OpaqueAudioQueue;

struct POPAnimatorItem;

struct ParseResult {
    int _field1;
    unsigned long long _field2;
};

struct PassThroughOp;

struct PerfLogger {
    CDUnknownFunctionPointerType *_field1;
    struct map<std::__1::basic_string<char>, std::__1::vector<double, std::__1::allocator<double>>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::vector<double, std::__1::allocator<double>>>>> _field2;
    struct map<std::__1::basic_string<char>, std::__1::function<void (kuaishou::editorsdk2::model::PerfEntry)>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::function<void (kuaishou::editorsdk2::model::PerfEntry)>>>> _field3;
    struct mutex _field4;
    struct condition_variable _field5;
    struct thread _field6;
    _Bool _field7;
};

struct Plane {
    struct Mat {
        int _field1;
        int _field2;
        int _field3;
        int _field4;
        char *_field5;
        char *_field6;
        char *_field7;
        char *_field8;
        struct MatAllocator *_field9;
        struct UMatData *_field10;
        struct MatSize _field11;
        struct MatStep _field12;
    } _field1;
    struct Mat {
        int _field1;
        int _field2;
        int _field3;
        int _field4;
        char *_field5;
        char *_field6;
        char *_field7;
        char *_field8;
        struct MatAllocator *_field9;
        struct UMatData *_field10;
        struct MatSize _field11;
        struct MatStep _field12;
    } _field2;
    float _field3;
    vector_5353283d _field4;
    struct Mat {
        int _field1;
        int _field2;
        int _field3;
        int _field4;
        char *_field5;
        char *_field6;
        char *_field7;
        char *_field8;
        struct MatAllocator *_field9;
        struct UMatData *_field10;
        struct MatSize _field11;
        struct MatStep _field12;
    } _field5;
    struct Mat {
        int _field1;
        int _field2;
        int _field3;
        int _field4;
        char *_field5;
        char *_field6;
        char *_field7;
        char *_field8;
        struct MatAllocator *_field9;
        struct UMatData *_field10;
        struct MatSize _field11;
        struct MatStep _field12;
    } _field6;
    struct Mat {
        int _field1;
        int _field2;
        int _field3;
        int _field4;
        char *_field5;
        char *_field6;
        char *_field7;
        char *_field8;
        struct MatAllocator *_field9;
        struct UMatData *_field10;
        struct MatSize _field11;
        struct MatStep _field12;
    } _field7;
    struct Mat {
        int _field1;
        int _field2;
        int _field3;
        int _field4;
        char *_field5;
        char *_field6;
        char *_field7;
        char *_field8;
        struct MatAllocator *_field9;
        struct UMatData *_field10;
        struct MatSize _field11;
        struct MatStep _field12;
    } _field8;
    struct Mat {
        int _field1;
        int _field2;
        int _field3;
        int _field4;
        char *_field5;
        char *_field6;
        char *_field7;
        char *_field8;
        struct MatAllocator *_field9;
        struct UMatData *_field10;
        struct MatSize _field11;
        struct MatStep _field12;
    } _field9;
    struct Mat {
        int _field1;
        int _field2;
        int _field3;
        int _field4;
        char *_field5;
        char *_field6;
        char *_field7;
        char *_field8;
        struct MatAllocator *_field9;
        struct UMatData *_field10;
        struct MatSize _field11;
        struct MatStep _field12;
    } _field10;
    struct Mat {
        int _field1;
        int _field2;
        int _field3;
        int _field4;
        char *_field5;
        char *_field6;
        char *_field7;
        char *_field8;
        struct MatAllocator *_field9;
        struct UMatData *_field10;
        struct MatSize _field11;
        struct MatStep _field12;
    } _field11;
    struct Mat {
        int _field1;
        int _field2;
        int _field3;
        int _field4;
        char *_field5;
        char *_field6;
        char *_field7;
        char *_field8;
        struct MatAllocator *_field9;
        struct UMatData *_field10;
        struct MatSize _field11;
        struct MatStep _field12;
    } _field12;
    float _field13;
};

struct Point2f;

struct Point3_<float> {
    float x;
    float y;
    float z;
};

struct PoseLivenessDetector {
    int _field1;
    int _field2;
    struct vector<PoseDirection, std::__1::allocator<PoseDirection>> _field3;
    struct vector<float, std::__1::allocator<float>> _field4;
    struct vector<float, std::__1::allocator<float>> _field5;
    struct vector<float, std::__1::allocator<float>> _field6;
    float _field7;
    float _field8;
    float _field9;
    int _field10;
};

struct PostBlendOp;

struct ProgramObject {
    struct ShaderObject m_vertObj;
    struct ShaderObject m_fragObj;
    unsigned int m_programID;
};

struct ProjectRenderer {
    _Bool _field1;
    int _field2;
    int _field3;
    int _field4;
    int _field5;
    int _field6;
    int _field7;
    int _field8;
    struct unordered_map<unsigned long long, bool, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, bool>>> _field9;
    struct mutex _field10;
    struct VideoEditorProject _field11;
    struct VideoColorProperties _field12;
    struct ShaderProgramPool _field13;
    struct unique_ptr<AVFrame, void (*)(AVFrame *)> _field14;
    struct AVFrameRgbaTextureConverter _field15;
    struct unique_ptr<kuaishou::editorsdk2::KSEBeautyWrapper, std::__1::default_delete<kuaishou::editorsdk2::KSEBeautyWrapper>> _field16;
    struct ColorFilterParam _field17;
    float _field18;
    struct PerfLogger *_field19;
    struct function<void (unsigned char *, unsigned char *, const kuaishou::editorsdk2::model::FrameBeautyDesc &, int *)> _field20;
    basic_string_a490aa4c _field21;
    basic_string_a490aa4c _field22;
};

struct Property {
    float leftEyeGap;
    float rightEyeGap;
};

struct Pts;

struct PttQualityReq;

struct PttTransHead {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    unsigned int _field3[4];
    unsigned int _field4;
    unsigned int _field5;
    basic_string_1cdf7af0 *_field6;
    unsigned int _field7;
    unsigned int _field8;
    basic_string_1cdf7af0 *_field9;
    basic_string_1cdf7af0 *_field10;
    basic_string_1cdf7af0 *_field11;
    unsigned int _field12;
};

struct PttTransReq;

struct QAVAudioFrameDesc {
    long long SampleRate;
    long long ChannelNum;
    long long Bits;
};

struct RGB2YUVOp;

struct Rational;

struct RcOverride;

struct Rect {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RefClock {
    CDUnknownFunctionPointerType *_field1;
    double _field2;
    double _field3;
    unsigned long long _field4;
    unsigned long long _field5;
    _Bool _field6;
    _Bool _field7;
    struct mutex _field8;
};

struct RenderRange;

struct RenderTexture;

struct Rep;

struct RepeatedPtrField<kuaishou::editorsdk2::model::AudioAsset> {
    struct Arena *_field1;
    int _field2;
    int _field3;
    struct Rep *_field4;
};

struct RepeatedPtrField<kuaishou::editorsdk2::model::SubAsset> {
    struct Arena *_field1;
    int _field2;
    int _field3;
    struct Rep *_field4;
};

struct RepeatedPtrField<kuaishou::editorsdk2::model::TimeRange> {
    struct Arena *_field1;
    int _field2;
    int _field3;
    struct Rep *_field4;
};

struct RepeatedPtrField<kuaishou::editorsdk2::model::TrackAsset> {
    struct Arena *_field1;
    int _field2;
    int _field3;
    struct Rep *_field4;
};

struct RepeatedPtrField<kuaishou::editorsdk2::model::VisualEffectParam> {
    struct Arena *_field1;
    int _field2;
    int _field3;
    struct Rep *_field4;
};

struct RepeatedPtrField<std::__1::basic_string<char>> {
    struct Arena *_field1;
    int _field2;
    int _field3;
    struct Rep *_field4;
};

struct ReqBody {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    unsigned int _field3[4];
    struct PttTransReq *_field4;
    struct PttQualityReq *_field5;
};

struct RescaleImageOp;

struct ResourceMonitor {
    int _field1;
    struct _opaque_pthread_t *_field2;
    struct _opaque_pthread_cond_t _field3;
    struct _opaque_pthread_mutex_t _field4;
    void *_field5;
    CDUnknownFunctionPointerType _field6;
    float _field7;
    float _field8;
    long long _field9;
    int _field10;
    int _field11;
};

struct ReverbParams {
    double mSampleRate;
    double mRoomSize;
    double mPreDelay;
    double mReverberance;
    double mHfDamping;
    double mToneLow;
    double mToneHigh;
    double mWetGain;
    double mDryGain;
    double mStereoWidth;
    _Bool mWetOnly;
};

struct Reverb_priv_t {
    struct {
        float feedback;
        float hf_damping;
        float gain;
        struct {
            char *data;
            unsigned long long allocation;
            unsigned long long item_size;
            unsigned long long begin;
            unsigned long long end;
        } input_fifo;
        struct {
            CDStruct_729b303a comb[8];
            CDStruct_729b303a allpass[4];
            struct {
                double b0;
                double b1;
                double a1;
                double i1;
                double o1;
            } one_pole[2];
        } chan[2];
        float *out[2];
    } reverb;
    float *dry;
    float *wet[2];
};

struct RingBuf<false, false> {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    _Bool _field3;
    struct mutex _field4;
    struct mutex _field5;
    struct condition_variable _field6;
    char *_field7;
    unsigned long long _field8;
    unsigned long long _field9;
    int _field10;
    int _field11;
};

struct RotationEx;

struct RotationMatrix2_2x2;

struct SCNMatrix4 {
    float m11;
    float m12;
    float m13;
    float m14;
    float m21;
    float m22;
    float m23;
    float m24;
    float m31;
    float m32;
    float m33;
    float m34;
    float m41;
    float m42;
    float m43;
    float m44;
};

struct SCNVector3 {
    float x;
    float y;
    float z;
};

struct SCNVector4 {
    float x;
    float y;
    float z;
    float w;
};

struct SDL_AudioSpec {
    int freq;
    unsigned short format;
    unsigned char channels;
    unsigned char silence;
    unsigned short samples;
    unsigned short padding;
    unsigned int size;
    CDUnknownFunctionPointerType callback;
    void *userdata;
};

struct SDL_Class;

struct SDL_VoutOverlay {
    int _field1;
    int _field2;
    unsigned int _field3;
    int _field4;
    unsigned short *_field5;
    char **_field6;
    int _field7;
    int _field8;
    int _field9;
    int _field10;
    int _field11;
    int _field12;
    struct SDL_Class *_field13;
    struct SDL_VoutOverlay_Opaque *_field14;
    CDUnknownFunctionPointerType _field15;
    CDUnknownFunctionPointerType _field16;
    CDUnknownFunctionPointerType _field17;
    CDUnknownFunctionPointerType _field18;
    CDUnknownFunctionPointerType _field19;
    CDUnknownFunctionPointerType _field20;
};

struct SDL_VoutOverlay_Opaque;

struct SKHandGestureInputEvent;

struct SMBContext {
    float _field1[8192];
    float _field2[8192];
    float _field3[16384];
    float _field4[4097];
    float _field5[4097];
    float _field6[16384];
    float _field7[8192];
    float _field8[8192];
    float _field9[8192];
    float _field10[8192];
    float _field11;
    long long _field12;
    long long _field13;
};

struct SSState<POP::Vector4<double>> {
    struct Vector4<double> _field1;
    struct Vector4<double> _field2;
};

struct ShaderObject {
    unsigned int m_shaderType;
    unsigned int m_shaderID;
};

struct ShaderProgram;

struct ShaderProgramCopyBgra;

struct ShaderProgramCopyRgba;

struct ShaderProgramMix;

struct ShaderProgramNv12ToRgba;

struct ShaderProgramPool {
    struct unique_ptr<kuaishou::editorsdk2::ShaderProgram, std::__1::default_delete<kuaishou::editorsdk2::ShaderProgram>> _field1;
    struct unique_ptr<kuaishou::editorsdk2::ShaderProgramShowProject, std::__1::default_delete<kuaishou::editorsdk2::ShaderProgramShowProject>> _field2;
    struct unique_ptr<kuaishou::editorsdk2::ShaderProgramYuv420ToRgb, std::__1::default_delete<kuaishou::editorsdk2::ShaderProgramYuv420ToRgb>> _field3;
    struct unique_ptr<kuaishou::editorsdk2::ShaderProgramNv12ToRgba, std::__1::default_delete<kuaishou::editorsdk2::ShaderProgramNv12ToRgba>> _field4;
    struct unique_ptr<kuaishou::editorsdk2::ShaderProgramCopyRgba, std::__1::default_delete<kuaishou::editorsdk2::ShaderProgramCopyRgba>> _field5;
    struct unique_ptr<kuaishou::editorsdk2::ShaderProgramCopyBgra, std::__1::default_delete<kuaishou::editorsdk2::ShaderProgramCopyBgra>> _field6;
    struct unique_ptr<kuaishou::editorsdk2::ShaderProgramMix, std::__1::default_delete<kuaishou::editorsdk2::ShaderProgramMix>> _field7;
    basic_string_a490aa4c _field8;
    struct list<std::__1::pair<kuaishou::editorsdk2::model::ColorFilterParam, std::__1::unique_ptr<kuaishou::editorsdk2::LegacyColorFilter, std::__1::default_delete<kuaishou::editorsdk2::LegacyColorFilter>>>, std::__1::allocator<std::__1::pair<kuaishou::editorsdk2::model::ColorFilterParam, std::__1::unique_ptr<kuaishou::editorsdk2::LegacyColorFilter, std::__1::default_delete<kuaishou::editorsdk2::LegacyColorFilter>>>>> _field9;
    struct unordered_map<int, std::__1::unique_ptr<kuaishou::editorsdk2::VisualEffectBase, std::__1::default_delete<kuaishou::editorsdk2::VisualEffectBase>>, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, std::__1::unique_ptr<kuaishou::editorsdk2::VisualEffectBase, std::__1::default_delete<kuaishou::editorsdk2::VisualEffectBase>>>>> _field10;
};

struct ShaderProgramShowProject;

struct ShaderProgramYuv420ToRgb;

struct SharedTexture {
    int _field1;
    int _field2;
    unsigned int _field3;
    int *_field4;
};

struct ShortString {
    char _field1[22];
};

struct Size_<int> {
    int _field1;
    int _field2;
};

struct SkinSmootherFilter {
    CDUnknownFunctionPointerType *_vptr$CGPUImageBaseFilter;
    struct TaskQueue _runOnDrawTasks;
    struct CGPUImageProgram _program;
    struct vector<CGPUImage::RotationEx, std::__1::allocator<CGPUImage::RotationEx>> _rotationExList;
    basic_string_a490aa4c _vertexShader;
    basic_string_a490aa4c _fragmentShader;
    int mGLAttribPosition;
    int mGLUniformTexture;
    int mGLAttribTextureCoordinate;
    _Bool mIsInitialized;
    int _outputWidth;
    int _outputHeight;
    int _status;
    struct vector<CGPUImage::CGPUImageBaseFilter *, std::__1::allocator<CGPUImage::CGPUImageBaseFilter *>> _managesFilters;
    int _inputNumber;
    struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> _textureUniformNames;
    struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> _textureCoordinateAttributeNames;
    int *_filterTextureCoordinateAttribute;
    int *_filterInputTextureUniform;
    unsigned int *_filterSourceTexture;
    _Bool *_filterSourceTextureForDelete;
    struct RotationMatrix2_2x2 *_textureCoordinatesBuffer;
    struct vector<CGPUImage::CGPUImageNInputFilter *, std::__1::allocator<CGPUImage::CGPUImageNInputFilter *>> _filters;
    struct map<const CGPUImage::CGPUImageNInputFilter *, CGPUImage::CGPUImageFilterGroup::FilterInfo, std::__1::less<const CGPUImage::CGPUImageNInputFilter *>, std::__1::allocator<std::__1::pair<const CGPUImage::CGPUImageNInputFilter *const, CGPUImage::CGPUImageFilterGroup::FilterInfo>>> _filterInfos;
    struct vector<CGPUImage::CGPUImageFramebuffer *, std::__1::allocator<CGPUImage::CGPUImageFramebuffer *>> _frameBuffers;
    _Bool _needRefreshFramebuffers;
    float filterOpacity;
    float lookupIntensity;
    struct FOSkinSmootherFilter _smootherFilter;
    struct CGPUImageUnsharpMaskFilter _unsharpMaskFilter;
    struct CGPUImageLookupFilter _lookupFilter;
    struct CGPUImageBlendFilter _alphaBlendFilter;
    struct CGPUImageTexture _lookupTexture;
    _Bool _refreshSize;
};

struct SkinSmootherFilter2 {
    CDUnknownFunctionPointerType *_vptr$CGPUImageBaseFilter;
    struct TaskQueue _runOnDrawTasks;
    struct CGPUImageProgram _program;
    struct vector<CGPUImage::RotationEx, std::__1::allocator<CGPUImage::RotationEx>> _rotationExList;
    basic_string_a490aa4c _vertexShader;
    basic_string_a490aa4c _fragmentShader;
    int mGLAttribPosition;
    int mGLUniformTexture;
    int mGLAttribTextureCoordinate;
    _Bool mIsInitialized;
    int _outputWidth;
    int _outputHeight;
    int _status;
    struct vector<CGPUImage::CGPUImageBaseFilter *, std::__1::allocator<CGPUImage::CGPUImageBaseFilter *>> _managesFilters;
    int _inputNumber;
    struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> _textureUniformNames;
    struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> _textureCoordinateAttributeNames;
    int *_filterTextureCoordinateAttribute;
    int *_filterInputTextureUniform;
    unsigned int *_filterSourceTexture;
    _Bool *_filterSourceTextureForDelete;
    struct RotationMatrix2_2x2 *_textureCoordinatesBuffer;
    struct vector<CGPUImage::CGPUImageNInputFilter *, std::__1::allocator<CGPUImage::CGPUImageNInputFilter *>> _filters;
    struct map<const CGPUImage::CGPUImageNInputFilter *, CGPUImage::CGPUImageFilterGroup::FilterInfo, std::__1::less<const CGPUImage::CGPUImageNInputFilter *>, std::__1::allocator<std::__1::pair<const CGPUImage::CGPUImageNInputFilter *const, CGPUImage::CGPUImageFilterGroup::FilterInfo>>> _filterInfos;
    struct vector<CGPUImage::CGPUImageFramebuffer *, std::__1::allocator<CGPUImage::CGPUImageFramebuffer *>> _frameBuffers;
    _Bool _needRefreshFramebuffers;
    float filterOpacity;
    float lookupIntensity;
    struct Vector3 skinColor;
    _Bool skinBrightOnly;
    struct Vector3 _lastSkinColor;
    _Bool _lastSkinBrightOnly;
    struct SmallBilateralFilter2 _bilateralFilter;
    struct MixFilter2 _mixFilter;
    struct MixFilter2Fast _mixFilterFast;
    struct SmallGaussianBlurFilter _blurFilter;
    struct CGPUImageNInputFilter *_unsharpMaskFilter;
    struct CGPUImageTexture _lookupTexture;
    _Bool _fastMode;
    float _quality;
    float _lastFilterOpacity;
    float _lastLookupIntensity;
    _Bool _refreshSize;
};

struct SkinSmootherFilter4 {
    CDUnknownFunctionPointerType *_vptr$CGPUImageBaseFilter;
    struct TaskQueue _runOnDrawTasks;
    struct CGPUImageProgram _program;
    struct vector<CGPUImage::RotationEx, std::__1::allocator<CGPUImage::RotationEx>> _rotationExList;
    basic_string_a490aa4c _vertexShader;
    basic_string_a490aa4c _fragmentShader;
    int mGLAttribPosition;
    int mGLUniformTexture;
    int mGLAttribTextureCoordinate;
    _Bool mIsInitialized;
    int _outputWidth;
    int _outputHeight;
    int _status;
    struct vector<CGPUImage::CGPUImageBaseFilter *, std::__1::allocator<CGPUImage::CGPUImageBaseFilter *>> _managesFilters;
    int _inputNumber;
    struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> _textureUniformNames;
    struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> _textureCoordinateAttributeNames;
    int *_filterTextureCoordinateAttribute;
    int *_filterInputTextureUniform;
    unsigned int *_filterSourceTexture;
    _Bool *_filterSourceTextureForDelete;
    struct RotationMatrix2_2x2 *_textureCoordinatesBuffer;
    struct vector<CGPUImage::CGPUImageNInputFilter *, std::__1::allocator<CGPUImage::CGPUImageNInputFilter *>> _filters;
    struct map<const CGPUImage::CGPUImageNInputFilter *, CGPUImage::CGPUImageFilterGroup::FilterInfo, std::__1::less<const CGPUImage::CGPUImageNInputFilter *>, std::__1::allocator<std::__1::pair<const CGPUImage::CGPUImageNInputFilter *const, CGPUImage::CGPUImageFilterGroup::FilterInfo>>> _filterInfos;
    struct vector<CGPUImage::CGPUImageFramebuffer *, std::__1::allocator<CGPUImage::CGPUImageFramebuffer *>> _frameBuffers;
    _Bool _needRefreshFramebuffers;
    float filterOpacity;
    float lookupIntensity;
    struct Vector3 skinColor;
    _Bool skinBrightOnly;
    struct Vector3 _lastSkinColor;
    _Bool _lastSkinBrightOnly;
    struct SmallBilateralFilter4 _bilateralFilter;
    struct MixFilter4 _mixFilter;
    struct MixFilter4Fast _mixFilterFast;
    struct SmallGaussianBlurFilter4 _blurFilter;
    struct CGPUImageNInputFilter *_unsharpMaskFilter;
    struct CGPUImageTexture _lookupTexture;
    _Bool _fastMode;
    float _quality;
    float _lastFilterOpacity;
    float _lastLookupIntensity;
    _Bool _refreshSize;
};

struct SmallBilateralFilter {
    CDUnknownFunctionPointerType *_vptr$CGPUImageBaseFilter;
    struct TaskQueue _runOnDrawTasks;
    struct CGPUImageProgram _program;
    struct vector<CGPUImage::RotationEx, std::__1::allocator<CGPUImage::RotationEx>> _rotationExList;
    basic_string_a490aa4c _vertexShader;
    basic_string_a490aa4c _fragmentShader;
    int mGLAttribPosition;
    int mGLUniformTexture;
    int mGLAttribTextureCoordinate;
    _Bool mIsInitialized;
    int _outputWidth;
    int _outputHeight;
    int _status;
    struct vector<CGPUImage::CGPUImageBaseFilter *, std::__1::allocator<CGPUImage::CGPUImageBaseFilter *>> _managesFilters;
    int _inputNumber;
    struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> _textureUniformNames;
    struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> _textureCoordinateAttributeNames;
    int *_filterTextureCoordinateAttribute;
    int *_filterInputTextureUniform;
    unsigned int *_filterSourceTexture;
    _Bool *_filterSourceTextureForDelete;
    struct RotationMatrix2_2x2 *_textureCoordinatesBuffer;
    struct vector<CGPUImage::CGPUImageNInputFilter *, std::__1::allocator<CGPUImage::CGPUImageNInputFilter *>> _filters;
    struct map<const CGPUImage::CGPUImageNInputFilter *, CGPUImage::CGPUImageFilterGroup::FilterInfo, std::__1::less<const CGPUImage::CGPUImageNInputFilter *>, std::__1::allocator<std::__1::pair<const CGPUImage::CGPUImageNInputFilter *const, CGPUImage::CGPUImageFilterGroup::FilterInfo>>> _filterInfos;
    struct vector<CGPUImage::CGPUImageFramebuffer *, std::__1::allocator<CGPUImage::CGPUImageFramebuffer *>> _frameBuffers;
    _Bool _needRefreshFramebuffers;
    struct CGPUImageNInputFilter _rotationFilter;
    struct CGPUImageNInputFilter _horizontalFilter;
    struct CGPUImageNInputFilter _verticalFilter;
    float distanceNormalizationFactor;
    float texelSpacingMultiplier;
};

struct SmallBilateralFilter2 {
    CDUnknownFunctionPointerType *_vptr$CGPUImageBaseFilter;
    struct TaskQueue _runOnDrawTasks;
    struct CGPUImageProgram _program;
    struct vector<CGPUImage::RotationEx, std::__1::allocator<CGPUImage::RotationEx>> _rotationExList;
    basic_string_a490aa4c _vertexShader;
    basic_string_a490aa4c _fragmentShader;
    int mGLAttribPosition;
    int mGLUniformTexture;
    int mGLAttribTextureCoordinate;
    _Bool mIsInitialized;
    int _outputWidth;
    int _outputHeight;
    int _status;
    struct vector<CGPUImage::CGPUImageBaseFilter *, std::__1::allocator<CGPUImage::CGPUImageBaseFilter *>> _managesFilters;
    int _inputNumber;
    struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> _textureUniformNames;
    struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> _textureCoordinateAttributeNames;
    int *_filterTextureCoordinateAttribute;
    int *_filterInputTextureUniform;
    unsigned int *_filterSourceTexture;
    _Bool *_filterSourceTextureForDelete;
    struct RotationMatrix2_2x2 *_textureCoordinatesBuffer;
    struct vector<CGPUImage::CGPUImageNInputFilter *, std::__1::allocator<CGPUImage::CGPUImageNInputFilter *>> _filters;
    struct map<const CGPUImage::CGPUImageNInputFilter *, CGPUImage::CGPUImageFilterGroup::FilterInfo, std::__1::less<const CGPUImage::CGPUImageNInputFilter *>, std::__1::allocator<std::__1::pair<const CGPUImage::CGPUImageNInputFilter *const, CGPUImage::CGPUImageFilterGroup::FilterInfo>>> _filterInfos;
    struct vector<CGPUImage::CGPUImageFramebuffer *, std::__1::allocator<CGPUImage::CGPUImageFramebuffer *>> _frameBuffers;
    _Bool _needRefreshFramebuffers;
    struct CGPUImageNInputFilter _rotationFilter;
    struct CGPUImageNInputFilter _horizontalFilter;
    struct CGPUImageNInputFilter _verticalFilter;
    float distanceNormalizationFactor;
    float texelSpacingMultiplier;
    float fboSizeScale;
};

struct SmallBilateralFilter4 {
    CDUnknownFunctionPointerType *_vptr$CGPUImageBaseFilter;
    struct TaskQueue _runOnDrawTasks;
    struct CGPUImageProgram _program;
    struct vector<CGPUImage::RotationEx, std::__1::allocator<CGPUImage::RotationEx>> _rotationExList;
    basic_string_a490aa4c _vertexShader;
    basic_string_a490aa4c _fragmentShader;
    int mGLAttribPosition;
    int mGLUniformTexture;
    int mGLAttribTextureCoordinate;
    _Bool mIsInitialized;
    int _outputWidth;
    int _outputHeight;
    int _status;
    struct vector<CGPUImage::CGPUImageBaseFilter *, std::__1::allocator<CGPUImage::CGPUImageBaseFilter *>> _managesFilters;
    int _inputNumber;
    struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> _textureUniformNames;
    struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> _textureCoordinateAttributeNames;
    int *_filterTextureCoordinateAttribute;
    int *_filterInputTextureUniform;
    unsigned int *_filterSourceTexture;
    _Bool *_filterSourceTextureForDelete;
    struct RotationMatrix2_2x2 *_textureCoordinatesBuffer;
    struct vector<CGPUImage::CGPUImageNInputFilter *, std::__1::allocator<CGPUImage::CGPUImageNInputFilter *>> _filters;
    struct map<const CGPUImage::CGPUImageNInputFilter *, CGPUImage::CGPUImageFilterGroup::FilterInfo, std::__1::less<const CGPUImage::CGPUImageNInputFilter *>, std::__1::allocator<std::__1::pair<const CGPUImage::CGPUImageNInputFilter *const, CGPUImage::CGPUImageFilterGroup::FilterInfo>>> _filterInfos;
    struct vector<CGPUImage::CGPUImageFramebuffer *, std::__1::allocator<CGPUImage::CGPUImageFramebuffer *>> _frameBuffers;
    _Bool _needRefreshFramebuffers;
    struct CGPUImageNInputFilter _rotationFilter;
    struct CGPUImageNInputFilter _horizontalFilter;
    struct CGPUImageNInputFilter _verticalFilter;
    float distanceNormalizationFactor;
    float texelSpacingMultiplier;
    float fboSizeScale;
};

struct SmallGaussianBlurFilter {
    CDUnknownFunctionPointerType *_vptr$CGPUImageBaseFilter;
    struct TaskQueue _runOnDrawTasks;
    struct CGPUImageProgram _program;
    struct vector<CGPUImage::RotationEx, std::__1::allocator<CGPUImage::RotationEx>> _rotationExList;
    basic_string_a490aa4c _vertexShader;
    basic_string_a490aa4c _fragmentShader;
    int mGLAttribPosition;
    int mGLUniformTexture;
    int mGLAttribTextureCoordinate;
    _Bool mIsInitialized;
    int _outputWidth;
    int _outputHeight;
    int _status;
    struct vector<CGPUImage::CGPUImageBaseFilter *, std::__1::allocator<CGPUImage::CGPUImageBaseFilter *>> _managesFilters;
    int _inputNumber;
    struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> _textureUniformNames;
    struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> _textureCoordinateAttributeNames;
    int *_filterTextureCoordinateAttribute;
    int *_filterInputTextureUniform;
    unsigned int *_filterSourceTexture;
    _Bool *_filterSourceTextureForDelete;
    struct RotationMatrix2_2x2 *_textureCoordinatesBuffer;
    struct vector<CGPUImage::CGPUImageNInputFilter *, std::__1::allocator<CGPUImage::CGPUImageNInputFilter *>> _filters;
    struct map<const CGPUImage::CGPUImageNInputFilter *, CGPUImage::CGPUImageFilterGroup::FilterInfo, std::__1::less<const CGPUImage::CGPUImageNInputFilter *>, std::__1::allocator<std::__1::pair<const CGPUImage::CGPUImageNInputFilter *const, CGPUImage::CGPUImageFilterGroup::FilterInfo>>> _filterInfos;
    struct vector<CGPUImage::CGPUImageFramebuffer *, std::__1::allocator<CGPUImage::CGPUImageFramebuffer *>> _frameBuffers;
    _Bool _needRefreshFramebuffers;
    struct CGPUImageNInputFilter _rotationFilter;
    struct CGPUImageNInputFilter _horizontalFilter;
    struct CGPUImageNInputFilter _verticalFilter;
    float blurSize;
    float fboSizeScale;
};

struct SmallGaussianBlurFilter4 {
    CDUnknownFunctionPointerType *_vptr$CGPUImageBaseFilter;
    struct TaskQueue _runOnDrawTasks;
    struct CGPUImageProgram _program;
    struct vector<CGPUImage::RotationEx, std::__1::allocator<CGPUImage::RotationEx>> _rotationExList;
    basic_string_a490aa4c _vertexShader;
    basic_string_a490aa4c _fragmentShader;
    int mGLAttribPosition;
    int mGLUniformTexture;
    int mGLAttribTextureCoordinate;
    _Bool mIsInitialized;
    int _outputWidth;
    int _outputHeight;
    int _status;
    struct vector<CGPUImage::CGPUImageBaseFilter *, std::__1::allocator<CGPUImage::CGPUImageBaseFilter *>> _managesFilters;
    int _inputNumber;
    struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> _textureUniformNames;
    struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> _textureCoordinateAttributeNames;
    int *_filterTextureCoordinateAttribute;
    int *_filterInputTextureUniform;
    unsigned int *_filterSourceTexture;
    _Bool *_filterSourceTextureForDelete;
    struct RotationMatrix2_2x2 *_textureCoordinatesBuffer;
    struct vector<CGPUImage::CGPUImageNInputFilter *, std::__1::allocator<CGPUImage::CGPUImageNInputFilter *>> _filters;
    struct map<const CGPUImage::CGPUImageNInputFilter *, CGPUImage::CGPUImageFilterGroup::FilterInfo, std::__1::less<const CGPUImage::CGPUImageNInputFilter *>, std::__1::allocator<std::__1::pair<const CGPUImage::CGPUImageNInputFilter *const, CGPUImage::CGPUImageFilterGroup::FilterInfo>>> _filterInfos;
    struct vector<CGPUImage::CGPUImageFramebuffer *, std::__1::allocator<CGPUImage::CGPUImageFramebuffer *>> _frameBuffers;
    _Bool _needRefreshFramebuffers;
    struct CGPUImageNInputFilter _rotationFilter;
    struct CGPUImageNInputFilter _horizontalFilter;
    struct CGPUImageNInputFilter _verticalFilter;
    float blurSize;
    float fboSizeScale;
};

struct SoundTouch;

struct SpeedChangeStat_t {
    int down_duration;
    int up_1_duration;
    int up_2_duration;
};

struct SpeexPreprocessState_;

struct SpringSolver<POP::Vector4<double>> {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
    double _field5;
    double _field6;
    double _field7;
    struct SSState<POP::Vector4<double>> _field8;
    struct Vector4<double> _field9;
    _Bool _field10;
};

struct Sprite2dInterChangeMultiple {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    int _field3;
    int _field4;
    int _field5;
    int _field6;
    int _field7;
    int _field8;
    int _field9;
    int _field10;
    int _field11;
    int _field12;
    int _field13;
    struct ProgramObject _field14;
    struct SharedTexture _field15;
    unsigned int _field16;
    basic_string_a490aa4c _field17;
    basic_string_a490aa4c _field18;
    vector_7545d2eb _field19;
    struct vector<CGE::Sprite2dInterChangeMultiple::SpriteFrame, std::__1::allocator<CGE::Sprite2dInterChangeMultiple::SpriteFrame>> _field20;
    unsigned int _field21;
    double _field22;
    double _field23;
    double _field24;
    _Bool _field25;
    _Bool _field26;
    _Bool _field27;
    _Bool _field28;
    CDUnknownFunctionPointerType *_field29;
    Vec_190d90d4 _field30;
    Vec_190d90d4 _field31;
    Vec_190d90d4 _field32;
    float _field33;
    float _field34;
    float _field35;
    _Bool _field36;
};

struct Sprite2dInterChangeMultipleWithBlend {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    int _field3;
    int _field4;
    int _field5;
    int _field6;
    int _field7;
    int _field8;
    int _field9;
    int _field10;
    int _field11;
    int _field12;
    int _field13;
    struct ProgramObject _field14;
    struct SharedTexture _field15;
    unsigned int _field16;
    basic_string_a490aa4c _field17;
    basic_string_a490aa4c _field18;
    vector_7545d2eb _field19;
    struct vector<CGE::Sprite2dInterChangeMultiple::SpriteFrame, std::__1::allocator<CGE::Sprite2dInterChangeMultiple::SpriteFrame>> _field20;
    unsigned int _field21;
    double _field22;
    double _field23;
    double _field24;
    _Bool _field25;
    _Bool _field26;
    _Bool _field27;
    _Bool _field28;
    struct vector<char, std::__1::allocator<char>> _field29;
    struct vector<char, std::__1::allocator<char>> _field30;
    int _field31;
    char *_field32;
    char *_field33;
    CDUnknownFunctionPointerType *_field34;
    Vec_190d90d4 _field35;
    Vec_190d90d4 _field36;
    Vec_190d90d4 _field37;
    float _field38;
    float _field39;
    float _field40;
    _Bool _field41;
};

struct Sprite2dVideoBlend {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    int _field3;
    int _field4;
    int _field5;
    int _field6;
    int _field7;
    int _field8;
    int _field9;
    int _field10;
    int _field11;
    int _field12;
    int _field13;
    struct ProgramObject _field14;
    struct SharedTexture _field15;
    int _field16;
    basic_string_a490aa4c _field17;
    CDUnknownFunctionPointerType *_field18;
    Vec_190d90d4 _field19;
    Vec_190d90d4 _field20;
    Vec_190d90d4 _field21;
    float _field22;
    float _field23;
    float _field24;
    _Bool _field25;
};

struct SpriteFrame;

struct Stack<rapidjson::CrtAllocator> {
    struct CrtAllocator *_field1;
    struct CrtAllocator *_field2;
    char *_field3;
    char *_field4;
    char *_field5;
    unsigned long long _field6;
};

struct StepOp;

struct String {
    unsigned int _field1;
    unsigned int _field2;
    char *_field3;
};

struct SubAssetDecodeService {
    _Bool _field1;
    double _field2;
    struct map<unsigned long long, AVFrame *, std::__1::less<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, AVFrame *>>> _field3;
    struct unique_ptr<kuaishou::editorsdk2::DecodePositionChangeRequest, std::__1::default_delete<kuaishou::editorsdk2::DecodePositionChangeRequest>> _field4;
    struct mutex _field5;
    struct mutex _field6;
    struct condition_variable _field7;
    struct condition_variable _field8;
    struct thread _field9;
    struct VideoEditorProject _field10;
    struct vector<kuaishou::editorsdk2::model::EditorSdkError, std::__1::allocator<kuaishou::editorsdk2::model::EditorSdkError>> _field11;
    basic_string_a490aa4c _field12;
};

struct SubAssetRenderRangeBuilder {
    int _field1;
    struct vector<kuaishou::editorsdk2::model::RenderRange, std::__1::allocator<kuaishou::editorsdk2::model::RenderRange>> _field2;
    struct unordered_map<unsigned long long, int, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, int>>> _field3;
};

struct SwsContext;

struct TAGPBExtensionDescription {
    char *_field1;
    int _field2;
    char *_field3;
    int _field4;
    CDUnion_3de46016 _field5;
    char *_field6;
    unsigned int _field7;
    char *_field8;
};

struct TAGPBInputBufferState {
    char *bytes;
    unsigned long long bufferSize;
    unsigned long long bufferPos;
    unsigned long long currentLimit;
};

struct TAGPBMessageEnumDescription {
    char *_field1;
};

struct TAGPBMessageEnumValueDescription {
    char *_field1;
    int _field2;
};

struct TAGPBMessageExtensionRangeDescription {
    unsigned int _field1;
    unsigned int _field2;
};

struct TAGPBMessageFieldDescription {
    char *_field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    int _field5;
    unsigned long long _field6;
    char *_field7;
    CDUnion_3de46016 _field8;
    union {
        char *_field1;
        CDUnknownFunctionPointerType _field2;
    } _field9;
};

struct TAGPBOutputBufferState {
    char *bytes;
    unsigned long long size;
    unsigned long long position;
    NSOutputStream *output;
};

struct TC_FaceAlignmentRunner {
    struct UFA *_field1;
};

struct TaskMsg {
    struct Location _field1;
    struct Callback<void ()> _field2;
};

struct TaskQueue {
    struct mutex _mutex;
    struct map<std::__1::basic_string<char>, std::__1::function<void ()>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::function<void ()>>>> _tasks;
};

struct TemporalBilateralOp;

struct TextureCache {
    unsigned int _field1;
    struct CGESizei _field2;
};

struct TextureDrawer {
    CDUnknownFunctionPointerType *_field1;
    struct ProgramObject _field2;
    unsigned int _field3;
    int _field4;
    int _field5;
};

struct TextureDrawerYUV;

struct TextureMeshData;

struct ThumbnailJob;

struct TimeActionInterfaceAbstract;

struct TimeEffectParam;

struct TimeLineInterface<CGE::AnimationInterfaceAbstract<CGE::TimeActionInterfaceAbstract>> {
    CDUnknownFunctionPointerType *_field1;
    float _field2;
    float _field3;
    _Bool _field4;
    struct vector<CGE::TimeActionInterfaceAbstract *, std::__1::allocator<CGE::TimeActionInterfaceAbstract *>> _field5;
    struct vector<CGE::TimeActionInterfaceAbstract *, std::__1::allocator<CGE::TimeActionInterfaceAbstract *>> _field6;
    float _field7;
    float _field8;
    struct vector<CGE::AnimationInterfaceAbstract<CGE::TimeActionInterfaceAbstract>*, std::__1::allocator<CGE::AnimationInterfaceAbstract<CGE::TimeActionInterfaceAbstract>*>> _field9;
    struct vector<CGE::AnimationInterfaceAbstract<CGE::TimeActionInterfaceAbstract>*, std::__1::allocator<CGE::AnimationInterfaceAbstract<CGE::TimeActionInterfaceAbstract>*>> _field10;
    struct vector<CGE::AnimationInterfaceAbstract<CGE::TimeActionInterfaceAbstract>*, std::__1::allocator<CGE::AnimationInterfaceAbstract<CGE::TimeActionInterfaceAbstract>*>> _field11;
    struct vector<CGE::SharedTexture, std::__1::allocator<CGE::SharedTexture>> _field12;
    _Bool _field13;
};

struct TimeMessageCenter {
    int _field1;
    struct mutex _field2;
    struct thread _field3;
    struct condition_variable _field4;
    _Bool _field5;
    struct function<void (double)> _field6;
    struct BlockingQueue<double> _field7;
};

struct TouchState;

struct TouchStateMachine {
    CDUnknownFunctionPointerType *_vptr$TouchStateMachine;
    struct shared_ptr<ARTouchFSM::TouchState> state_;
};

struct TrackAudioDecodeService {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    _Bool _field3;
    _Bool _field4;
    _Bool _field5;
    int _field6;
    int _field7;
    int _field8;
    struct unique_ptr<kuaishou::editorsdk2::DecodePositionChangeRequest, std::__1::default_delete<kuaishou::editorsdk2::DecodePositionChangeRequest>> _field9;
    struct mutex _field10;
    struct mutex _field11;
    struct thread _field12;
    struct AudioSampleRingBuffer<unsigned char> _field13;
    int _field14;
    struct VideoEditorProject _field15;
    struct condition_variable _field16;
    struct unique_ptr<editorsdksoundtouch::SoundTouch, std::__1::default_delete<editorsdksoundtouch::SoundTouch>> _field17;
};

struct TrackVideoDecodeService {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    _Bool _field3;
    _Bool _field4;
    _Bool _field5;
    _Bool _field6;
    int _field7;
    struct unordered_map<unsigned long long, std::__1::unique_ptr<kuaishou::editorsdk2::ReverseFrameCache, std::__1::default_delete<kuaishou::editorsdk2::ReverseFrameCache>>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::unique_ptr<kuaishou::editorsdk2::ReverseFrameCache, std::__1::default_delete<kuaishou::editorsdk2::ReverseFrameCache>>>>> _field8;
    struct unique_ptr<kuaishou::editorsdk2::DecodePositionChangeRequest, std::__1::default_delete<kuaishou::editorsdk2::DecodePositionChangeRequest>> _field9;
    struct unique_ptr<kuaishou::editorsdk2::DecodePositionChangeRequest, std::__1::default_delete<kuaishou::editorsdk2::DecodePositionChangeRequest>> _field10;
    struct mutex _field11;
    struct mutex _field12;
    struct mutex _field13;
    struct condition_variable _field14;
    struct thread _field15;
    struct thread _field16;
    struct BlockingQueue<std::__1::unique_ptr<AVFrame, void (*)(AVFrame *)>> _field17;
    struct VideoEditorProject _field18;
    struct PerfLogger *_field19;
    struct EditorSdkError _field20;
    _Bool _field21;
    basic_string_a490aa4c _field22;
};

struct TransformOp;

struct U {
    unsigned int _field1;
    char _field2[4];
};

struct UFA;

struct UIColor {
    Class _field1;
};

struct UIEdgeInsets {
    double top;
    double left;
    double bottom;
    double right;
};

struct UIImage {
    Class _field1;
};

struct UMatData;

struct URLContext {
    struct AVClass *_field1;
    struct URLProtocol *_field2;
    void *_field3;
    char *_field4;
    int _field5;
    long long _field6;
    int _field7;
    int _field8;
    int _field9;
    int _field10;
    int _field11;
    int _field12;
    int _field13;
    int _field14;
    int _field15;
    int _field16;
    int _field17;
    struct AVIOInterruptCB _field18;
    long long _field19;
    char *_field20;
    long long _field21;
    long long _field22;
};

struct URLProtocol;

struct Vec<float, 2> {
    float m_data[2];
};

struct Vec<float, 3> {
    float _field1[3];
};

struct Vec<float, 4> {
    float m_data[4];
};

struct Vec<int, 2> {
    int m_data[2];
};

struct Vec<int, 4> {
    int m_data[4];
};

struct Vector3 {
    float one;
    float two;
    float three;
};

struct Vector4<double> {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
};

struct VideoCallback {
    struct AVAudioEnableDelegate<VideoCallback> _field1;
    struct AVAudioEnableDelegate<VideoCallback> _field2;
    struct AVSwitchDelegate<VideoCallback> _field3;
    struct AVAudioEnableDelegate<VideoCallback> _field4;
    void *_field5;
};

struct VideoColorProperties {
    CDUnknownFunctionPointerType *_field1;
    struct ArenaStringPtr _field2;
    struct Arena *_field3;
    _Bool _field4;
    int _field5;
    int _field6;
    int _field7;
    int _field8;
    int _field9;
};

struct VideoEditorProject {
    CDUnknownFunctionPointerType *_field1;
    struct ArenaStringPtr _field2;
    struct Arena *_field3;
    _Bool _field4;
    long long _field5;
    int _field6;
    int _field7;
    double _field8;
    struct RepeatedPtrField<kuaishou::editorsdk2::model::TrackAsset> _field9;
    struct RepeatedPtrField<kuaishou::editorsdk2::model::SubAsset> _field10;
    struct RepeatedPtrField<kuaishou::editorsdk2::model::AudioAsset> _field11;
    struct RepeatedPtrField<kuaishou::editorsdk2::model::TimeRange> _field12;
    struct RepeatedPtrField<kuaishou::editorsdk2::model::VisualEffectParam> _field13;
    struct TimeEffectParam *_field14;
    struct ColorFilterParam *_field15;
    struct BeautyFilterParam *_field16;
    double _field17;
    unsigned int _field18;
    _Bool _field19;
    double _field20;
    int _field21;
};

struct VideoFrame {
    basic_string_1cdf7af0 _field1;
    struct VideoFrameDesc _field2;
    unsigned int _field3;
    char *_field4;
    unsigned long long _field5;
};

struct VideoFrameDesc {
    int _field1;
    unsigned int _field2;
    unsigned int _field3;
    _Bool _field4;
    unsigned int _field5;
    int _field6;
    int _field7;
};

struct VideoFrameDrawer {
    CDUnknownFunctionPointerType *_field1;
    struct ProgramObject _field2;
    unsigned int _field3;
    int _field4;
    int _field5;
};

struct VirtualFaceProcessor;

struct WBSDKJKConstBuffer {
    struct WBSDKJKConstPtrRange _field1;
};

struct WBSDKJKConstPtrRange {
    char *_field1;
    unsigned long long _field2;
};

struct WBSDKJKEncodeCache {
    id _field1;
    unsigned long long _field2;
    unsigned long long _field3;
};

struct WBSDKJKEncodeState {
    struct WBSDKJKManagedBuffer _field1;
    struct WBSDKJKManagedBuffer _field2;
    unsigned long long _field3;
    struct WBSDKJKFastClassLookup _field4;
    struct WBSDKJKEncodeCache _field5[1024];
    unsigned long long _field6;
    unsigned long long _field7;
    unsigned long long _field8;
    id _field9;
    id _field10;
    SEL _field11;
    CDUnknownFunctionPointerType _field12;
    CDUnknownBlockType _field13;
};

struct WBSDKJKFastClassLookup {
    void *_field1;
    void *_field2;
    void *_field3;
    void *_field4;
    void *_field5;
};

struct WBSDKJKHashTableEntry {
    unsigned long long _field1;
    id _field2;
    id _field3;
};

struct WBSDKJKManagedBuffer {
    struct WBSDKJKPtrRange _field1;
    unsigned long long _field2;
    unsigned long long _field3;
};

struct WBSDKJKObjCImpCache {
    Class _field1;
    CDUnknownFunctionPointerType _field2;
    CDUnknownFunctionPointerType _field3;
};

struct WBSDKJKObjectStack {
    void **_field1;
    void **_field2;
    unsigned long long *_field3;
    unsigned long long _field4;
    unsigned long long _field5;
    unsigned long long _field6;
    unsigned long long _field7;
};

struct WBSDKJKParseState {
    unsigned long long _field1;
    struct WBSDKJKConstBuffer _field2;
    unsigned long long _field3;
    unsigned long long _field4;
    unsigned long long _field5;
    unsigned long long _field6;
    unsigned long long _field7;
    unsigned long long _field8;
    struct WBSDKJKParseToken _field9;
    struct WBSDKJKObjectStack _field10;
    struct WBSDKJKTokenCache _field11;
    struct WBSDKJKObjCImpCache _field12;
    id _field13;
    int _field14;
    _Bool _field15;
};

struct WBSDKJKParseToken {
    struct WBSDKJKConstPtrRange _field1;
    unsigned long long _field2;
    struct WBSDKJKTokenValue _field3;
    struct WBSDKJKManagedBuffer _field4;
};

struct WBSDKJKPtrRange {
    char *_field1;
    unsigned long long _field2;
};

struct WBSDKJKTokenCache {
    struct WBSDKJKTokenCacheItem *_field1;
    unsigned long long _field2;
    unsigned int _field3;
    unsigned char _field4[1024];
};

struct WBSDKJKTokenCacheItem;

struct WBSDKJKTokenValue {
    struct WBSDKJKConstPtrRange _field1;
    unsigned long long _field2;
    unsigned long long _field3;
    CDUnion_abebb5d1 _field4;
    struct WBSDKJKTokenCacheItem *_field5;
};

struct X264Opts {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
    int _field5;
};

struct _Alloc_hider {
    char *_field1;
};

struct _DDRange {
    unsigned long long _field1;
    unsigned long long _field2;
};

struct _FFPktList {
    struct AVPacketList *_ffPktList;
    struct AVPacketList *_ffPktListEnd;
    int _ffPktSize;
};

struct _IplImage {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
    int _field5;
    char _field6[4];
    char _field7[4];
    int _field8;
    int _field9;
    int _field10;
    int _field11;
    int _field12;
    struct _IplROI *_field13;
    struct _IplImage *_field14;
    void *_field15;
    struct _IplTileInfo *_field16;
    int _field17;
    char *_field18;
    int _field19;
    int _field20[4];
    int _field21[4];
    char *_field22;
};

struct _IplROI;

struct _IplTileInfo;

struct _KSYAudioFormat {
    int sampleFmt;
    int sampleSize;
    int chCnt;
    long long chLayout;
    int sampleRate;
};

struct _KpgMetaData {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
};

struct _KpgResult {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    char *_field4;
    unsigned int _field5;
};

struct _NSRange {
    unsigned long long location;
    unsigned long long length;
};

struct _POPAnimationState {
    CDUnknownFunctionPointerType *_field1;
    id _field2;
    int _field3;
    id _field4;
    unsigned long long _field5;
    double _field6;
    double _field7;
    double _field8;
    id _field9;
    CDUnknownBlockType _field10;
    id _field11;
    id _field12;
    double _field13;
    long long _field14;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
};

struct _Rect {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
};

struct _TC_FaceProfile {
    vector_71c4c584 points;
};

struct _TC_FaceShape {
    struct _TC_FaceProfile faceProfile;
    struct _TC_LeftEyebrow leftEyebrow;
    struct _TC_RightEyebrow rightEyebrow;
    struct _TC_LeftEye leftEye;
    struct _TC_RightEye rightEye;
    struct _TC_Nose nose;
    struct _TC_Mouth mouth;
    struct _TC_Pupil pupil;
};

struct _TC_LeftEye {
    vector_71c4c584 points;
};

struct _TC_LeftEyebrow {
    vector_71c4c584 points;
};

struct _TC_Mouth {
    vector_71c4c584 points;
};

struct _TC_Nose {
    vector_71c4c584 points;
};

struct _TC_Pupil {
    vector_71c4c584 points;
};

struct _TC_RightEye {
    vector_71c4c584 points;
};

struct _TC_RightEyebrow {
    vector_71c4c584 points;
};

struct __CVBuffer;

struct __CVOpenGLESTextureCache;

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::unique_ptr<kuaishou::editorsdk2::VisualEffectBase, std::__1::default_delete<kuaishou::editorsdk2::VisualEffectBase>>>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::unique_ptr<kuaishou::editorsdk2::VisualEffectBase, std::__1::default_delete<kuaishou::editorsdk2::VisualEffectBase>>>, void *>*> *_field1;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, std::__1::__list_iterator<kuaishou::editorsdk2::LRUFrameCache::Item, void *>>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, std::__1::__list_iterator<kuaishou::editorsdk2::LRUFrameCache::Item, void *>>, void *>*> *_field1;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, bool>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, bool>, void *>*> *_field1;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, int>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, int>, void *>*> *_field1;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<kuaishou::editorsdk2::ReverseFrameCache, std::__1::default_delete<kuaishou::editorsdk2::ReverseFrameCache>>>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<kuaishou::editorsdk2::ReverseFrameCache, std::__1::default_delete<kuaishou::editorsdk2::ReverseFrameCache>>>, void *>*> *_field1;
};

struct __list_node_base<CGETextureInfo, void *> {
    struct __list_node_base<CGETextureInfo, void *> *_field1;
    struct __list_node_base<CGETextureInfo, void *> *_field2;
};

struct __list_node_base<KSLiveHeartInstance *, void *> {
    struct __list_node_base<KSLiveHeartInstance *, void *> *__prev_;
    struct __list_node_base<KSLiveHeartInstance *, void *> *__next_;
};

struct __list_node_base<kuaishou::editorsdk2::LRUFrameCache::Item, void *> {
    struct __list_node_base<kuaishou::editorsdk2::LRUFrameCache::Item, void *> *_field1;
    struct __list_node_base<kuaishou::editorsdk2::LRUFrameCache::Item, void *> *_field2;
};

struct __list_node_base<std::__1::pair<kuaishou::editorsdk2::model::ColorFilterParam, std::__1::unique_ptr<kuaishou::editorsdk2::LegacyColorFilter, std::__1::default_delete<kuaishou::editorsdk2::LegacyColorFilter>>>, void *> {
    struct __list_node_base<std::__1::pair<kuaishou::editorsdk2::model::ColorFilterParam, std::__1::unique_ptr<kuaishou::editorsdk2::LegacyColorFilter, std::__1::default_delete<kuaishou::editorsdk2::LegacyColorFilter>>>, void *> *_field1;
    struct __list_node_base<std::__1::pair<kuaishou::editorsdk2::model::ColorFilterParam, std::__1::unique_ptr<kuaishou::editorsdk2::LegacyColorFilter, std::__1::default_delete<kuaishou::editorsdk2::LegacyColorFilter>>>, void *> *_field2;
};

struct __list_node_base<std::__1::shared_ptr<POPAnimatorItem>, void *> {
    struct __list_node_base<std::__1::shared_ptr<POPAnimatorItem>, void *> *__prev_;
    struct __list_node_base<std::__1::shared_ptr<POPAnimatorItem>, void *> *__next_;
};

struct __list_node_base<unsigned int, void *> {
    struct __list_node_base<unsigned int, void *> *__prev_;
    struct __list_node_base<unsigned int, void *> *__next_;
};

struct __sbuf {
    char *_field1;
    int _field2;
};

struct __shared_weak_count;

struct __tree_end_node<std::__1::__tree_node_base<void *>*> {
    struct __tree_node_base<void *> *__left_;
};

struct _opaque_pthread_cond_t {
    long long _field1;
    char _field2[40];
};

struct _opaque_pthread_mutex_t {
    long long __sig;
    char __opaque[56];
};

struct _opaque_pthread_t {
    long long _field1;
    struct __darwin_pthread_handler_rec *_field2;
    char _field3[8176];
};

struct _utils {
    CDUnknownFunctionPointerType _field1;
};

struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
    struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
        struct __rep {
            union {
                struct __long {
                    char *__data_;
                    unsigned long long __size_;
                    unsigned long long __cap_;
                } __l;
                struct __short {
                    char __data_[23];
                    struct {
                        unsigned char __size_;
                    } ;
                } __s;
                struct __raw {
                    unsigned long long __words[3];
                } __r;
            } ;
        } __first_;
    } __r_;
};

struct basic_string<char, std::char_traits<char>, std::allocator<char>> {
    struct _Alloc_hider _field1;
};

struct cJSON {
    struct cJSON *_field1;
    struct cJSON *_field2;
    struct cJSON *_field3;
    int _field4;
    char *_field5;
    int _field6;
    double _field7;
    char *_field8;
};

struct cgeScriptControl {
    struct lua_State *_field1;
    struct vector<std::__1::map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char>>>>*, std::__1::allocator<std::__1::map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char>>>>*>> _field2;
    struct vector<std::__1::map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char>>>>*, std::__1::allocator<std::__1::map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char>>>>*>> _field3;
};

struct condition_variable {
    struct _opaque_pthread_cond_t _field1;
};

struct depthInfor;

struct duration<long long, std::__1::ratio<1, 1000000000>> {
    long long __rep_;
};

struct function<CGPUImage::Mesh *()> {
    struct type __buf_;
    struct __base<CGPUImage::Mesh *()> *__f_;
};

struct function<bool ()> {
    struct type __buf_;
    struct __base<bool ()> *__f_;
};

struct function<double ()> {
    struct type _field1;
    struct __base<double ()> *_field2;
};

struct function<kuaishou::editorsdk2::ThumbnailJob ()> {
    struct type _field1;
    struct __base<kuaishou::editorsdk2::ThumbnailJob ()> *_field2;
};

struct function<std::__1::unique_ptr<AVFrame, void (*)(AVFrame *)>()> {
    struct type _field1;
    struct __base<std::__1::unique_ptr<AVFrame, void (*)(AVFrame *)>()> *_field2;
};

struct function<std::__1::vector<CGPUImage::CGPUImageRenderTexture, std::__1::allocator<CGPUImage::CGPUImageRenderTexture>>()> {
    struct type __buf_;
    struct __base<std::__1::vector<CGPUImage::CGPUImageRenderTexture, std::__1::allocator<CGPUImage::CGPUImageRenderTexture>>()> *__f_;
};

struct function<std::__1::vector<float, std::__1::allocator<float>>()> {
    struct type __buf_;
    struct __base<std::__1::vector<float, std::__1::allocator<float>>()> *__f_;
};

struct function<std::__1::vector<int, std::__1::allocator<int>>()> {
    struct type __buf_;
    struct __base<std::__1::vector<int, std::__1::allocator<int>>()> *__f_;
};

struct function<void ()> {
    struct type __buf_;
    struct __base<void ()> *__f_;
};

struct function<void (double)> {
    struct type _field1;
    struct __base<void (double)> *_field2;
};

struct function<void (kuaishou::editorsdk2::model::ExportEvent)> {
    struct type _field1;
    struct __base<void (kuaishou::editorsdk2::model::ExportEvent)> *_field2;
};

struct function<void (kuaishou::editorsdk2::model::PerfEntry)> {
    struct type _field1;
    struct __base<void (kuaishou::editorsdk2::model::PerfEntry)> *_field2;
};

struct function<void (kuaishou::editorsdk2::model::PreviewEvent)> {
    struct type _field1;
    struct __base<void (kuaishou::editorsdk2::model::PreviewEvent)> *_field2;
};

struct function<void (unsigned char *, unsigned char *, const kuaishou::editorsdk2::model::FrameBeautyDesc &, int *)> {
    struct type _field1;
    struct __base<void (unsigned char *, unsigned char *, const kuaishou::editorsdk2::model::FrameBeautyDesc &, int *)> *_field2;
};

struct gzFile_s {
    unsigned int _field1;
    char *_field2;
    long long _field3;
};

struct in6_addr {
    union {
        unsigned char _field1[16];
        unsigned short _field2[8];
        unsigned int _field3[4];
    } _field1;
};

struct in_addr {
    unsigned int _field1;
};

struct list<CGETextureInfo, std::__1::allocator<CGETextureInfo>> {
    struct __list_node_base<CGETextureInfo, void *> _field1;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<CGETextureInfo, void *>>> {
        unsigned long long _field1;
    } _field2;
};

struct list<KSLiveHeartInstance *, std::__1::allocator<KSLiveHeartInstance *>> {
    struct __list_node_base<KSLiveHeartInstance *, void *> __end_;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<KSLiveHeartInstance *, void *>>> {
        unsigned long long __first_;
    } __size_alloc_;
};

struct list<kuaishou::editorsdk2::LRUFrameCache::Item, std::__1::allocator<kuaishou::editorsdk2::LRUFrameCache::Item>> {
    struct __list_node_base<kuaishou::editorsdk2::LRUFrameCache::Item, void *> _field1;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<kuaishou::editorsdk2::LRUFrameCache::Item, void *>>> {
        unsigned long long _field1;
    } _field2;
};

struct list<std::__1::pair<kuaishou::editorsdk2::model::ColorFilterParam, std::__1::unique_ptr<kuaishou::editorsdk2::LegacyColorFilter, std::__1::default_delete<kuaishou::editorsdk2::LegacyColorFilter>>>, std::__1::allocator<std::__1::pair<kuaishou::editorsdk2::model::ColorFilterParam, std::__1::unique_ptr<kuaishou::editorsdk2::LegacyColorFilter, std::__1::default_delete<kuaishou::editorsdk2::LegacyColorFilter>>>>> {
    struct __list_node_base<std::__1::pair<kuaishou::editorsdk2::model::ColorFilterParam, std::__1::unique_ptr<kuaishou::editorsdk2::LegacyColorFilter, std::__1::default_delete<kuaishou::editorsdk2::LegacyColorFilter>>>, void *> _field1;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<std::__1::pair<kuaishou::editorsdk2::model::ColorFilterParam, std::__1::unique_ptr<kuaishou::editorsdk2::LegacyColorFilter, std::__1::default_delete<kuaishou::editorsdk2::LegacyColorFilter>>>, void *>>> {
        unsigned long long _field1;
    } _field2;
};

struct list<std::__1::shared_ptr<KS::SpeedTestResult>, std::__1::allocator<std::__1::shared_ptr<KS::SpeedTestResult>>>;

struct list<std::__1::shared_ptr<POPAnimatorItem>, std::__1::allocator<std::__1::shared_ptr<POPAnimatorItem>>> {
    struct __list_node_base<std::__1::shared_ptr<POPAnimatorItem>, void *> __end_;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<std::__1::shared_ptr<POPAnimatorItem>, void *>>> {
        unsigned long long __first_;
    } __size_alloc_;
};

struct list<unsigned int, std::__1::allocator<unsigned int>> {
    struct __list_node_base<unsigned int, void *> __end_;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<unsigned int, void *>>> {
        unsigned long long __first_;
    } __size_alloc_;
};

struct lua_State;

struct map<const CGPUImage::CGPUImageNInputFilter *, CGPUImage::CGPUImageFilterGroup::FilterInfo, std::__1::less<const CGPUImage::CGPUImageNInputFilter *>, std::__1::allocator<std::__1::pair<const CGPUImage::CGPUImageNInputFilter *const, CGPUImage::CGPUImageFilterGroup::FilterInfo>>> {
    struct __tree<std::__1::__value_type<const CGPUImage::CGPUImageNInputFilter *, CGPUImage::CGPUImageFilterGroup::FilterInfo>, std::__1::__map_value_compare<const CGPUImage::CGPUImageNInputFilter *, std::__1::__value_type<const CGPUImage::CGPUImageNInputFilter *, CGPUImage::CGPUImageFilterGroup::FilterInfo>, std::__1::less<const CGPUImage::CGPUImageNInputFilter *>, true>, std::__1::allocator<std::__1::__value_type<const CGPUImage::CGPUImageNInputFilter *, CGPUImage::CGPUImageFilterGroup::FilterInfo>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<const CGPUImage::CGPUImageNInputFilter *, CGPUImage::CGPUImageFilterGroup::FilterInfo>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<const CGPUImage::CGPUImageNInputFilter *, std::__1::__value_type<const CGPUImage::CGPUImageNInputFilter *, CGPUImage::CGPUImageFilterGroup::FilterInfo>, std::__1::less<const CGPUImage::CGPUImageNInputFilter *>, true>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct map<int, CGPUImage::__tag_pointf, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, CGPUImage::__tag_pointf>>> {
    struct __tree<std::__1::__value_type<int, CGPUImage::__tag_pointf>, std::__1::__map_value_compare<int, std::__1::__value_type<int, CGPUImage::__tag_pointf>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, CGPUImage::__tag_pointf>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, CGPUImage::__tag_pointf>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<int, std::__1::__value_type<int, CGPUImage::__tag_pointf>, std::__1::less<int>, true>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct map<int, unsigned int, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, unsigned int>>> {
    struct __tree<std::__1::__value_type<int, unsigned int>, std::__1::__map_value_compare<int, std::__1::__value_type<int, unsigned int>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, unsigned int>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, unsigned int>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<int, std::__1::__value_type<int, unsigned int>, std::__1::less<int>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::basic_string<char>, CGE::CGECacheFilter *, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, CGE::CGECacheFilter *>>> {
    struct __tree<std::__1::__value_type<std::__1::basic_string<char>, CGE::CGECacheFilter *>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, CGE::CGECacheFilter *>, std::__1::less<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, CGE::CGECacheFilter *>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, CGE::CGECacheFilter *>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, CGE::CGECacheFilter *>, std::__1::less<std::__1::basic_string<char>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::basic_string<char>, CGE::SharedTexture, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, CGE::SharedTexture>>> {
    struct __tree<std::__1::__value_type<std::__1::basic_string<char>, CGE::SharedTexture>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, CGE::SharedTexture>, std::__1::less<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, CGE::SharedTexture>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, CGE::SharedTexture>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, CGE::SharedTexture>, std::__1::less<std::__1::basic_string<char>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::basic_string<char>, int *, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, int *>>> {
    struct __tree<std::__1::__value_type<std::__1::basic_string<char>, int *>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, int *>, std::__1::less<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, int *>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, int *>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, int *>, std::__1::less<std::__1::basic_string<char>>, true>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char>>>>;

struct map<std::__1::basic_string<char>, std::__1::function<void ()>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::function<void ()>>>> {
    struct __tree<std::__1::__value_type<std::__1::basic_string<char>, std::__1::function<void ()>>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::function<void ()>>, std::__1::less<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::function<void ()>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::function<void ()>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::function<void ()>>, std::__1::less<std::__1::basic_string<char>>, true>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct map<std::__1::basic_string<char>, std::__1::function<void (kuaishou::editorsdk2::model::PerfEntry)>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::function<void (kuaishou::editorsdk2::model::PerfEntry)>>>> {
    struct __tree<std::__1::__value_type<std::__1::basic_string<char>, std::__1::function<void (kuaishou::editorsdk2::model::PerfEntry)>>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::function<void (kuaishou::editorsdk2::model::PerfEntry)>>, std::__1::less<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::function<void (kuaishou::editorsdk2::model::PerfEntry)>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::function<void (kuaishou::editorsdk2::model::PerfEntry)>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::function<void (kuaishou::editorsdk2::model::PerfEntry)>>, std::__1::less<std::__1::basic_string<char>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::basic_string<char>, std::__1::vector<double, std::__1::allocator<double>>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::vector<double, std::__1::allocator<double>>>>> {
    struct __tree<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<double, std::__1::allocator<double>>>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<double, std::__1::allocator<double>>>, std::__1::less<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<double, std::__1::allocator<double>>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<double, std::__1::allocator<double>>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<double, std::__1::allocator<double>>>, std::__1::less<std::__1::basic_string<char>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<unsigned long long, AVFrame *, std::__1::less<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, AVFrame *>>> {
    struct __tree<std::__1::__value_type<unsigned long long, AVFrame *>, std::__1::__map_value_compare<unsigned long long, std::__1::__value_type<unsigned long long, AVFrame *>, std::__1::less<unsigned long long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long long, AVFrame *>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned long long, AVFrame *>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned long long, std::__1::__value_type<unsigned long long, AVFrame *>, std::__1::less<unsigned long long>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct mutex {
    struct _opaque_pthread_mutex_t __m_;
};

struct objc_method_description {
    SEL _field1;
    char *_field2;
};

struct re_guts;

struct sKSExportParam {
    int outputSize_;
    int bitrate_;
    int rotation_;
};

struct scoped_refptr<QAVBase::internal::BindStateBase> {
    struct BindStateBase *_field1;
};

struct shared_ptr<ARTouchFSM::TouchState> {
    struct TouchState *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<Data> {
    struct Data *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<POPAnimatorItem> {
    struct POPAnimatorItem *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<SKwai::SKHandGestureInputEvent> {
    struct SKHandGestureInputEvent *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<VirtualFaceProcessor> {
    struct VirtualFaceProcessor *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<ar::Frame> {
    struct Frame *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<std::__1::list<std::__1::shared_ptr<KS::SpeedTestResult>, std::__1::allocator<std::__1::shared_ptr<KS::SpeedTestResult>>>> {
    struct list<std::__1::shared_ptr<KS::SpeedTestResult>, std::__1::allocator<std::__1::shared_ptr<KS::SpeedTestResult>>> *_field1;
    struct __shared_weak_count *_field2;
};

struct sockaddr {
    unsigned char _field1;
    unsigned char _field2;
    char _field3[14];
};

struct sockaddr_in {
    unsigned char _field1;
    unsigned char _field2;
    unsigned short _field3;
    struct in_addr _field4;
    char _field5[8];
};

struct sockaddr_in6 {
    unsigned char _field1;
    unsigned char _field2;
    unsigned short _field3;
    unsigned int _field4;
    struct in6_addr _field5;
    unsigned int _field6;
};

struct sockaddr_un {
    unsigned char _field1;
    unsigned char _field2;
    char _field3[104];
};

struct tagPttRequest {
    CDUnknownFunctionPointerType *_field1;
    void *_field2;
    int _field3;
    struct CScopePtr<tag_st_obj> _field4;
    unsigned long long _field5;
    unsigned char _field6;
    struct PttTransHead _field7;
    struct ReqBody _field8;
    unsigned char _field9;
    unsigned int _field10;
    unsigned int _field11;
    unsigned char _field12;
};

struct tagSsoInfo {
    CDUnknownFunctionPointerType *_field1;
    void *_field2;
    int _field3;
    struct CScopePtr<tag_st_obj> _field4;
    unsigned long long _field5;
    unsigned char _field6;
    unsigned int _field7;
    basic_string_1cdf7af0 _field8;
    basic_string_1cdf7af0 _field9;
    int _field10;
};

struct tag_st_obj;

struct thread {
    struct _opaque_pthread_t *_field1;
};

struct time_point<std::__1::chrono::steady_clock, std::__1::chrono::duration<long long, std::__1::ratio<1, 1000000000>>> {
    struct duration<long long, std::__1::ratio<1, 1000000000>> __d_;
};

struct tm_zip_s {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned int _field6;
};

struct tmat4x4<float, glm::precision::highp> {
    struct tvec4<float, glm::precision::highp> value[4];
};

struct tvec4<float, glm::precision::highp> {
    union {
        float x;
        float r;
        float s;
    } ;
    union {
        float y;
        float g;
        float t;
    } ;
    union {
        float z;
        float b;
        float p;
    } ;
    union {
        float w;
        float a;
        float q;
    } ;
};

struct type {
    unsigned char __lx[24];
};

struct unique_ptr<AVFrame, void (*)(AVFrame *)> {
    struct __compressed_pair<AVFrame *, void (*)(AVFrame *)> {
        struct AVFrame *_field1;
        CDUnknownFunctionPointerType _field2;
    } _field1;
};

struct unique_ptr<AudioPlay, std::__1::default_delete<AudioPlay>> {
    struct __compressed_pair<AudioPlay *, std::__1::default_delete<AudioPlay>> {
        struct AudioPlay *_field1;
    } _field1;
};

struct unique_ptr<SwsContext, void (*)(SwsContext *)> {
    struct __compressed_pair<SwsContext *, void (*)(SwsContext *)> {
        struct SwsContext *_field1;
        CDUnknownFunctionPointerType _field2;
    } _field1;
};

struct unique_ptr<editorsdksoundtouch::SoundTouch, std::__1::default_delete<editorsdksoundtouch::SoundTouch>> {
    struct __compressed_pair<editorsdksoundtouch::SoundTouch *, std::__1::default_delete<editorsdksoundtouch::SoundTouch>> {
        struct SoundTouch *_field1;
    } _field1;
};

struct unique_ptr<kuaishou::base::Pts [], std::__1::default_delete<kuaishou::base::Pts []>> {
    struct __compressed_pair<kuaishou::base::Pts *, std::__1::default_delete<kuaishou::base::Pts []>> {
        struct Pts *_field1;
    } _field1;
};

struct unique_ptr<kuaishou::editorsdk2::DecodePositionChangeRequest, std::__1::default_delete<kuaishou::editorsdk2::DecodePositionChangeRequest>> {
    struct __compressed_pair<kuaishou::editorsdk2::DecodePositionChangeRequest *, std::__1::default_delete<kuaishou::editorsdk2::DecodePositionChangeRequest>> {
        struct DecodePositionChangeRequest *_field1;
    } _field1;
};

struct unique_ptr<kuaishou::editorsdk2::KSEBeautyWrapper, std::__1::default_delete<kuaishou::editorsdk2::KSEBeautyWrapper>> {
    struct __compressed_pair<kuaishou::editorsdk2::KSEBeautyWrapper *, std::__1::default_delete<kuaishou::editorsdk2::KSEBeautyWrapper>> {
        struct KSEBeautyWrapper *_field1;
    } _field1;
};

struct unique_ptr<kuaishou::editorsdk2::ShaderProgram, std::__1::default_delete<kuaishou::editorsdk2::ShaderProgram>> {
    struct __compressed_pair<kuaishou::editorsdk2::ShaderProgram *, std::__1::default_delete<kuaishou::editorsdk2::ShaderProgram>> {
        struct ShaderProgram *_field1;
    } _field1;
};

struct unique_ptr<kuaishou::editorsdk2::ShaderProgramCopyBgra, std::__1::default_delete<kuaishou::editorsdk2::ShaderProgramCopyBgra>> {
    struct __compressed_pair<kuaishou::editorsdk2::ShaderProgramCopyBgra *, std::__1::default_delete<kuaishou::editorsdk2::ShaderProgramCopyBgra>> {
        struct ShaderProgramCopyBgra *_field1;
    } _field1;
};

struct unique_ptr<kuaishou::editorsdk2::ShaderProgramCopyRgba, std::__1::default_delete<kuaishou::editorsdk2::ShaderProgramCopyRgba>> {
    struct __compressed_pair<kuaishou::editorsdk2::ShaderProgramCopyRgba *, std::__1::default_delete<kuaishou::editorsdk2::ShaderProgramCopyRgba>> {
        struct ShaderProgramCopyRgba *_field1;
    } _field1;
};

struct unique_ptr<kuaishou::editorsdk2::ShaderProgramMix, std::__1::default_delete<kuaishou::editorsdk2::ShaderProgramMix>> {
    struct __compressed_pair<kuaishou::editorsdk2::ShaderProgramMix *, std::__1::default_delete<kuaishou::editorsdk2::ShaderProgramMix>> {
        struct ShaderProgramMix *_field1;
    } _field1;
};

struct unique_ptr<kuaishou::editorsdk2::ShaderProgramNv12ToRgba, std::__1::default_delete<kuaishou::editorsdk2::ShaderProgramNv12ToRgba>> {
    struct __compressed_pair<kuaishou::editorsdk2::ShaderProgramNv12ToRgba *, std::__1::default_delete<kuaishou::editorsdk2::ShaderProgramNv12ToRgba>> {
        struct ShaderProgramNv12ToRgba *_field1;
    } _field1;
};

struct unique_ptr<kuaishou::editorsdk2::ShaderProgramShowProject, std::__1::default_delete<kuaishou::editorsdk2::ShaderProgramShowProject>> {
    struct __compressed_pair<kuaishou::editorsdk2::ShaderProgramShowProject *, std::__1::default_delete<kuaishou::editorsdk2::ShaderProgramShowProject>> {
        struct ShaderProgramShowProject *_field1;
    } _field1;
};

struct unique_ptr<kuaishou::editorsdk2::ShaderProgramYuv420ToRgb, std::__1::default_delete<kuaishou::editorsdk2::ShaderProgramYuv420ToRgb>> {
    struct __compressed_pair<kuaishou::editorsdk2::ShaderProgramYuv420ToRgb *, std::__1::default_delete<kuaishou::editorsdk2::ShaderProgramYuv420ToRgb>> {
        struct ShaderProgramYuv420ToRgb *_field1;
    } _field1;
};

struct unique_ptr<short [], std::__1::default_delete<short []>> {
    struct __compressed_pair<short *, std::__1::default_delete<short []>> {
        short *_field1;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::unique_ptr<kuaishou::editorsdk2::VisualEffectBase, std::__1::default_delete<kuaishou::editorsdk2::VisualEffectBase>>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::unique_ptr<kuaishou::editorsdk2::VisualEffectBase, std::__1::default_delete<kuaishou::editorsdk2::VisualEffectBase>>>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::unique_ptr<kuaishou::editorsdk2::VisualEffectBase, std::__1::default_delete<kuaishou::editorsdk2::VisualEffectBase>>>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::unique_ptr<kuaishou::editorsdk2::VisualEffectBase, std::__1::default_delete<kuaishou::editorsdk2::VisualEffectBase>>>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::unique_ptr<kuaishou::editorsdk2::VisualEffectBase, std::__1::default_delete<kuaishou::editorsdk2::VisualEffectBase>>>, void *>*> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::unique_ptr<kuaishou::editorsdk2::VisualEffectBase, std::__1::default_delete<kuaishou::editorsdk2::VisualEffectBase>>>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::unique_ptr<kuaishou::editorsdk2::VisualEffectBase, std::__1::default_delete<kuaishou::editorsdk2::VisualEffectBase>>>, void *>*>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, std::__1::__list_iterator<kuaishou::editorsdk2::LRUFrameCache::Item, void *>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, std::__1::__list_iterator<kuaishou::editorsdk2::LRUFrameCache::Item, void *>>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, std::__1::__list_iterator<kuaishou::editorsdk2::LRUFrameCache::Item, void *>>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, std::__1::__list_iterator<kuaishou::editorsdk2::LRUFrameCache::Item, void *>>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, std::__1::__list_iterator<kuaishou::editorsdk2::LRUFrameCache::Item, void *>>, void *>*> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, std::__1::__list_iterator<kuaishou::editorsdk2::LRUFrameCache::Item, void *>>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, std::__1::__list_iterator<kuaishou::editorsdk2::LRUFrameCache::Item, void *>>, void *>*>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, bool>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, bool>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, bool>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, bool>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, bool>, void *>*> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, bool>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, bool>, void *>*>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, int>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, int>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, int>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, int>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, int>, void *>*> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, int>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, int>, void *>*>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<kuaishou::editorsdk2::ReverseFrameCache, std::__1::default_delete<kuaishou::editorsdk2::ReverseFrameCache>>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<kuaishou::editorsdk2::ReverseFrameCache, std::__1::default_delete<kuaishou::editorsdk2::ReverseFrameCache>>>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<kuaishou::editorsdk2::ReverseFrameCache, std::__1::default_delete<kuaishou::editorsdk2::ReverseFrameCache>>>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<kuaishou::editorsdk2::ReverseFrameCache, std::__1::default_delete<kuaishou::editorsdk2::ReverseFrameCache>>>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<kuaishou::editorsdk2::ReverseFrameCache, std::__1::default_delete<kuaishou::editorsdk2::ReverseFrameCache>>>, void *>*> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<kuaishou::editorsdk2::ReverseFrameCache, std::__1::default_delete<kuaishou::editorsdk2::ReverseFrameCache>>>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<kuaishou::editorsdk2::ReverseFrameCache, std::__1::default_delete<kuaishou::editorsdk2::ReverseFrameCache>>>, void *>*>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<unsigned char [], std::__1::default_delete<unsigned char []>> {
    struct __compressed_pair<unsigned char *, std::__1::default_delete<unsigned char []>> {
        char *_field1;
    } _field1;
};

struct unordered_map<int, std::__1::unique_ptr<kuaishou::editorsdk2::VisualEffectBase, std::__1::default_delete<kuaishou::editorsdk2::VisualEffectBase>>, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, std::__1::unique_ptr<kuaishou::editorsdk2::VisualEffectBase, std::__1::default_delete<kuaishou::editorsdk2::VisualEffectBase>>>>> {
    struct __hash_table<std::__1::__hash_value_type<int, std::__1::unique_ptr<kuaishou::editorsdk2::VisualEffectBase, std::__1::default_delete<kuaishou::editorsdk2::VisualEffectBase>>>, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, std::__1::unique_ptr<kuaishou::editorsdk2::VisualEffectBase, std::__1::default_delete<kuaishou::editorsdk2::VisualEffectBase>>>, std::__1::hash<int>, true>, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, std::__1::unique_ptr<kuaishou::editorsdk2::VisualEffectBase, std::__1::default_delete<kuaishou::editorsdk2::VisualEffectBase>>>, std::__1::equal_to<int>, true>, std::__1::allocator<std::__1::__hash_value_type<int, std::__1::unique_ptr<kuaishou::editorsdk2::VisualEffectBase, std::__1::default_delete<kuaishou::editorsdk2::VisualEffectBase>>>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::unique_ptr<kuaishou::editorsdk2::VisualEffectBase, std::__1::default_delete<kuaishou::editorsdk2::VisualEffectBase>>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::unique_ptr<kuaishou::editorsdk2::VisualEffectBase, std::__1::default_delete<kuaishou::editorsdk2::VisualEffectBase>>>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::unique_ptr<kuaishou::editorsdk2::VisualEffectBase, std::__1::default_delete<kuaishou::editorsdk2::VisualEffectBase>>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::unique_ptr<kuaishou::editorsdk2::VisualEffectBase, std::__1::default_delete<kuaishou::editorsdk2::VisualEffectBase>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::unique_ptr<kuaishou::editorsdk2::VisualEffectBase, std::__1::default_delete<kuaishou::editorsdk2::VisualEffectBase>>>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, std::__1::unique_ptr<kuaishou::editorsdk2::VisualEffectBase, std::__1::default_delete<kuaishou::editorsdk2::VisualEffectBase>>>, std::__1::hash<int>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, std::__1::unique_ptr<kuaishou::editorsdk2::VisualEffectBase, std::__1::default_delete<kuaishou::editorsdk2::VisualEffectBase>>>, std::__1::equal_to<int>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<long long, std::__1::__list_iterator<kuaishou::editorsdk2::LRUFrameCache::Item, void *>, std::__1::hash<long long>, std::__1::equal_to<long long>, std::__1::allocator<std::__1::pair<const long long, std::__1::__list_iterator<kuaishou::editorsdk2::LRUFrameCache::Item, void *>>>> {
    struct __hash_table<std::__1::__hash_value_type<long long, std::__1::__list_iterator<kuaishou::editorsdk2::LRUFrameCache::Item, void *>>, std::__1::__unordered_map_hasher<long long, std::__1::__hash_value_type<long long, std::__1::__list_iterator<kuaishou::editorsdk2::LRUFrameCache::Item, void *>>, std::__1::hash<long long>, true>, std::__1::__unordered_map_equal<long long, std::__1::__hash_value_type<long long, std::__1::__list_iterator<kuaishou::editorsdk2::LRUFrameCache::Item, void *>>, std::__1::equal_to<long long>, true>, std::__1::allocator<std::__1::__hash_value_type<long long, std::__1::__list_iterator<kuaishou::editorsdk2::LRUFrameCache::Item, void *>>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, std::__1::__list_iterator<kuaishou::editorsdk2::LRUFrameCache::Item, void *>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, std::__1::__list_iterator<kuaishou::editorsdk2::LRUFrameCache::Item, void *>>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, std::__1::__list_iterator<kuaishou::editorsdk2::LRUFrameCache::Item, void *>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<long long, std::__1::__list_iterator<kuaishou::editorsdk2::LRUFrameCache::Item, void *>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, std::__1::__list_iterator<kuaishou::editorsdk2::LRUFrameCache::Item, void *>>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<long long, std::__1::__hash_value_type<long long, std::__1::__list_iterator<kuaishou::editorsdk2::LRUFrameCache::Item, void *>>, std::__1::hash<long long>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<long long, std::__1::__hash_value_type<long long, std::__1::__list_iterator<kuaishou::editorsdk2::LRUFrameCache::Item, void *>>, std::__1::equal_to<long long>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<unsigned long long, bool, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, bool>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned long long, bool>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, bool>, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, bool>, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, bool>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, bool>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, bool>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, bool>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, bool>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, bool>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, bool>, std::__1::hash<unsigned long long>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, bool>, std::__1::equal_to<unsigned long long>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<unsigned long long, int, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, int>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned long long, int>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, int>, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, int>, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, int>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, int>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, int>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, int>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, int>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, int>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, int>, std::__1::hash<unsigned long long>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, int>, std::__1::equal_to<unsigned long long>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<unsigned long long, std::__1::unique_ptr<kuaishou::editorsdk2::ReverseFrameCache, std::__1::default_delete<kuaishou::editorsdk2::ReverseFrameCache>>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::unique_ptr<kuaishou::editorsdk2::ReverseFrameCache, std::__1::default_delete<kuaishou::editorsdk2::ReverseFrameCache>>>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<kuaishou::editorsdk2::ReverseFrameCache, std::__1::default_delete<kuaishou::editorsdk2::ReverseFrameCache>>>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<kuaishou::editorsdk2::ReverseFrameCache, std::__1::default_delete<kuaishou::editorsdk2::ReverseFrameCache>>>, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<kuaishou::editorsdk2::ReverseFrameCache, std::__1::default_delete<kuaishou::editorsdk2::ReverseFrameCache>>>, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<kuaishou::editorsdk2::ReverseFrameCache, std::__1::default_delete<kuaishou::editorsdk2::ReverseFrameCache>>>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<kuaishou::editorsdk2::ReverseFrameCache, std::__1::default_delete<kuaishou::editorsdk2::ReverseFrameCache>>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<kuaishou::editorsdk2::ReverseFrameCache, std::__1::default_delete<kuaishou::editorsdk2::ReverseFrameCache>>>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<kuaishou::editorsdk2::ReverseFrameCache, std::__1::default_delete<kuaishou::editorsdk2::ReverseFrameCache>>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<kuaishou::editorsdk2::ReverseFrameCache, std::__1::default_delete<kuaishou::editorsdk2::ReverseFrameCache>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<kuaishou::editorsdk2::ReverseFrameCache, std::__1::default_delete<kuaishou::editorsdk2::ReverseFrameCache>>>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<kuaishou::editorsdk2::ReverseFrameCache, std::__1::default_delete<kuaishou::editorsdk2::ReverseFrameCache>>>, std::__1::hash<unsigned long long>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<kuaishou::editorsdk2::ReverseFrameCache, std::__1::default_delete<kuaishou::editorsdk2::ReverseFrameCache>>>, std::__1::equal_to<unsigned long long>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct vector<CGE::AnimationInterfaceAbstract<CGE::TimeActionInterfaceAbstract>*, std::__1::allocator<CGE::AnimationInterfaceAbstract<CGE::TimeActionInterfaceAbstract>*>> {
    struct AnimationInterfaceAbstract<CGE::TimeActionInterfaceAbstract> **_field1;
    struct AnimationInterfaceAbstract<CGE::TimeActionInterfaceAbstract> **_field2;
    struct __compressed_pair<CGE::AnimationInterfaceAbstract<CGE::TimeActionInterfaceAbstract>**, std::__1::allocator<CGE::AnimationInterfaceAbstract<CGE::TimeActionInterfaceAbstract>*>> {
        struct AnimationInterfaceAbstract<CGE::TimeActionInterfaceAbstract> **_field1;
    } _field3;
};

struct vector<CGE::CGEFMFilter::FBOState, std::__1::allocator<CGE::CGEFMFilter::FBOState>> {
    struct FBOState *_field1;
    struct FBOState *_field2;
    struct __compressed_pair<CGE::CGEFMFilter::FBOState *, std::__1::allocator<CGE::CGEFMFilter::FBOState>> {
        struct FBOState *_field1;
    } _field3;
};

struct vector<CGE::CGEFaceDeformFullData, std::__1::allocator<CGE::CGEFaceDeformFullData>> {
    struct CGEFaceDeformFullData *__begin_;
    struct CGEFaceDeformFullData *__end_;
    struct __compressed_pair<CGE::CGEFaceDeformFullData *, std::__1::allocator<CGE::CGEFaceDeformFullData>> {
        struct CGEFaceDeformFullData *__first_;
    } __end_cap_;
};

struct vector<CGE::CGEFaceMagicInterface::FaceData, std::__1::allocator<CGE::CGEFaceMagicInterface::FaceData>> {
    struct FaceData *_field1;
    struct FaceData *_field2;
    struct __compressed_pair<CGE::CGEFaceMagicInterface::FaceData *, std::__1::allocator<CGE::CGEFaceMagicInterface::FaceData>> {
        struct FaceData *_field1;
    } _field3;
};

struct vector<CGE::CGEImageFilterInterfaceAbstract *, std::__1::allocator<CGE::CGEImageFilterInterfaceAbstract *>> {
    struct CGEImageFilterInterfaceAbstract **_field1;
    struct CGEImageFilterInterfaceAbstract **_field2;
    struct __compressed_pair<CGE::CGEImageFilterInterfaceAbstract **, std::__1::allocator<CGE::CGEImageFilterInterfaceAbstract *>> {
        struct CGEImageFilterInterfaceAbstract **_field1;
    } _field3;
};

struct vector<CGE::CGELiquidationUtil::LiquidationPath, std::__1::allocator<CGE::CGELiquidationUtil::LiquidationPath>> {
    struct LiquidationPath *_field1;
    struct LiquidationPath *_field2;
    struct __compressed_pair<CGE::CGELiquidationUtil::LiquidationPath *, std::__1::allocator<CGE::CGELiquidationUtil::LiquidationPath>> {
        struct LiquidationPath *_field1;
    } _field3;
};

struct vector<CGE::CGEMakeupElements *, std::__1::allocator<CGE::CGEMakeupElements *>> {
    struct CGEMakeupElements **_field1;
    struct CGEMakeupElements **_field2;
    struct __compressed_pair<CGE::CGEMakeupElements **, std::__1::allocator<CGE::CGEMakeupElements *>> {
        struct CGEMakeupElements **_field1;
    } _field3;
};

struct vector<CGE::CGEMakeupFaceFeature, std::__1::allocator<CGE::CGEMakeupFaceFeature>> {
    struct CGEMakeupFaceFeature *_field1;
    struct CGEMakeupFaceFeature *_field2;
    struct __compressed_pair<CGE::CGEMakeupFaceFeature *, std::__1::allocator<CGE::CGEMakeupFaceFeature>> {
        struct CGEMakeupFaceFeature *_field1;
    } _field3;
};

struct vector<CGE::FMAnimationSpriteWrapper, std::__1::allocator<CGE::FMAnimationSpriteWrapper>> {
    struct FMAnimationSpriteWrapper *__begin_;
    struct FMAnimationSpriteWrapper *__end_;
    struct __compressed_pair<CGE::FMAnimationSpriteWrapper *, std::__1::allocator<CGE::FMAnimationSpriteWrapper>> {
        struct FMAnimationSpriteWrapper *__first_;
    } __end_cap_;
};

struct vector<CGE::ProgramObject *, std::__1::allocator<CGE::ProgramObject *>> {
    struct ProgramObject **__begin_;
    struct ProgramObject **__end_;
    struct __compressed_pair<CGE::ProgramObject **, std::__1::allocator<CGE::ProgramObject *>> {
        struct ProgramObject **__first_;
    } __end_cap_;
};

struct vector<CGE::SharedTexture, std::__1::allocator<CGE::SharedTexture>> {
    struct SharedTexture *_field1;
    struct SharedTexture *_field2;
    struct __compressed_pair<CGE::SharedTexture *, std::__1::allocator<CGE::SharedTexture>> {
        struct SharedTexture *_field1;
    } _field3;
};

struct vector<CGE::Sprite2dInterChangeMultiple::FrameTexture, std::__1::allocator<CGE::Sprite2dInterChangeMultiple::FrameTexture>> {
    struct FrameTexture *_field1;
    struct FrameTexture *_field2;
    struct __compressed_pair<CGE::Sprite2dInterChangeMultiple::FrameTexture *, std::__1::allocator<CGE::Sprite2dInterChangeMultiple::FrameTexture>> {
        struct FrameTexture *_field1;
    } _field3;
};

struct vector<CGE::Sprite2dInterChangeMultiple::SpriteFrame, std::__1::allocator<CGE::Sprite2dInterChangeMultiple::SpriteFrame>> {
    struct SpriteFrame *_field1;
    struct SpriteFrame *_field2;
    struct __compressed_pair<CGE::Sprite2dInterChangeMultiple::SpriteFrame *, std::__1::allocator<CGE::Sprite2dInterChangeMultiple::SpriteFrame>> {
        struct SpriteFrame *_field1;
    } _field3;
};

struct vector<CGE::TimeActionInterfaceAbstract *, std::__1::allocator<CGE::TimeActionInterfaceAbstract *>> {
    struct TimeActionInterfaceAbstract **_field1;
    struct TimeActionInterfaceAbstract **_field2;
    struct __compressed_pair<CGE::TimeActionInterfaceAbstract **, std::__1::allocator<CGE::TimeActionInterfaceAbstract *>> {
        struct TimeActionInterfaceAbstract **_field1;
    } _field3;
};

struct vector<CGE::Vec<float, 2>, std::__1::allocator<CGE::Vec<float, 2>>> {
    Vec_190d90d4 *__begin_;
    Vec_190d90d4 *__end_;
    struct __compressed_pair<CGE::Vec<float, 2>*, std::__1::allocator<CGE::Vec<float, 2>>> {
        Vec_190d90d4 *__first_;
    } __end_cap_;
};

struct vector<CGETextureInfo, std::__1::allocator<CGETextureInfo>> {
    struct CGETextureInfo *__begin_;
    struct CGETextureInfo *__end_;
    struct __compressed_pair<CGETextureInfo *, std::__1::allocator<CGETextureInfo>> {
        struct CGETextureInfo *__first_;
    } __end_cap_;
};

struct vector<CGFModel::FaceMesh::TextureMeshData, std::__1::allocator<CGFModel::FaceMesh::TextureMeshData>> {
    struct TextureMeshData *__begin_;
    struct TextureMeshData *__end_;
    struct __compressed_pair<CGFModel::FaceMesh::TextureMeshData *, std::__1::allocator<CGFModel::FaceMesh::TextureMeshData>> {
        struct TextureMeshData *__first_;
    } __end_cap_;
};

struct vector<CGFModel::Feature, std::__1::allocator<CGFModel::Feature>> {
    struct Feature *__begin_;
    struct Feature *__end_;
    struct __compressed_pair<CGFModel::Feature *, std::__1::allocator<CGFModel::Feature>> {
        struct Feature *__first_;
    } __end_cap_;
};

struct vector<CGPUImage::CGPUImageBaseFilter *, std::__1::allocator<CGPUImage::CGPUImageBaseFilter *>> {
    struct CGPUImageBaseFilter **__begin_;
    struct CGPUImageBaseFilter **__end_;
    struct __compressed_pair<CGPUImage::CGPUImageBaseFilter **, std::__1::allocator<CGPUImage::CGPUImageBaseFilter *>> {
        struct CGPUImageBaseFilter **__first_;
    } __end_cap_;
};

struct vector<CGPUImage::CGPUImageFramebuffer *, std::__1::allocator<CGPUImage::CGPUImageFramebuffer *>> {
    struct CGPUImageFramebuffer **__begin_;
    struct CGPUImageFramebuffer **__end_;
    struct __compressed_pair<CGPUImage::CGPUImageFramebuffer **, std::__1::allocator<CGPUImage::CGPUImageFramebuffer *>> {
        struct CGPUImageFramebuffer **__first_;
    } __end_cap_;
};

struct vector<CGPUImage::CGPUImageMeshRenderer *, std::__1::allocator<CGPUImage::CGPUImageMeshRenderer *>> {
    struct CGPUImageMeshRenderer **__begin_;
    struct CGPUImageMeshRenderer **__end_;
    struct __compressed_pair<CGPUImage::CGPUImageMeshRenderer **, std::__1::allocator<CGPUImage::CGPUImageMeshRenderer *>> {
        struct CGPUImageMeshRenderer **__first_;
    } __end_cap_;
};

struct vector<CGPUImage::CGPUImageMeshRenderer::RenderTexture, std::__1::allocator<CGPUImage::CGPUImageMeshRenderer::RenderTexture>> {
    struct RenderTexture *__begin_;
    struct RenderTexture *__end_;
    struct __compressed_pair<CGPUImage::CGPUImageMeshRenderer::RenderTexture *, std::__1::allocator<CGPUImage::CGPUImageMeshRenderer::RenderTexture>> {
        struct RenderTexture *__first_;
    } __end_cap_;
};

struct vector<CGPUImage::CGPUImageNInputFilter *, std::__1::allocator<CGPUImage::CGPUImageNInputFilter *>> {
    struct CGPUImageNInputFilter **__begin_;
    struct CGPUImageNInputFilter **__end_;
    struct __compressed_pair<CGPUImage::CGPUImageNInputFilter **, std::__1::allocator<CGPUImage::CGPUImageNInputFilter *>> {
        struct CGPUImageNInputFilter **__first_;
    } __end_cap_;
};

struct vector<CGPUImage::RotationEx, std::__1::allocator<CGPUImage::RotationEx>> {
    struct RotationEx *__begin_;
    struct RotationEx *__end_;
    struct __compressed_pair<CGPUImage::RotationEx *, std::__1::allocator<CGPUImage::RotationEx>> {
        struct RotationEx *__first_;
    } __end_cap_;
};

struct vector<CGPUImage::Triangle, std::__1::allocator<CGPUImage::Triangle>>;

struct vector<CKSEffectRange, std::__1::allocator<CKSEffectRange>> {
    struct CKSEffectRange *_field1;
    struct CKSEffectRange *_field2;
    struct __compressed_pair<CKSEffectRange *, std::__1::allocator<CKSEffectRange>> {
        struct CKSEffectRange *_field1;
    } _field3;
};

struct vector<CKSTimeRange, std::__1::allocator<CKSTimeRange>> {
    struct CKSTimeRange *_field1;
    struct CKSTimeRange *_field2;
    struct __compressed_pair<CKSTimeRange *, std::__1::allocator<CKSTimeRange>> {
        struct CKSTimeRange *_field1;
    } _field3;
};

struct vector<CMRotationMatrix, std::__1::allocator<CMRotationMatrix>> {
    CDStruct_183601bc *__begin_;
    CDStruct_183601bc *__end_;
    struct __compressed_pair<CMRotationMatrix *, std::__1::allocator<CMRotationMatrix>> {
        CDStruct_183601bc *__first_;
    } __end_cap_;
};

struct vector<FMFaceSpriteCorePoint, std::__1::allocator<FMFaceSpriteCorePoint>> {
    struct FMFaceSpriteCorePoint *__begin_;
    struct FMFaceSpriteCorePoint *__end_;
    struct __compressed_pair<FMFaceSpriteCorePoint *, std::__1::allocator<FMFaceSpriteCorePoint>> {
        struct FMFaceSpriteCorePoint *__first_;
    } __end_cap_;
};

struct vector<FMFaceSpriteMaskData, std::__1::allocator<FMFaceSpriteMaskData>> {
    struct FMFaceSpriteMaskData *__begin_;
    struct FMFaceSpriteMaskData *__end_;
    struct __compressed_pair<FMFaceSpriteMaskData *, std::__1::allocator<FMFaceSpriteMaskData>> {
        struct FMFaceSpriteMaskData *__first_;
    } __end_cap_;
};

struct vector<FMHairClipFilterTexture, std::__1::allocator<FMHairClipFilterTexture>> {
    struct FMHairClipFilterTexture *__begin_;
    struct FMHairClipFilterTexture *__end_;
    struct __compressed_pair<FMHairClipFilterTexture *, std::__1::allocator<FMHairClipFilterTexture>> {
        struct FMHairClipFilterTexture *__first_;
    } __end_cap_;
};

struct vector<FMNormalizedFace, std::__1::allocator<FMNormalizedFace>> {
    CDStruct_183601bc *__begin_;
    CDStruct_183601bc *__end_;
    struct __compressed_pair<FMNormalizedFace *, std::__1::allocator<FMNormalizedFace>> {
        CDStruct_183601bc *__first_;
    } __end_cap_;
};

struct vector<GLMatrix, std::__1::allocator<GLMatrix>> {
    struct GLMatrix *__begin_;
    struct GLMatrix *__end_;
    struct __compressed_pair<GLMatrix *, std::__1::allocator<GLMatrix>> {
        struct GLMatrix *__first_;
    } __end_cap_;
};

struct vector<KSAAsset *, std::__1::allocator<KSAAsset *>> {
    struct KSAAsset **_field1;
    struct KSAAsset **_field2;
    struct __compressed_pair<KSAAsset **, std::__1::allocator<KSAAsset *>> {
        struct KSAAsset **_field1;
    } _field3;
};

struct vector<KSCNNPoseInfo, std::__1::allocator<KSCNNPoseInfo>> {
    struct KSCNNPoseInfo *_field1;
    struct KSCNNPoseInfo *_field2;
    struct __compressed_pair<KSCNNPoseInfo *, std::__1::allocator<KSCNNPoseInfo>> {
        struct KSCNNPoseInfo *_field1;
    } _field3;
};

struct vector<KSGestureInfo, std::__1::allocator<KSGestureInfo>> {
    struct KSGestureInfo *_field1;
    struct KSGestureInfo *_field2;
    struct __compressed_pair<KSGestureInfo *, std::__1::allocator<KSGestureInfo>> {
        struct KSGestureInfo *_field1;
    } _field3;
};

struct vector<KSLiveHeartGPUInstance, std::__1::allocator<KSLiveHeartGPUInstance>> {
    struct KSLiveHeartGPUInstance *__begin_;
    struct KSLiveHeartGPUInstance *__end_;
    struct __compressed_pair<KSLiveHeartGPUInstance *, std::__1::allocator<KSLiveHeartGPUInstance>> {
        struct KSLiveHeartGPUInstance *__first_;
    } __end_cap_;
};

struct vector<KSPlaybackEvent, std::__1::allocator<KSPlaybackEvent>> {
    int *_field1;
    int *_field2;
    struct __compressed_pair<KSPlaybackEvent *, std::__1::allocator<KSPlaybackEvent>> {
        int *_field1;
    } _field3;
};

struct vector<KSPoseInfo, std::__1::allocator<KSPoseInfo>> {
    struct KSPoseInfo *_field1;
    struct KSPoseInfo *_field2;
    struct __compressed_pair<KSPoseInfo *, std::__1::allocator<KSPoseInfo>> {
        struct KSPoseInfo *_field1;
    } _field3;
};

struct vector<LocationRange, std::__1::allocator<LocationRange>> {
    CDStruct_183601bc *__begin_;
    CDStruct_183601bc *__end_;
    struct __compressed_pair<LocationRange *, std::__1::allocator<LocationRange>> {
        CDStruct_183601bc *__first_;
    } __end_cap_;
};

struct vector<PoseDirection, std::__1::allocator<PoseDirection>> {
    int *_field1;
    int *_field2;
    struct __compressed_pair<PoseDirection *, std::__1::allocator<PoseDirection>> {
        int *_field1;
    } _field3;
};

struct vector<char, std::__1::allocator<char>> {
    char *_field1;
    char *_field2;
    struct __compressed_pair<char *, std::__1::allocator<char>> {
        char *_field1;
    } _field3;
};

struct vector<depthInfor, std::__1::allocator<depthInfor>> {
    struct depthInfor *_field1;
    struct depthInfor *_field2;
    struct __compressed_pair<depthInfor *, std::__1::allocator<depthInfor>> {
        struct depthInfor *_field1;
    } _field3;
};

struct vector<double, std::__1::allocator<double>> {
    double *__begin_;
    double *__end_;
    struct __compressed_pair<double *, std::__1::allocator<double>> {
        double *__first_;
    } __end_cap_;
};

struct vector<float, std::__1::allocator<float>> {
    float *__begin_;
    float *__end_;
    struct __compressed_pair<float *, std::__1::allocator<float>> {
        float *__first_;
    } __end_cap_;
};

struct vector<int, std::__1::allocator<int>> {
    int *__begin_;
    int *__end_;
    struct __compressed_pair<int *, std::__1::allocator<int>> {
        int *__first_;
    } __end_cap_;
};

struct vector<kuaishou::editorsdk2::ThumbnailJob, std::__1::allocator<kuaishou::editorsdk2::ThumbnailJob>> {
    struct ThumbnailJob *_field1;
    struct ThumbnailJob *_field2;
    struct __compressed_pair<kuaishou::editorsdk2::ThumbnailJob *, std::__1::allocator<kuaishou::editorsdk2::ThumbnailJob>> {
        struct ThumbnailJob *_field1;
    } _field3;
};

struct vector<kuaishou::editorsdk2::model::EditorSdkError, std::__1::allocator<kuaishou::editorsdk2::model::EditorSdkError>> {
    struct EditorSdkError *_field1;
    struct EditorSdkError *_field2;
    struct __compressed_pair<kuaishou::editorsdk2::model::EditorSdkError *, std::__1::allocator<kuaishou::editorsdk2::model::EditorSdkError>> {
        struct EditorSdkError *_field1;
    } _field3;
};

struct vector<kuaishou::editorsdk2::model::RenderRange, std::__1::allocator<kuaishou::editorsdk2::model::RenderRange>> {
    struct RenderRange *_field1;
    struct RenderRange *_field2;
    struct __compressed_pair<kuaishou::editorsdk2::model::RenderRange *, std::__1::allocator<kuaishou::editorsdk2::model::RenderRange>> {
        struct RenderRange *_field1;
    } _field3;
};

struct vector<ncv::Point2f, std::__1::allocator<ncv::Point2f>> {
    struct Point2f *__begin_;
    struct Point2f *__end_;
    struct __compressed_pair<ncv::Point2f *, std::__1::allocator<ncv::Point2f>> {
        struct Point2f *__first_;
    } __end_cap_;
};

struct vector<slamar::MapPoint *, std::__1::allocator<slamar::MapPoint *>> {
    struct MapPoint **_field1;
    struct MapPoint **_field2;
    struct __compressed_pair<slamar::MapPoint **, std::__1::allocator<slamar::MapPoint *>> {
        struct MapPoint **_field1;
    } _field3;
};

struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> {
    basic_string_a490aa4c *__begin_;
    basic_string_a490aa4c *__end_;
    struct __compressed_pair<std::__1::basic_string<char>*, std::__1::allocator<std::__1::basic_string<char>>> {
        basic_string_a490aa4c *__first_;
    } __end_cap_;
};

struct vector<std::__1::map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char>>>>*, std::__1::allocator<std::__1::map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char>>>>*>> {
    struct map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char>>>> **_field1;
    struct map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char>>>> **_field2;
    struct __compressed_pair<std::__1::map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char>>>>**, std::__1::allocator<std::__1::map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char>>>>*>> {
        struct map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char>>>> **_field1;
    } _field3;
};

struct vector<std::__1::unique_ptr<AVFrame, void (*)(AVFrame *)>, std::__1::allocator<std::__1::unique_ptr<AVFrame, void (*)(AVFrame *)>>> {
    struct unique_ptr<AVFrame, void (*)(AVFrame *)> *_field1;
    struct unique_ptr<AVFrame, void (*)(AVFrame *)> *_field2;
    struct __compressed_pair<std::__1::unique_ptr<AVFrame, void (*)(AVFrame *)>*, std::__1::allocator<std::__1::unique_ptr<AVFrame, void (*)(AVFrame *)>>> {
        struct unique_ptr<AVFrame, void (*)(AVFrame *)> *_field1;
    } _field3;
};

struct vector<std::__1::vector<CGE::CGEMakeupElements *, std::__1::allocator<CGE::CGEMakeupElements *>>, std::__1::allocator<std::__1::vector<CGE::CGEMakeupElements *, std::__1::allocator<CGE::CGEMakeupElements *>>>> {
    struct vector<CGE::CGEMakeupElements *, std::__1::allocator<CGE::CGEMakeupElements *>> *__begin_;
    struct vector<CGE::CGEMakeupElements *, std::__1::allocator<CGE::CGEMakeupElements *>> *__end_;
    struct __compressed_pair<std::__1::vector<CGE::CGEMakeupElements *, std::__1::allocator<CGE::CGEMakeupElements *>>*, std::__1::allocator<std::__1::vector<CGE::CGEMakeupElements *, std::__1::allocator<CGE::CGEMakeupElements *>>>> {
        struct vector<CGE::CGEMakeupElements *, std::__1::allocator<CGE::CGEMakeupElements *>> *__first_;
    } __end_cap_;
};

struct vector<std::__1::vector<CGPUImage::CGPUImageMeshRenderer *, std::__1::allocator<CGPUImage::CGPUImageMeshRenderer *>>, std::__1::allocator<std::__1::vector<CGPUImage::CGPUImageMeshRenderer *, std::__1::allocator<CGPUImage::CGPUImageMeshRenderer *>>>> {
    struct vector<CGPUImage::CGPUImageMeshRenderer *, std::__1::allocator<CGPUImage::CGPUImageMeshRenderer *>> *__begin_;
    struct vector<CGPUImage::CGPUImageMeshRenderer *, std::__1::allocator<CGPUImage::CGPUImageMeshRenderer *>> *__end_;
    struct __compressed_pair<std::__1::vector<CGPUImage::CGPUImageMeshRenderer *, std::__1::allocator<CGPUImage::CGPUImageMeshRenderer *>>*, std::__1::allocator<std::__1::vector<CGPUImage::CGPUImageMeshRenderer *, std::__1::allocator<CGPUImage::CGPUImageMeshRenderer *>>>> {
        struct vector<CGPUImage::CGPUImageMeshRenderer *, std::__1::allocator<CGPUImage::CGPUImageMeshRenderer *>> *__first_;
    } __end_cap_;
};

struct vector<std::__1::vector<CGPUImage::Triangle, std::__1::allocator<CGPUImage::Triangle>>, std::__1::allocator<std::__1::vector<CGPUImage::Triangle, std::__1::allocator<CGPUImage::Triangle>>>> {
    struct vector<CGPUImage::Triangle, std::__1::allocator<CGPUImage::Triangle>> *__begin_;
    struct vector<CGPUImage::Triangle, std::__1::allocator<CGPUImage::Triangle>> *__end_;
    struct __compressed_pair<std::__1::vector<CGPUImage::Triangle, std::__1::allocator<CGPUImage::Triangle>>*, std::__1::allocator<std::__1::vector<CGPUImage::Triangle, std::__1::allocator<CGPUImage::Triangle>>>> {
        struct vector<CGPUImage::Triangle, std::__1::allocator<CGPUImage::Triangle>> *__first_;
    } __end_cap_;
};

struct vector<std::__1::vector<double, std::__1::allocator<double>>, std::__1::allocator<std::__1::vector<double, std::__1::allocator<double>>>> {
    vector_3f7ffb82 *__begin_;
    vector_3f7ffb82 *__end_;
    struct __compressed_pair<std::__1::vector<double, std::__1::allocator<double>>*, std::__1::allocator<std::__1::vector<double, std::__1::allocator<double>>>> {
        vector_3f7ffb82 *__first_;
    } __end_cap_;
};

struct vector<std::__1::vector<int, std::__1::allocator<int>>, std::__1::allocator<std::__1::vector<int, std::__1::allocator<int>>>> {
    struct vector<int, std::__1::allocator<int>> *__begin_;
    struct vector<int, std::__1::allocator<int>> *__end_;
    struct __compressed_pair<std::__1::vector<int, std::__1::allocator<int>>*, std::__1::allocator<std::__1::vector<int, std::__1::allocator<int>>>> {
        struct vector<int, std::__1::allocator<int>> *__first_;
    } __end_cap_;
};

struct vector<unsigned char, std::__1::allocator<unsigned char>> {
    char *__begin_;
    char *__end_;
    struct __compressed_pair<unsigned char *, std::__1::allocator<unsigned char>> {
        char *__first_;
    } __end_cap_;
};

struct vector<unsigned int, std::__1::allocator<unsigned int>> {
    unsigned int *__begin_;
    unsigned int *__end_;
    struct __compressed_pair<unsigned int *, std::__1::allocator<unsigned int>> {
        unsigned int *__first_;
    } __end_cap_;
};

struct vector<unsigned short, std::__1::allocator<unsigned short>> {
    unsigned short *__begin_;
    unsigned short *__end_;
    struct __compressed_pair<unsigned short *, std::__1::allocator<unsigned short>> {
        unsigned short *__first_;
    } __end_cap_;
};

struct weak_ptr<VirtualFaceProcessor> {
    struct VirtualFaceProcessor *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

#if 0
// Names with conflicting types:
typedef struct {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
    char *_field5;
    char *_field6;
    char *_field7;
    char *_field8;
    struct MatAllocator *_field9;
    struct UMatData *_field10;
    struct MatSize _field11;
    struct MatStep _field12;
} Mat_ad94bc68;

typedef struct {
    int flags;
    int dims;
    int rows;
    int cols;
    char *data;
    char *datastart;
    char *dataend;
    char *datalimit;
    struct MatAllocator *allocator;
    struct UMatData *u;
    struct MatSize size;
    struct MatStep step;
} Mat_b3375733;

#endif

#pragma mark Typedef'd Structures

typedef struct {
    SEL _field1;
    SEL _field2;
    SEL _field3;
} CDStruct_0348af7d;

typedef struct {
    id _field1;
    unsigned short _field2;
} CDStruct_6a59ab51;

typedef struct {
    _Bool _field1;
    _Bool _field2;
    int _field3;
    double _field4;
} CDStruct_a2838961;

typedef struct {
    unsigned int major;
    unsigned int minor;
    unsigned int bugfix;
} CDStruct_e24ffa00;

typedef struct {
    unsigned long long _field1;
    id *_field2;
    unsigned long long *_field3;
    unsigned long long _field4[5];
} CDStruct_70511ce9;

typedef struct {
    unsigned long long size;
    float *buffer;
    float *ptr;
    float store;
} CDStruct_729b303a;

typedef struct {
    unsigned int _field1[96];
} CDStruct_39d5974f;

typedef struct {
    char *_field1;
    char *_field2;
    unsigned int _field3;
    unsigned int _field4;
} CDStruct_4355734a;

typedef struct {
    char *_field1;
    void *_field2;
    _Bool _field3;
    void *_field4;
    char *_field5;
    char *_field6;
    char *_field7;
    char *_field8;
    char *_field9;
    unsigned int _field10;
    _Bool _field11;
    _Bool _field12;
    unsigned int _field13;
    unsigned int _field14;
    unsigned int _field15;
    unsigned int _field16;
} CDStruct_1e2a2a70;

typedef struct {
    char *_field1;
    int _field2;
    int _field3;
} CDStruct_9c718cc4;

typedef struct {
    void *buffer;
    int length;
    int tail;
    int head;
    int fillCount;
    _Bool atomic;
} CDStruct_c5d49230;

typedef struct {
    unsigned int needsLayoutComponents:1;
    unsigned int layoutInitialized:1;
    unsigned int needsReloadTable:1;
    unsigned int ignoreScrollViewDidScroll:1;
    unsigned int isGalleryPhoto:1;
    unsigned int isCartonPhoto:1;
    unsigned int isNavigationBarHidden:1;
    unsigned int feedIsInvalid:1;
    unsigned int viewDidAppear:1;
    unsigned int isPrivacyUser:1;
    unsigned int shouldShowFansTopBubbleAlert:1;
    unsigned int forbidPanBack:1;
    unsigned int deceleratingDuringTransitioning:1;
    unsigned int isTableViewOnTop:1;
} CDStruct_4afb84fe;

typedef struct {
    unsigned int responseScrollViewDidScroll:1;
    unsigned int responseScrollViewWillBeginDragging:1;
    unsigned int responseScrollViewWillEndDragging:1;
    unsigned int responseScrollViewDidEndDragging:1;
    unsigned int responseScrollViewWillBeginDecelerating:1;
    unsigned int responseScrollViewDidEndDecelerating:1;
    unsigned int responseScrollViewDidEndScrollingAnimation:1;
} CDStruct_c064f1c5;

typedef struct {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
    double _field5;
    double _field6;
    double _field7;
    double _field8;
    double _field9;
} CDStruct_afa449f9;

typedef struct {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
} CDStruct_d2b197d1;

typedef struct {
    double x;
    double y;
    double z;
} CDStruct_31142d93;

typedef struct {
    double multiplier;
    double constant;
} CDStruct_1f335af7;

typedef struct {
    float x;
    float y;
    float z;
    float valid;
} CDStruct_0690e692;

typedef struct {
    float pitch;
    float yaw;
    float roll;
} CDStruct_7d1fa116;

typedef struct {
    int detectMode;
    int interval;
    int rotation;
    int minFaceSize;
    _Bool autoUpdateRotation;
} CDStruct_87cc2293;

typedef struct {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
    int _field5;
    int _field6;
    int _field7;
    int _field8;
    int _field9;
    int _field10;
    int _field11;
    int _field12;
    int _field13;
    int _field14;
    int _field15;
    int _field16;
    int _field17;
    int _field18;
    int _field19;
    int _field20;
    int _field21;
    int _field22;
    int _field23;
    int _field24;
    int _field25[4];
    int _field26;
    int _field27;
    int _field28;
    int _field29;
    int _field30;
    int _field31;
    int _field32;
    int _field33;
    int _field34;
} CDStruct_6259bb0c;

typedef struct {
    int left;
    int top;
    int right;
    int bottom;
} CDStruct_51449276;

typedef struct {
    int width;
    int height;
} CDStruct_79c71658;

typedef struct {
    long long version;
    void *info;
    CDUnknownFunctionPointerType retain;
    CDUnknownFunctionPointerType release;
    CDUnknownFunctionPointerType copyDescription;
} CDStruct_4210025a;

typedef struct {
    long long value;
    int timescale;
    unsigned int flags;
    long long epoch;
} CDStruct_1b6d18a9;

typedef struct {
    long long _field1;
    int _field2;
} CDStruct_87dc826d;

typedef struct {
    long long _field1;
    long long _field2;
    long long _field3;
} CDStruct_2ec95fd7;

typedef struct {
    long long _field1;
    long long _field2;
} CDStruct_912cb5d2;

typedef struct CDStruct_183601bc;

typedef struct {
    CDStruct_6e3f967a outline[19];
    CDStruct_6e3f967a leftBrow[10];
    CDStruct_6e3f967a rightBrow[10];
    CDStruct_6e3f967a leftEye[12];
    CDStruct_6e3f967a rightEye[12];
    CDStruct_6e3f967a nose[12];
    CDStruct_6e3f967a mouth[12];
    CDStruct_6e3f967a lip[8];
    CDStruct_6e3f967a leftPupil;
    CDStruct_6e3f967a rightPupil;
    CDStruct_6e3f967a noseBridge[4];
} CDStruct_d03cc8ed;

typedef struct {
    struct CGPoint outline[19];
    struct CGPoint leftBrow[10];
    struct CGPoint rightBrow[10];
    struct CGPoint leftEye[12];
    struct CGPoint rightEye[12];
    struct CGPoint nose[12];
    struct CGPoint mouth[12];
    struct CGPoint lip[8];
    struct CGPoint leftPupil;
    struct CGPoint rightPupil;
    struct CGPoint noseBridge[4];
} CDStruct_7b50ee71;

typedef struct {
    char _field1[33];
    _Bool _field2;
    CDStruct_e24ffa00 _field3;
    CDStruct_e24ffa00 _field4;
    struct {
        void *_field1;
        unsigned long long _field2;
        void *_field3;
        void *_field4;
        void *_field5;
    } _field5;
    struct CLSMachOSlice _field6;
    long long _field7;
} CDStruct_fad71a87;

typedef struct {
    CDStruct_0690e692 leftLeg[3];
    CDStruct_0690e692 rightLeg[3];
    CDStruct_0690e692 chest;
    CDStruct_0690e692 head;
    CDStruct_0690e692 leftArm[3];
    CDStruct_0690e692 rightArm[3];
} CDStruct_49799e90;

typedef struct {
    CDStruct_6e3f967a point[81];
} CDStruct_a9870cb9;

typedef struct {
    struct OpaqueAudioComponentInstance *audioUnit;
    struct AudioComponentDescription desc;
    struct AudioStreamBasicDescription inDf;
    struct AudioStreamBasicDescription outDf;
    struct OpaqueAudioComponent *aComponent;
    struct AURenderCallbackStruct callbackStruct;
    _Bool mIsRunning;
} CDStruct_0373e3e9;

typedef struct {
    CDStruct_1b6d18a9 start;
    CDStruct_1b6d18a9 duration;
} CDStruct_e83c9415;

typedef struct {
    struct tm_zip_s _field1;
    unsigned long long _field2;
    unsigned long long _field3;
    unsigned long long _field4;
} CDStruct_192a48cb;

typedef struct {
    int track_id;
    CDStruct_51449276 rect;
    CDStruct_a9870cb9 points;
    float confidence;
    CDStruct_7d1fa116 pose;
    float left_eyestatus[6];
    float right_eyestatus[6];
    float age;
    struct {
        float female;
        float male;
    } gender;
    float blurness;
    float minority;
    float moutstatus[4];
} CDStruct_e4ef9f5c;

// Ambiguous groups
typedef struct {
    unsigned int scrollingToTop:1;
    unsigned int updatingPrivacy:1;
    unsigned int useTranslucentBar:1;
} CDStruct_9a43728d;

typedef struct {
    float _field1;
    float _field2;
} CDStruct_b2fbf00d;

typedef struct {
    float x;
    float y;
} CDStruct_6e3f967a;

typedef struct Point3_<float> {
    float x;
    float y;
    float z;
} Point3__c84d6bcd;

typedef struct Size_<int> {
    int _field1;
    int _field2;
} Size__dedc3bbb;

typedef struct SpringSolver<POP::Vector4<double>> {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
    double _field5;
    double _field6;
    double _field7;
    struct SSState<POP::Vector4<double>> _field8;
    struct Vector4<double> _field9;
    _Bool _field10;
} SpringSolver_fe820e75;

typedef struct Vec<float, 2> {
    float m_data[2];
} Vec_190d90d4;

typedef struct Vec<float, 4> {
    float m_data[4];
} Vec_08cf5610;

typedef struct Vec<int, 4> {
    int m_data[4];
} Vec_19636d0e;

typedef struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
    struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
        struct __rep {
            union {
                struct __long {
                    char *__data_;
                    unsigned long long __size_;
                    unsigned long long __cap_;
                } __l;
                struct __short {
                    char __data_[23];
                    struct {
                        unsigned char __size_;
                    } ;
                } __s;
                struct __raw {
                    unsigned long long __words[3];
                } __r;
            } ;
        } __first_;
    } __r_;
} basic_string_a490aa4c;

typedef struct basic_string<char, std::char_traits<char>, std::allocator<char>> {
    struct _Alloc_hider _field1;
} basic_string_1cdf7af0;

typedef struct list<std::__1::shared_ptr<POPAnimatorItem>, std::__1::allocator<std::__1::shared_ptr<POPAnimatorItem>>> {
    struct __list_node_base<std::__1::shared_ptr<POPAnimatorItem>, void *> __end_;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<std::__1::shared_ptr<POPAnimatorItem>, void *>>> {
        unsigned long long __first_;
    } __size_alloc_;
} list_670f5810;

typedef struct shared_ptr<POPAnimatorItem> {
    struct POPAnimatorItem *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_1553c9f8;

typedef struct shared_ptr<VirtualFaceProcessor> {
    struct VirtualFaceProcessor *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_656b164d;

typedef struct shared_ptr<std::__1::list<std::__1::shared_ptr<KS::SpeedTestResult>, std::__1::allocator<std::__1::shared_ptr<KS::SpeedTestResult>>>> {
    struct list<std::__1::shared_ptr<KS::SpeedTestResult>, std::__1::allocator<std::__1::shared_ptr<KS::SpeedTestResult>>> *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_3b51eea2;

typedef struct vector<CGE::Sprite2dInterChangeMultiple::FrameTexture, std::__1::allocator<CGE::Sprite2dInterChangeMultiple::FrameTexture>> {
    struct FrameTexture *_field1;
    struct FrameTexture *_field2;
    struct __compressed_pair<CGE::Sprite2dInterChangeMultiple::FrameTexture *, std::__1::allocator<CGE::Sprite2dInterChangeMultiple::FrameTexture>> {
        struct FrameTexture *_field1;
    } _field3;
} vector_7545d2eb;

typedef struct vector<CGFModel::Feature, std::__1::allocator<CGFModel::Feature>> {
    struct Feature *__begin_;
    struct Feature *__end_;
    struct __compressed_pair<CGFModel::Feature *, std::__1::allocator<CGFModel::Feature>> {
        struct Feature *__first_;
    } __end_cap_;
} vector_6a9a9531;

typedef struct vector<FMFaceSpriteCorePoint, std::__1::allocator<FMFaceSpriteCorePoint>> {
    struct FMFaceSpriteCorePoint *__begin_;
    struct FMFaceSpriteCorePoint *__end_;
    struct __compressed_pair<FMFaceSpriteCorePoint *, std::__1::allocator<FMFaceSpriteCorePoint>> {
        struct FMFaceSpriteCorePoint *__first_;
    } __end_cap_;
} vector_9f9a77cc;

typedef struct vector<FMNormalizedFace, std::__1::allocator<FMNormalizedFace>> {
    CDStruct_183601bc *__begin_;
    CDStruct_183601bc *__end_;
    struct __compressed_pair<FMNormalizedFace *, std::__1::allocator<FMNormalizedFace>> {
        CDStruct_183601bc *__first_;
    } __end_cap_;
} vector_183f810f;

typedef struct vector<KSCNNPoseInfo, std::__1::allocator<KSCNNPoseInfo>> {
    struct KSCNNPoseInfo *_field1;
    struct KSCNNPoseInfo *_field2;
    struct __compressed_pair<KSCNNPoseInfo *, std::__1::allocator<KSCNNPoseInfo>> {
        struct KSCNNPoseInfo *_field1;
    } _field3;
} vector_f96b896e;

typedef struct vector<KSLiveHeartGPUInstance, std::__1::allocator<KSLiveHeartGPUInstance>> {
    struct KSLiveHeartGPUInstance *__begin_;
    struct KSLiveHeartGPUInstance *__end_;
    struct __compressed_pair<KSLiveHeartGPUInstance *, std::__1::allocator<KSLiveHeartGPUInstance>> {
        struct KSLiveHeartGPUInstance *__first_;
    } __end_cap_;
} vector_6be6f145;

typedef struct vector<LocationRange, std::__1::allocator<LocationRange>> {
    CDStruct_183601bc *__begin_;
    CDStruct_183601bc *__end_;
    struct __compressed_pair<LocationRange *, std::__1::allocator<LocationRange>> {
        CDStruct_183601bc *__first_;
    } __end_cap_;
} vector_81097542;

typedef struct vector<double, std::__1::allocator<double>> {
    double *__begin_;
    double *__end_;
    struct __compressed_pair<double *, std::__1::allocator<double>> {
        double *__first_;
    } __end_cap_;
} vector_3f7ffb82;

typedef struct vector<ncv::Point2f, std::__1::allocator<ncv::Point2f>> {
    struct Point2f *__begin_;
    struct Point2f *__end_;
    struct __compressed_pair<ncv::Point2f *, std::__1::allocator<ncv::Point2f>> {
        struct Point2f *__first_;
    } __end_cap_;
} vector_71c4c584;

typedef struct vector<slamar::MapPoint *, std::__1::allocator<slamar::MapPoint *>> {
    struct MapPoint **_field1;
    struct MapPoint **_field2;
    struct __compressed_pair<slamar::MapPoint **, std::__1::allocator<slamar::MapPoint *>> {
        struct MapPoint **_field1;
    } _field3;
} vector_5353283d;

#pragma mark Named Unions

union Data {
    struct String _field1;
    struct ShortString _field2;
    union Number _field3;
    struct ObjectData _field4;
    struct ArrayData _field5;
    struct Flag _field6;
};

union Number {
    struct I _field1;
    struct U _field2;
    long long _field3;
    unsigned long long _field4;
    double _field5;
};

union _GLKMatrix3 {
    struct {
        float m00;
        float m01;
        float m02;
        float m10;
        float m11;
        float m12;
        float m20;
        float m21;
        float m22;
    } ;
    float m[9];
};

union _GLKMatrix4 {
    struct {
        float m00;
        float m01;
        float m02;
        float m03;
        float m10;
        float m11;
        float m12;
        float m13;
        float m20;
        float m21;
        float m22;
        float m23;
        float m30;
        float m31;
        float m32;
        float m33;
    } ;
    float m[16];
};

union _GLKVector2 {
    CDStruct_6e3f967a ;
    struct {
        float s;
        float t;
    } ;
    float v[2];
};

union ntpTime {
    struct {
        unsigned int fractSeconds;
        unsigned int wholeSeconds;
    } partials;
    unsigned long long floating;
};

#pragma mark Typedef'd Unions

typedef union {
    _Bool valueBool;
    unsigned int valueFixed32;
    int valueSFixed32;
    float valueFloat;
    unsigned long long valueFixed64;
    long long valueSFixed64;
    double valueDouble;
    int valueInt32;
    long long valueInt64;
    int valueSInt32;
    long long valueSInt64;
    unsigned int valueUInt32;
    unsigned long long valueUInt64;
    NSData *valueData;
    NSString *valueString;
    TAGPBGeneratedMessage *valueMessage;
    TAGPBGeneratedMessage *valueGroup;
    int valueEnum;
    TAGPBArray *valueArray;
    id valueObject;
} CDUnion_3de46016;

typedef union {
    _Bool valueBool;
    int valueInt32;
    long long valueInt64;
    unsigned int valueUInt32;
    unsigned long long valueUInt64;
    float valueFloat;
    double valueDouble;
    NSData *valueData;
    NSString *valueString;
    GPBMessage *valueMessage;
    int valueEnum;
} CDUnion_88782d86;

typedef union {
    long long _field1;
    unsigned long long _field2;
    double _field3;
} CDUnion_abebb5d1;

