//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "KTVAUGraphController.h"

@class NSMutableData, NSString, NSTimer;
@protocol KTVAUGraphRecorderLivingDelegate;

@interface KTVAUGraphRecorderLiving : KTVAUGraphController
{
    struct OpaqueExtAudioFile *audioOrigianlAudioFile;
    _Bool isHeadSet;
    unsigned int playedFrames;
    unsigned int totalFramesToPlay;
    struct OpaqueAudioComponentInstance *mixerUnit;
    struct OpaqueAudioComponentInstance *lastUnit;
    struct OpaqueAudioComponentInstance *dspUnit;
    int _bandEQNode;
    int _limiterNode;
    int _compressorNode;
    int _reverbNode;
    int _musicPlayerNode;
    int _pitchNode;
    int _C32fTo16iNode;
    int _C16iTo32fNode;
    int dsp_C32fTo16iNode;
    int dsp_C16iTo32fNode;
    int IO_C32iTo32fNode;
    int _IONode;
    struct OpaqueExtAudioFile *_musicExtFileRef;
    struct OpaqueAudioFileID *_musicFileID;
    NSString *_destinationFilePath;
    struct AudioStreamBasicDescription _musicFileASBD;
    unsigned int _musicFileTotalFrames;
    double _musicPlayedTime;
    _Bool _isRecording;
    NSTimer *notifyPlayTimer;
    struct AQPlayer *_aqplayer;
    struct AutoTune *_autoTune;
    struct AutoTune *_autoTune1;
    struct DoubleYou *_doubleYou;
    struct KTVEffectMode _effectMode;
    _Bool _isGraphAddedEffectNodes;
    _Bool _isUsingAutoTune1;
    struct VocalDetect *_humanDetect;
    NSMutableData *scoreData;
    long long dspCallbackCount;
    float _spaceOfFreeReverb;
    float _reverbOfFreeReverb;
    id <KTVAUGraphRecorderLivingDelegate> _delegate;
    NSString *_musicPathString;
    long long _pitchLevel;
    NSString *_melpPath;
    CDUnknownBlockType _playTimerBlock;
}

@property(nonatomic) float reverbOfFreeReverb; // @synthesize reverbOfFreeReverb=_reverbOfFreeReverb;
@property(nonatomic) float spaceOfFreeReverb; // @synthesize spaceOfFreeReverb=_spaceOfFreeReverb;
@property(copy, nonatomic) CDUnknownBlockType playTimerBlock; // @synthesize playTimerBlock=_playTimerBlock;
@property(retain, nonatomic) NSString *melpPath; // @synthesize melpPath=_melpPath;
@property(nonatomic) long long pitchLevel; // @synthesize pitchLevel=_pitchLevel;
@property(retain, nonatomic) NSString *musicPathString; // @synthesize musicPathString=_musicPathString;
@property(nonatomic) __weak id <KTVAUGraphRecorderLivingDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)runDSP:(struct AudioBufferList *)arg1;
- (void)adjustForCurrentDSPMode;
- (void)clearDoubleYou;
- (void)clearAutoTune;
- (void)clearAllDspTool;
- (void)initDoubleYou;
- (void)initAutoTune;
- (void)destroyUnusedAutotune;
- (void)resetParam;
- (void)applyEffect:(unsigned long long)arg1;
- (void)addNodesForDSPWithReverb:(_Bool)arg1;
- (void)addNodesForEQWithPitch:(_Bool)arg1;
- (void)addNodesForPitch;
- (void)changeToDSPModeWithReverb:(_Bool)arg1;
- (void)changeToEQModeWithPitch:(_Bool)arg1;
- (void)changeToPitchMode;
- (void)clearAllEffectNodes;
- (void)stopAQPlayer;
- (void)changeToLiveRoomHeadSetMode;
- (void)changeToLiveRoomSpeakerMode;
- (float)currentMusicVolume;
- (void)startMusicPlayerAfterSeconds:(double)arg1;
- (void)setupMusicRegion:(double)arg1;
- (void)openMusicFile;
- (double)regionPlayedTime;
- (double)currentPlayTime;
- (void)muteHumanTrack:(_Bool)arg1;
- (void)enableEarReturn;
- (void)setMusicVolume:(float)arg1;
- (void)setHumanVoiceVolume:(float)arg1;
- (void)audioFileWriteDispose;
- (void)stopRecord;
- (void)startRecord;
- (void)stopNotifyTimer;
- (void)startNotifyTimer;
- (int)findNodeForKey:(id)arg1;
- (void)removeMixerRenderNofify;
- (void)addMixerRenderNofity;
- (void)prepareAudioOrigianlWriteFile;
- (void)removeRouteChangeListener;
- (void)adjustOnRouteChange;
- (void)onNotificationAudioRouteChange:(id)arg1;
- (void)addRouteChangeListener;
- (void)notifyCurrentPlayTime;
- (void)initializeWork;
- (void)configureRecorderGraph;
- (void)configureAudioSession;
- (void)dealloc;
- (id)initWithRecordFilePath:(id)arg1;
- (unsigned int)getPlayedFrame;

@end

