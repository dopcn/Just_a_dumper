//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class KSDBManager, NSArray;

@interface KSWordBookModel : NSObject
{
    KSDBManager *_dbManager;
    NSArray *_colorArray;
}

+ (long long)wordBookNameCountFromDB;
+ (id)sharedInstance;
@property(retain, nonatomic) NSArray *colorArray; // @synthesize colorArray=_colorArray;
@property(retain, nonatomic) KSDBManager *dbManager; // @synthesize dbManager=_dbManager;
- (void).cxx_destruct;
- (void)addFromMyQuaryNewWordToWordBookName:(id)arg1 wordsArray:(id)arg2 progress:(CDUnknownBlockType)arg3;
- (long long)getQuaryImportWordsArray:(id)arg1 bookName:(id)arg2;
- (long long)getCountBookWordsWithbookName:(id)arg1 Uid:(id)arg2;
- (id)currentUserId;
- (long long)getCountOfUserUnSynchronizedWordBook;
- (long long)getCountOfUserUnSynchronizedWord;
- (void)resetDefaultWordBook;
- (void)saveUnLoginDataForLoginUser;
- (void)updateWordBookDataBaseForUid;
- (void)ebbinghausBookUpdateData;
- (void)delWordToEbbinghausTableAndChangeWordStateWithArray:(id)arg1;
- (void)addWordToEbbinghausTableAndChangeWordStateWithArray:(id)arg1;
- (id)getBackWordsFromEbbinghausTableWithOrderBy:(id)arg1;
- (id)getBackWordInfoFromEbbinghausTable;
- (id)getBackDelWordFromEbbinghausTable;
- (void)delEbbinghausTableWithWord:(id)arg1;
- (void)delEbbinghausTableWord;
- (_Bool)upDateEbbinghausTableWordName:(id)arg1;
- (long long)getNotReviewedWordCountEbbinghausTable;
- (id)getNotReviewedWordFromEbbinghausTableWithOrderBy:(id)arg1;
- (long long)getNotReviewedWordCountFromEbbinghausTable;
- (long long)getReviewedWordCountFromEbbinghausTable;
- (id)getReviewedWordFromEbbinghausTableWithOrderBy:(id)arg1;
- (long long)getInstituteWordCountFromEbbinghausTable;
- (id)getInstituteWordFromEbbinghausTable:(id)arg1;
- (_Bool)updateEbbinghausTable:(id)arg1;
- (_Bool)addWordToEbbinghausTable:(id)arg1;
- (_Bool)updateEbbinghausTableWithParaphraseAndSound:(id)arg1;
- (long long)getSecondsWithNextTime:(long long)arg1;
- (void)updateHistoryTableWithWord:(id)arg1 paraphrase:(id)arg2;
- (id)getBackWordsOfHistoryBookName:(id)arg1;
- (_Bool)DelHistoryBookNameWord:(id)arg1;
- (_Bool)clearHistoryBookName;
- (void)addNewWordToWordBookName:(id)arg1 wordsArray:(id)arg2 progress:(CDUnknownBlockType)arg3;
- (_Bool)addNewWordToWordBookName:(id)arg1 dataDict:(id)arg2;
- (_Bool)upDateModifyWordBookTable:(id)arg1 bookName:(id)arg2;
- (long long)getWordCountGroupFromWordBookTable;
- (long long)getWordcountFormWordBookTable;
- (id)getRandomWordFromWordBookName:(id)arg1;
- (id)getOrderWordFromWordBookName:(id)arg1;
- (long long)getBackDaysOfBookName:(id)arg1;
- (_Bool)upDateReadWord:(id)arg1 WordBookName:(id)arg2;
- (_Bool)upDateWordParas:(id)arg1 dict:(id)arg2;
- (id)getCountFromWordBookName:(id)arg1;
- (_Bool)getWordInstitute:(id)arg1;
- (id)getWordFromBookName:(id)arg1 orderBy:(id)arg2;
- (_Bool)clearWordBookName:(id)arg1;
- (id)getDelWordFromBookName:(id)arg1;
- (id)getInsertWordFromBookName:(id)arg1;
- (id)getmodifyReciteInfoFromBookName:(id)arg1;
- (id)getBackmodifyReciteInfoFromWordBookTable;
- (id)getBackInsertWordFromWordBookTable;
- (id)getBackDelWordFromWordBookTable;
- (_Bool)delWord:(id)arg1 fromWordBookName:(id)arg2;
- (_Bool)upDateWordId:(long long)arg1 word:(id)arg2;
- (_Bool)upDateWord:(id)arg1 fromWordBookName:(id)arg2;
- (_Bool)upDateBookMarkWord:(id)arg1 fromWordBookName:(id)arg2;
- (_Bool)delWordBookName:(id)arg1;
- (id)getWordBookName:(id)arg1;
- (id)getBackBookNameInfo:(id)arg1;
- (_Bool)upDateWordBookNameOfWord:(id)arg1 word:(id)arg2;
- (_Bool)upDateWordBookName:(id)arg1;
- (_Bool)haveWordBookName:(id)arg1;
- (_Bool)addWordBookName:(id)arg1 flagIndex:(long long)arg2;
- (int)colorIndex;
- (_Bool)updateAddWordBookOrder:(id)arg1;
- (void)importDataFromOldTableIfNecessary;
- (void)upgradeDB;
- (id)getWordBookNameFromDBWithStatus:(id)arg1;
- (id)init;

@end

