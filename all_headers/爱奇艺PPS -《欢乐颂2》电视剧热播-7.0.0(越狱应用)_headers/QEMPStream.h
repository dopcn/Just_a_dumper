//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "QYIMStreamModule.h"

#import "IQEMPStream-Protocol.h"
#import "QiyiStreamDelegate-Protocol.h"

@class GCDMulticastDelegate, NSData, NSDate, NSError, NSMutableArray, NSMutableDictionary, NSObject, NSString, QEMPDevice, QEMPParser, QYIMNode, QYIMStream;
@protocol OS_dispatch_queue, OS_dispatch_source, QEMPSASLAuthentication, QEMPStreamDelegate;

@interface QEMPStream : QYIMStreamModule <QiyiStreamDelegate, IQEMPStream>
{
    NSObject<OS_dispatch_queue> *qempQueue;
    void *qempQueueTag;
    NSObject<OS_dispatch_queue> *willSendElementQueue;
    NSObject<OS_dispatch_queue> *willReceiveElementQueue;
    NSObject<OS_dispatch_source> *connectTimer;
    QEMPParser *parser;
    NSError *parseError;
    GCDMulticastDelegate<QEMPStreamDelegate> *multicastDelegate;
    int state;
    NSString *hostName;
    unsigned short hostPort;
    QYIMNode *myUID;
    NSString *userName;
    NSString *loginType;
    NSString *extraContent;
    NSString *businessType;
    NSString *authType;
    NSString *authStr;
    QEMPDevice *device;
    NSString *sessionId;
    NSString *domain;
    NSString *appVersion;
    QYIMStream *qyIMStream;
    unsigned long long numberOfBytesSent;
    unsigned long long numberOfBytesReceived;
    unsigned char flags;
    unsigned char config;
    id <QEMPSASLAuthentication> auth;
    NSDate *authenticationDate;
    double keepAliveInterval;
    NSObject<OS_dispatch_source> *keepAliveTimer;
    double lastSendReceiveTime;
    NSData *keepAliveData;
    NSMutableArray *registeredModules;
    NSMutableDictionary *autoDelegateDic;
    _Bool _resetByteCountPerConnection;
    unsigned long long _startTLSPolicy;
    double _keepAliveInterval;
    unsigned long long _numberOfBytesSent;
    unsigned long long _numberOfBytesReceived;
    NSObject<OS_dispatch_queue> *_qempQueue;
    void *_qempQueueTag;
    unsigned long long _state;
}

+ (id)shareStream;
@property(readonly) unsigned long long state; // @synthesize state=_state;
@property(readonly) void *qempQueueTag; // @synthesize qempQueueTag=_qempQueueTag;
@property(readonly) NSObject<OS_dispatch_queue> *qempQueue; // @synthesize qempQueue=_qempQueue;
@property(readonly) unsigned long long numberOfBytesReceived; // @synthesize numberOfBytesReceived=_numberOfBytesReceived;
@property(readonly) unsigned long long numberOfBytesSent; // @synthesize numberOfBytesSent=_numberOfBytesSent;
@property double keepAliveInterval; // @synthesize keepAliveInterval=_keepAliveInterval;
@property(nonatomic) unsigned long long startTLSPolicy; // @synthesize startTLSPolicy=_startTLSPolicy;
@property _Bool resetByteCountPerConnection; // @synthesize resetByteCountPerConnection=_resetByteCountPerConnection;
- (void).cxx_destruct;
- (void)qempPlainAuth:(id)arg1 didNotReceiveAuthRsp:(id)arg2 dueToTimeout:(double)arg3;
- (void)qiyiStreamDidDisconnect:(id)arg1 withError:(id)arg2;
- (void)qiyiStream:(id)arg1 didSendDataWithTag:(long long)arg2;
- (void)qiyiStream:(id)arg1 didReceiveData:(id)arg2 withTag:(long long)arg3;
- (void)qiyiStream:(id)arg1 didConnectToHost:(id)arg2 port:(unsigned short)arg3;
- (void)qiyiStream:(id)arg1 parseData:(id)arg2;
- (void)qiyiStreamDidSecure:(id)arg1;
- (void)enumerateModulesOfClass:(Class)arg1 withBlock:(CDUnknownBlockType)arg2;
- (void)enumerateModulesWithBlock:(CDUnknownBlockType)arg1;
- (void)removeAutoDelegate:(id)arg1 delegateQueue:(id)arg2 fromModulesOfClass:(Class)arg3;
- (void)autoAddDelegate:(id)arg1 delegateQueue:(id)arg2 toModulesOfClass:(Class)arg3;
- (void)unregisterModule:(id)arg1;
- (void)registerModule:(id)arg1;
- (void)setIsSecure:(_Bool)arg1;
- (_Bool)isSecure;
- (id)authenticationDate;
- (void)setIsAuthenticated:(_Bool)arg1;
- (_Bool)isAuthenticated;
- (_Bool)isAuthenticating;
- (_Bool)authenticate:(id)arg1 error:(id *)arg2;
- (_Bool)authenticateWithPassword:(id)arg1 error:(id *)arg2;
- (void)sendAuthElement:(id)arg1;
- (void)handleAuth:(id)arg1;
- (void)handleNegotiationResponse:(id)arg1;
- (void)startAuthentication;
- (void)handleQYIMStreamAfterConnect:(id)arg1;
- (void)continueReceiveLogoutResponse:(id)arg1;
- (void)continueReceiveError:(id)arg1;
- (void)continueReceiveNoticeResponse:(id)arg1;
- (void)continueReceiveNotice:(id)arg1;
- (void)continueReceiveCommandResponse:(id)arg1;
- (void)continueReceiveCommand:(id)arg1;
- (void)continueReceivePong:(id)arg1;
- (void)continueReceiveAuthResponse:(id)arg1;
- (void)continueReceiveMessageResponse:(id)arg1;
- (void)continueReceiveMessage:(id)arg1;
- (void)receiveLogoutResponse:(id)arg1;
- (void)receiveError:(id)arg1;
- (void)receiveNoticeResponse:(id)arg1;
- (void)receiveNotice:(id)arg1;
- (void)receiveCommandResponse:(id)arg1;
- (void)receiveCommand:(id)arg1;
- (void)receivePong:(id)arg1;
- (void)receiveAuthResponse:(id)arg1;
- (void)receiveMessageResponse:(id)arg1;
- (void)receiveMessage:(id)arg1;
- (void)receiveElement:(id)arg1;
- (void)qempParserDidParseData:(id)arg1;
- (void)qempParser:(id)arg1 didFail:(id)arg2;
- (void)qempParser:(id)arg1 didReadElement:(id)arg2;
- (void)continueSendElement:(id)arg1 withTag:(long long)arg2;
- (void)continueSendLogout:(id)arg1 withTag:(long long)arg2;
- (void)continueSendCommand:(id)arg1 withTag:(long long)arg2;
- (void)continueSendNotice:(id)arg1 withTag:(long long)arg2;
- (void)continueSendPing:(id)arg1 withTag:(long long)arg2;
- (void)continueSendAuth:(id)arg1 withTag:(long long)arg2;
- (void)continueSendMessage:(id)arg1 withTag:(long long)arg2;
- (void)sendLogout:(id)arg1 withTag:(long long)arg2;
- (void)sendPing:(id)arg1 withTag:(long long)arg2;
- (void)sendNotice:(id)arg1 withTag:(long long)arg2;
- (void)sendCommand:(id)arg1 withTag:(long long)arg2;
- (void)sendAuth:(id)arg1 withTag:(long long)arg2;
- (void)sendMessage:(id)arg1 withTag:(long long)arg2;
- (void)sendElement:(id)arg1 withTag:(long long)arg2;
- (void)failToSendElement:(id)arg1 error:(id)arg2;
- (void)sendElement:(id)arg1;
- (void)continueStartTLS:(id)arg1;
- (void)startTLS;
- (void)sendOpeningNegotiation;
- (void)startNegotiation;
- (void)disconnectAfterSending;
- (void)disconnect;
- (void)doConnectTimeout;
- (void)endConnectTimeout;
- (void)startConnectTimeout:(double)arg1;
- (_Bool)connectToHost:(id)arg1 onPort:(unsigned short)arg2 withTimeout:(double)arg3 error:(id *)arg4;
- (_Bool)connectWithTimeout:(double)arg1 error:(id *)arg2;
- (_Bool)isConnected;
- (_Bool)isConnecting;
- (_Bool)isDisconnected;
- (void)setDidStartNegotiation:(_Bool)arg1;
- (_Bool)didStartNegotiation;
- (void)removeDelegate:(id)arg1;
- (void)removeDelegate:(id)arg1 delegateQueue:(id)arg2;
- (void)addDelegate:(id)arg1 delegateQueue:(id)arg2;
@property _Bool enableBackgroundingOnSocket;
@property(nonatomic) _Bool onlyConnectSocket;
@property(nonatomic) _Bool needKeepSocket;
- (void)setAppVersion:(id)arg1;
- (id)appVersion;
- (void)setDevice:(id)arg1;
- (id)device;
- (void)setDomain:(id)arg1;
- (id)domain;
- (void)setAuthStr:(id)arg1;
- (id)authStr;
- (void)setAuthType:(id)arg1;
- (id)authType;
- (void)setBusinessType:(id)arg1;
- (id)businessType;
- (void)setExtraContent:(id)arg1;
- (id)extraContent;
- (void)setLoginType:(id)arg1;
- (id)loginType;
- (void)setMyUID:(id)arg1;
- (id)myUID;
- (void)setHostPort:(unsigned short)arg1;
- (unsigned short)hostPort;
- (void)setHostName:(id)arg1;
- (id)hostName;
- (void)dealloc;
- (void)commonInit;
- (id)initWithDispatchQueue:(id)arg1 businessType:(unsigned short)arg2 cipherType:(unsigned char)arg3 Qos:(unsigned char)arg4;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

