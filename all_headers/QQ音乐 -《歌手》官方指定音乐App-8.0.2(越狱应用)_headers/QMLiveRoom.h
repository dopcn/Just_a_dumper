//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

#import "DownLoadEditProtocol-Protocol.h"
#import "QAVRoomStateDelegate-Protocol.h"
#import "QAVStreamVideoDelegate-Protocol.h"
#import "QMLSLoginCallBack-Protocol.h"

@class NSMutableArray, NSMutableOrderedSet, NSString, NSTimer, QMLSPlayingSongStatus, QMLSRoomAvailableInfo, QMLSRoomConfig, QMLSRoomInfo, QMLSUserInfo, QMStatInfo, SingleHourglass, SongInfo;
@protocol QMIMMessageListener, QMLiveMediaDelegate, QMLiveRoomDelegate, QMLiveRoomMessageDelegate;

@interface QMLiveRoom : NSObject <DownLoadEditProtocol, QAVStreamVideoDelegate, QAVRoomStateDelegate, QMLSLoginCallBack>
{
    _Bool _isUserAdministrator;
    _Bool _isForbiddenSend;
    _Bool _isIMSDKNoNewMessage;
    _Bool _needRecoverPlaylist;
    unsigned long long _showID;
    long long _roomState;
    QMLSRoomAvailableInfo *_availableInfo;
    long long _ownerType;
    QMLSRoomConfig *_roomConfig;
    QMLSPlayingSongStatus *_songStatus;
    id <QMLiveRoomDelegate> _roomEventDelegate;
    id <QMLiveMediaDelegate> _mediaDelegate;
    id <QMLiveRoomMessageDelegate> _messageDelegate;
    NSTimer *_liveHeartBeat;
    QMLSRoomInfo *_roomToSwitch;
    long long _switchRetryTimes;
    QMLSRoomInfo *_tempRoom;
    QMLSRoomInfo *_roomInfo;
    QMLSUserInfo *_userInfo;
    NSString *_sendFailedHornContent;
    unsigned long long _lastIMCommentMessageRetTime;
    unsigned long long _lastIMGiftMessageRetTime;
    id <QMIMMessageListener> _listener;
    NSMutableOrderedSet *_selectedSongs;
    unsigned long long _currentIndex;
    SongInfo *_currentAudienceSong;
    NSMutableArray *_myGifts;
    NSMutableArray *_othersGifts;
    SingleHourglass *_totalTimeGlass;
    QMStatInfo *_timeConsumeStat;
    double _liveInBackgroundStateTime;
}

@property(nonatomic) double liveInBackgroundStateTime; // @synthesize liveInBackgroundStateTime=_liveInBackgroundStateTime;
@property(retain, nonatomic) QMStatInfo *timeConsumeStat; // @synthesize timeConsumeStat=_timeConsumeStat;
@property(retain, nonatomic) SingleHourglass *totalTimeGlass; // @synthesize totalTimeGlass=_totalTimeGlass;
@property(retain, nonatomic) NSMutableArray *othersGifts; // @synthesize othersGifts=_othersGifts;
@property(retain, nonatomic) NSMutableArray *myGifts; // @synthesize myGifts=_myGifts;
@property(nonatomic) _Bool needRecoverPlaylist; // @synthesize needRecoverPlaylist=_needRecoverPlaylist;
@property(retain, nonatomic) SongInfo *currentAudienceSong; // @synthesize currentAudienceSong=_currentAudienceSong;
@property(nonatomic) unsigned long long currentIndex; // @synthesize currentIndex=_currentIndex;
@property(retain, nonatomic) NSMutableOrderedSet *selectedSongs; // @synthesize selectedSongs=_selectedSongs;
@property(nonatomic) __weak id <QMIMMessageListener> listener; // @synthesize listener=_listener;
@property(nonatomic) unsigned long long lastIMGiftMessageRetTime; // @synthesize lastIMGiftMessageRetTime=_lastIMGiftMessageRetTime;
@property(nonatomic) unsigned long long lastIMCommentMessageRetTime; // @synthesize lastIMCommentMessageRetTime=_lastIMCommentMessageRetTime;
@property(retain, nonatomic) NSString *sendFailedHornContent; // @synthesize sendFailedHornContent=_sendFailedHornContent;
@property(nonatomic) _Bool isIMSDKNoNewMessage; // @synthesize isIMSDKNoNewMessage=_isIMSDKNoNewMessage;
@property(nonatomic) _Bool isForbiddenSend; // @synthesize isForbiddenSend=_isForbiddenSend;
@property(retain, nonatomic) QMLSUserInfo *userInfo; // @synthesize userInfo=_userInfo;
@property(retain, nonatomic) QMLSRoomInfo *roomInfo; // @synthesize roomInfo=_roomInfo;
@property(retain, nonatomic) QMLSRoomInfo *tempRoom; // @synthesize tempRoom=_tempRoom;
@property(nonatomic) long long switchRetryTimes; // @synthesize switchRetryTimes=_switchRetryTimes;
@property(retain, nonatomic) QMLSRoomInfo *roomToSwitch; // @synthesize roomToSwitch=_roomToSwitch;
@property(retain, nonatomic) NSTimer *liveHeartBeat; // @synthesize liveHeartBeat=_liveHeartBeat;
@property(nonatomic) __weak id <QMLiveRoomMessageDelegate> messageDelegate; // @synthesize messageDelegate=_messageDelegate;
@property(nonatomic) __weak id <QMLiveMediaDelegate> mediaDelegate; // @synthesize mediaDelegate=_mediaDelegate;
@property(nonatomic) __weak id <QMLiveRoomDelegate> roomEventDelegate; // @synthesize roomEventDelegate=_roomEventDelegate;
@property(nonatomic) _Bool isUserAdministrator; // @synthesize isUserAdministrator=_isUserAdministrator;
@property(retain, nonatomic) QMLSPlayingSongStatus *songStatus; // @synthesize songStatus=_songStatus;
@property(retain, nonatomic) QMLSRoomConfig *roomConfig; // @synthesize roomConfig=_roomConfig;
@property(nonatomic) long long ownerType; // @synthesize ownerType=_ownerType;
@property(retain, nonatomic) QMLSRoomAvailableInfo *availableInfo; // @synthesize availableInfo=_availableInfo;
@property(nonatomic) long long roomState; // @synthesize roomState=_roomState;
@property(nonatomic) unsigned long long showID; // @synthesize showID=_showID;
- (void).cxx_destruct;
- (id)shareInfo;
- (void)onLiveShowWillEnterForeground;
- (void)onLiveShowWillEnterBackground;
- (void)audioInterruption:(id)arg1;
- (void)rePostInterruptionEndedNotificationAfterDelay;
- (void)handleAppDidBecomeActive;
- (void)onSwitchQAVRoomComplete:(int)arg1 error:(id)arg2;
- (void)onIMSDKUserSigExpired;
- (void)onIMSDKForceOffline;
- (void)onQAVRoomDisconnected;
- (void)cleanRoom;
- (void)refreshRoom:(id)arg1;
- (void)switchToRoom:(id)arg1;
- (id)switchRoom:(_Bool)arg1;
- (void)doReport;
- (void)cleanResource;
- (void)exitRoom;
- (void)exitLiveRoomOnly;
- (void)handleEnterRoomFailed:(id)arg1;
- (void)handleEnterRoomSuccessed;
- (void)enterRoom;
- (void)stopHeartBeat;
- (void)startHeartBeat;
- (_Bool)shouldRecoverPlayList;
- (_Bool)hasEnterRoom;
- (id)liveRoomInfo;
- (void)requestRoomInfoForIMSDKDisconnect;
- (void)requestRoomInfo:(unsigned long long)arg1;
- (void)quitGroup:(id)arg1;
- (void)joinGroup:(id)arg1;
- (id)checkEnterQAVRoom:(id)arg1 userInfo:(id)arg2;
- (id)checkIMLoginWithUserInfo:(id)arg1;
- (id)checkIsRoomAvailable;
- (_Bool)canEnterRoom:(id)arg1;
- (id)checkInitlizeIMSDK:(id)arg1;
- (id)checkHasSignature;
- (void)addNotifications;
- (void)initializeRoom;
- (id)initWithShowid:(unsigned long long)arg1 owner:(long long)arg2;
- (void)dealloc;
- (void)handlePlayStateMessage:(id)arg1;
- (void)syncAccompanyPlayStatus:(id)arg1 songInfoKey:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)syncSongListToServer;
- (void)getCurrentAudienceSongById:(unsigned long long)arg1 type:(int)arg2;
- (_Bool)handleNewSongInfoKey:(id)arg1 andPlayStatus:(id)arg2;
- (_Bool)pause;
- (_Bool)resume;
- (_Bool)innerPlaySongAtIndex:(unsigned long long)arg1;
- (_Bool)deleteSongAtIndexes:(id)arg1;
- (_Bool)deleteSongAtIndex:(unsigned long long)arg1;
- (_Bool)findFirstPlayableSongAndPlay;
- (_Bool)playNext;
- (_Bool)playSongAtIndex:(unsigned long long)arg1;
- (void)downloadEditViewControllerClickHeaderFinish:(id)arg1;
- (void)onApplyOrder:(id)arg1 byOrderedObjects:(id)arg2;
- (void)onEditDone:(id)arg1 deletedObjects:(id)arg2 withDeleteBlock:(CDUnknownBlockType)arg3;
- (void)onNotifySongDownloaded:(id)arg1;
- (void)fetchALlSongs;
- (void)recoverPlayList;
- (unsigned long long)currentIndex:(unsigned long long)arg1 songType:(unsigned long long)arg2;
- (unsigned long long)currentPlayIndex;
- (id)currentPlaySong;
- (id)allSelectedSongs;
- (_Bool)isSongSelected:(id)arg1;
- (void)removeAllSongs;
- (_Bool)deleteSongWithExpInfo:(id)arg1;
- (_Bool)addSongWithExpInfos:(id)arg1;
- (id)getOMAvRoomInfo:(unsigned int)arg1;
- (void)stopRecordLiveStream;
- (void)startRecordLiveStream;
- (void)syncHLSStreamUrlToServerByRoomid:(unsigned int)arg1;
- (void)onQAVAccompanyStatChanged:(long long)arg1 offSet:(double)arg2;
- (void)onQAVAccompanyProgressDidUpdate:(double)arg1 duration:(double)arg2;
- (void)resumeLiveStreaming;
- (void)pauseLiveStreaming;
- (void)qavDidReceivedRemoteFrame:(id)arg1;
- (void)qavDidRecivedPreviewFrame:(id)arg1;
- (_Bool)configureIsFrontCamera;
- (void)onAnchorHasNoAudio;
- (void)onAnchorHasAudio;
- (void)onAnchorDisableCamera:(id)arg1;
- (void)onAnchorEnableCamera:(id)arg1;
- (void)onAnchorWillExitRoom;
- (void)onAnchorWillEnterRoom:(id)arg1;
- (void)onEndpointsUpdateInfo:(long long)arg1 endpointlist:(id)arg2;
- (void)stopLiveStreamingMoudle;
- (void)startLiveStreamingMoudle;
- (void)handleNewUserEnterRoomMessage:(id)arg1;
- (void)handleNewSystemHostMessage:(id)arg1;
- (void)handleNewHornPriceMessage:(id)arg1;
- (void)handleNewShareImageMessage:(id)arg1;
- (void)handleNewDigitalAlbumMessage:(id)arg1;
- (void)handleNewForbiddenMessage:(id)arg1;
- (void)handleNewBGImageMessages:(id)arg1;
- (void)handleHornMessage:(id)arg1;
- (void)handleLiveStopMessage:(id)arg1;
- (void)handleRoomUserCountMessage:(id)arg1;
- (void)onNewAnchorStatusMessages:(id)arg1;
- (void)handleNewGiftMessage:(id)arg1;
- (void)handleNewCommentMessage:(id)arg1;
- (void)onNewMessageReceived:(id)arg1 type:(unsigned long long)arg2;
- (id)parseIMMessage:(id)arg1 type:(unsigned long long)arg2;
- (void)getForbiddenUserListByShowid:(unsigned long long)arg1;
- (void)followAnchor:(unsigned long long)arg1 andIsFollow:(_Bool)arg2;
- (void)disableForbiddenUserSendMessage:(id)arg1 forbiddenUin:(unsigned long long)arg2 nickName:(id)arg3;
- (void)forbiddenUserSendMessage:(id)arg1 forbiddenUin:(unsigned long long)arg2 senderNick:(id)arg3;
- (void)sendTextMessage:(id)arg1;
- (void)sendHornMessage:(id)arg1;
- (id)failedHornContent;
- (void)disableMessageModule;
- (void)enableMessageModule:(id)arg1;
- (void)cleanCachedGiftBitMapData;
- (void)caculateTop3User:(unsigned long long)arg1 roomAllGiftValue:(unsigned long long)arg2 selfGiftValue:(unsigned long long)arg3;
- (void)addOtherGifts:(id)arg1;
- (void)addMyGift:(id)arg1;
- (id)findGiftToShow;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

