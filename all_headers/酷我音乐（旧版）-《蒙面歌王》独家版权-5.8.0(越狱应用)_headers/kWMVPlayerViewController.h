//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "BaseMemoryViewController.h"

#import "MVPlayManagerObserver-Protocol.h"
#import "MVPlayerProtocol-Protocol.h"

@class KWMoviePlayerOverlayViewController, MPMoviePlayerController, MVAntiHotlinkingRequestClient, MVMediaInfo, MediaItemInfo, NSArray, NSDate, NSDictionary, NSString, NSTimer;
@protocol MVPlayerObserver;

@interface kWMVPlayerViewController : BaseMemoryViewController <MVPlayManagerObserver, MVPlayerProtocol>
{
    _Bool isActiveStop;
    _Bool _hasStadardQuaility;
    _Bool _hasHighQuality;
    _Bool _shouldAutoPlay;
    _Bool _isInQualitySwitching;
    _Bool _isStart;
    _Bool _isAirPlay;
    _Bool _isAirPlayEnd;
    int _playState;
    int _nowPlayingQuality;
    int _blockCount;
    int _requestID;
    MPMoviePlayerController *_moviePlayer;
    KWMoviePlayerOverlayViewController *_overlay;
    NSTimer *_playbackScheduleTimer;
    NSTimer *_bufferingProgressTimer;
    double _currentPlaybackTime;
    double _duration;
    id <MVPlayerObserver> _MVPlayerObserver;
    double _playableDuration;
    MediaItemInfo *_nowPlayingItem;
    MVMediaInfo *_requestParam;
    MVAntiHotlinkingRequestClient *_antiHotlinkingRequest;
    NSDate *_lastCheckDate;
    NSString *_realURL;
    double _switchProgressAfterPlay;
    unsigned long long _mediaType;
    NSDictionary *_nowPlayingMVInfo;
    long long _delayTime;
    NSArray *_mediaInfos;
    long long _mediaInfoIndex;
    long long _changeItem;
}

+ (id)getInstance;
+ (void)enterForeground;
+ (void)enterBackground;
+ (_Bool)isNowPlayingMV;
@property(nonatomic) _Bool isAirPlayEnd; // @synthesize isAirPlayEnd=_isAirPlayEnd;
@property(nonatomic) _Bool isAirPlay; // @synthesize isAirPlay=_isAirPlay;
@property(nonatomic) int requestID; // @synthesize requestID=_requestID;
@property(nonatomic) long long changeItem; // @synthesize changeItem=_changeItem;
@property(nonatomic) long long mediaInfoIndex; // @synthesize mediaInfoIndex=_mediaInfoIndex;
@property(retain, nonatomic) NSArray *mediaInfos; // @synthesize mediaInfos=_mediaInfos;
@property(nonatomic) long long delayTime; // @synthesize delayTime=_delayTime;
@property(nonatomic) _Bool isStart; // @synthesize isStart=_isStart;
@property(nonatomic) int blockCount; // @synthesize blockCount=_blockCount;
@property(retain, nonatomic) NSDictionary *nowPlayingMVInfo; // @synthesize nowPlayingMVInfo=_nowPlayingMVInfo;
@property(nonatomic) unsigned long long mediaType; // @synthesize mediaType=_mediaType;
@property(nonatomic) _Bool isInQualitySwitching; // @synthesize isInQualitySwitching=_isInQualitySwitching;
@property(nonatomic) _Bool shouldAutoPlay; // @synthesize shouldAutoPlay=_shouldAutoPlay;
@property(nonatomic) _Bool hasHighQuality; // @synthesize hasHighQuality=_hasHighQuality;
@property(nonatomic) _Bool hasStadardQuaility; // @synthesize hasStadardQuaility=_hasStadardQuaility;
@property(nonatomic) double switchProgressAfterPlay; // @synthesize switchProgressAfterPlay=_switchProgressAfterPlay;
@property(retain, nonatomic) NSString *realURL; // @synthesize realURL=_realURL;
@property(nonatomic) int nowPlayingQuality; // @synthesize nowPlayingQuality=_nowPlayingQuality;
@property(retain, nonatomic) NSDate *lastCheckDate; // @synthesize lastCheckDate=_lastCheckDate;
@property(retain, nonatomic) MVAntiHotlinkingRequestClient *antiHotlinkingRequest; // @synthesize antiHotlinkingRequest=_antiHotlinkingRequest;
@property(retain, nonatomic) MVMediaInfo *requestParam; // @synthesize requestParam=_requestParam;
@property(retain, nonatomic) MediaItemInfo *nowPlayingItem; // @synthesize nowPlayingItem=_nowPlayingItem;
@property(nonatomic) int playState; // @synthesize playState=_playState;
@property(nonatomic) double playableDuration; // @synthesize playableDuration=_playableDuration;
@property(retain, nonatomic) id <MVPlayerObserver> MVPlayerObserver; // @synthesize MVPlayerObserver=_MVPlayerObserver;
@property(nonatomic) double duration; // @synthesize duration=_duration;
@property(nonatomic) double currentPlaybackTime; // @synthesize currentPlaybackTime=_currentPlaybackTime;
@property(retain, nonatomic) NSTimer *bufferingProgressTimer; // @synthesize bufferingProgressTimer=_bufferingProgressTimer;
@property(retain, nonatomic) NSTimer *playbackScheduleTimer; // @synthesize playbackScheduleTimer=_playbackScheduleTimer;
@property(retain, nonatomic) KWMoviePlayerOverlayViewController *overlay; // @synthesize overlay=_overlay;
@property(retain, nonatomic) MPMoviePlayerController *moviePlayer; // @synthesize moviePlayer=_moviePlayer;
- (void)DownloadResultCallback:(int)arg1 errorNO:(int)arg2;
- (void)DownloadStatusCallback:(int)arg1 status:(unsigned long long)arg2;
- (void)DownloadProgressCallback:(int)arg1 step:(int)arg2 total:(int)arg3;
- (void)didRotateFromInterfaceOrientation:(long long)arg1;
- (unsigned long long)supportedInterfaceOrientations;
- (_Bool)shouldAutorotateToInterfaceOrientation:(long long)arg1;
- (void)AirPlayVideoActiveDidChange:(id)arg1;
- (void)onMovieSourceTypeAvailable:(id)arg1;
- (void)onMoviePlayerWillExitFullscreen:(id)arg1;
- (void)onMoviePlayerWillEnterFullscreen:(id)arg1;
- (void)onMoviePlayerThumbnailImageRequestDidFinish:(id)arg1;
- (void)onMoviePlayerScalingModeDidChange:(id)arg1;
- (void)onMoviePlayerPlaybackStateDidChange:(id)arg1;
- (void)notifyNowPlayingItemChanged;
- (void)notifyPlayStateChanged;
- (_Bool)playbackCircle;
- (void)onMoviePlayerPlaybackDidFinish:(id)arg1;
- (void)videoPlayEnd;
- (void)onMoviePlayerNowPlayingMovieDidChange:(id)arg1;
- (void)onMoviePlayerLoadStateDidChange:(id)arg1;
- (void)onMoviePlayerDidExitFullscreen:(id)arg1;
- (void)onMoviePlayerDidEnterFullscreen:(id)arg1;
- (void)onMoviePlayerNaturalSizeAvailable:(id)arg1;
- (void)onMoviePlayerMediaTypeAvailable:(id)arg1;
- (void)onMoviePlayerDurationAvailable:(id)arg1;
- (int)getDelayTime;
- (int)getBlockCount;
- (void)seek:(double)arg1;
- (_Bool)airPlayIsEnd;
- (void)seek_:(double)arg1;
- (void)notifyNowPlayingQualityChanged;
- (void)notifyDurationAvailable;
- (void)enableBufferingProgressTimer:(id)arg1;
- (void)onBufferingTimerCallback:(id)arg1;
- (void)onBufferingTimerCallback_:(id)arg1;
- (void)enablePlaybackScheduleTimer:(id)arg1;
- (void)onScheduleTimerCallback:(id)arg1;
- (void)deleteCachedMV;
- (_Bool)getLMVisDownload;
- (_Bool)getMVisDownload;
- (void)downloadMVPic;
- (void)downloadComplete;
- (void)stopDownload;
- (int)getDownloadProgress;
- (_Bool)isInAirPlay;
- (void)playMVWithMediaItem:(id)arg1 musicList:(id)arg2;
- (_Bool)mediaItemAlreadyExist:(id)arg1 array:(id)arg2;
- (id)buildMVPlayList:(id)arg1 musicList:(id)arg2;
- (id)viewController;
- (void)respondToDoubleTapGesture;
- (void)switchMovieItem:(long long)arg1;
- (void)switchToQuality:(int)arg1;
- (void)pause;
- (void)play;
- (void)dealloc;
- (void)registerMoviePlayerNotifications;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)registerMoviePlayerNotificationWithName:(id)arg1 withSelector:(SEL)arg2;
- (void)viewDidLoad;
- (void)viewDidUnload;
- (int)translateStringToMVQuality:(id)arg1;
- (id)getMVInfoFromeRespones:(const char *)arg1 length:(int)arg2;
- (id)getQualityFromeMVInfo:(id)arg1;
- (int)getBitrateFromMVInfo:(id)arg1;
- (id)getRealUrlFromMVInfo:(id)arg1;
- (void)setDownloadState;
- (void)cleanOldMV;
- (void)updateLastPlayTime;
- (void)playFile:(id)arg1 quality_int:(int)arg2;
- (id)getMVPath:(int)arg1 quality_ret:(int *)arg2;
- (id)getPlayUrl:(int)arg1 url:(id)arg2;
- (void)onAnitiHotlinkingCallback:(id)arg1;
- (void)prepareToPlayForMVQuality_:(int)arg1;
- (void)prepareToPlayForMVQuality:(int)arg1;
- (void)prepareToPlay;
- (id)initWithMediaItemInfo:(id)arg1;
- (id)initWithMediaItemInfoArray:(id)arg1 startItem:(long long)arg2;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

