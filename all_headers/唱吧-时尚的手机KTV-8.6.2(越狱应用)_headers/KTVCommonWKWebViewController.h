//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "KTVBaseViewController.h"

#import "KTVCommonWebViewInterruptDelegate-Protocol.h"
#import "UIGestureRecognizerDelegate-Protocol.h"
#import "UserLoginDelegate-Protocol.h"
#import "WKNavigationDelegate-Protocol.h"
#import "WKUIDelegate-Protocol.h"

@class KTVCommonWebViewInterrupt, KTVEmptyView, KTVSharePanelViewController, NSDictionary, NSLayoutConstraint, NSString, UIActivityIndicatorView, UILabel, UIView, WKWebView;

@interface KTVCommonWKWebViewController : KTVBaseViewController <UIGestureRecognizerDelegate, UserLoginDelegate, WKUIDelegate, KTVCommonWebViewInterruptDelegate, WKNavigationDelegate>
{
    _Bool _shouldShowAlert;
    _Bool _needMiniPlayerPlaying;
    NSString *_URLString;
    NSString *_logTitle;
    WKWebView *_myWebView;
    NSLayoutConstraint *_webViewBottomConstraint;
    KTVEmptyView *_emptyView;
    UIView *_contentView;
    UIActivityIndicatorView *_indicatorView;
    UILabel *_topAlertView;
    NSLayoutConstraint *_topAlertViewHeightConstraint;
    NSDictionary *_loginParams;
    KTVCommonWebViewInterrupt *_interrupt;
    KTVSharePanelViewController *_shareImagePanel;
}

@property(retain, nonatomic) KTVSharePanelViewController *shareImagePanel; // @synthesize shareImagePanel=_shareImagePanel;
@property(retain, nonatomic) KTVCommonWebViewInterrupt *interrupt; // @synthesize interrupt=_interrupt;
@property(retain, nonatomic) NSDictionary *loginParams; // @synthesize loginParams=_loginParams;
@property(nonatomic) _Bool needMiniPlayerPlaying; // @synthesize needMiniPlayerPlaying=_needMiniPlayerPlaying;
@property(retain, nonatomic) NSLayoutConstraint *topAlertViewHeightConstraint; // @synthesize topAlertViewHeightConstraint=_topAlertViewHeightConstraint;
@property(retain, nonatomic) UILabel *topAlertView; // @synthesize topAlertView=_topAlertView;
@property(retain, nonatomic) UIActivityIndicatorView *indicatorView; // @synthesize indicatorView=_indicatorView;
@property(nonatomic) __weak UIView *contentView; // @synthesize contentView=_contentView;
@property(retain, nonatomic) KTVEmptyView *emptyView; // @synthesize emptyView=_emptyView;
@property(nonatomic) _Bool shouldShowAlert; // @synthesize shouldShowAlert=_shouldShowAlert;
@property(retain, nonatomic) NSLayoutConstraint *webViewBottomConstraint; // @synthesize webViewBottomConstraint=_webViewBottomConstraint;
@property(retain, nonatomic) WKWebView *myWebView; // @synthesize myWebView=_myWebView;
@property(copy, nonatomic) NSString *logTitle; // @synthesize logTitle=_logTitle;
@property(copy, nonatomic) NSString *URLString; // @synthesize URLString=_URLString;
- (void).cxx_destruct;
- (void)dealloc;
- (_Bool)canAutoRotate;
- (void)userLoggedInSuccessfully;
- (void)remoteCommandTargetsDidChange:(id)arg1;
- (void)notifyShareSuccess:(id)arg1;
- (void)hideEmptyView;
- (void)showEmptyView;
- (_Bool)isNeedShowEmptyView;
- (void)webViewWebContentProcessDidTerminate:(id)arg1;
- (void)webView:(id)arg1 didFailNavigation:(id)arg2 withError:(id)arg3;
- (void)webView:(id)arg1 didFailProvisionalNavigation:(id)arg2 withError:(id)arg3;
- (void)webView:(id)arg1 didFinishNavigation:(id)arg2;
- (void)webView:(id)arg1 didStartProvisionalNavigation:(id)arg2;
- (void)webView:(id)arg1 decidePolicyForNavigationAction:(id)arg2 decisionHandler:(CDUnknownBlockType)arg3;
- (void)image:(id)arg1 didFinishSavingWithError:(id)arg2 contextInfo:(void *)arg3;
- (void)webViewInterrupt:(id)arg1 interruptImageSuccess:(id)arg2;
- (void)webViewInterrupt:(id)arg1 shouldExecuteScript:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)pop;
- (void)controllerGoBack;
- (void)webPageGoBack;
- (void)dismissUnsafeAlertView;
- (void)showUnsafeAlertView;
- (void)loadData;
- (void)hideCloseButton;
- (void)setupCloseButton;
- (void)viewDidLoad;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

