//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

@interface ImageFilter : NSObject
{
}

+ (void)calculateMaskCompositeRect:(struct CGSize)arg1 maskSize:(struct CGSize)arg2 cutOp:(int)arg3 scaleMaskSize:(struct CGSize *)arg4 srcRect:(struct CGRect *)arg5 maskRect:(struct CGRect *)arg6;
+ (id)loadFilter:(id)arg1 table:(id)arg2 masks:(id)arg3 cutOp:(id)arg4 comop:(id)arg5 opacity:(id)arg6 features:(float *)arg7 shape:(float *)arg8 desiredFaceHollow:(_Bool)arg9;
+ (id)loadFilter:(id)arg1 table:(id)arg2 masks:(id)arg3 cutOp:(id)arg4 comop:(id)arg5 opacity:(id)arg6 faces:(id)arg7 index:(id)arg8 desiredFaceHollow:(_Bool)arg9;
+ (id)cropImage:(id)arg1 top:(int)arg2 left:(int)arg3 right:(int)arg4 bottom:(int)arg5;
+ (id)AnomalyHoleProcess:(id)arg1 mask:(id)arg2;
+ (void)getClass:(id)arg1 info:(float *)arg2 classes:(int **)arg3 classsize:(int *)arg4;
+ (int)distance:(int)arg1 y1:(int)arg2 x2:(int)arg3 y2:(int)arg4;
+ (id)HoleFilterAstral_New:(id)arg1 mask:(id)arg2 radius:(int)arg3 transsize:(int)arg4;
+ (id)HoleFilterAstral:(id)arg1 mask:(id)arg2 radius:(int)arg3 transsize:(int)arg4;
+ (id)HoleFilterMusic_New:(id)arg1 mask:(id)arg2 radius:(int)arg3 transsize:(int)arg4;
+ (id)HoleFilterStar_New:(id)arg1 mask:(id)arg2 radius:(int)arg3 transsize:(int)arg4;
+ (id)HoleFilterCatClaw_New:(id)arg1 mask:(id)arg2 radius:(int)arg3 transsize:(int)arg4;
+ (id)HoleFilterHeartShape_New:(id)arg1 mask:(id)arg2 radius:(int)arg3 transsize:(int)arg4;
+ (id)HoleFilterDoamond_New:(id)arg1 mask:(id)arg2 radius:(int)arg3 transsize:(int)arg4;
+ (id)HoleFilterMusic:(id)arg1 mask:(id)arg2 radius:(int)arg3 transsize:(int)arg4;
+ (id)HoleFilterStar:(id)arg1 mask:(id)arg2 radius:(int)arg3 transsize:(int)arg4;
+ (id)HoleFilterHeartShape:(id)arg1 mask:(id)arg2 radius:(int)arg3 transsize:(int)arg4;
+ (id)HoleFilterCatClaw:(id)arg1 mask:(id)arg2 radius:(int)arg3 transsize:(int)arg4;
+ (id)HoleFilterDiamond:(id)arg1 mask:(id)arg2 radius:(int)arg3 transsize:(int)arg4;
+ (id)HoleFilterUserself:(id)arg1 mask:(id)arg2 name:(id)arg3 type:(id)arg4 radius:(int)arg5 transsize:(int)arg6 namefir:(id)arg7 typefir:(id)arg8 namesec:(id)arg9 typesec:(id)arg10 namethi:(id)arg11 typethi:(id)arg12 namefor:(id)arg13 typefor:(id)arg14 namefif:(id)arg15 typefif:(id)arg16 namesix:(id)arg17 typesix:(id)arg18 num:(int)arg19 compositeOp:(int)arg20 oternum:(int)arg21;
+ (id)HoleFilterSimple04:(id)arg1 mask:(id)arg2 radius:(int)arg3 transsize:(int)arg4;
+ (id)HoleFilterSimple03:(id)arg1 mask:(id)arg2 radius:(int)arg3 transsize:(int)arg4;
+ (id)HoleFilterSimple02:(id)arg1 mask:(id)arg2 radius:(int)arg3 transsize:(int)arg4;
+ (id)HoleFilterSimple01:(id)arg1 mask:(id)arg2 radius:(int)arg3 transsize:(int)arg4;
+ (id)HoleFilterIndiv07:(id)arg1 mask:(id)arg2 radius:(int)arg3 transsize:(int)arg4;
+ (id)HoleFilterIndiv06:(id)arg1 mask:(id)arg2 radius:(int)arg3 transsize:(int)arg4;
+ (id)HoleFilterIndiv05:(id)arg1 mask:(id)arg2 radius:(int)arg3 transsize:(int)arg4;
+ (id)HoleFilterIndiv04:(id)arg1 mask:(id)arg2 radius:(int)arg3 transsize:(int)arg4;
+ (id)HoleFilterIndiv03:(id)arg1 mask:(id)arg2 radius:(int)arg3 transsize:(int)arg4;
+ (id)HoleFilterIndiv02:(id)arg1 mask:(id)arg2 radius:(int)arg3 transsize:(int)arg4;
+ (id)HoleFilterIndiv01:(id)arg1 mask:(id)arg2 radius:(int)arg3 transsize:(int)arg4;
+ (id)HoleFilterSheep02:(id)arg1 mask:(id)arg2 radius:(int)arg3 transsize:(int)arg4;
+ (id)HoleFilterSheep01:(id)arg1 mask:(id)arg2 radius:(int)arg3 transsize:(int)arg4;
+ (id)RandCircle:(id)arg1 mask:(id)arg2 radius:(int)arg3 transsize:(int)arg4;
+ (id)HoleFilterPentagon:(id)arg1 mask:(id)arg2 radius:(int)arg3 transsize:(int)arg4;
+ (id)HoleFilterHeart:(id)arg1 mask:(id)arg2 radius:(int)arg3 transsize:(int)arg4;
+ (id)HoleFilterHale:(id)arg1 mask:(id)arg2 radius:(int)arg3 transsize:(int)arg4;
+ (id)HoleFilterCircle:(id)arg1 mask:(id)arg2 radius:(int)arg3 transsize:(int)arg4;
+ (id)HoleFilterMulti:(id)arg1 mask:(id)arg2 name1:(id)arg3 type1:(id)arg4 name2:(id)arg5 type2:(id)arg6 name3:(id)arg7 type3:(id)arg8 name4:(id)arg9 type4:(id)arg10 name5:(id)arg11 type5:(id)arg12 name6:(id)arg13 type6:(id)arg14 downVal:(int)arg15 upVal:(int)arg16 sucaiscale:(float)arg17 compositeOp:(int)arg18 oternum:(int)arg19;
+ (id)HoleFilterMulti:(id)arg1 mask:(id)arg2 name1:(id)arg3 type1:(id)arg4 name2:(id)arg5 type2:(id)arg6 name3:(id)arg7 type3:(id)arg8 name4:(id)arg9 type4:(id)arg10 name5:(id)arg11 type5:(id)arg12 downVal:(int)arg13 upVal:(int)arg14 sucaiscale:(float)arg15 compositeOp:(int)arg16 oternum:(int)arg17;
+ (id)HoleFilterMulti:(id)arg1 mask:(id)arg2 name1:(id)arg3 type1:(id)arg4 name2:(id)arg5 type2:(id)arg6 name3:(id)arg7 type3:(id)arg8 name4:(id)arg9 type4:(id)arg10 downVal:(int)arg11 upVal:(int)arg12 sucaiscale:(float)arg13 compositeOp:(int)arg14 oternum:(int)arg15;
+ (id)holeFilterMulti:(id)arg1 mask:(id)arg2 name1:(id)arg3 type1:(id)arg4 name2:(id)arg5 type2:(id)arg6 name3:(id)arg7 type3:(id)arg8 downVal:(int)arg9 upVal:(int)arg10 sucaiscale:(float)arg11 compositeOp:(int)arg12 oternum:(int)arg13;
+ (id)decodeImageSize:(id)arg1 type:(id)arg2 width:(int)arg3 height:(int)arg4;
+ (void)HoleFilterGetTransmitSize:(int)arg1 enlargenum:(int *)arg2 dilatenum:(int *)arg3 erodenum:(int *)arg4;
+ (int)HoleFilterGetRadius:(int)arg1 height:(int)arg2 para:(int)arg3 scale:(float)arg4;
+ (float)HoleFilterGetSucaiScale:(int)arg1;
+ (float)HoleFilterGetScale:(int)arg1 height:(int)arg2;
+ (id)magsky:(id)arg1 skyImage:(id)arg2 color:(int)arg3 opa:(int)arg4;
+ (id)extractWordImg:(id)arg1;
+ (id)advertiseJeep:(id)arg1;
+ (id)advertiseAveo:(id)arg1;
+ (id)wbPortrait:(id)arg1;
+ (id)mbnf:(id)arg1;
+ (id)mediaBlurNormal:(id)arg1 param:(int)arg2 withEdge:(int)arg3;
+ (int)calcOpacity:(id)arg1;
+ (id)RetinexAdjust:(id)arg1 value:(int)arg2;
+ (id)oneKeyRetinex:(id)arg1;
+ (id)fishEye_3:(id)arg1 isHor:(int)arg2;
+ (id)fishEye_1:(id)arg1 isHor:(int)arg2;
+ (id)fishEyeSkoda:(id)arg1 isHor:(int)arg2;
+ (id)composite:(id)arg1 mask:(id)arg2 comOp:(int)arg3 opa:(int)arg4;
+ (id)country:(id)arg1;
+ (id)tranformImage:(id)arg1 flat:(int)arg2;
+ (id)simpleElegant3:(id)arg1;
+ (id)brightGreen:(id)arg1;
+ (id)lomo2:(id)arg1 lomo2_mask:(id)arg2;
+ (id)lightengreen2:(id)arg1;
+ (id)lightengreen:(id)arg1;
+ (id)pro:(id)arg1 pro_mask:(id)arg2;
+ (id)wbFilm:(id)arg1;
+ (id)gradientBlue:(id)arg1;
+ (id)split:(id)arg1 split_mask:(id)arg2 split_mask1:(id)arg3;
+ (id)pinkWorld:(id)arg1 pink_mask:(id)arg2 pink_mask1:(id)arg3;
+ (id)darkGreen:(id)arg1 dark_mask:(id)arg2;
+ (id)trudirect:(id)arg1 trud_mask:(id)arg2 trud_mask1:(id)arg3;
+ (id)simpleElegant:(id)arg1 simple_mask:(id)arg2 simple_mask1:(id)arg3;
+ (id)pureWhite:(id)arg1 pure_mask:(id)arg2;
+ (id)amaro:(id)arg1;
+ (id)walden:(id)arg1;
+ (id)vale:(id)arg1;
+ (id)dePurple:(id)arg1;
+ (id)nash:(id)arg1;
+ (id)scratches:(id)arg1;
+ (id)whiteBalance:(id)arg1 value:(float)arg2;
+ (id)foodWhite:(id)arg1;
+ (id)foodLighten:(id)arg1;
+ (id)hotRed:(id)arg1;
+ (id)colorBalance:(id)arg1 cyan_red_l:(double)arg2 cyan_red_m:(double)arg3 cyan_red_h:(double)arg4 magenta_green_l:(double)arg5 magenta_green_m:(double)arg6 magenta_green_h:(double)arg7 yellow_blue_l:(double)arg8 yellow_blue_m:(double)arg9 yellow_blue_h:(double)arg10 preserve_luminosity:(int)arg11;
+ (id)Brannan:(id)arg1;
+ (id)portraitHDR:(id)arg1;
+ (id)toaster:(id)arg1;
+ (id)vivo:(id)arg1 vivo_mask:(id)arg2;
+ (id)grandBleu:(id)arg1 gb_mask_tb:(id)arg2 gb_mask_m:(id)arg3;
+ (id)redsun:(id)arg1 mask_screen:(id)arg2 mask_over:(id)arg3;
+ (id)oldFilm:(id)arg1;
+ (id)zoomMotionBlur:(id)arg1 x:(int)arg2 y:(int)arg3 width:(int)arg4 height:(int)arg5 cx:(int)arg6 cy:(int)arg7 length:(int)arg8 outward:(int)arg9 quality:(int)arg10;
+ (id)HDR:(id)arg1;
+ (id)magickPurple:(id)arg1;
+ (id)createDarkMaskImage:(id)arg1 start:(struct CGPoint)arg2 end:(struct CGPoint)arg3 startradius:(int)arg4 endradius:(int)arg5 colors:(int *)arg6 locations:(double *)arg7 gradient_num:(int)arg8;
+ (id)createMaskImage:(id)arg1 i_colors:(int *)arg2 locations:(double *)arg3 num:(int)arg4 start:(struct CGPoint)arg5 end:(struct CGPoint)arg6 isdrawImage:(_Bool)arg7;
+ (id)createMagicPurpleMask:(int)arg1 height:(int)arg2;
+ (id)sharpenImage:(id)arg1 percent:(int)arg2;
+ (id)HDRRed:(id)arg1;
+ (id)HDRDarkenBlue:(id)arg1;
+ (id)foodColor:(id)arg1;
+ (id)lomo4:(id)arg1 flag:(int)arg2;
+ (id)addSunset:(id)arg1;
+ (id)drawSunset2:(int)arg1 h:(int)arg2 colors:(int *)arg3 locations:(double *)arg4 gradient_num:(int)arg5;
+ (id)drawSunset:(int)arg1 h:(int)arg2 colors:(int *)arg3 locations:(double *)arg4 gradient_num:(int)arg5;
+ (id)colorFeverGreen2:(id)arg1 shader:(id)arg2;
+ (id)colorFeverGreen:(id)arg1 shader:(id)arg2;
+ (id)colorFeverGray:(id)arg1 shader:(id)arg2;
+ (id)colorFeverRed3:(id)arg1 shader:(id)arg2;
+ (id)colorFeverRed2:(id)arg1 shader:(id)arg2;
+ (id)colorFeverRed:(id)arg1 shader:(id)arg2;
+ (id)colorFeverYellow2:(id)arg1 shader:(id)arg2;
+ (id)colorFeverYellow:(id)arg1 shader:(id)arg2;
+ (id)drawColorFever:(id)arg1 x:(int)arg2 y:(int)arg3 r:(int)arg4 colors:(int *)arg5 locations:(double *)arg6 gradient_num:(int)arg7;
+ (id)drawColorFever:(id)arg1 color:(int)arg2;
+ (id)addColorFeverGreen2:(id)arg1 shader:(id)arg2;
+ (id)addColorFeverGreen:(id)arg1 shader:(id)arg2;
+ (id)addColorFeverGray:(id)arg1 shader:(id)arg2;
+ (id)addColorFeverRed3:(id)arg1 shader:(id)arg2;
+ (id)addColorFeverRed2:(id)arg1 shader:(id)arg2;
+ (id)addColorFeverRed:(id)arg1 shader:(id)arg2;
+ (id)drawColorFeverGreen2:(id)arg1;
+ (id)drawColorFeverGreen:(id)arg1;
+ (id)drawColorFeverGray:(id)arg1;
+ (id)addColorFeverYellow2:(id)arg1 shader:(id)arg2;
+ (id)addColorFeverYellow:(id)arg1 shader:(id)arg2;
+ (id)drawColorFeverRed3:(id)arg1;
+ (id)drawColorFeverRed2:(id)arg1;
+ (id)drawColorFeverRed:(id)arg1;
+ (id)createBlendingImageNew:(id)arg1 colors:(int *)arg2 locations:(double *)arg3 gradient_num:(int)arg4;
+ (id)createBlendingImage:(id)arg1 colors:(int *)arg2 locations:(double *)arg3 gradient_num:(int)arg4;
+ (id)drawColorFeverYellow2b:(id)arg1;
+ (id)drawColorFeverYellow2:(id)arg1;
+ (id)drawColorFeverYellow:(id)arg1;
+ (id)sketch:(id)arg1 size:(struct CGSize)arg2;
+ (id)polaroid_y:(id)arg1 size:(struct CGSize)arg2;
+ (id)polaroid_g:(id)arg1 size:(struct CGSize)arg2;
+ (id)polaroid:(id)arg1 size:(struct CGSize)arg2;
+ (id)cerbbeanNoon:(id)arg1 size:(struct CGSize)arg2;
+ (id)lomo:(id)arg1 size:(struct CGSize)arg2;
+ (id)magicHour:(id)arg1 size:(struct CGSize)arg2;
+ (id)partyDazzle:(id)arg1 size:(struct CGSize)arg2;
+ (id)addDazzle:(id)arg1;
+ (_Bool)drawDazzle:(struct _PocoImage *)arg1 dazzles:(id)arg2 count:(int)arg3 indexs:(int *)arg4 indexs_len:(int)arg5 x:(int)arg6 y:(int)arg7 w:(int)arg8 h:(int)arg9;
+ (id)addMagickHour:(id)arg1;
+ (id)createMagickLight:(int)arg1 height:(int)arg2;
+ (id)feelgoodSnow:(id)arg1 size:(struct CGSize)arg2;
+ (id)addSnow:(id)arg1;
+ (void)dump_mem:(char *)arg1 length:(unsigned int)arg2;
+ (id)createSnowflake:(int)arg1 height:(int)arg2 color:(id)arg3 blur:(int)arg4;
+ (id)studio:(id)arg1 size:(struct CGSize)arg2;
+ (id)f1977:(id)arg1 size:(struct CGSize)arg2;
+ (id)LomoFi:(id)arg1 size:(struct CGSize)arg2;
+ (id)xProIIFilter:(id)arg1 size:(struct CGSize)arg2;

@end

