//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

#import "BVWebViewDelegate-Protocol.h"
#import "TVKMediaUrlRequestDelegate-Protocol.h"

@class ASIHTTPRequest, BDSniffLog, BVBaseSnifferController, BVSnifferResult, BVWebView, LTVideoMedia, NSMutableArray, NSString, NSTimer, VBaiduPlayerMediaOperation, VEngine, VSnifferOperation;
@protocol BVSnifferDelegate, BVWebViewDelegate;

@interface BVSniffer : NSObject <TVKMediaUrlRequestDelegate, BVWebViewDelegate>
{
    BVWebView *_webView;
    NSString *snifferScript;
    NSString *firstLoadURL;
    ASIHTTPRequest *serverSnifferRequest;
    ASIHTTPRequest *serverCancheRequest;
    NSString *baiduPlaerServerAPI;
    NSString *currentSnifferingURL;
    NSTimer *timer;
    NSString *siteUrl;
    NSString *tvId;
    NSString *pageUrl;
    NSString *mediaType;
    NSString *videoId;
    NSString *episode;
    _Bool isSniffering;
    _Bool isKeepSniffer;
    _Bool isSniffered;
    _Bool isFirstLoad;
    _Bool _onlySniffingHTML;
    _Bool _keepResultAsTransient;
    _Bool _requireLogging;
    int snifferType;
    int _requiredResolution;
    id <BVSnifferDelegate> delegate;
    id <BVWebViewDelegate> originalDelegate;
    BVSnifferResult *serverCacheResult;
    BVSnifferResult *serverSnifferResult;
    BVSnifferResult *webViewResult;
    VSnifferOperation *_mkvoSniffer;
    VBaiduPlayerMediaOperation *_mkvoBaiduPlayerMedia;
    VSnifferOperation *_mkvoNewSniffer;
    VSnifferOperation *_mkvoLuaScript;
    BDSniffLog *_logger;
    NSString *_tag4way;
    BVBaseSnifferController *_nextSniffer;
    VEngine *_engineBaiduPlayer;
    VEngine *_engineiqiyi;
    VEngine *_engineNewSniffer;
}

+ (_Bool)cacheSnifferResult4pageURL:(id)arg1 playURL:(id)arg2 isTransient:(_Bool)arg3 playType:(int)arg4;
+ (_Bool)cacheSnifferResult4pageURL:(id)arg1 playURL:(id)arg2 isTransient:(_Bool)arg3;
+ (_Bool)cacheSnifferResult4pageURL:(id)arg1 playURL:(id)arg2;
+ (void)initialize;
+ (_Bool)checkIfPageUrlNeedsBdhdSniff:(id)arg1;
+ (id)jsPlayBtnForPageURL:(id)arg1;
+ (_Bool)isMatchedDetailPageOwn:(id)arg1;
+ (_Bool)isURLForDetailPageElement:(id)arg1;
+ (_Bool)isURLForClick:(id)arg1;
@property(retain, nonatomic) VEngine *engineNewSniffer; // @synthesize engineNewSniffer=_engineNewSniffer;
@property(retain, nonatomic) VEngine *engineiqiyi; // @synthesize engineiqiyi=_engineiqiyi;
@property(retain, nonatomic) VEngine *engineBaiduPlayer; // @synthesize engineBaiduPlayer=_engineBaiduPlayer;
@property(retain, nonatomic) BVBaseSnifferController *nextSniffer; // @synthesize nextSniffer=_nextSniffer;
@property(nonatomic) int requiredResolution; // @synthesize requiredResolution=_requiredResolution;
@property(retain, nonatomic) NSString *tag4way; // @synthesize tag4way=_tag4way;
@property(nonatomic) _Bool requireLogging; // @synthesize requireLogging=_requireLogging;
@property(retain, nonatomic) BDSniffLog *logger; // @synthesize logger=_logger;
@property(nonatomic) _Bool keepResultAsTransient; // @synthesize keepResultAsTransient=_keepResultAsTransient;
@property(nonatomic) _Bool onlySniffingHTML; // @synthesize onlySniffingHTML=_onlySniffingHTML;
@property(retain, nonatomic) VSnifferOperation *mkvoLuaScript; // @synthesize mkvoLuaScript=_mkvoLuaScript;
@property(retain, nonatomic) VSnifferOperation *mkvoNewSniffer; // @synthesize mkvoNewSniffer=_mkvoNewSniffer;
@property(retain, nonatomic) VBaiduPlayerMediaOperation *mkvoBaiduPlayerMedia; // @synthesize mkvoBaiduPlayerMedia=_mkvoBaiduPlayerMedia;
@property(retain, nonatomic) VSnifferOperation *mkvoSniffer; // @synthesize mkvoSniffer=_mkvoSniffer;
@property(nonatomic) _Bool isFirstLoad; // @synthesize isFirstLoad;
@property(nonatomic) _Bool isSniffered; // @synthesize isSniffered;
@property(retain, nonatomic) BVSnifferResult *webViewResult; // @synthesize webViewResult;
@property(retain, nonatomic) BVSnifferResult *serverSnifferResult; // @synthesize serverSnifferResult;
@property(retain, nonatomic) BVSnifferResult *serverCacheResult; // @synthesize serverCacheResult;
@property(nonatomic) __weak id <BVWebViewDelegate> originalDelegate; // @synthesize originalDelegate;
@property(nonatomic) int snifferType; // @synthesize snifferType;
@property(nonatomic) _Bool isKeepSniffer; // @synthesize isKeepSniffer;
@property(nonatomic) _Bool isSniffering; // @synthesize isSniffering;
@property(retain, nonatomic, getter=_webview) BVWebView *webView; // @synthesize webView=_webView;
@property(nonatomic) __weak id <BVSnifferDelegate> delegate; // @synthesize delegate;
- (void).cxx_destruct;
- (id)__transientCache_get4url:(id)arg1;
- (_Bool)__transientCache_put4url:(id)arg1 result:(id)arg2;
- (void)_doLoadWebPageWithoutSniffing;
- (void)dealloc;
- (id)getAppType;
- (void)webViewWillStartLoad:(id)arg1;
- (void)webViewStartLoad:(id)arg1;
- (void)webView:(id)arg1 updateProgress:(float)arg2;
- (void)webView:(id)arg1 loadRequest:(id)arg2;
- (void)webViewDOMLoaded:(id)arg1;
- (void)webViewLoaded:(id)arg1;
- (void)webView:(id)arg1 didFailLoadWithError:(id)arg2;
- (void)webViewDidFinishLoad:(id)arg1;
- (void)webViewDidStartLoad:(id)arg1;
- (void)injectSnifferScript;
- (_Bool)webView:(id)arg1 shouldStartLoadWithRequest:(id)arg2 navigationType:(long long)arg3;
- (void)requestFinished:(id)arg1;
- (void)requestFailed:(id)arg1;
- (void)snifferFailWithResult:(id)arg1;
- (void)snifferSucceedWithResult:(id)arg1;
- (void)timeroutHandler:(id)arg1;
- (void)checkResult;
- (void)snifferByWebView:(id)arg1;
- (void)loadBaiduPlayerList:(id)arg1 retryCount:(int)arg2;
- (void)sniffWithPageUrl:(id)arg1 requestHeaders:(id)arg2;
- (void)sniffPageUrl:(id)arg1;
- (void)reportErrorSnifferWithDict:(id)arg1;
- (void)removeSniffer;
- (void)stopSniffer;
- (void)goSniffing;
- (void)getSnifferReady;
- (void)tryToSnifferWithTvID;
- (void)tryOldSniffer;
- (void)startSnifferAndShowWebPageWhileSniffing:(_Bool)arg1;
- (void)startSniffer;
- (void)sendSnifferSucceedCallBackWithStreamArray:(id)arg1;
- (void)snifferNormalVideoType:(id)arg1;
- (void)sniffer:(id)arg1;
- (id)initWithDelegate:(id)arg1;
- (id)initWithWebView:(id)arg1 siteUrl:(id)arg2 tvId:(id)arg3 pageUrl:(id)arg4;
- (id)initWithWebView:(id)arg1 siteUrl:(id)arg2 tvId:(id)arg3 pageUrl:(id)arg4 type:(id)arg5 videoId:(id)arg6 episode:(id)arg7;
- (id)initWithWebView:(id)arg1;
- (id)initWithSiteUrl:(id)arg1 tvId:(id)arg2 pageUrl:(id)arg3;
- (id)initWithSiteUrl:(id)arg1 tvId:(id)arg2 pageUrl:(id)arg3 type:(id)arg4 videoId:(id)arg5 episode:(id)arg6;
- (id)init;
- (void)getBaiduPlayerMediaData:(id)arg1;
- (void)executeLuaScript:(id)arg1;
- (void)getSnifferData:(id)arg1 token:(id)arg2 requestHeaders:(id)arg3;
- (id)getStreamArrayByBDVideoSnifferData:(id)arg1;
- (id)getAdArrayByBDVideoSnifferData:(id)arg1;
- (int)getPlayerTypeByExt:(id)arg1 url:(id)arg2;
- (id)buildRequestParamDictWithUrl:(id)arg1 token:(id)arg2;
- (id)getOudidForQiyi;
- (void)initEngines;
- (id)baiduyunSnifferURL:(id)arg1;
- (void)getBestvUrlWithDict:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (_Bool)_try_bestvSDK_withUrl:(id)arg1 token:(id)arg2 data:(id)arg3;
- (void)logDuration:(double)arg1 forModule:(int)arg2;
- (void)logURL:(id)arg1;
- (void)_addUserLogData:(id)arg1 key:(id)arg2;
- (id)_name4module:(int)arg1;
- (id)_index4module:(int)arg1;
- (void)logEnd4Module:(int)arg1;
- (void)logBegin4Module:(int)arg1;
- (void)logResult:(int)arg1 result:(_Bool)arg2;
- (void)logEvent4module:(int)arg1 result:(_Bool)arg2;
- (void)postLog;
- (void)initLog4pageURL:(id)arg1;
- (void)snifferSucceedWithCibnResolutionArray:(id)arg1;
- (_Bool)_try_cibnSDK_withUrl:(id)arg1 token:(id)arg2 data:(id)arg3;
- (id)snifferData;
- (void)setSnifferData:(id)arg1;
@property(retain, nonatomic) LTVideoMedia *letvMedia; // @dynamic letvMedia;
@property(retain, nonatomic) NSMutableArray *mediaStoreOperations; // @dynamic mediaStoreOperations;
- (id)letvSourceInfo4playURLData;
- (void)getLetvUrlWithDict:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (_Bool)_try_letvSDK_withUrl:(id)arg1 token:(id)arg2 data:(id)arg3;
- (void)snifferSucceedWithTXResolutionArray:(id)arg1;
- (void)didMediaUrlRequestFailed:(id)arg1 error:(id)arg2;
- (void)didMediaUrlRequestFinished:(id)arg1 videoUrls:(id)arg2 viedoDurations:(id)arg3;
- (void)didMediaUrlRequestUpdated:(id)arg1 videoUrls:(id)arg2 viedoDurations:(id)arg3;
- (void)didMediaUrlRequestFinished:(id)arg1 videoFormatList:(id)arg2;
- (_Bool)_try_qqSDK_withUrl:(id)arg1 token:(id)arg2 data:(id)arg3;
- (id)urlRequest;
- (void)setUrlRequest:(id)arg1;
- (id)snifferData;
- (void)setSnifferData:(id)arg1;
- (void)getSohuUrlWithDict:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (_Bool)_try_sohuSDK_withUrl:(id)arg1 token:(id)arg2 data:(id)arg3;
- (void)snifferSucceedWithPPTVResolutionArray:(id)arg1;
- (_Bool)_try_pptvSDK_withUrl:(id)arg1 token:(id)arg2 data:(id)arg3;
- (id)pptvSdk;
- (void)setPptvSdk:(id)arg1;
- (id)snifferData;
- (void)setSnifferData:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

