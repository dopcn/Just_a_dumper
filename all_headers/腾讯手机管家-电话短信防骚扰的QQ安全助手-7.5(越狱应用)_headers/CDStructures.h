//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#pragma mark Function Pointers and Blocks

typedef void (*CDUnknownFunctionPointerType)(void); // return type and parameters are unknown

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct AlbumInfo {
    int _field1;
    basic_string_a490aa4c _field2;
    int _field3;
    int _field4;
    struct DownloadInfo _field5;
    int _field6;
};

struct AppInfo {
    basic_string_a490aa4c _field1;
    basic_string_a490aa4c _field2;
    basic_string_a490aa4c _field3;
    basic_string_a490aa4c _field4;
    basic_string_a490aa4c _field5;
    struct map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char>>>> _field6;
};

struct AppItem;

struct AppSession {
    basic_string_a490aa4c _field1;
    struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> _field2;
};

struct Attachment {
    char _field1;
    basic_string_a490aa4c _field2;
    vector_aa1d262e _field3;
};

struct CGAffineTransform {
    double a;
    double b;
    double c;
    double d;
    double tx;
    double ty;
};

struct CGPoint {
    double x;
    double y;
};

struct CGRect {
    struct CGPoint origin;
    struct CGSize size;
};

struct CGSize {
    double width;
    double height;
};

struct CLLocationCoordinate2D {
    double latitude;
    double longitude;
};

struct CSRSA {
    vector_aa1d262e _field1;
};

struct CSReportInfo {
    int _field1;
    struct vector<MMGRReport::ReportRecord, std::__1::allocator<MMGRReport::ReportRecord>> _field2;
};

struct ClientPush {
    long long _field1;
};

struct ClientSashimi {
    int _field1;
    int _field2;
    int _field3;
    vector_aa1d262e _field4;
    long long _field5;
    int _field6;
    int _field7;
    struct ClientPush _field8;
    int _field9;
};

struct DomainSource {
    basic_string_a490aa4c _field1;
    int _field2;
    _Bool _field3;
    _Bool _field4;
};

struct DownloadInfo {
    int _field1;
    int _field2;
    basic_string_a490aa4c _field3;
    int _field4;
    basic_string_a490aa4c _field5;
    long long _field6;
};

struct DownloadPhotoInfo {
    struct PhotoInfo _field1;
    struct DownloadInfo _field2;
    struct DownloadInfo _field3;
    struct DownloadInfo _field4;
};

struct Engine;

struct EventRecord {
    basic_string_a490aa4c _field1;
    basic_string_a490aa4c _field2;
    basic_string_a490aa4c _field3;
    _Bool _field4;
    long long _field5;
    long long _field6;
    basic_string_a490aa4c _field7;
    long long _field8;
    int _field9;
};

struct EventRecordPackage {
    struct vector<eventrecord::EventRecord, std::__1::allocator<eventrecord::EventRecord>> _field1;
};

struct ExceptionUpload {
    basic_string_a490aa4c _field1;
    long long _field2;
    basic_string_a490aa4c _field3;
    basic_string_a490aa4c _field4;
    basic_string_a490aa4c _field5;
    basic_string_a490aa4c _field6;
    basic_string_a490aa4c _field7;
    struct map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char>>>> _field8;
    basic_string_a490aa4c _field9;
    struct AppSession _field10;
    int _field11;
    basic_string_a490aa4c _field12;
    basic_string_a490aa4c _field13;
    struct AppInfo _field14;
    struct vector<rqd::AppInfo, std::__1::allocator<rqd::AppInfo>> _field15;
    struct vector<rqd::AppInfo, std::__1::allocator<rqd::AppInfo>> _field16;
    struct vector<rqd::Attachment, std::__1::allocator<rqd::Attachment>> _field17;
    struct map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char>>>> _field18;
    struct map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char>>>> _field19;
    basic_string_a490aa4c _field20;
    _Bool _field21;
};

struct ExceptionUploadPackage {
    struct vector<rqd::ExceptionUpload, std::__1::allocator<rqd::ExceptionUpload>> _field1;
};

struct FlowNum;

struct GpsItem;

struct IosUserInfo {
    int guidVersion;
    int phoneType;
    int subPlatform;
    int product;
    basic_string_a490aa4c uuid;
    basic_string_a490aa4c identifierForVendor;
    basic_string_a490aa4c advertisingIdentifier;
    basic_string_a490aa4c mac;
    struct ProductVersion version;
    basic_string_a490aa4c deviceModel;
    basic_string_a490aa4c firmware;
    short breakFlag;
    basic_string_a490aa4c channel;
    basic_string_a490aa4c lc;
    basic_string_a490aa4c token;
    basic_string_a490aa4c udid;
};

struct IpSource {
    basic_string_a490aa4c _field1;
    int _field2;
    int _field3;
    _Bool _field4;
};

struct JceInputStream<analyticstaf::BufferReader> {
    char *_field1;
    unsigned long long _field2;
    unsigned long long _field3;
};

struct JceOutputStream<analyticstaf::BufferWriter> {
    char *_field1;
    unsigned long long _field2;
    unsigned long long _field3;
};

struct JumpItem;

struct MQQPLAlbumFetchOptions {
    _Bool _field1;
    _Bool _field2;
    _Bool _field3;
};

struct MSize {
    int *_field1;
};

struct MStep {
    unsigned long long *_field1;
    unsigned long long _field2[2];
};

struct Mat {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
    char *_field5;
    int *_field6;
    char *_field7;
    char *_field8;
    char *_field9;
    struct MatAllocator *_field10;
    struct MSize _field11;
    struct MStep _field12;
};

struct MatAllocator;

struct MixPackage {
    struct map<int, std::__1::vector<char, std::__1::allocator<char>>, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, std::__1::vector<char, std::__1::allocator<char>>>>> _field1;
};

struct MixPkg {
    struct map<int, std::__1::vector<char, std::__1::allocator<char>>, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, std::__1::vector<char, std::__1::allocator<char>>>>> _field1;
};

struct MobileInfo {
    int _field1;
    int _field2;
    basic_string_a490aa4c _field3;
    basic_string_a490aa4c _field4;
    basic_string_a490aa4c _field5;
    basic_string_a490aa4c _field6;
    basic_string_a490aa4c _field7;
    basic_string_a490aa4c _field8;
    basic_string_a490aa4c _field9;
    struct ScreenResolution _field10;
    basic_string_a490aa4c _field11;
};

struct ModuleStrategy {
    char _field1;
    char _field2;
    basic_string_a490aa4c _field3;
    struct map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char>>>> _field4;
    struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> _field5;
    struct SpeedMonitorStrategy _field6;
};

struct Node;

struct OcrSdk {
    struct Engine *engine;
};

struct PacketInfo {
    int _field1;
    basic_string_a490aa4c _field2;
    basic_string_a490aa4c _field3;
    struct vector<PIMPB::PacketPosSizeInfo, std::__1::allocator<PIMPB::PacketPosSizeInfo>> _field4;
};

struct PacketPosSizeInfo {
    long long _field1;
    int _field2;
    basic_string_a490aa4c _field3;
    int _field4;
};

struct PhotoInfo {
    basic_string_a490aa4c _field1;
    long long _field2;
    basic_string_a490aa4c _field3;
    int _field4;
    int _field5;
    int _field6;
    int _field7;
    int _field8;
    int _field9;
};

struct ProductVersion {
    int pversion;
    int cversion;
    int hotfix;
};

struct QiMeiInfo {
    basic_string_a490aa4c _field1;
    basic_string_a490aa4c _field2;
    basic_string_a490aa4c _field3;
    basic_string_a490aa4c _field4;
    basic_string_a490aa4c _field5;
    basic_string_a490aa4c _field6;
    basic_string_a490aa4c _field7;
    basic_string_a490aa4c _field8;
    basic_string_a490aa4c _field9;
    basic_string_a490aa4c _field10;
    basic_string_a490aa4c _field11;
    basic_string_a490aa4c _field12;
};

struct ReportRecord;

struct RequestPackage {
    char _field1;
    basic_string_a490aa4c _field2;
    basic_string_a490aa4c _field3;
    basic_string_a490aa4c _field4;
    basic_string_a490aa4c _field5;
    int _field6;
    vector_aa1d262e _field7;
    char _field8;
    char _field9;
    basic_string_a490aa4c _field10;
    basic_string_a490aa4c _field11;
    basic_string_a490aa4c _field12;
};

struct RequestPkg {
    int _field1;
    basic_string_a490aa4c _field2;
    basic_string_a490aa4c _field3;
    basic_string_a490aa4c _field4;
    basic_string_a490aa4c _field5;
    basic_string_a490aa4c _field6;
    int _field7;
    vector_aa1d262e _field8;
    basic_string_a490aa4c _field9;
    basic_string_a490aa4c _field10;
    struct map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char>>>> _field11;
    basic_string_a490aa4c _field12;
    long long _field13;
    basic_string_a490aa4c _field14;
    basic_string_a490aa4c _field15;
    basic_string_a490aa4c _field16;
    long long _field17;
    basic_string_a490aa4c _field18;
    basic_string_a490aa4c _field19;
    basic_string_a490aa4c _field20;
    basic_string_a490aa4c _field21;
    basic_string_a490aa4c _field22;
    basic_string_a490aa4c _field23;
    basic_string_a490aa4c _field24;
};

struct ResponsePackage {
    char _field1;
    int _field2;
    vector_aa1d262e _field3;
    basic_string_a490aa4c _field4;
    char _field5;
    char _field6;
    long long _field7;
    basic_string_a490aa4c _field8;
    basic_string_a490aa4c _field9;
};

struct ResponsePkg {
    char _field1;
    int _field2;
    vector_aa1d262e _field3;
    basic_string_a490aa4c _field4;
    long long _field5;
    basic_string_a490aa4c _field6;
    basic_string_a490aa4c _field7;
};

struct SCNVector3 {
    float x;
    float y;
    float z;
};

struct SCNVector4 {
    float _field1;
    float _field2;
    float _field3;
    float _field4;
};

struct SCRSA {
    basic_string_a490aa4c _field1;
};

struct SCSmsAnalyseRsp {
    struct vector<MSecCoral::FlowNum, std::__1::allocator<MSecCoral::FlowNum>> _field1;
    struct vector<MSecCoral::templateV2, std::__1::allocator<MSecCoral::templateV2>> _field2;
    basic_string_a490aa4c _field3;
};

struct ScreenResolution {
    int _field1;
    int _field2;
};

struct ScreenSize {
    int _field1;
    int _field2;
};

struct ServerPush {
    long long _field1;
};

struct ServerSashimi {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
    int _field5;
    vector_aa1d262e _field6;
    struct ServerPush _field7;
    int _field8;
};

struct SpeedMonitorStrategy {
    struct vector<strategy::IpSource, std::__1::allocator<strategy::IpSource>> _field1;
    struct vector<strategy::DomainSource, std::__1::allocator<strategy::DomainSource>> _field2;
    struct vector<strategy::TxHostSource, std::__1::allocator<strategy::TxHostSource>> _field3;
};

struct SummaryInfo {
    long long _field1;
    char _field2;
    basic_string_a490aa4c _field3;
    basic_string_a490aa4c _field4;
    basic_string_a490aa4c _field5;
    struct map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char>>>> _field6;
    basic_string_a490aa4c _field7;
    _Bool _field8;
};

struct TccList<TccTelNumLocation::CLocCacheItem *, TccTraits<TccTelNumLocation::CLocCacheItem *>> {
    struct Node *_field1;
    struct Node *_field2;
    int _field3;
};

struct TccStr16 {
    unsigned int _field1;
    unsigned int _field2;
    int *_field3;
};

struct TccStr8 {
    unsigned int _field1;
    unsigned int _field2;
    char *_field3;
};

struct TccTelNumLocation {
    struct TccVector<unsigned short, TccTraits<unsigned short>> _field1;
    struct TccVector<unsigned short, TccTraits<unsigned short>> _field2;
    struct TccVector<unsigned short, TccTraits<unsigned short>> _field3;
    struct TccStr8 _field4;
    struct TccVector<unsigned short, TccTraits<unsigned short>> _field5;
    struct TccStr8 _field6;
    struct TccVector<unsigned short, TccTraits<unsigned short>> _field7;
    struct TccVector<unsigned short, TccTraits<unsigned short>> _field8;
    struct TccVector<unsigned short, TccTraits<unsigned short>> _field9;
    struct TccStr8 _field10;
    struct TccVector<unsigned short, TccTraits<unsigned short>> _field11;
    struct TccVector<unsigned short, TccTraits<unsigned short>> _field12;
    struct TccStr8 _field13;
    struct TccVector<unsigned short, TccTraits<unsigned short>> _field14;
    struct TccVector<unsigned short, TccTraits<unsigned short>> _field15;
    int _field16;
    int _field17;
    struct TccStr16 _field18;
    struct TccVector<GpsItem, TccTraits<GpsItem>> _field19;
    int _field20;
    struct TccYellowPageTels _field21;
    struct TccList<TccTelNumLocation::CLocCacheItem *, TccTraits<TccTelNumLocation::CLocCacheItem *>> _field22;
    char _field23;
};

struct TccVector<GpsItem, TccTraits<GpsItem>> {
    struct GpsItem *_field1;
    int _field2;
    int _field3;
};

struct TccVector<TccYellowPageTels::YellowGroup, TccTraits<TccYellowPageTels::YellowGroup>> {
    struct YellowGroup *_field1;
    int _field2;
    int _field3;
};

struct TccVector<unsigned short, TccTraits<unsigned short>> {
    unsigned short *_field1;
    int _field2;
    int _field3;
};

struct TccYellowPageTels {
    struct TccVector<TccYellowPageTels::YellowGroup, TccTraits<TccYellowPageTels::YellowGroup>> _field1;
    struct TccStr16 _field2;
};

struct Traffic {
    long long wifiIncomingBytes;
    long long wifiOutgoingBytes;
    long long cellularIncomingBytes;
    long long cellularOutgoingBytes;
};

struct TxHostSource {
    basic_string_a490aa4c _field1;
    int _field2;
    basic_string_a490aa4c _field3;
    basic_string_a490aa4c _field4;
};

struct UIEdgeInsets {
    double top;
    double left;
    double bottom;
    double right;
};

struct UseInfo {
    long long prevActiveTime;
    long long prevInActiveTime;
    long long prevUseTime;
    _Bool isCrashed;
};

struct UserInfoPackage {
    char _field1;
    basic_string_a490aa4c _field2;
    basic_string_a490aa4c _field3;
    struct vector<rqd::SummaryInfo, std::__1::allocator<rqd::SummaryInfo>> _field4;
    struct map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char>>>> _field5;
};

struct YellowGroup;

struct _IplImage {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
    int _field5;
    char _field6[4];
    char _field7[4];
    int _field8;
    int _field9;
    int _field10;
    int _field11;
    int _field12;
    struct _IplROI *_field13;
    struct _IplImage *_field14;
    void *_field15;
    struct _IplTileInfo *_field16;
    int _field17;
    char *_field18;
    int _field19;
    int _field20[4];
    int _field21[4];
    char *_field22;
};

struct _IplROI;

struct _IplTileInfo;

struct _NSRange {
    unsigned long long location;
    unsigned long long length;
};

struct __tree_end_node<std::__1::__tree_node_base<void *>*> {
    struct __tree_node_base<void *> *_field1;
};

struct __wrap_iter<MSecCoral::FlowNum *> {
    struct FlowNum *_field1;
};

struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
    struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
        struct __rep {
            union {
                struct __long {
                    char *__data_;
                    unsigned long long __size_;
                    unsigned long long __cap_;
                } __l;
                struct __short {
                    char __data_[23];
                    struct {
                        unsigned char __size_;
                    } ;
                } __s;
                struct __raw {
                    unsigned long long __words[3];
                } __r;
            } ;
        } __first_;
    } __r_;
};

struct bignum_st;

struct bn_blinding_st;

struct bn_mont_ctx_st;

struct crypto_ex_data_st {
    struct stack_st_void *_field1;
    int _field2;
};

struct disk_info {
    long long _field1;
    long long _field2;
};

struct engine_st;

struct in6_addr {
    union {
        unsigned char _field1[16];
        unsigned short _field2[8];
        unsigned int _field3[4];
    } _field1;
};

struct in_addr {
    unsigned int _field1;
};

struct map<int, std::__1::vector<char, std::__1::allocator<char>>, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, std::__1::vector<char, std::__1::allocator<char>>>>> {
    struct __tree<std::__1::__value_type<int, std::__1::vector<char, std::__1::allocator<char>>>, std::__1::__map_value_compare<int, std::__1::__value_type<int, std::__1::vector<char, std::__1::allocator<char>>>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, std::__1::vector<char, std::__1::allocator<char>>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, std::__1::vector<char, std::__1::allocator<char>>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<int, std::__1::__value_type<int, std::__1::vector<char, std::__1::allocator<char>>>, std::__1::less<int>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char>>>> {
    struct __tree<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::less<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>>> {
        struct __tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::less<std::__1::basic_string<char>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct memory_info {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
};

struct mqq_cpu_load_info {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
};

struct mqq_cpu_loadavg {
    double _field1;
    double _field2;
    double _field3;
};

struct network_info {
    char _field1[18];
    char _field2[50];
    char _field3[50];
};

struct rsa_meth_st;

struct rsa_st {
    int _field1;
    long long _field2;
    struct rsa_meth_st *_field3;
    struct engine_st *_field4;
    struct bignum_st *_field5;
    struct bignum_st *_field6;
    struct bignum_st *_field7;
    struct bignum_st *_field8;
    struct bignum_st *_field9;
    struct bignum_st *_field10;
    struct bignum_st *_field11;
    struct bignum_st *_field12;
    struct crypto_ex_data_st _field13;
    int _field14;
    int _field15;
    struct bn_mont_ctx_st *_field16;
    struct bn_mont_ctx_st *_field17;
    struct bn_mont_ctx_st *_field18;
    char *_field19;
    struct bn_blinding_st *_field20;
    struct bn_blinding_st *_field21;
};

struct set<long, std::__1::less<long>, std::__1::allocator<long>> {
    struct __tree<long, std::__1::less<long>, std::__1::allocator<long>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<long, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::less<long>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct sockaddr {
    unsigned char _field1;
    unsigned char _field2;
    char _field3[14];
};

struct sockaddr_in {
    unsigned char _field1;
    unsigned char _field2;
    unsigned short _field3;
    struct in_addr _field4;
    char _field5[8];
};

struct sockaddr_in6 {
    unsigned char _field1;
    unsigned char _field2;
    unsigned short _field3;
    unsigned int _field4;
    struct in6_addr _field5;
    unsigned int _field6;
};

struct sockaddr_un {
    unsigned char _field1;
    unsigned char _field2;
    char _field3[104];
};

struct stack_st_void;

struct templateV2;

struct timeval {
    long long tv_sec;
    int tv_usec;
};

struct vector<MMGR::AppItem, std::__1::allocator<MMGR::AppItem>> {
    struct AppItem *_field1;
    struct AppItem *_field2;
    struct __compressed_pair<MMGR::AppItem *, std::__1::allocator<MMGR::AppItem>> {
        struct AppItem *_field1;
    } _field3;
};

struct vector<MMGR::JumpItem, std::__1::allocator<MMGR::JumpItem>> {
    struct JumpItem *_field1;
    struct JumpItem *_field2;
    struct __compressed_pair<MMGR::JumpItem *, std::__1::allocator<MMGR::JumpItem>> {
        struct JumpItem *_field1;
    } _field3;
};

struct vector<MMGRReport::ReportRecord, std::__1::allocator<MMGRReport::ReportRecord>> {
    struct ReportRecord *_field1;
    struct ReportRecord *_field2;
    struct __compressed_pair<MMGRReport::ReportRecord *, std::__1::allocator<MMGRReport::ReportRecord>> {
        struct ReportRecord *_field1;
    } _field3;
};

struct vector<MSecCoral::FlowNum, std::__1::allocator<MSecCoral::FlowNum>> {
    struct FlowNum *_field1;
    struct FlowNum *_field2;
    struct __compressed_pair<MSecCoral::FlowNum *, std::__1::allocator<MSecCoral::FlowNum>> {
        struct FlowNum *_field1;
    } _field3;
};

struct vector<MSecCoral::templateV2, std::__1::allocator<MSecCoral::templateV2>> {
    struct templateV2 *_field1;
    struct templateV2 *_field2;
    struct __compressed_pair<MSecCoral::templateV2 *, std::__1::allocator<MSecCoral::templateV2>> {
        struct templateV2 *_field1;
    } _field3;
};

struct vector<PIMPB::PacketPosSizeInfo, std::__1::allocator<PIMPB::PacketPosSizeInfo>> {
    struct PacketPosSizeInfo *_field1;
    struct PacketPosSizeInfo *_field2;
    struct __compressed_pair<PIMPB::PacketPosSizeInfo *, std::__1::allocator<PIMPB::PacketPosSizeInfo>> {
        struct PacketPosSizeInfo *_field1;
    } _field3;
};

struct vector<char, std::__1::allocator<char>> {
    char *_field1;
    char *_field2;
    struct __compressed_pair<char *, std::__1::allocator<char>> {
        char *_field1;
    } _field3;
};

struct vector<eventrecord::EventRecord, std::__1::allocator<eventrecord::EventRecord>> {
    struct EventRecord *_field1;
    struct EventRecord *_field2;
    struct __compressed_pair<eventrecord::EventRecord *, std::__1::allocator<eventrecord::EventRecord>> {
        struct EventRecord *_field1;
    } _field3;
};

struct vector<rqd::AppInfo, std::__1::allocator<rqd::AppInfo>> {
    struct AppInfo *_field1;
    struct AppInfo *_field2;
    struct __compressed_pair<rqd::AppInfo *, std::__1::allocator<rqd::AppInfo>> {
        struct AppInfo *_field1;
    } _field3;
};

struct vector<rqd::Attachment, std::__1::allocator<rqd::Attachment>> {
    struct Attachment *_field1;
    struct Attachment *_field2;
    struct __compressed_pair<rqd::Attachment *, std::__1::allocator<rqd::Attachment>> {
        struct Attachment *_field1;
    } _field3;
};

struct vector<rqd::ExceptionUpload, std::__1::allocator<rqd::ExceptionUpload>> {
    struct ExceptionUpload *_field1;
    struct ExceptionUpload *_field2;
    struct __compressed_pair<rqd::ExceptionUpload *, std::__1::allocator<rqd::ExceptionUpload>> {
        struct ExceptionUpload *_field1;
    } _field3;
};

struct vector<rqd::SummaryInfo, std::__1::allocator<rqd::SummaryInfo>> {
    struct SummaryInfo *_field1;
    struct SummaryInfo *_field2;
    struct __compressed_pair<rqd::SummaryInfo *, std::__1::allocator<rqd::SummaryInfo>> {
        struct SummaryInfo *_field1;
    } _field3;
};

struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> {
    basic_string_a490aa4c *_field1;
    basic_string_a490aa4c *_field2;
    struct __compressed_pair<std::__1::basic_string<char>*, std::__1::allocator<std::__1::basic_string<char>>> {
        basic_string_a490aa4c *_field1;
    } _field3;
};

struct vector<strategy::DomainSource, std::__1::allocator<strategy::DomainSource>> {
    struct DomainSource *_field1;
    struct DomainSource *_field2;
    struct __compressed_pair<strategy::DomainSource *, std::__1::allocator<strategy::DomainSource>> {
        struct DomainSource *_field1;
    } _field3;
};

struct vector<strategy::IpSource, std::__1::allocator<strategy::IpSource>> {
    struct IpSource *_field1;
    struct IpSource *_field2;
    struct __compressed_pair<strategy::IpSource *, std::__1::allocator<strategy::IpSource>> {
        struct IpSource *_field1;
    } _field3;
};

struct vector<strategy::TxHostSource, std::__1::allocator<strategy::TxHostSource>> {
    struct TxHostSource *_field1;
    struct TxHostSource *_field2;
    struct __compressed_pair<strategy::TxHostSource *, std::__1::allocator<strategy::TxHostSource>> {
        struct TxHostSource *_field1;
    } _field3;
};

struct vector<unsigned long, std::__1::allocator<unsigned long>> {
    unsigned long long *__begin_;
    unsigned long long *__end_;
    struct __compressed_pair<unsigned long *, std::__1::allocator<unsigned long>> {
        unsigned long long *__first_;
    } __end_cap_;
};

#pragma mark Typedef'd Structures

typedef struct {
    unsigned short wCmd;
    unsigned short wSubCmd;
    short wRst;
    unsigned int dwUsed;
    unsigned int dwCalUsed;
    unsigned short wTry;
    unsigned char acHostName[32];
    unsigned char acHostIp[32];
    unsigned short wPort;
    unsigned char cConn;
    unsigned char cNetType;
    unsigned char cNetwork;
    unsigned char cEncryptType;
    unsigned char acErrorStr[64];
    unsigned short wSendDataLen;
    unsigned short wResvDataLen;
} CDStruct_7a5a57b9;

typedef struct {
    char acHostName[32];
    unsigned short wPort;
    unsigned short wTimeout;
} CDStruct_93d23b61;

typedef struct {
    double x;
    double y;
    double z;
} CDStruct_31142d93;

typedef struct {
    int x;
    int y;
    int width;
    int height;
} CDStruct_bf95b13b;

typedef struct {
    long long version;
    void *info;
    CDUnknownFunctionPointerType retain;
    CDUnknownFunctionPointerType release;
    CDUnknownFunctionPointerType copyDescription;
} CDStruct_4210025a;

typedef struct {
    long long value;
    int timescale;
    unsigned int flags;
    long long epoch;
} CDStruct_1b6d18a9;

// Template types
typedef struct JceInputStream<analyticstaf::BufferReader> {
    char *_field1;
    unsigned long long _field2;
    unsigned long long _field3;
} JceInputStream_f07640a9;

typedef struct JceOutputStream<analyticstaf::BufferWriter> {
    char *_field1;
    unsigned long long _field2;
    unsigned long long _field3;
} JceOutputStream_31132a5e;

typedef struct __wrap_iter<MSecCoral::FlowNum *> {
    struct FlowNum *_field1;
} __wrap_iter_b39065a1;

typedef struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
    struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
        struct __rep {
            union {
                struct __long {
                    char *__data_;
                    unsigned long long __size_;
                    unsigned long long __cap_;
                } __l;
                struct __short {
                    char __data_[23];
                    struct {
                        unsigned char __size_;
                    } ;
                } __s;
                struct __raw {
                    unsigned long long __words[3];
                } __r;
            } ;
        } __first_;
    } __r_;
} basic_string_a490aa4c;

typedef struct vector<MMGR::AppItem, std::__1::allocator<MMGR::AppItem>> {
    struct AppItem *_field1;
    struct AppItem *_field2;
    struct __compressed_pair<MMGR::AppItem *, std::__1::allocator<MMGR::AppItem>> {
        struct AppItem *_field1;
    } _field3;
} vector_15988732;

typedef struct vector<MMGR::JumpItem, std::__1::allocator<MMGR::JumpItem>> {
    struct JumpItem *_field1;
    struct JumpItem *_field2;
    struct __compressed_pair<MMGR::JumpItem *, std::__1::allocator<MMGR::JumpItem>> {
        struct JumpItem *_field1;
    } _field3;
} vector_033575b9;

typedef struct vector<char, std::__1::allocator<char>> {
    char *_field1;
    char *_field2;
    struct __compressed_pair<char *, std::__1::allocator<char>> {
        char *_field1;
    } _field3;
} vector_aa1d262e;

