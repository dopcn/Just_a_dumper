//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <UIKit/UIViewController.h>

#import "FTBLEHandShakeManagerDelegate-Protocol.h"
#import "NewUIALertviewDelegate-Protocol.h"
#import "ScreenshotDelegate-Protocol.h"
#import "UIAlertViewDelegate-Protocol.h"
#import "UITableViewDataSource-Protocol.h"
#import "UITableViewDelegate-Protocol.h"
#import "UITextFieldDelegate-Protocol.h"

@class FTPublicMethods, NSString, PsdUITextField, SafeInput, UIButton, UIView;

@interface FTChangePasswordControllerNewUI : UIViewController <UITableViewDataSource, UITableViewDelegate, UITextFieldDelegate, UIAlertViewDelegate, ScreenshotDelegate, NewUIALertviewDelegate, FTBLEHandShakeManagerDelegate>
{
    SafeInput *safeInput;
    FTPublicMethods *publicMethods;
    UIView *FTCheckPINAlertNewUI;
    _Bool isShowBLEList;
    unsigned long long bleErrorCode;
    PsdUITextField *passwordField;
    PsdUITextField *passwordNewField;
    PsdUITextField *repeatPasswordField;
    UIButton *backButton;
    UIButton *okButton;
}

@property(retain, nonatomic) UIButton *okButton; // @synthesize okButton;
@property(retain, nonatomic) UIButton *backButton; // @synthesize backButton;
@property(retain, nonatomic) PsdUITextField *repeatPasswordField; // @synthesize repeatPasswordField;
@property(retain, nonatomic) PsdUITextField *passwordNewField; // @synthesize passwordNewField;
@property(retain, nonatomic) PsdUITextField *passwordField; // @synthesize passwordField;
- (void).cxx_destruct;
- (void)didMatchPairCancel;
- (void)didMatchPairFailed;
- (void)didBLEHandshakeSuccess;
- (void)didMatchPairSuccess;
- (void)didMatchPairTimeout;
- (void)didBLEListConnectTimeout;
- (void)didBLEListScanTimeout;
- (void)deviceListHasData;
- (void)didHideshowBLEDeviceListAlert;
- (void)showDeviceList;
- (_Bool)isAudioCanTransmission;
- (_Bool)isHeadsetPluggedIn;
- (void)initDevice;
- (void)didClickButtonAtIndex:(unsigned long long)arg1;
- (void)FTChangePIN;
- (void)FTcheckPIN:(char *)arg1;
- (void)FTCheckPINAlertNewUIBtnClicked:(id)arg1;
- (void)showTitle:(id)arg1 message:(id)arg2 ok:(id)arg3 cancel:(id)arg4 delegate:(id)arg5;
- (void)FTUkeyChangePIN;
- (void)cvpChar;
- (void)cvp:(id)arg1;
- (void)hideScanDeviceInfo;
- (void)showScanDeviceInfo;
- (void)hideShowInitChange;
- (void)FTShowInitChange;
- (void)showMiniMoreAlertNewUI;
- (void)showPINInputWrongMsg:(id)arg1;
- (void)initShowNewUI:(id)arg1;
- (double)tableView:(id)arg1 heightForHeaderInSection:(long long)arg2;
- (double)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;
- (void)alertView:(id)arg1 clickedButtonAtIndex:(long long)arg2;
- (void)alertView:(id)arg1 didDismissWithButtonIndex:(long long)arg2;
- (id)imageWithColor:(id)arg1;
- (void)drawLine:(id)arg1 rect:(struct CGRect)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (id)tableView:(id)arg1 viewForHeaderInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (_Bool)textField:(id)arg1 shouldChangeCharactersInRange:(struct _NSRange)arg2 replacementString:(id)arg3;
- (_Bool)textFieldShouldBeginEditing:(id)arg1;
- (void)showAlert;
- (void)beenScreenshot;
- (_Bool)textFieldShouldReturn:(id)arg1;
- (_Bool)textFieldShouldClear:(id)arg1;
- (void)ChangePINNewUI:(id)arg1;
- (void)closeBoardWindow;
- (void)showWarnAlert;
- (void)FTRetManage;
- (id)rightBarButtonWithTitle:(id)arg1 target:(id)arg2 action:(SEL)arg3 forControlEvents:(unsigned long long)arg4;
- (id)backBarButtonWithTitle:(id)arg1 target:(id)arg2 action:(SEL)arg3 forControlEvents:(unsigned long long)arg4;
- (void)didReceiveMemoryWarning;
- (void)viewDidLoad;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

