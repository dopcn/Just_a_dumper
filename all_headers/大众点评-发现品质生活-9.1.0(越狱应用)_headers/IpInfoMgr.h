//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class IpInfo, NSArray, NSString;

@interface IpInfoMgr : NSObject
{
    _Bool useTestIp;
    NSString *testIp;
    NSString *testIp4Location;
    NSString *installedDns;
    IpInfo *installedIp;
    IpInfo *backupRptIp;
    IpInfo *backupPicRptIp;
    NSArray *optimumIpList;
    NSArray *detectIpList;
    NSArray *installedIpList;
    IpInfo *latestAvailableIp;
    NSArray *backupRptIpList;
    NSArray *backupPicRptIpList;
    NSArray *portList;
}

+ (int)getISP;
+ (int)getApn;
+ (id)sharedInstance;
@property(retain, nonatomic) NSArray *portList; // @synthesize portList;
@property(retain, nonatomic) NSArray *backupPicRptIpList; // @synthesize backupPicRptIpList;
@property(retain, nonatomic) NSArray *backupRptIpList; // @synthesize backupRptIpList;
@property(retain, nonatomic) IpInfo *latestAvailableIp; // @synthesize latestAvailableIp;
@property(retain, nonatomic) NSArray *installedIpList; // @synthesize installedIpList;
@property(retain, nonatomic) NSArray *detectIpList; // @synthesize detectIpList;
@property(retain, nonatomic) NSArray *optimumIpList; // @synthesize optimumIpList;
@property(retain, nonatomic) IpInfo *backupPicRptIp; // @synthesize backupPicRptIp;
@property(retain, nonatomic) IpInfo *backupRptIp; // @synthesize backupRptIp;
@property(retain, nonatomic) NSString *installedDns; // @synthesize installedDns;
@property(retain, nonatomic) NSString *testIp; // @synthesize testIp;
@property(retain, nonatomic) NSString *testIp4Location; // @synthesize testIp4Location;
@property(nonatomic) _Bool useTestIp; // @synthesize useTestIp;
- (void).cxx_destruct;
- (void)updateBackupPicReportIpList:(id)arg1;
- (void)updateBackupReportIpList:(id)arg1;
- (void)updateInstalledIpList:(id)arg1;
@property(retain, nonatomic) IpInfo *installedIp; // @synthesize installedIp;
- (id)getInstalledIp:(id)arg1;
- (id)getCDN;
- (id)getBackUpIp:(int)arg1 excludeIp:(id)arg2;
- (id)getOptimumIp;
- (void)updateLastestAvailableIp:(id)arg1;
- (void)updateOptimumIpList:(id)arg1;
- (void)updateDetectIpList:(id)arg1;
- (void)updatePortList:(id)arg1;
- (id)getDetectIpList;
- (void)reportDnsLog:(id)arg1 cost:(int)arg2;
- (id)resolveDns:(id)arg1 timeout:(double)arg2;
- (id)init;

@end

