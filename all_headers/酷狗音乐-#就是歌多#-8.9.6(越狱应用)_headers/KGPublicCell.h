//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "MusicBaseCell.h"

@class KGPublicEntity, KGThemeButton, KGThemeLabel, KGThemeView, UIView;

@interface KGPublicCell : MusicBaseCell
{
    long long _cacheReqTime;
    CDUnknownBlockType _authorClickBlock;
    KGPublicEntity *_entity;
    KGThemeLabel *_publicTitleLabel;
    UIView *_publicAuthorView;
    UIView *_tagView;
    KGThemeLabel *_tagLabel;
    KGThemeLabel *_publicAuthorLabel;
    KGThemeButton *_publicAuthorBtn;
    KGThemeLabel *_publicCommentCountLabel;
    UIView *_baseView;
    KGThemeView *_bottomFatLine;
    UIView *_selectView;
}

+ (double)cellHeight:(id)arg1 showBottomFatLine:(_Bool)arg2;
@property(retain, nonatomic) UIView *selectView; // @synthesize selectView=_selectView;
@property(retain, nonatomic) KGThemeView *bottomFatLine; // @synthesize bottomFatLine=_bottomFatLine;
@property(retain, nonatomic) UIView *baseView; // @synthesize baseView=_baseView;
@property(retain, nonatomic) KGThemeLabel *publicCommentCountLabel; // @synthesize publicCommentCountLabel=_publicCommentCountLabel;
@property(retain, nonatomic) KGThemeButton *publicAuthorBtn; // @synthesize publicAuthorBtn=_publicAuthorBtn;
@property(retain, nonatomic) KGThemeLabel *publicAuthorLabel; // @synthesize publicAuthorLabel=_publicAuthorLabel;
@property(retain, nonatomic) KGThemeLabel *tagLabel; // @synthesize tagLabel=_tagLabel;
@property(retain, nonatomic) UIView *tagView; // @synthesize tagView=_tagView;
@property(retain, nonatomic) UIView *publicAuthorView; // @synthesize publicAuthorView=_publicAuthorView;
@property(retain, nonatomic) KGThemeLabel *publicTitleLabel; // @synthesize publicTitleLabel=_publicTitleLabel;
@property(retain, nonatomic) KGPublicEntity *entity; // @synthesize entity=_entity;
@property(copy, nonatomic) CDUnknownBlockType authorClickBlock; // @synthesize authorClickBlock=_authorClickBlock;
@property(nonatomic) long long cacheReqTime; // @synthesize cacheReqTime=_cacheReqTime;
- (void).cxx_destruct;
- (id)showCommentCountWithNumber:(long long)arg1;
- (void)publicAuthorBtnAction;
- (void)setEntity:(id)arg1 showBottomFatLine:(_Bool)arg2;
- (void)createViews;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;
- (void)setHighlighted:(_Bool)arg1 animated:(_Bool)arg2;
- (void)onChangeTheme:(id)arg1;
- (void)dealloc;

@end

