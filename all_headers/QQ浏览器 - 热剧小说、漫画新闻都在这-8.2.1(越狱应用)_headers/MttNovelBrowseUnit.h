//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "AppBrowseUnit.h"

#import "MttActionSheetDelegate-Protocol.h"
#import "MttAlertViewDelegate-Protocol.h"
#import "MttNovelAlertGuideDelegate-Protocol.h"
#import "MttNovelBrowseUnitFooterBarDelegate-Protocol.h"
#import "MttNovelBrowseUnitHeaderBarDelegate-Protocol.h"
#import "MttNovelPayBookManagerDelegate-Protocol.h"
#import "MttNovelRecommendViewDelegate-Protocol.h"
#import "MttNovelShelfArchiveViewDelegate-Protocol.h"
#import "MttNovelShelfViewDelegate-Protocol.h"
#import "MttNovelStoreViewDelegate-Protocol.h"
#import "MttNovelWebCacheBookManagerDelegate-Protocol.h"
#import "MttRechargeManagerDelegate-Protocol.h"
#import "MttShareBusinessCenterDataSource-Protocol.h"
#import "MttShareBusinessCenterDelegate-Protocol.h"
#import "MttToastViewDelegate-Protocol.h"
#import "ShareProcessUrl-Protocol.h"
#import "ShelfBookGuideDelegate-Protocol.h"

@class MTTNovelContentMainViewController, MttNovelAlertGuide, MttNovelBrowseUnitFooterBar, MttNovelBrowseUnitHeaderBar, MttNovelDataManager, MttNovelIndicatorView, MttNovelPayBookManager, MttNovelRecommendViewController, MttNovelShelfArchiveView, MttNovelShelfBobbleGuide, MttNovelShelfBookGuide, MttNovelShelfView, MttNovelStoreView, MttNovelUserCenterViewController, MttNovelWebCacheBookManager, NSMutableArray, NSString, ShareInfoPack, UIProgressView, UIView;

@interface MttNovelBrowseUnit : AppBrowseUnit <MttNovelStoreViewDelegate, MttNovelShelfViewDelegate, MttActionSheetDelegate, MttAlertViewDelegate, MttNovelPayBookManagerDelegate, MttNovelBrowseUnitHeaderBarDelegate, MttNovelBrowseUnitFooterBarDelegate, MttNovelShelfArchiveViewDelegate, ShelfBookGuideDelegate, MttNovelAlertGuideDelegate, MttRechargeManagerDelegate, MttToastViewDelegate, ShareProcessUrl, MttNovelRecommendViewDelegate, MttShareBusinessCenterDataSource, MttShareBusinessCenterDelegate, MttNovelWebCacheBookManagerDelegate>
{
    _Bool bUpdateFrequentVisit;
    struct CGRect preBounds;
    _Bool bShowStatusBar;
    _Bool _bUserSwitched;
    _Bool _bOpenSearchView;
    _Bool _backByPanGeusture;
    _Bool _directReturn;
    _Bool _shouldHideToolbar;
    _Bool _bFocusUnit;
    _Bool _haveStoreView;
    NSString *_outChannel;
    NSString *_inChannel;
    NSString *_preChannel;
    NSString *_preContent;
    NSString *_content;
    MTTNovelContentMainViewController *_novelMainViewController;
    MttNovelStoreView *_storeView;
    MttNovelShelfView *_shelfView;
    MttNovelShelfArchiveView *_shelfArchiveView;
    MttNovelDataManager *_novelDataManager;
    MttNovelRecommendViewController *_recommendViewController;
    MttNovelUserCenterViewController *_userCenterViewController;
    MttNovelBrowseUnitHeaderBar *_headerBar;
    NSMutableArray *_arrayNovelIds;
    UIView *_cbUserCenterView;
    UIProgressView *_progressView;
    MttNovelIndicatorView *_loadingIndicatorView;
    ShareInfoPack *_tempShareInfoPack;
    MttNovelPayBookManager *_novelPayBookManager;
    MttNovelWebCacheBookManager *_novelWebCacheBookManager;
    MttNovelWebCacheBookManager *_reverNovelWebCacheBookManager;
    MttNovelBrowseUnitFooterBar *_footerBar;
    MttNovelShelfBobbleGuide *_shelfBobbleGuide;
    MttNovelShelfBookGuide *_bookGuide;
    MttNovelAlertGuide *_alertGuide;
    UIView *_snapShotView;
    unsigned long long _enterType;
}

+ (id)guideProfile;
+ (void)reportNovelBannerOperateInfo:(id)arg1 url:(id)arg2 slotid:(id)arg3;
+ (id)bookCircleInfoMd5;
+ (void)saveBookCircleInfoMd5:(id)arg1;
+ (_Bool)getRecentlyReadWith:(id *)arg1 bookName:(id *)arg2 owner:(id *)arg3;
+ (_Bool)isInBookShelf:(id)arg1;
+ (void)startJudgeSyncState;
+ (void)statusBarAppearanceUpdate;
+ (void)recordLastReadingWord;
+ (void)checkUserSwitch;
+ (void)profileCheckUserSwitch;
+ (_Bool)getofflineprogress:(id)arg1 appType:(unsigned long long)arg2 withStatus:(id *)arg3 withCurrentCount:(id *)arg4 withFinishRate:(id *)arg5 withSerialid:(id *)arg6;
+ (id)getDownloadFileSizeType:(long long)arg1 Tips:(id)arg2 chapterCount:(long long)arg3;
+ (id)getFileSizeType:(long long)arg1 downloadSize:(double)arg2;
+ (_Bool)canFindBookId:(id)arg1 inRecords:(id)arg2;
+ (void)catalogCheckAndRequestPayedChapter:(id)arg1 novelAppType:(unsigned long long)arg2 UIblock:(CDUnknownBlockType)arg3;
+ (_Bool)innerAddBookFromStroe:(id)arg1 byDataSource:(id)arg2;
+ (void)safeSetObject:(id)arg1 forKey:(id)arg2 byDictionary:(id)arg3;
+ (void)addBooktoShelfWithID:(id)arg1;
+ (void)openNovelNote:(id)arg1;
+ (void)deleteNovelNote:(id)arg1;
+ (void)openNovelBookWithID:(id)arg1;
+ (void)offlineDownloadBook:(id)arg1;
+ (void)showMessage:(id)arg1;
+ (void)showAddBooktoShelfTips:(unsigned long long)arg1;
+ (void)notifiyShelfChanged:(unsigned long long)arg1;
+ (void)addBooktoShelfFromStoreWithID:(id)arg1;
+ (id)getNovelContentDataSource:(unsigned long long)arg1 bookID:(id)arg2;
+ (id)getNovelDataManager:(unsigned long long)arg1;
+ (void)storeOpenBookWithId:(id)arg1;
+ (void)recommendViewOpenUrl:(id)arg1 toBookDiscuss:(id)arg2;
+ (void)openBookCatalog:(id)arg1;
+ (void)showToast:(id)arg1;
+ (id)getCurrentUserBooksOnShelf;
+ (id)getUserBookShelf:(unsigned long long)arg1;
+ (id)getBooksKeys:(unsigned long long)arg1;
+ (void)openShelfInCurrentWindow;
+ (void)openShelfInNewWindow;
+ (void)exitSpeechSynthsizeModeWhenFromThirdApp;
+ (void)exitAutoMode;
+ (void)disableContentMenu;
+ (id)getCurrentNovelUnit;
+ (_Bool)isCurrentNovelUnit;
+ (struct CGSize)getScreenSize;
@property(nonatomic) unsigned long long enterType; // @synthesize enterType=_enterType;
@property(retain, nonatomic) UIView *snapShotView; // @synthesize snapShotView=_snapShotView;
@property(retain, nonatomic) MttNovelAlertGuide *alertGuide; // @synthesize alertGuide=_alertGuide;
@property(retain, nonatomic) MttNovelShelfBookGuide *bookGuide; // @synthesize bookGuide=_bookGuide;
@property(retain, nonatomic) MttNovelShelfBobbleGuide *shelfBobbleGuide; // @synthesize shelfBobbleGuide=_shelfBobbleGuide;
@property(retain, nonatomic) MttNovelBrowseUnitFooterBar *footerBar; // @synthesize footerBar=_footerBar;
@property(retain, nonatomic) MttNovelWebCacheBookManager *reverNovelWebCacheBookManager; // @synthesize reverNovelWebCacheBookManager=_reverNovelWebCacheBookManager;
@property(retain, nonatomic) MttNovelWebCacheBookManager *novelWebCacheBookManager; // @synthesize novelWebCacheBookManager=_novelWebCacheBookManager;
@property(retain, nonatomic) MttNovelPayBookManager *novelPayBookManager; // @synthesize novelPayBookManager=_novelPayBookManager;
@property(retain, nonatomic) ShareInfoPack *tempShareInfoPack; // @synthesize tempShareInfoPack=_tempShareInfoPack;
@property(nonatomic) _Bool haveStoreView; // @synthesize haveStoreView=_haveStoreView;
@property(retain, nonatomic) MttNovelIndicatorView *loadingIndicatorView; // @synthesize loadingIndicatorView=_loadingIndicatorView;
@property(retain, nonatomic) UIProgressView *progressView; // @synthesize progressView=_progressView;
@property(nonatomic) _Bool bFocusUnit; // @synthesize bFocusUnit=_bFocusUnit;
@property(nonatomic) __weak UIView *cbUserCenterView; // @synthesize cbUserCenterView=_cbUserCenterView;
@property(retain, nonatomic) NSMutableArray *arrayNovelIds; // @synthesize arrayNovelIds=_arrayNovelIds;
@property(retain, nonatomic) MttNovelBrowseUnitHeaderBar *headerBar; // @synthesize headerBar=_headerBar;
@property(nonatomic) __weak MttNovelUserCenterViewController *userCenterViewController; // @synthesize userCenterViewController=_userCenterViewController;
@property(nonatomic) __weak MttNovelRecommendViewController *recommendViewController; // @synthesize recommendViewController=_recommendViewController;
@property(nonatomic) __weak MttNovelDataManager *novelDataManager; // @synthesize novelDataManager=_novelDataManager;
@property(retain, nonatomic) MttNovelShelfArchiveView *shelfArchiveView; // @synthesize shelfArchiveView=_shelfArchiveView;
@property(retain, nonatomic) MttNovelShelfView *shelfView; // @synthesize shelfView=_shelfView;
@property(retain, nonatomic) MttNovelStoreView *storeView; // @synthesize storeView=_storeView;
@property(nonatomic) _Bool shouldHideToolbar; // @synthesize shouldHideToolbar=_shouldHideToolbar;
@property(retain, nonatomic) MTTNovelContentMainViewController *novelMainViewController; // @synthesize novelMainViewController=_novelMainViewController;
@property(nonatomic) _Bool directReturn; // @synthesize directReturn=_directReturn;
@property(retain, nonatomic) NSString *content; // @synthesize content=_content;
@property(retain, nonatomic) NSString *preContent; // @synthesize preContent=_preContent;
@property(retain, nonatomic) NSString *preChannel; // @synthesize preChannel=_preChannel;
@property(retain, nonatomic) NSString *inChannel; // @synthesize inChannel=_inChannel;
@property(retain, nonatomic) NSString *outChannel; // @synthesize outChannel=_outChannel;
- (void).cxx_destruct;
- (void)novelShelfView:(id)arg1 tabType:(unsigned long long)arg2;
- (void)midasChargeSuccessed;
- (void)onArchiveViewOpenBookWith:(id)arg1 bookId:(id)arg2;
- (void)onArchiveViewOpenCircle:(id)arg1;
- (void)onArchiveViewOpenStoreView:(id)arg1;
- (void)shouldUpdateArchivedThumbView:(id)arg1;
- (void)onArchiveViewUnArchived:(id)arg1;
- (_Bool)onArchiveBookListRecommend:(id)arg1;
- (void)onBackNovelShelfArchiveView:(id)arg1;
- (void)footerBarButtonClick:(unsigned long long)arg1;
- (void)selectAllButtonClicked:(_Bool)arg1;
- (void)tabButtonClick:(unsigned long long)arg1;
- (void)headerBarButtonClick:(unsigned long long)arg1;
- (void)bookArchive;
- (void)bookDelete;
- (_Bool)bookListRecommend:(unsigned long long)arg1;
- (void)finishEdit;
- (id)createFoortBar;
- (void)showUserCenterRedDotNum:(long long)arg1;
- (id)communityDotView;
- (id)userCenterDotView;
- (id)dotView;
- (void)showContentMainViewController:(_Bool)arg1;
- (void)closeRecommendView;
- (void)openRecommendView:(id)arg1 animated:(_Bool)arg2 from:(int)arg3;
- (id)getCurrentDataSource;
- (void)exitNovelMainCtroller;
- (void)setComeFromMainBrowser;
- (void)pageScrollSettingChanged:(id)arg1;
- (void)pageScrollSettingWillChanged:(id)arg1;
- (void)switchFontName:(id)arg1;
- (void)changeBackground:(id)arg1;
- (void)changeFontSize:(id)arg1;
- (void)updateThumbnail;
- (id)snapshotViewForNaivgationType:(unsigned long long)arg1;
- (id)targetViewForNavigationType:(unsigned long long)arg1;
- (id)snapshoViewContent;
- (CDUnknownBlockType)createPackBlock;
- (CDUnknownBlockType)createChoiceBlock;
- (void)willShareToChannel:(int)arg1;
- (id)shareNoEnableStatusArray;
- (void)removeBookRedDot:(id)arg1;
- (void)saveThumbViewType;
- (void)ChangeInChannel:(id)arg1 NewContent:(id)arg2 chapterID:(long long)arg3;
- (_Bool)toChangeInChannel:(id)arg1 NewContent:(id)arg2;
- (void)setProgress:(float)arg1;
- (void)novelStoreView:(id)arg1 progressChanged:(double)arg2;
- (void)novelStoreViewOpenUserCenterSetting:(id)arg1;
- (void)novelStoreView:(id)arg1 didFinishUrl:(id)arg2 withTitle:(id)arg3;
- (void)novelStoreView:(id)arg1 didChangeUrl:(id)arg2;
- (void)novelShelfView:(id)arg1 contentOffset:(struct CGPoint)arg2;
- (void)deleteBooks:(id)arg1;
- (_Bool)novelShelfViewEnable;
- (void)novelShelfViewLoginState:(id)arg1 isLogin:(_Bool)arg2;
- (void)novelShelfViewLongPress:(id)arg1;
- (void)novelShelfViewSelectedBooksChanged:(id)arg1;
- (void)novelShelfViewOpenSignView;
- (void)updateSignButtonIfNeeded;
- (void)novelShelfViewOpenStoreSearchView;
- (void)novelShelfViewOpenBanner:(id)arg1 openType:(long long)arg2;
- (void)exitNovelArchiveView:(_Bool)arg1;
- (void)novelShelfViewOpenEggView:(id)arg1;
- (void)novelShelfVIewOpenCircle:(id)arg1;
- (void)novelShelfViewOpenArchiveView:(_Bool)arg1;
- (struct CGRect)archiveViewFrame;
- (void)novelShelfViewOpenStoreView;
- (_Bool)novelShelfView:(id)arg1 didOpenBookWithId:(id)arg2;
- (id)getStoreUrl;
- (id)pickedImgForWeiboShare;
- (id)captureNovelCoreView:(_Bool)arg1;
- (id)snapshotImage;
- (void)reload;
- (void)reportDeleteAction;
- (void)deleteBooksCache:(id)arg1;
- (void)deleteBookWithIds:(id)arg1;
- (void)mttActionSheet:(id)arg1 didDismissWithButtonIndex:(long long)arg2;
- (void)offlineDownloadBook:(id)arg1;
- (void)setFullScreen:(_Bool)arg1 animation:(_Bool)arg2;
- (void)setFullScreen:(_Bool)arg1;
- (void)setbartitle:(id)arg1 postion:(long long)arg2 options:(id)arg3;
- (id)getWebViewDelegate;
- (void)toastViewBtnClicked:(id)arg1;
- (void)presentMidasChargeController:(id)arg1;
- (void)showChargeAlertView:(id)arg1;
- (void)endWaitProView;
- (void)showWaitProView:(id)arg1;
- (void)mttAlertView:(id)arg1 clickedButtonAtIndex:(long long)arg2;
- (void)shouldUpdateNovelStoreJSState:(id)arg1 state:(unsigned long long)arg2;
- (void)showBalanceView:(long long)arg1 style:(unsigned long long)arg2;
- (void)buyBookWithOptions:(id)arg1;
- (void)prePay:(id)arg1;
- (_Bool)gestureRecognizerShouldBegin:(id)arg1 forNavigationType:(unsigned long long)arg2;
- (void)openCommentView:(unsigned long long)arg1;
- (void)openContentADView:(id)arg1 serialID:(unsigned long long)arg2;
- (_Bool)shouldShowBookTailTips:(unsigned long long)arg1;
- (void)addShowTime:(unsigned long long)arg1 adText:(id)arg2;
- (id)getContentADText:(unsigned long long)arg1 needSkip:(_Bool)arg2;
- (id)getCommentDict:(unsigned long long)arg1;
- (id)getCommentInfo:(unsigned long long)arg1;
- (long long)getCommentCount:(unsigned long long)arg1;
- (void)updateStoreJSState:(id)arg1 stat:(unsigned long long)arg2;
- (void)reEnterNovelContent;
- (void)removeNovelContent:(id)arg1;
- (void)popNextNovel:(id)arg1;
- (void)pushMainController:(id)arg1;
- (void)downloadFinish:(id)arg1 success:(_Bool)arg2;
- (void)downloadProgressDidChange:(id)arg1 progress:(double)arg2 size:(unsigned long long)arg3;
- (_Bool)openBookWithId:(id)arg1 readingRecord:(id)arg2 openFrom:(int)arg3 animted:(_Bool)arg4;
- (id)createContentMainViewController:(id)arg1 readingRecord:(id)arg2 openFrom:(int)arg3;
- (_Bool)downloadEpubTip:(id)arg1 isOpenBookCatalog:(_Bool)arg2;
- (_Bool)openBookWithId:(id)arg1 readingRecord:(id)arg2 openFrom:(int)arg3;
- (void)novelEventComplete:(long long)arg1 msg:(id)arg2;
- (void)showsoftinput:(id)arg1;
- (void)openBookShelf;
- (void)judgeRemoveStoreView:(_Bool)arg1;
- (void)handleNetworkError;
- (void)editBarButtonClicked;
- (void)backBarButtonClicked:(id)arg1;
- (id)getNovelStoreNavigationItem:(id)arg1;
- (void)openStoreViewWithUrl:(id)arg1 animated:(_Bool)arg2 withParentView:(id)arg3;
- (void)openStoreViewWithUrl:(id)arg1 animated:(_Bool)arg2;
- (id)novelStoreURL;
- (_Bool)isInStoreView;
- (void)setAllViewScroll:(_Bool)arg1 v:(id)arg2;
- (_Bool)isUserCenterShow;
- (void)openStoreViewAnimated:(_Bool)arg1;
- (void)openUserCenter;
- (void)openRecommentAnimated:(_Bool)arg1;
- (void)openRecommentWithUrl:(id)arg1 animated:(_Bool)arg2;
- (struct CGRect)storeViewFrame;
- (void)openStoreView:(id)arg1 animated:(_Bool)arg2;
- (void)cacheBookFaileWithNotification:(id)arg1;
- (void)cacheBookCompletedWithNotification:(id)arg1;
- (void)updateShelfFailedWithNotification:(id)arg1;
- (void)changeLoginViewState:(_Bool)arg1;
- (void)createShelfView;
- (Class)shelfViewClass;
- (Class)shelfDataSourceClass;
- (struct CGRect)shelfViewFrame;
- (void)addBrowserHeaderView;
- (void)createHeaderWithStyle:(unsigned long long)arg1;
- (struct CGRect)headerBarFrame;
- (unsigned long long)appType;
- (void)createHeader;
- (void)hiddenNavigationBar:(_Bool)arg1 animationed:(_Bool)arg2;
- (void)RunCacheCheck;
- (void)UpdateOutChannel:(id)arg1;
- (void)doWithEntranceUrl:(id)arg1 fromNativeStore:(_Bool)arg2;
- (id)splitUrlComeFromMainBrowser:(id)arg1;
- (id)splitRNPair:(id)arg1;
- (id)splitSubString:(id)arg1 key:(id)arg2 value:(id)arg3;
- (void)didRotate;
- (void)registerMidasPay;
- (void)registerMidasPayOnce;
- (long long)preferredStatusBarStyle;
- (_Bool)prefersStatusBarHidden;
- (_Bool)isSupportFullScreen;
- (void)showPushAuthToastView:(id)arg1;
- (id)controllerShareViewWillBePresented;
- (id)shareInfoPack;
- (id)shareText;
- (id)shareURL;
- (void)shareToWeibo:(id)arg1 withUrl:(id)arg2 withDescription:(id)arg3 withPageURL:(id)arg4 withImageSource:(id)arg5 withImageSourceType:(int)arg6 withType:(int)arg7 withApp:(int)arg8 withPageSourceForGetFirstImg:(id)arg9 shareBusinessSource:(int)arg10 includeWeakShare:(_Bool)arg11 toApp:(int)arg12 contentType:(long long)arg13 shareFileType:(long long)arg14 showApps:(long long)arg15;
- (id)shareByNavtiveInfo;
- (id)getShareInfoPack;
- (id)getShareText;
- (id)getShareURL;
- (void)refreshSkinWithMode:(long long)arg1;
- (id)getTitle;
- (id)getUrl;
- (id)contentShareUrl;
- (id)getShelfShareUrl:(_Bool)arg1 needTab:(_Bool)arg2;
- (id)getShareUrl;
- (id)jianjieURL;
- (id)popMenuStatusArray;
- (void)insertSubview:(id)arg1 belowSubview:(id)arg2;
- (void)addSubview:(id)arg1;
- (void)pageUp:(_Bool)arg1;
- (void)pageDown:(_Bool)arg1;
- (unsigned long long)supportedInterfaceOrientations;
- (_Bool)isSelfControlDeviceOrientation;
- (_Bool)isSupportLandscape;
- (void)unitCancelBackGesture;
- (void)unitWillHide;
- (void)unitWillShow;
- (void)rejustViewOrderIfNeed;
- (void)changeContentLayoutAfterGetUseConfig;
- (void)checkAccountAndUpdateShelfViewIfNeed;
- (void)checkAndUpdateShelfView;
- (void)back;
- (_Bool)canGoBack;
- (id)viewOrderArray;
- (void)appDidEnterBackground:(id)arg1;
- (void)appWillEnterForground:(id)arg1;
- (void)dealloc;
- (void)layoutSubviews;
- (void)layoutHeaderAndToolbarView;
- (void)layoutShelfView;
- (void)resetHeaderBarOrder;
- (id)getNovelDataDispatcher;
- (_Bool)isCBNovelType;
- (void)showShelfPopupWindowIfNeeded;
- (void)shelfBannerUpdate:(id)arg1;
- (_Bool)forceSwitchToShelfTab:(id)arg1;
- (void)locationShelfTabViewByUrl:(id)arg1;
- (void)closeGuide:(unsigned long long)arg1;
- (void)clickInButton:(unsigned long long)arg1;
- (void)clickButtonWithBookGuide:(id)arg1;
- (void)cancelGuide;
- (void)showGuideInShelf;
- (void)showShelfGuide;
- (struct CGRect)alertGuideFrame;
- (struct CGRect)bookGuideFrame;
- (struct CGRect)bobbleGuideFrame:(_Bool)arg1 tabType:(unsigned long long)arg2;
- (void)cancelPositionAnimation;
- (void)shelfChangePositionAnimation;
- (void)showShelfGuideDelay;
- (void)setUserReadBook;
- (void)showGuideIfNeed;
- (void)accountInfoUpdated:(id)arg1;
- (_Bool)isInShelf;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithFrameWithUrl:(struct CGRect)arg1 AbsolutelyUrl:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@property(readonly, nonatomic) _Bool usingQBWebView;

@end

