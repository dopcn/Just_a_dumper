//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "BDCBaseDAO.h"

@interface ImageFileDiffDao : BDCBaseDAO
{
}

+ (id)lastImageWithServerPath:(id)arg1;
+ (_Bool)hasImageFileWithServerPath:(id)arg1;
+ (long long)imageFileListCountWithServerPath:(id)arg1;
+ (void)truncateImageFiles;
+ (id)getAllRelationTag;
+ (id)thingsSearchWithInfo:(id)arg1;
+ (id)imagefileAllCountryLocationInfo;
+ (id)imagefileAllChinaCityLocationInfo;
+ (id)locationSearchWithInfo:(id)arg1;
+ (id)personSearchWithInfo:(id)arg1;
+ (void)updateThingsTagIds:(id)arg1 fid:(unsigned long long)arg2;
+ (void)deleteThingsTagIdWithFid:(unsigned long long)arg1;
+ (id)thingsTagIdListWithFid:(unsigned long long)arg1;
+ (id)tagIdListWithFid:(unsigned long long)arg1 imageType:(long long)arg2 limit:(long long)arg3;
+ (id)getFaceImageFilesWithTagId:(long long)arg1 limit:(unsigned long long)arg2;
+ (id)getBabyFaceRemarkToCreateAlbum;
+ (id)getTopTagsWithType:(long long)arg1 inDirectory:(id)arg2 limits:(long long)arg3;
+ (id)faceRemarksWithCondition:(id)arg1;
+ (id)allFaceRemarksDictionary;
+ (id)getImageTagRelationWithArguModel:(id)arg1;
+ (id)getImageFileListWithArguModel:(id)arg1;
+ (id)hashImageDiffModelWithIds:(id)arg1;
+ (id)hashThingsTagModelList;
+ (id)hashFaceRemarkList;
+ (void)updateFaceRemarkWithTagId:(long long)arg1 avatarFid:(unsigned long long)arg2 avatarUrl:(id)arg3;
+ (void)updateFaceRemarkWithTagId:(long long)arg1 remarkName:(id)arg2 userUK:(id)arg3 phoneNum:(id)arg4 relationShip:(id)arg5;
+ (void)deleteFaceRemarkWithTagId:(long long)arg1;
+ (void)truncateImageTags;
+ (void)removeCategoryImageTags;
+ (_Bool)truncateCloudImageTags;
+ (void)removeThingsImageTags;
+ (void)removeFaceRemarkImageTags;
+ (_Bool)removeThingsImageTagsWithTagId:(long long)arg1 fids:(id)arg2;
+ (_Bool)removeFaceImageTagsWithTagId:(long long)arg1 fids:(id)arg2;
+ (void)updateImageTagWithNewTagId:(long long)arg1 oldTagId:(long long)arg2 type:(long long)arg3;
+ (long long)getRealImageCount;
+ (id)faceListWithCount:(long long)arg1;
+ (id)getFaceRemarkList;
+ (id)getRemarkMySelfModel;
+ (id)getUnRemarkFaceList;
+ (id)getAlreadyRemarkFace;
+ (id)faceRemarkWithTagId:(long long)arg1;
+ (_Bool)truncateFaceRemarksInfo;
+ (_Bool)saveFaceRemarksInfo:(id)arg1;
+ (id)getImagelistMAXMINDateTakenWithCondition:(id)arg1;
+ (unsigned long long)getImageListCountWithCondition:(id)arg1;
+ (id)getImageListWithCondition:(id)arg1 start:(unsigned long long)arg2 count:(unsigned long long)arg3;
+ (id)getMaxCreateTime;
+ (unsigned long long)getAllForeignImageLocationTagCount;
+ (unsigned long long)getAllChinaImageLocationTagCount;
+ (unsigned long long)getAllImageLocationTagCount;
+ (id)getImageLocationInfoList:(id)arg1;
+ (id)getImageTagInfoList:(_Bool)arg1 boundsValue:(unsigned long long)arg2;
+ (void)parseImageFileModel:(id)arg1 withReslution:(id)arg2;
+ (id)imageFileWithFildID:(unsigned long long)arg1;
+ (id)imagesWithTags:(unsigned long long)arg1 start:(unsigned long long)arg2 count:(unsigned long long)arg3;
+ (unsigned long long)getAllFromFileDiffImageCount;
+ (id)getAllFidFromFileDiffVideoArray;
+ (id)getAllFidFromFileDiffImageArray;
+ (unsigned long long)getAllImageFileModelCount;
+ (id)getAllImageFileModelIdDictionary;
+ (id)getDiffImageFileInfoListInfoWithLocationLevel:(unsigned long long)arg1 topLeft:(struct CGPoint)arg2 bottomRight:(struct CGPoint)arg3;
+ (long long)getDiffImageFileListCountWithLocationLevel:(unsigned long long)arg1 model:(id)arg2 topLeft:(struct CGPoint)arg3 bottomRight:(struct CGPoint)arg4;
+ (id)getDiffImageFileListWithLocationLevel:(unsigned long long)arg1 model:(id)arg2 topLeft:(struct CGPoint)arg3 bottomRight:(struct CGPoint)arg4 start:(unsigned long long)arg5 count:(unsigned long long)arg6;
+ (unsigned long long)getChinaImageFileCount;
+ (id)columnNameWithLevel:(unsigned long long)arg1;
+ (id)getImageListWithGroupType:(unsigned long long)arg1 in:(id)arg2 start:(unsigned long long)arg3 count:(unsigned long long)arg4;
+ (id)getImageListWithGroupType:(unsigned long long)arg1 in:(id)arg2;
+ (id)getImageListInfoWithGroupType:(unsigned long long)arg1 serverPath:(id)arg2 categoryType:(id)arg3;
+ (id)columnNameWithType:(unsigned long long)arg1;
+ (id)getImageFidArrayWithFilePathArray:(id)arg1;
+ (id)getImageFileListWithFidArray:(id)arg1;
+ (id)getAllImageFileListWithType:(unsigned long long)arg1 date:(unsigned long long)arg2 start:(unsigned long long)arg3 count:(unsigned long long)arg4;
+ (id)getAllImageFileListWithStart:(unsigned long long)arg1 count:(unsigned long long)arg2;
+ (id)faceInfoFromResultSet:(id)arg1;
+ (id)faceInfoWithFid:(id)arg1;
+ (_Bool)updateFaceInfoWithFid:(id)arg1 faceInfo:(id)arg2;
+ (_Bool)updateImageFileModelWithFid:(id)arg1 serverFullPath:(id)arg2;
+ (_Bool)updateDescendantPath:(id)arg1 originalPath:(id)arg2;
+ (_Bool)deleteDescendantFileWithServerPath:(id)arg1;
+ (int)getGarbageImageCount;
+ (_Bool)deleteGarbageImage:(int)arg1;
+ (_Bool)deleteImageFileModelWithFidArray:(id)arg1;
+ (_Bool)deleteImageFileModelWithFid:(id)arg1;
+ (_Bool)updateImageFileWithFid:(id)arg1 path:(id)arg2 fullPath:(id)arg3;
+ (_Bool)insertFileArray:(id)arg1 fromFileDiff:(_Bool)arg2;
+ (_Bool)insert:(id)arg1 fromFileDiff:(_Bool)arg2;
+ (_Bool)insertFileArray:(id)arg1;
+ (_Bool)insert:(id)arg1;
+ (_Bool)deleteTagsForImageFid:(id)arg1 inDatabase:(id)arg2;
+ (id)faceRemarkWithResultSet:(id)arg1;
+ (id)convertTimeResultModel:(id)arg1;
+ (id)convertResultModel:(id)arg1;
+ (id)imageFileListCol;

@end

