//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class ComThreatMetrixTDDefaults, ComThreatMetrixTDLocationHandler, ComThreatMetrixTDMConnection, ComThreatMetrixTrustDefenderCore, NSArray, NSDictionary, NSNumber;
@protocol OS_dispatch_queue;

@interface THMTrustDefender : NSObject
{
    int _in_progress;
    NSObject<OS_dispatch_queue> *_serial_queue;
    _Bool _shouldCancel;
    _Bool _isConfigured;
    _Bool _shouldEnableLocationServices;
    _Bool _shouldEnableLocationServicesQuietly;
    NSNumber *_timeout;
    ComThreatMetrixTDDefaults *_defaults;
    NSDictionary *_result;
    ComThreatMetrixTDLocationHandler *_locationHandler;
    ComThreatMetrixTrustDefenderCore *_td;
    ComThreatMetrixTDMConnection *_tdmConnection;
    NSArray *_certHash;
    id _delegate;
}

+ (id)sharedInstance;
@property(nonatomic) __weak id delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) NSArray *certHash; // @synthesize certHash=_certHash;
@property(retain, nonatomic) ComThreatMetrixTDMConnection *tdmConnection; // @synthesize tdmConnection=_tdmConnection;
@property(readonly, nonatomic) ComThreatMetrixTrustDefenderCore *td; // @synthesize td=_td;
@property(retain, nonatomic) ComThreatMetrixTDLocationHandler *locationHandler; // @synthesize locationHandler=_locationHandler;
@property(nonatomic) _Bool shouldEnableLocationServicesQuietly; // @synthesize shouldEnableLocationServicesQuietly=_shouldEnableLocationServicesQuietly;
@property(nonatomic) _Bool shouldEnableLocationServices; // @synthesize shouldEnableLocationServices=_shouldEnableLocationServices;
@property(retain, nonatomic) NSDictionary *result; // @synthesize result=_result;
@property(retain, nonatomic) ComThreatMetrixTDDefaults *defaults; // @synthesize defaults=_defaults;
@property(retain, nonatomic) NSNumber *timeout; // @synthesize timeout=_timeout;
@property(nonatomic) _Bool isConfigured; // @synthesize isConfigured=_isConfigured;
@property _Bool shouldCancel; // @synthesize shouldCancel=_shouldCancel;
- (void).cxx_destruct;
- (id)getArrayFrom:(id)arg1 error:(id *)arg2;
- (id)version;
- (id)location;
- (void)setLocation:(id)arg1;
- (id)returnStatusOfProfilingFor:(long long)arg1 and:(id)arg2 withCallback:(CDUnknownBlockType)arg3;
- (id)createResultFrom:(long long)arg1 and:(id)arg2;
- (void)pauseLocationServices:(_Bool)arg1;
- (void)cancel;
- (void)setStepupToken:(id)arg1;
- (id)doRegistrationRequestForUserContext:(id)arg1 method:(id)arg2 prompt:(id)arg3 andCallbackBlock:(CDUnknownBlockType)arg4;
- (id)processStrongAuthMessage:(id)arg1 withPromptCallback:(CDUnknownBlockType)arg2 andCallbackBlock:(CDUnknownBlockType)arg3;
- (id)processStrongAuthMessage:(id)arg1 withCallbackBlock:(CDUnknownBlockType)arg2;
- (id)processStrongAuthMessage:(id)arg1 withPromptCallback:(CDUnknownBlockType)arg2;
- (id)doProfileRequest:(id)arg1;
- (id)doProfileRequest;
- (id)doProfileRequestWithCallback:(CDUnknownBlockType)arg1;
- (id)doProfileRequestWithOptions:(id)arg1 andCallbackBlock:(CDUnknownBlockType)arg2;
- (void)configure:(id)arg1;
- (long long)doStrongAuthRequestMain:(_Bool)arg1 method:(int)arg2 authContext:(id)arg3 sessionID:(id)arg4 prompt:(id)arg5 alert:(id)arg6 promptCallback:(CDUnknownBlockType)arg7 serverDriven:(_Bool)arg8;
- (id)doRegistrationRequestForUserContext:(id)arg1 method:(id)arg2 prompt:(id)arg3 sessionID:(id)arg4 andCallbackBlock:(CDUnknownBlockType)arg5;
- (void)doConfigure:(id)arg1;
- (id)initInternal;
- (void)doProfileMainFor:(id)arg1 withCallbackBlock:(CDUnknownBlockType)arg2 options:(id)arg3;
- (void)sendFingerprintingRequests:(id)arg1 sessionID:(id)arg2 config:(id)arg3;
- (void)readDefaults;
- (void)updateDefaults:(id)arg1;
- (long long)waitForConnections:(_Bool)arg1;
- (void)completeProfileFor:(id)arg1 withResult:(long long)arg2 andCallbackBlock:(CDUnknownBlockType)arg3;
- (void)callCallback:(CDUnknownBlockType)arg1 orDelegate:(id)arg2 forSessionId:(id)arg3 andStatusCode:(long long)arg4;
- (void)connectToFPXMLServer:(id)arg1 withTimeout:(long long)arg2 forId:(id)arg3 using:(id)arg4;
- (_Bool)connectToDNSFor:(id)arg1;
- (long long)fireCarrierIDRequest:(id)arg1 connection:(id)arg2;
- (void)dealloc;
- (id)customAttributesWithPaymentInstrumentId:(id)arg1 transactionAmount:(id)arg2 transactionCurrency:(id)arg3;

@end

