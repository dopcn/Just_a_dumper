//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

@class NSManagedObjectContext, NSManagedObjectModel, NSPersistentStoreCoordinator, NSString, NSURL;

@interface WXManagedObjectContextManager : NSObject
{
    NSManagedObjectModel *_managedObjectModel;
    NSPersistentStoreCoordinator *_persistentStoreCoordinator;
    NSManagedObjectContext *_hiddenManagedObjectContext;
    NSManagedObjectContext *_mainManagedObjectContext;
    NSManagedObjectContext *_saveManagedObjectContext;
    NSString *_userId;
    NSURL *_modelUrl;
    NSString *_keyForThread;
    NSString *_keyForThreadForReadonly;
}

+ (void)removeAllOpenIMDBFilesAndGetFailedPaths:(id *)arg1;
+ (id)dbStoreType;
+ (id)dbFileName;
+ (id)dbDirPrefix;
+ (id)dbRootDir;
@property(retain, nonatomic) NSString *keyForThreadForReadonly; // @synthesize keyForThreadForReadonly=_keyForThreadForReadonly;
@property(retain, nonatomic) NSString *keyForThread; // @synthesize keyForThread=_keyForThread;
@property(retain, nonatomic) NSURL *modelUrl; // @synthesize modelUrl=_modelUrl;
@property(retain, nonatomic) NSString *userId; // @synthesize userId=_userId;
@property(retain, nonatomic) NSManagedObjectContext *saveManagedObjectContext; // @synthesize saveManagedObjectContext=_saveManagedObjectContext;
@property(retain, nonatomic) NSManagedObjectContext *mainManagedObjectContext; // @synthesize mainManagedObjectContext=_mainManagedObjectContext;
@property(retain, nonatomic) NSManagedObjectContext *hiddenManagedObjectContext; // @synthesize hiddenManagedObjectContext=_hiddenManagedObjectContext;
@property(retain, nonatomic) NSPersistentStoreCoordinator *persistentStoreCoordinator; // @synthesize persistentStoreCoordinator=_persistentStoreCoordinator;
@property(retain, nonatomic) NSManagedObjectModel *managedObjectModel; // @synthesize managedObjectModel=_managedObjectModel;
- (void).cxx_destruct;
- (_Bool)endCurrentQueueAsReadonly;
- (_Bool)beginCurrentQueueAsReadonly;
- (_Bool)isRunningOnQueue:(struct dispatch_queue_s *)arg1;
- (_Bool)isRunningOnQueueWithSpecific:(const char *)arg1;
- (void)resetFrameWork;
- (id)currentManagedObjectContext;
- (void)dealloc;
- (id)initWithUserId:(id)arg1 modelURL:(id)arg2;
- (void)setupFrameWork;
- (void)setQueueSpecificForContext:(id)arg1 specific:(const char *)arg2;
- (const char *)queueSpecificForContext:(id)arg1;
- (id)getPrivateManagedObjectContextForReadonly:(_Bool)arg1;

@end

