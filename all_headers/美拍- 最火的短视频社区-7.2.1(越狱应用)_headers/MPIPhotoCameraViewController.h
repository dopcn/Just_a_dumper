//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "MPICameraViewController.h"

#import "CameraFocusViewDelegate-Protocol.h"
#import "MPIPhotoCameraBottomViewDelegate-Protocol.h"
#import "MTCameraDelegate-Protocol.h"
#import "MTCameraSettingDelegate-Protocol.h"

@class CameraFocusView, EnlargeButton, MPICameraSettingPopoverView, MPICameraToolBar, MPIPhotoCameraBottomView, MPIPhotoCameraViewModel, MPIPopView, MTCameraView, NSLayoutConstraint, NSString, UIView;

@interface MPIPhotoCameraViewController : MPICameraViewController <MTCameraDelegate, MTCameraSettingDelegate, MPIPhotoCameraBottomViewDelegate, CameraFocusViewDelegate>
{
    _Bool _isViewDidAppeared;
    _Bool _needAddBlurMaskView;
    UIView *_topMaskView;
    MPICameraToolBar *_toolBar;
    UIView *_cameraView;
    MPIPhotoCameraBottomView *_bottomView;
    EnlargeButton *_closeButton;
    NSLayoutConstraint *_headerViewHeightConstraint;
    NSLayoutConstraint *_bottomViewBottomConstraint;
    MTCameraView *_cameraDisplayView;
    MPIPhotoCameraViewModel *_viewModel;
    MPIPopView *_settingContainerView;
    MPICameraSettingPopoverView *_settingPopoverView;
    CameraFocusView *_focusView;
}

+ (id)cameraVCFromStoryboard;
@property(nonatomic) _Bool needAddBlurMaskView; // @synthesize needAddBlurMaskView=_needAddBlurMaskView;
@property(nonatomic) _Bool isViewDidAppeared; // @synthesize isViewDidAppeared=_isViewDidAppeared;
@property(retain, nonatomic) CameraFocusView *focusView; // @synthesize focusView=_focusView;
@property(retain, nonatomic) MPICameraSettingPopoverView *settingPopoverView; // @synthesize settingPopoverView=_settingPopoverView;
@property(retain, nonatomic) MPIPopView *settingContainerView; // @synthesize settingContainerView=_settingContainerView;
@property(retain, nonatomic) MPIPhotoCameraViewModel *viewModel; // @synthesize viewModel=_viewModel;
@property(retain, nonatomic) MTCameraView *cameraDisplayView; // @synthesize cameraDisplayView=_cameraDisplayView;
@property(nonatomic) __weak NSLayoutConstraint *bottomViewBottomConstraint; // @synthesize bottomViewBottomConstraint=_bottomViewBottomConstraint;
@property(nonatomic) __weak NSLayoutConstraint *headerViewHeightConstraint; // @synthesize headerViewHeightConstraint=_headerViewHeightConstraint;
@property(nonatomic) __weak EnlargeButton *closeButton; // @synthesize closeButton=_closeButton;
@property(nonatomic) __weak MPIPhotoCameraBottomView *bottomView; // @synthesize bottomView=_bottomView;
@property(nonatomic) __weak UIView *cameraView; // @synthesize cameraView=_cameraView;
@property(nonatomic) __weak MPICameraToolBar *toolBar; // @synthesize toolBar=_toolBar;
@property(nonatomic) __weak UIView *topMaskView; // @synthesize topMaskView=_topMaskView;
- (void).cxx_destruct;
- (void)applicationWillEnterForeground:(id)arg1;
- (void)cameraSubjectAreaDidChange:(id)arg1;
- (void)cameraFocusView:(id)arg1 focusAtTouchPoint:(struct CGPoint)arg2;
- (void)photoCameraBottomViewDidTapPhotoLabrary:(id)arg1;
- (void)photoCameraBottomViewDidCapturePhoto:(id)arg1;
- (void)photoCameraBottomViewDidTapPhotoMV:(id)arg1;
- (void)flipCameraFinished;
- (void)cameraAdjustingExposure:(_Bool)arg1;
- (void)cameraAdjustingFocus:(_Bool)arg1;
- (void)pushToPhotoEditorVCWithCoppedImage:(id)arg1;
- (void)pushToChooseMVPhotoVCWithSinglePick:(_Bool)arg1;
- (void)removeCameraDisplayViewIfNeeded;
- (void)presetCameraDisplayViewToFullScreen;
- (void)updateCameraDisplayView;
- (void)updateCameraDisplayViewWithAnimation;
- (void)setupCameraFocusView;
- (void)setupCameraDisplayViewIfNeeded;
- (void)showSettingPopoverView;
- (void)setupSettingPopoverView;
- (void)setupToolBar;
- (void)setupViewModelIfNeed;
- (void)commonSetup;
- (void)handlePhotoMVBlingAnimation;
- (void)turnOffTorch;
- (void)closeAction:(id)arg1;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

