//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <UIKit/UIViewController.h>

#import "FeedsVideoTabListDelegate-Protocol.h"
#import "IFeedsVideoActionBarDelegate-Protocol.h"
#import "IFeedsVideoBrowserDelegate-Protocol.h"
#import "IFeedsVideoCellDebugDelegate-Protocol.h"
#import "IFeedsVideoCellDelegate-Protocol.h"
#import "IFeedsVideoCellTitleDelegate-Protocol.h"
#import "IMttFeedsVideoBrowserWebViewControllerDelegate-Protocol.h"
#import "MttActionSheetDelegate-Protocol.h"
#import "MttAlertViewDelegate-Protocol.h"
#import "MttShareBusinessCenterDataSource-Protocol.h"
#import "MttShareBusinessCenterDelegate-Protocol.h"
#import "UIGestureRecognizerDelegate-Protocol.h"
#import "UINavigationControllerDelegate-Protocol.h"
#import "UITableViewDelegate-Protocol.h"
#import "UIViewControllerTransitioningDelegate-Protocol.h"

@class MttBusinessSceneMenuView, MttFeedsFloatVideoUnit, MttFeedsFloatVideoUnitToolBar, MttFeedsVideoBrowserDataSource, MttFeedsVideoCommentPanel, MttFeedsVideoFeedbackView, MttFeedsVideoPlayItem, MttFeedsVideoProfile, MttFeedsVideoRecord, MttFeedsVideoReportQueue, MttFeedsVideoTabList, MttFeedsVideoTableView, MttFeedsVideoTagHeader, MttVideoPlayerAnimatedTransitioning, MttVideoSnifferQueue, NSIndexPath, NSMutableDictionary, NSString, UIButton, UIPanGestureRecognizer, UIView;
@protocol MttFeedsVideoBrowserControllerDelegate;

@interface MttFeedsVideoBrowserController : UIViewController <UIGestureRecognizerDelegate, UITableViewDelegate, IFeedsVideoBrowserDelegate, IFeedsVideoCellDelegate, IFeedsVideoActionBarDelegate, MttShareBusinessCenterDataSource, MttShareBusinessCenterDelegate, MttAlertViewDelegate, IMttFeedsVideoBrowserWebViewControllerDelegate, IFeedsVideoCellTitleDelegate, MttActionSheetDelegate, FeedsVideoTabListDelegate, IFeedsVideoCellDebugDelegate, UINavigationControllerDelegate, UIViewControllerTransitioningDelegate>
{
    struct CGPoint _startPoint;
    struct CGPoint _lastPoint;
    long long _panState;
    MttFeedsFloatVideoUnitToolBar *_toolBar;
    _Bool _firstDisplay;
    _Bool _firstReport;
    _Bool _isFromQB;
    _Bool _startPlayVideo;
    _Bool _isAutoPlayNext;
    _Bool _isBackFromComment;
    _Bool _firstItemWasReported;
    id <MttFeedsVideoBrowserControllerDelegate> _delegate;
    MttFeedsVideoCommentPanel *_commentPanel;
    MttFeedsVideoBrowserDataSource *_dataSource;
    MttVideoPlayerAnimatedTransitioning *_transitionning;
    MttFeedsVideoPlayItem *_playItem;
    MttFeedsVideoRecord *_firstVideoRecord;
    MttFeedsVideoReportQueue *_reportQueue;
    UIView *_popMaskView;
    MttBusinessSceneMenuView *_popMenuView;
    UIView *_feedbackMaskView;
    MttFeedsVideoFeedbackView *_feedbackView;
    MttFeedsVideoRecord *_shareRecord;
    MttFeedsVideoRecord *_shareADRecord;
    NSIndexPath *_clickedIndexPath;
    NSIndexPath *_lastSelectedIndexPath;
    NSIndexPath *_playingIndexPath;
    NSIndexPath *_lastIndexPath;
    NSIndexPath *_playIndexPathAtScrollBegin;
    NSIndexPath *_targetIndexPath;
    double _lastContentOffset;
    UIPanGestureRecognizer *_panGestureRecognizer;
    MttVideoSnifferQueue *_snifferQueue;
    long long _fromTabId;
    MttFeedsFloatVideoUnit *_unit;
    MttFeedsVideoTableView *_tableView;
    UIView *_headerMask;
    UIButton *_nextVideoButton;
    NSString *_qbAddress;
    MttFeedsVideoProfile *_profile;
    NSString *_tagId;
    MttFeedsVideoTabList *_tabList;
    MttFeedsVideoTagHeader *_tagHeader;
    NSMutableDictionary *_currentTabCountDic;
    NSString *_circleUrl;
    NSString *_firstImageUrl;
}

+ (id)navigationControllerForQBAddress:(id)arg1;
@property(nonatomic) _Bool firstItemWasReported; // @synthesize firstItemWasReported=_firstItemWasReported;
@property(retain, nonatomic) NSString *firstImageUrl; // @synthesize firstImageUrl=_firstImageUrl;
@property(nonatomic) _Bool isBackFromComment; // @synthesize isBackFromComment=_isBackFromComment;
@property(retain, nonatomic) NSString *circleUrl; // @synthesize circleUrl=_circleUrl;
@property(retain, nonatomic) NSMutableDictionary *currentTabCountDic; // @synthesize currentTabCountDic=_currentTabCountDic;
@property(retain, nonatomic) MttFeedsVideoTagHeader *tagHeader; // @synthesize tagHeader=_tagHeader;
@property(retain, nonatomic) MttFeedsVideoTabList *tabList; // @synthesize tabList=_tabList;
@property(retain, nonatomic) NSString *tagId; // @synthesize tagId=_tagId;
@property(retain, nonatomic) MttFeedsVideoProfile *profile; // @synthesize profile=_profile;
@property(retain, nonatomic) NSString *qbAddress; // @synthesize qbAddress=_qbAddress;
@property(retain, nonatomic) UIButton *nextVideoButton; // @synthesize nextVideoButton=_nextVideoButton;
@property(retain, nonatomic) UIView *headerMask; // @synthesize headerMask=_headerMask;
@property(retain, nonatomic) MttFeedsVideoTableView *tableView; // @synthesize tableView=_tableView;
@property(nonatomic) __weak MttFeedsFloatVideoUnit *unit; // @synthesize unit=_unit;
@property(nonatomic) long long fromTabId; // @synthesize fromTabId=_fromTabId;
@property(nonatomic) _Bool isAutoPlayNext; // @synthesize isAutoPlayNext=_isAutoPlayNext;
@property(retain, nonatomic) MttVideoSnifferQueue *snifferQueue; // @synthesize snifferQueue=_snifferQueue;
@property(nonatomic) _Bool startPlayVideo; // @synthesize startPlayVideo=_startPlayVideo;
@property(retain, nonatomic) UIPanGestureRecognizer *panGestureRecognizer; // @synthesize panGestureRecognizer=_panGestureRecognizer;
@property(nonatomic) double lastContentOffset; // @synthesize lastContentOffset=_lastContentOffset;
@property(retain, nonatomic) NSIndexPath *targetIndexPath; // @synthesize targetIndexPath=_targetIndexPath;
@property(retain, nonatomic) NSIndexPath *playIndexPathAtScrollBegin; // @synthesize playIndexPathAtScrollBegin=_playIndexPathAtScrollBegin;
@property(retain, nonatomic) NSIndexPath *lastIndexPath; // @synthesize lastIndexPath=_lastIndexPath;
@property(retain, nonatomic) NSIndexPath *playingIndexPath; // @synthesize playingIndexPath=_playingIndexPath;
@property(retain, nonatomic) NSIndexPath *lastSelectedIndexPath; // @synthesize lastSelectedIndexPath=_lastSelectedIndexPath;
@property(retain, nonatomic) NSIndexPath *clickedIndexPath; // @synthesize clickedIndexPath=_clickedIndexPath;
@property(retain, nonatomic) MttFeedsVideoRecord *shareADRecord; // @synthesize shareADRecord=_shareADRecord;
@property(retain, nonatomic) MttFeedsVideoRecord *shareRecord; // @synthesize shareRecord=_shareRecord;
@property(nonatomic) _Bool isFromQB; // @synthesize isFromQB=_isFromQB;
@property(nonatomic) _Bool firstReport; // @synthesize firstReport=_firstReport;
@property(nonatomic) _Bool firstDisplay; // @synthesize firstDisplay=_firstDisplay;
@property(retain, nonatomic) MttFeedsVideoFeedbackView *feedbackView; // @synthesize feedbackView=_feedbackView;
@property(retain, nonatomic) UIView *feedbackMaskView; // @synthesize feedbackMaskView=_feedbackMaskView;
@property(retain, nonatomic) MttBusinessSceneMenuView *popMenuView; // @synthesize popMenuView=_popMenuView;
@property(retain, nonatomic) UIView *popMaskView; // @synthesize popMaskView=_popMaskView;
@property(retain, nonatomic) MttFeedsVideoReportQueue *reportQueue; // @synthesize reportQueue=_reportQueue;
@property(retain, nonatomic) MttFeedsVideoRecord *firstVideoRecord; // @synthesize firstVideoRecord=_firstVideoRecord;
@property(retain, nonatomic) MttFeedsVideoPlayItem *playItem; // @synthesize playItem=_playItem;
@property(retain, nonatomic) MttVideoPlayerAnimatedTransitioning *transitionning; // @synthesize transitionning=_transitionning;
@property(retain, nonatomic) MttFeedsVideoBrowserDataSource *dataSource; // @synthesize dataSource=_dataSource;
@property(retain, nonatomic) MttFeedsVideoCommentPanel *commentPanel; // @synthesize commentPanel=_commentPanel;
@property(nonatomic) __weak id <MttFeedsVideoBrowserControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) MttFeedsFloatVideoUnitToolBar *toolBar; // @synthesize toolBar=_toolBar;
- (void).cxx_destruct;
- (void)videoPlayerProgressEndDrag;
- (void)videoPlayerProgressBeginDrag;
- (void)onBackButtonClick;
- (void)hideControlBarNotification;
- (void)showControlBarNotification;
- (void)showErrorNotification;
- (void)videoPlayerDidStartPlayNotification;
- (void)loadMoreData;
- (void)mttAlertView:(id)arg1 clickedButtonAtIndex:(long long)arg2;
- (void)tryReportPraiseInfo:(id)arg1;
- (id)animationControllerForPresentedController:(id)arg1 presentingController:(id)arg2 sourceController:(id)arg3;
- (void)didShareToChannel:(int)arg1 withResult:(int)arg2;
- (void)shareBusinessCenterPanelDidDismiss;
- (CDUnknownBlockType)createPackBlock;
- (void)willShareToChannel:(int)arg1;
- (id)controllerShareViewWillBePresented;
- (id)shareInfoPack;
- (id)shareText;
- (id)shareURL;
- (void)share;
- (_Bool)shouldAutorotate;
- (unsigned long long)supportedInterfaceOrientations;
- (long long)preferredInterfaceOrientationForPresentation;
- (void)cellTitle:(id)arg1 onClickButton:(id)arg2 withObject:(id)arg3;
- (void)debugButtonOnClick:(id)arg1;
- (void)tapFeedbackMask:(id)arg1;
- (void)tapMask:(id)arg1;
- (struct CGRect)getFeedbackViewRect:(id)arg1 isinform:(_Bool)arg2;
- (id)sortDic:(id)arg1;
- (void)commitButtonClicked:(id)arg1;
- (void)showPopMenu;
- (void)reportSPAWithRecord:(id)arg1 action:(long long)arg2;
- (void)actionBar:(id)arg1 onClick:(id)arg2 withObject:(id)arg3;
- (void)popCommentPanel:(id)arg1;
- (_Bool)checkCurrentHighlightIndexPath:(id)arg1;
- (void)openURL:(id)arg1 options:(id)arg2 atIndexPath:(id)arg3;
- (void)openURL:(id)arg1 options:(id)arg2;
- (void)pauseCurrentVideo;
- (void)reloadData:(unsigned long long)arg1 errorCode:(long long)arg2;
- (void)circleInfoViewOnClick;
- (void)refreshTabList:(id)arg1;
- (void)refreshCircleInfo:(id)arg1;
- (struct CGPoint)targetPointForTargetFrame:(struct CGRect)arg1;
- (id)indexPathForLastTarget:(id)arg1;
- (id)indexPathForNextTarget:(id)arg1;
- (void)playVideoByUserClick:(_Bool)arg1;
- (void)scrollViewDidEndScrollingAnimation:(id)arg1;
- (void)scrollViewDidScrollToTop:(id)arg1;
- (void)changeTabHeaderAlpha:(double)arg1;
- (void)highLightAllCells:(_Bool)arg1;
- (void)scrollViewDidScroll:(id)arg1;
- (void)setPanGestureEnable;
- (void)playNextVideo;
- (void)makeTableViewActive;
- (void)prepareForNextVideo;
- (void)reportSPATimeWhenVideoEnd;
- (void)hideNextVideoButton;
- (void)nextVideoButtonClicked;
- (void)showNextVideoButton;
- (_Bool)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
- (_Bool)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 willSelectRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 didEndDisplayingCell:(id)arg2 forRowAtIndexPath:(id)arg3;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forRowAtIndexPath:(id)arg3;
- (double)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;
- (void)scrollToOffset:(struct CGPoint)arg1 userClickCell:(_Bool)arg2;
- (void)handelPanGestureRecognizer:(id)arg1;
- (id)currentPlayItem;
- (id)currentRecord;
- (void)dismissOnLeftButtonTap:(id)arg1;
- (void)dismissViewControllerAnimated:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (long long)preferredStatusBarStyle;
- (_Bool)prefersStatusBarHidden;
- (void)viewDidLoad;
- (void)loadView;
- (void)promugatorAdButtonOnClick:(id)arg1 type:(long long)arg2;
- (id)mttbrowserUrl:(id)arg1 WithType:(id)arg2;
- (id)splitReportUrl:(id)arg1 WithType:(id)arg2;
- (void)promugatorTagButtonOnClick:(id)arg1;
- (void)tabButtonOnClick:(id)arg1;
- (void)jumpToHomeFeedsVideo;
- (void)setupNotifications;
- (void)dealloc;
- (id)initWithStyle:(long long)arg1;
- (id)initWithQBAddress:(id)arg1 unit:(id)arg2;
- (id)initWithTagId:(id)arg1 unit:(id)arg2 fromTabid:(long long)arg3;
- (id)initWithProfile:(id)arg1 unit:(id)arg2 fromTabid:(long long)arg3;
- (id)initWithRecord:(id)arg1 unit:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@property(readonly, nonatomic) _Bool usingQBWebView;

@end

