//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "NSObject-Protocol.h"

@class NSArray, NSData, NSDictionary, NSError, NSMutableArray, NSMutableData, NSMutableDictionary, NSString, NSURL;
@protocol NMHTTPRequestDelegate, NSObject;

@protocol NMHTTPRequest <NSObject>
@property(copy) CDUnknownBlockType bytesSentBlock;
@property _Bool shouldStreamPostDataFromDisk;
@property(retain) NSString *postBodyFilePath;
@property _Bool allowResumeForFileDownloads;
@property(retain) NSString *temporaryFileDownloadPath;
@property(retain) NSString *downloadDestinationPath;
@property _Bool useSessionPersistence;
@property _Bool validatesSecureCertificate;
@property long long queuePriority;
@property int numberOfTimesToRetryOnTimeout;
@property(readonly, getter=isCancelled) _Bool cancelled;
@property _Bool bNeedRunInMain;
@property(readonly) _Bool complete;
@property(readonly) int responseStatusCode;
@property(readonly, retain) NSArray *responseCookies;
@property long long tag;
@property(retain) NSError *error;
@property(retain) NSDictionary *userInfo;
@property _Bool shouldWaitToInflateCompressedResponses;
@property _Bool shouldCompressRequestBody;
@property _Bool allowCompressedResponse;
@property _Bool haveBuiltRequestHeaders;
@property unsigned long long responseEncoding;
@property(retain) NSDictionary *responseHeaders;
@property(retain) NSMutableDictionary *requestHeaders;
@property _Bool useAllCookiesPersistence;
@property unsigned long long postLength;
@property(retain) NSData *compressedPostBody;
@property(retain) NSMutableData *postBody;
@property _Bool shouldAttemptPersistentConnection;
@property _Bool useCookiePersistence;
@property double timeOutSeconds;
@property(retain, nonatomic) NSString *requestMethod;
@property _Bool shouldContinueWhenAppEntersBackground;
@property(retain) NSMutableArray *requestCookies;
@property(retain) NSURL *originalURL;
@property(retain, nonatomic, setter=setURL:) NSURL *url;
@property SEL didReceiveDataSelector;
@property SEL didFailSelector;
@property SEL didFinishSelector;
@property SEL didReceiveResponseHeadersSelector;
@property SEL didStartSelector;
@property(nonatomic) id downloadProgressDelegate;
@property(nonatomic) id uploadProgressDelegate;
@property(nonatomic) id <NMHTTPRequestDelegate> delegate;
- (void)appendPostData:(NSData *)arg1;
- (void)addFile:(NSString *)arg1 forKey:(NSString *)arg2;
- (void)setPostValue:(id <NSObject>)arg1 forKey:(NSString *)arg2;
- (NSData *)responseData;
- (NSString *)responseString;
- (void)cancel;
- (void)clearDelegatesAndCancel;
- (void)startAsynchronous;
- (void)startSynchronousWithLoopSec:(double)arg1;
- (void)startSynchronous;
- (void)rebuildPostBody:(NSData *)arg1;
- (void)buildPostBody;
- (void)addRequestHeader:(NSString *)arg1 value:(NSString *)arg2;
@end

