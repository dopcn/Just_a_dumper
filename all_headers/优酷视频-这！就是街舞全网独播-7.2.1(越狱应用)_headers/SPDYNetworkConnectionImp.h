//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

#import "ConnectionProtocol-Protocol.h"
#import "NSURLConnectionDataDelegate-Protocol.h"

@class NSOperationQueue, NSRecursiveLock, NSRunLoop, NSString, NSThread, NSURLConnection, SPDYNetworkRequestImp, SPDYNetworkResponseImp;
@protocol ConnectionDelegate, RequestAuthChallengeProtocol;

@interface SPDYNetworkConnectionImp : NSObject <NSURLConnectionDataDelegate, ConnectionProtocol>
{
    unsigned long long backgroundTask;
    _Bool _isCancel;
    NSURLConnection *_connection;
    NSThread *_thread;
    SPDYNetworkRequestImp *_originalRequestObj;
    SPDYNetworkRequestImp *_currentRequestObj;
    SPDYNetworkResponseImp *_response;
    id <ConnectionDelegate> _delegate;
    id <RequestAuthChallengeProtocol> _authDelegate;
    NSRunLoop *_scheduleRunLoop;
    NSString *_scheduleRunLoopMode;
    NSOperationQueue *_delegateOperationQueue;
    unsigned long long _contentLength;
    unsigned long long _currentTotalReceivedData;
    unsigned long long _totalBytesSend;
    NSRecursiveLock *_lock;
}

+ (_Bool)canHandleRequest:(id)arg1;
@property _Bool isCancel; // @synthesize isCancel=_isCancel;
@property(retain, nonatomic) NSRecursiveLock *lock; // @synthesize lock=_lock;
@property(nonatomic) unsigned long long totalBytesSend; // @synthesize totalBytesSend=_totalBytesSend;
@property(nonatomic) unsigned long long currentTotalReceivedData; // @synthesize currentTotalReceivedData=_currentTotalReceivedData;
@property(nonatomic) unsigned long long contentLength; // @synthesize contentLength=_contentLength;
@property(retain, nonatomic) NSOperationQueue *delegateOperationQueue; // @synthesize delegateOperationQueue=_delegateOperationQueue;
@property(retain, nonatomic) NSString *scheduleRunLoopMode; // @synthesize scheduleRunLoopMode=_scheduleRunLoopMode;
@property(retain, nonatomic) NSRunLoop *scheduleRunLoop; // @synthesize scheduleRunLoop=_scheduleRunLoop;
@property(nonatomic) __weak id <RequestAuthChallengeProtocol> authDelegate; // @synthesize authDelegate=_authDelegate;
@property(nonatomic) __weak id <ConnectionDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) SPDYNetworkResponseImp *response; // @synthesize response=_response;
@property(retain, nonatomic) SPDYNetworkRequestImp *currentRequestObj; // @synthesize currentRequestObj=_currentRequestObj;
@property(retain, nonatomic) SPDYNetworkRequestImp *originalRequestObj; // @synthesize originalRequestObj=_originalRequestObj;
@property(retain, nonatomic) NSThread *thread; // @synthesize thread=_thread;
@property(retain, nonatomic) NSURLConnection *connection; // @synthesize connection=_connection;
- (void).cxx_destruct;
- (void)dealloc;
- (void)connection:(id)arg1 didFailWithError:(id)arg2;
- (void)connectionDidFinishLoading:(id)arg1;
- (void)connection:(id)arg1 didSendBodyData:(long long)arg2 totalBytesWritten:(long long)arg3 totalBytesExpectedToWrite:(long long)arg4;
- (void)connection:(id)arg1 willSendRequestForAuthenticationChallenge:(id)arg2;
- (_Bool)connectionShouldUseCredentialStorage:(id)arg1;
- (void)connection:(id)arg1 didReceiveData:(id)arg2;
- (void)connection:(id)arg1 didReceiveResponse:(id)arg2;
- (id)errorForHTTPCode:(int)arg1;
- (id)connection:(id)arg1 willSendRequest:(id)arg2 redirectResponse:(id)arg3;
- (void)cancel;
- (void)_cancel:(id)arg1;
- (void)start;
- (void)_finishWithError:(id)arg1;
- (void)_main;
- (id)getCurrentRequest;
- (id)getOriginRequest;
- (void)setDelegateQueue:(id)arg1;
- (id)unscheduleWithThread:(id)arg1 runloop:(id)arg2 forMode:(id)arg3;
- (id)scheduleWithThread:(id)arg1 runloop:(id)arg2 forMode:(id)arg3;
- (id)setRequestAuthDelegate:(id)arg1;
- (id)initWithRequest:(id)arg1 delegate:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

