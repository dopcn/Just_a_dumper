//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

@class FolderInfo, ListBase, NSMutableSet, QMPlayingListItem;

@interface QMPlayingListManager : NSObject
{
    _Bool _bShouldSkip;
    _Bool _bChangedList;
    _Bool _bShouldShowLast;
    ListBase *_playingList;
    ListBase *_lastPlayingList;
    QMPlayingListItem *_playingListItem;
    QMPlayingListItem *_lastPlayingListItem;
    FolderInfo *_playingListFolder;
    FolderInfo *_lastPlayingListFolder;
    ListBase *_playingPriList;
    QMPlayingListItem *_playingListPriItem;
    NSMutableSet *_mulSongsSet;
}

+ (id)shareInstance;
@property(nonatomic) _Bool bShouldShowLast; // @synthesize bShouldShowLast=_bShouldShowLast;
@property(nonatomic) _Bool bChangedList; // @synthesize bChangedList=_bChangedList;
@property(retain, nonatomic) NSMutableSet *mulSongsSet; // @synthesize mulSongsSet=_mulSongsSet;
@property(retain, nonatomic) QMPlayingListItem *playingListPriItem; // @synthesize playingListPriItem=_playingListPriItem;
@property(retain, nonatomic) ListBase *playingPriList; // @synthesize playingPriList=_playingPriList;
@property(retain, nonatomic) FolderInfo *lastPlayingListFolder; // @synthesize lastPlayingListFolder=_lastPlayingListFolder;
@property(retain, nonatomic) FolderInfo *playingListFolder; // @synthesize playingListFolder=_playingListFolder;
@property(nonatomic) _Bool bShouldSkip; // @synthesize bShouldSkip=_bShouldSkip;
@property(retain, nonatomic) QMPlayingListItem *lastPlayingListItem; // @synthesize lastPlayingListItem=_lastPlayingListItem;
@property(retain, nonatomic) QMPlayingListItem *playingListItem; // @synthesize playingListItem=_playingListItem;
@property(retain, nonatomic) ListBase *lastPlayingList; // @synthesize lastPlayingList=_lastPlayingList;
@property(retain, nonatomic) ListBase *playingList; // @synthesize playingList=_playingList;
- (void).cxx_destruct;
- (id)getRadioSongListItemFromCurrentList;
- (id)getRadioPlayingList;
- (void)deleteRadioPlayingList;
- (void)deleteOld61PlayingList;
- (void)saveRadioPlayingList;
- (void)deletePlayingListFile;
- (void)clearPlayingList;
- (void)addSongsToPlayList:(id)arg1 atFront:(_Bool)arg2 allVCType:(id)arg3;
- (void)deleteSongAtIndex:(unsigned long long)arg1;
- (_Bool)isShouldShowLast;
- (void)deletePlayedRadioSongs;
- (_Bool)readPlayingListFromDisk;
- (void)copyPlayingList;
- (void)savePlayingListPlayMode:(int)arg1;
- (void)copyCurrentStateInfoBeforeSave:(id)arg1;
- (void)savePlayingList:(id)arg1;
- (void)savePlaylistToDisk;
- (_Bool)isSameSongInListBase:(id)arg1 with:(id)arg2 compareCount:(unsigned long long)arg3;
- (_Bool)isSameListBase:(id)arg1 with:(id)arg2;
- (void)saveLastPlayingList;
- (id)generateListBaseFrom:(id)arg1 andFolder:(id)arg2;
- (void)recorverListBaseKey:(id)arg1 from:(id)arg2;
- (id)getListItemIdentifier:(id)arg1;
- (id)getSongIdentifier:(id)arg1;
- (void)initLastPlayList;
- (void)initPlayList;
- (void)resetPlaylistStatus;
- (id)old61PlayingListPath;
- (id)oldRadioPlayingListPath;
- (id)playigListPath;
- (id)loadFolderInfo:(unsigned long long)arg1 folderId:(int)arg2 FolderType:(int)arg3 Tid:(long long)arg4;
- (id)init;

@end

