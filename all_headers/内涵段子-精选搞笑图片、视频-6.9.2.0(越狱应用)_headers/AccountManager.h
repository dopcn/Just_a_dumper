//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

#import "UIAlertViewDelegate-Protocol.h"

@class NSArray, NSMutableArray, NSMutableDictionary, NSNumber, NSString, SSMyUserModel;

@interface AccountManager : NSObject <UIAlertViewDelegate>
{
    _Bool _isAdmin;
    NSMutableDictionary *accountDict;
    NSMutableArray *accountArray;
    SSMyUserModel *_myUser;
    NSArray *_medalModels;
    NSArray *_users;
    NSString *_lastExpiredPlatform;
}

+ (void)notifyAccountStateChangedNotificationWithObject:(id)arg1 userInfo:(id)arg2;
+ (id)sharedManager;
@property(copy, nonatomic) NSString *lastExpiredPlatform; // @synthesize lastExpiredPlatform=_lastExpiredPlatform;
@property(retain, nonatomic) NSArray *users; // @synthesize users=_users;
@property(nonatomic) _Bool isAdmin; // @synthesize isAdmin=_isAdmin;
@property(copy, nonatomic) NSArray *medalModels; // @synthesize medalModels=_medalModels;
@property(retain, nonatomic) SSMyUserModel *myUser; // @synthesize myUser=_myUser;
@property(retain, nonatomic) NSMutableArray *accountArray; // @synthesize accountArray;
@property(retain, nonatomic) NSMutableDictionary *accountDict; // @synthesize accountDict;
- (void).cxx_destruct;
@property(copy, nonatomic) NSString *draftMobile;
- (void)alertView:(id)arg1 clickedButtonAtIndex:(long long)arg2;
- (void)showAlertForAccountBoundForbidError:(id)arg1;
- (void)platformExpired:(id)arg1;
- (id)displayNameForKey:(id)arg1;
- (id)accounts;
- (_Bool)isOnlyQQZoneBinded;
- (id)suggestWifiString:(id)arg1;
- (id)utmSource;
- (id)checkedPlatformNames;
- (id)checkedPlatForms;
- (id)checkedPlatforms;
- (id)boundedPlatformNames;
- (id)boundedPlatforms;
- (_Bool)isBoundedPlatformForKey:(id)arg1;
- (id)_platforms;
@property(nonatomic) _Bool identified;
@property(retain, nonatomic) NSString *userGender;
@property(retain, nonatomic) NSString *userDescription;
- (_Bool)userVerified;
- (void)setUserVerified:(_Bool)arg1;
@property(copy, nonatomic) NSString *userHatUrl;
@property(retain, nonatomic) NSString *avatarURLString;
@property(copy, nonatomic) NSString *userHotsoonIdMark;
@property(copy, nonatomic) NSString *userHotsoonId;
@property(copy, nonatomic) NSString *userHotsoonNameMark;
@property(copy, nonatomic) NSString *userHotsoonName;
@property(retain, nonatomic) NSString *userName;
@property(retain, nonatomic) NSNumber *isProUser;
@property(retain, nonatomic) NSString *proUserDesc;
@property(retain, nonatomic) NSString *userID;
@property(retain, nonatomic) NSNumber *isNewUser;
@property(retain, nonatomic) NSNumber *isNewPlatform;
- (void)setIsLogin:(_Bool)arg1 getStates:(_Bool)arg2 displayExpirationError:(_Bool)arg3;
- (void)setIsLogin:(_Bool)arg1 getStates:(_Bool)arg2;
@property(nonatomic) _Bool isLogin;
@property(nonatomic) _Bool enableLive;
- (int)checkAccountCount;
- (void)buildAccounts:(id)arg1;
- (void)cleanAccountsByName:(id)arg1;
- (void)cleanAccounts;
- (void)addAccount:(id)arg1;
- (void)clearAccountTypes;
- (void)setAccountCheckDictionary:(id)arg1;
- (id)accountCheckDictionary;
- (void)setAccount:(id)arg1 checked:(_Bool)arg2;
- (_Bool)needCheckAllAccounts;
- (void)setNeedCheckAllAccounts:(_Bool)arg1;
- (void)sessionExpired:(id)arg1;
- (id)init;
- (void)dealloc;
- (void)logoutFinishedResult:(id)arg1 error:(id)arg2 userInfo:(id)arg3;
- (void)startLogout:(id)arg1;
- (void)clearUserProfile;
- (void)clearUserUpdateModel;
- (void)logoutUserFinishedResult:(id)arg1 error:(id)arg2 userInfo:(id)arg3;
- (void)startLogoutUser;
- (void)shareAppFinishedResult:(id)arg1 error:(id)arg2 context:(id)arg3;
- (void)shareOneLoginView:(id)arg1 gotSNSSDKResult:(id)arg2;
- (void)requestAPILogin:(id)arg1 platform:(id)arg2 controller:(id)arg3;
- (void)didUploadPhoto:(id)arg1 error:(id)arg2 context:(id)arg3;
- (void)startUploadUserPhoto:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)fixTencentQQSSOFailed;
- (void)fixSinaSSOFailed:(id)arg1;
- (void)fixWeixinSSOFailed;
- (void)SSOAPILoginFinishedResult:(id)arg1 error:(id)arg2 context:(id)arg3;
- (void)requestLogin:(id)arg1 inController:(id)arg2 forceUseWebView:(_Bool)arg3;
- (void)requestLogin:(id)arg1 inController:(id)arg2;
- (void)startGetAccountStates:(_Bool)arg1 userInfo:(id)arg2;
- (void)startGetAccountStates:(_Bool)arg1;
- (void)handleUserInfoResult:(id)arg1 error:(id)arg2 context:(id)arg3;
- (void)startUnbindPhoneWithCode:(id)arg1 captcha:(id)arg2 finishBlock:(CDUnknownBlockType)arg3;
- (void)startBindPhoneNumber:(id)arg1 password:(id)arg2 code:(id)arg3 captcha:(id)arg4 finishBlock:(CDUnknownBlockType)arg5;
- (void)startChangePasswordWithPassword:(id)arg1 code:(id)arg2 captcha:(id)arg3 finishBlock:(CDUnknownBlockType)arg4;
- (void)startResetPasswordWithPhoneNumber:(id)arg1 code:(id)arg2 password:(id)arg3 captcha:(id)arg4 FinishBlock:(CDUnknownBlockType)arg5;
- (id)imageFromString:(id)arg1;
- (void)startChangePhoneNumber:(id)arg1 message:(id)arg2 captcha:(id)arg3 finishBlock:(CDUnknownBlockType)arg4;
- (void)startLoginWithPhoneNumber:(id)arg1 message:(id)arg2 captcha:(id)arg3 finishBlock:(CDUnknownBlockType)arg4;
- (void)validateWithPhoneNumber:(id)arg1 message:(id)arg2 type:(long long)arg3 captcha:(id)arg4 finishBlock:(CDUnknownBlockType)arg5;
- (void)startLoginWithPhoneNumber:(id)arg1 password:(id)arg2 captcha:(id)arg3 finishBlock:(CDUnknownBlockType)arg4;
- (void)startRefreshCaptchaWithScenarioType:(long long)arg1 finishBlock:(CDUnknownBlockType)arg2;
- (void)startRegisterWithPhoneNumber:(id)arg1 password:(id)arg2 code:(id)arg3 captcha:(id)arg4 finishBlock:(CDUnknownBlockType)arg5;
- (void)startSendCodeWithPhoneNumber:(id)arg1 captcha:(id)arg2 type:(long long)arg3 finishBlock:(CDUnknownBlockType)arg4;
- (void)startVerifyPhoneNumber:(id)arg1 code:(id)arg2 finishBlock:(CDUnknownBlockType)arg3;
- (void)startSendCodeForVerifyingPhoneNumber:(id)arg1 finishBlock:(CDUnknownBlockType)arg2;
- (void)startUpdateUserHotSoonName:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)updateUserFinishedResult:(id)arg1 error:(id)arg2 context:(id)arg3;
- (void)startUpdateUserInfo:(id)arg1;
- (void)requestNewSessionResult:(id)arg1 error:(id)arg2 context:(id)arg3;
- (void)requestNewSession:(id)arg1;
- (_Bool)tryAssignAccountInfoFromKeychain;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

