//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

@class NSDictionary, NSSet;

@interface NLBeaconProcessManager : NSObject
{
    // Error parsing type: , name: scanningTimer
    // Error parsing type: , name: popupController
    // Error parsing type: , name: addFriendNavCon
    // Error parsing type: , name: navCon.storage
    // Error parsing type: , name: authVC.storage
    // Error parsing type: , name: beaconBlacklist
    // Error parsing type: , name: sendBeaconDetectedBlock
    // Error parsing type: , name: regionMonitor
    // Error parsing type: , name: dataTransferManager
    // Error parsing type: , name: locationManager
    // Error parsing type: , name: centralManager
    // Error parsing type: , name: currentLocationStatus
    // Error parsing type: , name: isRotating
    // Error parsing type: , name: rotationTimer
    // Error parsing type: , name: packetParser
    // Error parsing type: , name: blockLineBeacon
    // Error parsing type: , name: fixContentOffset
    // Error parsing type: , name: lineBeaconUniqueCBUUID
    // Error parsing type: , name: region
    // Error parsing type: , name: shouldShowCustomAlertForLocation
    // Error parsing type: , name: renewShowCustomAlertForLocationFlag
    // Error parsing type: , name: isCheckAuthStopped
    // Error parsing type: , name: formerCompletionBlock
    // Error parsing type: , name: isCustomAlertDisplayed
    // Error parsing type: , name: prevButtonBeaconSet
    // Error parsing type: , name: beaconData
    // Error parsing type: , name: visitMonitor
    // Error parsing type: , name: stayIntervalByRegion
    // Error parsing type: , name: prevBroadcastBeaconDict
    // Error parsing type: , name: touchThresholdDict
    // Error parsing type: , name: rssiRatioDict
    // Error parsing type: , name: signalStrengthDict
    // Error parsing type: , name: hwidByIdentifier
    // Error parsing type: , name: channelWhitelist
    // Error parsing type: , name: cdvCallbackID
    // Error parsing type: , name: touchActionsForBeacon
    // Error parsing type: , name: touchActionsChain
    // Error parsing type: , name: pendingPeripherals
    // Error parsing type: , name: connectedPeripherals
    // Error parsing type: , name: peripheralIdentifierDetected
    // Error parsing type: , name: connectTimerDict
    // Error parsing type: , name: communicateTimerDict
    // Error parsing type: , name: connectionStatus
    // Error parsing type: , name: channelIDCurrentlyConnected
    // Error parsing type: , name: communicateTimerIntervalDict
    // Error parsing type: , name: numNotifyCalled
    // Error parsing type: , name: serviceUUIDsForNotifyCheck
    // Error parsing type: , name: commonBeaconOnly
    // Error parsing type: , name: scanningUUIDs
    // Error parsing type: , name: commonBeaconDataDetected
    // Error parsing type: , name: channelIDforScanUUID
    // Error parsing type: , name: channelIDsAllowedToUseBLE
    // Error parsing type: , name: trackingData
}

+ (void)setDismissedLayerActions:(id)arg1;
+ (id)dismissedLayerActions;
+ (void)setLayerAction:(id)arg1;
+ (id)layerAction;
+ (id)lineBeaconErrorDomain;
+ (id)sharedInstance;
+ (void)storeDismissedBeaconBannerData;
- (CDUnknownBlockType).cxx_destruct;
- (long long)bluetoothStatus;
- (_Bool)isThisDeviceUnsupportedBLE;
- (void)setupBeaconProcessManager;
- (void)setupCommonBeaconProcessManager;
- (void)stopAllBeaconProcess;
- (void)dealloc;
- (id)init;
@property(nonatomic, copy) NSDictionary *communicateTimerIntervalDict; // @synthesize communicateTimerIntervalDict;
@property(nonatomic) long long connectionStatus; // @synthesize connectionStatus;
@property(nonatomic, copy) NSDictionary *communicateTimerDict; // @synthesize communicateTimerDict;
@property(nonatomic, copy) NSDictionary *connectTimerDict; // @synthesize connectTimerDict;
@property(nonatomic, copy) NSSet *connectedPeripherals; // @synthesize connectedPeripherals;
@property(nonatomic, copy) NSDictionary *hwidByIdentifier; // @synthesize hwidByIdentifier;
@property(nonatomic) _Bool fixContentOffset; // @synthesize fixContentOffset;
@property(nonatomic) _Bool blockLineBeacon; // @synthesize blockLineBeacon;
- (void)requestCLAuthorization;
- (void)showLineBeaconAgreementByPopup:(CDUnknownBlockType)arg1 externalCloseClosure:(CDUnknownBlockType)arg2;
- (void)addCommunicateTimerInterval:(long long)arg1 forChannel:(id)arg2;
- (void)clearStrengthDataForChannelID:(id)arg1;
- (void)clearStrengthDataForHwid:(id)arg1;
- (_Bool)closeConnectionByConnectionId:(id)arg1 callbackId:(id)arg2;
- (_Bool)closeConnectionByPeripheralIdentifier:(id)arg1 callbackId:(id)arg2;
- (id)getDevicesIdentifierByChannelID:(id)arg1;
- (_Bool)isThisChannelAvailableToUseCommonBLE:(id)arg1;
- (_Bool)areAdditionalUUIDsAdded;
- (void)resetScanningUUIDsForChannelID:(id)arg1;
- (void)stopScanningUUIDsForChannelID:(id)arg1;
- (void)appendScanningUUIDs:(id)arg1 forChannelID:(id)arg2;
- (_Bool)isChannelFeatureLicensesIncludingBeaconWithChannelID:(id)arg1;
- (void)updateChannelInfoFeatureLicensesWithChannelID:(id)arg1;

@end

