//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

@class AFURLSessionManager, NSMapTable, NSMutableArray, NSMutableDictionary, NSString, NSURLSessionConfiguration;
@protocol OS_dispatch_queue;

@interface YYWebResourceDownloader : NSObject
{
    NSObject<OS_dispatch_queue> *_barrierQueue;
    NSMutableDictionary *_URLCallbacks;
    NSMutableDictionary *_HTTPHeaders;
    NSString *_downloaderName;
    AFURLSessionManager *_sessionManager;
    double _downloadTimeout;
    CDUnknownBlockType _headerFilter;
    NSURLSessionConfiguration *_sessionConfiguration;
    NSMapTable *_downloadingTasks;
    NSMutableArray *_trustHostnames;
}

+ (id)sharedDownloader;
@property(retain, nonatomic) NSMutableArray *trustHostnames; // @synthesize trustHostnames=_trustHostnames;
@property(readonly, nonatomic) NSMapTable *downloadingTasks; // @synthesize downloadingTasks=_downloadingTasks;
@property(retain, nonatomic) NSURLSessionConfiguration *sessionConfiguration; // @synthesize sessionConfiguration=_sessionConfiguration;
@property(copy, nonatomic) CDUnknownBlockType headerFilter; // @synthesize headerFilter=_headerFilter;
@property(nonatomic) double downloadTimeout; // @synthesize downloadTimeout=_downloadTimeout;
@property(readonly, nonatomic) AFURLSessionManager *sessionManager; // @synthesize sessionManager=_sessionManager;
@property(readonly, nonatomic) NSString *downloaderName; // @synthesize downloaderName=_downloaderName;
@property(readonly, nonatomic) NSMutableDictionary *HTTPHeaders; // @synthesize HTTPHeaders=_HTTPHeaders;
@property(readonly, nonatomic) NSMutableDictionary *URLCallbacks; // @synthesize URLCallbacks=_URLCallbacks;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *barrierQueue; // @synthesize barrierQueue=_barrierQueue;
- (void).cxx_destruct;
- (id)_callbacksKeyWithURL:(id)arg1 context:(unsigned long long)arg2;
- (void)_removeCallbacksForURL:(id)arg1 context:(unsigned long long)arg2;
- (id)_callbacksForURL:(id)arg1 context:(unsigned long long)arg2;
- (void)_addProgressCallback:(CDUnknownBlockType)arg1 andCompletionBlock:(CDUnknownBlockType)arg2 forURL:(id)arg3 createCallback:(CDUnknownBlockType)arg4 context:(unsigned long long)arg5 userInfo:(id)arg6;
- (id)downloadWithURL:(id)arg1 options:(unsigned long long)arg2 progress:(CDUnknownBlockType)arg3 completion:(CDUnknownBlockType)arg4;
- (void)cancelAllDownloads;
- (id)valueForHTTPHeaderField:(id)arg1;
- (void)setValue:(id)arg1 forHTTPHeaderField:(id)arg2;
- (void)dealloc;
- (id)init;
- (id)initWithName:(id)arg1;

@end

