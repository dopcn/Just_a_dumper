//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "SSViewBase.h"

#import "ExploreMovieManagerDelegate-Protocol.h"
#import "ExploreMoviePlayerControllerDelegate-Protocol.h"
#import "SSMoviePlayerControllerDelegate-Protocol.h"
#import "SSMoviePlayerTrackManagerDelegate-Protocol.h"
#import "TTMovieFullscreenProtocol-Protocol.h"
#import "TTMovieFullscreenViewControllerDelegate-Protocol.h"
#import "TTMovieStoreAction-Protocol.h"
#import "TTVideoPasterADDelegate-Protocol.h"
#import "TTVideoRotateViewProtocol-Protocol.h"
#import "UIViewControllerTransitioningDelegate-Protocol.h"

@class ExploreMovieManager, ExploreMoviePlayerController, ExploreMovieViewModel, ExploreMovieViewTracker, ExploreOrderedData, ExploreVideoModel, NSDictionary, NSIndexPath, NSNumber, NSString, TTAudioWaveView, TTGroupModel, TTMovieFullscreenViewController, TTMovieNetTrafficView, TTVNetTrafficFreeFlowTipView, TTVideoPasterADViewController, TTVideoRotateScreenController, TTVideoURLRequestInfo, UITableView, UIView;
@protocol ExploreMovieViewDelegate, ExploreMovieViewPasterADDelegate;

@interface ExploreMovieView : SSViewBase <SSMoviePlayerControllerDelegate, ExploreMoviePlayerControllerDelegate, ExploreMovieManagerDelegate, SSMoviePlayerTrackManagerDelegate, TTVideoPasterADDelegate, UIViewControllerTransitioningDelegate, TTMovieFullscreenViewControllerDelegate, TTVideoRotateViewProtocol, TTMovieFullscreenProtocol, TTMovieStoreAction>
{
    _Bool _enableRotate;
    _Bool _noNetWorkIndicator;
    _Bool _isPlaybackEnded;
    _Bool _hasSendTrackLog;
    int _playURLIndex;
    _Bool _isRotateAnimating;
    _Bool _resignActive;
    _Bool _isPlayingBeforeResignActive;
    _Bool _isPrepared;
    _Bool _isPauseOnNetworkChanged;
    _Bool _hasPlayLocalFailed;
    _Bool _isShowingConnectAlert;
    _Bool _isNormalDetailMovieView;
    double _playRequestTimestamp;
    _Bool _shouldExitFullScreenLater;
    _Bool _autoPause;
    _Bool _userPause;
    _Bool _viewIsAppear;
    _Bool _hasError;
    double _preResolutionWatchingDuration;
    _Bool _isNewRotate;
    _Bool _isFullScreenButtonAction;
    _Bool _hasMovieFatherCell;
    _Bool _isPlayingWhenBackToFloat;
    _Bool _showDetailButtonWhenFinished;
    _Bool _stopMovieWhenFinished;
    _Bool _pauseMovieWhenEnterForground;
    _Bool _videoDidPlayable;
    _Bool _alwaysHideTitleBarView;
    _Bool _alwaysTouchScreenToExit;
    _Bool _stayFullScreenWhenFinished;
    _Bool _needsSeekToTimeWhenStart;
    _Bool _shouldShowNewFinishUI;
    _Bool _enableMultiResolution;
    _Bool _forbidFullScreenWhenPresentAd;
    _Bool _disableNetworkAlert;
    _Bool _forbidLayout;
    _Bool _isChangingMovieSize;
    _Bool _isPasterADSource;
    _Bool _showedOneFrame;
    _Bool _isStoppedAfterDelay;
    _Bool _isStoped;
    _Bool _isSwitchMultiResolution;
    _Bool _hasAlreadyStopped;
    _Bool _isPlaying;
    _Bool _alwaysShowDetailButton;
    _Bool _liveVideoRestartOnce;
    _Bool _hasShowTrafficToast;
    _Bool _notShowTraffic;
    _Bool _playPasterADSuccess;
    _Bool _disablePlayPasterAD;
    UITableView *_baseTableView;
    NSIndexPath *_indexPath;
    UIView *_rotateSuperView;
    UITableView *_movieFatherCellTableView;
    NSIndexPath *_movieFatherCellIndexPath;
    UIView *_movieFatherView;
    id <ExploreMovieViewDelegate> _movieViewDelegate;
    id <ExploreMovieViewPasterADDelegate> _pasterADDelegate;
    ExploreMovieViewTracker *_tracker;
    ExploreMoviePlayerController *_moviePlayerController;
    ExploreOrderedData *_movieDelegateData;
    ExploreMovieViewModel *_videoModel;
    unsigned long long _pasterADEnableOptions;
    double _fetchURLTime;
    CDUnknownBlockType _didExitFullScreenHandler;
    CDUnknownBlockType _clickPlayButtonToPlayBlock;
    CDUnknownBlockType _playStartBlock;
    CDUnknownBlockType _playStartShowCacheLabelBlock;
    CDUnknownBlockType _willPlayableBlock;
    CDUnknownBlockType _willFinishBlock;
    CDUnknownBlockType _videoFinishBlock;
    NSNumber *_liveStatus;
    TTVideoURLRequestInfo *_urlRequestInfo;
    ExploreMovieManager *_movieManager;
    ExploreVideoModel *_letvVideoModel;
    NSString *_hostName;
    TTGroupModel *_gModel;
    NSString *_aID;
    NSString *_cID;
    NSDictionary *_logoImageDict;
    TTAudioWaveView *_audioWave;
    TTVideoPasterADViewController *_pasterADController;
    TTMovieFullscreenViewController *_fullscreenViewController;
    TTVideoRotateScreenController *_rotateController;
    TTMovieNetTrafficView *_trafficView;
    TTVNetTrafficFreeFlowTipView *_freeFlowTipView;
    struct CGRect _rotateViewRect;
    struct CGRect _movieInFatherViewFrame;
}

+ (id)tipStringWithURLStatus:(id)arg1;
+ (void)setCurrentVideoPlaying:(_Bool)arg1;
+ (_Bool)currentVideoPlaying;
+ (id)currentFullScreenMovieView;
+ (void)removeCurrentFullScreenMovieView:(id)arg1;
+ (void)setCurrentFullScreenMovieView:(id)arg1;
+ (void)setFullScreen:(_Bool)arg1;
+ (_Bool)isFullScreen;
+ (_Bool)hasShownTrafficView;
+ (void)stopAllExploreMovieView;
+ (void)removeAllExploreMovieView;
+ (void)changeAlwaysCloseAlert;
+ (void)setSelectedDefinitionType:(unsigned long long)arg1;
+ (unsigned long long)selectedDefinitionType;
+ (void)load;
@property(nonatomic) _Bool disablePlayPasterAD; // @synthesize disablePlayPasterAD=_disablePlayPasterAD;
@property(nonatomic) _Bool playPasterADSuccess; // @synthesize playPasterADSuccess=_playPasterADSuccess;
@property(nonatomic) _Bool notShowTraffic; // @synthesize notShowTraffic=_notShowTraffic;
@property(nonatomic) _Bool hasShowTrafficToast; // @synthesize hasShowTrafficToast=_hasShowTrafficToast;
@property(retain, nonatomic) TTVNetTrafficFreeFlowTipView *freeFlowTipView; // @synthesize freeFlowTipView=_freeFlowTipView;
@property(retain, nonatomic) TTMovieNetTrafficView *trafficView; // @synthesize trafficView=_trafficView;
@property(retain, nonatomic) TTVideoRotateScreenController *rotateController; // @synthesize rotateController=_rotateController;
@property(nonatomic) __weak TTMovieFullscreenViewController *fullscreenViewController; // @synthesize fullscreenViewController=_fullscreenViewController;
@property(nonatomic) _Bool liveVideoRestartOnce; // @synthesize liveVideoRestartOnce=_liveVideoRestartOnce;
@property(retain, nonatomic) TTVideoPasterADViewController *pasterADController; // @synthesize pasterADController=_pasterADController;
@property(nonatomic) _Bool alwaysShowDetailButton; // @synthesize alwaysShowDetailButton=_alwaysShowDetailButton;
@property(retain, nonatomic) TTAudioWaveView *audioWave; // @synthesize audioWave=_audioWave;
@property(nonatomic) _Bool isPlaying; // @synthesize isPlaying=_isPlaying;
@property(copy, nonatomic) NSDictionary *logoImageDict; // @synthesize logoImageDict=_logoImageDict;
@property(nonatomic) _Bool hasAlreadyStopped; // @synthesize hasAlreadyStopped=_hasAlreadyStopped;
@property(nonatomic) _Bool isSwitchMultiResolution; // @synthesize isSwitchMultiResolution=_isSwitchMultiResolution;
@property(nonatomic) _Bool isStoped; // @synthesize isStoped=_isStoped;
@property(nonatomic) _Bool isStoppedAfterDelay; // @synthesize isStoppedAfterDelay=_isStoppedAfterDelay;
@property(nonatomic) _Bool showedOneFrame; // @synthesize showedOneFrame=_showedOneFrame;
@property(copy, nonatomic) NSString *cID; // @synthesize cID=_cID;
@property(copy, nonatomic) NSString *aID; // @synthesize aID=_aID;
@property(retain, nonatomic) TTGroupModel *gModel; // @synthesize gModel=_gModel;
@property(copy, nonatomic) NSString *hostName; // @synthesize hostName=_hostName;
@property(retain, nonatomic) ExploreVideoModel *letvVideoModel; // @synthesize letvVideoModel=_letvVideoModel;
@property(retain, nonatomic) ExploreMovieManager *movieManager; // @synthesize movieManager=_movieManager;
@property(retain, nonatomic) TTVideoURLRequestInfo *urlRequestInfo; // @synthesize urlRequestInfo=_urlRequestInfo;
@property(nonatomic) _Bool isPasterADSource; // @synthesize isPasterADSource=_isPasterADSource;
@property(retain, nonatomic) NSNumber *liveStatus; // @synthesize liveStatus=_liveStatus;
@property(nonatomic) _Bool isChangingMovieSize; // @synthesize isChangingMovieSize=_isChangingMovieSize;
@property(nonatomic) _Bool forbidLayout; // @synthesize forbidLayout=_forbidLayout;
@property(nonatomic) _Bool disableNetworkAlert; // @synthesize disableNetworkAlert=_disableNetworkAlert;
@property(copy, nonatomic) CDUnknownBlockType videoFinishBlock; // @synthesize videoFinishBlock=_videoFinishBlock;
@property(copy, nonatomic) CDUnknownBlockType willFinishBlock; // @synthesize willFinishBlock=_willFinishBlock;
@property(copy, nonatomic) CDUnknownBlockType willPlayableBlock; // @synthesize willPlayableBlock=_willPlayableBlock;
@property(copy, nonatomic) CDUnknownBlockType playStartShowCacheLabelBlock; // @synthesize playStartShowCacheLabelBlock=_playStartShowCacheLabelBlock;
@property(copy, nonatomic) CDUnknownBlockType playStartBlock; // @synthesize playStartBlock=_playStartBlock;
@property(copy, nonatomic) CDUnknownBlockType clickPlayButtonToPlayBlock; // @synthesize clickPlayButtonToPlayBlock=_clickPlayButtonToPlayBlock;
@property(copy, nonatomic) CDUnknownBlockType didExitFullScreenHandler; // @synthesize didExitFullScreenHandler=_didExitFullScreenHandler;
@property(nonatomic) _Bool forbidFullScreenWhenPresentAd; // @synthesize forbidFullScreenWhenPresentAd=_forbidFullScreenWhenPresentAd;
@property(nonatomic) _Bool enableMultiResolution; // @synthesize enableMultiResolution=_enableMultiResolution;
@property(nonatomic) _Bool isRotateAnimating; // @synthesize isRotateAnimating=_isRotateAnimating;
@property(readonly, nonatomic) double fetchURLTime; // @synthesize fetchURLTime=_fetchURLTime;
@property(nonatomic) unsigned long long pasterADEnableOptions; // @synthesize pasterADEnableOptions=_pasterADEnableOptions;
@property(nonatomic) _Bool shouldShowNewFinishUI; // @synthesize shouldShowNewFinishUI=_shouldShowNewFinishUI;
@property(nonatomic) _Bool needsSeekToTimeWhenStart; // @synthesize needsSeekToTimeWhenStart=_needsSeekToTimeWhenStart;
@property(nonatomic) _Bool stayFullScreenWhenFinished; // @synthesize stayFullScreenWhenFinished=_stayFullScreenWhenFinished;
@property(nonatomic) _Bool alwaysTouchScreenToExit; // @synthesize alwaysTouchScreenToExit=_alwaysTouchScreenToExit;
@property(nonatomic) _Bool alwaysHideTitleBarView; // @synthesize alwaysHideTitleBarView=_alwaysHideTitleBarView;
@property(nonatomic) _Bool videoDidPlayable; // @synthesize videoDidPlayable=_videoDidPlayable;
@property(nonatomic) _Bool pauseMovieWhenEnterForground; // @synthesize pauseMovieWhenEnterForground=_pauseMovieWhenEnterForground;
@property(nonatomic) _Bool stopMovieWhenFinished; // @synthesize stopMovieWhenFinished=_stopMovieWhenFinished;
@property(nonatomic) _Bool showDetailButtonWhenFinished; // @synthesize showDetailButtonWhenFinished=_showDetailButtonWhenFinished;
@property(readonly, nonatomic) _Bool autoPause; // @synthesize autoPause=_autoPause;
@property(nonatomic) _Bool isPlayingWhenBackToFloat; // @synthesize isPlayingWhenBackToFloat=_isPlayingWhenBackToFloat;
@property(retain, nonatomic) ExploreMovieViewModel *videoModel; // @synthesize videoModel=_videoModel;
@property(retain, nonatomic) ExploreOrderedData *movieDelegateData; // @synthesize movieDelegateData=_movieDelegateData;
@property(retain, nonatomic) ExploreMoviePlayerController *moviePlayerController; // @synthesize moviePlayerController=_moviePlayerController;
@property(retain, nonatomic) ExploreMovieViewTracker *tracker; // @synthesize tracker=_tracker;
@property(nonatomic) __weak id <ExploreMovieViewPasterADDelegate> pasterADDelegate; // @synthesize pasterADDelegate=_pasterADDelegate;
@property(nonatomic) __weak id <ExploreMovieViewDelegate> movieViewDelegate; // @synthesize movieViewDelegate=_movieViewDelegate;
@property(nonatomic) struct CGRect movieInFatherViewFrame; // @synthesize movieInFatherViewFrame=_movieInFatherViewFrame;
@property(nonatomic) __weak UIView *movieFatherView; // @synthesize movieFatherView=_movieFatherView;
@property(copy, nonatomic) NSIndexPath *movieFatherCellIndexPath; // @synthesize movieFatherCellIndexPath=_movieFatherCellIndexPath;
@property(nonatomic) __weak UITableView *movieFatherCellTableView; // @synthesize movieFatherCellTableView=_movieFatherCellTableView;
@property(nonatomic) _Bool hasMovieFatherCell; // @synthesize hasMovieFatherCell=_hasMovieFatherCell;
@property(nonatomic) _Bool isFullScreenButtonAction; // @synthesize isFullScreenButtonAction=_isFullScreenButtonAction;
@property(nonatomic) __weak UIView *rotateSuperView; // @synthesize rotateSuperView=_rotateSuperView;
@property(nonatomic) struct CGRect rotateViewRect; // @synthesize rotateViewRect=_rotateViewRect;
@property(retain, nonatomic) NSIndexPath *indexPath; // @synthesize indexPath=_indexPath;
@property(nonatomic) __weak UITableView *baseTableView; // @synthesize baseTableView=_baseTableView;
- (void).cxx_destruct;
- (void)willMoveToSuperview:(id)arg1;
- (void)forceStoppingMovie;
- (void)stop;
- (void)movieFullscreenVC:(id)arg1 didRotateFromOrientation:(long long)arg2;
- (void)movieFullscreenVC:(id)arg1 willRotateToOrientation:(long long)arg2;
- (void)forceStop;
- (id)animationControllerForDismissedController:(id)arg1;
- (id)animationControllerForPresentedController:(id)arg1 presentingController:(id)arg2 sourceController:(id)arg3;
- (void)replayOriginalVideo;
- (unsigned long long)currentViewType;
- (void)videoPasterADViewControllerToggledToFullScreen:(_Bool)arg1 animationed:(_Bool)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (void)tryLoadNextURL;
- (void)p_tryLoadNextURL;
- (void)p_checkLoadingTimeout;
- (void)checkLoadingTimeout;
- (_Bool)shouldPasterADPause;
- (void)stopMovieAfterDelayNoNotification;
- (void)stopMovieAfterDelayWithNotification:(_Bool)arg1;
- (void)stopMovieAfterDelay;
- (void)_stopMovieIndeed;
- (void)stopMovie;
- (id)getMoviePlayerController;
- (void)resumeMovie;
- (void)playMovie;
- (void)pauseLive;
- (void)pauseMovie;
- (void)userPause;
- (void)userPlay;
- (void)applicationDidBecomeActive:(id)arg1;
- (void)applicationWillResignActive:(id)arg1;
- (void)applicationDidEnterBackground:(id)arg1;
- (void)showNetworkAlertIfNeeded;
- (_Bool)canShowAlert;
- (void)showNetworkTipViewIfNeeded;
- (void)connectionChanged:(id)arg1;
- (void)p_convertVideoToSDAndPlayWithSelectedDefinitionType:(unsigned long long)arg1;
- (void)setTrafficTipViewHidden:(_Bool)arg1;
- (void)p_clearNetTrafficView;
- (void)clearStatus;
- (void)p_resumeToPlay;
- (void)p_changeTrafficTipEndCondition;
- (void)p_changeTrafficTipPreCondition;
- (void)p_showNetTrafficView:(long long)arg1;
- (_Bool)p_isShowingTrafficView;
- (_Bool)p_shouldShowTrafficView:(_Bool)arg1;
- (_Bool)p_shouldUseNewTrafficView;
- (void)removeTheMovieView;
- (void)manager:(id)arg1 errorDict:(id)arg2 videoModel:(id)arg3;
- (void)showDetailButtonClicked;
- (id)carrierMNC;
- (id)connectMethodName;
- (void)afterPlayable;
- (void)movieControllerPlaybackDidFinish:(id)arg1;
- (void)movieControllerMoviePlayable:(id)arg1;
- (void)movieControllerMovieStalled:(id)arg1;
- (void)movieController:(id)arg1 playbackHasError:(id)arg2;
- (void)movieStateChanged:(id)arg1;
- (_Bool)movieHasFirstFrame;
- (void)movieControllerShowedOneFrame:(id)arg1;
- (void)definationNumber;
- (_Bool)isUrlPlayFailed;
- (void)movieControllerLandscapeLeftRightRotate:(id)arg1;
- (id)currentCDNHost;
- (void)removeSnapViewIfNeeded;
- (double)progress;
- (void)playStart;
- (void)movieControllerPlaybackPrepareToPlay:(id)arg1;
- (void)movieController:(id)arg1 ResolutionButtonClickedWithType:(unsigned long long)arg2 typeString:(id)arg3;
- (id)supportedResolutionTypes;
- (_Bool)movieControllerFullScreenButtonClicked:(id)arg1 isFullScreen:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;
- (void)movieControllerShareActionClicked:(id)arg1 withActivityType:(id)arg2;
- (void)movieControllerMoreButtonClicked:(id)arg1;
- (void)movieControllerShareButtonClicked:(id)arg1;
- (void)movieControllerPlayButtonClicked:(id)arg1 replay:(_Bool)arg2;
- (_Bool)movieControllerShouldPauseWhenEnterForeground:(id)arg1;
- (_Bool)movieControllerCanRotate:(id)arg1;
- (void)movieControllerPrePlayButtonClicked:(id)arg1;
- (void)movieControlViewRetryButtonClicked:(id)arg1;
- (void)movieControllerRemainderTime:(double)arg1;
- (void)movieController:(id)arg1 seekToTime:(double)arg2 fromTime:(double)arg3;
- (void)controlView:(id)arg1 willAppear:(_Bool)arg2;
- (void)controlView:(id)arg1 didAppear:(_Bool)arg2;
- (void)controlViewTouched:(id)arg1;
- (_Bool)shouldResumePlayWhenInterruptionEnd;
- (void)p_showTrafficToastIfNeed;
- (void)p_cacheMovieViewProgress;
- (void)removeFromSuperview;
- (_Bool)notNeedCacheBusiness;
- (_Bool)isAdMovie;
- (double)duration;
- (double)currentPlayingTime;
- (id)videoID;
- (_Bool)isPlayingError;
- (_Bool)isPlayingFinished;
- (_Bool)isPaused;
- (void)willReusePlayer;
- (void)didReusePlayer;
- (_Bool)isTopMostView;
- (void)enableNetWorkIndicator:(_Bool)arg1;
- (void)enableRotate:(_Bool)arg1;
- (void)unMarkAsDetail;
- (void)markAsDetail;
- (_Bool)newExitFullScreen:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;
- (_Bool)exitFullScreen:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;
- (_Bool)exitFullScreenIfNeed:(_Bool)arg1;
- (id)ttv_playerUniqueId;
- (_Bool)newEnterFullscreen:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;
- (_Bool)enterFullscreen:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;
- (void)ttv_newRotateTip;
- (id)containerMovieViewCell;
- (id)tableViewWithCell:(id)arg1;
- (long long)fullscreenOrientation;
- (id)mainWindow;
- (void)trackManagerExecuteWithOriginUrl:(id)arg1;
- (void)playUrl:(id)arg1 ipAddress:(id)arg2;
- (void)playUrlWithoutipAddress:(id)arg1;
- (void)_playContent;
- (void)playVideoWithUrl:(id)arg1;
- (id)getPlayURL;
- (_Bool)hasLocalUrl;
- (id)allPlayURLs;
- (void)updateFrame;
- (void)layoutSubviews;
- (void)showRetryTipViewWithTipString:(id)arg1;
- (void)showRetryTipView;
- (void)playPasterADs:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)_fetchVideoURLInfo;
- (void)playVideoFromVideoModel:(id)arg1;
- (void)playVideoFromURL:(id)arg1;
- (void)playVideoForVideoID:(id)arg1 exploreVideoSP:(unsigned long long)arg2 videoPlayType:(unsigned long long)arg3 videoModel:(id)arg4 isFeedUrl:(_Bool)arg5;
- (void)playPasterADForVideoModel:(id)arg1;
- (void)playVideoForVideoURL:(id)arg1;
- (void)playVideoForVideoID:(id)arg1 exploreVideoSP:(unsigned long long)arg2 videoPlayType:(unsigned long long)arg3;
- (void)playVideoForVideoID:(id)arg1 exploreVideoSP:(unsigned long long)arg2;
- (void)playVideoWithVideoInfo:(id)arg1 exploreVideoSP:(unsigned long long)arg2 videoPlayType:(unsigned long long)arg3;
- (void)setLogoImageUrl:(id)arg1;
- (void)setLogoImageModel:(id)arg1;
- (void)addCoverImageView:(id)arg1;
- (id)coverImageViewWithUrl:(id)arg1;
- (id)coverImageViewWithModel:(id)arg1;
- (void)showLogo;
- (void)setVideoDuration:(double)arg1;
- (void)setVideoTitle:(id)arg1 fontSizeStyle:(long long)arg2 showInNonFullscreenMode:(_Bool)arg3;
- (void)updateMovieInFatherViewFrame:(struct CGRect)arg1;
- (_Bool)isMovieFullScreen;
- (id)playMainURL;
- (id)playVID;
- (void)didDisappear;
- (void)willDisappear;
- (void)didAppear;
- (void)willAppear;
- (void)setupAudioSessionIsMuted:(_Bool)arg1;
- (void)stopMovieWhenInBackgroundIfNeeded;
- (void)setAlwaysHideFullscreenStatusBar:(_Bool)arg1;
- (void)pauseMovieAndShowToolbar;
- (void)setToolbarHidden:(_Bool)arg1 autoHide:(_Bool)arg2;
- (void)hiddenLoadingView;
- (void)showLoadingView:(unsigned long long)arg1;
- (void)hiddenMiniSliderView:(_Bool)arg1;
- (void)showDetailButtonIfNeeded;
- (void)checkUserInteraction;
- (_Bool)isPasterADVideo;
- (_Bool)isPlayingPasterADVideo;
- (_Bool)isLiveVideo;
- (_Bool)hasValidAfterParserAD;
- (void)setUserInteractionEnabled:(_Bool)arg1;
- (id)initWithFrame:(struct CGRect)arg1 movieViewModel:(id)arg2;
- (void)updateTrackWithMovieViewModel:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1 type:(unsigned long long)arg2 trackerDic:(id)arg3 movieViewModel:(id)arg4;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

