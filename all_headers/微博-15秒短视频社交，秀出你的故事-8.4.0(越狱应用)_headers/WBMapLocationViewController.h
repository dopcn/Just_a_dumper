//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "WBViewController.h"

#import "MKMapViewDelegate-Protocol.h"

@class MKMapView, NSString, UIButton, UIImage, WBMapLocationAnnotation, WBPageCardViewBase;
@protocol WBMapLocationViewControllerDelegate;

@interface WBMapLocationViewController : WBViewController <MKMapViewDelegate>
{
    id <WBMapLocationViewControllerDelegate> delegate;
    MKMapView *mapView;
    struct CLLocationCoordinate2D userCoordinate;
    WBMapLocationAnnotation *userAnnotation;
    struct CLLocationCoordinate2D currentCoordinate;
    _Bool showingRouteNavigationItem;
    _Bool _shouldLoadPoiCard;
    _Bool _failedToLocateErrorMessageHasAlreadyShowed;
    _Bool _currentCoordinateHasBeenSet;
    NSString *customNaviagtionTitle;
    NSString *_poiID;
    WBMapLocationAnnotation *_currentAnnotation;
    UIImage *_currentAvatarImage;
    NSString *_poiScheme;
    UIButton *_cardButton;
    WBPageCardViewBase *_modelView;
    long long _orientation;
    UIButton *_showMyPositionButton;
}

@property(retain, nonatomic) UIButton *showMyPositionButton; // @synthesize showMyPositionButton=_showMyPositionButton;
@property(nonatomic) long long orientation; // @synthesize orientation=_orientation;
@property(retain, nonatomic) WBPageCardViewBase *modelView; // @synthesize modelView=_modelView;
@property(retain, nonatomic) UIButton *cardButton; // @synthesize cardButton=_cardButton;
@property(retain, nonatomic) NSString *poiScheme; // @synthesize poiScheme=_poiScheme;
@property(retain, nonatomic) UIImage *currentAvatarImage; // @synthesize currentAvatarImage=_currentAvatarImage;
@property(retain, nonatomic) WBMapLocationAnnotation *currentAnnotation; // @synthesize currentAnnotation=_currentAnnotation;
@property(nonatomic) _Bool currentCoordinateHasBeenSet; // @synthesize currentCoordinateHasBeenSet=_currentCoordinateHasBeenSet;
@property(nonatomic) _Bool failedToLocateErrorMessageHasAlreadyShowed; // @synthesize failedToLocateErrorMessageHasAlreadyShowed=_failedToLocateErrorMessageHasAlreadyShowed;
@property(retain, nonatomic) NSString *poiID; // @synthesize poiID=_poiID;
@property(nonatomic) _Bool shouldLoadPoiCard; // @synthesize shouldLoadPoiCard=_shouldLoadPoiCard;
@property(retain, nonatomic) NSString *customNaviagtionTitle; // @synthesize customNaviagtionTitle;
@property(nonatomic) _Bool showingRouteNavigationItem; // @synthesize showingRouteNavigationItem;
@property(nonatomic) struct CLLocationCoordinate2D currentCoordinate; // @synthesize currentCoordinate;
@property(nonatomic) struct CLLocationCoordinate2D userCoordinate; // @synthesize userCoordinate;
@property(nonatomic) __weak id <WBMapLocationViewControllerDelegate> delegate; // @synthesize delegate;
- (void).cxx_destruct;
- (id)createCurrentImageWithAvatarImage:(id)arg1;
- (void)resetMapViewCenterAndZoomLevel;
- (void)mapView:(id)arg1 didUpdateUserLocation:(id)arg2;
- (void)mapView:(id)arg1 didFailToLocateUserWithError:(id)arg2;
- (id)mapView:(id)arg1 viewForAnnotation:(id)arg2;
- (void)poiCardPressed:(id)arg1;
- (id)schemeURLForMapAppDirectionTo:(struct CLLocationCoordinate2D)arg1 currentLocation:(struct CLLocationCoordinate2D)arg2;
- (void)openMapBySystem:(id)arg1;
- (void)openMapByGaoDe:(id)arg1;
- (void)openInMapAppAndRoute:(id)arg1;
- (void)confirmButtonPressed:(id)arg1;
- (void)cancelAction:(id)arg1;
- (void)loadPoiCard;
- (void)configSubviewsFrame;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidUnload;
- (void)showMyPosition:(id)arg1;
- (void)viewDidLoad;
- (void)viewWillLayoutSubviews;
- (void)didReceiveMemoryWarning;
- (void)dealloc;
- (id)generateWithOpenUrlLink:(id)arg1 inAppParas:(struct NSMutableDictionary *)arg2;
- (id)initWithOpenUrlLink:(id)arg1 inAppParas:(struct NSMutableDictionary *)arg2;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

