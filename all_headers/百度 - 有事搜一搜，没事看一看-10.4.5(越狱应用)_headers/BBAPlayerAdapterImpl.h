//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

@interface BBAPlayerAdapterImpl : NSObject
{
}

+ (void)setUserStatisticPlayCount;
+ (id)shouldAutorotate;
+ (id)getCurBrowserWebCore;
+ (id)getBrowserWebScrollView;
+ (void)screenShotVideoWindowWillAppear;
+ (id)getAppNavigationVC;
+ (void)staticUserPlayAction;
+ (id)BBASplashDidHideNSNotificationName;
+ (_Bool)launchSplashShouldDisplay;
+ (void)recordVideoHistory:(id)arg1 withPlayerInfo:(id)arg2 limitCount:(long long)arg3;
+ (_Bool)openAutoPlayPageWithURL:(id)arg1 param:(id)arg2;
+ (_Bool)openAutoPlayNewPageWithURL:(id)arg1 param:(id)arg2;
+ (long long)prefetchMaxCacheTime;
+ (long long)prefetchMaxCacheSize;
+ (long long)prefetchMinDeviceSize;
+ (id)cdnList;
+ (void)reloadVideoLandingPageStatisticInfo:(id)arg1;
+ (id)getGlobalFont;
+ (id)getImageCacheFromFeed:(id)arg1;
+ (id)buildCommonWebCoreWithViewController:(id)arg1;
+ (_Bool)isTrafficBind;
+ (_Bool)isTrafficFree;
+ (unsigned long long)cloudDecodeType;
+ (void)setAutoPlaySwitch:(_Bool)arg1;
+ (_Bool)isAutoPlaySwitchOn;
+ (unsigned long long)cloudMediaPlayerBufferSize;
+ (_Bool)videoChnanleEnablePrefetch;
+ (_Bool)enablePrefetchVivaNotWifi;
+ (_Bool)isAVPlayerUseHttpDNS;
+ (_Bool)useBDCloudMediaPlayer;
+ (_Bool)isMiniPlayerUseBDCloudMediaPlayer;
+ (id)cloudPlayerPublicAccessKey;
+ (void)playerWillPlay;
+ (id)updatedVideoInfo:(id)arg1;
+ (_Bool)event:(id)arg1 object:(id)arg2;
+ (_Bool)forbidLandscapeFeatureEnable;
+ (void)loginWithCompletion:(CDUnknownBlockType)arg1;
+ (_Bool)isLogged;
+ (id)videoUploadServer;
+ (id)currentUserUK;
+ (void)injectSocialShareJS;
+ (id)getShareInfo;
+ (_Bool)webPlayerEnableNAUEFeature;
+ (id)getCurBrowserViewController;
+ (id)currentWebView;
+ (_Bool)isWebCoreExist;
+ (void)playerEvaluateJavaScript:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
+ (double)videoSimpleBrowserNavBottom;
+ (_Bool)cancelDurationLogFlowActionId:(id)arg1;
+ (void)playerEndDurationLogFlowActionId:(id)arg1 withContent:(id)arg2;
+ (void)playerEndDurationLogFlowActionId:(id)arg1;
+ (void)endCategoryByActionID:(id)arg1 key:(id)arg2;
+ (void)startCategoryByActionID:(id)arg1 key:(id)arg2 info:(id)arg3;
+ (void)playerAddEventListDurationLogFlowActionId:(id)arg1 eventId:(id)arg2 value:(id)arg3;
+ (void)playerStartDurationLogFlowActionId:(id)arg1 withContent:(id)arg2;
+ (void)playerStartrDurationLogFlowActionId:(id)arg1;
+ (void)playerActionReportFrame:(long long)arg1 ActionID:(long long)arg2 actionData:(id)arg3;
+ (_Bool)isShouldAutorotateContainer;
+ (_Bool)isInSimpleBrowserMode;
+ (_Bool)isExitPlayerInTopViewController;
+ (_Bool)isInVideoMode;
+ (id)videoDownloadServer;

@end

