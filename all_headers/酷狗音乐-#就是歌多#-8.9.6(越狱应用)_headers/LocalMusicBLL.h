//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class KGFileHolder;

@interface LocalMusicBLL : NSObject
{
    _Bool _hadLocalMusicCountChange;
    KGFileHolder *_holder;
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (id)sharedSingleton;
@property(retain, nonatomic) KGFileHolder *holder; // @synthesize holder=_holder;
@property(nonatomic) _Bool hadLocalMusicCountChange; // @synthesize hadLocalMusicCountChange=_hadLocalMusicCountChange;
- (void).cxx_destruct;
- (id)matchTagInfoOfSongList:(id)arg1;
- (void)generateQualityTagInfoOfSong:(id)arg1;
- (_Bool)updateSongTagMapItemWithSong:(id)arg1 tagInfo:(id)arg2 error:(id *)arg3;
- (id)tagCollectionInfoWithSectionSongArray:(id)arg1 tagParentId:(long long)arg2;
- (id)allTagInfoBySongSortType:(int)arg1 tagParentId:(long long)arg2 needEncryptSongsFilter:(id *)arg3;
- (void)localMusicDidChange:(id)arg1;
- (id)selectLocalRecommendSourceMusicFromDBwithLimit:(int)arg1;
- (id)selectPrivateFMRelatedDetailsFromDBwithLimit:(int)arg1;
- (id)localSongsWithSongInfoArray:(id)arg1;
- (_Bool)updateMVHashAndMVMatchedTimeWithSongInfo:(id)arg1 error:(id *)arg2;
- (id)mvMatchedTimeWithSongInfo:(id)arg1;
- (id)localEncryptSongInfoFilter:(id *)arg1;
- (id)querySectionIpodSongsBySortType:(int)arg1;
- (id)queryIpodSongsGroupBySongName;
- (id)queryHashSongsOrderByType:(int)arg1;
- (id)querySongsOrderByType:(int)arg1 needEncryptSongsFilter:(id *)arg2;
- (id)querySongsOrderByType:(int)arg1 needEncryptSongsFilter:(id *)arg2 fillterNotIpod:(_Bool)arg3 filterNoExistMusic:(_Bool)arg4 encrypt:(_Bool)arg5 filterBlock:(CDUnknownBlockType)arg6;
- (void)filterLocalSongs:(id)arg1 notIpod:(_Bool)arg2 noExistMusic:(_Bool)arg3 encrypt:(_Bool)arg4 filterBlock:(CDUnknownBlockType)arg5;
- (void)showiPodMusicArray:(id)arg1;
- (_Bool)hideLocalMusiciPodMusicInfo:(id)arg1;
- (void)batchLocalFileDeleteProc:(id)arg1;
- (void)batchLocalFileDeleteProcWithLocalMucisArray:(id)arg1;
- (void)deleteLocalMucisArray:(id)arg1;
- (void)deleteLocalMusicSongInfo:(id)arg1;
- (void)deleteLocalSongInfo:(id)arg1 qualityType:(int)arg2 filePathType:(unsigned long long)arg3;
- (void)deleteLocalSongInfo:(id)arg1 qualityType:(int)arg2;
- (void)saveShareSongsRecordToLocalWithMusicInfoArray:(id)arg1;
- (void)deleteNotInIpodMusicWithIpodArray:(id)arg1;
- (void)saveIpodRecordToLocalWithMusicInfoArray:(id)arg1 deleteOld:(_Bool)arg2 isShowNewSongInSingleSong:(_Bool)arg3;
- (void)synchronizeShareSongsToKGFileMgr:(id)arg1;
- (void)synchronizeIpodSongsToKGFileMgr:(id)arg1;
- (long long)totalOfIpodInLocalMusicList;
- (unsigned long long)totalOfLocalSinger;
- (id)localTransferSongInfoBySongId:(unsigned long long)arg1;
- (id)localSongInfoBySongId:(unsigned long long)arg1;
- (id)localSongInfoByHash:(id)arg1;
- (id)singerResInfoWithSingerName:(id)arg1;
- (id)generateSingerListWithSourceSongArray:(id)arg1;
- (id)allLocalSingerListAndSortSongByType:(int)arg1 needEncryptSongsFilter:(id *)arg2;
- (id)allLocalSingerList;
- (id)localSongsWithAlbumInfo:(id)arg1;
- (long long)totalOfLocalAlbum;
- (long long)totalOfDownload;
- (long long)totalOfIpod;
- (long long)totalOfLocal;
- (void)asyncQueryBatchSongInfoByHashOrSongId:(id)arg1 withCompleteBlock:(CDUnknownBlockType)arg2;
- (id)allIpodMusicWithDelete:(_Bool)arg1;
- (id)allIpodMusic;
- (id)allLocalAlbumInfo;
- (id)allLocalSongInfoHaveHash;
- (id)allLocalSongInfo4PC;
- (id)allLocalSongInfoNotKTVAndNotIPod;
- (id)allLocalSongInfoNotKTV;
- (id)allLocalSongInfoBySortType:(int)arg1 needEncryptSongsFilter:(id *)arg2;
- (id)allLocalSongInfo;
- (id)queryAllLocalSongCountInfoOfCollect;
- (_Bool)existSongByPath:(id)arg1;
- (_Bool)existSongBySongHash:(id)arg1 qualityType:(int)arg2;
- (_Bool)isExistLocalMusic:(id)arg1;
- (void)updateSongInfosUserSortByArray:(id)arg1;
- (_Bool)updatesongInfoInfoType:(id)arg1;
- (void)updateSongInfoPlayCount:(id)arg1;
- (void)addSongInfo:(id)arg1 localMusicType:(long long)arg2 qualityType:(int)arg3 addTime:(id)arg4 mvMatchedTime:(id)arg5;
- (void)saveShareSongstoDB:(id)arg1 addTime:(id)arg2;
- (void)saveKGMusictoDB:(id)arg1 addTime:(id)arg2;
- (_Bool)saveShareSongsToLocalDBWithMusicInfoArray:(id)arg1;
- (_Bool)saveIpodMusicInfoArray:(id)arg1 isShowNewSongInSingleSong:(_Bool)arg2;
- (_Bool)saveMusicInfoArray:(id)arg1 musicType:(long long)arg2;
- (id)filterSingerNamesFromMusicName:(id)arg1;
- (void)deleteShareSongsInDB;
- (void)didLogout:(id)arg1;
- (void)didLogin:(id)arg1;
- (void)dealloc;
- (void)configAllData;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)init;

@end

