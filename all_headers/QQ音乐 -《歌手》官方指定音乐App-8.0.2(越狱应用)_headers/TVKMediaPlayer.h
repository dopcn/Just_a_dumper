//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

#import "IRMonitorDelegate-Protocol.h"
#import "KKMediaPlayerControlProtocol-Protocol.h"
#import "KKMediaPlayerEventProtocol-Protocol.h"
#import "KKMediaPlayerPlayerItemExchange-Protocol.h"
#import "KKMediaPlayerUrlExchange-Protocol.h"

@class KKMediaRootViewController, NSArray, NSString, TVKMediaViewController, UIView, UIViewController, mPlayerTracker;
@protocol TVKMediaPlaybackDelegate;

@interface TVKMediaPlayer : NSObject <KKMediaPlayerEventProtocol, KKMediaPlayerUrlExchange, KKMediaPlayerControlProtocol, KKMediaPlayerPlayerItemExchange, IRMonitorDelegate>
{
    _Bool _defaultUI;
    _Bool _isLive;
    _Bool _isBanabaSwitchOn;
    _Bool _enableBackgroundPlay;
    _Bool _isProxyPlay;
    _Bool _isDeInitP2P;
    int _controlModel;
    int _state;
    int _defaultMediaFormat;
    int _serviceType;
    int _currentPlayId;
    int _currentFormat;
    int _currentPlayType;
    id <TVKMediaPlaybackDelegate> _delegate;
    NSString *_singerID;
    NSString *_reportInfoEx;
    double _playerRate;
    KKMediaRootViewController *_mediaRootViewCtrl;
    UIView *_landingView;
    mPlayerTracker *_irMonitor;
    NSString *_setFileID;
    NSString *_currentVideoFileID;
    NSArray *_videoUrls;
    NSArray *_videoDurations;
}

+ (id)sharedInstance;
+ (void)initializeTVKPlayer;
@property(nonatomic) int currentPlayType; // @synthesize currentPlayType=_currentPlayType;
@property(nonatomic) _Bool isDeInitP2P; // @synthesize isDeInitP2P=_isDeInitP2P;
@property(nonatomic) int currentFormat; // @synthesize currentFormat=_currentFormat;
@property(nonatomic) int currentPlayId; // @synthesize currentPlayId=_currentPlayId;
@property(copy, nonatomic) NSArray *videoDurations; // @synthesize videoDurations=_videoDurations;
@property(copy, nonatomic) NSArray *videoUrls; // @synthesize videoUrls=_videoUrls;
@property(copy, nonatomic) NSString *currentVideoFileID; // @synthesize currentVideoFileID=_currentVideoFileID;
@property(copy, nonatomic) NSString *setFileID; // @synthesize setFileID=_setFileID;
@property(nonatomic) _Bool isProxyPlay; // @synthesize isProxyPlay=_isProxyPlay;
@property(retain, nonatomic) mPlayerTracker *irMonitor; // @synthesize irMonitor=_irMonitor;
@property(nonatomic) __weak UIView *landingView; // @synthesize landingView=_landingView;
@property(retain, nonatomic) KKMediaRootViewController *mediaRootViewCtrl; // @synthesize mediaRootViewCtrl=_mediaRootViewCtrl;
@property(nonatomic) int serviceType; // @synthesize serviceType=_serviceType;
@property(nonatomic) double playerRate; // @synthesize playerRate=_playerRate;
@property(nonatomic) _Bool enableBackgroundPlay; // @synthesize enableBackgroundPlay=_enableBackgroundPlay;
@property(nonatomic) _Bool isBanabaSwitchOn; // @synthesize isBanabaSwitchOn=_isBanabaSwitchOn;
@property(retain, nonatomic) NSString *reportInfoEx; // @synthesize reportInfoEx=_reportInfoEx;
@property(retain, nonatomic) NSString *singerID; // @synthesize singerID=_singerID;
@property(readonly, nonatomic) _Bool isLive; // @synthesize isLive=_isLive;
@property(nonatomic) int defaultMediaFormat; // @synthesize defaultMediaFormat=_defaultMediaFormat;
@property(readonly, nonatomic) int state; // @synthesize state=_state;
@property(nonatomic) _Bool defaultUI; // @synthesize defaultUI=_defaultUI;
@property(readonly, nonatomic) int controlModel; // @synthesize controlModel=_controlModel;
@property(nonatomic) __weak id <TVKMediaPlaybackDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)sendFailsHandle:(long long)arg1;
- (void)sendCallback:(_Bool)arg1;
- (void)beginSendDataCallbackWithAppkey:(id)arg1 andUid:(id)arg2;
- (void)showSmallPlayer;
- (id)willUpdatePlayerItem:(id)arg1;
- (id)willSetPlayerUrl:(id)arg1 duration:(double)arg2;
- (id)willPlayUrl:(id)arg1;
- (void)didBanabaModelDidFinishBanabaTargetID:(id)arg1;
- (void)didBanabaFinishPostBanabaWithErrorCode:(int)arg1 Content:(id)arg2;
- (void)didBanabaComes:(id)arg1 ContentKey:(id)arg2 isLive:(_Bool)arg3;
- (void)banabaUnavailable;
- (void)banabaAvailable:(id)arg1;
- (void)hitBanaba;
- (void)didMediaPlayerEventOccur:(int)arg1 userInfo:(id)arg2;
- (void)didMediaPlayerGetNaturalSize:(struct CGSize)arg1;
- (void)didMediaPlayerScreenChanged:(_Bool)arg1;
- (void)didMediaPlayerProgressUpdated:(double)arg1 playableDuration:(double)arg2 duration:(double)arg3;
- (void)didMediaPlayerProgressUpdated:(double)arg1 duration:(double)arg2;
- (void)didMediaPlayerStateChanged:(int)arg1 error:(id)arg2;
- (_Bool)testIfIpv4:(id)arg1;
- (id)updateVideoUrlsForIpv6:(id)arg1;
- (void)setProxyPlayUrlwithVideoUrls:(id)arg1 viedoDurations:(id)arg2;
- (long long)requestMediaTypeWithTVK:(int)arg1;
- (int)mediaPlayerStateFromKK:(int)arg1;
- (void)newQualityReport;
- (void)didAppWillForeground;
- (void)didAppWillPending;
- (int)intServiceType;
- (int)TVHttpProxySetHttpLowSpeedParams:(int)arg1 withMinSpeedFactorBaseBitRate:(int)arg2;
- (int)TVHttpProxyDeleteFileOnDisk:(id)arg1;
- (int)TVHttpProxyDeleteClipFileOnDisk:(id)arg1 withClipNo:(int)arg2;
- (long long)TVHttpProxyGetClipFileSizeOnDisk:(id)arg1 withClipNo:(int)arg2;
- (_Bool)TVHttpProxyIsClipCompleteOnDisk:(id)arg1 withClipNo:(int)arg2;
- (int)TVHttpProxyResumeStorageIO;
- (int)TVHttpProxyPauseStorageIO;
- (int)TVHttpProxyCleanStorage;
- (int)TVHttpProxySetMaxStorageSize:(long long)arg1;
- (int)TVHttpProxyCleanMemory;
- (int)TVHttpProxySetMaxMemorySize:(long long)arg1;
- (void)TVHttpProxyHandlerMemoryWarning;
- (void)TVHttpProxyStopPlay:(int)arg1;
- (void)TVHttpProxySetCookie:(id)arg1;
- (void)TVHttpProxySetPlayerState:(int)arg1 withPlayerState:(int)arg2;
- (void)TVHttpProxySetNetWorkState:(int)arg1;
- (void)TVHttpProxySetRemainTime:(int)arg1 withRemainTime:(int)arg2;
@property(readonly, nonatomic) int currentPlayID;
- (_Bool)isGetUrlsForVid:(id)arg1;
- (int)openTVHttpProxyPlayerWithVideoID:(id)arg1 mediaType:(int)arg2 startPosition:(double)arg3 savedisk:(_Bool)arg4 fileID:(id)arg5;
- (void)cancleDelayTVHttpPlayableJuster;
- (void)delayTVHttpPlayableJuster;
- (id)TVHttpProxyGetVersion;
- (void)deinitTVHttpProxy;
- (int)initModule:(id)arg1 withLogFunc:(CDUnknownFunctionPointerType)arg2 withReportFunc:(CDUnknownFunctionPointerType)arg3 withCallBackFunc:(CDUnknownFunctionPointerType)arg4;
- (_Bool)isPIPSuspended;
- (_Bool)isPIPActive;
- (_Bool)isPIPPossible;
- (_Bool)isPIPSupported;
- (id)getCurrentPIPController;
- (void)stopPIPMode;
- (void)startPIPMode;
@property(readonly, nonatomic) _Bool isShowingRecommendPanel;
- (void)noAnimationChangeScreen:(_Bool)arg1;
- (void)shouldShowRecommendPannel:(_Bool)arg1;
- (void)setPlayerFrame:(struct CGRect)arg1;
- (void)setAdPlayerMuted:(_Bool)arg1;
- (void)setPlayerMuted:(_Bool)arg1;
- (void)disablePlayerFuncOfGestureMode;
- (void)resetPlayerViewInGestureMode;
- (void)setAdMode:(int)arg1;
- (void)setLoadingImage:(id)arg1;
- (void)didDoubleTap:(id)arg1;
- (void)didSingleTap:(id)arg1;
- (void)didPinch:(id)arg1;
- (void)didPan:(id)arg1;
- (void)enablePlayerFuncOfGestureModeWithMinScaleRate:(double)arg1 andMaxScaleRate:(double)arg2;
- (id)getDeviceID;
- (void)enablePlayerFuncOfSkipContinueTryWatchTip:(_Bool)arg1;
- (void)cleanUrlExParams;
- (void)setUrlExParamWithKey:(id)arg1 value:(id)arg2;
- (void)recoverPlayerUI;
- (id)customViewWithLayerID:(int)arg1 smallOrMainPlayer:(_Bool)arg2;
- (void)removeCustomViewWithLayerID:(int)arg1 smallOrMainPlayer:(_Bool)arg2;
- (_Bool)addCustomView:(id)arg1 withLayerID:(int)arg2 smallOrMainPlayer:(_Bool)arg3;
- (void)skipAdertisement;
- (void)disablePlayerFuncWithItem:(int)arg1;
- (void)enablePlayerFuncWithItem:(int)arg1;
- (id)customPlayerUI:(_Bool)arg1;
- (void)removeCustomPlayerUI:(_Bool)arg1;
- (void)addCustomMainPlayerUI:(id)arg1;
- (void)addCustomSmallPlayerUI:(id)arg1;
- (void)seekTo:(double)arg1;
- (void)stop;
- (void)pauseWithAD;
- (void)pauseWithoutRequeseData;
- (void)pause;
- (void)play;
- (unsigned long long)supportedInterfaceOrientations;
- (_Bool)shouldAutorotate;
- (void)playOtherMediaFormat:(int)arg1;
- (void)switchFullScreen:(_Bool)arg1;
- (void)detachMediaPlayer;
- (void)attachMediaPlayerWithViewController:(id)arg1 smallPlayerFrame:(struct CGRect)arg2 landingView:(id)arg3;
- (void)attachMediaPlayerWithViewController:(id)arg1 smallPlayerFrame:(struct CGRect)arg2;
- (void)dismissMediaPlayer;
- (void)presentMediaPlayerWithViewController:(id)arg1;
- (void)resetPlayerResources;
- (void)openMediaPlayerWithUrls:(id)arg1 durations:(id)arg2 live:(_Bool)arg3 videoID:(id)arg4 startPosition:(double)arg5;
- (void)openMediaPlayerWithUrl:(id)arg1 live:(_Bool)arg2 videoID:(id)arg3 startPosition:(double)arg4;
- (void)openMediaPlayerWithChannelID:(id)arg1 andPID:(id)arg2;
- (void)openMediaPlayerWithChannelID:(id)arg1;
- (void)openMediaPlayerWithCoverID:(id)arg1 videoID:(id)arg2 mediaType:(int)arg3 startPosition:(double)arg4;
- (void)openMediaPlayerWithVideoID:(id)arg1 mediaType:(int)arg2 startPosition:(double)arg3;
- (id)getVideoScreenShotAtTime:(CDStruct_1b6d18a9)arg1;
- (id)getCurrentVideoScreenShot;
@property(nonatomic) UIViewController *presentViewController;
@property(nonatomic) _Bool enterMiniView;
- (void)changePlayerVideoGravity:(id)arg1;
- (void)lauchFullScreenManually;
- (void)didEnterOrLeaveFullScreen:(_Bool)arg1;
- (void)willEnterOrLeaveFullScreen:(_Bool)arg1;
@property(readonly, nonatomic) _Bool enterFullScreen;
@property(nonatomic) _Bool selfControlMode;
@property(nonatomic) _Bool weakenAdMode;
@property(nonatomic) _Bool showFreeLiveCutDown;
@property(readonly, nonatomic) _Bool isAirPlayActive;
@property(readonly, nonatomic) _Bool isDLNAActive;
@property(nonatomic) _Bool switchScreenLock;
@property(nonatomic) _Bool fullScreenLock;
@property(nonatomic) _Bool screenLock;
@property(retain, nonatomic) NSString *videoTitleMark;
@property(retain, nonatomic) NSString *videoTitle;
@property(readonly, nonatomic) NSArray *mediaFormatList;
@property(readonly, nonatomic) int currentMediaFormat;
@property(readonly, nonatomic) double currentPlaybackTime;
@property(readonly, nonatomic) double playableDuration;
@property(readonly, nonatomic) double duration;
@property(readonly, nonatomic) _Bool isFullScreen;
@property(readonly, nonatomic) TVKMediaViewController *viewController;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

