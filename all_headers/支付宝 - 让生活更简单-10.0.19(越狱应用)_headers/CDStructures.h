//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

@class MGLivenessDetectionFrame, NSArray, NSAttributedString, NSDictionary, NSString, UIColor, UIFont, UIImage, VZFBlockAction, VZFBlockGesture, VZFNode;

#pragma mark Function Pointers and Blocks

typedef void (*CDUnknownFunctionPointerType)(void); // return type and parameters are unknown

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct AFEEnvStatus_t {
    long long eyeStatus;
    float eyeDistance;
    struct CGRect leftEyeCoordinate;
    struct CGRect rightEyeCoordinate;
    long long lightStatus;
    float brightness;
    _Bool isVertical;
};

struct AKQuad {
    struct CGPoint tl;
    struct CGPoint tr;
    struct CGPoint bl;
    struct CGPoint br;
};

struct APBAttitude_t {
    float pitch;
    float yaw;
    float roll;
};

struct APDAOMethodLookupItem {
    SEL _field1;
    unsigned int _field2;
    id _field3;
    struct APDAOMethodLookupItem *_field4;
};

struct APDAOPackClassInfo {
    Class _field1;
    int _field2;
    struct APDAOPackPropertyInfo *_field3;
    struct APDAOPackClassInfo *_field4;
};

struct APDAOPackPropertyInfo;

struct APDataCrypt {
    _Bool _field1;
    char _field2[32];
    unsigned int _field3;
    CDUnknownFunctionPointerType _field4;
};

struct APMTextureView {
    Class _field1;
};

struct AR3DGamePlayObserver {
    CDUnknownFunctionPointerType *_field1;
    struct duktape_bridge *_field2;
};

struct AR3DViewControlImp {
    CDUnknownFunctionPointerType *_field1;
    id _field2;
};

struct ARI2DViewControlImp {
    CDUnknownFunctionPointerType *_field1;
    id _field2;
};

struct ARJSBridgeSupport {
    CDUnknownFunctionPointerType *_field1;
    id _field2;
};

struct AnimationController;

struct Ant3DAnimListener;

struct Ant3dAction {
    struct list<gameplay::Ant3dActionData *, std::__1::allocator<gameplay::Ant3dActionData *>> _field1;
    struct mutex _field2;
};

struct Ant3dAnimation;

struct Ant3dCamera {
    CDUnknownFunctionPointerType *_field1;
    struct Camera *_field2;
    struct Node *_field3;
    struct Node *_field4;
    float _field5;
    struct Vector3 _field6;
    float _field7;
    float _field8;
    _Bool _field9;
    float _field10;
    struct BoundingBox _field11;
    struct Rectangle _field12;
};

struct Ant3dConfig {
    struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> _resourcePaths;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _scenePath;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _jsPath;
    void *_context;
    CDUnknownFunctionPointerType _onCallBack;
    CDUnknownFunctionPointerType _logFunction;
    struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> _meshNodes;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _animFilePath;
    struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> _particleNodes;
};

struct Ant3dEngine {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    int _field3;
    unsigned int _field4;
    double _field5;
    unsigned int _field6;
    unsigned int _field7;
    unsigned int _field8;
    unsigned int _field9;
    struct Rectangle _field10;
    struct Vector4 _field11;
    float _field12;
    int _field13;
    struct Properties *_field14;
    struct AnimationController *_field15;
    struct priority_queue<gameplay::Game::TimeEvent, std::__1::vector<gameplay::Game::TimeEvent, std::__1::allocator<gameplay::Game::TimeEvent>>, std::__1::less<gameplay::Game::TimeEvent>> *_field16;
    struct ScriptTarget *_field17;
    _Bool _field18;
    double _field19;
    double _field20;
    float _field21;
    struct Node *_field22;
    struct IGameplayCallback *_field23;
    struct Scene *_field24;
    struct Ant3dConfig *_field25;
    struct Ant3dAnimation *_field26;
    struct Ant3DAnimListener *_field27;
    struct Ant3dCamera _field28;
    struct Ant3dAction _field29;
    struct Matrix _field30;
    struct Matrix _field31;
    float _field32;
    float _field33;
    float _field34;
    _Bool _field35;
    int _field36;
    struct Node *_field37;
    struct vector<gameplay::Node *, std::__1::allocator<gameplay::Node *>> _field38;
    struct VideoEngineSupportImpl *_field39;
    _Bool _field40;
};

struct Array {
    int size;
    int mallocsize;
    void ***pIndexData;
    int pIndexNum;
    void **pDataEnd;
    CDUnknownFunctionPointerType Append;
    CDUnknownFunctionPointerType Insert;
    CDUnknownFunctionPointerType Remove;
    CDUnknownFunctionPointerType Reset;
    CDUnknownFunctionPointerType GetValue;
};

struct AspectTransform;

struct AudioBuffer {
    unsigned int mNumberChannels;
    unsigned int mDataByteSize;
    void *mData;
};

struct AudioBufferList {
    unsigned int mNumberBuffers;
    struct AudioBuffer mBuffers[1];
};

struct AudioQueueBuffer {
    unsigned int _field1;
    void *_field2;
    unsigned int _field3;
    void *_field4;
    unsigned int _field5;
    struct AudioStreamPacketDescription *_field6;
    unsigned int _field7;
};

struct AudioQueueLevelMeterState {
    float _field1;
    float _field2;
};

struct AudioStreamBasicDescription {
    double mSampleRate;
    unsigned int mFormatID;
    unsigned int mFormatFlags;
    unsigned int mBytesPerPacket;
    unsigned int mFramesPerPacket;
    unsigned int mBytesPerFrame;
    unsigned int mChannelsPerFrame;
    unsigned int mBitsPerChannel;
    unsigned int mReserved;
};

struct AudioStreamPacketDescription {
    long long _field1;
    unsigned int _field2;
    unsigned int _field3;
};

struct AudioTimeStamp {
    double _field1;
    unsigned long long _field2;
    double _field3;
    unsigned long long _field4;
    struct SMPTETime _field5;
    unsigned int _field6;
    unsigned int _field7;
};

struct BGRA2BGR {
    char *pNormDataGray;
    char *pNormDataColor;
    int nNormWidth;
    int nNormHeight;
    int width_prev;
    int height_prev;
    int rect_x0;
    int rect_y0;
    int rect_w;
    int rect_h;
    float rect_scale;
};

struct B_Field;

struct B_Rect {
    short _field1;
    short _field2;
    short _field3;
    short _field4;
};

struct BoundingBox {
    struct Vector3 _field1;
    struct Vector3 _field2;
};

struct ButtonNodeSpecs {
    double fontSize;
    NSString *fontName;
    unsigned long long fontStyle;
    struct _StatefulValue<NSString *, true> title;
    struct _StatefulValue<UIColor *, true> titleColor;
    struct _StatefulValue<UIImage *, true> backgroundImage;
    struct _StatefulValue<UIImage *, true> image;
    struct _Value<CGSize, &VZ::DefaultButtonAttributesValue::enlargeSize, true> enlargeSize;
    UIFont *_font;
    VZFBlockAction *action;
};

struct CATransform3D {
    double m11;
    double m12;
    double m13;
    double m14;
    double m21;
    double m22;
    double m23;
    double m24;
    double m31;
    double m32;
    double m33;
    double m34;
    double m41;
    double m42;
    double m43;
    double m44;
};

struct CBlinkEvaluator {
    int accumulatorSize;
    float blinkRatioThreshold;
    float blinkAbsolutThreshold;
    float faceQualityThreshold;
    struct list<float, std::__1::allocator<float>> leftEyeArray;
    struct list<float, std::__1::allocator<float>> leftEyeNormalArray;
    struct list<float, std::__1::allocator<float>> leftEyeOriginalArray;
    struct list<float, std::__1::allocator<float>> rightEyeArray;
    struct list<float, std::__1::allocator<float>> rightEyeOriginalArray;
    struct list<float, std::__1::allocator<float>> rightEyeNormalArray;
};

struct CFaceTrackEngine {
    CDUnknownFunctionPointerType *_field1;
};

struct CGAffineTransform {
    double a;
    double b;
    double c;
    double d;
    double tx;
    double ty;
};

struct CGPoint {
    double x;
    double y;
};

struct CGRect {
    struct CGPoint origin;
    struct CGSize size;
};

struct CGSize {
    double width;
    double height;
};

struct CGVector {
    double _field1;
    double _field2;
};

struct CIdCardTextCut;

struct CIdcardCheck {
    struct CIdCardTextCut *_field1;
};

struct CLLocationCoordinate2D {
    double latitude;
    double longitude;
};

struct CRN_LINE_STRUCT {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
    int _field5;
    int _field6;
};

struct Camera;

struct CameraSource;

struct ConfigManager;

struct DNSMsg {
    int _field1;
    void *_field2;
    struct in_addr _field3;
    struct in6_addr _field4;
};

struct Detect {
    struct MyComplex *_field1;
    float *_field2;
    int *_field3;
    short *_field4;
    int _field5;
    int _field6[10];
    int _field7;
    int _field8;
    int _field9;
    int _field10;
    int _field11;
    _Bool _field12;
    int _field13;
};

struct DoubleSize {
    struct CGSize _field1;
    struct CGSize _field2;
};

struct DrivingLicenseEngine {
    char *_field1;
    int _field2;
    int _field3;
    struct B_Rect _field4;
    struct B_Rect _field5;
    struct B_Rect _field6;
    struct ImagePreprocessEngine _field7;
    struct RecBlock _field8;
    _Bool _field9;
    _Bool _field10;
    _Bool _field11;
    _Bool _field12;
};

struct EQueueMsgType {
    int _field1;
    struct DNSMsg _field2;
    struct map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char>>>> _field3;
    struct vector<char, std::__1::allocator<char>> _field4;
    int _field5;
    unsigned int _field6;
    unsigned long long _field7;
    _Bool _field8;
    _Bool _field9;
    _Bool _field10;
    unsigned int _field11;
    void *_field12;
    _Bool _field13;
    unsigned long long _field14;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field15;
    int _field16;
    _Bool _field17;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field18;
    struct vector<char, std::__1::allocator<char>> _field19;
    _Bool _field20;
    _Bool _field21;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field22;
    struct map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char>>>> _field23;
};

struct EliminateNoise {
    struct WIENER *_field1;
    short *_field2;
    short *_field3;
    short *_field4;
    int _field5;
    int _field6;
    int _field7;
    int _field8;
    int _field9;
    int _field10;
    int _field11;
    _Bool _field12;
    _Bool _field13;
    _Bool _field14;
};

struct EmotionParam {
    struct CGSize _field1;
    struct CGSize _field2;
    struct CGSize _field3;
    struct CGSize _field4;
    long long _field5;
    long long _field6;
};

struct FMResultSet {
    Class _field1;
    id _field2;
    id _field3;
    id _field4;
    id _field5;
};

struct FalconRecogEngineBase {
    CDUnknownFunctionPointerType *_field1;
};

struct Falcon_FACE_TRACKING_RESULT {
    int face_id;
    float res_head_pose[6];
    struct YunOS_FACE_KEY_POINT_2D face_output_pt[18];
};

struct FlexNode {
    _Bool _field1;
    _Bool _field2;
    int _field3;
    int _field4;
    int _field5;
    int _field6;
    int _field7;
    CDStruct_1253fce2 _field8;
    float _field9;
    float _field10;
    CDStruct_1253fce2 _field11[2];
    CDStruct_1253fce2 _field12[2];
    CDStruct_1253fce2 _field13[2];
    CDStruct_1253fce2 _field14[6];
    CDStruct_1253fce2 _field15[6];
    CDStruct_1253fce2 _field16[6];
    CDStruct_1253fce2 _field17;
    CDStruct_1253fce2 _field18;
    struct {
        float _field1[2];
        float _field2[2];
        float _field3[4];
        float _field4[4];
    } _field19;
    float _field20;
    float _field21[4];
    float _field22[4];
    float _field23;
    void *_field24;
    void *_field25;
    unsigned long long _field26;
    CDUnknownFunctionPointerType _field27;
    CDUnknownFunctionPointerType _field28;
    CDUnknownFunctionPointerType _field29;
};

struct FluxAction {
    int _field1;
    int _field2;
    id _field3;
    id _field4;
};

struct FrameFaceInfo {
    _Bool isPP;
    int faceid;
    int currentDHN;
};

struct Game;

struct GetStaticImage {
    int still_num;
    int move_num;
    int frame_num;
    int widthPrev;
    int heightPrev;
    int normWidth;
    int normHeight;
    float simThreshold;
    float *normDataPrev;
    float *normDataCurr;
    struct timeval time_prevprocess;
    struct timeval time_startcamera;
    struct timeval time_firststill;
    float minIntervalsecond;
    float delaysecond;
    float stillsecond;
    int minStillNum;
};

struct IAudioMixer;

struct IGameplayCallback;

struct IJSBridgeSupport;

struct INFaceInfo;

struct INSmartSticker {
    struct SrcBaseImg _field1;
    _Bool _field2;
    _Bool _field3;
    _Bool _field4;
    struct INFaceInfo *_field5;
    struct INFaceInfo *_field6;
    struct INFaceInfo *_field7;
    int _field8;
    _Bool _field9[10];
    int _field10[10];
};

struct IOutput;

struct IOutputSession;

struct ITransform;

struct IVideoEngineSupport;

struct IVideoMixer;

struct IdCardEngine {
    int _field1;
    int _field2;
    char *_field3;
    int _field4;
    int _field5;
    int _field6;
    int _field7;
    int _field8;
    int _field9;
    struct _BCR_Engine _field10;
    struct _BCR_Engine *_field11;
    struct B_Field *_field12;
    struct VehicleLicenseEngine _field13;
    struct DrivingLicenseEngine _field14;
    char *_field15;
    char *_field16;
    char *_field17;
    char *_field18;
    char *_field19;
    char *_field20;
    char *_field21;
    char *_field22;
    int _field23;
    int _field24;
    int _field25;
    _Bool _field26;
    struct CRN_LINE_STRUCT _field27[4];
};

struct ImageNodeSpecs {
    UIImage *image;
    NSString *imageUrl;
    UIImage *errorImage;
    long long contentMode;
    VZFBlockAction *completion;
    id context;
};

struct ImagePreprocessEngine {
    int _field1[256];
    int _field2[256];
    int _field3[256];
};

struct IndicatorNodeSpecs {
    UIColor *color;
};

struct JMergePoint {
    int _field1;
    int _field2;
};

struct LWSearchDataAdapter {
    struct Searcher *_field1;
    struct _ini_ctx_t *_field2;
    struct _DArray *_field3;
    struct ThreadMutex *_field4;
    struct ThreadMutex *_field5;
    struct ThreadMutex *_field6;
    _Bool _field7;
    struct _DArray *_field8;
    struct _str_buffer_t *_field9;
};

struct LineNodeSpecs {
    UIColor *color;
    double dashLength;
    double spaceLength;
};

struct MACoordinateBounds {
    struct CLLocationCoordinate2D northEast;
    struct CLLocationCoordinate2D southWest;
};

struct MACoordinateRegion {
    struct CLLocationCoordinate2D center;
    struct MACoordinateSpan span;
};

struct MACoordinateSpan {
    double latitudeDelta;
    double longitudeDelta;
};

struct MAGLESUnityResult {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    int _field4;
    int _field5;
};

struct MAMapPoint {
    double x;
    double y;
};

struct MAMapPointLenWithWin {
    double lenValue;
    double zoomLevel;
    double totalGeoPoint;
};

struct MAMapRect {
    struct MAMapPoint origin;
    struct MAMapSize size;
};

struct MAMapSize {
    double width;
    double height;
};

struct MAPolygonClipper {
    vector_f60ea51c *_field1;
    unsigned long long _field2;
    struct Vector3<float> *_field3;
    struct Vector3<float> _field4[4];
    struct Vector3<float> _field5[4];
    vector_f60ea51c _field6;
    struct vector<MAClipper::IntersectState, std::__1::allocator<MAClipper::IntersectState>> _field7;
    struct vector<short, std::__1::allocator<short>> _field8;
    vector_195fe69b _field9;
    unsigned short _field10;
    unsigned short _field11;
    unsigned short _field12;
    unsigned short _field13;
    _Bool _field14;
    int _field15;
    vector_195fe69b _field16;
};

struct MAPolygonTriangulator {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    int _field3;
    int _field4;
    vector_f60ea51c *_field5;
    unsigned long long _field6;
    vector_195fe69b _field7;
    struct vector<short, std::__1::allocator<short>> _field8;
    vector_195fe69b _field9;
};

struct MATile {
    unsigned int x;
    unsigned int y;
    short zoom;
};

struct MATileOverlayPath {
    long long _field1;
    long long _field2;
    long long _field3;
    double _field4;
};

struct MP4Multiplexer;

struct MQPResult {
    Class _field1;
};

struct MapAnnotationSpecs {
    id _field1;
    double _field2;
    double _field3;
    id _field4;
    id _field5;
    id _field6;
    _Bool _field7;
    _Bool _field8;
};

struct MapOverlaySpecs {
    id _field1;
    struct vector<CLLocationCoordinate2D, std::__1::allocator<CLLocationCoordinate2D>> _field2;
    id _field3;
    double _field4;
};

struct MapViewNodeSpecs {
    unsigned long long mapType;
    _Bool showsUserLocation;
    _Bool followUserLocation;
    _Bool showsAnnotationCallouts;
    struct _Value<bool, &VZ::DefaultControlAttrValue::able, false> zoomEnabled;
    struct _Value<bool, &VZ::DefaultControlAttrValue::able, false> scrollEnabled;
    struct _Value<bool, &VZ::DefaultControlAttrValue::able, false> rotateEnabled;
    struct _Value<bool, &VZ::DefaultControlAttrValue::able, false> pitchEnabled;
    struct _Value<MKCoordinateRegion, &VZ::DefaultAttributesValue::undefinedRegion, true> region;
    struct vector<VZ::MapAnnotationSpecs, std::__1::allocator<VZ::MapAnnotationSpecs>> annotations;
    struct vector<VZ::MapOverlaySpecs, std::__1::allocator<VZ::MapOverlaySpecs>> overlays;
    CDUnknownBlockType onAnnotationPress;
    CDUnknownBlockType onAnnotationFocus;
    CDUnknownBlockType onAnnotationBlur;
    CDUnknownBlockType onAnnotationDragStateChange;
};

struct Matrix {
    float _field1[16];
};

struct MessageQueue {
    struct vector<SchedualTask *, std::__1::allocator<SchedualTask *>> _field1;
    struct SchedualTaskCmp _field2;
};

struct MicSource {
    CDUnknownFunctionPointerType *_field1;
    struct weak_ptr<videocore::iOS::MicSource> _field2;
    id _field3;
    struct OpaqueAudioComponentInstance *_field4;
    struct OpaqueAudioComponent *_field5;
    double _field6;
    int _field7;
    struct weak_ptr<videocore::IOutput> _field8;
    _Bool _field9;
};

struct MountContext {
    id _field1;
    struct CGPoint _field2;
    struct UIEdgeInsets _field3;
};

struct MountResult {
    _Bool _field1;
    struct MountContext _field2;
};

struct MusicProcess {
    struct MyComplex *_field1;
    float *_field2;
    float *_field3;
    float **_field4;
    int _field5;
    int _field6;
    int _field7;
    int _field8;
    int _field9;
    int _field10;
    int _field11;
    int _field12;
    int _field13;
    int _field14;
    int _field15;
    int _field16;
    short _field17;
    short *_field18;
    short *_field19;
    short *_field20;
    short *_field21;
    _Bool _field22;
};

struct MyComplex;

struct NSNumber {
    Class _field1;
};

struct NSObject {
    Class _field1;
};

struct Node;

struct NodeLayout {
    VZFNode *node;
    struct CGSize size;
    struct CGPoint origin;
    struct UIEdgeInsets margin;
    struct shared_ptr<std::__1::vector<VZ::NodeLayout, std::__1::allocator<VZ::NodeLayout>>> children;
};

struct NodeSpecs {
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> identifier;
    long long tag;
    _Bool clip;
    struct _Value<float, &VZ::DefaultAttributesValue::alpha, false> alpha;
    struct _Value<int, &VZ::DefaultAttributesValue::userInteractionEnabled, false> userInteractionEnabled;
    struct _Value<UIColor *, &VZ::DefaultAttributesValue::backgroundColor, false> backgroundColor;
    struct _Value<UIColor *, &VZ::DefaultAttributesValue::highlightBackgroundColor, false> highlightBackgroundColor;
    double cornerRadius;
    struct _Value<double, &VZ::DefaultAttributesValue::cornerRadiusUndefined, false> cornerRadiusTopLeft;
    struct _Value<double, &VZ::DefaultAttributesValue::cornerRadiusUndefined, false> cornerRadiusTopRight;
    struct _Value<double, &VZ::DefaultAttributesValue::cornerRadiusUndefined, false> cornerRadiusBottomLeft;
    struct _Value<double, &VZ::DefaultAttributesValue::cornerRadiusUndefined, false> cornerRadiusBottomRight;
    double borderWidth;
    UIColor *borderColor;
    UIImage *contents;
    CDUnknownBlockType unapplicator;
    CDUnknownBlockType applicator;
    struct _Value<FlexLength, &VZ::DefaultAttributesValue::width, true> width;
    struct _Value<FlexLength, &VZ::DefaultAttributesValue::height, true> height;
    struct _Value<FlexLength, &VZ::DefaultAttributesValue::maxWidth, true> maxWidth;
    struct _Value<FlexLength, &VZ::DefaultAttributesValue::maxHeight, true> maxHeight;
    struct _Value<FlexLength, &VZ::DefaultAttributesValue::minWidth, true> minWidth;
    struct _Value<FlexLength, &VZ::DefaultAttributesValue::minHeight, true> minHeight;
    struct _Value<FlexLength, &VZ::DefaultAttributesValue::marginLeft, true> marginLeft;
    struct _Value<FlexLength, &VZ::DefaultAttributesValue::marginRight, true> marginRight;
    struct _Value<FlexLength, &VZ::DefaultAttributesValue::marginTop, true> marginTop;
    struct _Value<FlexLength, &VZ::DefaultAttributesValue::marginBottom, true> marginBottom;
    struct _Value<FlexLength, &VZ::DefaultAttributesValue::paddingLeft, true> paddingLeft;
    struct _Value<FlexLength, &VZ::DefaultAttributesValue::paddingRight, true> paddingRight;
    struct _Value<FlexLength, &VZ::DefaultAttributesValue::paddingTop, true> paddingTop;
    struct _Value<FlexLength, &VZ::DefaultAttributesValue::paddingBottom, true> paddingBottom;
    struct _Value<FlexLength, &VZ::DefaultAttributesValue::margin, true> margin;
    struct _Value<FlexLength, &VZ::DefaultAttributesValue::padding, true> padding;
    struct _Value<float, &VZ::DefaultAttributesValue::flexGrow, false> flexGrow;
    struct _Value<float, &VZ::DefaultAttributesValue::flexShrink, false> flexShrink;
    struct _Value<FlexLength, &VZ::DefaultAttributesValue::flexBasis, true> flexBasis;
    struct _Value<VZFlexLayoutAlignment, &VZ::DefaultAttributesValue::alignSelf, false> alignSelf;
    struct _Value<bool, &VZ::DefaultAttributesValue::fixed, false> fixed;
    struct _Value<bool, &VZ::DefaultAttributesValue::wrap, false> wrap;
    struct _Value<int, &VZ::DefaultAttributesValue::userInteractionEnabled, false> isAccessibilityElement;
    NSString *accessibilityLabel;
    VZFBlockGesture *gesture;
    VZFBlockAction *display;
    _Bool asyncDisplay;
};

struct OpaqueAudioComponent;

struct OpaqueAudioComponentInstance;

struct PLCrashHostInfoVersion {
    unsigned long long major;
    unsigned long long minor;
    unsigned long long revision;
};

struct PLCrashReporterCallbacks {
    unsigned short _field1;
    void *_field2;
    CDUnknownFunctionPointerType _field3;
};

struct PagingNodeSpecs {
    int direction;
    struct _Value<bool, &VZ::PagingNodeSpecsDefault::scrollEnabled, false> scrollEnabled;
    struct _Value<bool, &VZ::PagingNodeSpecsDefault::scrollEnabled, false> paging;
    float autoScroll;
    _Bool infiniteLoop;
    struct _Value<float, &VZ::PagingNodeSpecsDefault::animationDuration, false> animationDuration;
    _Bool pageControl;
    struct _Value<FlexLength, &VZ::PagingNodeSpecsDefault::margin, true> pageControlMarginLeft;
    struct _Value<FlexLength, &VZ::PagingNodeSpecsDefault::margin, true> pageControlMarginRight;
    struct _Value<FlexLength, &VZ::PagingNodeSpecsDefault::margin, true> pageControlMarginTop;
    struct _Value<FlexLength, &VZ::PagingNodeSpecsDefault::margin, true> pageControlMarginBottom;
    struct _Value<float, &VZ::PagingNodeSpecsDefault::pageControlScale, false> pageControlScale;
    UIColor *pageControlColor;
    UIColor *pageControlSelectedColor;
    VZFBlockAction *switched;
};

struct PickerNodeSpecs {
    NSArray *items;
    struct _Value<long, &VZ::DefaultAttributesValue::selectedIndex, false> selectedIndex;
    CDUnknownBlockType onChange;
};

struct PictureOption {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
    int _field5;
    int _field6;
    int _field7;
    int _field8;
    int _field9;
    int _field10;
    int _field11;
    int _field12;
    int _field13;
    int _field14;
    int _field15;
    int _field16;
    int _field17;
    int _field18;
    int _field19;
    int _field20;
    char *_field21;
    char *_field22;
    int _field23;
    int _field24;
};

struct PixelBufferOutput;

struct PixelBufferSource;

struct Platform {
    struct Game *_field1;
};

struct PositionTransform;

struct Properties;

struct RecBlock {
    struct vector<RectDetectInfo, std::__1::allocator<RectDetectInfo>> _field1;
};

struct Rect {
    short top;
    short left;
    short bottom;
    short right;
};

struct RectDetectInfo;

struct RectRet {
    char *_field1;
    int _field2;
    int _field3;
    int _field4;
    _Bool _field5;
};

struct Rectangle {
    float _field1;
    float _field2;
    float _field3;
    float _field4;
};

struct RecursiveMutex {
    struct _opaque_pthread_mutex_t _m;
};

struct SMPTETime {
    short _field1;
    short _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
    short _field6;
    short _field7;
    short _field8;
    short _field9;
};

struct SRDelegateAvailableMethods {
    unsigned int didReceiveMessage:1;
    unsigned int didReceiveMessageWithString:1;
    unsigned int didReceiveMessageWithData:1;
    unsigned int didOpen:1;
    unsigned int didFailWithError:1;
    unsigned int didCloseWithCode:1;
    unsigned int didReceivePing:1;
    unsigned int didReceivePong:1;
    unsigned int shouldConvertTextFrameToString:1;
};

struct Scene {
    CDUnknownFunctionPointerType *_field1;
    unsigned int _field2;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field3;
    struct Camera *_field4;
    struct Node *_field5;
    struct Node *_field6;
    unsigned int _field7;
    struct Vector3 _field8;
    _Bool _field9;
    struct Node *_field10;
    _Bool _field11;
    _Bool _field12;
    struct Vector3 _field13;
    _Bool _field14;
    float _field15;
    float _field16;
    long long _field17;
    struct BoundingBox _field18;
    _Bool _field19;
};

struct SchedualTask;

struct SchedualTaskCmp;

struct ScriptTarget;

struct ScrollNodeSpecs {
    struct _Value<VZ::ScrollDirection, &VZ::DefaultFlexAttributesValue::scrollDirection, false> scrollDirection;
    struct _Value<bool, &VZ::DefaultFlexAttributesValue::scrollEnabled, false> scrollEnabled;
    _Bool paging;
};

struct SearchData;

struct SearchFlag {
    unsigned int searchState:2;
    struct CGRect originSearchBarFrame;
    struct CGRect searchBarFrame;
};

struct SearchPos;

struct SearchSort {
    struct SearchData *_field1;
    _Bool _field2;
    _Bool _field3;
    int _field4;
    int _field5;
    unsigned short *_field6;
};

struct SearchTree {
    struct Array SearchDataArray;
    struct Array iCachedHits[38];
    struct SearchData *iCurSeachData;
    struct Array iMatchTrace;
    struct Array SearchPosArray;
    int searchPosMallocSize;
    struct SearchPos *searchPosMalloc;
    int searchPosPtrMallocSize;
    struct SearchPos **searchPosPtrArray;
    unsigned short *iMatchFunc;
};

struct Searcher {
    struct ConfigManager *_field1;
    struct ThreadMutex *_field2;
    struct TokenParser *_field3;
};

struct SegmentedControlNodeSpecs {
    NSArray *items;
    CDUnknownBlockType onChange;
    struct _Value<long, &VZ::DefaultAttributesValue::noSegment, false> selectedSegmentedIndex;
    struct _Value<bool, &VZ::DefaultControlAttrValue::able, false> enabled;
};

struct SigAlgoResult {
    int _field1;
    int _field2;
};

struct SigPoint {
    int _field1;
    int _field2;
    int _field3;
};

struct SpinLock {
    int _l;
};

struct Split;

struct SrcBaseImg {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
    char *_field5;
};

struct StackNodeSpecs {
    struct _Value<VZFlexLayoutDirection, &VZ::DefaultStackAttributesValue::direction, false> direction;
    struct _Value<VZFlexLayoutAlignment, &VZ::DefaultStackAttributesValue::justifyContent, false> justifyContent;
    struct _Value<VZFlexLayoutAlignment, &VZ::DefaultStackAttributesValue::alignItems, false> alignItems;
    struct _Value<VZFlexLayoutAlignment, &VZ::DefaultStackAttributesValue::alignContent, false> alignContent;
    struct _Value<FlexLength, &VZ::DefaultStackAttributesValue::spacing, true> spacing;
    struct _Value<FlexLength, &VZ::DefaultStackAttributesValue::lineSpacing, true> lineSpacing;
};

struct StickPasteInfo {
    float _field1;
    float _field2;
    float _field3;
    float _field4;
    int _field5;
};

struct StreamSession {
    CDUnknownFunctionPointerType *_field1;
    void *_field2;
    void *_field3;
    void *_field4;
    void *_field5;
    struct function<void (videocore::IStreamSession &, long, void *)> _field6;
    long long _field7;
    int _field8;
    id _field9;
};

struct SurfFeature {
    int pointNum;
    float **feature;
};

struct SurfaceInterface {
    int outInlinerNum;
    int outMatchNum;
    float outRatio;
    struct SurfFeature feaPattern;
    struct SurfFeature feaCurrFrame;
    struct GetStaticImage staticimg;
    CDStruct_183601bc *surf_extractor;
    int minMatchNum;
    int minInlinerNum;
    int minPointNum;
    int maxPointNum;
    int surfDetectThreshold;
    int width_prev;
    int height_prev;
};

struct SwitchNodeSpecs {
    _Bool on;
    struct _Value<bool, &VZ::DefaultControlAttrValue::able, false> enabled;
    UIColor *onTintColor;
    UIColor *thumbTintColor;
    CDUnknownBlockType onChange;
};

struct TSGAffineTransform {
    float _field1;
    float _field2;
    float _field3;
    float _field4;
    float _field5;
    float _field6;
};

struct TSGData {
    struct {
        CDStruct_dda89b6c _field1;
        CDStruct_dda89b6c _field2;
        CDStruct_dda89b6c _field3;
        unsigned long long _field4;
        float _field5;
    } _field1;
    unsigned int _field2;
    unsigned int _field3;
    union {
        struct {
            float *_field1;
            float *_field2;
            float _field3;
            char _field4;
            unsigned long long _field5;
            unsigned long long _field6;
            unsigned long long _field7;
            CDStruct_7ba9a352 _field8;
            unsigned long long _field9;
            float _field10;
            float _field11;
            float _field12;
            struct TSGAffineTransform *_field13;
            float _field14;
            float _field15;
            unsigned long long _field16;
            unsigned long long _field17;
            float _field18;
            char _field19;
            char _field20;
            unsigned long long _field21;
        } _field1;
        struct {
            float *_field1;
            float *_field2;
            float _field3;
            unsigned long long _field4;
            unsigned long long _field5;
            unsigned long long _field6;
            CDStruct_7ba9a352 _field7;
            unsigned long long _field8;
            unsigned long long _field9;
            unsigned long long _field10;
            float _field11;
            float _field12;
            float _field13;
            struct TSGAffineTransform *_field14;
        } _field2;
        struct {
            float *_field1;
            float *_field2;
            float *_field3;
            float *_field4;
            float *_field5;
            float *_field6;
            float *_field7;
            unsigned long long *_field8;
            unsigned long long _field9;
            unsigned long long _field10;
            unsigned long long _field11;
            unsigned long long _field12;
            CDStruct_7ba9a352 _field13;
            CDStruct_7ba9a352 _field14;
            char _field15;
            unsigned long long _field16;
            float _field17;
            float _field18;
            float _field19;
            float _field20;
            struct TSGAffineTransform *_field21;
            char _field22;
            unsigned long long _field23;
        } _field3;
        struct {
            float *_field1;
            float _field2;
            unsigned long long _field3;
            unsigned long long _field4;
            CDStruct_7ba9a352 _field5;
            unsigned long long _field6;
            float _field7;
            float _field8;
            float _field9;
            struct TSGAffineTransform *_field10;
        } _field4;
    } _field4;
    union {
        struct {
            float *_field1;
            unsigned long long *_field2;
            unsigned long long _field3;
            float _field4;
            float _field5;
            float _field6;
            struct TSGAffineTransform *_field7;
        } _field1;
        struct {
            float *_field1;
            float *_field2;
            float *_field3;
            float *_field4;
            unsigned long long *_field5;
            unsigned long long _field6;
            unsigned long long _field7;
            unsigned long long _field8;
            float _field9;
            float _field10;
            float _field11;
            struct TSGAffineTransform *_field12;
        } _field2;
        CDStruct_77062993 _field3;
        CDStruct_77062993 _field4;
        struct {
            float *_field1;
            float *_field2;
            float *_field3;
            float *_field4;
            unsigned long long _field5;
            unsigned long long _field6;
            unsigned long long _field7;
            unsigned long long _field8;
            unsigned long long _field9;
            float _field10;
            float _field11;
            float _field12;
            struct TSGAffineTransform *_field13;
        } _field5;
        struct {
            float *_field1;
            unsigned long long _field2;
            unsigned long long _field3;
            float _field4;
            float _field5;
            float _field6;
            struct TSGAffineTransform *_field7;
        } _field6;
        struct {
            float *_field1;
            float *_field2;
            unsigned long long _field3;
            unsigned long long _field4;
            unsigned long long _field5;
            float _field6;
            float _field7;
            float _field8;
            struct TSGAffineTransform *_field9;
        } _field7;
        struct {
            float *_field1;
            float *_field2;
            float *_field3;
            unsigned long long _field4;
            unsigned long long _field5;
            unsigned long long _field6;
            float *_field7;
            float *_field8;
            float *_field9;
            float *_field10;
            unsigned long long _field11;
            unsigned long long _field12;
            char _field13;
            unsigned long long _field14;
            float _field15;
            float _field16;
            float _field17;
            float _field18;
            struct TSGAffineTransform *_field19;
        } _field8;
        struct {
            float *_field1;
            unsigned long long *_field2;
            float *_field3;
            float *_field4;
            float *_field5;
            float *_field6;
            unsigned long long _field7;
            unsigned long long _field8;
            char _field9;
            unsigned long long _field10;
            float _field11;
            float _field12;
            float _field13;
            float _field14;
            float _field15;
            struct TSGAffineTransform *_field16;
        } _field9;
    } _field5;
    CDStruct_7ba9a352 _field6;
    CDStruct_7ba9a352 _field7;
    CDStruct_7ba9a352 _field8;
    CDStruct_7ba9a352 _field9;
    CDStruct_b3e1d474 _field10;
    CDStruct_7ba9a352 _field11;
    CDStruct_b3e1d474 _field12;
    struct {
        CDStruct_7ba9a352 _field1;
        CDStruct_7ba9a352 _field2;
        CDStruct_7ba9a352 _field3;
        CDStruct_7ba9a352 _field4;
        CDStruct_7ba9a352 _field5;
        CDStruct_7ba9a352 _field6;
        CDStruct_7ba9a352 _field7;
        float _field8;
        float _field9;
        unsigned long long _field10;
        float _field11;
    } _field13;
    struct {
        CDStruct_dda89b6c _field1;
        CDStruct_7ba9a352 _field2;
        unsigned long long _field3;
        float _field4;
    } _field14;
};

struct TextFieldNodeSpecs {
    NSString *text;
    UIColor *color;
    UIFont *font;
    long long alignment;
    NSString *placeholder;
    UIColor *placeholderColor;
    struct _Value<bool, &VZ::DefaultControlAttrValue::able, false> editable;
    _Bool secureTextEntry;
    long long keyboardType;
    long long keyboardAppearance;
    long long returnKeyType;
    long long clearButtonMode;
    struct _Value<unsigned long, &VZ::DefaultAttributesValue::uintMax, false> maxLength;
    struct _Value<bool, &VZ::DefaultControlAttrValue::able, false> blurOnSubmit;
    struct _Value<bool, &VZ::DefaultControlAttrValue::disable, false> autoFocus;
    CDUnknownBlockType onFocus;
    CDUnknownBlockType onBlur;
    CDUnknownBlockType onChange;
    CDUnknownBlockType onSubmit;
    CDUnknownBlockType onEnd;
};

struct TextNodeSpecs {
    NSString *text;
    UIColor *color;
    float fontSize;
    float miniScaleFactor;
    _Bool adjustsFontSize;
    long long baselineAdjustment;
    NSString *fontName;
    unsigned long long fontStyle;
    long long alignment;
    unsigned long long verticalAlignment;
    unsigned long long lineBreakMode;
    unsigned long long truncationMode;
    NSAttributedString *attributedString;
    struct _Value<unsigned int, &VZ::DefaultFlexAttributesValue::lines, false> lines;
    float kern;
    float lineSpacing;
    UIFont *_font;
};

struct TextViewNodeSpecs {
    NSString *text;
    UIColor *color;
    UIFont *font;
    long long alignment;
    NSString *placeholder;
    UIColor *placeholderColor;
    struct _Value<bool, &VZ::DefaultControlAttrValue::able, false> editable;
    struct _Value<bool, &VZ::DefaultControlAttrValue::disable, false> autoFocus;
    long long keyboardType;
    long long keyboardAppearance;
    long long returnKeyType;
    struct _Value<unsigned long, &VZ::DefaultAttributesValue::uintMax, false> maxLength;
    struct _Value<bool, &VZ::DefaultControlAttrValue::disable, false> blurOnSubmit;
    CDUnknownBlockType onFocus;
    CDUnknownBlockType onBlur;
    CDUnknownBlockType onChange;
    CDUnknownBlockType onSubmit;
    CDUnknownBlockType onEnd;
    CDUnknownBlockType onScroll;
};

struct ThreadMutex;

struct TokenParser;

struct UIEdgeInsets {
    double top;
    double left;
    double bottom;
    double right;
};

struct UIEvent {
    Class _field1;
};

struct UIImage {
    Class _field1;
};

struct UIOffset {
    double horizontal;
    double vertical;
};

struct VZANodeFlags {
    unsigned int shouldRasterizeDescendants:1;
    unsigned int needDisplayFlag:1;
    unsigned int implementsDrawRect:1;
    unsigned int implementsImageDisplay:1;
};

struct VZFNodeMountedInfo;

struct VZItemRecyclerState {
    id props;
    id context;
    struct CGSize constrainedSize;
    struct NodeLayout layout;
};

struct Vector3 {
    float x;
    float y;
    float z;
};

struct Vector3<float> {
    float _field1;
    float _field2;
    float _field3;
};

struct Vector4 {
    float _field1;
    float _field2;
    float _field3;
    float _field4;
};

struct Vector4<float> {
    float _field1;
    float _field2;
    float _field3;
    float _field4;
};

struct VehicleLicenseEngine {
    char *_field1;
    int _field2;
    int _field3;
    struct B_Rect _field4;
    struct B_Rect _field5;
    struct B_Rect _field6;
    struct B_Rect _field7;
    struct B_Rect _field8;
    struct ImagePreprocessEngine _field9;
    struct RecBlock _field10;
    _Bool _field11;
    _Bool _field12;
    _Bool _field13;
    _Bool _field14;
    _Bool _field15;
};

struct Vertex;

struct VideoEngineSupportImpl;

struct ViewClass {
    NSString *_identifier;
    CDUnknownBlockType _factory;
    _Bool _isCustom;
};

struct WIENER;

struct WebViewNodeSpecs {
    NSDictionary *source;
    _Bool scalesPageToFit;
    CDUnknownBlockType onLoadingStart;
    CDUnknownBlockType onLoadingFinish;
    CDUnknownBlockType onLoadingError;
    CDUnknownBlockType onShouldStartLoadWithRequest;
};

struct YunOS_FACE_KEY_POINT_2D {
    float x;
    float y;
};

struct _00066 {
    struct _00651 {
        struct _00651 {
            struct _00219 _field1;
            struct _00219 _field2;
        } _field1;
        int _field2;
        int _field3;
        float _field4;
    } _field1;
    _Bool _field2;
    int _field3;
    int _field4;
    int _field5;
    unsigned long long _field6;
    struct _00445 {
        struct unique_ptr<_00509::_00445::_00716, std::__1::default_delete<_00509::_00445::_00716>> _field1;
    } _field7;
    struct _00206 {
        struct unique_ptr<_00509::_00206::_00716, std::__1::default_delete<_00509::_00206::_00716>> _field1;
    } _field8;
    struct _00599 _field9;
    struct _00084 {
        struct time_point<std::__1::chrono::steady_clock, std::__1::chrono::duration<long long, std::__1::ratio<1, 1000000000>>> _field1;
        _Bool _field2;
    } _field10;
    struct _00460 _field11;
    int _field12;
    struct _00111 {
        struct _00184 _field1;
        struct _00599 _field2;
    } _field13;
};

struct _00184 {
    int _field1;
    struct _00210 {
        _Bool _field1;
        struct _00367 _field2;
        struct _00367 _field3;
        struct _00599 _field4;
    } _field2;
};

struct _00219 {
    float _field1;
    float _field2;
    float _field3;
    float _field4;
    float _field5;
    float _field6;
};

struct _00348 {
    int _field1;
    float _field2;
    float _field3;
};

struct _00367 {
    _Bool _field1;
    int _field2;
    float _field3;
    float _field4;
    float _field5;
    float _field6;
    float _field7;
    float _field8;
};

struct _00460 {
    unsigned long long _field1;
    struct _00650 _field2;
    float _field3;
};

struct _00599 {
    struct _00611 {
        _Bool _field1;
        _Bool _field2;
        _Bool _field3;
        _Bool _field4;
        _Bool _field5;
        _Bool _field6;
        _Bool _field7;
        _Bool _field8;
    } _field1;
    struct _00650 _field2;
    struct _00687 {
        float _field1;
        float _field2;
    } _field3;
    struct _00348 _field4[7];
    struct _00348 _field5[7];
    unsigned long long _field6;
    struct _00671 {
        float _field1;
        float _field2;
        float _field3;
        float _field4;
    } _field7;
    struct _00614 {
        float _field1;
        float _field2;
        float _field3;
        float _field4;
    } _field8;
    struct _00621 {
        float _field1;
        float _field2;
        float _field3;
    } _field9;
    float _field10;
    float _field11;
    float _field12;
    float _field13;
    float _field14;
    float _field15;
    float _field16;
    float _field17;
    float _field18;
    float _field19;
};

struct _00650 {
    float _field1;
    float _field2;
};

struct _00716;

struct _APLogIO {
    int _field1;
    CDUnknownFunctionPointerType _field2;
    CDUnknownFunctionPointerType _field3;
    CDUnknownFunctionPointerType _field4;
    CDUnknownFunctionPointerType _field5;
    CDUnknownFunctionPointerType _field6;
};

struct _BCR_Engine {
    void *_field1;
    char _field2[4096];
};

struct _CPTGradientElement {
    struct _CPTRGBAColor _field1;
    double _field2;
    struct _CPTGradientElement *_field3;
};

struct _CPTNumericDataType {
    int dataTypeFormat;
    unsigned long long sampleBytes;
    long long byteOrder;
};

struct _CPTRGBAColor {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
};

struct _DArray;

struct _DetectorConfig {
    double timeout;
    int maxTaskQueueSize;
    int minFaceSize;
    float maxYawAngle;
    float maxPitchAngle;
    float minBrightness;
    float maxBrightness;
    float maxMotionBlurness;
    float maxGaussianBlurness;
    float maxEyeOpen;
    float maxMouthOpen;
    float minIntegrity;
};

struct _GSModeRuleArchiver {
    CDUnknownFunctionPointerType _field1;
    CDUnknownFunctionPointerType _field2;
    CDUnknownFunctionPointerType _field3;
    CDUnknownFunctionPointerType _field4;
    CDUnknownFunctionPointerType _field5;
    CDUnknownFunctionPointerType _field6;
    CDUnknownFunctionPointerType _field7;
    CDUnknownFunctionPointerType _field8;
    CDUnknownFunctionPointerType _field9;
    CDUnknownFunctionPointerType _field10;
    CDUnknownFunctionPointerType _field11;
    CDUnknownFunctionPointerType _field12;
    CDUnknownFunctionPointerType _field13;
    CDUnknownFunctionPointerType _field14;
    CDUnknownFunctionPointerType _field15;
    CDUnknownFunctionPointerType _field16;
};

struct _GSSkipValidator {
    CDUnknownFunctionPointerType _field1;
    CDUnknownFunctionPointerType _field2;
    CDUnknownFunctionPointerType _field3;
    CDUnknownFunctionPointerType _field4;
};

struct _MSSDKFileHashComputationContext {
    CDUnknownFunctionPointerType _field1;
    CDUnknownFunctionPointerType _field2;
    CDUnknownFunctionPointerType _field3;
    unsigned long long _field4;
    char **_field5;
};

struct _NSRange {
    unsigned long long location;
    unsigned long long length;
};

struct _PLCrashReportDecoder {
    struct _Plcrash__CrashReport *_field1;
};

struct _Plcrash__CrashReport {
    struct _ProtobufCMessage _field1;
    struct _Plcrash__CrashReport__SystemInfo *_field2;
    struct _Plcrash__CrashReport__ApplicationInfo *_field3;
    unsigned long long _field4;
    struct _Plcrash__CrashReport__Thread **_field5;
    unsigned long long _field6;
    struct _Plcrash__CrashReport__BinaryImage **_field7;
    struct _Plcrash__CrashReport__Exception *_field8;
    struct _Plcrash__CrashReport__Signal *_field9;
    struct _Plcrash__CrashReport__ProcessInfo *_field10;
    struct _Plcrash__CrashReport__MachineInfo *_field11;
    struct _Plcrash__CrashReport__ReportInfo *_field12;
};

struct _Plcrash__CrashReport__ApplicationInfo {
    struct _ProtobufCMessage _field1;
    char *_field2;
    char *_field3;
    char *_field4;
};

struct _Plcrash__CrashReport__BinaryImage;

struct _Plcrash__CrashReport__Exception {
    struct _ProtobufCMessage _field1;
    char *_field2;
    char *_field3;
    unsigned long long _field4;
    struct _Plcrash__CrashReport__Thread__StackFrame **_field5;
};

struct _Plcrash__CrashReport__MachineInfo {
    struct _ProtobufCMessage _field1;
    char *_field2;
    struct _Plcrash__CrashReport__Processor *_field3;
    unsigned int _field4;
    unsigned int _field5;
};

struct _Plcrash__CrashReport__ProcessInfo {
    struct _ProtobufCMessage _field1;
    char *_field2;
    unsigned int _field3;
    char *_field4;
    char *_field5;
    unsigned int _field6;
    int _field7;
    int _field8;
    unsigned long long _field9;
};

struct _Plcrash__CrashReport__Processor {
    struct _ProtobufCMessage _field1;
    int _field2;
    int _field3;
    unsigned long long _field4;
    unsigned long long _field5;
};

struct _Plcrash__CrashReport__ReportInfo;

struct _Plcrash__CrashReport__Signal {
    struct _ProtobufCMessage _field1;
    char *_field2;
    char *_field3;
    unsigned long long _field4;
    struct _Plcrash__CrashReport__Signal__MachException *_field5;
};

struct _Plcrash__CrashReport__Signal__MachException {
    struct _ProtobufCMessage _field1;
    unsigned long long _field2;
    unsigned long long _field3;
    unsigned long long *_field4;
};

struct _Plcrash__CrashReport__Symbol {
    struct _ProtobufCMessage _field1;
    char *_field2;
    unsigned long long _field3;
    int _field4;
    unsigned long long _field5;
};

struct _Plcrash__CrashReport__SystemInfo {
    struct _ProtobufCMessage _field1;
    int _field2;
    int _field3;
    char *_field4;
    int _field5;
    long long _field6;
    char *_field7;
};

struct _Plcrash__CrashReport__Thread;

struct _Plcrash__CrashReport__Thread__StackFrame {
    struct _ProtobufCMessage _field1;
    unsigned long long _field2;
    struct _Plcrash__CrashReport__Symbol *_field3;
};

struct _ProtobufCMessage {
    struct _ProtobufCMessageDescriptor *_field1;
    unsigned int _field2;
    struct _ProtobufCMessageUnknownField *_field3;
};

struct _ProtobufCMessageDescriptor;

struct _ProtobufCMessageUnknownField;

struct _StatefulValue<NSString *, true> {
    struct __hash_table<std::__1::__hash_value_type<unsigned long, NSString *>, std::__1::__unordered_map_hasher<unsigned long, std::__1::__hash_value_type<unsigned long, NSString *>, std::__1::hash<unsigned long>, true>, std::__1::__unordered_map_equal<unsigned long, std::__1::__hash_value_type<unsigned long, NSString *>, std::__1::equal_to<unsigned long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long, NSString *>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, NSString *>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, NSString *>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, NSString *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, NSString *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, NSString *>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<unsigned long, NSString *>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long, std::__1::__hash_value_type<unsigned long, NSString *>, std::__1::hash<unsigned long>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned long, std::__1::__hash_value_type<unsigned long, NSString *>, std::__1::equal_to<unsigned long>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct _StatefulValue<UIColor *, true> {
    struct __hash_table<std::__1::__hash_value_type<unsigned long, UIColor *>, std::__1::__unordered_map_hasher<unsigned long, std::__1::__hash_value_type<unsigned long, UIColor *>, std::__1::hash<unsigned long>, true>, std::__1::__unordered_map_equal<unsigned long, std::__1::__hash_value_type<unsigned long, UIColor *>, std::__1::equal_to<unsigned long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long, UIColor *>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, UIColor *>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, UIColor *>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, UIColor *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, UIColor *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, UIColor *>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<unsigned long, UIColor *>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long, std::__1::__hash_value_type<unsigned long, UIColor *>, std::__1::hash<unsigned long>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned long, std::__1::__hash_value_type<unsigned long, UIColor *>, std::__1::equal_to<unsigned long>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct _StatefulValue<UIImage *, true> {
    struct __hash_table<std::__1::__hash_value_type<unsigned long, UIImage *>, std::__1::__unordered_map_hasher<unsigned long, std::__1::__hash_value_type<unsigned long, UIImage *>, std::__1::hash<unsigned long>, true>, std::__1::__unordered_map_equal<unsigned long, std::__1::__hash_value_type<unsigned long, UIImage *>, std::__1::equal_to<unsigned long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long, UIImage *>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, UIImage *>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, UIImage *>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, UIImage *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, UIImage *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, UIImage *>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<unsigned long, UIImage *>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long, std::__1::__hash_value_type<unsigned long, UIImage *>, std::__1::hash<unsigned long>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned long, std::__1::__hash_value_type<unsigned long, UIImage *>, std::__1::equal_to<unsigned long>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct _Value<CGSize, &VZ::DefaultButtonAttributesValue::enlargeSize, true> {
    double width;
    double height;
};

struct _Value<FlexLength, &VZ::DefaultAttributesValue::flexBasis, true> {
    float value;
    int type;
};

struct _Value<FlexLength, &VZ::DefaultAttributesValue::height, true> {
    float value;
    int type;
};

struct _Value<FlexLength, &VZ::DefaultAttributesValue::margin, true> {
    float value;
    int type;
};

struct _Value<FlexLength, &VZ::DefaultAttributesValue::marginBottom, true> {
    float value;
    int type;
};

struct _Value<FlexLength, &VZ::DefaultAttributesValue::marginLeft, true> {
    float value;
    int type;
};

struct _Value<FlexLength, &VZ::DefaultAttributesValue::marginRight, true> {
    float value;
    int type;
};

struct _Value<FlexLength, &VZ::DefaultAttributesValue::marginTop, true> {
    float value;
    int type;
};

struct _Value<FlexLength, &VZ::DefaultAttributesValue::maxHeight, true> {
    float value;
    int type;
};

struct _Value<FlexLength, &VZ::DefaultAttributesValue::maxWidth, true> {
    float value;
    int type;
};

struct _Value<FlexLength, &VZ::DefaultAttributesValue::minHeight, true> {
    float value;
    int type;
};

struct _Value<FlexLength, &VZ::DefaultAttributesValue::minWidth, true> {
    float value;
    int type;
};

struct _Value<FlexLength, &VZ::DefaultAttributesValue::padding, true> {
    float value;
    int type;
};

struct _Value<FlexLength, &VZ::DefaultAttributesValue::paddingBottom, true> {
    float value;
    int type;
};

struct _Value<FlexLength, &VZ::DefaultAttributesValue::paddingLeft, true> {
    float value;
    int type;
};

struct _Value<FlexLength, &VZ::DefaultAttributesValue::paddingRight, true> {
    float value;
    int type;
};

struct _Value<FlexLength, &VZ::DefaultAttributesValue::paddingTop, true> {
    float value;
    int type;
};

struct _Value<FlexLength, &VZ::DefaultAttributesValue::width, true> {
    float value;
    int type;
};

struct _Value<FlexLength, &VZ::DefaultStackAttributesValue::lineSpacing, true> {
    float value;
    int type;
};

struct _Value<FlexLength, &VZ::DefaultStackAttributesValue::spacing, true> {
    float value;
    int type;
};

struct _Value<FlexLength, &VZ::PagingNodeSpecsDefault::margin, true> {
    float value;
    int type;
};

struct _Value<MKCoordinateRegion, &VZ::DefaultAttributesValue::undefinedRegion, true> {
    struct CLLocationCoordinate2D center;
    CDStruct_951efa70 span;
};

struct _Value<UIColor *, &VZ::DefaultAttributesValue::backgroundColor, false> {
    UIColor *value;
};

struct _Value<UIColor *, &VZ::DefaultAttributesValue::highlightBackgroundColor, false> {
    UIColor *value;
};

struct _Value<VZ::ScrollDirection, &VZ::DefaultFlexAttributesValue::scrollDirection, false> {
    int value;
};

struct _Value<VZFlexLayoutAlignment, &VZ::DefaultAttributesValue::alignSelf, false> {
    int value;
};

struct _Value<VZFlexLayoutAlignment, &VZ::DefaultStackAttributesValue::alignContent, false> {
    int value;
};

struct _Value<VZFlexLayoutAlignment, &VZ::DefaultStackAttributesValue::alignItems, false> {
    int value;
};

struct _Value<VZFlexLayoutAlignment, &VZ::DefaultStackAttributesValue::justifyContent, false> {
    int value;
};

struct _Value<VZFlexLayoutDirection, &VZ::DefaultStackAttributesValue::direction, false> {
    int value;
};

struct _Value<bool, &VZ::DefaultAttributesValue::fixed, false> {
    _Bool value;
};

struct _Value<bool, &VZ::DefaultAttributesValue::wrap, false> {
    _Bool value;
};

struct _Value<bool, &VZ::DefaultControlAttrValue::able, false> {
    _Bool value;
};

struct _Value<bool, &VZ::DefaultControlAttrValue::disable, false> {
    _Bool value;
};

struct _Value<bool, &VZ::DefaultFlexAttributesValue::scrollEnabled, false> {
    _Bool value;
};

struct _Value<bool, &VZ::PagingNodeSpecsDefault::scrollEnabled, false> {
    _Bool value;
};

struct _Value<double, &VZ::DefaultAttributesValue::cornerRadiusUndefined, false> {
    double value;
};

struct _Value<float, &VZ::DefaultAttributesValue::alpha, false> {
    float value;
};

struct _Value<float, &VZ::DefaultAttributesValue::flexGrow, false> {
    float value;
};

struct _Value<float, &VZ::DefaultAttributesValue::flexShrink, false> {
    float value;
};

struct _Value<float, &VZ::PagingNodeSpecsDefault::animationDuration, false> {
    float value;
};

struct _Value<float, &VZ::PagingNodeSpecsDefault::pageControlScale, false> {
    float value;
};

struct _Value<int, &VZ::DefaultAttributesValue::userInteractionEnabled, false> {
    int value;
};

struct _Value<long, &VZ::DefaultAttributesValue::noSegment, false> {
    long long value;
};

struct _Value<long, &VZ::DefaultAttributesValue::selectedIndex, false> {
    long long value;
};

struct _Value<unsigned int, &VZ::DefaultFlexAttributesValue::lines, false> {
    unsigned int value;
};

struct _Value<unsigned long, &VZ::DefaultAttributesValue::uintMax, false> {
    unsigned long long value;
};

struct _Vector_impl {
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> *_field1;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> *_field2;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> *_field3;
};

struct __CTServerConnection {
    int _field1;
    int _field2;
    struct __CFMachPort *_field3;
    int _field4;
    int _field5;
    int _field6;
    int _field7;
    int _field8;
    int _field9;
    int _field10;
};

struct __hash_node<std::__1::__hash_value_type<NSString *, bool>, void *>;

struct __hash_node<std::__1::__hash_value_type<unsigned long, NSString *>, void *>;

struct __hash_node<std::__1::__hash_value_type<unsigned long, UIColor *>, void *>;

struct __hash_node<std::__1::__hash_value_type<unsigned long, UIImage *>, void *>;

struct __list_node_base<APBBisEyePair *, void *> {
    struct __list_node_base<APBBisEyePair *, void *> *__prev_;
    struct __list_node_base<APBBisEyePair *, void *> *__next_;
};

struct __list_node_base<BisFaceContent *, void *> {
    struct __list_node_base<BisFaceContent *, void *> *__prev_;
    struct __list_node_base<BisFaceContent *, void *> *__next_;
};

struct __list_node_base<float, void *> {
    struct __list_node_base<float, void *> *__prev_;
    struct __list_node_base<float, void *> *__next_;
};

struct __list_node_base<gameplay::Ant3dActionData *, void *> {
    struct __list_node_base<gameplay::Ant3dActionData *, void *> *_field1;
    struct __list_node_base<gameplay::Ant3dActionData *, void *> *_field2;
};

struct __sFILE {
    char *_field1;
    int _field2;
    int _field3;
    short _field4;
    short _field5;
    struct __sbuf _field6;
    int _field7;
    void *_field8;
    CDUnknownFunctionPointerType _field9;
    CDUnknownFunctionPointerType _field10;
    CDUnknownFunctionPointerType _field11;
    CDUnknownFunctionPointerType _field12;
    struct __sbuf _field13;
    struct __sFILEX *_field14;
    int _field15;
    unsigned char _field16[3];
    unsigned char _field17[1];
    struct __sbuf _field18;
    int _field19;
    long long _field20;
};

struct __sbuf {
    char *_field1;
    int _field2;
};

struct __shared_weak_count;

struct __tree_end_node<std::__1::__tree_node_base<void *>*> {
    struct __tree_node_base<void *> *__left_;
};

struct _opaque_pthread_mutex_t {
    long long __sig;
    char __opaque[56];
};

struct _opaque_pthread_rwlock_t {
    long long __sig;
    char __opaque[192];
};

struct _util {
    CDUnknownFunctionPointerType _field1;
    CDUnknownFunctionPointerType _field2;
    CDUnknownFunctionPointerType _field3;
    CDUnknownFunctionPointerType _field4;
    CDUnknownFunctionPointerType _field5;
    CDUnknownFunctionPointerType _field6;
    CDUnknownFunctionPointerType _field7;
    CDUnknownFunctionPointerType _field8;
    CDUnknownFunctionPointerType _field9;
    CDUnknownFunctionPointerType _field10;
    CDUnknownFunctionPointerType _field11;
    CDUnknownFunctionPointerType _field12;
    CDUnknownFunctionPointerType _field13;
    CDUnknownFunctionPointerType _field14;
    CDUnknownFunctionPointerType _field15;
    CDUnknownFunctionPointerType _field16;
    CDUnknownFunctionPointerType _field17;
    CDUnknownFunctionPointerType _field18;
    CDUnknownFunctionPointerType _field19;
    CDUnknownFunctionPointerType _field20;
    CDUnknownFunctionPointerType _field21;
    CDUnknownFunctionPointerType _field22;
    CDUnknownFunctionPointerType _field23;
    CDUnknownFunctionPointerType _field24;
    CDUnknownFunctionPointerType _field25;
    CDUnknownFunctionPointerType _field26;
    CDUnknownFunctionPointerType _field27;
    CDUnknownFunctionPointerType _field28;
    CDUnknownFunctionPointerType _field29;
    CDUnknownFunctionPointerType _field30;
};

struct _utils {
    CDUnknownFunctionPointerType _field1;
    CDUnknownFunctionPointerType _field2;
};

struct _vm_param {
    int _field1;
    union {
        _Bool _field1;
        unsigned char _field2;
        int _field3;
        long long _field4;
        float _field5;
        double _field6;
        char *_field7;
        struct _byte_data {
            char *_field1;
            int _field2;
            _Bool _field3;
        } _field8;
    } _field2;
};

struct _xmlAttr {
    void *_field1;
    int _field2;
    char *_field3;
    struct _xmlNode *_field4;
    struct _xmlNode *_field5;
    struct _xmlNode *_field6;
    struct _xmlAttr *_field7;
    struct _xmlAttr *_field8;
    struct _xmlDoc *_field9;
    struct _xmlNs *_field10;
    int _field11;
    void *_field12;
};

struct _xmlDoc {
    void *_field1;
    int _field2;
    char *_field3;
    struct _xmlNode *_field4;
    struct _xmlNode *_field5;
    struct _xmlNode *_field6;
    struct _xmlNode *_field7;
    struct _xmlNode *_field8;
    struct _xmlDoc *_field9;
    int _field10;
    int _field11;
    struct _xmlDtd *_field12;
    struct _xmlDtd *_field13;
    struct _xmlNs *_field14;
    char *_field15;
    char *_field16;
    void *_field17;
    void *_field18;
    char *_field19;
    int _field20;
    struct _xmlDict *_field21;
    void *_field22;
    int _field23;
    int _field24;
};

struct _xmlDtd;

struct _xmlKind {
    void *_field1;
    int _field2;
};

struct _xmlNode {
    void *_field1;
    int _field2;
    char *_field3;
    struct _xmlNode *_field4;
    struct _xmlNode *_field5;
    struct _xmlNode *_field6;
    struct _xmlNode *_field7;
    struct _xmlNode *_field8;
    struct _xmlDoc *_field9;
    struct _xmlNs *_field10;
    char *_field11;
    struct _xmlAttr *_field12;
    struct _xmlNs *_field13;
    void *_field14;
    unsigned short _field15;
    unsigned short _field16;
};

struct _xmlNs {
    struct _xmlNs *_field1;
    int _field2;
    char *_field3;
    char *_field4;
    void *_field5;
    struct _xmlDoc *_field6;
};

struct _xmlStd {
    void *_field1;
    int _field2;
    char *_field3;
    struct _xmlNode *_field4;
    struct _xmlNode *_field5;
    struct _xmlNode *_field6;
    struct _xmlStd *_field7;
    struct _xmlStd *_field8;
    struct _xmlDoc *_field9;
};

struct am_indoor_struct {
    char _field1[64];
    char _field2[64];
    char _field3[8];
    int _field4;
    char _field5[20];
    char _field6[8];
    int _field7;
    int *_field8;
    char **_field9;
    char **_field10;
    int _field11;
    int *_field12;
};

struct am_maptile_struct {
    char _field1[21];
    short _field2;
    unsigned short _field3;
};

struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
    struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
        struct __rep {
            union {
                struct __long {
                    char *__data_;
                    unsigned long long __size_;
                    unsigned long long __cap_;
                } __l;
                struct __short {
                    char __data_[23];
                    struct {
                        unsigned char __size_;
                    } ;
                } __s;
                struct __raw {
                    unsigned long long __words[3];
                } __r;
            } ;
        } __first_;
    } __r_;
};

struct basic_string<char, std::char_traits<char>, std::allocator<char>>;

struct bignum_st;

struct bn_blinding_st;

struct bn_mont_ctx_st;

struct camera_configuration_t {
    long long focus_mode;
    long long exposure_mode;
    long long white_balance_mode;
    long long frameType;
    long long cameraMode;
    float exposure_compensation;
};

struct crypto_ex_data_st {
    struct stack_st_void *_field1;
    int _field2;
};

struct css_node {
    struct {
        int _field1;
        int _field2;
        int _field3;
        int _field4;
        int _field5;
        int _field6;
        int _field7;
        int _field8;
        float _field9;
        float _field10[6];
        float _field11[4];
        float _field12[6];
        float _field13[6];
        float _field14[2];
        float _field15[2];
        float _field16[2];
    } _field1;
    struct {
        float _field1[4];
        float _field2[2];
        int _field3;
        _Bool _field4;
        float _field5[2];
        float _field6;
        float _field7[2];
        float _field8[2];
        int _field9;
    } _field2;
    int _field3;
    int _field4;
    CDUnknownFunctionPointerType _field5;
    CDUnknownFunctionPointerType _field6;
    CDUnknownFunctionPointerType _field7;
    CDUnknownFunctionPointerType _field8;
    void *_field9;
};

struct duk_hthread;

struct duktape_bridge {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    struct IVideoEngineSupport *_field3;
    struct duk_hthread *_field4;
    struct IJSBridgeSupport *_field5;
    struct MessageQueue _field6;
    int _field7;
};

struct duration<long long, std::__1::ratio<1, 1000000000>> {
    long long _field1;
};

struct engine_st;

struct ev_motion_data_t {
    struct ev_vec4_t attitude;
    struct ev_vec3_t acceleration;
    struct ev_vec3_t rotation;
    struct ev_vec3_t gravity;
    struct ev_vec3_t magnetic;
};

struct ev_vec3_t {
    float x;
    float y;
    float z;
};

struct ev_vec4_t {
    float w;
    float x;
    float y;
    float z;
};

struct evp_auth_t {
    void *_field1;
    void *_field2;
};

struct evp_camera_configuration_t {
    int _field1;
    int _field2;
};

struct evp_motion_data_t {
    struct evp_vec4_t attitude;
    struct evp_vec3_t acceleration;
    struct evp_vec3_t rotation;
    struct evp_vec3_t gravity;
    struct evp_vec3_t magnetic;
};

struct evp_rect_t {
    float _field1;
    float _field2;
    float _field3;
    float _field4;
};

struct evp_vec3_t {
    float x;
    float y;
    float z;
};

struct evp_vec4_t {
    float w;
    float x;
    float y;
    float z;
};

struct eyeverify_capture_t {
    struct eyeverify_eye_pair_t _field1;
    struct eyeverify_image_t _field2;
    float _field3;
};

struct eyeverify_eye_pair_t {
    char *_field1;
    int _field2;
};

struct eyeverify_image_t {
    short _field1;
    short _field2;
    int _field3;
    char *_field4;
    int _field5;
};

struct face_property_t {
    _Bool _field1;
    struct evp_rect_t _field2;
};

struct fb_core {
    struct fb_node *_field1;
    struct fb_node *_field2;
    struct fb_node *_field3;
    struct fb_script *_field4;
    char *_field5;
    unsigned long long _field6;
    unsigned long long _field7;
    CDStruct_183601bc *_field8;
    CDUnknownFunctionPointerType _field9;
    CDUnknownFunctionPointerType _field10;
    void *_field11;
    CDStruct_183601bc *_field12;
    CDStruct_183601bc *_field13;
    CDStruct_183601bc *_field14;
    CDStruct_e2b8aef9 _field15;
    CDStruct_e2b8aef9 _field16;
    CDStruct_e2b8aef9 _field17;
    CDStruct_e2b8aef9 _field18;
    _Bool _field19;
    _Bool _field20;
    _Bool _field21;
    CDUnknownFunctionPointerType _field22;
};

struct fb_node {
    struct css_node _field1;
    CDStruct_e2b8aef9 _field2;
    CDStruct_e2b8aef9 _field3;
    struct {
        CDStruct_a086822f _field1;
        struct fb_script_cb **_field2;
        struct fb_script_cb *_field3;
    } _field4;
    CDStruct_183601bc *_field5;
    char *_field6;
    int _field7;
    struct fb_node *_field8;
    struct fb_node **_field9;
    int _field10;
    int _field11;
    float _field12[2];
    float _field13[2];
    int _field14;
    void *_field15;
};

struct fb_script;

struct fb_script_cb;

struct frame_accumulator_t {
    MGLivenessDetectionFrame *hqFrame;
    MGLivenessDetectionFrame *progressFrame;
    MGLivenessDetectionFrame *actionFrame;
    float max_progress;
};

struct function<void (videocore::IStreamSession &, long, void *)> {
    struct type _field1;
    struct __base<void (videocore::IStreamSession &, long, void *)> *_field2;
};

struct in6_addr {
    union {
        unsigned char __u6_addr8[16];
        unsigned short __u6_addr16[8];
        unsigned int __u6_addr32[4];
    } __u6_addr;
};

struct in_addr {
    unsigned int _field1;
};

struct internal_state;

struct list<APBBisEyePair *, std::__1::allocator<APBBisEyePair *>> {
    struct __list_node_base<APBBisEyePair *, void *> __end_;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<APBBisEyePair *, void *>>> {
        unsigned long long __first_;
    } __size_alloc_;
};

struct list<BisFaceContent *, std::__1::allocator<BisFaceContent *>> {
    struct __list_node_base<BisFaceContent *, void *> __end_;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<BisFaceContent *, void *>>> {
        unsigned long long __first_;
    } __size_alloc_;
};

struct list<float, std::__1::allocator<float>> {
    struct __list_node_base<float, void *> __end_;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<float, void *>>> {
        unsigned long long __first_;
    } __size_alloc_;
};

struct list<gameplay::Ant3dActionData *, std::__1::allocator<gameplay::Ant3dActionData *>> {
    struct __list_node_base<gameplay::Ant3dActionData *, void *> _field1;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<gameplay::Ant3dActionData *, void *>>> {
        unsigned long long _field1;
    } _field2;
};

struct load_command {
    unsigned int _field1;
    unsigned int _field2;
};

struct map<std::__1::basic_string<char>, long, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, long>>> {
    struct __tree<std::__1::__value_type<std::__1::basic_string<char>, long>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, long>, std::__1::less<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, long>>> {
        struct __tree_node<std::__1::__value_type<std::__1::basic_string<char>, long>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, long>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, long>, std::__1::less<std::__1::basic_string<char>>, true>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char>>>> {
    struct __tree<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::less<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>>> {
        struct __tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::less<std::__1::basic_string<char>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map_node_t;

struct mine_accumulator_t {
    int video_mines;
    int left_eye_occlusions;
    int right_eye_occlusions;
};

struct motionLock_t {
    _Bool acc;
    _Bool rot;
    _Bool mag;
    _Bool att;
};

struct mutex {
    struct _opaque_pthread_mutex_t _field1;
};

struct plcrash_exception_server_context {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    CDUnknownFunctionPointerType _field5;
    void *_field6;
    struct _opaque_pthread_mutex_t _field7;
    struct _opaque_pthread_cond_t {
        long long _field1;
        char _field2[40];
    } _field8;
    unsigned int _field9;
    _Bool _field10;
};

struct plcrash_mach_exception_port_set {
    unsigned int count;
    unsigned int masks[14];
    unsigned int ports[14];
    int behaviors[14];
    int flavors[14];
};

struct priority_queue<gameplay::Game::TimeEvent, std::__1::vector<gameplay::Game::TimeEvent, std::__1::allocator<gameplay::Game::TimeEvent>>, std::__1::less<gameplay::Game::TimeEvent>>;

struct requestConfig {
    _Bool isHTTPs;
    unsigned long long stringEncoding;
    double requestTimeoutSeconds;
    unsigned long long cachePolicy;
    unsigned long long cacheTime;
    int requestMethod;
};

struct responseConfig {
    int responseType;
};

struct rsa_meth_st;

struct rsa_st {
    int _field1;
    long long _field2;
    struct rsa_meth_st *_field3;
    struct engine_st *_field4;
    struct bignum_st *_field5;
    struct bignum_st *_field6;
    struct bignum_st *_field7;
    struct bignum_st *_field8;
    struct bignum_st *_field9;
    struct bignum_st *_field10;
    struct bignum_st *_field11;
    struct bignum_st *_field12;
    struct crypto_ex_data_st _field13;
    int _field14;
    int _field15;
    struct bn_mont_ctx_st *_field16;
    struct bn_mont_ctx_st *_field17;
    struct bn_mont_ctx_st *_field18;
    char *_field19;
    struct bn_blinding_st *_field20;
    struct bn_blinding_st *_field21;
};

struct search_result_t {
    struct _DArray *_field1;
    unsigned int _field2;
    unsigned int _field3;
    _Bool _field4;
};

struct set<APBEventType, std::__1::less<APBEventType>, std::__1::allocator<APBEventType>> {
    struct __tree<APBEventType, std::__1::less<APBEventType>, std::__1::allocator<APBEventType>> {
        struct __tree_node<APBEventType, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<APBEventType, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::less<APBEventType>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct shared_ptr<VZ::FluxAction> {
    struct FluxAction *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<VZ::NodeLayout, std::__1::allocator<VZ::NodeLayout>>> {
    vector_48e1f07d *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<short, std::__1::allocator<short>>> {
    struct vector<short, std::__1::allocator<short>> *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<videocore::Apple::MP4Multiplexer> {
    struct MP4Multiplexer *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<videocore::Apple::PixelBufferSource> {
    struct PixelBufferSource *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<videocore::AspectTransform> {
    struct AspectTransform *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<videocore::IAudioMixer> {
    struct IAudioMixer *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<videocore::IOutputSession> {
    struct IOutputSession *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<videocore::ITransform> {
    struct ITransform *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<videocore::IVideoMixer> {
    struct IVideoMixer *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<videocore::PositionTransform> {
    struct PositionTransform *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<videocore::Split> {
    struct Split *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<videocore::iOS::CameraSource> {
    struct CameraSource *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<videocore::iOS::MicSource> {
    struct MicSource *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<videocore::simpleApi::PixelBufferOutput> {
    struct PixelBufferOutput *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct sockaddr_in {
    unsigned char _field1;
    unsigned char _field2;
    unsigned short _field3;
    struct in_addr _field4;
    char _field5[8];
};

struct sockaddr_in6 {
    unsigned char sin6_len;
    unsigned char sin6_family;
    unsigned short sin6_port;
    unsigned int sin6_flowinfo;
    struct in6_addr sin6_addr;
    unsigned int sin6_scope_id;
};

struct stack_st_void;

struct status_evaluator_t {
    float pitch;
    float yaw;
    float width;
    float best_pitch;
    float best_yaw;
    float best_width;
    float pitch_range;
    float yaw_range;
    float width_range;
    float pitch_weight;
    float yaw_weight;
    float width_weight;
};

struct time_point<std::__1::chrono::steady_clock, std::__1::chrono::duration<long long, std::__1::ratio<1, 1000000000>>> {
    struct duration<long long, std::__1::ratio<1, 1000000000>> _field1;
};

struct timeval {
    long long tv_sec;
    int tv_usec;
};

struct tip_evaluator_t {
    _Bool pose_end;
    _Bool has_face;
    _Bool did_blink;
    _Bool pos_okay;
    _Bool quality_okay;
    _Bool under_exposure;
    _Bool face_width_too_small;
    _Bool integrity_fail;
    _Bool yaw_fail;
    _Bool tremble_fail;
    _Bool did_checkSeven;
    int tip_timer_wait_cnt;
    _Bool tip_show_switch;
};

struct tm_zip_s {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned int _field6;
};

struct type {
    unsigned char _field1[24];
};

struct unique_ptr<VZFNodeMountedInfo, std::__1::default_delete<VZFNodeMountedInfo>> {
    struct __compressed_pair<VZFNodeMountedInfo *, std::__1::default_delete<VZFNodeMountedInfo>> {
        struct VZFNodeMountedInfo *__first_;
    } __ptr_;
};

struct unique_ptr<_00509::_00206::_00716, std::__1::default_delete<_00509::_00206::_00716>> {
    struct __compressed_pair<_00509::_00206::_00716 *, std::__1::default_delete<_00509::_00206::_00716>> {
        struct _00716 *_field1;
    } _field1;
};

struct unique_ptr<_00509::_00445::_00716, std::__1::default_delete<_00509::_00445::_00716>> {
    struct __compressed_pair<_00509::_00445::_00716 *, std::__1::default_delete<_00509::_00445::_00716>> {
        struct _00716 *_field1;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, bool>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, bool>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, bool>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, bool>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<NSString *, bool>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, bool>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, bool>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, NSString *>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, NSString *>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, NSString *>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, NSString *>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<unsigned long, NSString *>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, NSString *>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, NSString *>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, UIColor *>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, UIColor *>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, UIColor *>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, UIColor *>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<unsigned long, UIColor *>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, UIColor *>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, UIColor *>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, UIImage *>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, UIImage *>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, UIImage *>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, UIImage *>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<unsigned long, UIImage *>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, UIImage *>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, UIImage *>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unordered_map<NSString *, bool, VZ::NSStringHashFunctor, VZ::NSStringEqualFunctor, std::__1::allocator<std::__1::pair<NSString *const, bool>>> {
    struct __hash_table<std::__1::__hash_value_type<NSString *, bool>, std::__1::__unordered_map_hasher<NSString *, std::__1::__hash_value_type<NSString *, bool>, VZ::NSStringHashFunctor, true>, std::__1::__unordered_map_equal<NSString *, std::__1::__hash_value_type<NSString *, bool>, VZ::NSStringEqualFunctor, true>, std::__1::allocator<std::__1::__hash_value_type<NSString *, bool>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, bool>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, bool>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, bool>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, bool>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, bool>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<NSString *, bool>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<NSString *, std::__1::__hash_value_type<NSString *, bool>, VZ::NSStringHashFunctor, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<NSString *, std::__1::__hash_value_type<NSString *, bool>, VZ::NSStringEqualFunctor, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct vector<CLLocationCoordinate2D, std::__1::allocator<CLLocationCoordinate2D>> {
    struct CLLocationCoordinate2D *_field1;
    struct CLLocationCoordinate2D *_field2;
    struct __compressed_pair<CLLocationCoordinate2D *, std::__1::allocator<CLLocationCoordinate2D>> {
        struct CLLocationCoordinate2D *_field1;
    } _field3;
};

struct vector<MAClipper::IntersectState, std::__1::allocator<MAClipper::IntersectState>> {
    int *_field1;
    int *_field2;
    struct __compressed_pair<MAClipper::IntersectState *, std::__1::allocator<MAClipper::IntersectState>> {
        int *_field1;
    } _field3;
};

struct vector<MAGradientColoredLine::Vertex, std::__1::allocator<MAGradientColoredLine::Vertex>> {
    struct Vertex *_field1;
    struct Vertex *_field2;
    struct __compressed_pair<MAGradientColoredLine::Vertex *, std::__1::allocator<MAGradientColoredLine::Vertex>> {
        struct Vertex *_field1;
    } _field3;
};

struct vector<MANormalLineBuilder::Vertex, std::__1::allocator<MANormalLineBuilder::Vertex>> {
    struct Vertex *_field1;
    struct Vertex *_field2;
    struct __compressed_pair<MANormalLineBuilder::Vertex *, std::__1::allocator<MANormalLineBuilder::Vertex>> {
        struct Vertex *_field1;
    } _field3;
};

struct vector<RectDetectInfo, std::__1::allocator<RectDetectInfo>> {
    struct RectDetectInfo *_field1;
    struct RectDetectInfo *_field2;
    struct __compressed_pair<RectDetectInfo *, std::__1::allocator<RectDetectInfo>> {
        struct RectDetectInfo *_field1;
    } _field3;
};

struct vector<SchedualTask *, std::__1::allocator<SchedualTask *>> {
    struct SchedualTask **_field1;
    struct SchedualTask **_field2;
    struct __compressed_pair<SchedualTask **, std::__1::allocator<SchedualTask *>> {
        struct SchedualTask **_field1;
    } _field3;
};

struct vector<UIView *, std::__1::allocator<UIView *>> {
    id *__begin_;
    id *__end_;
    struct __compressed_pair<UIView *__strong *, std::__1::allocator<UIView *>> {
        id *__first_;
    } __end_cap_;
};

struct vector<VZ::MapAnnotationSpecs, std::__1::allocator<VZ::MapAnnotationSpecs>> {
    struct MapAnnotationSpecs *__begin_;
    struct MapAnnotationSpecs *__end_;
    struct __compressed_pair<VZ::MapAnnotationSpecs *, std::__1::allocator<VZ::MapAnnotationSpecs>> {
        struct MapAnnotationSpecs *__first_;
    } __end_cap_;
};

struct vector<VZ::MapOverlaySpecs, std::__1::allocator<VZ::MapOverlaySpecs>> {
    struct MapOverlaySpecs *__begin_;
    struct MapOverlaySpecs *__end_;
    struct __compressed_pair<VZ::MapOverlaySpecs *, std::__1::allocator<VZ::MapOverlaySpecs>> {
        struct MapOverlaySpecs *__first_;
    } __end_cap_;
};

struct vector<VZ::NodeLayout, std::__1::allocator<VZ::NodeLayout>> {
    struct NodeLayout *__begin_;
    struct NodeLayout *__end_;
    struct __compressed_pair<VZ::NodeLayout *, std::__1::allocator<VZ::NodeLayout>> {
        struct NodeLayout *__first_;
    } __end_cap_;
};

struct vector<VZFNode *, std::__1::allocator<VZFNode *>> {
    id *__begin_;
    id *__end_;
    struct __compressed_pair<VZFNode *__strong *, std::__1::allocator<VZFNode *>> {
        id *__first_;
    } __end_cap_;
};

struct vector<VZFStackChildNode, std::__1::allocator<VZFStackChildNode>> {
    CDStruct_183601bc *__begin_;
    CDStruct_183601bc *__end_;
    struct __compressed_pair<VZFStackChildNode *, std::__1::allocator<VZFStackChildNode>> {
        CDStruct_183601bc *__first_;
    } __end_cap_;
};

struct vector<Vector3<float>, std::__1::allocator<Vector3<float>>> {
    struct Vector3<float> *_field1;
    struct Vector3<float> *_field2;
    struct __compressed_pair<Vector3<float>*, std::__1::allocator<Vector3<float>>> {
        struct Vector3<float> *_field1;
    } _field3;
};

struct vector<Vector4<float>, std::__1::allocator<Vector4<float>>> {
    struct Vector4<float> *_field1;
    struct Vector4<float> *_field2;
    struct __compressed_pair<Vector4<float>*, std::__1::allocator<Vector4<float>>> {
        struct Vector4<float> *_field1;
    } _field3;
};

struct vector<char, std::__1::allocator<char>> {
    char *_field1;
    char *_field2;
    struct __compressed_pair<char *, std::__1::allocator<char>> {
        char *_field1;
    } _field3;
};

struct vector<float, std::__1::allocator<float>> {
    float *_field1;
    float *_field2;
    struct __compressed_pair<float *, std::__1::allocator<float>> {
        float *_field1;
    } _field3;
};

struct vector<gameplay::Node *, std::__1::allocator<gameplay::Node *>> {
    struct Node **_field1;
    struct Node **_field2;
    struct __compressed_pair<gameplay::Node **, std::__1::allocator<gameplay::Node *>> {
        struct Node **_field1;
    } _field3;
};

struct vector<short, std::__1::allocator<short>> {
    short *_field1;
    short *_field2;
    struct __compressed_pair<short *, std::__1::allocator<short>> {
        short *_field1;
    } _field3;
};

struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> {
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> *__begin_;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> *__end_;
    struct __compressed_pair<std::__1::basic_string<char>*, std::__1::allocator<std::__1::basic_string<char>>> {
        struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> *__first_;
    } __end_cap_;
};

struct vector<std::__1::vector<Vector3<float>, std::__1::allocator<Vector3<float>>>, std::__1::allocator<std::__1::vector<Vector3<float>, std::__1::allocator<Vector3<float>>>>> {
    vector_f60ea51c *_field1;
    vector_f60ea51c *_field2;
    struct __compressed_pair<std::__1::vector<Vector3<float>, std::__1::allocator<Vector3<float>>>*, std::__1::allocator<std::__1::vector<Vector3<float>, std::__1::allocator<Vector3<float>>>>> {
        vector_f60ea51c *_field1;
    } _field3;
};

struct vector<std::basic_string<char>, std::allocator<std::basic_string<char>>> {
    struct _Vector_impl _field1;
};

struct vector<unsigned char, std::__1::allocator<unsigned char>> {
    char *_field1;
    char *_field2;
    struct __compressed_pair<unsigned char *, std::__1::allocator<unsigned char>> {
        char *_field1;
    } _field3;
};

struct vector<unsigned short, std::__1::allocator<unsigned short>> {
    unsigned short *_field1;
    unsigned short *_field2;
    struct __compressed_pair<unsigned short *, std::__1::allocator<unsigned short>> {
        unsigned short *_field1;
    } _field3;
};

struct weak_ptr<videocore::IOutput> {
    struct IOutput *_field1;
    struct __shared_weak_count *_field2;
};

struct weak_ptr<videocore::iOS::CameraSource> {
    struct CameraSource *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct weak_ptr<videocore::iOS::MicSource> {
    struct MicSource *_field1;
    struct __shared_weak_count *_field2;
};

struct z_stream_s {
    char *next_in;
    unsigned int avail_in;
    unsigned long long total_in;
    char *next_out;
    unsigned int avail_out;
    unsigned long long total_out;
    char *msg;
    struct internal_state *state;
    CDUnknownFunctionPointerType zalloc;
    CDUnknownFunctionPointerType zfree;
    void *opaque;
    int data_type;
    unsigned long long adler;
    unsigned long long reserved;
};

#if 0
// Names with conflicting types:
typedef struct {
    vector_195fe69b _field1;
    struct vector<MAGradientColoredLine::Vertex, std::__1::allocator<MAGradientColoredLine::Vertex>> _field2;
} Drawable_98991264;

typedef struct {
    vector_195fe69b _field1;
    struct vector<MANormalLineBuilder::Vertex, std::__1::allocator<MANormalLineBuilder::Vertex>> _field2;
    vector_195fe69b _field3;
    vector_195fe69b _field4;
} Drawable_97df83bd;

typedef struct {
    CDUnknownFunctionPointerType *_field1;
    float _field2;
    float _field3;
    struct Drawable {
        vector_195fe69b _field1;
        struct vector<MANormalLineBuilder::Vertex, std::__1::allocator<MANormalLineBuilder::Vertex>> _field2;
        vector_195fe69b _field3;
        vector_195fe69b _field4;
    } _field4;
    vector_f60ea51c _field5;
    struct vector<float, std::__1::allocator<float>> _field6;
} MALineBuilder_6dabcb35;

typedef struct {
    CDUnknownFunctionPointerType *_field1;
    float _field2;
    float _field3;
    struct Vector4<float> _field4;
    struct Drawable {
        vector_195fe69b _field1;
        struct vector<MAGradientColoredLine::Vertex, std::__1::allocator<MAGradientColoredLine::Vertex>> _field2;
    } _field5;
    vector_f60ea51c _field6;
    struct vector<float, std::__1::allocator<float>> _field7;
    struct vector<Vector4<float>, std::__1::allocator<Vector4<float>>> _field8;
} MALineBuilder_3b276b09;

#endif

#pragma mark Typedef'd Structures

typedef struct {
    id _field1;
    unsigned short _field2;
} CDStruct_6a59ab51;

typedef struct {
    _Bool _field1;
    unsigned char _field2;
    _Bool _field3;
    unsigned long long _field4;
} CDStruct_6a6a01a4;

typedef struct {
    _Bool set;
    unsigned char flags;
    int value;
} CDStruct_2ea23212;

typedef struct {
    _Bool _field1;
    unsigned int _field2;
} CDStruct_06d3d77b;

typedef struct {
    unsigned long long _field1;
    id *_field2;
    unsigned long long *_field3;
    unsigned long long _field4[5];
} CDStruct_70511ce9;

typedef struct {
    unsigned long long _field1;
    long long _field2;
} CDStruct_3f164e09;

typedef struct {
    CDUnknownFunctionPointerType _field1;
    CDUnknownFunctionPointerType _field2;
    CDUnknownFunctionPointerType _field3;
    CDUnknownFunctionPointerType _field4;
    CDUnknownFunctionPointerType _field5;
    CDUnknownFunctionPointerType _field6;
    CDUnknownFunctionPointerType _field7;
    CDUnknownFunctionPointerType _field8;
    CDUnknownFunctionPointerType _field9;
    CDUnknownFunctionPointerType _field10;
    CDUnknownFunctionPointerType _field11;
    CDUnknownFunctionPointerType _field12;
    CDUnknownFunctionPointerType _field13;
    CDUnknownFunctionPointerType _field14;
    CDUnknownFunctionPointerType _field15;
    CDUnknownFunctionPointerType _field16;
    CDUnknownFunctionPointerType _field17;
    CDUnknownFunctionPointerType _field18;
    CDUnknownFunctionPointerType _field19;
    CDUnknownFunctionPointerType _field20;
    CDUnknownFunctionPointerType _field21;
    CDUnknownFunctionPointerType _field22;
    CDUnknownFunctionPointerType _field23;
    CDUnknownFunctionPointerType _field24;
    CDUnknownFunctionPointerType _field25;
    CDUnknownFunctionPointerType _field26;
    CDUnknownFunctionPointerType _field27;
    CDUnknownFunctionPointerType _field28;
    CDUnknownFunctionPointerType _field29;
    CDUnknownFunctionPointerType _field30;
    CDUnknownFunctionPointerType _field31;
    CDUnknownFunctionPointerType _field32;
} CDStruct_5b658558;

typedef struct {
    CDUnknownFunctionPointerType _field1;
    CDUnknownFunctionPointerType _field2;
    CDUnknownFunctionPointerType _field3;
    CDUnknownFunctionPointerType _field4;
    CDUnknownFunctionPointerType _field5;
    CDUnknownFunctionPointerType _field6;
    CDUnknownFunctionPointerType _field7;
    CDUnknownFunctionPointerType _field8;
    CDUnknownFunctionPointerType _field9;
    CDUnknownFunctionPointerType _field10;
    CDUnknownFunctionPointerType _field11;
    CDUnknownFunctionPointerType _field12;
    CDUnknownFunctionPointerType _field13;
    CDUnknownFunctionPointerType _field14;
    CDUnknownFunctionPointerType _field15;
} CDStruct_e6af4fdc;

typedef struct {
    CDUnknownFunctionPointerType _field1;
    CDUnknownFunctionPointerType _field2;
    CDUnknownFunctionPointerType _field3;
    CDUnknownFunctionPointerType _field4;
} CDStruct_4e53fc95;

typedef struct {
    void *_field1;
    unsigned int _field2;
} CDStruct_f8bc7150;

typedef struct {
    unsigned int state:2;
} CDStruct_4fc7c3d9;

typedef struct {
    unsigned int _exponent:8;
    unsigned int _length:4;
    unsigned int _isNegative:1;
    unsigned int _isCompact:1;
    unsigned int _reserved:18;
    unsigned short _mantissa[8];
} CDStruct_6ece915e;

typedef struct {
    double doubleValue;
    unsigned long long dLength;
} CDStruct_2b56ed6f;

typedef struct {
    double topLeft;
    double topRight;
    double bottomLeft;
    double bottomRight;
} CDStruct_ba12166d;

typedef struct {
    double x;
    double y;
    double z;
} CDStruct_31142d93;

typedef struct {
    float _field1;
    int _field2;
} CDStruct_1253fce2;

typedef struct {
    int iInitFlag;
    int iLenWelcoming[3];
    int iLenNumbers[10];
    int iLenPoint;
    int iLenYuan;
    int iLenTen;
    int iLenHundred;
    int iLenThousand;
    int iLenTenThousand;
    int iLenHundredMillion;
    int iNone;
    short sWelcoming[3][3200];
    short sNumbers[10][1328];
    short sPoint[1328];
    short sYuan[1328];
    short sTen[1328];
    short sHundred[1328];
    short sThousand[1328];
    short sTenThousand[1328];
    short sHundredMillion[1328];
    short None[8];
} CDStruct_61badc44;

typedef struct {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
} CDStruct_a734b2e2;

typedef struct {
    int status;
    int icon;
} CDStruct_a846bce0;

typedef struct {
    int timeflag;
    long long year;
    long long month;
    long long day;
    long long hour;
    long long minute;
    long long second;
} CDStruct_1ed7117a;

typedef struct {
    long long version;
    void *info;
    CDUnknownFunctionPointerType retain;
    CDUnknownFunctionPointerType release;
    CDUnknownFunctionPointerType copyDescription;
} CDStruct_4210025a;

typedef struct {
    long long value;
    int timescale;
    unsigned int flags;
    long long epoch;
} CDStruct_1b6d18a9;

typedef struct {
    long long _field1;
    int _field2;
} CDStruct_87dc826d;

typedef struct CDStruct_183601bc;

typedef struct {
    struct map_node_t **_field1;
    unsigned int _field2;
    unsigned int _field3;
} CDStruct_a086822f;

typedef struct {
    char *_field1;
    char _field2;
    float _field3;
    unsigned long long _field4;
    float _field5;
    float _field6;
    float _field7;
    float _field8;
    int _field9;
    struct TSGAffineTransform *_field10;
} CDStruct_37bc563a;

typedef struct {
    float *_field1;
    float *_field2;
    float *_field3;
    unsigned long long _field4;
    unsigned long long _field5;
    unsigned long long _field6;
    unsigned long long _field7;
    float _field8;
    float _field9;
    float _field10;
    struct TSGAffineTransform *_field11;
} CDStruct_77062993;

typedef struct {
    CDStruct_183601bc *_field1;
    unsigned long long _field2;
    unsigned long long *_field3;
    char _field4;
} CDStruct_b3e1d474;

typedef struct {
    CDStruct_183601bc *_field1;
    unsigned long long _field2;
} CDStruct_7ba9a352;

typedef struct {
    CDStruct_183601bc *_field1;
    int _field2;
} CDStruct_af61540b;

typedef struct {
    float _field1;
    float _field2;
    float _field3;
    float _field4;
    struct TSGAffineTransform *_field5;
} CDStruct_dda89b6c;

typedef struct {
    struct {
        double x;
        double y;
    } origin;
    struct {
        double width;
        double height;
    } size;
} CDStruct_02837cd9;

typedef struct {
    CDStruct_1b6d18a9 _field1;
    CDStruct_1b6d18a9 _field2;
} CDStruct_5c5366e1;

typedef struct {
    struct CLLocationCoordinate2D center;
    CDStruct_951efa70 span;
} CDStruct_b7cb895d;

typedef struct {
    struct tm_zip_s _field1;
    unsigned long long _field2;
    unsigned long long _field3;
    unsigned long long _field4;
} CDStruct_192a48cb;

typedef struct {
    _Bool has_face;
    float yaw;
    float pitch;
    float blurness_motion;
    float blurness_gaussian;
    struct CGRect face_rect;
    float eye_left_hwratio;
    float eye_right_hwratio;
    float mouth_hwratio;
    float glasses;
    float brightness;
    float integrity;
    int frame_type;
    _Bool not_video;
    float smooth_yaw;
    float smooth_pitch;
    float eye_left_det;
    float eye_right_det;
    float mouth_det;
    float eye_left_occlusion;
    float eye_right_occlusion;
    float mouth_occlusion;
    _Bool eye_blink;
    _Bool mouth_open;
    _Bool pitch3d;
    float quality;
    float smooth_quality;
} CDStruct_1e35fe44;

typedef struct {
    char *_field1;
    struct {
        float _field1;
        float _field2;
        float _field3;
        float _field4;
    } _field2;
    CDStruct_dda89b6c _field3;
} CDStruct_743a05fb;

typedef struct {
    unsigned int searchState:2;
    struct CGRect originSearchBarFrame;
    struct CGRect searchBarFrame;
} CDStruct_5a3e4123;

typedef struct {
    int keyCode;
    struct CGRect frame;
    int keyType;
} CDStruct_329a2377;

typedef struct {
    long long _field1;
    char *_field2;
    struct CGRect _field3;
} CDStruct_3f8cc62a;

typedef struct {
    CDStruct_a086822f _field1;
    char **_field2;
    char *_field3;
} CDStruct_e2b8aef9;

typedef struct {
    unsigned long long _field1;
    struct {
        union {
            CDStruct_dda89b6c _field1;
            struct {
                float *_field1;
                float *_field2;
                unsigned long long _field3;
                struct TSGAffineTransform *_field4;
            } _field2;
            struct {
                float _field1;
                float _field2;
                float _field3;
                struct TSGAffineTransform *_field4;
            } _field3;
        } _field1;
        unsigned int _field2;
    } _field2;
} CDStruct_7fd1f497;

typedef struct {
    union {
        CDStruct_37bc563a _field1;
        CDStruct_743a05fb _field2;
        CDStruct_7fd1f497 _field3;
    } _field1;
    unsigned int _field2;
} CDStruct_c337d9ca;

// Ambiguous groups
typedef struct {
    double _field1;
    double _field2;
} CDStruct_c3b9c2ee;

typedef struct {
    double latitudeDelta;
    double longitudeDelta;
} CDStruct_951efa70;

typedef struct {
    long long _field1;
    long long _field2;
} CDStruct_912cb5d2;

typedef struct shared_ptr<std::__1::vector<short, std::__1::allocator<short>>> {
    struct vector<short, std::__1::allocator<short>> *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_43114c12;

typedef struct vector<VZ::NodeLayout, std::__1::allocator<VZ::NodeLayout>> {
    struct NodeLayout *__begin_;
    struct NodeLayout *__end_;
    struct __compressed_pair<VZ::NodeLayout *, std::__1::allocator<VZ::NodeLayout>> {
        struct NodeLayout *__first_;
    } __end_cap_;
} vector_48e1f07d;

typedef struct vector<VZFNode *, std::__1::allocator<VZFNode *>> {
    id *__begin_;
    id *__end_;
    struct __compressed_pair<VZFNode *__strong *, std::__1::allocator<VZFNode *>> {
        id *__first_;
    } __end_cap_;
} vector_dffc2367;

typedef struct vector<VZFStackChildNode, std::__1::allocator<VZFStackChildNode>> {
    CDStruct_183601bc *__begin_;
    CDStruct_183601bc *__end_;
    struct __compressed_pair<VZFStackChildNode *, std::__1::allocator<VZFStackChildNode>> {
        CDStruct_183601bc *__first_;
    } __end_cap_;
} vector_c3f6c41e;

typedef struct vector<Vector3<float>, std::__1::allocator<Vector3<float>>> {
    struct Vector3<float> *_field1;
    struct Vector3<float> *_field2;
    struct __compressed_pair<Vector3<float>*, std::__1::allocator<Vector3<float>>> {
        struct Vector3<float> *_field1;
    } _field3;
} vector_f60ea51c;

typedef struct vector<std::__1::vector<Vector3<float>, std::__1::allocator<Vector3<float>>>, std::__1::allocator<std::__1::vector<Vector3<float>, std::__1::allocator<Vector3<float>>>>> {
    vector_f60ea51c *_field1;
    vector_f60ea51c *_field2;
    struct __compressed_pair<std::__1::vector<Vector3<float>, std::__1::allocator<Vector3<float>>>*, std::__1::allocator<std::__1::vector<Vector3<float>, std::__1::allocator<Vector3<float>>>>> {
        vector_f60ea51c *_field1;
    } _field3;
} vector_aac46ba0;

typedef struct vector<std::basic_string<char>, std::allocator<std::basic_string<char>>> {
    struct _Vector_impl _field1;
} vector_9cd42a6f;

typedef struct vector<unsigned char, std::__1::allocator<unsigned char>> {
    char *_field1;
    char *_field2;
    struct __compressed_pair<unsigned char *, std::__1::allocator<unsigned char>> {
        char *_field1;
    } _field3;
} vector_5b3bfa18;

typedef struct vector<unsigned short, std::__1::allocator<unsigned short>> {
    unsigned short *_field1;
    unsigned short *_field2;
    struct __compressed_pair<unsigned short *, std::__1::allocator<unsigned short>> {
        unsigned short *_field1;
    } _field3;
} vector_195fe69b;

typedef struct weak_ptr<videocore::iOS::CameraSource> {
    struct CameraSource *__ptr_;
    struct __shared_weak_count *__cntrl_;
} weak_ptr_48e2a55c;

#pragma mark Typedef'd Unions

typedef union {
    int _enump;
    int _int32p;
    long long _int64p;
    unsigned int _uint32p;
    unsigned long long _uint64p;
    _Bool _boolp;
    float _float32p;
    double _float64p;
} CDUnion_9d145f3c;

