//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

#import "INVCore-Protocol.h"
#import "MSPlayerAdaptorDelegate-Protocol.h"

@class INVCorePlayItem, MPVolumeView, MSPlayer, MSPlayerAdaptor, NSError, NSString, NSURL, UIView;
@protocol INVCoreDelegate, INVCorePreFetcher;

@interface MSCore : NSObject <MSPlayerAdaptorDelegate, INVCore>
{
    _Bool _canStepForward;
    _Bool _canStepBackward;
    _Bool _canUseNetworkResourcesForLiveStreamingWhilePaused;
    _Bool _customVideoOutputs;
    _Bool _isInSeeking;
    _Bool _isSoundOpen;
    id <INVCorePreFetcher> _preFetcher;
    UIView *_videoView;
    long long _scalingMode;
    NSURL *_contentURL;
    double _volume;
    id <INVCoreDelegate> _delegate;
    MSPlayerAdaptor *_currentAdaptor;
    MSPlayer *_player;
    id _periodicTimeObserver;
    MPVolumeView *_fakeVolumeView;
    double _totalDuration;
    double _playableDuration;
    double _playbackTime;
    double _bitRate;
    long long _loadingState;
    long long _playbackState;
    unsigned long long _finishReason;
    long long _playthroughState;
    double _loadedPercent;
    NSError *_error;
    INVCorePlayItem *_curPlayItem;
    struct CGSize _preferSize;
    struct {
        double start;
        double duration;
    } _timeRange;
}

+ (_Bool)isSupportMediaType:(id)arg1;
+ (_Bool)isAvailable;
@property(nonatomic) CDStruct_c3b9c2ee timeRange; // @synthesize timeRange=_timeRange;
@property(retain, nonatomic) INVCorePlayItem *curPlayItem; // @synthesize curPlayItem=_curPlayItem;
@property(nonatomic) _Bool isSoundOpen; // @synthesize isSoundOpen=_isSoundOpen;
@property(retain, nonatomic) NSError *error; // @synthesize error=_error;
@property(nonatomic) double loadedPercent; // @synthesize loadedPercent=_loadedPercent;
@property(nonatomic) long long playthroughState; // @synthesize playthroughState=_playthroughState;
@property(nonatomic) unsigned long long finishReason; // @synthesize finishReason=_finishReason;
@property(nonatomic) long long playbackState; // @synthesize playbackState=_playbackState;
@property(nonatomic) long long loadingState; // @synthesize loadingState=_loadingState;
@property(nonatomic) double bitRate; // @synthesize bitRate=_bitRate;
@property(nonatomic) double playbackTime; // @synthesize playbackTime=_playbackTime;
@property(nonatomic) double playableDuration; // @synthesize playableDuration=_playableDuration;
@property(nonatomic) double totalDuration; // @synthesize totalDuration=_totalDuration;
@property(retain, nonatomic) MPVolumeView *fakeVolumeView; // @synthesize fakeVolumeView=_fakeVolumeView;
@property(nonatomic) _Bool isInSeeking; // @synthesize isInSeeking=_isInSeeking;
@property(retain, nonatomic) id periodicTimeObserver; // @synthesize periodicTimeObserver=_periodicTimeObserver;
@property(retain, nonatomic) MSPlayer *player; // @synthesize player=_player;
@property(retain, nonatomic) MSPlayerAdaptor *currentAdaptor; // @synthesize currentAdaptor=_currentAdaptor;
@property(nonatomic) _Bool customVideoOutputs; // @synthesize customVideoOutputs=_customVideoOutputs;
@property(nonatomic) id <INVCoreDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) _Bool canUseNetworkResourcesForLiveStreamingWhilePaused; // @synthesize canUseNetworkResourcesForLiveStreamingWhilePaused=_canUseNetworkResourcesForLiveStreamingWhilePaused;
@property(nonatomic) double volume; // @synthesize volume=_volume;
@property(nonatomic) long long scalingMode; // @synthesize scalingMode=_scalingMode;
@property(readonly, retain, nonatomic) UIView *videoView; // @synthesize videoView=_videoView;
- (void)adaptor:(id)arg1 backupContentURLForCurContentURL:(id)arg2 withPreloadKey:(id)arg3 withCompletion:(CDUnknownBlockType)arg4;
- (_Bool)adaptor:(id)arg1 shouldRetryWithReason:(long long)arg2;
@property(readonly, retain, nonatomic) id <INVCorePreFetcher> preFetcher; // @synthesize preFetcher=_preFetcher;
- (void)snapshotAtPlaybackTime:(double)arg1 completion:(CDUnknownBlockType)arg2;
@property(readonly, nonatomic) struct CGSize preferSize; // @synthesize preferSize=_preferSize;
- (void)openSound:(_Bool)arg1;
- (void)updatePlayerVolume:(double)arg1;
@property(readonly, nonatomic) _Bool canStepForward; // @synthesize canStepForward=_canStepForward;
@property(readonly, nonatomic) _Bool canStepBackward; // @synthesize canStepBackward=_canStepBackward;
@property(readonly, retain, nonatomic) NSURL *contentURL; // @synthesize contentURL=_contentURL;
- (void)tryPlay:(id)arg1;
- (_Bool)seekToTimeRange:(CDStruct_c3b9c2ee)arg1;
- (_Bool)_seekToTime:(double)arg1;
- (_Bool)seekToTime:(double)arg1;
- (void)_asyncReleasePlayer:(id)arg1;
- (void)_stopPlayer;
- (void)stop;
- (void)pause;
- (void)play;
- (void)autoPlayIfNeed:(_Bool)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)playerItemNewErrorLogEntryNotification:(id)arg1;
- (void)playerItemNewAccessLogEntryNotification:(id)arg1;
- (void)playerItemPlaybackStalledNotification:(id)arg1;
- (void)playerItemFailedToPlayToEndTimeNotification:(id)arg1;
- (void)playerItemDidPlayToEndTimeNotification:(id)arg1;
- (void)playerItemTimeJumpedNotification:(id)arg1;
- (void)audioSessionRouteChangeNotification:(id)arg1;
- (CDStruct_1b6d18a9)replayStartTime;
- (_Bool)checkVideoHasPlaybackToEnd;
- (void)notifyPlaythroughState:(long long)arg1;
- (void)notifyCurrentPlaybackTimeDidChanged:(double)arg1;
- (void)notifyVolumeDidChanged;
- (void)notifyPlayerTotalDurationChanged;
- (void)_notifyPlayerPlayableDurationChanged:(double)arg1;
- (void)notifyPlayerPlayableDurationChanged;
- (void)notifyPlayerPlaybackState:(long long)arg1;
- (void)notifyPlayerLoadingStateChanged;
- (void)notifyPlayerFinishReason:(unsigned long long)arg1;
- (void)prepareToPlayPlayerItem:(id)arg1;
- (void)prepareToPlayContentURL:(id)arg1 preloadKey:(id)arg2;
- (void)preparePlayerIfNeedWithItem:(id)arg1;
- (long long)possiablePlayerType;
- (void)updatePlayerSound;
- (void)unregisterObserversForPlayer;
- (void)registerObserversForPlayer;
- (void)unregisterObserversForAdaptor;
- (void)registerObserversForAdaptor;
- (void)registerObserversForNotification;
- (void)removeVolumeObserver;
- (void)addVolumeObserver;
- (void)addPeriodicTimeObserver;
- (void)removePeriodicTimeObserver;
- (void)updateVideoGravity;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

