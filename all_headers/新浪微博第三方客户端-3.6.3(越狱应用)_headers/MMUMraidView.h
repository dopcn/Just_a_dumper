//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <UIKit/UIView.h>

#import "UIWebViewDelegate-Protocol.h"

@class NSDictionary, NSError, NSString, UIButton, UIDevice, UIWebView;
@protocol MMUMraidViewDelegate;

@interface MMUMraidView : UIView <UIWebViewDelegate>
{
    UIDevice *_mCurrentDevice;
    UIWebView *_mWebView;
    struct CGRect _mDefaultFrame;
    struct CGRect _mTranslatedFrame;
    long long _mOriginalTag;
    long long _mParentTag;
    UIButton *_mBlockingView;
    UIButton *_mCloseBtn;
    _Bool _mApplicationReady;
    _Bool _mLoadingAd;
    long long _mModalityCounter;
    _Bool allowAdOrientation;
    struct CGRect _mOriginalFrame;
    struct CGAffineTransform _mOriginalTransform;
    struct CGRect _mExpandedFrame;
    _Bool _mIsDisplayed;
    double _mScale;
    _Bool _mbFirstCreativeReady;
    NSDictionary *_mJsCallParameters;
    _Bool _mReadyToShow;
    _Bool _mShouldFireReadyEvent;
    int _mCurrentState;
    int _mPlacementType;
    id <MMUMraidViewDelegate> _delegate;
    NSError *_mLastError;
    NSDictionary *_mShownCreativeParameters;
    NSString *_mPlacementTypeStr;
    UIView *_hitTestView;
    struct CGSize _maxSize;
}

@property(retain, nonatomic) UIView *hitTestView; // @synthesize hitTestView=_hitTestView;
@property(copy, nonatomic) NSString *mPlacementTypeStr; // @synthesize mPlacementTypeStr=_mPlacementTypeStr;
@property(retain, nonatomic) NSDictionary *mShownCreativeParameters; // @synthesize mShownCreativeParameters=_mShownCreativeParameters;
@property(nonatomic) _Bool mShouldFireReadyEvent; // @synthesize mShouldFireReadyEvent=_mShouldFireReadyEvent;
@property(readonly, retain, nonatomic) UIWebView *mWebView; // @synthesize mWebView=_mWebView;
@property(nonatomic) int mPlacementType; // @synthesize mPlacementType=_mPlacementType;
@property(readonly, nonatomic) int mCurrentState; // @synthesize mCurrentState=_mCurrentState;
@property(readonly, nonatomic) _Bool mReadyToShow; // @synthesize mReadyToShow=_mReadyToShow;
@property(retain, nonatomic) NSError *mLastError; // @synthesize mLastError=_mLastError;
@property(nonatomic) struct CGSize maxSize; // @synthesize maxSize=_maxSize;
@property(nonatomic) id <MMUMraidViewDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)productViewControllerDidFinish:(id)arg1;
- (void)showStoreViewForPromoter:(id)arg1 appId:(id)arg2 parameters:(id)arg3;
- (_Bool)shouldOpenPromoterByStoreKit:(id)arg1;
- (void)gotoAppStoreForPromoter:(id)arg1 parameters:(id)arg2;
- (void)locationChanged:(id)arg1;
- (void)networkChanged:(id)arg1;
- (void)orientationChanged:(id)arg1;
- (void)screenSizeChanged:(id)arg1;
- (long long)currentInterfaceOrientation;
- (struct CGSize)statusBarSize:(struct CGSize)arg1 accordingToOrientation:(long long)arg2;
- (struct CGRect)convertedRectAccordingToOrientation:(struct CGRect)arg1;
- (struct CGRect)rectAccordingToOrientation:(struct CGRect)arg1;
- (struct CGRect)webFrameAccordingToOrientation:(struct CGRect)arg1;
- (void)rotateExpandedWindowsToOrientation:(long long)arg1;
- (void)alwaysSetFrame:(struct CGRect)arg1;
- (void)setFrame:(struct CGRect)arg1;
- (double)overlappedRate;
- (_Bool)isApplicationActive;
- (double)webViewTouchableArea;
- (_Bool)isWebViewTouchableAtPoint:(struct CGPoint)arg1;
- (_Bool)isWebViewHidden;
- (_Bool)isWebViewAddedToWindow;
- (void)logFrame:(struct CGRect)arg1 text:(id)arg2;
- (void)fireViewableChange;
- (void)setJavascriptDefaultFrame:(struct CGRect)arg1;
- (void)callSelectorOnDelegate:(SEL)arg1;
- (void)fireAdDidClicked;
- (void)fireAppShouldResume;
- (void)fireAppShouldSuspend;
- (void)fireAdDidExpandToFrame:(struct CGRect)arg1;
- (void)fireAdWillExpandToFrame:(struct CGRect)arg1;
- (void)fireAdDidResizeToSize:(struct CGSize)arg1;
- (void)fireAdWillResizeToSize:(struct CGSize)arg1;
- (void)fireAdDidClose;
- (void)fireAdWillClose;
- (void)fireAdDidHide;
- (void)fireAdWillHide;
- (void)fireAdDidShow;
- (void)fireAdWillShow;
- (void)injectMraidStateIntoWebView:(id)arg1;
- (void)injectJavaScriptIntoWebView:(id)arg1;
- (void)willDismissWebViewController:(id)arg1;
- (void)blockingViewTouched:(id)arg1;
- (void)closeFinished:(id)arg1;
- (void)expandFinished:(id)arg1;
- (void)rotateExpandedWindowsToCurrentOrientation;
- (void)showBlockingView;
- (void)hideBlockingView;
- (void)checkAppInstalled:(id)arg1 parameters:(id)arg2;
- (void)openBrowser:(id)arg1 parameters:(id)arg2;
- (void)sendSMS:(id)arg1 parameters:(id)arg2;
- (void)messageComposeViewController:(id)arg1 didFinishWithResult:(int)arg2;
- (void)openMap:(id)arg1 parameters:(id)arg2;
- (void)makeCall:(id)arg1 parameters:(id)arg2;
- (void)download:(id)arg1 parameters:(id)arg2;
- (void)openWebView:(id)arg1 withUrlString:(id)arg2 parameters:(id)arg3;
- (void)fireActionChangeEventWithActionParameters:(id)arg1 jsParameters:(id)arg2;
- (struct CGRect)getAdFrameInWindowCoordinates;
- (void)expandTo:(struct CGRect)arg1 withURL:(id)arg2 inWebView:(id)arg3 useCustomClose:(_Bool)arg4 blockingColor:(id)arg5 blockingOpacity:(double)arg6 lockOrientation:(_Bool)arg7 parameters:(id)arg8;
- (void)closeAd:(id)arg1 parameters:(id)arg2;
- (void)hideAd:(id)arg1 parameters:(id)arg2;
- (void)showAd:(id)arg1 parameters:(id)arg2;
- (void)creativeRequestError:(id)arg1 parameters:(id)arg2;
- (void)creativeShow:(id)arg1 parameters:(id)arg2;
- (id)javascriptStrWithEventName:(id)arg1 eventValue:(id)arg2 optionParameters:(id)arg3;
- (id)usingWebView:(id)arg1 executeJavascript:(id)arg2 withVarArgs:(char *)arg3;
- (id)usingWebView:(id)arg1 executeJavascript:(id)arg2;
- (id)webView;
- (id)executeJavascript:(id)arg1;
- (void)executeJS;
- (_Bool)getisDisplayed;
- (void)fireTemplateDataReadyEvent:(id)arg1;
- (void)mraidViewDisplayed:(_Bool)arg1;
- (void)restoreToDefaultState;
- (void)loadCreative:(id)arg1;
- (void)webViewDidFinishLoad:(id)arg1;
- (_Bool)webView:(id)arg1 shouldStartLoadWithRequest:(id)arg2 navigationType:(long long)arg3;
- (void)webView:(id)arg1 didFailLoadWithError:(id)arg2;
- (void)dealloc;
- (void)fireCloseEvent;
- (void)addDevicePropertyChangeNotification;
- (void)commonInitialization;
- (id)initWithFrame:(struct CGRect)arg1;

@end

