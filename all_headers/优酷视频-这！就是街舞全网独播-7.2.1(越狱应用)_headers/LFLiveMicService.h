//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

@class LFLiveMicInfoProcess, LFLiveMicModel, LFLiveStreamModel, LFMessageDispatcher, NSString;

@interface LFLiveMicService : NSObject
{
    _Bool _requestCanceld;
    _Bool _canReceiveMessage;
    LFLiveMicModel *_micInfoModel;
    LFLiveStreamModel *_streamInfoModel;
    CDUnknownBlockType _errorNotifyBlock;
    LFMessageDispatcher *_dispatcher;
    CDUnknownBlockType _urlRequestStartBlock;
    CDUnknownBlockType _urlRequestStopBlock;
    LFLiveMicInfoProcess *_micProcess;
    NSString *_roomId;
}

@property(nonatomic) _Bool canReceiveMessage; // @synthesize canReceiveMessage=_canReceiveMessage;
@property(copy, nonatomic) NSString *roomId; // @synthesize roomId=_roomId;
@property(retain, nonatomic) LFLiveMicInfoProcess *micProcess; // @synthesize micProcess=_micProcess;
@property(nonatomic) _Bool requestCanceld; // @synthesize requestCanceld=_requestCanceld;
@property(copy, nonatomic) CDUnknownBlockType urlRequestStopBlock; // @synthesize urlRequestStopBlock=_urlRequestStopBlock;
@property(copy, nonatomic) CDUnknownBlockType urlRequestStartBlock; // @synthesize urlRequestStartBlock=_urlRequestStartBlock;
@property(retain, nonatomic) LFMessageDispatcher *dispatcher; // @synthesize dispatcher=_dispatcher;
@property(copy, nonatomic) CDUnknownBlockType errorNotifyBlock; // @synthesize errorNotifyBlock=_errorNotifyBlock;
@property(retain, nonatomic) LFLiveStreamModel *streamInfoModel; // @synthesize streamInfoModel=_streamInfoModel;
@property(retain, nonatomic) LFLiveMicModel *micInfoModel; // @synthesize micInfoModel=_micInfoModel;
- (void).cxx_destruct;
- (void)networkStatusChangeNotification:(id)arg1;
- (void)receiveStreamInfoByProcesser:(id)arg1;
- (void)receiveMicInfoByProcesser:(id)arg1;
- (void)receiveBoardCastByProcesser:(id)arg1;
- (void)getMicInfo:(id)arg1;
- (void)dealloc;
- (id)initWithDispatcher:(id)arg1;

@end

