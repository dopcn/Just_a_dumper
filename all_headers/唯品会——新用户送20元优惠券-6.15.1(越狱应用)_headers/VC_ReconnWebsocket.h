//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class NSArray, NSString, NSTimer, RealReachability, VC_WebSocket;

@interface VC_ReconnWebsocket : NSObject
{
    NSArray *subProtocols;
    VC_WebSocket *ws;
    _Bool forcedClose;
    unsigned char notPongTimes;
    NSTimer *pingTimer;
    int currNetType;
    RealReachability *internetReachability;
    _Bool releaseConn;
    _Bool canUseWebsocket;
    int readyState;
    NSString *currentURL;
    CDUnknownBlockType _onOpenEvent;
    CDUnknownBlockType _onConnectingEvent;
    CDUnknownBlockType _onWebsocketLostEvnt;
    CDUnknownBlockType _onCloseEvent;
    CDUnknownBlockType _onErrorEvent;
    CDUnknownBlockType _onMessageEvent;
}

@property(copy, nonatomic) CDUnknownBlockType onMessageEvent; // @synthesize onMessageEvent=_onMessageEvent;
@property(copy, nonatomic) CDUnknownBlockType onErrorEvent; // @synthesize onErrorEvent=_onErrorEvent;
@property(copy, nonatomic) CDUnknownBlockType onCloseEvent; // @synthesize onCloseEvent=_onCloseEvent;
@property(copy, nonatomic) CDUnknownBlockType onWebsocketLostEvnt; // @synthesize onWebsocketLostEvnt=_onWebsocketLostEvnt;
@property(copy, nonatomic) CDUnknownBlockType onConnectingEvent; // @synthesize onConnectingEvent=_onConnectingEvent;
@property(copy, nonatomic) CDUnknownBlockType onOpenEvent; // @synthesize onOpenEvent=_onOpenEvent;
@property(readonly) _Bool canUseWebsocket; // @synthesize canUseWebsocket;
@property(readonly) int readyState; // @synthesize readyState;
@property(readonly) _Bool releaseConn; // @synthesize releaseConn;
@property(readonly) NSString *currentURL; // @synthesize currentURL;
- (void).cxx_destruct;
- (void)closeNotification;
- (void)closeManager;
- (void)toReconn;
- (void)reachabilityChanged:(id)arg1;
- (void)sendText:(id)arg1 error:(id *)arg2;
- (void)sendBinary:(id)arg1 error:(id *)arg2;
- (void)forceClose:(id *)arg1;
- (void)close:(id *)arg1;
- (void)ping:(id)arg1;
- (void)openSocket;
- (id)initWithUrl:(id)arg1 subProtos:(id)arg2;
- (void)dealloc;
- (id)init;

@end

