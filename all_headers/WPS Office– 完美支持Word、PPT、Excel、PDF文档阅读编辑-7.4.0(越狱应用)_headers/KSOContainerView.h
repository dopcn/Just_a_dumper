//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <UIKit/UIView.h>

#import "KSOListContainerViewDataSource-Protocol.h"
#import "KSOListContainerViewDelegate-Protocol.h"

@class CALayer, KSOListContainerView, NSLayoutConstraint, NSMutableArray, NSMutableDictionary, NSString;
@protocol KSOContainerViewDataSource, KSOContainerViewDelegate;

@interface KSOContainerView : UIView <KSOListContainerViewDataSource, KSOListContainerViewDelegate>
{
    NSMutableArray *compactContraints;
    NSMutableArray *regularContraintsFull;
    NSMutableArray *regularContraintsPart;
    NSMutableDictionary *ratioMinValueStore;
    NSLayoutConstraint *regularFullFirstColumnWidth;
    NSLayoutConstraint *regularPartFirstColumnWidth;
    KSOListContainerView *firstColumn;
    KSOListContainerView *secondColumn;
    CALayer *lineLayer;
    struct CGSize lastSize;
    _Bool _divideHidden;
    _Bool _isClosintDefaultStyle;
    long long _layoutType;
    long long _sizeclass;
    id <KSOContainerViewDelegate> _containerDelegate;
    id <KSOContainerViewDataSource> _containerDataSource;
}

@property(nonatomic) _Bool isClosintDefaultStyle; // @synthesize isClosintDefaultStyle=_isClosintDefaultStyle;
@property(nonatomic) _Bool divideHidden; // @synthesize divideHidden=_divideHidden;
@property(nonatomic) id <KSOContainerViewDataSource> containerDataSource; // @synthesize containerDataSource=_containerDataSource;
@property(nonatomic) id <KSOContainerViewDelegate> containerDelegate; // @synthesize containerDelegate=_containerDelegate;
@property(readonly, nonatomic) long long sizeclass; // @synthesize sizeclass=_sizeclass;
@property(readonly, nonatomic) long long layoutType; // @synthesize layoutType=_layoutType;
- (double)obtainBottomOffset:(id)arg1;
- (id)listContainer:(id)arg1 viewForHeaderInSection:(long long)arg2;
- (double)listContainer:(id)arg1 heightForHeaderInSection:(long long)arg2;
- (double)listContainer:(id)arg1 heightForRowAtIndexPath:(id)arg2;
- (long long)numberOfSectionsInListContainer:(id)arg1;
- (long long)listContainer:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (id)listContainer:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (void)updateRatioMinWidth;
- (void)setDefaultCellStyle:(id)arg1;
- (void)setDefaultSectionStyle:(id)arg1;
- (long long)obtainColumnEnum:(id)arg1;
- (void)resetContraintsPriority;
- (_Bool)checkContraints;
- (void)kso_init:(long long)arg1;
- (id)dequeueReusableSectionWithType:(long long)arg1 column:(long long)arg2;
- (id)dequeueReusableCellWithType:(long long)arg1 column:(long long)arg2;
- (void)resetColumnLayout:(long long)arg1 firstColumnRatio:(double)arg2 firstColumnMinValue:(double)arg3;
- (struct CGRect)obtainColumnFrame:(long long)arg1;
- (void)setContentOffset:(struct CGPoint)arg1 column:(long long)arg2 anim:(_Bool)arg3;
- (double)obtainContentScrollHeight:(long long)arg1;
- (struct CGPoint)obtainContentOffset:(long long)arg1;
- (void)scrollCellToVisible:(id)arg1 anim:(_Bool)arg2;
- (void)scrollCellToVisible:(id)arg1 anim:(_Bool)arg2 column:(long long)arg3;
- (void)reloadData;
- (void)reloadData:(long long)arg1;
- (id)initWithLayoutType:(long long)arg1;
- (void)layoutSubviews;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

