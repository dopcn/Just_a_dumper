//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

#import "MttAppFeedbackViewDelegate-Protocol.h"
#import "MttAppStoreRatingDelegate-Protocol.h"
#import "MttUIAlertViewDelegate-Protocol.h"
#import "SDWebImageManagerDelegate-Protocol.h"
#import "SKStoreProductViewControllerDelegate-Protocol.h"
#import "UIApplicationDelegate-Protocol.h"
#import "UNUserNotificationCenterDelegate-Protocol.h"

@class MttInvokeCommand, MttMemoryWarningManager, MttReachability, MttSplashVCManager, MttThirdFileInvoke, NSString, UIWindow;

@interface MttAppDelegate : NSObject <MttAppStoreRatingDelegate, MttAppFeedbackViewDelegate, SDWebImageManagerDelegate, UNUserNotificationCenterDelegate, UIApplicationDelegate, MttUIAlertViewDelegate, SKStoreProductViewControllerDelegate>
{
    MttReachability *_internetReach;
    _Bool _showScoreViewFlag;
    double _lastActiveTime;
    _Bool _needDelayUserPermission;
    UIWindow *_window;
    long long _lastLifeTimeOver5SecondsCount;
    MttInvokeCommand *_invokeCommand;
    MttMemoryWarningManager *_memoryWarningManager;
    MttSplashVCManager *_splashVCManager;
    MttThirdFileInvoke *_fileInvoke;
}

@property(retain, nonatomic) MttThirdFileInvoke *fileInvoke; // @synthesize fileInvoke=_fileInvoke;
@property(retain, nonatomic) MttSplashVCManager *splashVCManager; // @synthesize splashVCManager=_splashVCManager;
@property(retain, nonatomic) MttMemoryWarningManager *memoryWarningManager; // @synthesize memoryWarningManager=_memoryWarningManager;
@property(nonatomic) _Bool needDelayUserPermission; // @synthesize needDelayUserPermission=_needDelayUserPermission;
@property(readonly, nonatomic) MttInvokeCommand *invokeCommand; // @synthesize invokeCommand=_invokeCommand;
@property(readonly, nonatomic) long long lastLifeTimeOver5SecondsCount; // @synthesize lastLifeTimeOver5SecondsCount=_lastLifeTimeOver5SecondsCount;
@property(retain, nonatomic) UIWindow *window; // @synthesize window=_window;
- (void).cxx_destruct;
- (void)userNotificationCenter:(id)arg1 didReceiveNotificationResponse:(id)arg2 withCompletionHandler:(CDUnknownBlockType)arg3;
- (void)userNotificationCenter:(id)arg1 willPresentNotification:(id)arg2 withCompletionHandler:(CDUnknownBlockType)arg3;
- (void)swizzleUIViewControllerMethod;
- (void)invokeSwizzleMethod;
- (void)registerMidas;
- (unsigned long long)application:(id)arg1 supportedInterfaceOrientationsForWindow:(id)arg2;
- (void)saveLaunchAppMode:(long long)arg1;
- (id)imageManager:(id)arg1 transformDownloadedImage:(id)arg2 withURL:(id)arg3;
- (void)productViewControllerDidFinish:(id)arg1;
- (void)showAppStore:(id)arg1 promptWhenAppSwitching:(_Bool)arg2;
- (_Bool)application:(id)arg1 continueUserActivity:(id)arg2 restorationHandler:(CDUnknownBlockType)arg3;
- (void)startRunInBackground;
- (_Bool)isNeedRunInBackground;
- (void)saveAppUserDatas;
- (void)iRate;
- (void)application:(id)arg1 didReceiveLocalNotification:(id)arg2;
- (void)application:(id)arg1 didReceiveRemoteNotification:(id)arg2;
- (void)application:(id)arg1 didFailToRegisterForRemoteNotificationsWithError:(id)arg2;
- (void)application:(id)arg1 didRegisterForRemoteNotificationsWithDeviceToken:(id)arg2;
- (void)application:(id)arg1 handleActionWithIdentifier:(id)arg2 forRemoteNotification:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)application:(id)arg1 handleActionWithIdentifier:(id)arg2 forLocalNotification:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)application:(id)arg1 didRegisterUserNotificationSettings:(id)arg2;
- (void)registerDeviceTokenForPush:(_Bool)arg1;
- (void)clearBadgeNumberAndNotifications;
- (void)setUpPush;
- (_Bool)shouldPopPushRegister;
- (void)mttNetworkReachabilityChanged:(id)arg1;
- (_Bool)isNetworkReachable;
- (_Bool)isWiFiNetworkReachable;
- (void)updateApnType:(id)arg1;
- (void)initNetworkListener;
- (void)reportLowMemoryCrash;
- (_Bool)isLowMemoryCrash;
- (void)setLowMemoryCrash:(_Bool)arg1;
- (void)setLoginTrigger:(long long)arg1;
- (void)clearLastCacheDir;
- (void)initPath;
- (id)convertUrlFromVideoAndNews:(id)arg1;
- (void)clearAllPopoverController;
- (void)openURLInNewWindowUnit:(id)arg1;
- (void)openContentViewInSplitView:(id)arg1;
- (void)handleHodWordSearch:(id)arg1;
- (void)handleQQLoginInvoke:(id)arg1;
- (_Bool)application:(id)arg1 openURL:(id)arg2 sourceApplication:(id)arg3 annotation:(id)arg4;
- (_Bool)thirdPartyCalledOpenURL:(id)arg1 sourceApplication:(id)arg2;
- (void)clearPasswordMemory;
- (void)setupCABPCache;
- (void)autoSyncBookmarksBackground;
- (void)initCrashReporter;
- (void)checkP120Value;
- (void)clearCrashBadge;
- (void)addCrashBadge;
- (void)addCrashBadgeDelay;
- (void)clearLaunchCount;
- (void)addLaunchCount;
- (void)setLifeTimeOver5SecondsDone;
- (void)initLifeTime;
- (long long)wkcoreFeedbackCheckcount;
- (id)supportURLString;
- (void)mttFeedbackView:(id)arg1 clickedButtonAtIndex:(long long)arg2;
- (void)mttRatingView:(id)arg1 clickedButtonAtIndex:(long long)arg2;
- (void)popWKWebCoreFeedBackView;
- (void)popAppStoreRatingView;
- (_Bool)showWkWebViewCoreFeedback;
- (void)checkAndShowScoreAlert;
- (void)setupScoreRate;
- (void)resetWKCoreSwitchNeedly;
- (void)updateAppVersionInfo;
- (void)delayConnectServer;
- (void)wupProgress;
- (void)applicationInitAfterUIShow;
- (void)observeSpringboardLockComplete;
- (void)configUrlproxy;
- (void)applicationSecondInit;
- (void)applicationBaseInit;
- (void)dealloc;
- (void)applicationDidBecomeActive:(id)arg1;
- (void)applicationWillResignActive:(id)arg1;
- (void)applicationWillTerminate:(id)arg1;
- (void)resumePlayer;
- (void)stopPlayer;
- (void)checkJailbrokenVersionUpdate;
- (void)updateCartoonUseTime;
- (void)reportCartoonTime;
- (void)applicationWillEnterForeground:(id)arg1;
- (void)applicationDidEnterBackground:(id)arg1;
- (void)patchFinished;
- (_Bool)application:(id)arg1 didFinishLaunchingWithOptions:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

