//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <UIKit/UIViewController.h>

#import "JSHandlerRegisteProtocol-Protocol.h"
#import "TinyUIWebViewExDelegate-Protocol.h"
#import "UIGestureRecognizerDelegate-Protocol.h"
#import "UIWebViewDelegate-Protocol.h"
#import "WebkitBasicWebView-Protocol.h"

@class NSString, TinyUIWebViewEx, UITapGestureRecognizer, UIView, WebViewJSHandler;
@protocol NBRecommendPageViewControllerDelegate;

@interface NBRecommendPageViewController : UIViewController <TinyUIWebViewExDelegate, WebkitBasicWebView, JSHandlerRegisteProtocol, UIGestureRecognizerDelegate, UIWebViewDelegate>
{
    TinyUIWebViewEx *m_webView;
    UIView *m_bgMaskView;
    _Bool m_shouldLoadData;
    _Bool m_isRequesting;
    _Bool m_everEnterNightMode;
    _Bool _suggestPageJSLoadFinished;
    id <NBRecommendPageViewControllerDelegate> _delegate;
    NSString *_lastRequestString;
    WebViewJSHandler *_jsEventHandler;
    UITapGestureRecognizer *_tapGestureRecognizer;
    struct CGPoint _winClickPoint;
}

@property(retain, nonatomic) UITapGestureRecognizer *tapGestureRecognizer; // @synthesize tapGestureRecognizer=_tapGestureRecognizer;
@property(nonatomic) struct CGPoint winClickPoint; // @synthesize winClickPoint=_winClickPoint;
@property(retain, nonatomic) WebViewJSHandler *jsEventHandler; // @synthesize jsEventHandler=_jsEventHandler;
@property(nonatomic) _Bool suggestPageJSLoadFinished; // @synthesize suggestPageJSLoadFinished=_suggestPageJSLoadFinished;
@property(retain, nonatomic) NSString *lastRequestString; // @synthesize lastRequestString=_lastRequestString;
@property(nonatomic) id <NBRecommendPageViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) TinyUIWebViewEx *webView; // @synthesize webView=m_webView;
- (void)tapRecognized:(id)arg1;
- (_Bool)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
- (_Bool)gestureRecognizerShouldBegin:(id)arg1;
- (void)deregisterForJSHandler:(id)arg1 selector:(SEL)arg2 target:(id)arg3;
- (_Bool)registerForJSHandler:(id)arg1 selector:(SEL)arg2 target:(id)arg3;
- (_Bool)registerForJSHandler:(id)arg1 selector:(SEL)arg2 target:(id)arg3 internal:(_Bool)arg4;
- (void)deregisterHandleV2WithName:(id)arg1 selector:(SEL)arg2 target:(id)arg3;
- (_Bool)registerHandlerV2WithName:(id)arg1 selector:(SEL)arg2 target:(id)arg3;
- (id)webViewScrollView;
- (id)viewOfWindow;
- (struct CGPoint)getClickPoint;
- (id)webPageURL;
- (id)webPageTitle;
- (void)evaluateJavaScript:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (id)stringByEvaluatingJavaScriptFromString:(id)arg1;
- (void)webView:(id)arg1 didFailLoadWithError:(id)arg2;
- (void)webViewDidFinishLoad:(id)arg1;
- (_Bool)webView:(id)arg1 shouldStartLoadWithRequest:(id)arg2 navigationType:(long long)arg3;
- (void)addTapGestureRecognizer;
- (void)bindingWebViewJSHandler;
- (void)addWebMaskView;
- (void)addWebView;
- (_Bool)loadRequestSuccess;
- (void)requestRecommendBookInfo:(id)arg1 author:(id)arg2 bookType:(long long)arg3 bookId:(id)arg4;
- (void)dealloc;
- (void)changeThemeWithJavascript:(_Bool)arg1 shouldCallback:(_Bool)arg2;
- (void)didThemeChange;
- (_Bool)isNovelSuggestPageComplete;
- (void)novelNotifyAdAction:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)novelGetAdContent:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (id)novelRecommendPageLoadFinished;
- (id)novelReturnFormRecommendPage;
- (id)novelShareNovelWithShareInfo:(id)arg1 withStatsKey:(id)arg2;
- (void)unregisterJSHandler;
- (void)registerJSHandler;
- (void)viewDidLoad;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

