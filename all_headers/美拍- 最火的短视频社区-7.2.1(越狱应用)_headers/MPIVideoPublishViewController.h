//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "MPIPublishViewController.h"

#import "MPIMPlanVideoTaskViewDelegate-Protocol.h"

@class MASConstraint, MPIDraftMediaMusicModel, MPIMPlanInfo, MPIMPlanVideoTaskView, NSArray, NSDictionary, NSMutableArray, NSNumber, NSString, UIButton, UIView;

@interface MPIVideoPublishViewController : MPIPublishViewController <MPIMPlanVideoTaskViewDelegate>
{
    _Bool _isFollowShotMode;
    _Bool _hasSaveDraft;
    NSArray *_assetNameArray;
    NSArray *_subtitleArray;
    MPIDraftMediaMusicModel *_musicModel;
    NSArray *_importVideoModels;
    long long _mvType;
    NSNumber *_originSoundVolume;
    NSNumber *_bgmVolume;
    NSNumber *_videoSpeed;
    NSNumber *_hasWatermark;
    NSNumber *_bitrate;
    NSNumber *_isClip;
    NSDictionary *_cameraStatisticsInfo;
    NSArray *_basicMetaData;
    NSNumber *_previousFilterAlpha;
    NSNumber *_hasPreFilter;
    NSNumber *_trillMusicID;
    NSString *_extraCaption;
    NSArray *_trillEffectDataList;
    UIButton *_needHotButton;
    UIButton *_tagButton;
    UIView *_tagcontainView;
    MASConstraint *_tagButtonWidthConstraint;
    double _coverTime;
    NSMutableArray *_draftSliceModels;
    MPIMPlanVideoTaskView *_taskView;
    MPIMPlanInfo *_selectedTask;
}

@property(nonatomic) _Bool hasSaveDraft; // @synthesize hasSaveDraft=_hasSaveDraft;
@property(retain, nonatomic) MPIMPlanInfo *selectedTask; // @synthesize selectedTask=_selectedTask;
@property(retain, nonatomic) MPIMPlanVideoTaskView *taskView; // @synthesize taskView=_taskView;
@property(retain, nonatomic) NSMutableArray *draftSliceModels; // @synthesize draftSliceModels=_draftSliceModels;
@property(nonatomic) double coverTime; // @synthesize coverTime=_coverTime;
@property(retain, nonatomic) MASConstraint *tagButtonWidthConstraint; // @synthesize tagButtonWidthConstraint=_tagButtonWidthConstraint;
@property(retain, nonatomic) UIView *tagcontainView; // @synthesize tagcontainView=_tagcontainView;
@property(retain, nonatomic) UIButton *tagButton; // @synthesize tagButton=_tagButton;
@property(retain, nonatomic) UIButton *needHotButton; // @synthesize needHotButton=_needHotButton;
@property(nonatomic) _Bool isFollowShotMode; // @synthesize isFollowShotMode=_isFollowShotMode;
@property(retain, nonatomic) NSArray *trillEffectDataList; // @synthesize trillEffectDataList=_trillEffectDataList;
@property(copy, nonatomic) NSString *extraCaption; // @synthesize extraCaption=_extraCaption;
@property(copy, nonatomic) NSNumber *trillMusicID; // @synthesize trillMusicID=_trillMusicID;
@property(retain, nonatomic) NSNumber *hasPreFilter; // @synthesize hasPreFilter=_hasPreFilter;
@property(retain, nonatomic) NSNumber *previousFilterAlpha; // @synthesize previousFilterAlpha=_previousFilterAlpha;
@property(copy, nonatomic) NSArray *basicMetaData; // @synthesize basicMetaData=_basicMetaData;
@property(retain, nonatomic) NSDictionary *cameraStatisticsInfo; // @synthesize cameraStatisticsInfo=_cameraStatisticsInfo;
@property(retain, nonatomic) NSNumber *isClip; // @synthesize isClip=_isClip;
@property(retain, nonatomic) NSNumber *bitrate; // @synthesize bitrate=_bitrate;
@property(retain, nonatomic) NSNumber *hasWatermark; // @synthesize hasWatermark=_hasWatermark;
@property(retain, nonatomic) NSNumber *videoSpeed; // @synthesize videoSpeed=_videoSpeed;
@property(retain, nonatomic) NSNumber *bgmVolume; // @synthesize bgmVolume=_bgmVolume;
@property(retain, nonatomic) NSNumber *originSoundVolume; // @synthesize originSoundVolume=_originSoundVolume;
@property(nonatomic) long long mvType; // @synthesize mvType=_mvType;
@property(copy, nonatomic) NSArray *importVideoModels; // @synthesize importVideoModels=_importVideoModels;
@property(retain, nonatomic) MPIDraftMediaMusicModel *musicModel; // @synthesize musicModel=_musicModel;
@property(retain, nonatomic) NSArray *subtitleArray; // @synthesize subtitleArray=_subtitleArray;
@property(retain, nonatomic) NSArray *assetNameArray; // @synthesize assetNameArray=_assetNameArray;
- (void).cxx_destruct;
- (void)applicationWillTerminateHandle:(id)arg1;
- (void)cancelEffectProcessingNotification:(id)arg1;
- (void)mplanVideoTaskView:(id)arg1 didSelectTask:(id)arg2;
- (void)saveOriginAssetToAlbum;
- (_Bool)shouldSaveOriginAssetToAlbum;
- (void)savePhotoMVSubtitleConfigWithMedia:(id)arg1;
- (void)setupMediaInfoWithMedia:(id)arg1;
- (void)setupMD5WithMedia:(id)arg1;
- (void)setupDraftSliceModelsWithDraftMedia:(id)arg1;
- (void)saveOriginAssetToDraftFloderWithMedia:(id)arg1;
- (void)saveOriginMusicAssetToDraftFolderWithMedia:(id)arg1;
- (void)saveCoverImageToUploadPathWithMedia:(id)arg1;
- (_Bool)saveVideoForAlbumWithMedia:(id)arg1;
- (void)saveVideoToUploadPathWithMedia:(id)arg1;
- (void)saveMedia:(id)arg1 needUpdateProcessedVideo:(_Bool)arg2;
- (void)clearMediaTask;
- (void)saveTaskIdWithMedia:(id)arg1;
- (void)updateUploadMediaWhenTaskSelected;
- (void)selectTaskIfNeeded;
- (void)handleTasksResponse:(id)arg1;
- (void)fetchTasks;
- (void)asyncAddWaterMarkToVideo;
- (void)removeFileAtPath:(id)arg1;
- (void)deleteCommodityBeforePublish;
- (_Bool)needCheckCommodityPermission;
- (void)publishVideoMedia;
- (void)setupUploadMedia;
- (void)updateDataSource;
- (void)setupDataSource;
- (void)updateTagContainViewWithCustomTag:(id)arg1;
- (void)setupTagContainView;
- (void)setupMPlanTaskView;
- (void)setupUI;
- (void)tagButtonAction:(id)arg1;
- (void)neeHotButtonAction:(id)arg1;
- (void)inputViewDidTapPrivacy:(id)arg1;
- (void)coverViewTapAction;
- (void)saveDraftAction;
- (id)savedTip;
- (void)backAction;
- (void)publishMedia;
- (void)updateViewsWithLocked:(_Bool)arg1;
- (void)configureViewsWithDataSource:(id)arg1;
- (void)updateCustomTag:(id)arg1;
- (_Bool)isLongMVType;
- (void)addExtraTopicsIfNeed;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

