//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

#import "NSCoding-Protocol.h"

@class BusinessEngine, NSDictionary, NSMutableString, NSString, WnsRetryInfo;
@protocol OS_dispatch_queue;

@interface BusinessMessage : NSObject <NSCoding>
{
    _Bool _validateNet;
    _Bool _disabled;
    _Bool _async;
    _Bool _timeout;
    _Bool _cached;
    _Bool _sending;
    float _seconds;
    unsigned long long _state;
    NSString *_message;
    NSDictionary *_parameters;
    NSDictionary *_response;
    NSObject *_delegate;
    BusinessEngine *_executer;
    NSString *_errorDomain;
    long long _errorCode;
    NSString *_errorDesc;
    NSString *_wnsDesc;
    CDUnknownBlockType _whenSending;
    CDUnknownBlockType _whenSucceed;
    CDUnknownBlockType _whenFailed;
    CDUnknownBlockType _whenCancelled;
    double _initTimeStamp;
    double _sendTimeStamp;
    double _recvTimeStamp;
    NSMutableString *_traceInfo;
    void *_userData;
    int _reTry;
    int _seqNo;
    NSString *_servantCmd;
    int _status;
    WnsRetryInfo *_retryInfo;
    int _priority;
    long long _stateInTaskBox;
    _Bool isResponseFinished;
    _Bool isTlvResponse;
    _Bool _tipsSuccessAfterResponse;
    _Bool _asyncFeedModelResponseFinished;
    _Bool _asyncBuildFeedModel;
    int _tlvIndex;
    NSObject<OS_dispatch_queue> *_fromQueue;
    NSObject *_adCookie;
    NSString *_busiserverip;
}

+ (void)sendRequest:(id)arg1 command:(id)arg2 responder:(id)arg3;
+ (id)messageWithRetryInfo:(id)arg1 responder:(id)arg2 timeoutSeconds:(unsigned long long)arg3 priority:(int)arg4;
+ (id)message:(id)arg1 responder:(id)arg2 timeoutSeconds:(unsigned long long)arg3 priority:(int)arg4;
+ (id)messageWithRetryInfo:(id)arg1 responder:(id)arg2 timeoutSeconds:(unsigned long long)arg3;
+ (id)message:(id)arg1 responder:(id)arg2 timeoutSeconds:(unsigned long long)arg3;
@property(nonatomic) _Bool asyncBuildFeedModel; // @synthesize asyncBuildFeedModel=_asyncBuildFeedModel;
@property(nonatomic) _Bool asyncFeedModelResponseFinished; // @synthesize asyncFeedModelResponseFinished=_asyncFeedModelResponseFinished;
@property(nonatomic) _Bool tipsSuccessAfterResponse; // @synthesize tipsSuccessAfterResponse=_tipsSuccessAfterResponse;
@property(copy, nonatomic) NSString *busiserverip; // @synthesize busiserverip=_busiserverip;
@property(nonatomic) long long stateInTaskBox; // @synthesize stateInTaskBox=_stateInTaskBox;
@property(retain, nonatomic) NSObject *adCookie; // @synthesize adCookie=_adCookie;
@property(nonatomic) int tlvIndex; // @synthesize tlvIndex=_tlvIndex;
@property(nonatomic) NSObject<OS_dispatch_queue> *fromQueue; // @synthesize fromQueue=_fromQueue;
@property(nonatomic) int priority; // @synthesize priority=_priority;
@property(nonatomic) _Bool isTlvResponse; // @synthesize isTlvResponse;
@property(nonatomic) _Bool isResponseFinished; // @synthesize isResponseFinished;
@property(retain, nonatomic) WnsRetryInfo *retryInfo; // @synthesize retryInfo=_retryInfo;
@property(nonatomic) int status; // @synthesize status=_status;
@property(retain, nonatomic) NSString *servantCmd; // @synthesize servantCmd=_servantCmd;
@property(nonatomic) int seqNo; // @synthesize seqNo=_seqNo;
@property(nonatomic) int reTry; // @synthesize reTry=_reTry;
@property(nonatomic) void *userData; // @synthesize userData=_userData;
@property(retain, nonatomic) NSMutableString *traceInfo; // @synthesize traceInfo=_traceInfo;
@property(nonatomic) double recvTimeStamp; // @synthesize recvTimeStamp=_recvTimeStamp;
@property(nonatomic) double sendTimeStamp; // @synthesize sendTimeStamp=_sendTimeStamp;
@property(nonatomic) double initTimeStamp; // @synthesize initTimeStamp=_initTimeStamp;
@property(copy, nonatomic) CDUnknownBlockType whenCancelled; // @synthesize whenCancelled=_whenCancelled;
@property(copy, nonatomic) CDUnknownBlockType whenFailed; // @synthesize whenFailed=_whenFailed;
@property(copy, nonatomic) CDUnknownBlockType whenSucceed; // @synthesize whenSucceed=_whenSucceed;
@property(copy, nonatomic) CDUnknownBlockType whenSending; // @synthesize whenSending=_whenSending;
@property(retain, nonatomic) NSString *wnsDesc; // @synthesize wnsDesc=_wnsDesc;
@property(retain, nonatomic) NSString *errorDesc; // @synthesize errorDesc=_errorDesc;
@property(nonatomic) long long errorCode; // @synthesize errorCode=_errorCode;
@property(retain, nonatomic) NSString *errorDomain; // @synthesize errorDomain=_errorDomain;
@property(retain, nonatomic) NSDictionary *response; // @synthesize response=_response;
@property(retain, nonatomic) BusinessEngine *executer; // @synthesize executer=_executer;
@property(retain, nonatomic) NSDictionary *parameters; // @synthesize parameters=_parameters;
@property(retain, nonatomic) NSString *message; // @synthesize message=_message;
@property(nonatomic) unsigned long long state; // @synthesize state=_state;
@property(nonatomic) __weak NSObject *delegate; // @synthesize delegate=_delegate;
@property(nonatomic) float seconds; // @synthesize seconds=_seconds;
@property(nonatomic) _Bool sending; // @synthesize sending=_sending;
@property(nonatomic) _Bool cached; // @synthesize cached=_cached;
@property(nonatomic) _Bool timeout; // @synthesize timeout=_timeout;
@property(nonatomic) _Bool async; // @synthesize async=_async;
@property(nonatomic) _Bool disabled; // @synthesize disabled=_disabled;
@property(nonatomic) _Bool validateNet; // @synthesize validateNet=_validateNet;
- (void).cxx_destruct;
- (id)cachedMessage;
- (double)timeCostOverAir;
- (double)timeCostPending;
- (void)reset;
- (void)cancel;
- (void)send;
- (void)appendTraceFormat:(id)arg1 arguments:(char *)arg2;
- (void)appendTraceFormat:(id)arg1;
- (void)appendTraceStr:(id)arg1;
- (void)appendTraceTime;
- (id)visiableTimeString;
- (void)internalNotifyResponderCancelled;
- (void)internalNotifyResponderFailed;
- (void)internalNotifyResponderSucceed;
- (void)internalNotifyResponderSending;
- (id)init;
- (void)resetForOPBoxTask;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;

@end

