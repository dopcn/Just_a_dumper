//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

@interface ComHelper : NSObject
{
}

+ (void)convertInt32toInt24:(int)arg1 int24:(char *)arg2 length:(long long)arg3;
+ (int)convertInt24ToInt32:(char *)arg1 length:(long long)arg2;
+ (_Bool)checkIfObject:(id)arg1 overridesSelector:(SEL)arg2 baseClass:(Class)arg3;
+ (id)addWatermark:(id)arg1 toImage:(id)arg2;
+ (id)generateWebSubPlayState:(int)arg1;
+ (id)generateWebPlayState:(int)arg1;
+ (struct CGRect)getCurrentAppBounds;
+ (_Bool)checkAndShowUpgradeTips;
+ (_Bool)isNewestVersion;
+ (void)setUIWebViewUserAgent:(id)arg1;
+ (id)getUserAgentWithWebType:(unsigned long long)arg1;
+ (unsigned long long)getLongValueWithColor:(id)arg1;
+ (unsigned long long)getTabBarColorFromSystemColor;
+ (id)getUIWebViewUserAgent;
+ (id)getWKWebViewUserAgent;
+ (id)getCommonUserAgent;
+ (_Bool)isNotAudioType:(id)arg1;
+ (void)uploadLog:(id)arg1;
+ (unsigned int)hintForSongUrl:(id)arg1;
+ (unsigned int)innerHintForFileExtension:(id)arg1;
+ (unsigned int)hintForFileExtension:(id)arg1;
+ (_Bool)currentThreadIsQueue:(id)arg1;
+ (void)exitApp:(id)arg1;
+ (id)translateStringToImage:(id)arg1;
+ (_Bool)isCustomPlayerView;
+ (_Bool)isCustomUrlProtocolNeedProtect;
+ (id)getKeyChainQuery:(id)arg1;
+ (int)generateListenAndDownloadStatus;
+ (id)getIconNameByIndex:(unsigned long long)arg1;
+ (id)getBatchAddDownloadfloatLayerIconNameForDownloadRate:(int)arg1;
+ (id)getPlayRateFloatIconDefaultConfig:(int)arg1;
+ (id)getPlayRateFloatIconForSong:(id)arg1 andRate:(int)arg2 andAssertType:(int)arg3;
+ (id)getDownloadFloatIconDefaultConfig:(int)arg1;
+ (id)getDownloadFloatIconForSong:(id)arg1 andQuality:(int)arg2 andAssertType:(int)arg3;
+ (id)getDefaultFloatLayerIconDict;
+ (_Bool)needForceCheckDownloadFilePath;
+ (void)safeArchiveObject:(id)arg1 withFile:(id)arg2;
+ (id)safeUnarchiveObjectWithFile:(id)arg1;
+ (void)showDownloadDeductionAlertWithString:(id)arg1;
+ (int)getDownloadQualityByRate:(int)arg1;
+ (id)formatOSStatus:(int)arg1;
+ (id)countryCode;
+ (_Bool)isValidIP:(id)arg1;
+ (void)setAttributedString:(id)arg1 toTextView:(id)arg2;
+ (void)setTextView:(id)arg1 fontStyle:(long long)arg2 bold:(_Bool)arg3;
+ (void)setHilightedTextView:(id)arg1 fontStyle:(long long)arg2 attributeText:(id)arg3;
+ (void)setHilightedLabel:(id)arg1 fontStyle:(long long)arg2 attributeText:(id)arg3;
+ (_Bool)isPCRoamingSongAvailable;
+ (id)getShareSongHtmlUrl;
+ (id)shuffArray:(id)arg1;
+ (id)handleUrl:(id)arg1 withParam:(id)arg2;
+ (_Bool)isSupportMaskLayer;
+ (_Bool)isSupportTranslucentForPlayList;
+ (_Bool)isSupportCornerImageForSinger;
+ (_Bool)randomByProbability:(double)arg1;
+ (_Bool)isSupport3DTouch;
+ (id)createAdIdentifyLableWithPoint:(struct CGPoint)arg1;
+ (struct _xmlDoc *)xmlDocPtrFromString:(id)arg1;
+ (void)showMessageInDevMode:(id)arg1;
+ (_Bool)isSafeClass:(id)arg1 aClass:(Class)arg2;
+ (void)logSubviews:(id)arg1 leve:(int)arg2;
+ (void)logSubviews:(id)arg1;
+ (id)trimImage:(id)arg1;
+ (id)rfc1123DateFormatter;
+ (void)setGuestBuyIAPProductSucWithAppid:(id)arg1;
+ (id)cutString:(id)arg1 flexibleRange:(struct _NSRange)arg2 toFitmaxWidth:(double)arg3 font:(id)arg4;
+ (long long)compareDoule:(double)arg1 b:(double)arg2;
+ (long long)compareNumber:(long long)arg1 b:(long long)arg2;
+ (long long)startTimeOfToday;
+ (_Bool)isRangeValied:(struct _NSRange)arg1 forCount:(unsigned long long)arg2;
+ (void)dispatchToMainThread:(CDUnknownBlockType)arg1;
+ (void)asyncToMainThread:(CDUnknownBlockType)arg1;
+ (void)notImpVirtualFunction;
+ (void)removeSubVCAsSubView:(id)arg1;
+ (void)addVCAsSubViewInVC:(id)arg1 inView:(id)arg2 belowView:(id)arg3 subVC:(id)arg4;
+ (void)addVCAsSubViewInVC:(id)arg1 inView:(id)arg2 subVC:(id)arg3;
+ (long long)compareNameIndex1:(id)arg1 andNameIndex2:(id)arg2;
+ (id)stringByRemoveEmTag:(id)arg1;
+ (id)imageWithColor:(id)arg1 andSize:(struct CGSize)arg2;
+ (_Bool)albumImageCanRotate;
+ (_Bool)isConnnectToFord;
+ (void)setSupportAirPlayLyric:(_Bool)arg1;
+ (_Bool)isSupportPCWifiImportSong;
+ (_Bool)isSupportAirPlayLyric;
+ (_Bool)isSupportLandscapeModel;
+ (_Bool)isSupportAnimation;
+ (_Bool)isSupportBulletGiftAnimation;
+ (_Bool)isSuportWatchLiveShow;
+ (_Bool)isSupportCreateLiveShow;
+ (double)angleAtPresentationFromView:(id)arg1;
+ (void)copyFrom:(id)arg1 to:(id)arg2 size:(long long)arg3;
+ (long long)getUploadLogSize:(int)arg1;
+ (long long)getBase64UploadLogSize:(int)arg1;
+ (id)changeSchemeFromHttpToHttps:(id)arg1;
+ (id)changeSchemeFromHttpsToHttp:(id)arg1;
+ (_Bool)isHttpsURL:(id)arg1;
+ (_Bool)isHttpURL:(id)arg1;
+ (_Bool)openURL:(id)arg1;
+ (_Bool)canOpenURL:(id)arg1;
+ (_Bool)httpStatusBigThan399:(int)arg1;
+ (_Bool)httpStatus200_206:(int)arg1;
+ (id)filePathByFileURL:(id)arg1;
+ (_Bool)saveImage:(id)arg1 toFileAtPath:(id)arg2;
+ (id)captureScreenImage;
+ (_Bool)canAccessPhotoOrShowAlert;
+ (void)deviceHasMediaPrivilege:(id)arg1 completion:(CDUnknownBlockType)arg2;
+ (_Bool)deviceSupportCamera;
+ (_Bool)deviceHasCameraPrivilege;
+ (void)postCameraError;
+ (_Bool)is:(double)arg1 equal:(double)arg2;
+ (struct _xmlDoc *)parseDataTestXml;
+ (void)setAttributedString:(id)arg1 toLabel:(id)arg2;
+ (id)addShadowToView:(id)arg1 showdowColor:(id)arg2 withOpacity:(float)arg3 shadowRadius:(double)arg4 shadowOffet:(struct CGSize)arg5;
+ (Class)attributedLabelClass;
+ (id)createArrowImageView;
+ (_Bool)randomBet:(double)arg1;
+ (long long)randomInRange:(long long)arg1 max:(long long)arg2;
+ (id)getFileNameByURL:(id)arg1;
+ (void)descripLabel:(id)arg1;
+ (void)setLabelShadow:(id)arg1 offset:(struct CGSize)arg2 color:(id)arg3;
+ (void)setLabelStyle:(id)arg1 fontStyle:(long long)arg2 bold:(_Bool)arg3;
+ (void)setLabel:(id)arg1 kern:(double)arg2 kernLen:(double)arg3 text:(id)arg4;
+ (void)setLabel:(id)arg1 kern:(double)arg2 text:(id)arg3;
+ (void)setLabel:(id)arg1 fontStyle:(long long)arg2 bold:(_Bool)arg3;
+ (void)changeToSystemFont:(id)arg1;
+ (unsigned int)fontSizeByFontStyle:(long long)arg1;
+ (id)systemFontOfSize:(double)arg1;
+ (id)boldSystemFontOfSize:(double)arg1;
+ (id)semiboldSystemFontOfSize:(double)arg1;
+ (id)mediumSystemFontOfSize:(double)arg1;
+ (id)regularSystemFontOfSize:(double)arg1;
+ (id)lightSystemFontOfSize:(double)arg1;
+ (id)monospacedDigitSystemFontOfSize:(double)arg1;
+ (id)prettyFileSize:(unsigned long long)arg1;
+ (id)prettyFileSize:(unsigned long long)arg1 isShowKB:(_Bool)arg2;
+ (id)qmBackTrace;
+ (_Bool)isCIFilterAvailable;
+ (id)convertWebpURL2JpegURL:(id)arg1;
+ (id)toUnEscapedXmlText:(id)arg1;
+ (id)toEscapedXmlText:(id)arg1;
+ (id)addEncryptedUinToUrl:(id)arg1 encryptedUin:(id)arg2;
+ (id)addUinToUrl:(id)arg1 uin:(unsigned long long)arg2;
+ (id)addFromTagAndUinToUrl:(id)arg1 fromTag:(unsigned int)arg2;
+ (id)addFromTagToUrl:(id)arg1 fromTag:(unsigned int)arg2;
+ (id)addAutoDownloadFromToUrl:(id)arg1;
+ (id)addParam_v2:(id)arg1 value:(id)arg2 toURL:(id)arg3;
+ (id)addParam_v1:(id)arg1 value:(id)arg2 toURL:(id)arg3;
+ (id)iOSQueryEncodingUrlString:(id)arg1;
+ (_Bool)isAddParamV1V2ResultSameAndReport:(id)arg1 value:(id)arg2 toURL:(id)arg3;
+ (id)addParam:(id)arg1 value:(id)arg2 toURL:(id)arg3;
+ (unsigned int)fromTagForSQ:(_Bool)arg1;
+ (unsigned int)fromTagByListen:(_Bool)arg1;
+ (unsigned int)fromTagByListenAndNeedAuth:(_Bool)arg1 songrate:(int)arg2;
+ (unsigned int)getFromTagByListen:(_Bool)arg1 WifiListen:(unsigned int)arg2 wifiDownload:(unsigned int)arg3 carrierListen:(unsigned int)arg4 carrierDownload:(unsigned int)arg5;
+ (int)getIntXFromModel:(id)arg1;
+ (_Bool)isValidBundle;
+ (_Bool)isAdvancedMachine;
+ (id)strWithJsonObject:(id)arg1;
+ (id)dataWithJsonObjectDefaultEmpty:(id)arg1;
+ (id)objectWithJsonData:(id)arg1 error:(id *)arg2 targetClass:(Class)arg3;
+ (void)checkUnsupportValue:(id)arg1;
+ (void)checkArrayValue:(id)arg1;
+ (void)checkDictionaryValue:(id)arg1;
+ (id)arrayWithJsonStr:(id)arg1;
+ (id)arrayWithJsonData:(id)arg1;
+ (id)dictionaryWithJsonStr:(id)arg1;
+ (id)dictionaryWithJsonData:(id)arg1;
+ (_Bool)bNeedWebpPic;
+ (void)reCreateAttributedText:(id)arg1;
+ (id)modifyAlbumName:(id)arg1;
+ (id)modifySingerName:(id)arg1;
+ (id)modifySongName:(id)arg1;
+ (id)modifyName:(id)arg1 defaultString:(id)arg2;
+ (id)getContactDot;
+ (id)contactStringUseDot:(id)arg1 rightString:(id)arg2;
+ (id)getAlbumAndSingerNameStrFromSingerName:(id)arg1 andAlbumName:(id)arg2 andAlbumID:(unsigned long long)arg3;
+ (void)saveOpenUDIDInKeyChain:(id)arg1;
+ (id)getOpenUDID;
+ (_Bool)isThridPartyURL:(id)arg1;
+ (_Bool)isWeiYunURL:(id)arg1;
+ (void)changeStatusBarHidden:(_Bool)arg1 animation:(long long)arg2;
+ (void)changeStatusBarHidden:(_Bool)arg1;
+ (long long)setStatusBarStyleWithStyle:(long long)arg1 animation:(_Bool)arg2;
+ (long long)setStatusBarStyleWithStyle:(long long)arg1;
+ (long long)setStatusBarStyle;
+ (double)mayBeGoodTime;
+ (id)getCurrentHourAndMinte;
+ (_Bool)isBetweenHotTime;
+ (void)setHotTimeWithBeginTime:(id)arg1 endTime:(id)arg2;
+ (_Bool)isTheSameDayCompare:(id)arg1 to:(id)arg2;
+ (id)getCurrentDateString;
+ (long long)getCurrentDateMonth;
+ (id)getCurrentDateDay;
+ (id)formatSecondsToHMS:(unsigned long long)arg1;
+ (id)formatTimeIntervalToYMD:(double)arg1;
+ (id)formatTimeIntervalToYMDHMS:(double)arg1;
+ (id)formatTimeNowForAllFormater;
+ (_Bool)isDate:(id)arg1 OverNowin:(int)arg2;
+ (id)formattedStrForDate:(id)arg1;
+ (id)getSubStringConderingLanguageToIndex:(unsigned long long)arg1 forString:(id)arg2;
+ (unsigned long long)getStringLengthConderingLanguage:(id)arg1;
+ (long long)getFolderSizeAtPath:(id)arg1;
+ (id)removeChinaUnicomIp:(id)arg1;
+ (id)freeFlowIPReplace:(id)arg1;
+ (id)addH5Proxy:(id)arg1;
+ (id)addFreeUrlPnoAndSigAndPwInfo:(id)arg1;
+ (_Bool)isValidURL:(id)arg1;
+ (void)openAppStoreToUpdate;
+ (id)appleRatingAddress;
+ (_Bool)isIPhoneX;
+ (_Bool)isIphoneSE;
+ (_Bool)isIphone5s;
+ (_Bool)isAddShadowEffect;
+ (_Bool)isSupportGestureReturn;
+ (id)frostedGlassViewAddedToView:(id)arg1 isBlackMode:(_Bool)arg2 andDefaultBgColor:(id)arg3;
+ (_Bool)isSupportFrostedGlass;
+ (_Bool)isSupportScanAR;
+ (_Bool)isSupportStarBlend;
+ (_Bool)isSupportVideoPoster;
+ (_Bool)isSupportRunRidio;
+ (_Bool)isSupportCarplay;
+ (_Bool)isSupportObjectWithExpInfoArraySet;
+ (_Bool)canDeleteWebKitFolder;
+ (_Bool)isSupportWKWebView;
+ (_Bool)isHitTargetUidWithStringRatio:(id)arg1;
+ (_Bool)isIOSVersion:(int)arg1 andLater:(_Bool)arg2 andEarlier:(_Bool)arg3;
+ (_Bool)isIOSVersion:(int)arg1 later:(_Bool)arg2 earlier:(_Bool)arg3;
+ (void)initVersionInfo;
+ (id)convertFromMemoryString:(id)arg1;
+ (void)setAttributedStringForegroundColor:(id)arg1 color:(id)arg2 range:(struct _NSRange)arg3;
+ (id)getHighlightedAttrString:(id)arg1 withStartFlag:(id)arg2 andEndFlag:(id)arg3 andDefaultColor:(id)arg4 andHighlightedColor:(id)arg5;
+ (void)parseTagRange:(id)arg1 withStartFlag:(id)arg2 andEndFlag:(id)arg3 resultString:(id *)arg4 emRangeArray:(id *)arg5;
+ (_Bool)isHightlight;
+ (id)getHighlightedAttrString:(id)arg1 ofSubString:(id)arg2;
+ (id)prepareTextViewWithAttributeString:(id)arg1 paragraphSpacing:(double)arg2 songInfo:(id)arg3 assertType:(int)arg4;
+ (id)getAttributedStringFromString:(id)arg1 andRangeArray:(id)arg2 andDefaultColor:(id)arg3 andHighlightedColor:(id)arg4;
+ (id)getIDFAString;
+ (id)getIdentifierForVendor;
+ (_Bool)isCellularNetworkStatusName:(id)arg1;
+ (id)getCurrentNetworkStatusName;
+ (_Bool)canReportZeroGzipData;
+ (id)getWifiSSIDName;
+ (double)getDiskFreeSpece;
+ (double)getDiskTotalSpace;
+ (void)showIKnownAlertWithMessage:(id)arg1;
+ (id)getObjectInArray:(id)arg1 byIndex:(unsigned long long)arg2 ofClassType:(Class)arg3 defaultValue:(id)arg4;
+ (id)objectWithExpInfosFromListData:(id)arg1 expInfos:(id)arg2;
+ (void)convertListBase:(id)arg1 toFolderSongs:(id)arg2;
+ (void)convertFolderSongToListBase:(id)arg1 listBase:(id)arg2;
+ (void)convertFolderSongToListBase:(id)arg1 listBase:(id)arg2 careOpType:(_Bool)arg3;
+ (id)splitArray:(id)arg1 groupedSize:(unsigned long long)arg2;
+ (void)enumFolder:(id)arg1 containSubFolder:(_Bool)arg2;
+ (id)topViewControllerWithRootViewController:(id)arg1;
+ (id)topViewController;
+ (_Bool)isMVRootViewController:(id)arg1;
+ (id)getFolderAppendTjReport:(id)arg1 withRowIndex:(unsigned long long)arg2;
+ (_Bool)scanFolder:(id)arg1 containSubFolder:(_Bool)arg2 findedItemBlock:(CDUnknownBlockType)arg3;
+ (_Bool)isDarkColor:(id)arg1;
+ (double)alphaForColor:(id)arg1;
+ (void)onColorStyleChanged;
+ (unsigned long long)getSystemColorableColorOnlyHueEnabled;
+ (unsigned long long)getSystemColorableColor;
+ (id)imageWithView:(id)arg1;
+ (id)imageWithUIView:(id)arg1;
+ (void)getBytes:(unsigned long long)arg1 first:(char *)arg2 second:(char *)arg3 third:(char *)arg4 forth:(char *)arg5;
+ (unsigned long long)makeLong:(unsigned char)arg1 second:(unsigned char)arg2 third:(unsigned char)arg3 forth:(unsigned char)arg4;
+ (struct CGSize)sizeLabelToFitOneLine:(id)arg1 height:(double)arg2 font:(id)arg3;
+ (struct CGSize)sizeLabelToFit:(id)arg1 width:(double)arg2 height:(double)arg3 font:(id)arg4;
+ (id)formatSongsNumber:(long long)arg1;
+ (id)formatSubscribeNumber:(long long)arg1 withOutDot:(_Bool)arg2;
+ (id)formatSubscribeNumber:(long long)arg1;
+ (id)createIndexItemsByListBase:(id)arg1 baseOnSortType:(int)arg2;
+ (void)sortAllSongs:(id)arg1 withSortType:(int)arg2 withAddTimeOrder:(_Bool)arg3;
+ (id)convertNameIndexToItemIndexName:(id)arg1;
+ (struct CGPoint)getCenterOfFrame:(struct CGRect)arg1;
+ (_Bool)isIndexInRange:(id)arg1 index:(int)arg2;
+ (id)safeCastObject:(id)arg1 respondsToSelector:(SEL)arg2;
+ (id)safeCastObject:(id)arg1 toClass:(Class)arg2;
+ (struct CGRect)translateToIphone5Rect:(struct CGRect)arg1;
+ (void)adjustPositionToFitIphone5:(id)arg1;
+ (_Bool)is3XPicMachine;
+ (_Bool)isPoorMachine;
+ (_Bool)isIpod5;
+ (_Bool)isIphone4s;
+ (_Bool)isAboveScreenInch4_7;
+ (long long)currentDeviceResolution;
+ (_Bool)isScreenInch5_8;
+ (_Bool)isScreenInch5_5;
+ (_Bool)isScreenInch4_7;
+ (_Bool)isScreenInch4;
+ (_Bool)isScreenInch3_5;
+ (_Bool)isValidName:(id)arg1;
+ (_Bool)isValidAlbumIndex:(unsigned long long)arg1;
+ (id)getDefaultRetStateDescription:(int)arg1;
+ (id)getDefaultWorkResultDescription:(long long)arg1;
+ (id)deleteSixPerEmSpace:(id)arg1;
+ (id)leftStringByUnicodeLength:(id)arg1 length:(unsigned long long)arg2;
+ (unsigned long long)lengthOfStringByTrimmingWhiteSpace:(id)arg1;
+ (unsigned long long)unicodeLengthOfString:(id)arg1;
+ (id)enumSubView:(id)arg1 maxDepth:(int)arg2;
+ (id)enumSubView:(id)arg1;
+ (void)enumSubView:(id)arg1 maxDepth:(int)arg2 callBack:(CDUnknownBlockType)arg3;
+ (_Bool)_enumSubView:(id)arg1 maxDepth:(int)arg2 currentDepth:(int)arg3 callBack:(CDUnknownBlockType)arg4;
+ (id)GetEmpty:(int)arg1;
+ (void)setLabelProperty:(id)arg1 fontSize:(double)arg2 textColor:(id)arg3 align:(long long)arg4 bold:(_Bool)arg5 shadow:(_Bool)arg6 shadowOffset:(struct CGSize)arg7 shadowColor:(id)arg8;
+ (void)setLabelProperty:(id)arg1 fontSize:(double)arg2 textColor:(id)arg3 align:(long long)arg4 bold:(_Bool)arg5;
+ (id)labelWithFont:(id)arg1 textColor:(id)arg2 alignment:(long long)arg3 lines:(long long)arg4;
+ (id)createCustomButtonByStateNormalTitleColor:(id)arg1 stateHighlightedTitleColor:(id)arg2 titleLabelFont:(id)arg3 frame:(struct CGRect)arg4;
+ (id)createCustomButtonByBgImage:(id)arg1 selBgImage:(id)arg2 iconImage:(id)arg3 frame:(struct CGRect)arg4 addTarget:(id)arg5 action:(SEL)arg6;
+ (id)createCustomButtonByBgImageName:(id)arg1 hilightedImageName:(id)arg2 selectedImageName:(id)arg3 hilightedSelectedImageName:(id)arg4 disabledImageName:(id)arg5 frame:(struct CGRect)arg6;
+ (id)createCustomButtonByImageName:(id)arg1 hilightedImageName:(id)arg2 selectedImageName:(id)arg3 hilightedSelectedImageName:(id)arg4 disabledImageName:(id)arg5 frame:(struct CGRect)arg6;
+ (id)createCustomButtonByImageName:(id)arg1 hilightedImageName:(id)arg2 frame:(struct CGRect)arg3;
+ (id)createCustomButtonByBgImageName:(id)arg1 hilightedImageName:(id)arg2 frame:(struct CGRect)arg3;
+ (id)createImageView:(id)arg1 hilightedImageName:(id)arg2 frame:(struct CGRect)arg3 strechOffset:(struct CGPoint)arg4;
+ (id)createImageView:(id)arg1 hilightedImageName:(id)arg2 frame:(struct CGRect)arg3;
+ (id)getIpAddressFromHost:(id)arg1 exceptIps:(id)arg2;
+ (id)getIpAddressFromHostForFreeFlow:(id)arg1 exceptIps:(id)arg2;
+ (id)getIpAddressFromHost:(id)arg1;
+ (void)setHeadTextStyle:(id)arg1;
+ (void)setFootTextStyle:(id)arg1;
+ (id)colorableColorWithRed:(unsigned char)arg1 green:(unsigned char)arg2 blue:(unsigned char)arg3 alpha:(unsigned char)arg4;
+ (id)colorableColorWithRed:(unsigned char)arg1 green:(unsigned char)arg2 blue:(unsigned char)arg3;
+ (id)colorWithRed:(unsigned char)arg1 green:(unsigned char)arg2 blue:(unsigned char)arg3;
+ (id)colorWithRed:(unsigned char)arg1 green:(unsigned char)arg2 blue:(unsigned char)arg3 alpha:(unsigned char)arg4;
+ (id)colorWithHexString:(id)arg1;
+ (id)colorWithHex:(unsigned long long)arg1;
+ (id)getSystemColor;
+ (_Bool)isValidQQMusicAddress:(id)arg1;
+ (id)replaceHttpOrHttpsHost:(id)arg1 toHost:(id)arg2;
+ (id)replaceHttpHost:(id)arg1 toHost:(id)arg2;
+ (id)getHttpsHostFromUrl:(id)arg1;
+ (id)getHttpHostFromUrl:(id)arg1;
+ (id)getHostFromUrl:(id)arg1;
+ (id)removeContinfo:(id)arg1;
+ (struct _NSRange)getHttpsHostRange:(id)arg1;
+ (struct _NSRange)getHttpHostRange:(id)arg1;
+ (void)checkVersion;
+ (long long)interfaceOritentationWithoutDevice;
+ (long long)interfaceOritentation;
+ (_Bool)isInterfaceOrientationPortrait;
+ (_Bool)isOrientationPortrait;

@end

