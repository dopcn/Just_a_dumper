//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "ELBaseViewController.h"

#import "ELLiveActiveDelegate-Protocol.h"
#import "ELLiveAudienceActiveViewControllerDelegate-Protocol.h"
#import "ELLiveQueueBodyViewControllerDelegate-Protocol.h"
#import "ELVideoPlayManagerDelegate-Protocol.h"
#import "ELWSMessageValveProtocol-Protocol.h"

@class ELAnchor, ELLiveAudienceActiveViewController, ELLivePreviewView, ELLiveQueueBodyViewController, ELLiveRoom, ELPullStatisticsData, NSString;
@protocol ELLiveActiveDelegate;

@interface ELLiveQueueViewController : ELBaseViewController <ELLiveAudienceActiveViewControllerDelegate, ELVideoPlayManagerDelegate, ELWSMessageValveProtocol, ELLiveQueueBodyViewControllerDelegate, ELLiveActiveDelegate>
{
    _Bool _shouldSendResumeToServer;
    _Bool _shouldCallReadyMyMic;
    _Bool _anchorView;
    _Bool _hadCompleteVerifyRoomBecomeActiveFromeResignActive;
    _Bool _needCallResetParametersWhenDealloc;
    ELLiveRoom *_liveRoom;
    id <ELLiveActiveDelegate> _liveActiveDelegate;
    ELLiveQueueBodyViewController *_bodyViewController;
    ELLivePreviewView *_livePreviewView;
    ELLiveAudienceActiveViewController *_audienceViewController;
    ELPullStatisticsData *_pullStatisticsData;
    long long _retryTimesWhenPlayerOpenError;
    ELAnchor *_currentAnchor;
}

+ (id)controllerWithLiveRoom:(id)arg1;
@property(nonatomic, getter=isNeedCallResetParametersWhenDealloc) _Bool needCallResetParametersWhenDealloc; // @synthesize needCallResetParametersWhenDealloc=_needCallResetParametersWhenDealloc;
@property(nonatomic, getter=isHadCompleteVerifyRoomBecomeActiveFromeResignActive) _Bool hadCompleteVerifyRoomBecomeActiveFromeResignActive; // @synthesize hadCompleteVerifyRoomBecomeActiveFromeResignActive=_hadCompleteVerifyRoomBecomeActiveFromeResignActive;
@property(retain, nonatomic) ELAnchor *currentAnchor; // @synthesize currentAnchor=_currentAnchor;
@property(nonatomic, getter=isAnchorView) _Bool anchorView; // @synthesize anchorView=_anchorView;
@property(nonatomic, getter=isShouldCallReadyMyMic) _Bool shouldCallReadyMyMic; // @synthesize shouldCallReadyMyMic=_shouldCallReadyMyMic;
@property(nonatomic, getter=isShouldSendResumeToServer) _Bool shouldSendResumeToServer; // @synthesize shouldSendResumeToServer=_shouldSendResumeToServer;
@property(nonatomic) long long retryTimesWhenPlayerOpenError; // @synthesize retryTimesWhenPlayerOpenError=_retryTimesWhenPlayerOpenError;
@property(retain, nonatomic) ELPullStatisticsData *pullStatisticsData; // @synthesize pullStatisticsData=_pullStatisticsData;
@property(retain, nonatomic) ELLiveAudienceActiveViewController *audienceViewController; // @synthesize audienceViewController=_audienceViewController;
@property(retain, nonatomic) ELLivePreviewView *livePreviewView; // @synthesize livePreviewView=_livePreviewView;
@property(retain, nonatomic) ELLiveQueueBodyViewController *bodyViewController; // @synthesize bodyViewController=_bodyViewController;
@property(nonatomic) __weak id <ELLiveActiveDelegate> liveActiveDelegate; // @synthesize liveActiveDelegate=_liveActiveDelegate;
@property(retain, nonatomic) ELLiveRoom *liveRoom; // @synthesize liveRoom=_liveRoom;
- (void).cxx_destruct;
- (void)easyliveUserDidLogin:(id)arg1;
- (void)tapLiveQueueButtonWithIsExistLiveQueueList:(_Bool)arg1 user:(id)arg2;
- (id)availableSubValves;
- (_Bool)handleConnectMessage:(id)arg1;
- (_Bool)handleMessages:(id)arg1;
- (void)didReceiveErrorMessage:(id)arg1;
- (void)didReceiveChangePublishAddressMessage:(id)arg1;
- (void)didReceivePauseMessage:(id)arg1;
- (void)didReceiveResumeMessage:(id)arg1;
- (void)didReceiveResetMessage:(id)arg1;
- (void)didReceiveKickoffMessage:(id)arg1;
- (void)didReceiveVionlationRegulationMessage:(id)arg1;
- (void)didReceiveMicInfoListMessage:(id)arg1;
- (void)handleDataToCompletionVCWithAudienceAmount:(long long)arg1 sessionId:(id)arg2 anchorId:(id)arg3;
- (void)didReceiveFinishMicMessage:(id)arg1;
- (void)didFinish:(id)arg1;
- (void)didReceiveFinishMyMicMessage:(id)arg1;
- (void)didReceiveChangeMicMessage:(id)arg1;
- (_Bool)handleMessage:(id)arg1;
- (void)showAlertWithTitle:(id)arg1 message:(id)arg2 cacelButtonTitle:(id)arg3 otherButtonTitles:(id)arg4 tapBlock:(CDUnknownBlockType)arg5;
- (void)tapLeftToolBarClose;
- (_Bool)isCanPreferEnableScroll;
- (void)closedWebSocket;
- (void)resetAllParametersWithNeedRemovedFromeMicList:(_Bool)arg1;
- (void)didCloseWithIsNeedRemovedFromMicList:(_Bool)arg1;
- (void)didClose;
- (void)connectWebSocket;
- (void)handleVerifyRoomAndVerifyRoomConnectResult:(id)arg1 isVerifyRoom:(_Bool)arg2 isBecomeActiveFromResignActive:(_Bool)arg3;
- (void)verifyRoomForReconnect;
- (void)verifyRoomWithIsBecomeActiveFromResignActive:(_Bool)arg1;
- (void)willMicHandleWithPrepareTime:(long long)arg1 micTotalTime:(long long)arg2 room:(id)arg3;
- (void)switchToAudienceWithLiveRoom:(id)arg1 countDownTime:(long long)arg2;
- (void)switchToAudienceView;
- (void)setupBodyViewController;
- (void)showPreviewViewWithImageURL:(id)arg1;
- (void)setCurrentAnchorsWithAnchor:(id)arg1;
- (void)handleInvalidateToken:(id)arg1;
- (void)applicationDidBecomeActive:(id)arg1;
- (void)applicationWillResignActive:(id)arg1;
- (void)addNotificationHandlers;
- (void)dealloc;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (id)initWithLiveRoom:(id)arg1;
- (void)finishRecordProcess;
- (void)finishRecordScreenAndAudio;
- (void)willRecordScreenAndAudio;
- (void)onError:(long long)arg1;
- (void)onBitRateChange:(double)arg1 width:(double)arg2 height:(double)arg3 fps:(double)arg4;
- (void)onStopWithStatistics:(id)arg1 reason:(long long)arg2;
- (void)onCompletion;
- (void)showLoading;
- (void)hideLoading;
- (void)connectFailed;
- (void)openSucceed;
- (_Bool)shouldUploadStatisticsData;
- (void)tapToolbarChat;
- (void)tapToolbarClose;
- (void)tapToolbarShare;
- (void)removeAudienceView;
- (void)switchViewToAudience;
- (id)audienceVC;
- (void)didReceiveResumeMessage;
- (void)didReceivePauseMessage;
- (void)stopPlay;
- (void)restartPlayWithLiveRoom:(id)arg1;
- (void)startPlayWithLiveRoom:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

