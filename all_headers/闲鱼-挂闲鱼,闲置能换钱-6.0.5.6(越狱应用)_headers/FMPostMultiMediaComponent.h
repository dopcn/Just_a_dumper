//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "FMComponent.h"

#import "FMPostComponentProtocol-Protocol.h"

@class NSMutableArray, NSString, UIImage;

@interface FMPostMultiMediaComponent : FMComponent <FMPostComponentProtocol>
{
    _Bool _showVideoView;
    _Bool _hideAddVideoButton;
    _Bool _isNeedUpdateVideo;
    _Bool _masterButtonHidden;
    _Bool _shouldImageBlurryCheck;
    _Bool _shouldPretransferImgForGuessingCategory;
    unsigned long long _videoUploaderState;
    NSMutableArray *_images;
    unsigned long long _imageUploadStatus;
    NSString *_videoCoverUrl;
    NSString *_videoFilePath;
    NSString *_videoid;
    NSString *_videoObject;
    NSString *_videoMD5;
    NSString *_videoLength;
    UIImage *_videoSnapshot;
    unsigned long long _maxPicCount;
    CDUnknownBlockType _preViewDismisBlock;
    unsigned long long _fromType;
}

@property(nonatomic) _Bool shouldPretransferImgForGuessingCategory; // @synthesize shouldPretransferImgForGuessingCategory=_shouldPretransferImgForGuessingCategory;
@property(nonatomic) _Bool shouldImageBlurryCheck; // @synthesize shouldImageBlurryCheck=_shouldImageBlurryCheck;
@property(nonatomic) _Bool masterButtonHidden; // @synthesize masterButtonHidden=_masterButtonHidden;
@property(nonatomic) _Bool isNeedUpdateVideo; // @synthesize isNeedUpdateVideo=_isNeedUpdateVideo;
@property(nonatomic) unsigned long long fromType; // @synthesize fromType=_fromType;
@property(copy, nonatomic) CDUnknownBlockType preViewDismisBlock; // @synthesize preViewDismisBlock=_preViewDismisBlock;
@property(nonatomic) _Bool hideAddVideoButton; // @synthesize hideAddVideoButton=_hideAddVideoButton;
@property(nonatomic) _Bool showVideoView; // @synthesize showVideoView=_showVideoView;
@property(nonatomic) unsigned long long maxPicCount; // @synthesize maxPicCount=_maxPicCount;
@property(copy, nonatomic) UIImage *videoSnapshot; // @synthesize videoSnapshot=_videoSnapshot;
@property(copy, nonatomic) NSString *videoLength; // @synthesize videoLength=_videoLength;
@property(copy, nonatomic) NSString *videoMD5; // @synthesize videoMD5=_videoMD5;
@property(copy, nonatomic) NSString *videoObject; // @synthesize videoObject=_videoObject;
@property(copy, nonatomic) NSString *videoid; // @synthesize videoid=_videoid;
@property(copy, nonatomic) NSString *videoFilePath; // @synthesize videoFilePath=_videoFilePath;
@property(copy, nonatomic) NSString *videoCoverUrl; // @synthesize videoCoverUrl=_videoCoverUrl;
@property(nonatomic) unsigned long long imageUploadStatus; // @synthesize imageUploadStatus=_imageUploadStatus;
@property(retain, nonatomic) NSMutableArray *images; // @synthesize images=_images;
@property(nonatomic) unsigned long long videoUploaderState; // @synthesize videoUploaderState=_videoUploaderState;
- (void).cxx_destruct;
- (void)setMasterImageAtIndex:(long long)arg1;
- (long long)getDisplayButtonCount;
- (_Bool)checkComponentStatus;
- (void)composeItemDO:(id)arg1;
- (void)setupWithItemDO:(id)arg1;
- (Class)viewClass;
- (void)deleteImage:(long long)arg1;
- (void)updateUploadProgress:(id)arg1;
- (void)reuploadDidFinish:(_Bool)arg1 postImageDO:(id)arg2;
- (void)uploadDidFinish:(_Bool)arg1 postImageDO:(id)arg2;
- (void)uploadDidFinish:(id)arg1 failImageDOs:(id)arg2;
- (void)previewWithIndex:(id)arg1;
- (void)notifyUpdate;
- (void)deleteImageAtIndex:(long long)arg1;
- (void)reUploadWithIndex:(id)arg1;
- (void)presentImagePickerViewController;
- (void)addAction;
- (_Bool)hasMasterImage;
- (void)addNewImageDOs:(id)arg1;
- (void)uploadImageDOs:(id)arg1;
- (void)uploadSingleImage:(long long)arg1;
- (void)uploadReadyImages;
- (void)generateCameraImageDO:(id)arg1;
- (void)saveToPhotosAlbum:(id)arg1;
- (void)processCameraImage:(id)arg1;
- (void)processAssets:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

