//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

#import "AudioPlayManager-Protocol.h"
#import "AudioPlaySleepDelegate-Protocol.h"

@class LMAPMDataSource, LMAPMError, LMAudioListPlayer, LMPlayAlbum, LMPlayItem, NSArray, NSDictionary, NSNumber, NSString, NSTimer;
@protocol AudioPlayHistory, AudioPlaySleep, LMAlbumable, LMPlayable;

@interface LMAudioPlayManager : NSObject <AudioPlaySleepDelegate, AudioPlayManager>
{
    _Bool _isPlayFromHistory;
    NSObject<AudioPlayHistory> *_historySave;
    NSObject<AudioPlaySleep> *_sleeper;
    long long _apm_entityId;
    long long _apm_entityType;
    long long _apm_subEntityId;
    long long _apm_subEntityIndex;
    id <LMAlbumable> _apm_entity;
    LMAPMError *_apm_error;
    NSDictionary *_apm_errAttachInfo;
    unsigned long long _apm_state;
    LMPlayAlbum *_apm_curPlayAlbum;
    LMPlayItem *_apm_curPlayItem;
    long long _apm_listType;
    long long _apm_listSequenceType;
    id <LMPlayable> _apm_subEntity;
    LMAPMDataSource *_dataSource;
    LMAudioListPlayer *_player;
    NSTimer *_saveHistoryTimer;
    NSNumber *_apm_timeNeedSeek;
}

+ (void)configurePlayerManager:(CDUnknownBlockType)arg1;
+ (id)shareInstance;
@property(nonatomic) _Bool isPlayFromHistory; // @synthesize isPlayFromHistory=_isPlayFromHistory;
@property(retain, nonatomic) NSNumber *apm_timeNeedSeek; // @synthesize apm_timeNeedSeek=_apm_timeNeedSeek;
@property(retain, nonatomic) NSTimer *saveHistoryTimer; // @synthesize saveHistoryTimer=_saveHistoryTimer;
@property(retain, nonatomic) LMAudioListPlayer *player; // @synthesize player=_player;
@property(retain, nonatomic) LMAPMDataSource *dataSource; // @synthesize dataSource=_dataSource;
@property(retain, nonatomic) id <LMPlayable> apm_subEntity; // @synthesize apm_subEntity=_apm_subEntity;
@property(nonatomic) long long apm_listSequenceType; // @synthesize apm_listSequenceType=_apm_listSequenceType;
@property(nonatomic) long long apm_listType; // @synthesize apm_listType=_apm_listType;
@property(retain, nonatomic) LMPlayItem *apm_curPlayItem; // @synthesize apm_curPlayItem=_apm_curPlayItem;
@property(retain, nonatomic) LMPlayAlbum *apm_curPlayAlbum; // @synthesize apm_curPlayAlbum=_apm_curPlayAlbum;
@property(nonatomic) unsigned long long apm_state; // @synthesize apm_state=_apm_state;
@property(retain, nonatomic) NSDictionary *apm_errAttachInfo; // @synthesize apm_errAttachInfo=_apm_errAttachInfo;
@property(retain, nonatomic) LMAPMError *apm_error; // @synthesize apm_error=_apm_error;
@property(retain, nonatomic) id <LMAlbumable> apm_entity; // @synthesize apm_entity=_apm_entity;
@property(nonatomic) long long apm_subEntityIndex; // @synthesize apm_subEntityIndex=_apm_subEntityIndex;
@property(nonatomic) long long apm_subEntityId; // @synthesize apm_subEntityId=_apm_subEntityId;
@property(nonatomic) long long apm_entityType; // @synthesize apm_entityType=_apm_entityType;
@property(nonatomic) long long apm_entityId; // @synthesize apm_entityId=_apm_entityId;
@property(readonly, nonatomic) NSObject<AudioPlaySleep> *sleeper; // @synthesize sleeper=_sleeper;
@property(readonly, nonatomic) NSObject<AudioPlayHistory> *historySave; // @synthesize historySave=_historySave;
- (void).cxx_destruct;
- (void)debug_logState:(unsigned long long)arg1;
- (void)configApm_subEntityId:(long long)arg1;
- (void)configAlp_State:(unsigned long long)arg1;
@property(readonly, nonatomic) double apm_currentTime;
@property(readonly, nonatomic) double apm_loadTime;
@property(readonly, nonatomic) double apm_duration;
@property(readonly, nonatomic) unsigned long long apm_curItemPosition;
@property(readonly, nonatomic) NSArray *apm_playList;
- (void)didUpdatePlayList:(id)arg1;
- (void)sleepEventDidHappened;
- (void)amp_playerEndCount;
- (void)amp_playerSaveHistory;
- (void)amp_playerBeginCount;
- (void)convertCurrentPlayItemToFreeFlow;
- (void)playerDidFinishTrack;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
@property(nonatomic) long long apm_playMode;
- (void)mergePlayList:(id)arg1 album:(id)arg2 way:(long long)arg3;
- (id)convertedPlayListIntoPlayItems:(id)arg1;
- (void)changeToErrorStateWithCode:(long long)arg1 lmErr:(id)arg2;
- (void)changeToErrorStateWithCode:(long long)arg1;
- (void)apm_reset;
- (_Bool)checkIfCurEntityIndexExist:(long long)arg1;
- (void)updateAlbumInfo:(id)arg1 tracksInfo:(id)arg2 trackIndex:(long long)arg3;
- (void)apm_syncCurTrack;
- (_Bool)apm_playCurTrack;
- (void)apm_startPlayWithEntityId:(long long)arg1 entityType:(long long)arg2 subEntityIndex:(long long)arg3 listType:(long long)arg4 currentTime:(double)arg5 playNow:(_Bool)arg6;
- (_Bool)apm_continuePlayTrackWithEntityId:(long long)arg1 entityType:(long long)arg2 subEntityIndex:(long long)arg3 listType:(long long)arg4 currentTime:(double)arg5 playNow:(_Bool)arg6;
- (void)apm_deletePlayItemIfNeedsWithId:(long long)arg1;
- (void)apm_deletePlayItemIfNeedsWithIndex:(long long)arg1;
- (_Bool)apm_seekBackward;
- (_Bool)apm_seekForward;
- (void)apm_seekToTime:(double)arg1;
- (_Bool)apm_previous;
- (_Bool)apm_innerNext:(_Bool)arg1 autoFinishPlay:(_Bool)arg2;
- (_Bool)apm_next;
- (_Bool)apm_togglePlayPause;
- (void)apm_pause;
- (_Bool)apm_play;
- (_Bool)apm_loadTrackIfNeedByCache:(_Bool)arg1;
- (void)apm_startPlayWithEntityId:(long long)arg1 entityType:(long long)arg2 subEntityId:(long long)arg3 listType:(long long)arg4 currentTime:(double)arg5 playNow:(_Bool)arg6;
- (_Bool)apm_continuePlayTrackWithEntityId:(long long)arg1 entityType:(long long)arg2 subEntityId:(long long)arg3 listType:(long long)arg4 currentTime:(double)arg5 playNow:(_Bool)arg6;
- (void)apm_playWithEntityId:(long long)arg1 entityType:(long long)arg2 subEntityId:(long long)arg3 listType:(long long)arg4 currentTime:(double)arg5 playNow:(_Bool)arg6;
- (void)apm_playWithEntityId:(long long)arg1 entityType:(long long)arg2 subEntityId:(long long)arg3 listType:(long long)arg4 currentTime:(double)arg5;
- (void)apm_playWithEntityId:(long long)arg1 entityType:(long long)arg2 subEntityIndex:(long long)arg3 listType:(long long)arg4 currentTime:(double)arg5 playNow:(_Bool)arg6;
- (void)apm_playWithEntityId:(long long)arg1 entityType:(long long)arg2 subEntityIndex:(long long)arg3 listType:(long long)arg4 currentTime:(double)arg5;
- (id)init;
- (_Bool)isSectionInvalidError;
- (double)apm_loadProgress;
- (double)apm_progress;
- (int)apm_sectionPlayStatus;
- (_Bool)isNextTrackDownloaded;
- (_Bool)isPrevTrackDownloaded;
- (_Bool)isTrackDownLoadedForPosition:(unsigned long long)arg1;
- (void)deleteSubEntityIdIfNeed:(long long)arg1 album:(id)arg2;
- (void)deleteIndexIfNeed:(long long)arg1 album:(id)arg2;
- (_Bool)isPlaySameTrackIndex:(long long)arg1 albumId:(long long)arg2 entityType:(long long)arg3;
- (_Bool)isPlaySameTrackId:(long long)arg1 albumId:(long long)arg2 entityType:(long long)arg3;
- (_Bool)isPlaySameAlbum:(id)arg1;
- (_Bool)isPlaySameAlbumId:(long long)arg1 entityType:(long long)arg2;
- (_Bool)isPlayingDownLoadedTrack;
- (_Bool)isCanPlay;
- (_Bool)isAboutLoading;
- (_Bool)isAboutPlay;
- (_Bool)checkCurPlayTrackIsLocal;
- (void)anylyseEndPlayDuration;
- (void)anylyseStartPlayDuration;
- (void)anylysePlayCountByYmeng;
- (void)anylysePlayCountByOwnServer;
- (void)anylysePlayCountWithOption:(unsigned long long)arg1;
@property(nonatomic) double startPlayTime;
- (void)showMobileListentingAlertViewWithLongTimeListeningAlertView:(_Bool)arg1;
- (_Bool)promptUserToRest:(_Bool)arg1;
- (void)summationPlayAudioCount;
- (void)clearPlayAudioCount;
@property(nonatomic) unsigned long long autoPlayAudioCount;
- (_Bool)playHistoryIfPossibleForEntityId:(long long)arg1 entityType:(long long)arg2 subEntityId:(long long)arg3;
- (void)playWithHistory:(id)arg1;
- (_Bool)isPlayingSameEntityWithHistory:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

