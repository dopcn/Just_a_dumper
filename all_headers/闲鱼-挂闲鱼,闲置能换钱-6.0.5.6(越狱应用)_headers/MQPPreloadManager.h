//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

@class NSArray, NSMutableDictionary, NSMutableString, NSString;
@protocol OS_dispatch_queue;

@interface MQPPreloadManager : NSObject
{
    NSMutableString *record;
    NSMutableDictionary *selCategory;
    NSMutableDictionary *selIndexes;
    NSMutableDictionary *cacheValues;
    NSMutableDictionary *cacheTimeStamps;
    NSArray *noSwizzleList;
    NSArray *swizzleList;
    _Bool _hasSwizzled;
    _Bool _canMonitorBackground;
    NSString *_touchHost;
    double _touchTimeStamp;
    double _monitorTimeStamp;
    NSObject<OS_dispatch_queue> *_taskQueue;
}

+ (id)defaultManager;
+ (void)scheduleManager;
+ (void)load;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *taskQueue; // @synthesize taskQueue=_taskQueue;
@property(nonatomic) _Bool canMonitorBackground; // @synthesize canMonitorBackground=_canMonitorBackground;
@property(nonatomic) _Bool hasSwizzled; // @synthesize hasSwizzled=_hasSwizzled;
@property(nonatomic) double monitorTimeStamp; // @synthesize monitorTimeStamp=_monitorTimeStamp;
@property(nonatomic) double touchTimeStamp; // @synthesize touchTimeStamp=_touchTimeStamp;
@property(copy, nonatomic) NSString *touchHost; // @synthesize touchHost=_touchHost;
- (void).cxx_destruct;
- (id)endTrack;
- (void)startTrack;
- (void)modifyTrackAtIndex:(unsigned long long)arg1 useCache:(_Bool)arg2;
- (id)hookedMethodWithObj:(id)arg1 sel:(id)arg2;
- (void)updateObj:(id)arg1 sel:(id)arg2 delay:(double)arg3;
- (void)performDataCacheWithObject:(id)arg1 selector:(id)arg2;
- (void)performFlushDataCache;
- (void)swizzleWithItem:(id)arg1;
- (void)performSwizzle;
- (void)didBecomeActive:(id)arg1;
- (void)performTouchRequestWithFlush:(_Bool)arg1 delay:(double)arg2 seq:(unsigned long long)arg3;
- (void)monitorBackgroundActivity;
- (void)dataCacheFlush;
- (void)networkTouch;
- (double)requestInterval;
- (id)init;

@end

