//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

#import "CLLocationManagerDelegate-Protocol.h"
#import "MKMapViewDelegate-Protocol.h"
#import "MKReverseGeocoderDelegate-Protocol.h"

@class CCBLocationModel_ccb, CLLocation, CLLocationManager, MKMapView, NSString, NSTimer;
@protocol CCBLocationDelegate_ccb;

@interface CCBLocationUtil_ccb : NSObject <CLLocationManagerDelegate, MKReverseGeocoderDelegate, MKMapViewDelegate>
{
    CLLocationManager *locationManager;
    NSTimer *requestTimer;
    long long m_period;
    CCBLocationModel_ccb *m_locationModel;
    NSObject<CCBLocationDelegate_ccb> *m_delegate;
    CLLocation *m_curLocation;
    _Bool timeFlag;
    MKMapView *m_mapView;
}

+ (id)getInstnce;
@property(retain, nonatomic) CCBLocationModel_ccb *m_locationModel; // @synthesize m_locationModel;
@property(retain, nonatomic) CLLocation *m_curLocation; // @synthesize m_curLocation;
@property(nonatomic) NSObject<CCBLocationDelegate_ccb> *m_delegate; // @synthesize m_delegate;
- (void)dealloc;
- (void)stop;
- (double)getDistanceFromLatutide:(double)arg1 fromLongitude:(double)arg2 toLatutide:(double)arg3 toLongitude:(double)arg4;
- (double)getDistanceLatutide:(double)arg1 getDistanceLongitude:(double)arg2;
- (double)curLocationX:(double)arg1 curLocationY:(double)arg2 curLocationX1:(double)arg3 curLocationY1:(double)arg4;
- (void)start;
- (void)setPeriod:(long long)arg1;
- (void)reverseGeocoder:(id)arg1 didFindPlacemark:(id)arg2;
- (id)getLocationModel;
- (void)reverseGeocoder:(id)arg1 didFailWithError:(id)arg2;
- (void)mapView:(id)arg1 didFailToLocateUserWithError:(id)arg2;
- (void)mapView:(id)arg1 didUpdateUserLocation:(id)arg2;
- (id)init;
- (void)getLocation;
- (void)startTimer;
- (void)closeTimer;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

