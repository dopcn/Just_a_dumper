//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

@class AVPlayer, AVPlayerItem, AudioAlbumData, NSArray, NSString, SDWebImageDownloadToken, UIImage;

@interface AudioPlaybackSrv : NSObject
{
    _Bool _pauseByInterrupt;
    int __indexOfCurrentTrack;
    unsigned long long _mode;
    unsigned long long _order;
    AVPlayer *__trackPlayer;
    id __timeObserver;
    AVPlayerItem *__trackAVPItem;
    AudioAlbumData *__theAlbum;
    NSArray *__trackList;
    double _duration;
    double _elapsed;
    double _progress;
    SDWebImageDownloadToken *__sdWebImage;
    NSString *__cached_sdwImageUrl;
    UIImage *__cached_sdwImage;
    AVPlayerItem *__kvoAVPItem;
    CDUnknownBlockType __kvoAVPItemHandler;
}

+ (id)inst;
@property(copy, nonatomic) CDUnknownBlockType _kvoAVPItemHandler; // @synthesize _kvoAVPItemHandler=__kvoAVPItemHandler;
@property(retain, nonatomic) AVPlayerItem *_kvoAVPItem; // @synthesize _kvoAVPItem=__kvoAVPItem;
@property(retain, nonatomic) UIImage *_cached_sdwImage; // @synthesize _cached_sdwImage=__cached_sdwImage;
@property(retain, nonatomic) NSString *_cached_sdwImageUrl; // @synthesize _cached_sdwImageUrl=__cached_sdwImageUrl;
@property(retain, nonatomic) SDWebImageDownloadToken *_sdWebImage; // @synthesize _sdWebImage=__sdWebImage;
@property(nonatomic) double progress; // @synthesize progress=_progress;
@property(nonatomic) double elapsed; // @synthesize elapsed=_elapsed;
@property(nonatomic) double duration; // @synthesize duration=_duration;
@property(nonatomic) int _indexOfCurrentTrack; // @synthesize _indexOfCurrentTrack=__indexOfCurrentTrack;
@property(retain, nonatomic) NSArray *_trackList; // @synthesize _trackList=__trackList;
@property(retain, nonatomic) AudioAlbumData *_theAlbum; // @synthesize _theAlbum=__theAlbum;
@property(nonatomic, getter=isPauseByInterrupt) _Bool pauseByInterrupt; // @synthesize pauseByInterrupt=_pauseByInterrupt;
@property(retain, nonatomic) AVPlayerItem *_trackAVPItem; // @synthesize _trackAVPItem=__trackAVPItem;
@property(retain, nonatomic) id _timeObserver; // @synthesize _timeObserver=__timeObserver;
@property(retain, nonatomic) AVPlayer *_trackPlayer; // @synthesize _trackPlayer=__trackPlayer;
@property(nonatomic) unsigned long long order; // @synthesize order=_order;
@property(nonatomic) unsigned long long mode; // @synthesize mode=_mode;
- (void).cxx_destruct;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)_stopKVOavpItem;
- (void)_kvoDuration4avpItem:(id)arg1 handler:(CDUnknownBlockType)arg2;
- (void)_handleNetworkChanged:(id)arg1;
- (void)_onAppRemoteControl:(id)arg1;
- (void)_audioRouteChanged:(id)arg1;
- (void)_attach2playerItem:(id)arg1;
- (void)_deattachAllPlayerItem;
- (void)_deattachAVPlayer;
- (void)_playerItemFailedToPlayToEnd:(id)arg1;
- (void)_playerItemDidReachEnd:(id)arg1;
- (void)_updateTime;
- (void)_updateNowPlayingCenter;
- (void)_updateNowPlayingCenter_async;
- (void)_enablePlaybackInBackground;
- (void)_notify:(id)arg1;
- (_Bool)_playAudioData:(id)arg1;
- (id)_pickupPrevTrack;
- (id)_pickupNextTrack;
- (_Bool)_prepareAlbum:(id)arg1 withPreferred1st:(int)arg2;
- (id)_pinTrackTo1st:(id)arg1 inList:(id)arg2;
- (_Bool)_shuffleList:(id)arg1;
- (id)_sortAlubmByMode:(id)arg1 preferredTrack:(id)arg2 indexOfpreferred:(int *)arg3;
- (id)_currentTrackData;
- (id)_currentAlbumData;
- (void)_stop;
- (id)currentTrack;
- (id)currentAlbum;
- (_Bool)playAudioAlbum:(id)arg1 atIndex:(int)arg2;
- (_Bool)playAudioAlbum:(id)arg1;
- (_Bool)playPrev;
- (_Bool)playNext;
- (void)stop;
- (void)pauseByInterrupt;
- (_Bool)resumeFromInterrupt;
- (void)_doPause;
- (void)pause;
- (void)seekTo:(double)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (_Bool)_doPlay;
- (_Bool)resume;
- (_Bool)isStalling;
- (_Bool)isPlaying;
- (id)list4display;
- (void)dealloc;
- (id)init;
- (id)image4order;
- (id)title4order;
- (id)image4mode;
- (id)title4mode;

@end

