//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <UIKit/UIView.h>

#import "UIAlertViewDelegate-Protocol.h"
#import "UIGestureRecognizerDelegate-Protocol.h"

@class AVPlayer, AVPlayerItem, AVPlayerLayer, CMPopTipView, FastForwardView, NSDateFormatter, NSString, NSTimer, SMGASlider, UIActivityIndicatorView, UIButton, UIImage, UIImageView, UILabel, UIProgressView, UISlider, UITapGestureRecognizer, UIVisualEffectView;
@protocol WMPlayerDelegate;

@interface WMPlayer : UIView <UIGestureRecognizerDelegate, UIAlertViewDelegate>
{
    _Bool _hasMoved;
    float _touchBeginValue;
    float _touchBeginLightValue;
    float _touchBeginVoiceValue;
    double totalTime;
    UITapGestureRecognizer *singleTap;
    _Bool _enableVolumeGesture;
    _Bool _enableProgressGesture;
    _Bool _isFullscreen;
    _Bool _showNextTips;
    _Bool _listPlayer;
    _Bool _videoADDetailsPlayer;
    _Bool _notHaveNextVideo;
    _Bool _isInitPlayer;
    _Bool _isDragingSlider;
    AVPlayer *_player;
    AVPlayerLayer *_playerLayer;
    id <WMPlayerDelegate> _delegate;
    UIImageView *_bottomView;
    UIImageView *_topView;
    UILabel *_titleLabel;
    long long _state;
    long long _closeBtnStyle;
    NSTimer *_autoDismissTimer;
    UIButton *_fullScreenBtn;
    UIButton *_playOrPauseBtn;
    UIButton *_closeBtn;
    UILabel *_loadFailedLabel;
    UIVisualEffectView *_effectView;
    UIView *_contentView;
    AVPlayerItem *_currentItem;
    UIActivityIndicatorView *_loadingView;
    NSString *_URLString;
    FastForwardView *_FF_View;
    double _seekTime;
    UIImage *_placeholderImage;
    UILabel *_leftTimeLabel;
    UILabel *_rightTimeLabel;
    UIButton *_bottomPlayOrPauseBtn;
    UIButton *_bottomNextBtn;
    CMPopTipView *_popTipView;
    SMGASlider *_progressSlider;
    UISlider *_volumeSlider;
    UIProgressView *_loadingProgress;
    unsigned long long _controlType;
    NSDateFormatter *_dateFormatter;
    id _playbackTimeObserver;
    UITapGestureRecognizer *_tap;
    struct CGPoint _touchBeginPoint;
}

+ (struct CGAffineTransform)getCurrentDeviceOrientation;
@property(nonatomic) _Bool isDragingSlider; // @synthesize isDragingSlider=_isDragingSlider;
@property(retain, nonatomic) UITapGestureRecognizer *tap; // @synthesize tap=_tap;
@property(retain, nonatomic) id playbackTimeObserver; // @synthesize playbackTimeObserver=_playbackTimeObserver;
@property(retain, nonatomic) NSDateFormatter *dateFormatter; // @synthesize dateFormatter=_dateFormatter;
@property(nonatomic) unsigned long long controlType; // @synthesize controlType=_controlType;
@property(nonatomic) struct CGPoint touchBeginPoint; // @synthesize touchBeginPoint=_touchBeginPoint;
@property(nonatomic) _Bool isInitPlayer; // @synthesize isInitPlayer=_isInitPlayer;
@property(retain, nonatomic) UIProgressView *loadingProgress; // @synthesize loadingProgress=_loadingProgress;
@property(retain, nonatomic) UISlider *volumeSlider; // @synthesize volumeSlider=_volumeSlider;
@property(retain, nonatomic) SMGASlider *progressSlider; // @synthesize progressSlider=_progressSlider;
@property(nonatomic, getter=isNotHaveNextVideo) _Bool notHaveNextVideo; // @synthesize notHaveNextVideo=_notHaveNextVideo;
@property(nonatomic, getter=isVideoADDetailsPlayer) _Bool videoADDetailsPlayer; // @synthesize videoADDetailsPlayer=_videoADDetailsPlayer;
@property(nonatomic, getter=isListPlayer) _Bool listPlayer; // @synthesize listPlayer=_listPlayer;
@property(nonatomic) _Bool showNextTips; // @synthesize showNextTips=_showNextTips;
@property(retain, nonatomic) CMPopTipView *popTipView; // @synthesize popTipView=_popTipView;
@property(retain, nonatomic) UIButton *bottomNextBtn; // @synthesize bottomNextBtn=_bottomNextBtn;
@property(retain, nonatomic) UIButton *bottomPlayOrPauseBtn; // @synthesize bottomPlayOrPauseBtn=_bottomPlayOrPauseBtn;
@property(retain, nonatomic) UILabel *rightTimeLabel; // @synthesize rightTimeLabel=_rightTimeLabel;
@property(retain, nonatomic) UILabel *leftTimeLabel; // @synthesize leftTimeLabel=_leftTimeLabel;
@property(copy, nonatomic) UIImage *placeholderImage; // @synthesize placeholderImage=_placeholderImage;
@property(nonatomic) double seekTime; // @synthesize seekTime=_seekTime;
@property(retain, nonatomic) FastForwardView *FF_View; // @synthesize FF_View=_FF_View;
@property(copy, nonatomic) NSString *URLString; // @synthesize URLString=_URLString;
@property(retain, nonatomic) UIActivityIndicatorView *loadingView; // @synthesize loadingView=_loadingView;
@property(retain, nonatomic) AVPlayerItem *currentItem; // @synthesize currentItem=_currentItem;
@property(retain, nonatomic) UIView *contentView; // @synthesize contentView=_contentView;
@property(retain, nonatomic) UIVisualEffectView *effectView; // @synthesize effectView=_effectView;
@property(retain, nonatomic) UILabel *loadFailedLabel; // @synthesize loadFailedLabel=_loadFailedLabel;
@property(retain, nonatomic) UIButton *closeBtn; // @synthesize closeBtn=_closeBtn;
@property(retain, nonatomic) UIButton *playOrPauseBtn; // @synthesize playOrPauseBtn=_playOrPauseBtn;
@property(retain, nonatomic) UIButton *fullScreenBtn; // @synthesize fullScreenBtn=_fullScreenBtn;
@property(nonatomic) _Bool isFullscreen; // @synthesize isFullscreen=_isFullscreen;
@property(retain, nonatomic) NSTimer *autoDismissTimer; // @synthesize autoDismissTimer=_autoDismissTimer;
@property(nonatomic) long long closeBtnStyle; // @synthesize closeBtnStyle=_closeBtnStyle;
@property(nonatomic) long long state; // @synthesize state=_state;
@property(retain, nonatomic) UILabel *titleLabel; // @synthesize titleLabel=_titleLabel;
@property(nonatomic) _Bool enableProgressGesture; // @synthesize enableProgressGesture=_enableProgressGesture;
@property(nonatomic) _Bool enableVolumeGesture; // @synthesize enableVolumeGesture=_enableVolumeGesture;
@property(retain, nonatomic) UIImageView *topView; // @synthesize topView=_topView;
@property(retain, nonatomic) UIImageView *bottomView; // @synthesize bottomView=_bottomView;
@property(nonatomic) __weak id <WMPlayerDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) AVPlayerLayer *playerLayer; // @synthesize playerLayer=_playerLayer;
@property(retain, nonatomic) AVPlayer *player; // @synthesize player=_player;
- (void).cxx_destruct;
- (void)alertView:(id)arg1 clickedButtonAtIndex:(long long)arg2;
- (id)version;
- (void)dealloc;
- (void)resetWMPlayer;
- (void)hideTheLightViewWithHidden:(_Bool)arg1;
- (void)timeValueChangingWithValue:(float)arg1;
- (float)moveProgressControllWithTempPoint:(struct CGPoint)arg1;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (void)touchesCancelled:(id)arg1 withEvent:(id)arg2;
- (void)touchesMoved:(id)arg1 withEvent:(id)arg2;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (double)availableDuration;
- (id)convertTime:(float)arg1;
- (CDStruct_1b6d18a9)playerItemDuration;
- (void)seekToTimeToPlay:(double)arg1;
- (void)syncScrubber;
- (void)initTimer;
- (void)autoDismissBottomView:(id)arg1;
- (void)loadedTimeRanges;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)updateProgress:(id)arg1;
- (void)stratDragSlide:(id)arg1;
- (void)hiddenControlView;
- (void)showControlView;
- (void)moviePlayDidEnd:(id)arg1;
- (id)buttonImageFromColor:(id)arg1;
- (void)creatWMPlayerAndReadyToPlay;
- (void)handleDoubleTap:(id)arg1;
- (void)handleSingleTap:(id)arg1;
- (void)pause;
- (void)play;
- (void)nextVideo:(id)arg1;
- (void)PlayOrPause:(id)arg1;
- (void)setCurrentTime:(double)arg1;
- (double)currentTime;
- (double)duration;
- (void)colseTheVideo:(id)arg1;
- (void)fullScreenAction:(id)arg1;
- (void)layoutSubviews;
- (void)actionTapGesture:(id)arg1;
- (void)appBecomeActive:(id)arg1;
- (void)appwillResignActive:(id)arg1;
- (void)appWillEnterForeground:(id)arg1;
- (void)appDidEnterBackground:(id)arg1;
- (void)initWMPlayer;
- (void)creatFF_View;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)awakeFromNib;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

