//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

@class LMDBOperation;

@interface LMDBManager : NSObject
{
    LMDBOperation *_dbOperation;
}

+ (id)shareDBManager;
@property(retain, nonatomic) LMDBOperation *dbOperation; // @synthesize dbOperation=_dbOperation;
- (void).cxx_destruct;
- (_Bool)deleteReadBookChaptersWithBookId:(long long)arg1;
- (id)queryReadChapterWithSQL:(id)arg1;
- (id)queryReadChapterListWithBookId:(long long)arg1 descend:(_Bool)arg2;
- (id)queryReadChapterWithBookId:(long long)arg1 section:(long long)arg2;
- (id)queryReadChapterWithId:(long long)arg1;
- (id)queryReadChapterListWithBookId:(long long)arg1;
- (_Bool)deleteImageTopicWithFilePath:(id)arg1;
- (id)queryAllNonePostImageTopicWithGroupId:(long long)arg1;
- (_Bool)saveImageTopic:(id)arg1 andGroupID:(long long)arg2;
- (_Bool)deleteRecordingAudioWithFilePath:(id)arg1;
- (id)queryAllNonePostRecordingAudiosWithGroupId:(long long)arg1;
- (_Bool)saveRecordingAudio:(id)arg1;
- (_Bool)insertLikeOfEntityWithId:(long long)arg1 entityType:(long long)arg2 like:(long long)arg3;
- (_Bool)checkEntityIsLikeWithId:(long long)arg1 entityType:(long long)arg2;
- (_Bool)queryNotDownloadedWithByEntityId:(long long)arg1 entityType:(long long)arg2;
- (long long)queryAudioDownloadStatusWithByAudioId:(long long)arg1 entityType:(long long)arg2;
- (long long)queryEntityIdWithByAudioId:(long long)arg1 entityType:(long long)arg2;
- (long long)queryDownloadLastAudioIndexWithEntityId:(long long)arg1 entityType:(long long)arg2;
- (double)queryDownloadProgressFromDatabaseByAudioId:(long long)arg1 entityType:(long long)arg2;
- (id)queryAllNotDownloadCompleteAudiosWithEntityId:(long long)arg1 entityType:(long long)arg2;
- (long long)countAllDownloadedSection;
- (id)queryAllHaveDownloadCompleteAudios;
- (id)queryAllNotDownloadCompleteAudios;
- (void)updateDownloadStatusAndSetLoclPathNull:(long long)arg1 entityType:(long long)arg2;
- (id)queryAllDownloadedAudioByEntityId:(long long)arg1 entityType:(long long)arg2;
- (long long)queryAllDownloadedAudiosCountInDownloadTableWithEntityId:(long long)arg1 entityType:(long long)arg2;
- (long long)queryAllaudiosCountInDownloadTableWithEntityId:(long long)arg1 entityType:(long long)arg2;
- (id)queryAllCouldBeDownloadAudioByEntityId:(long long)arg1 entityType:(long long)arg2 start:(long long)arg3;
- (void)saveAudio:(long long)arg1 entityType:(long long)arg2 localPathToDataBase:(id)arg3;
- (void)updateAllUnCompleteDownloadStatusToWait;
- (void)updateAllUnCompleteDownloadStatusToPause;
- (void)saveAudio:(long long)arg1 entityType:(long long)arg2 status:(long long)arg3;
- (void)saveAudio:(long long)arg1 entityType:(long long)arg2 progress:(double)arg3;
- (void)saveAudio:(long long)arg1 entityType:(long long)arg2 status:(long long)arg3 progress:(double)arg4;
- (void)refreshBookUpdateStateWithEntityId:(long long)arg1 entityType:(long long)arg2;
- (_Bool)updateHistoryEnterType:(long long)arg1 entityId:(long long)arg2 entityType:(long long)arg3;
- (_Bool)updateCollectStateWithEntityId:(long long)arg1 entityType:(long long)arg2;
- (_Bool)updateHistoryStateWithEntityId:(long long)arg1 entityType:(long long)arg2;
- (id)queryCollectionDataWithEntityId:(long long)arg1 entityType:(long long)arg2;
- (id)queryPlayHistoryDataWithEntityId:(long long)arg1 entityType:(long long)arg2;
- (id)queryLastPlayHistoryData;
- (_Bool)checkAudioIsLocal:(long long)arg1 entityType:(long long)arg2 audioId:(long long)arg3;
- (_Bool)checkAlbumIsCollection:(long long)arg1;
- (_Bool)checkBookIsCollection:(long long)arg1;
- (_Bool)batchDeleteCollectWithRecordState:(long long)arg1;
- (_Bool)deleteAlLocallHistoryData;
- (_Bool)batchDeleteHistoryWithRecordState:(long long)arg1;
- (_Bool)deleteRecordDeleteCollectWithEntityId:(long long)arg1 entityType:(long long)arg2;
- (_Bool)deleteCollectWithEntityId:(long long)arg1 entityType:(long long)arg2;
- (_Bool)deleteHistoryWithEntityId:(long long)arg1 entityType:(long long)arg2;
- (id)queryUserCollectionWithUpdateState:(long long)arg1;
- (id)queryUserCollectionsWithRecordState:(long long)arg1;
- (id)queryUserCollections;
- (id)qureryAllHistroyRecord;
- (id)queryUserPlayHistorysWithRecordState:(long long)arg1;
- (id)queryUserPlayHistorysWithRecordCount:(long long)arg1;
- (_Bool)updateCollectionToRecordState:(long long)arg1 entityId:(long long)arg2 entityType:(long long)arg3;
- (_Bool)saveCollections:(id)arg1;
- (_Bool)saveCollection:(id)arg1;
- (_Bool)savePlayHistorys:(id)arg1;
- (_Bool)saveLastPlayAudio:(id)arg1;
- (_Bool)deleteAllProgrammesInListenBarWithType:(long long)arg1;
- (id)queryAllProgrammesWithType:(long long)arg1;
- (_Bool)saveProgrammeIntoDB:(id)arg1 withType:(long long)arg2;
- (_Bool)saveProgrammeIntoDBWith:(id)arg1;
- (_Bool)deleteAllAnnouncersInListenBarWithType:(long long)arg1;
- (_Bool)queryAnnouncerFollowStateOfAnnouncer:(id)arg1;
- (_Bool)updateAnnouncer:(id)arg1 follow:(_Bool)arg2;
- (id)queryAnnouncersDetailWithIds:(id)arg1;
- (id)queryAnnouncerDetailWithId:(long long)arg1;
- (void)insertAnnouncersDetailWith:(id)arg1;
- (_Bool)insertAnnouncerDetailWith:(id)arg1;
- (void)updateListenBarAnnouncerFollowStateWithAnnouncerId:(long long)arg1 andNewState:(long long)arg2;
- (void)updateListenBarAnnouncerFollowStateWithAnnouncerId:(long long)arg1 type:(long long)arg2 andNewState:(long long)arg3;
- (id)queryAllAnnouncersWithType:(long long)arg1;
- (_Bool)saveAnnouncerIntoDB:(id)arg1 withType:(long long)arg2;
- (_Bool)saveAnnouncerIntoDBWithAnnouncer:(id)arg1;
- (long long)queryProgrammeAudioListOrderWithProgrammeId:(long long)arg1;
- (_Bool)saveProgrammeAudioListWithProgrammeId:(long long)arg1 order:(long long)arg2;
- (id)queryAudioOfProgrammeId:(long long)arg1 audioId:(long long)arg2;
- (id)queryAllAudiosOfProgrammeId:(long long)arg1;
- (_Bool)saveProgramme:(id)arg1 audios:(id)arg2;
- (_Bool)deleteAllAudiosOfProgramme:(id)arg1;
- (id)queryProgrammeDetailWithId:(long long)arg1;
- (void)updateFreeEndTime:(double)arg1 programmeId:(long long)arg2;
- (void)updatePayType:(long long)arg1 programmeId:(long long)arg2;
- (long long)getPayTypeByProgrammeId:(long long)arg1;
- (_Bool)updateProgrammeDetail:(id)arg1;
- (long long)getUnreadSysMsgCountWithActiveUserId:(long long)arg1;
- (id)getSysMsgsWithMsgId:(long long)arg1 pageSize:(long long)arg2 isHistory:(_Bool)arg3;
- (id)getSysMsgsWithMsgId:(long long)arg1 pageSize:(long long)arg2;
- (unsigned long long)getLatestMsgId;
- (_Bool)batchUpdateReadStatus;
- (_Bool)updateReadStatus:(id)arg1;
- (_Bool)batchUpdateSysMsgs:(id)arg1;
- (_Bool)deleteAllSysMsg;
- (long long)getUnreadCommentCountWithActiveUserId:(long long)arg1;
- (_Bool)batchUpdateReadStatusOfComments;
- (_Bool)updateUnreadState:(id)arg1;
- (_Bool)deleteAllCommentMsgs;
- (_Bool)batchUpdateCommentsMsgs:(id)arg1;
- (id)queryCommentMsgListWithId:(long long)arg1 size:(long long)arg2;
- (long long)getUnreadChatCountWithActiveUserId:(long long)arg1;
- (void)deleteMsgChatFakeMessageOfOtherUserId:(long long)arg1 activeUserId:(long long)arg2;
- (void)deleteMsgChatDetailWithOtherUserId:(long long)arg1 activeUserId:(long long)arg2;
- (void)deleteMsgOneChatDetailWithOtherUserId:(long long)arg1 msgId:(long long)arg2 activeUserId:(long long)arg3;
- (void)updateOneChatMessage:(id)arg1 activeUserId:(long long)arg2;
- (void)insertMsgChatDetailListWithChats:(id)arg1 activeUserId:(long long)arg2;
- (long long)queryMsgCurrentSessionMinNegativeMsgIdOfOtherUserId:(long long)arg1 activeUserId:(long long)arg2;
- (long long)queryMsgCachedMessageCountOfOtherUserId:(long long)arg1 activeUserId:(long long)arg2;
- (long long)queryMsgCurrentSessionMaxTrueMsgIdOfOtherUserId:(long long)arg1 activeUserId:(long long)arg2;
- (long long)queryMsgCurrentSessionMaxSendIdOfOtherUserId:(long long)arg1 activeUserId:(long long)arg2;
- (id)getChatDetailMessageFromResult:(id)arg1;
- (id)queryMsgChatDetailSendWithOtherUserId:(long long)arg1 activeUserId:(long long)arg2;
- (id)queryMsgChatDetailListWithSessionId:(long long)arg1 size:(long long)arg2 msgId:(long long)arg3 activeUserId:(long long)arg4;
- (id)queryMsgLastestChatDetailWithOtherUserId:(long long)arg1 size:(long long)arg2 activeUserId:(long long)arg3;
- (void)deleteMsgAllChatSessionWithActiveUserId:(long long)arg1;
- (void)deleteMsgChatSessionListWithUserId:(long long)arg1 activeUserId:(long long)arg2;
- (void)updateMsgChatSessionListWithSessions:(id)arg1 activeUserId:(long long)arg2;
- (id)queryMsgChatSessionListWithActiveUserId:(long long)arg1;
- (_Bool)updateOldDownloadAndRecordCover:(id)arg1;
- (_Bool)updateMineRelativeCount:(id)arg1;
- (id)queryUserWithUserId:(long long)arg1;
- (_Bool)modifyUser:(id)arg1 operation:(int)arg2;
- (void)updateAllLastUpdateTimeToDefault;
- (long long)querySectionCountStoredInDatabaseWithBookId:(long long)arg1 pageNum:(long long)arg2;
- (double)excuteQueryTimeSQL:(id)arg1 columnName:(id)arg2;
- (void)excuteUpdateTimeSQL:(id)arg1;
- (double)queryBookSectionLastUpdateTimeWithBookId:(long long)arg1 pageNum:(long long)arg2;
- (void)invalidBookSectionsByBookId:(long long)arg1 pageNum:(long long)arg2;
- (void)invalidBookSectionsByBookId:(long long)arg1;
- (void)updateBookLastUpdateTimeByBookId:(long long)arg1;
- (double)queryBookLastUpdateTimeByBookId:(long long)arg1;
- (id)queryDownloadItemWithEntityId:(long long)arg1 audioId:(long long)arg2;
- (void)insertDownloadTaskToDatabaseWithDonwloadItem:(id)arg1;
- (void)updateWholeBookBuyStatus:(long long)arg1 withBookId:(long long)arg2;
- (void)updateWholeBookPayType:(long long)arg1 withBookId:(long long)arg2;
- (void)updateBookSectionPayType:(long long)arg1 withBookId:(long long)arg2 sections:(id)arg3;
- (void)resetStrategyBySectionId:(long long)arg1 withBookId:(long long)arg2;
- (void)updateBookSectionBuyStatus:(long long)arg1 withBookId:(long long)arg2 sections:(id)arg3;
- (void)updateAllNeedBuyBookSectionToUnBuy;
- (void)invalidAllProgrammeDetailAndAudios;
- (void)invalidAllBookDetailAndSections;
- (void)deleteAllPurchasedBookSection;
- (long long)getSaveBookSectionCountByBookId:(long long)arg1;
- (void)deleteAllBookSectionWithBookId:(long long)arg1;
- (void)deleteBookSectionWithBookId:(long long)arg1 pageNum:(long long)arg2;
- (void)savebookSectionToDatabase:(id)arg1 bookId:(long long)arg2 pageNum:(long long)arg3;
- (_Bool)checkBookSectionIsExistWithBookId:(long long)arg1 pageNum:(long long)arg2;
- (id)queryBookSetionFromDatabaseWithBookId:(long long)arg1 SectionId:(long long)arg2;
- (id)queryBookSetionFromDatabaseWithBookId:(long long)arg1 pageNum:(long long)arg2 sort:(long long)arg3;
- (_Bool)updateProgrammeMarkStateWithProgrammeId:(long long)arg1 state:(_Bool)arg2;
- (_Bool)queryProgrammeIsMarked:(long long)arg1;
- (void)updateMarkedBookStateWithBookId:(long long)arg1;
- (long long)checkMarkedBookUpdateState;
- (_Bool)queryIsBookMarked:(long long)arg1;
- (void)updateBookMarkInfoToDatabaseByBookDetail:(id)arg1;
- (void)updateEntityCommentCountWithEntityId:(long long)arg1 entityType:(long long)arg2 count:(long long)arg3;
- (void)updateBookCommentCountWithBookId:(long long)arg1 count:(long long)arg2;
- (void)saveBookDetailInfoToDatabase:(id)arg1;
- (void)updateFreeEndTime:(double)arg1 byBookId:(long long)arg2;
- (void)deleteAllPayBook;
- (void)updatePayType:(long long)arg1 byBookId:(long long)arg2;
- (long long)getPayTypeByBookId:(long long)arg1;
- (id)getOneBookInfoFromDatabaseByBookId:(long long)arg1;
- (id)buildFakeEntityId:(long long)arg1 entitType:(long long)arg2;
- (_Bool)isDownloadedWithEntityId:(long long)arg1 entityType:(long long)arg2 subEntityId:(long long)arg3;
- (_Bool)updateAllNewAddPlayHistoryToServerMark;

@end

