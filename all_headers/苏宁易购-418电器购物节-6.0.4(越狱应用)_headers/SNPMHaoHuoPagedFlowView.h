//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <UIKit/UIView.h>

#import "UIScrollViewDelegate-Protocol.h"

@class NSMutableArray, NSString, NSTimer, UIPageControl, UIScrollView;
@protocol SNPMHaoHuoPagedFlowViewDataSource, SNPMHaoHuoPagedFlowViewDelegate;

@interface SNPMHaoHuoPagedFlowView : UIView <UIScrollViewDelegate>
{
    _Bool _needsReload;
    _Bool _isOpenAutoScroll;
    _Bool _isCarousel;
    int _orientation;
    UIScrollView *_scrollView;
    long long _pageCount;
    NSMutableArray *_cells;
    NSMutableArray *_reusableCells;
    id <SNPMHaoHuoPagedFlowViewDataSource> _dataSource;
    id <SNPMHaoHuoPagedFlowViewDelegate> _delegate;
    UIPageControl *_pageControl;
    double _minimumPageAlpha;
    double _leftRightMargin;
    double _topBottomMargin;
    long long _currentPageIndex;
    NSTimer *_timer;
    double _autoTime;
    long long _orginPageCount;
    long long _page;
    struct _NSRange _visibleRange;
    struct CGSize _pageSize;
}

@property(nonatomic) struct CGSize pageSize; // @synthesize pageSize=_pageSize;
@property(nonatomic) long long page; // @synthesize page=_page;
@property(nonatomic) long long orginPageCount; // @synthesize orginPageCount=_orginPageCount;
@property(nonatomic) double autoTime; // @synthesize autoTime=_autoTime;
@property(nonatomic) __weak NSTimer *timer; // @synthesize timer=_timer;
@property(nonatomic) long long currentPageIndex; // @synthesize currentPageIndex=_currentPageIndex;
@property(nonatomic) _Bool isCarousel; // @synthesize isCarousel=_isCarousel;
@property(nonatomic) _Bool isOpenAutoScroll; // @synthesize isOpenAutoScroll=_isOpenAutoScroll;
@property(nonatomic) double topBottomMargin; // @synthesize topBottomMargin=_topBottomMargin;
@property(nonatomic) double leftRightMargin; // @synthesize leftRightMargin=_leftRightMargin;
@property(nonatomic) double minimumPageAlpha; // @synthesize minimumPageAlpha=_minimumPageAlpha;
@property(retain, nonatomic) UIPageControl *pageControl; // @synthesize pageControl=_pageControl;
@property(nonatomic) id <SNPMHaoHuoPagedFlowViewDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) id <SNPMHaoHuoPagedFlowViewDataSource> dataSource; // @synthesize dataSource=_dataSource;
@property(retain, nonatomic) NSMutableArray *reusableCells; // @synthesize reusableCells=_reusableCells;
@property(nonatomic) struct _NSRange visibleRange; // @synthesize visibleRange=_visibleRange;
@property(retain, nonatomic) NSMutableArray *cells; // @synthesize cells=_cells;
@property(nonatomic) long long pageCount; // @synthesize pageCount=_pageCount;
@property(nonatomic) _Bool needsReload; // @synthesize needsReload=_needsReload;
@property(retain, nonatomic) UIScrollView *scrollView; // @synthesize scrollView=_scrollView;
@property(nonatomic) int orientation; // @synthesize orientation=_orientation;
- (void).cxx_destruct;
- (void)singleButtonTapAction:(long long)arg1 withCell:(id)arg2;
- (void)singleCellTapAction:(long long)arg1 withCell:(id)arg2;
- (void)scrollViewWillEndDragging:(id)arg1 withVelocity:(struct CGPoint)arg2 targetContentOffset:(inout struct CGPoint *)arg3;
- (void)scrollViewDidEndDragging:(id)arg1 willDecelerate:(_Bool)arg2;
- (void)scrollViewWillBeginDragging:(id)arg1;
- (void)scrollViewDidScroll:(id)arg1;
- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;
- (void)scrollToPage:(unsigned long long)arg1;
- (id)dequeueReusableCell;
- (void)reloadData;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)setPagesAtContentOffset:(struct CGPoint)arg1;
- (void)setPageAtIndex:(long long)arg1;
- (void)refreshVisibleCellAppearance;
- (void)removeCellAtIndex:(long long)arg1;
- (void)queueReusableCell:(id)arg1;
- (void)autoNextPage;
- (void)dealloc;
- (void)stopTimer;
- (void)startTimer;
- (void)initialize;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

