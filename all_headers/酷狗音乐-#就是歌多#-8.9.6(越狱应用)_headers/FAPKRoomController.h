//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "FAViewController.h"

#import "FAExitRoomFollowGuideViewModelDelegate-Protocol.h"
#import "FAKrcViewControllerDelegate-Protocol.h"
#import "FALCStarLiveRobSeatAlertViewDelegate-Protocol.h"
#import "FALiveRoomRealSingIdentifyModelDelegate-Protocol.h"
#import "FAPKAudienceViewDelegate-Protocol.h"
#import "FAPKContributeListViewDelegate-Protocol.h"
#import "FAPKGuestSingingInfoModelDelegate-Protocol.h"
#import "FAPKLiveEnterRoomNetTrafficTipsModelDataSource-Protocol.h"
#import "FAPKLiveEnterRoomNetTrafficTipsModelDelegate-Protocol.h"
#import "FAPKLiveRoomInputViewDelegate-Protocol.h"
#import "FAPKMsgAlertControllerDelegate-Protocol.h"
#import "FAPKPlayerControllerDelegate-Protocol.h"
#import "FAPKRoomGiftViewDelegate-Protocol.h"
#import "FAPKRoomHourRankVCDelegate-Protocol.h"
#import "FAPKRoomNoticeControllerDelegate-Protocol.h"
#import "FAPKRoomProviderDelegate-Protocol.h"
#import "FAPKRoomViewDelegate-Protocol.h"
#import "FAPKSendGiftGuideModelDelegate-Protocol.h"
#import "FAPKSocketControllerDataSource-Protocol.h"
#import "FAPKSocketControllerDelegate-Protocol.h"
#import "FAPKTreasureBoxProviderProtocol-Protocol.h"
#import "FAPKUserCardViewControllerDelegate-Protocol.h"
#import "FAPKUserCardViewDelegate-Protocol.h"

@class FAExitRoomFollowGuideView, FAExitRoomFollowGuideViewModel, FAKrcViewController, FALCBigAnimationViewManager, FALCMammonGiftModel, FALCUserStarRelModel, FALiveInfoRequestState, FALiveRoomRealSingIdentifyModel, FAPKAudienceViewController, FAPKGuestSingingInfoModel, FAPKLiveEnterRoomNetTrafficTipsModel, FAPKMsgAlertController, FAPKPlayerController, FAPKRankingController, FAPKRoomHourRankVC, FAPKRoomNoticeController, FAPKRoomView, FAPKSendGiftGuideModel, FAPKSocketController, FAPKTreasureBoxProvider, FAPKUserCardViewController, FASharer, FATreasureBoxController, FAUserUserInfo, NSNumber, NSString, NSTimer;
@protocol FAPKRoomDataProviderProtocol;

@interface FAPKRoomController : FAViewController <FAPKUserCardViewControllerDelegate, FAPKContributeListViewDelegate, FAPKAudienceViewDelegate, FALCStarLiveRobSeatAlertViewDelegate, FAPKRoomHourRankVCDelegate, FAPKSocketControllerDelegate, FAPKSocketControllerDataSource, FAPKRoomViewDelegate, FAPKLiveRoomInputViewDelegate, FAPKUserCardViewDelegate, FAPKMsgAlertControllerDelegate, FAPKTreasureBoxProviderProtocol, FAPKRoomProviderDelegate, FAPKPlayerControllerDelegate, FAExitRoomFollowGuideViewModelDelegate, FALiveRoomRealSingIdentifyModelDelegate, FAKrcViewControllerDelegate, FAPKRoomNoticeControllerDelegate, FAPKGuestSingingInfoModelDelegate, FAPKSendGiftGuideModelDelegate, FAPKRoomGiftViewDelegate, FAPKLiveEnterRoomNetTrafficTipsModelDelegate, FAPKLiveEnterRoomNetTrafficTipsModelDataSource>
{
    _Bool _socketNeedReconnect;
    _Bool _isShareing;
    _Bool _isActive;
    _Bool _isPlayerStopWhenOtherPlayerStart;
    _Bool _switchLock;
    _Bool _isDestory;
    _Bool _isExitRoomFollow;
    FAPKRoomView *_roomView;
    id <FAPKRoomDataProviderProtocol> _mainProvider;
    id <FAPKRoomDataProviderProtocol> _guestProvider;
    FAPKSocketController *_socketController;
    FAPKRankingController *_rankController;
    FAPKAudienceViewController *_viewerController;
    FAPKPlayerController *_mainPlayerController;
    FAPKPlayerController *_guestPlayerController;
    FASharer *_shareViewController;
    FAPKUserCardViewController *_userCardController;
    FALCMammonGiftModel *_mammonGiftController;
    FAKrcViewController *_krcController;
    FATreasureBoxController *_treasureController;
    FAPKTreasureBoxProvider *_treasureProvider;
    FAPKMsgAlertController *_msgAlertController;
    NSTimer *_transitionTimer;
    FAExitRoomFollowGuideViewModel *_exitRoomFollowGuide;
    FAExitRoomFollowGuideView *_exitRoomFollowGuideView;
    FAPKRoomHourRankVC *_rankVC;
    FALCBigAnimationViewManager *_bigAnimationViewManager;
    FALiveInfoRequestState *_mainRequetState;
    FALiveInfoRequestState *_guestRequetState;
    unsigned long long _enterRoomSource;
    FAPKGuestSingingInfoModel *_guestSingingInfoModel;
    NSNumber *_pkIsStartNum;
    FAUserUserInfo *_chatUserInfo;
    NSTimer *_pkTimer;
    double _pkTimeInterval;
    long long _roomId;
    NSTimer *_viewerNumTimer;
    FALCUserStarRelModel *_userStarRealModel;
    FAPKRoomNoticeController *_roomNoticeController;
    FALiveRoomRealSingIdentifyModel *_realSingIdentifyModel;
    FAPKSendGiftGuideModel *_mainGiftGuideModel;
    FAPKSendGiftGuideModel *_guestGiftGuideModel;
    FAPKLiveEnterRoomNetTrafficTipsModel *_netTrafficTipsModel;
}

+ (id)currentPkController;
+ (_Bool)handleOpenURL:(id)arg1 options:(id)arg2;
@property(retain, nonatomic) FAPKLiveEnterRoomNetTrafficTipsModel *netTrafficTipsModel; // @synthesize netTrafficTipsModel=_netTrafficTipsModel;
@property(retain, nonatomic) FAPKSendGiftGuideModel *guestGiftGuideModel; // @synthesize guestGiftGuideModel=_guestGiftGuideModel;
@property(retain, nonatomic) FAPKSendGiftGuideModel *mainGiftGuideModel; // @synthesize mainGiftGuideModel=_mainGiftGuideModel;
@property(retain, nonatomic) FALiveRoomRealSingIdentifyModel *realSingIdentifyModel; // @synthesize realSingIdentifyModel=_realSingIdentifyModel;
@property(retain, nonatomic) FAPKRoomNoticeController *roomNoticeController; // @synthesize roomNoticeController=_roomNoticeController;
@property(nonatomic) _Bool isExitRoomFollow; // @synthesize isExitRoomFollow=_isExitRoomFollow;
@property(retain, nonatomic) FALCUserStarRelModel *userStarRealModel; // @synthesize userStarRealModel=_userStarRealModel;
@property(nonatomic) _Bool isDestory; // @synthesize isDestory=_isDestory;
@property(retain, nonatomic) NSTimer *viewerNumTimer; // @synthesize viewerNumTimer=_viewerNumTimer;
@property(nonatomic) long long roomId; // @synthesize roomId=_roomId;
@property(nonatomic) double pkTimeInterval; // @synthesize pkTimeInterval=_pkTimeInterval;
@property(retain, nonatomic) NSTimer *pkTimer; // @synthesize pkTimer=_pkTimer;
@property(nonatomic) _Bool switchLock; // @synthesize switchLock=_switchLock;
@property(retain, nonatomic) FAUserUserInfo *chatUserInfo; // @synthesize chatUserInfo=_chatUserInfo;
@property(nonatomic) _Bool isPlayerStopWhenOtherPlayerStart; // @synthesize isPlayerStopWhenOtherPlayerStart=_isPlayerStopWhenOtherPlayerStart;
@property(nonatomic) _Bool isActive; // @synthesize isActive=_isActive;
@property(retain, nonatomic) NSNumber *pkIsStartNum; // @synthesize pkIsStartNum=_pkIsStartNum;
@property(retain, nonatomic) FAPKGuestSingingInfoModel *guestSingingInfoModel; // @synthesize guestSingingInfoModel=_guestSingingInfoModel;
@property(nonatomic) unsigned long long enterRoomSource; // @synthesize enterRoomSource=_enterRoomSource;
@property(nonatomic) _Bool isShareing; // @synthesize isShareing=_isShareing;
@property(retain, nonatomic) FALiveInfoRequestState *guestRequetState; // @synthesize guestRequetState=_guestRequetState;
@property(retain, nonatomic) FALiveInfoRequestState *mainRequetState; // @synthesize mainRequetState=_mainRequetState;
@property(retain, nonatomic) FALCBigAnimationViewManager *bigAnimationViewManager; // @synthesize bigAnimationViewManager=_bigAnimationViewManager;
@property(nonatomic) _Bool socketNeedReconnect; // @synthesize socketNeedReconnect=_socketNeedReconnect;
@property(retain, nonatomic) FAPKRoomHourRankVC *rankVC; // @synthesize rankVC=_rankVC;
@property(retain, nonatomic) FAExitRoomFollowGuideView *exitRoomFollowGuideView; // @synthesize exitRoomFollowGuideView=_exitRoomFollowGuideView;
@property(retain, nonatomic) FAExitRoomFollowGuideViewModel *exitRoomFollowGuide; // @synthesize exitRoomFollowGuide=_exitRoomFollowGuide;
@property(retain, nonatomic) NSTimer *transitionTimer; // @synthesize transitionTimer=_transitionTimer;
@property(retain, nonatomic) FAPKMsgAlertController *msgAlertController; // @synthesize msgAlertController=_msgAlertController;
@property(retain, nonatomic) FAPKTreasureBoxProvider *treasureProvider; // @synthesize treasureProvider=_treasureProvider;
@property(retain, nonatomic) FATreasureBoxController *treasureController; // @synthesize treasureController=_treasureController;
@property(retain, nonatomic) FAKrcViewController *krcController; // @synthesize krcController=_krcController;
@property(retain, nonatomic) FALCMammonGiftModel *mammonGiftController; // @synthesize mammonGiftController=_mammonGiftController;
@property(retain, nonatomic) FAPKUserCardViewController *userCardController; // @synthesize userCardController=_userCardController;
@property(retain, nonatomic) FASharer *shareViewController; // @synthesize shareViewController=_shareViewController;
@property(retain, nonatomic) FAPKPlayerController *guestPlayerController; // @synthesize guestPlayerController=_guestPlayerController;
@property(retain, nonatomic) FAPKPlayerController *mainPlayerController; // @synthesize mainPlayerController=_mainPlayerController;
@property(retain, nonatomic) FAPKAudienceViewController *viewerController; // @synthesize viewerController=_viewerController;
@property(retain, nonatomic) FAPKRankingController *rankController; // @synthesize rankController=_rankController;
@property(retain, nonatomic) FAPKSocketController *socketController; // @synthesize socketController=_socketController;
@property(retain, nonatomic) id <FAPKRoomDataProviderProtocol> guestProvider; // @synthesize guestProvider=_guestProvider;
@property(retain, nonatomic) id <FAPKRoomDataProviderProtocol> mainProvider; // @synthesize mainProvider=_mainProvider;
@property(retain, nonatomic) FAPKRoomView *roomView; // @synthesize roomView=_roomView;
- (void).cxx_destruct;
- (id)getTrafficTipsAlertContainView;
- (void)showNetTrafficTipsWithMessage:(id)arg1;
- (void)userNotAgreeNetworkTrafficTips;
- (void)userDidAgreeNetworkTrafficTips;
- (void)shouldShowSendGiftGuideWithIsMain:(_Bool)arg1 starNickName:(id)arg2;
- (void)guestDidChangeSong:(id)arg1;
- (void)shouldShowRealSingIdentify;
- (void)shouldDismissRealSingIdentify;
- (_Bool)mainIsSponsor;
- (void)dealGetEachLyricLevelWithMsgDic:(id)arg1 isMain:(_Bool)arg2;
- (void)dealKrcScoreInfoWithDictionary:(id)arg1;
- (_Bool)shouldBeginLoadChatMsg;
- (void)roomNoticeLoad:(id)arg1;
- (void)roomNoticeCountDownFinish;
- (void)pkRoomCenterViewOpenUrl:(id)arg1;
- (_Bool)exitRoomCheckFollowAnchor;
- (void)exitRoomFollowAnchor;
- (void)switchRoomClearBigAnimationHandler;
- (void)dismissTreasureAlertView;
- (void)didGetPKTreasureBoxDataSucceed:(id)arg1;
- (void)getPurchaseFlowInfoSuccess:(id)arg1;
- (void)getRoomLastChatInfoFailWithError:(id)arg1 provider:(id)arg2;
- (void)getRoomLastChatInfoSuccess:(id)arg1;
- (void)getRoomViewerNumFailWithError:(id)arg1 provider:(id)arg2;
- (void)getRoomViewerNumSuccess:(id)arg1;
- (void)changeFollowStarIsFailWithError:(id)arg1 provider:(id)arg2;
- (void)reportFollowShow:(id)arg1 provider:(id)arg2;
- (void)changeFollowStarIsSuccess:(id)arg1;
- (void)getStarUserInfoFailWithError:(id)arg1 provider:(id)arg2;
- (void)getStarUserInfoSuccess:(id)arg1;
- (void)getUserStarRelFailWithError:(id)arg1 provider:(id)arg2;
- (void)getUserStarRelSuccess:(id)arg1;
- (void)getRoomLiveInfoFailWithError:(id)arg1 provider:(id)arg2;
- (void)getRoomLiveInfoSuccess:(id)arg1;
- (void)getRoomSocketInfoFailWithError:(id)arg1 provider:(id)arg2;
- (void)getRoomSocketInfoSuccess:(id)arg1;
- (void)getEnterRoomInfoFailWithError:(id)arg1 provider:(id)arg2;
- (void)getEnterRoomInfoSuccess:(id)arg1;
- (void)getPKRoomInfoFailWithError:(id)arg1 provider:(id)arg2;
- (void)getPKRoomInfoSuccess:(id)arg1;
- (void)startLoadSocketConfig;
- (void)updateViewerNum;
- (void)startViewerNumTimer;
- (void)pkIsStartHandler;
- (void)pkTimeFinishHandler;
- (void)updatePKTimerInfo;
- (void)dealPKTimerInfo;
- (void)syncPKTime:(double)arg1;
- (void)configUserCardInfo;
- (void)loadGuestRoomInfo;
- (void)startEnterRoom;
- (void)resetSwitchLock;
- (void)beginSwitchLock;
- (void)switchPKModel;
- (void)clearChatUserInfo;
- (void)updateChatUserInfo:(id)arg1;
- (id)currentStarUserInfo;
- (id)currentChatUserInfo;
- (void)loadRoomWithRoomId:(unsigned long long)arg1;
- (id)initWithRoomId:(long long)arg1;
- (void)destory;
- (void)dealloc;
- (_Bool)shouldHiddenNavigationBar;
- (void)initConfig;
- (id)init;
- (void)viewDidLoad;
- (void)fxViewWillRemove;
- (void)viewWillRemove:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)dealUserSendGiftInfo:(id)arg1;
- (void)dealUserVoteInfo:(id)arg1;
- (id)socketWillConnectUserInfo;
- (void)socketHandleStarOpenLive:(id)arg1;
- (void)socketHandleSmallBoxGift:(id)arg1;
- (void)socketHandleBigBoxGift:(id)arg1;
- (void)socketPKRoomInfo:(id)arg1 cmd:(long long)arg2;
- (void)socketSendChatFailWithError:(id)arg1;
- (void)socketSendChatSuccess:(_Bool)arg1;
- (void)socketUpdateViewerNum:(id)arg1;
- (void)socketUpdateContributeWithList:(id)arg1;
- (void)socketChangeFansNum:(unsigned long long)arg1;
- (void)socketNoticeFinishTask;
- (void)socketUpdateActivityContent:(id)arg1;
- (void)socketRoomManagerInfo:(id)arg1;
- (void)socketShowSongInfo:(id)arg1;
- (void)socketKickUserWithId:(unsigned long long)arg1;
- (void)socketShowGrabSeatInfo:(id)arg1;
- (void)socketSettingSpeakLevel:(id)arg1;
- (void)socketShowGiftInfo:(id)arg1;
- (void)socketShowMammonGiftInfo:(id)arg1;
- (void)socketShowBroadcastMessage:(id)arg1;
- (void)socketUpdateChatInfo:(id)arg1 isPublic:(_Bool)arg2;
- (void)socketServerFailError:(id)arg1;
- (void)socketShowTipMessage:(id)arg1;
- (void)socketEnterRoomFailError:(id)arg1;
- (void)socketConnectSuccess;
- (_Bool)needReconnect;
- (void)showExitRoomFollowGuideView;
- (void)alertControllerWillShowToast:(id)arg1;
- (void)alertControllerBeginSwitch;
- (_Bool)alertControllerShowIsActive;
- (void)alertControllerShowLogin;
- (void)alertControllerExitLiveRoom;
- (void)alertControllerOpenVip;
- (void)alertControllerWillDestory;
- (void)fxStarLiveRobSeatWithAlertView:(id)arg1 ticket:(long long)arg2 seatIndex:(long long)arg3;
- (void)fxStarLiveRobSeatWithViewError:(id)arg1;
- (void)playerWillPlay:(id)arg1 playUrl:(id)arg2;
- (void)playerSwitchModel:(id)arg1;
- (void)playerGetKrcScoreInfoWithDictionary:(id)arg1 playerController:(id)arg2;
- (void)playerUpdateKrcInfo:(id)arg1 playerController:(id)arg2;
- (void)playerDidPrepared:(id)arg1;
- (void)playerLoding:(id)arg1;
- (void)playerPlayError:(id)arg1 playerController:(id)arg2;
- (void)showGiftViewWithIsSponsor:(_Bool)arg1;
- (void)endPKFinishViewShow;
- (void)showVodSongViewInRoomView:(id)arg1;
- (void)userClosePkRoomView:(id)arg1;
- (void)publicChatViewSelectChatViewUserId:(long long)arg1;
- (void)userTapStarHeadViewHandlerWithBattleType:(long long)arg1;
- (void)changedStarFollowStateWithBattleType:(long long)arg1;
- (void)userCardChangeFollowStateFailWithError:(id)arg1 isFollow:(_Bool)arg2;
- (void)userCardChangeFollowStateSuccess:(_Bool)arg1;
- (void)userCardDidDismissHandler;
- (void)userCardControllerActionWityType:(long long)arg1 userCard:(id)arg2;
- (void)userCardReportEvent:(id)arg1;
- (void)reportFollowShowEvent:(id)arg1 withKey:(id)arg2;
- (void)sendPKGiftFailWithMessage:(id)arg1;
- (void)sendPKGiftSuccess;
- (void)didClickedItemByUserId:(long long)arg1;
- (void)didClickedViewerItem:(id)arg1;
- (void)didClickedSeatItem:(id)arg1;
- (void)roomHourRankVC:(id)arg1 clickCellUserId:(long long)arg2;
- (void)didClickedRankingItem:(id)arg1;
- (void)shareViewDidDismiss:(id)arg1;
- (void)shouldBeginShareWithMsg:(id)arg1;
- (id)fxPrivateViewCheckAtStarNickName;
- (void)fxPrivateViewDidHidden;
- (void)fxPrivateViewWillShow;
- (void)fxPrivateUpdateChatNum:(unsigned long long)arg1;
- (void)fxPrivateChatWillClose:(id)arg1;
- (_Bool)fxPrivateChatEmojiBoardViewWillCheckVip;
- (void)fxPrivateChatSendPrivateWithChatItem:(id)arg1;
- (void)fxPrivateChatSendPrivateMsg:(id)arg1;
- (void)fxPrivateChatViewSelectedUserId:(id)arg1;
- (void)inputViewFrameWillChanged:(struct CGRect)arg1;
- (void)inputViewWillDismiss:(id)arg1;
- (void)inputViewDidDismiss:(id)arg1;
- (_Bool)inputViewShouldBeginInput:(id)arg1;
- (void)bottomViewItemActionHandler:(long long)arg1;
- (void)liveBottomViewIsActing:(id)arg1;
- (_Bool)bottomEmojiBoardViewWillCheckVip;
- (_Bool)bottomTextViewShouldBeginEditing;
- (void)bottomClickSendChatMessage:(id)arg1 msgType:(long long)arg2;
- (void)showPrivateView;
- (void)openChargeView;
- (void)showTreasureTipView;
- (void)willExitLiveRoom;
- (void)transitionToLiveRoom;
- (void)willTransitionToLiveRoom;
- (void)showGiftViewWithUserId:(long long)arg1 nickName:(id)arg2;
- (void)gotoReportViewControllerWithUserId:(long long)arg1;
- (void)gotoSpaceViewControllerWithUserId:(long long)arg1 kugouId:(long long)arg2 selectIndex:(long long)arg3;
- (void)showUserCardWithUserId:(long long)arg1 isGuest:(_Bool)arg2 inView:(id)arg3;
- (void)showUserCardWithUserId:(long long)arg1 isGuest:(_Bool)arg2;
- (void)showUserCardWithUserId:(long long)arg1;
- (void)showChargeView;
- (void)showShareView;
- (id)checkUserLogoImageWithUrl:(id)arg1;
- (void)reloadSubViewData;
- (void)addViewerList;
- (void)addRankingList;
- (void)gotoHourRank;
- (void)showVipController;
- (void)retryCheckGuestLiveInfo;
- (void)didCheckSocketInfoConfig;
- (void)updateChatInfo:(id)arg1 isPublic:(_Bool)arg2 isBySoceket:(_Bool)arg3;
- (void)lastChatInfoWhenEnterRoom:(id)arg1;
- (void)rushRobSeatWithTicket:(long long)arg1 seatIndex:(long long)arg2;
- (void)dealPKRoomError:(id)arg1;
- (void)dealPKRealSingVote:(id)arg1;
- (void)afterDelaySwitchLive;
- (void)dealPKRoomResult:(id)arg1;
- (void)reloadPKVoteDynamicInfo;
- (void)updatePKVoteDynamicInfo:(id)arg1;
- (void)dealCurrentPKInfo:(id)arg1;
- (void)finishCheckPKRoomInfo:(id)arg1;
- (void)updatePKRoomInfo;
- (void)playerStartPlayIfPause;
- (_Bool)isMsgFromPKLive:(id)arg1;
- (void)didReceiveStopPlayerNoti:(id)arg1;
- (void)noticeForceOut:(id)arg1;
- (void)nodifyUserUserTokenOverdue;
- (void)nodifyUserForceOut;
- (void)userOpenVip;
- (void)userLoginChanged;
- (void)userFollowChanged;
- (void)appDidBecomeActiveNoticeHandler;
- (void)registerNotice;
- (void)cancelBanWithUserId:(long long)arg1 reply:(CDUnknownBlockType)arg2;
- (void)banPlayWithUserId:(long long)arg1 nickName:(id)arg2 type:(long long)arg3 reply:(CDUnknownBlockType)arg4;
- (void)sendChatMsgToUser:(id)arg1 isPublic:(_Bool)arg2;
- (void)sendMsgSuccessWithType:(long long)arg1;
- (void)sendFlyMsg:(id)arg1 msgType:(long long)arg2;
- (void)sendPrivateChatMsg:(id)arg1 withItem:(id)arg2;
- (void)sendChatMsg:(id)arg1 isPublic:(_Bool)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

