//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

#import "DownloadTask-Protocol.h"
#import "NSCoding-Protocol.h"

@class DownErrorInfo, DownloadConnectionInfo, DownloadFinishSegmentsInfo, NSDate, NSFileHandle, NSMutableArray, NSMutableDictionary, NSString, NSThread, NSTimer;
@protocol DownloadTaskDelegate;

@interface DownloadTask : NSObject <DownloadTask, NSCoding>
{
    int m_httpStatusCode;
    int m_errorCode;
    unsigned int m_taskID;
    NSFileHandle *m_fileHandle;
    NSString *m_fileName;
    NSString *m_orignalFileName;
    NSString *m_dispositionFileName;
    NSString *m_segmentFileName;
    int m_fileType;
    _Bool m_isUsingTitle;
    struct deque<unsigned int, std::__1::allocator<unsigned int>> m_dataLenStatistic;
    struct deque<unsigned int, std::__1::allocator<unsigned int>> m_dataTimeStatistic;
    unsigned int m_instantSpeed;
    double m_elapsedSeconds;
    unsigned int m_status;
    unsigned int m_lastSaveDataLen;
    double m_lastSaveTime;
    int m_lastFinishedPercent;
    unsigned long long m_lastFinishedSize;
    NSDate *m_addedDate;
    unsigned long long m_expectFileSize;
    unsigned long long m_finishedSize;
    unsigned long long m_segmentLimitSize;
    _Bool m_isSaveRelativeFilePath;
    _Bool m_isBeginDownloadData;
    DownloadFinishSegmentsInfo *m_downloadFinishSegmentsInfo;
    NSString *m_requestUrl;
    NSString *m_originalRequestUrl;
    NSString *m_tempRequestUrl;
    _Bool m_isPost;
    NSString *m_referenceUrl;
    NSString *m_postBody;
    NSString *m_cookie;
    NSString *m_userAgent;
    long long m_dispositionFlag;
    NSThread *m_downloadThread;
    NSMutableArray *m_connectionInfoSet;
    long long m_maxThreadCount;
    NSMutableArray *m_aryDelayTimer;
    NSMutableDictionary *m_dctErrorCount;
    long long m_nNetworkType;
    NSTimer *m_failedRetryTimer;
    NSString *m_szTaskGUID;
    _Bool m_bIsRecivedData;
    int m_segmentState;
    NSString *m_md5Hash;
    long long m_nRedirectCount;
    NSString *m_extensionUA;
    NSDate *m_startDownloadDate;
    _Bool m_isTurnFromSegmentToUnSegment;
    DownErrorInfo *m_downloadErrorInfo;
    _Bool m_isNetworkLimited;
    int m_taskStage;
    _Bool m_shouldDeleteFile;
    _Bool shouldDisableMultiRange;
    _Bool m_prohibitCellularAccess;
    int _contentLength;
    int m_taskRetryMaxCount;
    int m_taskCurrentRetriedTimes;
    int m_netTypeBeforeRetry;
    id <DownloadTaskDelegate> m_delegate;
    NSDate *m_finishedDate;
    DownloadConnectionInfo *_detectFileNameInfo;
    DownloadConnectionInfo *_lastRequireRetryConnection;
    NSString *m_segmentFileFullPath;
    NSString *m_saveDir;
    NSString *m_saveFullDir;
    NSMutableDictionary *m_extInfo;
    NSString *_contentType;
    NSString *m_displayName;
}

+ (_Bool)isGzipDownload:(id)arg1;
+ (unsigned long long)parseFileSizeFromResponse:(id)arg1;
+ (id)parseFileNameFromResponse:(id)arg1;
+ (id)parseFileNameFromUrl:(id)arg1;
+ (id)parseFileNameFromDisposition:(id)arg1;
+ (id)urlEncodeString:(id)arg1;
+ (unsigned long long)parseFileSizeFromUrl:(id)arg1;
+ (unsigned long long)parseFileSizeFromContentLength:(id)arg1;
+ (int)parseFileTypeFromExtensionName:(id)arg1;
+ (int)parseFileTypeFromMimeType:(id)arg1;
+ (id)generateNewNameIfFileNameExist:(id)arg1 baseDir:(id)arg2;
@property(nonatomic) _Bool prohibitCellularAccess; // @synthesize prohibitCellularAccess=m_prohibitCellularAccess;
@property(nonatomic) int netTypeBeforeRetry; // @synthesize netTypeBeforeRetry=m_netTypeBeforeRetry;
@property(readonly, nonatomic) _Bool isBeginDownloadData; // @synthesize isBeginDownloadData=m_isBeginDownloadData;
@property(nonatomic) int taskCurrentRetriedTimes; // @synthesize taskCurrentRetriedTimes=m_taskCurrentRetriedTimes;
@property(nonatomic) int taskRetryMaxCount; // @synthesize taskRetryMaxCount=m_taskRetryMaxCount;
@property(nonatomic) _Bool shouldDisableMultiRange; // @synthesize shouldDisableMultiRange;
@property(readonly, nonatomic) DownErrorInfo *downloadErrorInfo; // @synthesize downloadErrorInfo=m_downloadErrorInfo;
@property(nonatomic) int contentLength; // @synthesize contentLength=_contentLength;
@property(retain, nonatomic) NSString *contentType; // @synthesize contentType=_contentType;
@property(readonly, nonatomic) NSString *fileMD5; // @synthesize fileMD5=m_md5Hash;
@property _Bool shouldDeleteFile; // @synthesize shouldDeleteFile=m_shouldDeleteFile;
@property(readonly, nonatomic) _Bool isSaveRelativeFilePath; // @synthesize isSaveRelativeFilePath=m_isSaveRelativeFilePath;
@property(retain, nonatomic) NSMutableDictionary *extInfo; // @synthesize extInfo=m_extInfo;
@property(nonatomic) unsigned int status; // @synthesize status=m_status;
@property(readonly, nonatomic) unsigned long long expectedFileSize; // @synthesize expectedFileSize=m_expectFileSize;
@property(retain, nonatomic) NSString *saveFullDir; // @synthesize saveFullDir=m_saveFullDir;
@property(retain, nonatomic) NSString *saveDir; // @synthesize saveDir=m_saveDir;
@property(copy, nonatomic) NSString *dispositionFileName; // @synthesize dispositionFileName=m_dispositionFileName;
@property(copy, nonatomic) NSString *orignalFileName; // @synthesize orignalFileName=m_orignalFileName;
@property(copy) NSString *segmentFileFullPath; // @synthesize segmentFileFullPath=m_segmentFileFullPath;
@property(retain, nonatomic) DownloadConnectionInfo *lastRequireRetryConnection; // @synthesize lastRequireRetryConnection=_lastRequireRetryConnection;
@property(copy, nonatomic) NSString *postBody; // @synthesize postBody=m_postBody;
@property(readonly, copy, nonatomic) NSString *cookie; // @synthesize cookie=m_cookie;
@property(copy, nonatomic) NSString *referenceUrl; // @synthesize referenceUrl=m_referenceUrl;
@property(copy, nonatomic) NSString *tempRequestUrl; // @synthesize tempRequestUrl=m_tempRequestUrl;
@property(copy, nonatomic) NSString *originalRequestUrl; // @synthesize originalRequestUrl=m_originalRequestUrl;
@property(copy, nonatomic) NSString *requestUrl; // @synthesize requestUrl=m_requestUrl;
@property(retain, nonatomic) DownloadConnectionInfo *detectFileNameInfo; // @synthesize detectFileNameInfo=_detectFileNameInfo;
@property(retain) NSDate *finishedDate; // @synthesize finishedDate=m_finishedDate;
@property(readonly, nonatomic) NSDate *addedDate; // @synthesize addedDate=m_addedDate;
@property(readonly, nonatomic) int fileType; // @synthesize fileType=m_fileType;
@property(nonatomic) int errorCode; // @synthesize errorCode=m_errorCode;
@property(readonly, nonatomic) int httpStatusCode; // @synthesize httpStatusCode=m_httpStatusCode;
@property id <DownloadTaskDelegate> delegate; // @synthesize delegate=m_delegate;
@property(readonly, nonatomic) unsigned int taskID; // @synthesize taskID=m_taskID;
- (id).cxx_construct;
- (void).cxx_destruct;
- (_Bool)isDisconnectCauseFailed;
- (void)setMaxSegmentSize:(unsigned long long)arg1;
- (void)retryAllTasksOnThread;
- (void)retryAllTasks;
- (void)resetRefereURL:(id)arg1;
- (void)resetRequestURL:(id)arg1;
- (id)getStartDownloadDate;
- (id)getContentType;
- (int)getErrorCode;
- (id)getOrignalFileName;
- (id)getRequestURL;
- (id)convertOriginalPostData:(id)arg1 whitBoundary:(id)arg2;
- (id)generateGUID;
- (void)setCurFileName:(id)arg1;
- (_Bool)resetSaveFullDir:(id)arg1;
- (void)setRelativeSaveDir:(id)arg1;
- (void)resetFinishedDate:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)clearData;
- (void)restore;
@property(readonly, nonatomic) float speed;
@property(readonly, nonatomic) unsigned long long downloadedSize;
@property(readonly, nonatomic) unsigned long long totalSize;
@property(readonly, nonatomic) unsigned int finishedPercentage;
@property(readonly, nonatomic) float progress;
@property(readonly, nonatomic) unsigned int remainSeconds;
@property(readonly, nonatomic) unsigned int elapsedSeconds;
@property(readonly, nonatomic) NSString *fullPath;
- (_Bool)deleteFile;
- (void)deleteFileWithTimer:(id)arg1;
- (_Bool)resetSavePath:(id)arg1 isForce:(_Bool)arg2;
- (_Bool)renameFile:(id)arg1;
- (void)cancelAndShouldDeleteFile:(_Bool)arg1;
- (void)tryReleaseFailedRetryTimer;
- (void)retryFailed:(id)arg1;
- (void)onFailedRetryDelay:(long long)arg1;
- (void)onResumeTask;
- (void)onManuallyFail;
- (void)onNetworkLimited;
- (void)stop;
- (void)start;
- (id)exportTaskRequestInfo;
@property(readonly, nonatomic) NSString *specialIconKeyPath;
@property(copy) NSString *fileName; // @synthesize fileName=m_fileName;
@property(retain, nonatomic) NSString *displayName; // @synthesize displayName=m_displayName;
- (void)setUrlsWithRequestInfo:(id)arg1;
- (void)setFileNameWithRequestInfo:(id)arg1;
- (void)dealloc;
- (id)initWithOldTask:(id)arg1 originalRequestUrl:(id)arg2 savePath:(id)arg3 segmentPath:(id)arg4 referenceUrl:(id)arg5 fileName:(id)arg6 installState:(int)arg7 isFinish:(int)arg8 finishTime:(int)arg9 taskID:(unsigned int)arg10 delegate:(id)arg11;
- (void)resetTaskID:(unsigned int)arg1;
- (id)initWithRequestInfo:(id)arg1 delegate:(id)arg2;
- (id)init;
- (_Bool)connectionShouldUseCredentialStorage:(id)arg1;
- (id)connection:(id)arg1 willCacheResponse:(id)arg2;
- (void)connection:(id)arg1 didReceiveAuthenticationChallenge:(id)arg2;
- (_Bool)connection:(id)arg1 canAuthenticateAgainstProtectionSpace:(id)arg2;
- (id)connection:(id)arg1 willSendRequest:(id)arg2 redirectResponse:(id)arg3;
- (void)connectionDidFinishLoading:(id)arg1;
- (void)connection:(id)arg1 didFailWithError:(id)arg2;
- (void)connection:(id)arg1 didReceiveData:(id)arg2;
- (void)connection:(id)arg1 didReceiveResponse:(id)arg2 redirectRequest:(id)arg3;
- (void)connection:(id)arg1 didReceiveResponse:(id)arg2;
- (void)threadDetectFileName:(id)arg1 withResponse:(id)arg2;
- (_Bool)detectResponseInfo:(id)arg1 connectionInfo:(id)arg2;
- (void)threadDidReceive206Response:(id)arg1 withInfo:(id)arg2;
- (void)threadDidReceive200Response:(id)arg1 withInfo:(id)arg2;
- (_Bool)threadOnResponseError:(int)arg1 withInfo:(id)arg2 response:(id)arg3;
- (_Bool)threadUpdateRequest:(id)arg1 WithSegment:(id)arg2;
- (id)threadConstructRequestWithSegment:(id)arg1;
- (_Bool)threadParseAndUpdateRange:(id)arg1 fileSize:(unsigned long long *)arg2 inSegment:(id)arg3;
- (void)threadRedirectLocation:(id)arg1 statusCode:(int)arg2 redirectRequest:(id)arg3;
- (_Bool)threadIsErrorUnrecoverable;
- (void)threadReportCompletionFromConnection:(id)arg1;
- (void)threadReportErrorFromConnection:(id)arg1;
- (void)threadStop:(int)arg1 withErrorCode:(int)arg2;
- (void)reportStartReceiveDataToObserver;
- (void)reportTaskStopToObserver;
- (void)reportTaskStartToObserver;
- (void)reportFileNameChangedToObserver;
- (void)getFileExtensionFromObserver:(id)arg1;
- (id)getFileExtensionFromObserverWithFilename:(id)arg1 contentType:(id)arg2;
- (void)getFilePathFromObserver:(id)arg1;
- (id)getFilePathFromObserverWithFilename:(id)arg1 byRedirect:(_Bool)arg2;
- (id)getRequestUrl;
- (id)parseRequestUrl;
- (_Bool)truncateFileSafely:(id)arg1 offset:(unsigned long long)arg2;
- (void)threadConnectionRetryDelay:(id)arg1;
- (void)threadConnectionRetry:(id)arg1;
- (_Bool)threadConnectionRetryCreate:(id)arg1;
- (void)threadGetNextSegment:(id)arg1 limitSize:(unsigned long long)arg2;
- (void)threadTaskRetry:(_Bool)arg1 isRetryAllTask:(_Bool)arg2;
- (void)threadAddErrorCodeCount:(int)arg1;
- (int)threadGetMaxErrorCode;
- (void)threadStartInThread;
- (void)threadRun:(id)arg1;
- (void)threadCancelAllConnections;
- (void)threadWriteSegmentData:(id)arg1 isWithIOEorror:(_Bool *)arg2;
- (_Bool)threadStartConnections;
- (_Bool)threadStartAllConnections;
- (_Bool)threadStartDetectConnection;
- (_Bool)threadStartFirstConnectionWithSegment:(_Bool)arg1 withConnectionJob:(int)arg2;
- (id)connectionWithRequest:(id)arg1;
- (id)threadGetInfoByConnection:(id)arg1;
- (int)getMaxRangeConcurrentCount;
- (_Bool)isThreadAlive;
- (void)releaseThread;
- (void)cancelThread;
- (void)startThread;
- (void)commitErrorItemWithDownErrorCode:(int)arg1;
- (void)commitErrorItemWithDownErrorCode:(int)arg1 connectionInfo:(id)arg2 responseHeaderDict:(id)arg3;
- (id)getHeaderInfoByDict:(id)arg1;
- (int)taskRetryPloy:(_Bool)arg1 isRetryAllTask:(_Bool)arg2;
- (int)connectionRetryPloy:(id)arg1;
- (_Bool)shouldAbortRetry:(int)arg1;
- (void)resetConnectionRetryCount:(id)arg1;
- (void)resetRetryDelayInterval:(id)arg1;
- (void)setTaskStage:(int)arg1;
- (int)parseVideoTypeFromContentType:(id)arg1;
- (_Bool)threadIsNeedRenewFileName:(id)arg1;
- (_Bool)createFileHandle:(id)arg1;
- (_Bool)createFile:(id)arg1 fromOldFullPath:(id)arg2;
- (void)threadParseMD5FromResponse:(id)arg1;
- (_Bool)threadWriteData:(id)arg1 withSegment:(id)arg2;
- (void)fixFinishedSize:(id)arg1;
- (unsigned long long)fileSizeOnDisk;
- (void)threadReleaseFileHandle;
- (_Bool)isFileInfoSufficient;
@property(readonly, nonatomic) unsigned int instantSpeed;
- (void)saveProgress;
- (void)updateTimeAndSpeed:(unsigned int)arg1;
- (_Bool)generateSegmentFilePath:(id)arg1;
- (unsigned long long)segmentLimitSize;
- (id)getNextSegment:(unsigned long long)arg1;
- (id)getFirstSegment;
- (_Bool)getEmptyInterval:(unsigned long long *)arg1 endPos:(unsigned long long *)arg2 fromStartPos:(unsigned long long)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

