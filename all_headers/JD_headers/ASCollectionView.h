//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <UIKit/UICollectionView.h>

#import "ASBatchFetchingScrollView-Protocol.h"
#import "ASCellNodeLayoutDelegate-Protocol.h"
#import "ASDataControllerEnvironmentDelegate-Protocol.h"
#import "ASDataControllerSource-Protocol.h"
#import "ASDelegateProxyInterceptor-Protocol.h"
#import "ASRangeControllerDataSource-Protocol.h"
#import "ASRangeControllerDelegate-Protocol.h"

@class ASBatchContext, ASCollectionDataController, ASCollectionNode, ASCollectionViewFlowLayoutInspector, ASCollectionViewLayoutController, ASCollectionViewProxy, ASRangeController, NSMutableArray, NSMutableSet, NSString, _ASCollectionViewNodeSizeInvalidationContext;
@protocol ASCollectionDataSource, ASCollectionDelegate, ASCollectionViewLayoutFacilitatorProtocol, ASCollectionViewLayoutInspecting;

@interface ASCollectionView : UICollectionView <ASRangeControllerDataSource, ASRangeControllerDelegate, ASDataControllerSource, ASCellNodeLayoutDelegate, ASDelegateProxyInterceptor, ASBatchFetchingScrollView, ASDataControllerEnvironmentDelegate>
{
    ASCollectionViewProxy *_proxyDataSource;
    ASCollectionViewProxy *_proxyDelegate;
    ASCollectionDataController *_dataController;
    ASRangeController *_rangeController;
    ASCollectionViewLayoutController *_layoutController;
    ASCollectionViewFlowLayoutInspector *_flowLayoutInspector;
    NSMutableSet *_cellsForVisibilityUpdates;
    id <ASCollectionViewLayoutFacilitatorProtocol> _layoutFacilitator;
    _Bool _performingBatchUpdates;
    NSMutableArray *_batchUpdateBlocks;
    _Bool _asyncDataFetchingEnabled;
    _ASCollectionViewNodeSizeInvalidationContext *_queuedNodeSizeInvalidationContext;
    _Bool _isDeallocating;
    ASBatchContext *_batchContext;
    struct CGSize _maxSizeForNodesConstrainedSize;
    _Bool _ignoreMaxSizeChange;
    NSMutableSet *_registeredSupplementaryKinds;
    struct CGPoint _deceleratingVelocity;
    _Bool _superIsPendingDataLoad;
    struct {
        unsigned int asyncDelegateScrollViewDidScroll:1;
        unsigned int asyncDelegateScrollViewWillBeginDragging:1;
        unsigned int asyncDelegateScrollViewDidEndDragging:1;
        unsigned int asyncDelegateScrollViewWillEndDraggingWithVelocityTargetContentOffset:1;
        unsigned int asyncDelegateCollectionViewWillDisplayNodeForItemAtIndexPath:1;
        unsigned int asyncDelegateCollectionViewDidEndDisplayingNodeForItemAtIndexPath:1;
        unsigned int asyncDelegateCollectionViewDidEndDisplayingNodeForItemAtIndexPathDeprecated:1;
        unsigned int asyncDelegateCollectionViewWillBeginBatchFetchWithContext:1;
        unsigned int asyncDelegateShouldBatchFetchForCollectionView:1;
    } _asyncDelegateFlags;
    struct {
        unsigned int asyncDataSourceConstrainedSizeForNode:1;
        unsigned int asyncDataSourceNodeForItemAtIndexPath:1;
        unsigned int asyncDataSourceNodeBlockForItemAtIndexPath:1;
        unsigned int asyncDataSourceNumberOfSectionsInCollectionView:1;
        unsigned int asyncDataSourceCollectionViewLockDataSource:1;
        unsigned int asyncDataSourceCollectionViewUnlockDataSource:1;
        unsigned int asyncDataSourceCollectionViewConstrainedSizeForNodeAtIndexPath:1;
    } _asyncDataSourceFlags;
    _Bool _zeroContentInsets;
    _Bool _asyncDataSourceLocked;
    ASCollectionNode *_collectionNode;
    id <ASCollectionDelegate> _asyncDelegate;
    id <ASCollectionDataSource> _asyncDataSource;
    double _leadingScreensForBatching;
    id <ASCollectionViewLayoutInspecting> _layoutInspector;
    ASCollectionNode *_strongCollectionNode;
}

+ (Class)layerClass;
@property(retain, nonatomic) ASCollectionNode *strongCollectionNode; // @synthesize strongCollectionNode=_strongCollectionNode;
@property _Bool asyncDataSourceLocked; // @synthesize asyncDataSourceLocked=_asyncDataSourceLocked;
@property(nonatomic) _Bool zeroContentInsets; // @synthesize zeroContentInsets=_zeroContentInsets;
@property(nonatomic) __weak id <ASCollectionViewLayoutInspecting> layoutInspector; // @synthesize layoutInspector=_layoutInspector;
@property(nonatomic) double leadingScreensForBatching; // @synthesize leadingScreensForBatching=_leadingScreensForBatching;
@property(nonatomic) __weak id <ASCollectionDataSource> asyncDataSource; // @synthesize asyncDataSource=_asyncDataSource;
@property(nonatomic) __weak id <ASCollectionDelegate> asyncDelegate; // @synthesize asyncDelegate=_asyncDelegate;
@property(nonatomic) __weak ASCollectionNode *collectionNode; // @synthesize collectionNode=_collectionNode;
- (void).cxx_destruct;
- (void)didMoveToWindow;
- (void)willMoveToWindow:(id)arg1;
- (void)clearFetchedData;
- (void)clearContents;
- (void)requeryNodeSizes;
- (void)nodeDidRelayout:(id)arg1 sizeChanged:(_Bool)arg2;
- (void)rangeController:(id)arg1 didDeleteSectionsAtIndexSet:(id)arg2 withAnimationOptions:(unsigned long long)arg3;
- (void)rangeController:(id)arg1 didInsertSectionsAtIndexSet:(id)arg2 withAnimationOptions:(unsigned long long)arg3;
- (void)rangeController:(id)arg1 didDeleteNodes:(id)arg2 atIndexPaths:(id)arg3 withAnimationOptions:(unsigned long long)arg4;
- (void)rangeController:(id)arg1 didInsertNodes:(id)arg2 atIndexPaths:(id)arg3 withAnimationOptions:(unsigned long long)arg4;
- (void)rangeController:(id)arg1 didEndUpdatesAnimated:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;
- (void)didBeginUpdatesInRangeController:(id)arg1;
- (id)rangeController:(id)arg1 nodeAtIndexPath:(id)arg2;
- (id)rangeController:(id)arg1 nodesAtIndexPaths:(id)arg2;
- (unsigned long long)interfaceStateForRangeController:(id)arg1;
- (struct CGSize)viewportSizeForRangeController:(id)arg1;
- (id)visibleNodeIndexPathsForRangeController:(id)arg1;
- (id)rangeController;
- (unsigned long long)dataController:(id)arg1 numberOfSectionsForSupplementaryNodeOfKind:(id)arg2;
- (unsigned long long)dataController:(id)arg1 supplementaryNodesOfKind:(id)arg2 inSection:(unsigned long long)arg3;
- (CDStruct_42a63532)dataController:(id)arg1 constrainedSizeForSupplementaryNodeOfKind:(id)arg2 atIndexPath:(id)arg3;
- (id)supplementaryNodeKindsInDataController:(id)arg1;
- (id)dataController:(id)arg1 supplementaryNodeOfKind:(id)arg2 atIndexPath:(id)arg3;
- (id)dataControllerEnvironment;
- (void)dataControllerUnlockDataSource;
- (void)dataControllerLockDataSource;
- (unsigned long long)numberOfSectionsInDataController:(id)arg1;
- (unsigned long long)dataController:(id)arg1 rowsInSection:(unsigned long long)arg2;
- (CDStruct_42a63532)dataController:(id)arg1 constrainedSizeForNodeAtIndexPath:(id)arg2;
- (CDUnknownBlockType)dataController:(id)arg1 nodeBlockAtIndexPath:(id)arg2;
- (void)_beginBatchFetching;
- (void)_beginBatchFetchingIfNeededWithScrollView:(id)arg1 forScrollDirection:(long long)arg2 contentOffset:(struct CGPoint)arg3;
- (void)_checkForBatchFetching;
- (void)_scheduleCheckForBatchFetchingForNumberOfChanges:(unsigned long long)arg1;
- (_Bool)canBatchFetch;
- (id)batchContext;
- (void)layoutSubviews;
- (long long)nonFlowLayoutScrollableDirections;
- (long long)flowLayoutScrollableDirections:(id)arg1;
- (long long)scrollableDirections;
- (long long)_scrollDirectionForVelocity:(struct CGPoint)arg1;
- (long long)scrollDirection;
- (void)scrollViewDidEndDragging:(id)arg1 willDecelerate:(_Bool)arg2;
- (void)scrollViewWillBeginDragging:(id)arg1;
- (void)scrollViewWillEndDragging:(id)arg1 withVelocity:(struct CGPoint)arg2 targetContentOffset:(inout struct CGPoint *)arg3;
- (void)scrollViewDidScroll:(id)arg1;
- (void)collectionView:(id)arg1 didEndDisplayingCell:(id)arg2 forItemAtIndexPath:(id)arg3;
- (void)collectionView:(id)arg1 willDisplayCell:(id)arg2 forItemAtIndexPath:(id)arg3;
- (id)collectionView:(id)arg1 cellForItemAtIndexPath:(id)arg2;
- (id)collectionView:(id)arg1 viewForSupplementaryElementOfKind:(id)arg2 atIndexPath:(id)arg3;
- (struct CGSize)collectionView:(id)arg1 layout:(id)arg2 sizeForItemAtIndexPath:(id)arg3;
- (long long)collectionView:(id)arg1 numberOfItemsInSection:(long long)arg2;
- (long long)numberOfSectionsInCollectionView:(id)arg1;
- (id)__reuseIdentifierForKind:(id)arg1;
- (void)moveItemAtIndexPath:(id)arg1 toIndexPath:(id)arg2;
- (void)reloadItemsAtIndexPaths:(id)arg1;
- (void)deleteItemsAtIndexPaths:(id)arg1;
- (void)insertItemsAtIndexPaths:(id)arg1;
- (void)moveSection:(long long)arg1 toSection:(long long)arg2;
- (void)reloadSections:(id)arg1;
- (void)deleteSections:(id)arg1;
- (void)insertSections:(id)arg1;
- (void)registerSupplementaryNodeOfKind:(id)arg1;
- (void)performBatchUpdates:(CDUnknownBlockType)arg1 completion:(CDUnknownBlockType)arg2;
- (void)performBatchAnimated:(_Bool)arg1 updates:(CDUnknownBlockType)arg2 completion:(CDUnknownBlockType)arg3;
- (id)dataController;
- (id)visibleNodes;
- (id)indexPathForNode:(id)arg1;
- (id)nodeForItemAtIndexPath:(id)arg1;
- (id)completedNodes;
- (struct CGSize)calculatedSizeForNodeAtIndexPath:(id)arg1;
- (CDStruct_c3b9c2ee)tuningParametersForRangeMode:(unsigned long long)arg1 rangeType:(long long)arg2;
- (void)setTuningParameters:(CDStruct_c3b9c2ee)arg1 forRangeMode:(unsigned long long)arg2 rangeType:(long long)arg3;
- (CDStruct_c3b9c2ee)tuningParametersForRangeType:(long long)arg1;
- (void)setTuningParameters:(CDStruct_c3b9c2ee)arg1 forRangeType:(long long)arg2;
- (void)proxyTargetHasDeallocated:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDataSource:(id)arg1;
- (void)waitUntilAllUpdatesAreCommitted;
- (void)relayoutItems;
- (void)reloadDataImmediately;
- (void)reloadData;
- (void)reloadDataWithCompletion:(CDUnknownBlockType)arg1;
- (id)flowLayoutInspector;
- (void)dealloc;
- (id)_initWithFrame:(struct CGRect)arg1 collectionViewLayout:(id)arg2 layoutFacilitator:(id)arg3 ownedByNode:(_Bool)arg4;
- (id)_initWithFrame:(struct CGRect)arg1 collectionViewLayout:(id)arg2 ownedByNode:(_Bool)arg3;
- (id)initWithFrame:(struct CGRect)arg1 collectionViewLayout:(id)arg2 asyncDataFetching:(_Bool)arg3;
- (id)initWithFrame:(struct CGRect)arg1 collectionViewLayout:(id)arg2;
- (id)initWithCollectionViewLayout:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

