//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

@class IMNetInterfaceService, NSDate, NSDictionary, NSNumber, NSString, NSUserDefaults, WXMessengerHelper, WXMessengerNotifyCenter;
@protocol INetRequestDelegate;

@interface WXMessenger : NSObject
{
    NSString *_accountPrefix;
    NSString *_multiSignAccountPrefix;
    struct IMNetAsyncNotifyService4iOS *_netNotifyService;
    _Bool _forbiddenAutoBindClientId;
    int _messengerAppId;
    int _messengerDevType;
    int _allotType;
    int _loginType;
    NSNumber *_lastLoginAccountType;
    NSNumber *_lastLoginChannel;
    NSString *_loginAccount;
    NSString *_loginName;
    NSNumber *_loginTime;
    NSDate *_serverTime;
    NSString *_clientIdWhenLogin;
    id _userDefault;
    long long _localServerGapTimeS;
    id <INetRequestDelegate> _requestDelegate;
    NSUserDefaults *_loginDefaults;
    NSString *_serverAddress;
    NSString *_lastLoginPassword;
    NSDictionary *_configurationSignInfo;
    NSString *_language;
    WXMessengerNotifyCenter *_notifyCenter;
    IMNetInterfaceService *_pNet;
    WXMessengerHelper *_messengerHelper;
}

+ (id)messengerWithAccount:(id)arg1;
@property(retain, nonatomic) WXMessengerHelper *messengerHelper; // @synthesize messengerHelper=_messengerHelper;
@property(nonatomic) int loginType; // @synthesize loginType=_loginType;
@property(retain, nonatomic) IMNetInterfaceService *pNet; // @synthesize pNet=_pNet;
@property(retain, nonatomic) WXMessengerNotifyCenter *notifyCenter; // @synthesize notifyCenter=_notifyCenter;
@property(copy, nonatomic) NSString *language; // @synthesize language=_language;
@property(retain, nonatomic) NSDictionary *configurationSignInfo; // @synthesize configurationSignInfo=_configurationSignInfo;
@property(copy, nonatomic) NSString *lastLoginPassword; // @synthesize lastLoginPassword=_lastLoginPassword;
@property(retain, nonatomic) NSString *serverAddress; // @synthesize serverAddress=_serverAddress;
@property(nonatomic) int allotType; // @synthesize allotType=_allotType;
@property(retain, nonatomic) NSUserDefaults *loginDefaults; // @synthesize loginDefaults=_loginDefaults;
@property(nonatomic) __weak id <INetRequestDelegate> requestDelegate; // @synthesize requestDelegate=_requestDelegate;
@property(nonatomic) long long localServerGapTimeS; // @synthesize localServerGapTimeS=_localServerGapTimeS;
@property(nonatomic) __weak id userDefault; // @synthesize userDefault=_userDefault;
@property(nonatomic) int messengerDevType; // @synthesize messengerDevType=_messengerDevType;
@property(nonatomic) int messengerAppId; // @synthesize messengerAppId=_messengerAppId;
@property(nonatomic) _Bool forbiddenAutoBindClientId; // @synthesize forbiddenAutoBindClientId=_forbiddenAutoBindClientId;
@property(copy, nonatomic) NSString *clientIdWhenLogin; // @synthesize clientIdWhenLogin=_clientIdWhenLogin;
@property(retain, nonatomic) NSDate *serverTime; // @synthesize serverTime=_serverTime;
@property(retain, nonatomic) NSNumber *loginTime; // @synthesize loginTime=_loginTime;
@property(copy, nonatomic) NSString *loginName; // @synthesize loginName=_loginName;
@property(copy, nonatomic) NSString *loginAccount; // @synthesize loginAccount=_loginAccount;
@property(copy, nonatomic) NSNumber *lastLoginChannel; // @synthesize lastLoginChannel=_lastLoginChannel;
@property(copy, nonatomic) NSNumber *lastLoginAccountType; // @synthesize lastLoginAccountType=_lastLoginAccountType;
- (void).cxx_destruct;
- (void)requestRecentConversationListWithCount:(unsigned int)arg1 version:(id)arg2 flag:(unsigned int)arg3 delegate:(id)arg4;
- (void)requestRecentConversationListWithCount:(unsigned int)arg1 version:(id)arg2 delegate:(id)arg3;
- (void)getServerContactsReadTimestamp:(unsigned int)arg1 withVersion:(long long)arg2 withDelegate:(id)arg3;
- (void)sendBatchContactsReadTimestamp:(id)arg1 withDelegate:(id)arg2;
- (void)removeAllContactReadTimestampWithDelegate:(id)arg1;
- (void)removeContactReadTimestamp:(id)arg1 flag:(unsigned int)arg2 withDelegate:(id)arg3;
- (void)sendContactReadTimestamp:(id)arg1 andTimeStamp:(unsigned int)arg2 andFlag:(unsigned int)arg3 withDelegate:(id)arg4;
- (struct SMsgItem)msgItemFromStackMsg:(id)arg1;
- (void)requestTokenForType:(int)arg1 userData:(id)arg2 withDelegate:(id)arg3;
- (void)cancelRequestWithSequenceId:(unsigned int)arg1;
- (void)loginToServer:(id)arg1 withUsername:(id)arg2 password:(id)arg3 pwdType:(int)arg4 sessionId:(id)arg5 sessionSecret:(id)arg6 checkCode:(id)arg7 checkCodeUrl:(id)arg8 extraData:(id)arg9 siteName:(id)arg10 accountType:(unsigned long long)arg11 channel:(unsigned long long)arg12 attrs:(id)arg13;
- (id)_makeLoginAttrInfo;
- (void)relogin;
- (id)getNewestVersionUrl;
- (_Bool)hasLoginThread;
- (void)unInitInet;
- (void)logoutAndNeedSend:(_Bool)arg1;
- (void)disconnectFromServer;
- (void)loginWithAnonAccount:(id)arg1 password:(id)arg2 deviceInfo:(id)arg3;
- (void)loginWithFreeOpenID:(id)arg1 clientData:(id)arg2;
- (void)loginWithFreeUserId:(id)arg1 trustInfo:(id)arg2;
- (void)loginWithFreeUserId:(id)arg1 password:(id)arg2 clientData:(id)arg3;
- (void)loginWithOpenID:(id)arg1 openToken:(id)arg2 clientData:(id)arg3;
- (void)loginWithQNEntId:(id)arg1 QNEntToken:(id)arg2 accountType:(unsigned long long)arg3 channel:(unsigned long long)arg4;
- (void)loginWithUser:(id)arg1 havanaToken:(id)arg2 accountType:(unsigned long long)arg3 channel:(unsigned long long)arg4;
- (void)loginWithUser:(id)arg1 trustInfo:(id)arg2;
- (void)loginWithUser:(id)arg1 SSOToken:(id)arg2 context:(id)arg3;
- (void)loginWithCheckCode:(id)arg1 checkCodeUrl:(id)arg2;
- (void)loginWithUser:(id)arg1 token:(id)arg2 sessionId:(id)arg3 sessionSecret:(id)arg4;
- (void)loginWithUser:(id)arg1 token:(id)arg2;
- (void)loginWithUser:(id)arg1 token:(id)arg2 clientData:(id)arg3 sessionId:(id)arg4 sessionSecret:(id)arg5 accountType:(unsigned long long)arg6 channel:(unsigned long long)arg7;
- (void)loginWithUser:(id)arg1 password:(id)arg2 channel:(unsigned long long)arg3;
- (id)getServerAddressWithUsername:(id)arg1 password:(id)arg2;
- (id)kMessengerServerAddress;
- (void)requestLogonSessionListWithDelegate:(id)arg1;
- (void)changeCurrentUserStatus:(int)arg1 preStatus:(int)arg2;
- (void)setUseMainQueueNotify:(_Bool)arg1;
- (void)setMultiSignAccountPrefix:(id)arg1;
- (void)setAccountPrefix:(id)arg1;
- (void)setNotifyDelegate:(id)arg1;
- (void)setClientVersion:(id)arg1;
- (void)setAppId:(int)arg1;
- (void)setDeviceType:(int)arg1;
- (void)setAllotSrv:(id)arg1 allotType:(int)arg2;
- (void)onLoginFailed:(id)arg1;
- (void)onUpdateData:(id)arg1;
- (_Bool)handleLoginSuccess:(id)arg1;
- (void)onReLoginSuccess:(id)arg1;
- (void)onLoginSuccess:(id)arg1;
- (void)onLogining:(id)arg1;
- (void)unreg4Notification;
- (void)reg4Notification;
- (void)commitLoginSuccessWithAppMonitor;
- (void)initNetServiceWithAccount:(id)arg1;
- (void)initBasicInfo;
- (void)dealloc;
- (id)initWithAccount:(id)arg1;
- (void)modifyContactCommentName:(id)arg1 newName:(id)arg2 delegate:(id)arg3;
- (void)removeContactsWithIds:(id)arg1 delegate:(id)arg2;
- (void)removeContactWithId:(id)arg1 delegate:(id)arg2;
- (void)responseForAddContactRequest:(id)arg1 withWXContactResponseType:(int)arg2 withMessage:(id)arg3 delegate:(id)arg4;
- (void)addContactWithId:(id)arg1 toGroup:(long long)arg2 byAnswerQuestion:(id)arg3 delegate:(id)arg4;
- (void)addContactWithId:(id)arg1 toGroup:(long long)arg2 withMessage:(id)arg3 delegate:(id)arg4;
- (void)addContactWithId:(id)arg1 toGroup:(long long)arg2 delegate:(id)arg3;
- (void)addContactWithId:(id)arg1 byAnswerQuestion:(id)arg2 delegate:(id)arg3;
- (void)addContactWithId:(id)arg1 withMessage:(id)arg2 delegate:(id)arg3;
- (void)addContactWithId:(id)arg1 delegate:(id)arg2;
- (void)addContactWithId:(id)arg1 reqType:(int)arg2 message:(id)arg3 group:(long long)arg4 delegate:(id)arg5;
- (void)addContactToGroup:(long long)arg1 withMD5Phone:(id)arg2 verifyMessage:(id)arg3 delegate:(id)arg4;
- (void)addContactToGroup:(long long)arg1 withMD5Phone:(id)arg2 verifyAnswer:(id)arg3 delegate:(id)arg4;
- (void)addContactToGroup:(long long)arg1 withMD5Phone:(id)arg2 delegate:(id)arg3;
- (void)addContactWithMD5Phone:(id)arg1 verifyMessage:(id)arg2 delegate:(id)arg3;
- (void)addContactWithMD5Phone:(id)arg1 verifyAnswer:(id)arg2 delegate:(id)arg3;
- (void)addContactWithMD5Phone:(id)arg1 delegate:(id)arg2;
- (void)addContactWithMD5Phone:(id)arg1 reqType:(int)arg2 message:(id)arg3 group:(long long)arg4 delegate:(id)arg5;
- (void)moveContact:(id)arg1 toGroup:(long long)arg2 delegate:(id)arg3;
- (void)deleteGroupByBatchGroupId:(id)arg1 delegate:(id)arg2;
- (void)changeParentGroupWithInfo:(id)arg1 delegate:(id)arg2;
- (void)changeGroupNameWithInfo:(id)arg1 delegate:(id)arg2;
- (void)addGroupWithName:(id)arg1 andParentGroupId:(long long)arg2 delegate:(id)arg3;
- (void)requestContactsGroupInfosWithTimeStamp:(unsigned int)arg1 delegate:(id)arg2;
- (void)requesetContactsWXFriendFlagWithContactIds:(id)arg1 delegate:(id)arg2;
- (void)requestContactsListInfosWithContactNum:(unsigned int)arg1 andTimeStamp:(unsigned int)arg2 andListType:(int)arg3 flagType:(long long)arg4 delegate:(id)arg5;
- (void)requestContactsListInfosWithContactNum:(unsigned int)arg1 andTimeStamp:(unsigned int)arg2 andListType:(int)arg3 delegate:(id)arg4;
- (void)removeContactFromBlacklistWithMD5Phone:(id)arg1 delegate:(id)arg2;
- (void)removeFromBlacklistWithId:(id)arg1 delegate:(id)arg2;
- (void)addContactToBlacklistWithId:(id)arg1 delegate:(id)arg2;
- (void)requesetContactBlacklistWithBlacklistNum:(unsigned int)arg1 andTimeStamp:(unsigned int)arg2 delegate:(id)arg3;
- (void)clearLocationInfoWithDelegate:(id)arg1;
- (unsigned int)shakeForContactsWithLongitude:(double)arg1 andLatitude:(double)arg2 delegate:(id)arg3;
- (unsigned int)searchPersonsNearByWithLongitude:(double)arg1 andLatitude:(double)arg2 delegate:(id)arg3;
- (unsigned int)getRecommendContactsWithDelegate:(id)arg1;
- (unsigned int)serchFriendWithType:(int)arg1 andLongitude:(double)arg2 andLatitude:(double)arg3 delegate:(id)arg4;
- (void)sendInputStatus:(int)arg1 toUser:(id)arg2;
- (void)sendAckForOfflineMsgWithLastTime:(long long)arg1;
- (void)fetchOfflineMessageWithCount:(unsigned long long)arg1 lastTime:(long long)arg2 withDelegate:(id)arg3;
- (void)sendConfirmMessage:(id)arg1 toReceiver:(id)arg2 withStatus:(int)arg3 delegate:(id)arg4;
- (_Bool)sendMessage:(id)arg1 withDelegate:(id)arg2;
- (int)getSendMySelfMessageProtocolType;
- (int)getRevokeMySelfMessageProtocolType;
- (void)createResponserWithCommand:(unsigned int)arg1 param:(id)arg2 timeout:(unsigned int)arg3 delegate:(id)arg4 responseCenter:(id *)arg5 complitionCallback:(CDUnknownBlockType)arg6;
- (id)createResponserWithCommand:(unsigned int)arg1 paramString:(const basic_string_1cdf7af0 *)arg2 timeout:(unsigned int)arg3 delegate:(id)arg4;
- (void)sendRequestToService:(unsigned long long)arg1 withCommand:(unsigned long long)arg2 andRequestString:(id)arg3 andDelegate:(id)arg4;
- (void)requestCascSiteAppWithAppid:(id)arg1 site:(id)arg2 requestData:(id)arg3 completedBlock:(CDUnknownBlockType)arg4;
- (void)forwardContact:(id)arg1 toEHelper:(id)arg2 delegate:(id)arg3;
- (void)requestEHelpServiceModeWithDelegate:(id)arg1;
- (void)changeEHelpServiceMode:(int)arg1 withBossId:(id)arg2 delegate:(id)arg3;
- (void)getCurrentUserInfoInTribe:(id)arg1 delegate:(id)arg2;
- (void)updateNickname:(id)arg1 ofMember:(id)arg2 inTribe:(id)arg3 delegate:(id)arg4;
- (void)updateTribeInfo:(id)arg1 ofTribe:(id)arg2 delegate:(id)arg3;
- (void)replyApplicationtoJoinTribe:(id)arg1 user:(id)arg2 userInfo:(id)arg3 delegate:(id)arg4;
- (void)replyInvitation:(id)arg1 ofJoinToTribe:(id)arg2 delegate:(id)arg3;
- (void)disbandTribe:(id)arg1 delegate:(id)arg2;
- (void)exitFromTribe:(id)arg1 delegate:(id)arg2;
- (void)setMember:(id)arg1 withRole:(long long)arg2 fromTribe:(id)arg3 delegate:(id)arg4;
- (void)expelMember:(id)arg1 fromTribe:(id)arg2 delegate:(id)arg3;
- (void)joinToTribe:(id)arg1 checkInfo:(id)arg2 checkMode:(long long)arg3 delegate:(id)arg4;
- (void)inviteMembers:(id)arg1 toTribe:(id)arg2 delegate:(id)arg3;
- (void)createTribeWithInfo:(id)arg1 members:(id)arg2 delegate:(id)arg3;
- (void)createTribeWithType:(long long)arg1 members:(id)arg2 name:(id)arg3 bulletin:(id)arg4 andDelegate:(id)arg5;
- (void)fetchNicknamesOfMembers:(id)arg1 inTribe:(id)arg2 delegate:(id)arg3;
- (void)fetchMembersOfTribe:(id)arg1 lastModificationTime:(double)arg2 delegate:(id)arg3;
- (void)fetchInfoOfTribe:(id)arg1 flag:(long long)arg2 lastModificationTime:(double)arg3 delegate:(id)arg4;
- (void)fetchTribeListWithTypes:(id)arg1 lastModificationTime:(double)arg2 delegate:(id)arg3;
- (void)sendTribeAtMessagesReadAck:(id)arg1 ofTribe:(id)arg2 delegate:(id)arg3;
- (void)sendAckForTribeWithAckId:(id)arg1 msgIds:(id)arg2 forOperationType:(id)arg3 delegate:(id)arg4;
- (void)sendTribeMessage:(id)arg1 delegate:(id)arg2;
- (void)sendTribeOperation:(id)arg1 delegate:(id)arg2;

@end

