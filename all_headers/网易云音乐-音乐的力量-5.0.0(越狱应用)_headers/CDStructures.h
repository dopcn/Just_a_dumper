//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#pragma mark Function Pointers and Blocks

typedef void (*CDUnknownFunctionPointerType)(void); // return type and parameters are unknown

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct AQPlayer {
    struct OpaqueAudioQueue *_field1;
    struct AudioQueueBuffer *_field2[3];
    struct OpaqueAudioFileID *_field3;
    struct __CFString *_field4;
    struct CAStreamBasicDescription _field5;
    unsigned char _field6;
    unsigned int _field7;
    long long _field8;
    unsigned int _field9;
    unsigned char _field10;
    unsigned char _field11;
    unsigned char _field12;
};

struct AVMessage {
    int what;
    int arg1;
    int arg2;
    void *obj;
    CDUnknownFunctionPointerType free_l;
    struct AVMessage *next;
};

struct AttitudeArray {
    struct MMAttitude *_field1;
    int _field2;
};

struct AudioBuffer {
    unsigned int _field1;
    unsigned int _field2;
    void *_field3;
};

struct AudioBufferList {
    unsigned int _field1;
    struct AudioBuffer _field2[1];
};

struct AudioEffectProcessor {
    struct Effect_Eng_Bundle *_field1;
    struct Effect_Eng_RVB *_field2;
};

struct AudioEncoder;

struct AudioQueueBuffer {
    unsigned int _field1;
    void *_field2;
    unsigned int _field3;
    void *_field4;
    unsigned int _field5;
    struct AudioStreamPacketDescription *_field6;
    unsigned int _field7;
};

struct AudioQueueLevelMeterState {
    float _field1;
    float _field2;
};

struct AudioStreamBasicDescription {
    double mSampleRate;
    unsigned int mFormatID;
    unsigned int mFormatFlags;
    unsigned int mBytesPerPacket;
    unsigned int mFramesPerPacket;
    unsigned int mBytesPerFrame;
    unsigned int mChannelsPerFrame;
    unsigned int mBitsPerChannel;
    unsigned int mReserved;
};

struct AudioStreamPacketDescription {
    long long _field1;
    unsigned int _field2;
    unsigned int _field3;
};

struct AudioTimeStamp {
    double _field1;
    unsigned long long _field2;
    double _field3;
    unsigned long long _field4;
    struct SMPTETime _field5;
    unsigned int _field6;
    unsigned int _field7;
};

struct BufferParam {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
    int _field5;
    int _field6;
    int _field7;
    int _field8;
    int _field9;
    int _field10;
    int _field11;
    int _field12;
    int _field13;
    int _field14;
    int _field15;
    int _field16;
    int _field17;
    int _field18;
    int _field19;
    int _field20;
    int _field21;
    int _field22;
    int _field23;
    int _field24;
    int _field25;
    int _field26;
    int _field27;
};

struct CAStreamBasicDescription {
    double _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned int _field6;
    unsigned int _field7;
    unsigned int _field8;
    unsigned int _field9;
};

struct CATransform3D {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
    double _field5;
    double _field6;
    double _field7;
    double _field8;
    double _field9;
    double _field10;
    double _field11;
    double _field12;
    double _field13;
    double _field14;
    double _field15;
    double _field16;
};

struct CBCmdNotifyParam {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    int _field3;
    struct Property _field4;
};

struct CCCubeCell {
    unsigned int hitCount;
    double redAcc;
    double greenAcc;
    double blueAcc;
};

struct CFLACTagRW {
    struct FLACTagInfo _field1;
};

struct CGAffineTransform {
    double a;
    double b;
    double c;
    double d;
    double tx;
    double ty;
};

struct CGColor;

struct CGPoint {
    double x;
    double y;
};

struct CGRect {
    struct CGPoint origin;
    struct CGSize size;
};

struct CGSize {
    double width;
    double height;
};

struct CLLocationCoordinate2D {
    double _field1;
    double _field2;
};

struct CMP4TagRW {
    struct MP4TagInfo _field1;
};

struct CMVideoSampling {
    void *cvTextureCache;
    void *cvTextureCacheTexture;
    void *cvImageBuffer;
};

struct CTagManipulator {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
    struct Mp3TagInfoStruct _field5;
};

struct CalcSpectrogram;

struct Effect_Eng_Bundle;

struct Effect_Eng_RVB;

struct FLACTagInfo {
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> title;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> artist;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> album;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> comment;
    struct vector<char, std::allocator<char>> picData;
    int year;
    int trackNum;
};

struct FLAC__StreamDecoderPrivate;

struct FLAC__StreamDecoderProtected;

struct FPExtractor {
    int _field1;
    int _field2;
    struct vector<int, std::allocator<int>> _field3;
    struct CalcSpectrogram *_field4[4];
};

struct GPUMatrix3x3 {
    struct GPUVector3 _field1;
    struct GPUVector3 _field2;
    struct GPUVector3 _field3;
};

struct GPUMatrix4x4 {
    struct GPUVector4 _field1;
    struct GPUVector4 _field2;
    struct GPUVector4 _field3;
    struct GPUVector4 _field4;
};

struct GPUTextureOptions {
    unsigned int minFilter;
    unsigned int magFilter;
    unsigned int wrapS;
    unsigned int wrapT;
    unsigned int internalFormat;
    unsigned int format;
    unsigned int type;
};

struct GPUVector3 {
    float _field1;
    float _field2;
    float _field3;
};

struct GPUVector4 {
    float _field1;
    float _field2;
    float _field3;
    float _field4;
};

struct IAPEDecompress {
    CDUnknownFunctionPointerType *_field1;
};

struct IAsynCallbackParam {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
};

struct ICMPHeader {
    unsigned char _field1;
    unsigned char _field2;
    unsigned short _field3;
    unsigned short _field4;
    unsigned short _field5;
};

struct IMUArray {
    struct MMIMU *_field1;
    int _field2;
};

struct IPv4Header {
    unsigned char _field1;
    unsigned char _field2;
    unsigned short _field3;
    unsigned short _field4;
    unsigned short _field5;
    unsigned char _field6;
    unsigned char _field7;
    unsigned short _field8;
    unsigned char _field9[4];
    unsigned char _field10[4];
};

struct InsightARCameraParam {
    int width;
    int height;
    float fov[2];
    float focalLength[2];
    float principalPoint[2];
    float distortionCoefficients[4];
    float projectionMatrix[4][4];
    float transformationIMU2Camera[2];
    int captureFps;
    int format;
    int sessionPreset;
    int devicePosition;
    int orientation;
    int focusMode;
    float lensPosition;
    float lensAperture;
    int exposureMode;
    float exposureDuration;
    float exposureBias;
    float iso;
    int whiteBalanceMode;
    float temperature;
    float tint;
    int torchMode;
    int flashMode;
};

struct InsightARCameraPose {
    float rotation[3][3];
    float translation[3];
    float quaternion[4];
    float center[3];
    float quaternion_opengl[4];
    float center_opengl[3];
    float quaternion_u3d[4];
    float center_u3d[3];
    float quaternion_imu[4];
    float center_imu[3];
};

struct InsightARResult {
    int sceneType;
    int state;
    int reason;
    struct InsightARCameraParam param;
    struct InsightARCameraPose camera;
    double timestamp;
};

struct MMAttitude;

struct MMIMU;

struct MP4TagInfo {
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> title;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> artist;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> album;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> comment;
    struct vector<char, std::allocator<char>> picData;
    int year;
    int trackNum;
};

struct ModuleData;

struct Mp3TagInfoStruct {
    int m_sampleRate;
    int m_bitrate;
    int m_length;
    int m_channels;
    struct vector<char, std::allocator<char>> m_picData;
    struct vector<char, std::allocator<char>> m_geobData;
    struct vector<ID3TagStruct, std::allocator<ID3TagStruct>> m_ID3v2Info;
    struct vector<ID3TagStruct, std::allocator<ID3TagStruct>> m_ID3v1Info;
};

struct NCMFile {
    CDUnknownFunctionPointerType *_field1;
};

struct NCMFileIO {
    CDUnknownFunctionPointerType *_field1;
    id _field2;
    long long _field3;
    long long _field4;
};

struct NELPAudioInfo {
    char *_field1;
    long long _field2;
    long long _field3;
    long long _field4;
};

struct NELPVideoInfo {
    char *_field1;
    long long _field2;
    long long _field3;
    double _field4;
    long long _field5;
};

struct NELP_struct_STREAM_INFO {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
    char _field5[400];
};

struct NMDownloadQueue {
    Class _field1;
};

struct NSDictionary {
    Class _field1;
};

struct NSURL {
    Class _field1;
    id _field2;
    id _field3;
    void *_field4;
    void *_field5;
};

struct NTESAPEIO {
    CDUnknownFunctionPointerType *_field1;
    id _field2;
};

struct OpaqueAudioFileID;

struct OpaqueAudioQueue;

struct PLCrashHostInfoVersion {
    unsigned long long major;
    unsigned long long minor;
    unsigned long long revision;
};

struct PLCrashReporterCallbacks {
    unsigned short _field1;
    void *_field2;
    CDUnknownFunctionPointerType _field3;
};

struct Property {
    CDUnknownFunctionPointerType *_vptr$Marshallable;
    struct map<unsigned int, std::__1::basic_string<char>, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, std::__1::basic_string<char>>>> props;
};

struct RCTJSCWrapper {
    CDUnknownFunctionPointerType _field1;
    CDUnknownFunctionPointerType _field2;
    CDUnknownFunctionPointerType _field3;
    CDUnknownFunctionPointerType _field4;
    CDUnknownFunctionPointerType _field5;
    CDUnknownFunctionPointerType _field6;
    CDUnknownFunctionPointerType _field7;
    CDUnknownFunctionPointerType _field8;
    CDUnknownFunctionPointerType _field9;
    CDUnknownFunctionPointerType _field10;
    CDUnknownFunctionPointerType _field11;
    CDUnknownFunctionPointerType _field12;
    CDUnknownFunctionPointerType _field13;
    CDUnknownFunctionPointerType _field14;
    CDUnknownFunctionPointerType _field15;
    CDUnknownFunctionPointerType _field16;
    CDUnknownFunctionPointerType _field17;
    Class _field18;
    Class _field19;
    CDUnknownFunctionPointerType _field20;
};

struct RCTJSContextData {
    _Bool _field1;
    id _field2;
    id _field3;
    struct RCTJSCWrapper *_field4;
};

struct RSKLineSegment {
    struct CGPoint _field1;
    struct CGPoint _field2;
};

struct RandomAccessBundleData {
    struct unique_ptr<__sFILE, int (*)(__sFILE *)> bundle;
    unsigned long long baseOffset;
    unsigned long long numTableEntries;
    struct unique_ptr<ModuleData [], std::__1::default_delete<ModuleData []>> table;
};

struct SDL_AudioSpec {
    int freq;
    unsigned short format;
    unsigned char channels;
    unsigned char silence;
    unsigned short samples;
    unsigned short padding;
    unsigned int size;
    CDUnknownFunctionPointerType callback;
    void *userdata;
};

struct SDL_Class;

struct SDL_VoutOverlay {
    int _field1;
    int _field2;
    unsigned int _field3;
    int _field4;
    unsigned short *_field5;
    char **_field6;
    unsigned short *_field7;
    char **_field8;
    int _field9;
    int _field10;
    int _field11;
    struct SDL_Class *_field12;
    struct SDL_VoutOverlay_Opaque *_field13;
    CDUnknownFunctionPointerType _field14;
    CDUnknownFunctionPointerType _field15;
    CDUnknownFunctionPointerType _field16;
    CDUnknownFunctionPointerType _field17;
    CDUnknownFunctionPointerType _field18;
    int _field19;
};

struct SDL_VoutOverlay_Opaque;

struct SMPTETime {
    short _field1;
    short _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
    short _field6;
    short _field7;
    short _field8;
    short _field9;
};

struct SpeechEnhancer<NIM::NoiseEstimater_MMSE, NIM::SpectrumRestorer_MMSE>;

struct UIEdgeInsets {
    double top;
    double left;
    double bottom;
    double right;
};

struct UIOffset {
    double _field1;
    double _field2;
};

struct WBSDKJKConstBuffer {
    struct WBSDKJKConstPtrRange _field1;
};

struct WBSDKJKConstPtrRange {
    char *_field1;
    unsigned long long _field2;
};

struct WBSDKJKEncodeCache {
    id _field1;
    unsigned long long _field2;
    unsigned long long _field3;
};

struct WBSDKJKEncodeState {
    struct WBSDKJKManagedBuffer _field1;
    struct WBSDKJKManagedBuffer _field2;
    unsigned long long _field3;
    struct WBSDKJKFastClassLookup _field4;
    struct WBSDKJKEncodeCache _field5[1024];
    unsigned long long _field6;
    unsigned long long _field7;
    unsigned long long _field8;
    id _field9;
    id _field10;
    SEL _field11;
    CDUnknownFunctionPointerType _field12;
    CDUnknownBlockType _field13;
};

struct WBSDKJKFastClassLookup {
    void *_field1;
    void *_field2;
    void *_field3;
    void *_field4;
    void *_field5;
};

struct WBSDKJKHashTableEntry {
    unsigned long long _field1;
    id _field2;
    id _field3;
};

struct WBSDKJKManagedBuffer {
    struct WBSDKJKPtrRange _field1;
    unsigned long long _field2;
    unsigned long long _field3;
};

struct WBSDKJKObjCImpCache {
    Class _field1;
    CDUnknownFunctionPointerType _field2;
    CDUnknownFunctionPointerType _field3;
};

struct WBSDKJKObjectStack {
    void **_field1;
    void **_field2;
    unsigned long long *_field3;
    unsigned long long _field4;
    unsigned long long _field5;
    unsigned long long _field6;
    unsigned long long _field7;
};

struct WBSDKJKParseState {
    unsigned long long _field1;
    struct WBSDKJKConstBuffer _field2;
    unsigned long long _field3;
    unsigned long long _field4;
    unsigned long long _field5;
    unsigned long long _field6;
    unsigned long long _field7;
    unsigned long long _field8;
    struct WBSDKJKParseToken _field9;
    struct WBSDKJKObjectStack _field10;
    struct WBSDKJKTokenCache _field11;
    struct WBSDKJKObjCImpCache _field12;
    id _field13;
    int _field14;
    _Bool _field15;
};

struct WBSDKJKParseToken {
    struct WBSDKJKConstPtrRange _field1;
    unsigned long long _field2;
    struct WBSDKJKTokenValue _field3;
    struct WBSDKJKManagedBuffer _field4;
};

struct WBSDKJKPtrRange {
    char *_field1;
    unsigned long long _field2;
};

struct WBSDKJKTokenCache {
    struct WBSDKJKTokenCacheItem *_field1;
    unsigned long long _field2;
    unsigned int _field3;
    unsigned char _field4[1024];
};

struct WBSDKJKTokenCacheItem;

struct WBSDKJKTokenValue {
    struct WBSDKJKConstPtrRange _field1;
    unsigned long long _field2;
    unsigned long long _field3;
    union {
        long long _field1;
        unsigned long long _field2;
        double _field3;
    } _field4;
    struct WBSDKJKTokenCacheItem *_field5;
};

struct WebPData {
    char *_field1;
    unsigned long long _field2;
};

struct WebPIterator {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
    int _field5;
    int _field6;
    int _field7;
    int _field8;
    int _field9;
    struct WebPData _field10;
    int _field11;
    int _field12;
    unsigned int _field13[2];
    void *_field14;
};

struct _Alloc_hider {
    char *_M_p;
};

struct _IplImage {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
    int _field5;
    char _field6[4];
    char _field7[4];
    int _field8;
    int _field9;
    int _field10;
    int _field11;
    int _field12;
    struct _IplROI *_field13;
    struct _IplImage *_field14;
    void *_field15;
    struct _IplTileInfo *_field16;
    int _field17;
    char *_field18;
    int _field19;
    int _field20[4];
    int _field21[4];
    char *_field22;
};

struct _IplROI;

struct _IplTileInfo;

struct _NSRange {
    unsigned long long location;
    unsigned long long length;
};

struct _NTESAudioCacheRange {
    unsigned long long _field1;
    unsigned long long _field2;
};

struct _NTESValueRange {
    long long min;
    long long max;
};

struct _PLCrashReportDecoder {
    struct _Plcrash__CrashReport *_field1;
};

struct _Plcrash__CrashReport {
    struct _ProtobufCMessage _field1;
    struct _Plcrash__CrashReport__SystemInfo *_field2;
    struct _Plcrash__CrashReport__ApplicationInfo *_field3;
    unsigned long long _field4;
    struct _Plcrash__CrashReport__Thread **_field5;
    unsigned long long _field6;
    struct _Plcrash__CrashReport__BinaryImage **_field7;
    struct _Plcrash__CrashReport__Exception *_field8;
    struct _Plcrash__CrashReport__Signal *_field9;
    struct _Plcrash__CrashReport__ProcessInfo *_field10;
    struct _Plcrash__CrashReport__MachineInfo *_field11;
    struct _Plcrash__CrashReport__ReportInfo *_field12;
};

struct _Plcrash__CrashReport__ApplicationInfo {
    struct _ProtobufCMessage _field1;
    char *_field2;
    char *_field3;
};

struct _Plcrash__CrashReport__BinaryImage;

struct _Plcrash__CrashReport__Exception {
    struct _ProtobufCMessage _field1;
    char *_field2;
    char *_field3;
    unsigned long long _field4;
    struct _Plcrash__CrashReport__Thread__StackFrame **_field5;
};

struct _Plcrash__CrashReport__MachineInfo {
    struct _ProtobufCMessage _field1;
    char *_field2;
    struct _Plcrash__CrashReport__Processor *_field3;
    unsigned int _field4;
    unsigned int _field5;
};

struct _Plcrash__CrashReport__ProcessInfo {
    struct _ProtobufCMessage _field1;
    char *_field2;
    unsigned int _field3;
    char *_field4;
    char *_field5;
    unsigned int _field6;
    int _field7;
    int _field8;
    unsigned long long _field9;
};

struct _Plcrash__CrashReport__Processor {
    struct _ProtobufCMessage _field1;
    int _field2;
    int _field3;
    unsigned long long _field4;
    unsigned long long _field5;
};

struct _Plcrash__CrashReport__ReportInfo;

struct _Plcrash__CrashReport__Signal {
    struct _ProtobufCMessage _field1;
    char *_field2;
    char *_field3;
    unsigned long long _field4;
    struct _Plcrash__CrashReport__Signal__MachException *_field5;
};

struct _Plcrash__CrashReport__Signal__MachException {
    struct _ProtobufCMessage _field1;
    unsigned long long _field2;
    unsigned long long _field3;
    unsigned long long *_field4;
};

struct _Plcrash__CrashReport__Symbol {
    struct _ProtobufCMessage _field1;
    char *_field2;
    unsigned long long _field3;
    int _field4;
    unsigned long long _field5;
};

struct _Plcrash__CrashReport__SystemInfo {
    struct _ProtobufCMessage _field1;
    int _field2;
    int _field3;
    char *_field4;
    int _field5;
    long long _field6;
    char *_field7;
};

struct _Plcrash__CrashReport__Thread;

struct _Plcrash__CrashReport__Thread__StackFrame {
    struct _ProtobufCMessage _field1;
    unsigned long long _field2;
    struct _Plcrash__CrashReport__Symbol *_field3;
};

struct _ProtobufCMessage {
    struct _ProtobufCMessageDescriptor *_field1;
    unsigned int _field2;
    struct _ProtobufCMessageUnknownField *_field3;
};

struct _ProtobufCMessageDescriptor;

struct _ProtobufCMessageUnknownField;

struct __CFString;

struct __darwin_sigaltstack {
    void *ss_sp;
    unsigned long long ss_size;
    int ss_flags;
};

struct __darwin_ucontext {
    int _field1;
    unsigned int _field2;
    struct __darwin_sigaltstack _field3;
    struct __darwin_ucontext *_field4;
    unsigned long long _field5;
    struct __darwin_mcontext64 *_field6;
};

struct __list_node_base<std::__1::basic_string<char>, void *> {
    struct __list_node_base<std::__1::basic_string<char>, void *> *_field1;
    struct __list_node_base<std::__1::basic_string<char>, void *> *_field2;
};

struct __list_node_base<unsigned long long, void *> {
    struct __list_node_base<unsigned long long, void *> *_field1;
    struct __list_node_base<unsigned long long, void *> *_field2;
};

struct __sFILE;

struct __tree_end_node<std::__1::__tree_node_base<void *>*> {
    struct __tree_node_base<void *> *__left_;
};

struct _opaque_pthread_cond_t {
    long long __sig;
    char __opaque[40];
};

struct _opaque_pthread_mutex_t {
    long long __sig;
    char __opaque[56];
};

struct _xmlAttr {
    void *_field1;
    int _field2;
    char *_field3;
    struct _xmlNode *_field4;
    struct _xmlNode *_field5;
    struct _xmlNode *_field6;
    struct _xmlAttr *_field7;
    struct _xmlAttr *_field8;
    struct _xmlDoc *_field9;
    struct _xmlNs *_field10;
    int _field11;
    void *_field12;
};

struct _xmlDoc {
    void *_field1;
    int _field2;
    char *_field3;
    struct _xmlNode *_field4;
    struct _xmlNode *_field5;
    struct _xmlNode *_field6;
    struct _xmlNode *_field7;
    struct _xmlNode *_field8;
    struct _xmlDoc *_field9;
    int _field10;
    int _field11;
    struct _xmlDtd *_field12;
    struct _xmlDtd *_field13;
    struct _xmlNs *_field14;
    char *_field15;
    char *_field16;
    void *_field17;
    void *_field18;
    char *_field19;
    int _field20;
    struct _xmlDict *_field21;
    void *_field22;
    int _field23;
    int _field24;
};

struct _xmlDtd;

struct _xmlNode {
    void *_field1;
    int _field2;
    char *_field3;
    struct _xmlNode *_field4;
    struct _xmlNode *_field5;
    struct _xmlNode *_field6;
    struct _xmlNode *_field7;
    struct _xmlNode *_field8;
    struct _xmlDoc *_field9;
    struct _xmlNs *_field10;
    char *_field11;
    struct _xmlAttr *_field12;
    struct _xmlNs *_field13;
    void *_field14;
    unsigned short _field15;
    unsigned short _field16;
};

struct _xmlNs {
    struct _xmlNs *_field1;
    int _field2;
    char *_field3;
    char *_field4;
    void *_field5;
    struct _xmlDoc *_field6;
};

struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
    struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
        struct __rep {
            union {
                struct __long {
                    char *__data_;
                    unsigned long long __size_;
                    unsigned long long __cap_;
                } __l;
                struct __short {
                    char __data_[23];
                    struct {
                        unsigned char __size_;
                    } ;
                } __s;
                struct __raw {
                    unsigned long long __words[3];
                } __r;
            } ;
        } __first_;
    } __r_;
};

struct basic_string<char, std::char_traits<char>, std::allocator<char>> {
    struct _Alloc_hider _M_dataplus;
};

struct in6_addr {
    union {
        unsigned char _field1[16];
        unsigned short _field2[8];
        unsigned int _field3[4];
    } _field1;
};

struct in_addr {
    unsigned int _field1;
};

struct internal_state;

struct list<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> {
    struct __list_node_base<std::__1::basic_string<char>, void *> _field1;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<std::__1::basic_string<char>, void *>>> {
        unsigned long long _field1;
    } _field2;
};

struct list<unsigned long long, std::__1::allocator<unsigned long long>> {
    struct __list_node_base<unsigned long long, void *> _field1;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<unsigned long long, void *>>> {
        unsigned long long _field1;
    } _field2;
};

struct mach_header_64 {
    unsigned int _field1;
    int _field2;
    int _field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned int _field6;
    unsigned int _field7;
    unsigned int _field8;
};

struct mach_timebase_info {
    unsigned int numer;
    unsigned int denom;
};

struct map<unsigned int, std::__1::basic_string<char>, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, std::__1::basic_string<char>>>> {
    struct __tree<std::__1::__value_type<unsigned int, std::__1::basic_string<char>>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, std::__1::basic_string<char>>, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, std::__1::basic_string<char>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::basic_string<char>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, std::__1::basic_string<char>>, std::__1::less<unsigned int>, true>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct plcrash_exception_server_context {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    CDUnknownFunctionPointerType _field5;
    void *_field6;
    struct _opaque_pthread_mutex_t _field7;
    struct _opaque_pthread_cond_t _field8;
    unsigned int _field9;
    _Bool _field10;
};

struct plcrash_mach_exception_port_set {
    unsigned int count;
    unsigned int masks[13];
    unsigned int ports[13];
    int behaviors[13];
    int flavors[13];
};

struct sockaddr {
    unsigned char _field1;
    unsigned char _field2;
    char _field3[14];
};

struct sockaddr_in {
    unsigned char _field1;
    unsigned char _field2;
    unsigned short _field3;
    struct in_addr _field4;
    char _field5[8];
};

struct timeval {
    long long tv_sec;
    int tv_usec;
};

struct tm_zip_s {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned int _field6;
};

struct unique_ptr<ModuleData [], std::__1::default_delete<ModuleData []>> {
    struct __compressed_pair<ModuleData *, std::__1::default_delete<ModuleData []>> {
        struct ModuleData *__first_;
    } __ptr_;
};

struct unique_ptr<__sFILE, int (*)(__sFILE *)> {
    struct __compressed_pair<__sFILE *, int (*)(__sFILE *)> {
        struct __sFILE *__first_;
        CDUnknownFunctionPointerType __second_;
    } __ptr_;
};

struct vector<ID3TagStruct, std::allocator<ID3TagStruct>> {
    struct _Vector_impl {
        struct ID3TagStruct *_M_start;
        struct ID3TagStruct *_M_finish;
        struct ID3TagStruct *_M_end_of_storage;
    } _M_impl;
};

struct vector<MMAttitude, std::__1::allocator<MMAttitude>> {
    struct MMAttitude *__begin_;
    struct MMAttitude *__end_;
    struct __compressed_pair<MMAttitude *, std::__1::allocator<MMAttitude>> {
        struct MMAttitude *__first_;
    } __end_cap_;
};

struct vector<MMIMU, std::__1::allocator<MMIMU>> {
    struct MMIMU *__begin_;
    struct MMIMU *__end_;
    struct __compressed_pair<MMIMU *, std::__1::allocator<MMIMU>> {
        struct MMIMU *__first_;
    } __end_cap_;
};

struct vector<char, std::allocator<char>> {
    struct _Vector_impl {
        char *_M_start;
        char *_M_finish;
        char *_M_end_of_storage;
    } _M_impl;
};

struct vector<int, std::allocator<int>> {
    struct _Vector_impl {
        int *_field1;
        int *_field2;
        int *_field3;
    } _field1;
};

struct vector<nimbiz::Property, std::__1::allocator<nimbiz::Property>> {
    struct Property *_field1;
    struct Property *_field2;
    struct __compressed_pair<nimbiz::Property *, std::__1::allocator<nimbiz::Property>> {
        struct Property *_field1;
    } _field3;
};

struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> {
    basic_string_a490aa4c *_field1;
    basic_string_a490aa4c *_field2;
    struct __compressed_pair<std::__1::basic_string<char>*, std::__1::allocator<std::__1::basic_string<char>>> {
        basic_string_a490aa4c *_field1;
    } _field3;
};

struct z_stream_s {
    char *next_in;
    unsigned int avail_in;
    unsigned long long total_in;
    char *next_out;
    unsigned int avail_out;
    unsigned long long total_out;
    char *msg;
    struct internal_state *state;
    CDUnknownFunctionPointerType zalloc;
    CDUnknownFunctionPointerType zfree;
    void *opaque;
    int data_type;
    unsigned long long adler;
    unsigned long long reserved;
};

#if 0
// Names with conflicting types:
typedef struct {
    unsigned long long _field1;
    id _field2;
    struct __CFString *_field3;
    struct OpaqueAudioQueue *_field4;
    struct AudioQueueBuffer *_field5[3];
    struct OpaqueAudioFileID *_field6;
    long long _field7;
    struct CAStreamBasicDescription _field8;
    unsigned char _field9;
    id _field10;
    struct AudioQueueLevelMeterState *_field11;
} AQRecorder_f0b74ee3;

#endif

#pragma mark Typedef'd Structures

typedef struct {
    _Bool _field1;
    unsigned char _field2;
    _Bool _field3;
    unsigned long long _field4;
} CDStruct_6a6a01a4;

typedef struct {
    unsigned long long _field1;
    unsigned long long _field2;
    unsigned int _field3;
} CDStruct_98a1d94c;

typedef struct {
    unsigned long long _field1;
    id *_field2;
    unsigned long long *_field3;
    unsigned long long _field4[5];
} CDStruct_70511ce9;

typedef struct {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
} CDStruct_d2b197d1;

typedef struct {
    double _field1;
    double _field2;
    double _field3;
} CDStruct_39925896;

typedef struct {
    double input;
    double output;
} CDStruct_1ff5d461;

typedef struct {
    float i;
    float j;
    float k;
    float s;
} CDStruct_596e5dd5;

typedef struct {
    float x;
    float y;
    float z;
} CDStruct_03942939;

typedef struct {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
    char *_field5;
    char *_field6;
    void *_field7;
    void *_field8;
    void *_field9;
    double _field10;
} CDStruct_a968096e;

typedef struct {
    int width;
    int height;
} CDStruct_79c71658;

typedef struct {
    long long _field1;
    void *_field2;
    CDUnknownFunctionPointerType _field3;
    CDUnknownFunctionPointerType _field4;
    CDUnknownFunctionPointerType _field5;
} CDStruct_e097db04;

typedef struct {
    long long value;
    int timescale;
    unsigned int flags;
    long long epoch;
} CDStruct_1b6d18a9;

typedef struct {
    long long _field1;
    int _field2;
} CDStruct_87dc826d;

typedef struct CDStruct_183601bc;

typedef struct {
    struct CGColor *_field1;
    struct CGColor *_field2;
    struct CGColor *_field3;
    struct CGColor *_field4;
} CDStruct_a5ac02f4;

typedef struct {
    CDStruct_596e5dd5 _field1;
    CDStruct_596e5dd5 _field2;
    CDStruct_596e5dd5 _field3;
    CDStruct_596e5dd5 _field4;
} CDStruct_7776181f;

typedef struct {
    CDStruct_1b6d18a9 start;
    CDStruct_1b6d18a9 duration;
} CDStruct_e83c9415;

typedef struct {
    struct CLLocationCoordinate2D _field1;
    CDStruct_1ff5d461 _field2;
} CDStruct_c3044329;

typedef struct {
    struct tm_zip_s _field1;
    unsigned long long _field2;
    unsigned long long _field3;
    unsigned long long _field4;
} CDStruct_192a48cb;

typedef struct {
    _Bool _field1;
    _Bool _field2;
    struct CGRect _field3;
    struct CGRect _field4;
    double _field5;
    long long _field6;
    unsigned long long _field7;
} CDStruct_902a08d0;

typedef struct {
    void *_field1;
    int _field2;
    CDStruct_7776181f _field3;
    int _field4;
    CDStruct_596e5dd5 _field5;
    CDStruct_596e5dd5 _field6;
    int _field7;
    CDStruct_7776181f _field8;
} CDStruct_1f8fd59b;

typedef struct {
    struct AudioStreamBasicDescription inputFormat;
    struct AudioStreamBasicDescription outputFormat;
    struct {
        void *srcBuffer;
        struct AudioStreamBasicDescription srcFormat;
        unsigned int srcSizePerPacket;
        unsigned int numPacketsPerRead;
        struct AudioStreamPacketDescription *pktDescs;
    } afs;
    struct AudioStreamPacketDescription *outputPktDescs;
    unsigned int outputBufferSize;
    void *outputBuffer;
    unsigned int numOutputPackets;
    long long outputPos;
    struct _opaque_pthread_mutex_t mutex;
} CDStruct_358ade57;

typedef struct {
    struct CGRect _field1;
    double _field2;
} CDStruct_1586d5e9;

typedef struct {
    int _field1;
    int _field2;
    unsigned int _field3;
    union {
        struct {
            unsigned int _field1;
            unsigned int _field2;
            unsigned int _field3;
            unsigned int _field4;
            unsigned int _field5;
            unsigned int _field6;
            unsigned int _field7;
            unsigned long long _field8;
            unsigned char _field9[16];
        } _field1;
        struct {
            int _field1;
        } _field2;
        struct {
            unsigned char _field1[4];
            char *_field2;
        } _field3;
        struct {
            unsigned int _field1;
            CDStruct_183601bc *_field2;
        } _field4;
        struct {
            struct {
                unsigned int _field1;
                char *_field2;
            } _field1;
            unsigned int _field2;
            CDStruct_183601bc *_field3;
        } _field5;
        struct {
            char _field1[129];
            unsigned long long _field2;
            int _field3;
            unsigned int _field4;
            CDStruct_183601bc *_field5;
        } _field6;
        struct {
            int _field1;
            char *_field2;
            char *_field3;
            unsigned int _field4;
            unsigned int _field5;
            unsigned int _field6;
            unsigned int _field7;
            unsigned int _field8;
            char *_field9;
        } _field7;
        struct {
            char *_field1;
        } _field8;
    } _field4;
} CDStruct_4903f7c2;

// Template types
typedef struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
    struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
        struct __rep {
            union {
                struct __long {
                    char *__data_;
                    unsigned long long __size_;
                    unsigned long long __cap_;
                } __l;
                struct __short {
                    char __data_[23];
                    struct {
                        unsigned char __size_;
                    } ;
                } __s;
                struct __raw {
                    unsigned long long __words[3];
                } __r;
            } ;
        } __first_;
    } __r_;
} basic_string_a490aa4c;

typedef struct list<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> {
    struct __list_node_base<std::__1::basic_string<char>, void *> _field1;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<std::__1::basic_string<char>, void *>>> {
        unsigned long long _field1;
    } _field2;
} list_f20de06b;

typedef struct list<unsigned long long, std::__1::allocator<unsigned long long>> {
    struct __list_node_base<unsigned long long, void *> _field1;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<unsigned long long, void *>>> {
        unsigned long long _field1;
    } _field2;
} list_8b50c42f;

typedef struct vector<nimbiz::Property, std::__1::allocator<nimbiz::Property>> {
    struct Property *_field1;
    struct Property *_field2;
    struct __compressed_pair<nimbiz::Property *, std::__1::allocator<nimbiz::Property>> {
        struct Property *_field1;
    } _field3;
} vector_ef84b050;

typedef struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> {
    basic_string_a490aa4c *_field1;
    basic_string_a490aa4c *_field2;
    struct __compressed_pair<std::__1::basic_string<char>*, std::__1::allocator<std::__1::basic_string<char>>> {
        basic_string_a490aa4c *_field1;
    } _field3;
} vector_9492931a;

