//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "KTVBaseNetHelper.h"

@interface KTVUserNetHelper : KTVBaseNetHelper
{
}

- (void)AsyncGetPlayerAuthInfoWithUid:(long long)arg1 success:(CDUnknownBlockType)arg2 error:(CDUnknownBlockType)arg3;
- (void)AsyncGetOtherPersonalCenterKtvWorkInfoWithUid:(long long)arg1 success:(CDUnknownBlockType)arg2 error:(CDUnknownBlockType)arg3;
- (void)AsyncGetMyPersonalCenterKtvWorkInfoWithUid:(long long)arg1 success:(CDUnknownBlockType)arg2 error:(CDUnknownBlockType)arg3;
- (void)reportImage:(id)arg1 contents:(id)arg2 reportType:(int)arg3 contact:(id)arg4 success:(CDUnknownBlockType)arg5 failure:(CDUnknownBlockType)arg6;
- (void)deleteImage:(id)arg1 success:(CDUnknownBlockType)arg2 failure:(CDUnknownBlockType)arg3;
- (void)uploadImageToAblumForImageUrl:(id)arg1 withShowType:(long long)arg2 success:(CDUnknownBlockType)arg3 failure:(CDUnknownBlockType)arg4;
- (void)getUserOpusAblumImagesForOpusId:(long long)arg1 playerId:(long long)arg2 success:(CDUnknownBlockType)arg3 failure:(CDUnknownBlockType)arg4;
- (void)updatePlayerDetailInfo:(id)arg1 success:(CDUnknownBlockType)arg2 error:(CDUnknownBlockType)arg3;
- (void)bllUpdatePlayerNickname:(id)arg1 sex:(int)arg2 success:(CDUnknownBlockType)arg3 error:(CDUnknownBlockType)arg4;
- (void)bllGetOpusListWithPlayerId:(long long)arg1 opusType:(int)arg2 pageSize:(int)arg3 page:(int)arg4 success:(CDUnknownBlockType)arg5 error:(CDUnknownBlockType)arg6;
- (void)getUserInterestInfoSuccess:(CDUnknownBlockType)arg1 error:(CDUnknownBlockType)arg2;
- (void)bllGetUserInfoWithUid:(long long)arg1 success:(CDUnknownBlockType)arg2 error:(CDUnknownBlockType)arg3;
- (void)AsyncPostJudgePrivilegeListWithPlayerId:(long long)arg1 judgeLevel:(long long)arg2 succeed:(CDUnknownBlockType)arg3 failed:(CDUnknownBlockType)arg4;
- (void)AsyncGetUserLocationInfoWithUid:(int)arg1 success:(CDUnknownBlockType)arg2 error:(CDUnknownBlockType)arg3;
- (void)updateSideUserInfoNumWithPlayerId:(long long)arg1 success:(CDUnknownBlockType)arg2 error:(CDUnknownBlockType)arg3;
- (void)updatePlayerAllInfoNumWithPlayerId:(long long)arg1 success:(CDUnknownBlockType)arg2 error:(CDUnknownBlockType)arg3;
- (void)bllUpdatePlayerHeadImageWithUrl:(id)arg1 success:(CDUnknownBlockType)arg2 error:(CDUnknownBlockType)arg3;
- (void)bllGetForwardOpusList870WithPlayerId:(long long)arg1 lastOpusId:(long long)arg2 pageSize:(long long)arg3 pageType:(long long)arg4 success:(CDUnknownBlockType)arg5 error:(CDUnknownBlockType)arg6;
- (void)bllGetOpusList830WithPlayerId:(int)arg1 pageSize:(int)arg2 page:(int)arg3 success:(CDUnknownBlockType)arg4 error:(CDUnknownBlockType)arg5;
- (void)bllDeleteOpusWithOpusId:(long long)arg1 success:(CDUnknownBlockType)arg2 error:(CDUnknownBlockType)arg3;
- (void)getUserDetailInfoWithUid:(int)arg1 success:(CDUnknownBlockType)arg2 error:(CDUnknownBlockType)arg3;
- (void)getOpusListWithPlayerId:(int)arg1 opusType:(int)arg2 pageSize:(int)arg3 page:(int)arg4 success:(CDUnknownBlockType)arg5 error:(CDUnknownBlockType)arg6;
- (void)getUserAblumImagesForUserId:(int)arg1 pageNumber:(long long)arg2 pageSize:(long long)arg3 success:(CDUnknownBlockType)arg4 failure:(CDUnknownBlockType)arg5;
- (void)AsyncGetUserCenterInfoWithUid:(int)arg1 success:(CDUnknownBlockType)arg2 error:(CDUnknownBlockType)arg3;
- (void)getUserInfoWithUid:(int)arg1 success:(CDUnknownBlockType)arg2 error:(CDUnknownBlockType)arg3;

@end

