//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <UIKit/UIView.h>

#import "BDUniversalAlertDelegate-Protocol.h"
#import "BVSnifferDelegate-Protocol.h"
#import "BVWebViewDelegate-Protocol.h"

@class ASIHTTPRequest, BDSniffLog, BVSniffer, BVSysPlayerExt, BVWebView, CSDrawBar, NSDate, NSMutableDictionary, NSString, NSTimer, UAProgressView, UIButton, UIImageView, UILabel, VShortUrlOperation;

@interface BrowserDetailView : UIView <BVSnifferDelegate, BVWebViewDelegate, BDUniversalAlertDelegate>
{
    UIButton *returnBtn;
    UIButton *backBtn;
    UIButton *forwardBtn;
    UIButton *refreshBtn;
    UIButton *stopLoadingBtn;
    UIButton *playBtn;
    UILabel *addressTxt;
    UILabel *loadingTip;
    NSMutableDictionary *videoInfo;
    UIView *mainView;
    UIView *webViewMask;
    UIImageView *mainImageView;
    NSString *URL;
    _Bool sniffered;
    ASIHTTPRequest *requestISAutoCloseWindow;
    _Bool isRequestSniffer;
    NSString *siteUrl;
    NSString *tvId;
    NSString *mediaType;
    NSString *videoId;
    NSString *episode;
    NSDate *startSnifferTime;
    NSDate *endSnifferTime;
    NSString *_origPageURL;
    CSDrawBar *_downloadView;
    NSString *_downloadStr;
    NSString *_pageTitle;
    NSString *_pageUrl;
    UIButton *_clickButton;
    UIButton *_ybButton;
    UIImageView *_imgGuideView;
    UIView *_guideView;
    VShortUrlOperation *_shortUrlOperation;
    BVSysPlayerExt *_sysPlayerExt;
    _Bool isAttachedSmallWindowMode;
    _Bool _isWebplayErrorlog;
    _Bool _idleTimerDisabled;
    int videoType;
    BVSniffer *sniffer;
    BVWebView *webView;
    NSString *videoTitle;
    BDSniffLog *_sniffLog;
    id _playOwner;
    NSString *_subsituteUrl;
    double _loadBeginTime;
    double _showLoadingShadowTimeWhenPageExit;
    UIView *_shadowView;
    UAProgressView *_progressView;
    UILabel *_percentLabel;
    NSTimer *_timer;
}

@property(retain, nonatomic) NSTimer *timer; // @synthesize timer=_timer;
@property(retain, nonatomic) UILabel *percentLabel; // @synthesize percentLabel=_percentLabel;
@property(retain, nonatomic) UAProgressView *progressView; // @synthesize progressView=_progressView;
@property(retain, nonatomic) UIView *shadowView; // @synthesize shadowView=_shadowView;
@property(nonatomic) _Bool idleTimerDisabled; // @synthesize idleTimerDisabled=_idleTimerDisabled;
@property(nonatomic) double showLoadingShadowTimeWhenPageExit; // @synthesize showLoadingShadowTimeWhenPageExit=_showLoadingShadowTimeWhenPageExit;
@property(nonatomic) double loadBeginTime; // @synthesize loadBeginTime=_loadBeginTime;
@property(nonatomic) _Bool isWebplayErrorlog; // @synthesize isWebplayErrorlog=_isWebplayErrorlog;
@property(retain, nonatomic) NSString *subsituteUrl; // @synthesize subsituteUrl=_subsituteUrl;
@property(nonatomic) __weak id playOwner; // @synthesize playOwner=_playOwner;
@property(retain, nonatomic) BDSniffLog *sniffLog; // @synthesize sniffLog=_sniffLog;
@property(retain, nonatomic) NSString *videoTitle; // @synthesize videoTitle;
@property(nonatomic) int videoType; // @synthesize videoType;
@property(retain, nonatomic) NSString *videoId; // @synthesize videoId;
@property(retain, nonatomic) NSString *URL; // @synthesize URL;
@property(retain, nonatomic) UIImageView *mainImageView; // @synthesize mainImageView;
@property(retain, nonatomic) UIView *mainView; // @synthesize mainView;
@property(retain, nonatomic) BVWebView *webView; // @synthesize webView;
@property(retain, nonatomic) BVSniffer *sniffer; // @synthesize sniffer;
- (void).cxx_destruct;
- (id)screenShot;
- (void)cancelSnifferPlayer:(id)arg1;
- (void)VideoPlayerOnClose;
- (void)playerWillTerminal:(id)arg1;
- (void)removeNotification;
- (void)registerNotification;
- (void)closeGuideView;
- (void)addtapGesGuideView:(id)arg1;
- (void)guideViewCreate;
- (void)showYbAndDownloadViewWithPlayUrl:(id)arg1 pageURL:(id)arg2 pageTitle:(id)arg3;
- (void)hideYbAndDownloadView;
- (void)UIWVExtMPInlineVideo2PlayNotification:(id)arg1;
- (void)initYbAndDownloadView;
- (void)clickButton:(id)arg1;
- (void)sniffer:(id)arg1 FailWithResult:(id)arg2;
- (void)performStartPlay:(id)arg1 onlySniffingHTML:(_Bool)arg2 ybData:(id)arg3 playbackCore:(id)arg4;
- (void)performStartPlay:(id)arg1 onlySniffingHTML:(_Bool)arg2 ybData:(id)arg3;
- (void)performStartPlay:(id)arg1 onlySniffingHTML:(_Bool)arg2;
- (void)performStartPlay:(id)arg1;
- (void)sniffer:(id)arg1 SucceedWithResult:(id)arg2;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (void)webView:(id)arg1 pageUrlChangedWithNewPageUrl:(id)arg2 prevPageUrl:(id)arg3;
- (void)webView:(id)arg1 tapInlineVideo:(id)arg2 atPage:(id)arg3 playbackCore:(id)arg4;
- (void)webView:(id)arg1 updateUrl4NowPlaying:(id)arg2 pageURL:(id)arg3 pageTitle:(id)arg4;
- (void)webView:(id)arg1 inlineVideo2defaultPlayer:(id)arg2 atPage:(id)arg3;
- (void)webView:(id)arg1 didFailLoadWithError:(id)arg2;
- (void)webViewDidFinishLoad:(id)arg1;
- (void)webViewLoaded:(id)arg1;
- (void)webViewStartLoad:(id)arg1;
- (void)_timeoutInvoked:(id)arg1;
- (void)cancelTimer;
- (void)createTimer;
- (id)localJSFileName;
- (void)removeAD;
- (void)clickPlayBtn;
- (void)clickStopLoadingBtn;
- (void)clickRefreshBtn;
- (void)clickForwardBtn;
- (void)clickBackBtn;
- (void)clickReturnBtnImpl:(_Bool)arg1 isInteractivePop:(_Bool)arg2;
- (void)clickReturnBtnImpl:(_Bool)arg1;
- (void)doInteractivePop;
- (void)clickReturnBtn:(id)arg1;
- (void)clickReturnBtn;
- (id)initWithVideoInfo:(id)arg1;
- (id)initWithVideoInfo:(id)arg1 isRequestSniffer:(_Bool)arg2;
- (void)retsetShowLoadingShadowTimeWhenPageExit;
- (double)resetTime4LoadDuration;
- (void)dismissLoadingShadow4Error:(id)arg1;
- (void)backupSubsituteUrlLoadWebPlayError;
- (void)originalPageURlLoadWebPlayError:(id)arg1;
- (void)webPlaySuccessDissmissShadowView;
- (void)tryShowLoadingShadow;
- (void)loadServerJS4IgnoreHTMLAD;
- (void)refrshState;
- (void)dealloc;
- (void)_doCleanUpAndRemoveWebView:(_Bool)arg1;
- (void)_doCleanUp;
- (void)remove;
- (void)hide:(_Bool)arg1;
- (void)hide;
- (void)slideToClose;
- (void)show;
- (void)reloadWebWithSubsituteUrl;
- (void)requestISAutoCloseFinish;
- (id)decodeFromPercentEscapeString:(id)arg1;
- (void)closePlayerInWebView;
- (_Bool)isPrimitWebAutoPlaySite:(id)arg1;
- (void)playWithUrl:(id)arg1 requestSniffer:(_Bool)arg2;
- (void)updateTitle:(id)arg1;
- (void)updateWinowVisibility:(_Bool)arg1;
- (void)onUIWVExtMPInlineVideoExitFullscreenNotification:(id)arg1;
- (void)onUIWVExtMPInlineVideoEnterFullscreenNotification:(id)arg1;
- (void)tryRequestShortURL;
- (id)init;
- (id)convertVideoTypeForLog:(int)arg1;
- (void)logBrowserDetailLaunchPlayerError:(id)arg1 isQuit:(_Bool)arg2;
- (void)logBrowserDetailLaunchPlayerError:(id)arg1;
- (void)logBrowserDetailLaunchPlayer:(id)arg1 isSucces:(_Bool)arg2 isSysPlayer:(_Bool)arg3;
- (void)initPlayerLog;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

