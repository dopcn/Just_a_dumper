//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

@class NSArray, NSDictionary, NSString, NSTimer;
@protocol MLMediaAPI, MLPlayerStatisticDataProvider;

@interface MLPlayerStatistic : NSObject
{
    _Bool _watchEventsEnabled;
    _Bool _initialBuffer;
    _Bool _buffering;
    _Bool _stopped;
    _Bool _rendered;
    _Bool _detected;
    int _provider;
    id <MLMediaAPI> _mediaAPI;
    NSArray *_pendingPackages;
    NSArray *_secondaryStreamPendingPackages;
    long long _reportThreshold;
    double _collectionTimeInterval;
    NSTimer *_statisticPackageCollectionTimer;
    NSString *_localDNS;
    NSString *_roomID;
    unsigned long long _startTimestamp;
    unsigned long long _sessionTime;
    id <MLPlayerStatisticDataProvider> _dataProvider;
    NSDictionary *_secondaryStreamDataProviders;
    long long _playerIdentify;
    unsigned long long _bufferStartTimestamp;
    unsigned long long _lastReceiveSize;
    unsigned long long _lastVideoReceiveSize;
    unsigned long long _lastAudioReceiveSize;
    unsigned long long _lastAudioDecodeSize;
    unsigned long long _lastVideoDecodeCount;
    unsigned long long _lastVideoRenderCount;
    unsigned long long _lastAudioRenderSize;
    NSString *_dURL;
    NSString *_dIP;
}

+ (_Bool)isUsingWifi;
+ (unsigned long long)currentTimestamp;
+ (void)registerMediaAPIClass:(Class)arg1;
@property(retain) NSString *dIP; // @synthesize dIP=_dIP;
@property(retain) NSString *dURL; // @synthesize dURL=_dURL;
@property unsigned long long lastAudioRenderSize; // @synthesize lastAudioRenderSize=_lastAudioRenderSize;
@property unsigned long long lastVideoRenderCount; // @synthesize lastVideoRenderCount=_lastVideoRenderCount;
@property unsigned long long lastVideoDecodeCount; // @synthesize lastVideoDecodeCount=_lastVideoDecodeCount;
@property unsigned long long lastAudioDecodeSize; // @synthesize lastAudioDecodeSize=_lastAudioDecodeSize;
@property unsigned long long lastAudioReceiveSize; // @synthesize lastAudioReceiveSize=_lastAudioReceiveSize;
@property unsigned long long lastVideoReceiveSize; // @synthesize lastVideoReceiveSize=_lastVideoReceiveSize;
@property unsigned long long lastReceiveSize; // @synthesize lastReceiveSize=_lastReceiveSize;
@property unsigned long long bufferStartTimestamp; // @synthesize bufferStartTimestamp=_bufferStartTimestamp;
@property(nonatomic) long long playerIdentify; // @synthesize playerIdentify=_playerIdentify;
@property _Bool detected; // @synthesize detected=_detected;
@property _Bool rendered; // @synthesize rendered=_rendered;
@property _Bool stopped; // @synthesize stopped=_stopped;
@property _Bool buffering; // @synthesize buffering=_buffering;
@property _Bool initialBuffer; // @synthesize initialBuffer=_initialBuffer;
@property(copy) NSDictionary *secondaryStreamDataProviders; // @synthesize secondaryStreamDataProviders=_secondaryStreamDataProviders;
@property __weak id <MLPlayerStatisticDataProvider> dataProvider; // @synthesize dataProvider=_dataProvider;
@property unsigned long long sessionTime; // @synthesize sessionTime=_sessionTime;
@property unsigned long long startTimestamp; // @synthesize startTimestamp=_startTimestamp;
@property int provider; // @synthesize provider=_provider;
@property(copy) NSString *roomID; // @synthesize roomID=_roomID;
@property(copy) NSString *localDNS; // @synthesize localDNS=_localDNS;
@property __weak NSTimer *statisticPackageCollectionTimer; // @synthesize statisticPackageCollectionTimer=_statisticPackageCollectionTimer;
@property double collectionTimeInterval; // @synthesize collectionTimeInterval=_collectionTimeInterval;
@property long long reportThreshold; // @synthesize reportThreshold=_reportThreshold;
@property(copy) NSArray *secondaryStreamPendingPackages; // @synthesize secondaryStreamPendingPackages=_secondaryStreamPendingPackages;
@property(copy) NSArray *pendingPackages; // @synthesize pendingPackages=_pendingPackages;
@property(nonatomic) _Bool watchEventsEnabled; // @synthesize watchEventsEnabled=_watchEventsEnabled;
@property(retain) id <MLMediaAPI> mediaAPI; // @synthesize mediaAPI=_mediaAPI;
- (void).cxx_destruct;
- (void)sendStreamToConferenceRefetchFailedStatisticWithDuration:(double)arg1;
- (void)sendStreamToConferenceRefetchDurationStatisticWithDuration:(double)arg1;
- (void)sendSecondaryStreamPlayStoppedStatisticWithReason:(long long)arg1 streamID:(id)arg2;
- (void)sendSecondaryStreamPlayStartedStatisticWithURL:(id)arg1 serverAddress:(id)arg2 streamMetaReceivedTime:(unsigned long long)arg3 tcpConnectedTime:(unsigned long long)arg4 firstVideoReceivedTime:(unsigned long long)arg5 firstVideoDecodedTime:(unsigned long long)arg6 firstVideoRenderedTime:(unsigned long long)arg7 firstAudioReceivedTime:(unsigned long long)arg8 firstAudioDecodedTime:(unsigned long long)arg9 firstAudioRenderedTime:(unsigned long long)arg10 streamCount:(unsigned long long)arg11 streamID:(id)arg12 dataProvider:(id)arg13;
- (void)sendDropFrameStopStatistic;
- (void)sendDropFrameStartStatistic;
- (void)sendFastStopStatistic;
- (void)sendFastStartStatistic;
- (void)sendBufferStopStatistic;
- (void)sendBufferStartStatistic;
- (void)sendPlayStoppedStatisticWithReason:(long long)arg1 playURL:(id)arg2 playCDNIP:(id)arg3;
- (void)sendPlayStartedStatisticWithURL:(id)arg1 serverAddress:(id)arg2 streamMetaReceivedTime:(unsigned long long)arg3 tcpConnectedTime:(unsigned long long)arg4 firstVideoReceivedTime:(unsigned long long)arg5 firstVideoDecodedTime:(unsigned long long)arg6 firstVideoRenderedTime:(unsigned long long)arg7 firstAudioReceivedTime:(unsigned long long)arg8 firstAudioDecodedTime:(unsigned long long)arg9 firstAudioRenderedTime:(unsigned long long)arg10 streamCount:(unsigned long long)arg11 dataProvider:(id)arg12;
- (void)sendSeekWithHttpDetector:(struct HttpDetecter *)arg1 httpReconnectTimes:(int)arg2;
- (void)sendHttpDetectorWithHttpDetector:(struct HttpDetecter *)arg1 httpReconnectTimes:(int)arg2;
- (void)sendPlayInitStatisticWithURL:(id)arg1;
- (void)sendPlayPreparedStatisticWithReceivedDataSize:(unsigned long long)arg1;
- (void)sendPlayerLogWithType:(id)arg1 body:(id)arg2 reportType:(long long)arg3;
- (void)sendPullWatchStatistic;
- (void)sendSecondaryPullWatchStatistic;
- (id)getPullWatchStatistic;
- (void)updateLocalDNS:(id)arg1;
- (void)collect:(id)arg1;
- (void)setStatisticPackageCollectionInterval:(double)arg1 reportThreshold:(long long)arg2;
- (_Bool)parameterValid;
- (id)initWithOptions:(id)arg1;

@end

