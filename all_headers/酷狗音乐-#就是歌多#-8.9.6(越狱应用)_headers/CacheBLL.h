//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "KGDownloadProtocol-Protocol.h"

@class KGBaseFile, KGDownloadJob, NSLock, NSString, SongInfo;

@interface CacheBLL : NSObject <KGDownloadProtocol>
{
    KGDownloadJob *_preJob;
    _Bool _pauseForNet;
    _Bool _cacheCleaned;
    NSLock *_lock;
    _Bool _listenNeedChangeQuality;
    _Bool _isFromNet;
    _Bool _hasResetBaseFile;
    int _curCacheQuality;
    int _forceCacheQuality;
    SongInfo *_currentSongInfo;
    KGBaseFile *_musicBaseFile;
    NSString *_localFilePath;
    SongInfo *_preCacheSongInfo;
}

+ (int)getUserTryListenQuality;
+ (void)setBasicFilePathMaskInfo:(id)arg1 withUserInfo:(id)arg2;
+ (void)setBasicFilePathMaskInfo:(id)arg1;
+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (id)sharedSingleton;
@property(retain, nonatomic) SongInfo *preCacheSongInfo; // @synthesize preCacheSongInfo=_preCacheSongInfo;
@property(nonatomic) int forceCacheQuality; // @synthesize forceCacheQuality=_forceCacheQuality;
@property(nonatomic) _Bool hasResetBaseFile; // @synthesize hasResetBaseFile=_hasResetBaseFile;
@property(nonatomic) _Bool isFromNet; // @synthesize isFromNet=_isFromNet;
@property(nonatomic) _Bool listenNeedChangeQuality; // @synthesize listenNeedChangeQuality=_listenNeedChangeQuality;
@property(nonatomic) int curCacheQuality; // @synthesize curCacheQuality=_curCacheQuality;
@property(copy, nonatomic) NSString *localFilePath; // @synthesize localFilePath=_localFilePath;
@property(retain, nonatomic) KGBaseFile *musicBaseFile; // @synthesize musicBaseFile=_musicBaseFile;
@property(retain, nonatomic) SongInfo *currentSongInfo; // @synthesize currentSongInfo=_currentSongInfo;
- (void).cxx_destruct;
- (void)clearKgCache;
- (void)deleteAllCache;
- (void)saveWhenOpenBufferHandler:(id)arg1 needEncryptDown:(_Bool)arg2;
- (void)saveWhenOpenBufferToSaveWithSong:(id)arg1;
- (id)createQualityDic;
- (void)deleteFileHolder:(id)arg1 QualityType:(int)arg2 Error:(id)arg3;
- (void)saveToCacheDB:(id)arg1 withQuality:(int)arg2;
- (void)updateCacheDB:(id)arg1 withQuality:(int)arg2;
- (_Bool)isPreBufferJob:(long long)arg1;
- (void)preBufferTaskWithNeedAuthorization:(_Bool)arg1 songinfo:(id)arg2 qualityType:(int)arg3;
- (int)pickQualityWithSong:(id)arg1 andTryListenQuality:(int)arg2;
- (int)qualityForCacheWithSonginfo:(id)arg1 localQuality:(int)arg2 cacheBLLNeedChangeQualityType:(long long)arg3;
- (int)qualityForPreBufferWithSonginfo:(id)arg1 localQuality:(int)arg2;
- (_Bool)isOpenUserListenQuality;
- (void)preBuffer;
- (void)resetBaseFile;
- (void)updateDownloadState:(long long)arg1 info:(id)arg2;
- (void)updateProgress:(long long)arg1 downInfo:(id)arg2;
- (_Bool)existLocalAvailableRecord:(id)arg1;
- (_Bool)existFile:(id)arg1 withQuality:(int)arg2;
- (_Bool)existLocalCache:(id)arg1 withQuality:(int)arg2;
- (_Bool)existLocalFile:(id)arg1;
- (_Bool)existLocalCache:(id)arg1;
- (_Bool)existCache:(id)arg1;
- (_Bool)isNeedCacheBySongInfo:(id)arg1;
- (void)continueToCache;
- (void)pauseCacheAndClearCurrentSongInfo;
- (void)pauseCache;
- (void)changeTo3G:(id)arg1;
- (void)configAllData;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)init;
- (int)qualityForCacheListenWithSonginfo:(id)arg1 localQuality:(int)arg2;
- (int)getKuqunTrylistenQualityTypeWithSong:(id)arg1;
- (int)getCacheQualityTypeWithSong:(id)arg1;
- (int)getQualityTypeWithSongWithoutEffect:(id)arg1;
- (struct StreamObjectAutoPtr)makeStreamWithUGCSong:(id)arg1;
- (double)bandWidthByQualityType:(int)arg1;
- (_Bool)isFromNetWithFileKey:(id)arg1;
- (struct StreamObjectAutoPtr)makeStreamWithKuQunSong:(id)arg1 andFileHolder:(long long)arg2;
- (struct StreamObjectAutoPtr)makeStreamWithKuQunSong:(id)arg1;
- (struct StreamObjectAutoPtr)makeStreamWithSong:(id)arg1;
- (void)stopCachAndListenJob;
- (_Bool)existLocalRecord:(id)arg1 WithUser:(id)arg2 NeedCheckFileExist:(_Bool)arg3 NeedCheckCache:(_Bool)arg4;
- (_Bool)isFileEncryptWith:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

