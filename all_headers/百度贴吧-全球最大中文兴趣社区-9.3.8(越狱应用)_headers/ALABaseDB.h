//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "FMDatabase.h"

@class NSArray, NSMutableDictionary, NSMutableSet, NSObject, NSTimer;
@protocol OS_dispatch_queue;

@interface ALABaseDB : FMDatabase
{
    int _writeTimes;
    NSObject<OS_dispatch_queue> *_runOnQueue;
    double _lastSyncTime;
    NSArray *_symbolArray;
    NSArray *_operatorArray;
    NSTimer *_timer;
    NSMutableDictionary *_queryCache;
    NSMutableSet *_reusableDictionary;
    NSMutableSet *_reusableArray;
}

@property(retain, nonatomic) NSMutableSet *reusableArray; // @synthesize reusableArray=_reusableArray;
@property(retain, nonatomic) NSMutableSet *reusableDictionary; // @synthesize reusableDictionary=_reusableDictionary;
@property(retain, nonatomic) NSMutableDictionary *queryCache; // @synthesize queryCache=_queryCache;
@property(retain, nonatomic) NSTimer *timer; // @synthesize timer=_timer;
@property(retain, nonatomic) NSArray *operatorArray; // @synthesize operatorArray=_operatorArray;
@property(retain, nonatomic) NSArray *symbolArray; // @synthesize symbolArray=_symbolArray;
@property(nonatomic) double lastSyncTime; // @synthesize lastSyncTime=_lastSyncTime;
@property(nonatomic) int writeTimes; // @synthesize writeTimes=_writeTimes;
@property(nonatomic) NSObject<OS_dispatch_queue> *runOnQueue; // @synthesize runOnQueue=_runOnQueue;
- (_Bool)findEqualSymbol:(id)arg1 value:(id)arg2 fromValue:(_Bool)arg3 startNum:(long long)arg4 queryArray:(id *)arg5 queryDict:(id *)arg6;
- (id)queryStringForArray:(id)arg1 key:(id)arg2 queryDict:(id *)arg3 startNum:(long long)arg4;
- (id)queryStringForDict:(id *)arg1 startNum:(long long)arg2;
- (id)queryStringForDict:(id *)arg1;
- (id)updateString:(id *)arg1;
- (id)insertString:(id *)arg1;
- (id)valueString:(id)arg1;
- (void)syncOnQueue;
- (_Bool)sync;
- (_Bool)_executeUpdate:(id)arg1;
- (_Bool)_executeUpdate:(id)arg1 withParameterDictionary:(id)arg2;
- (id)_executeQuery:(id)arg1 withParameterDictionary:(id)arg2;
- (void)autoCommitCheck:(_Bool)arg1;
- (void)recycleReusableArray:(id)arg1;
- (id)getReusableArray;
- (void)recycleReusableDictionary:(id)arg1;
- (id)getReusableDictionary;
- (id)cacheForTable:(id)arg1;
- (_Bool)delCacheForTable:(id)arg1;
- (id)cacheForTable:(id)arg1 key:(id)arg2;
- (_Bool)setCacheForTable:(id)arg1 key:(id)arg2 value:(id)arg3;
- (_Bool)delAllRowInTable:(id)arg1;
- (_Bool)delRowInTable:(id)arg1 queryDict:(id)arg2;
- (_Bool)updateRowInTable:(id)arg1 colValue:(id)arg2 queryDict:(id)arg3;
- (_Bool)insertOrUpdateRowInTable:(id)arg1 colValue:(id)arg2 queryDict:(id)arg3;
- (_Bool)insertNewRowInTable:(id)arg1 colValue:(id)arg2;
- (unsigned long long)getSumInTable:(id)arg1 queryColumn:(id)arg2 queryDict:(id)arg3;
- (unsigned long long)getCountInTable:(id)arg1 queryDict:(id)arg2;
- (_Bool)checkExistsInTable:(id)arg1 queryDict:(id)arg2;
- (_Bool)getOneRowInTable:(id)arg1 queryColumn:(id)arg2 queryDict:(id)arg3 retResult:(id *)arg4;
- (_Bool)getMultiRowInTable:(id)arg1 queryColumn:(id)arg2 queryDict:(id)arg3 orderColumn:(id)arg4 groupColumn:(id)arg5 limit:(int)arg6 retResult:(id *)arg7;
- (_Bool)getMultiRowInTable:(id)arg1 queryColumn:(id)arg2 queryDict:(id)arg3 orderColumn:(id)arg4 order:(int)arg5 limit:(int)arg6 retResult:(id *)arg7;
- (_Bool)getMultiRowInTable:(id)arg1 queryColumn:(id)arg2 queryDict:(id)arg3 limit:(int)arg4 retResult:(id *)arg5;
- (void)dealloc;
- (id)initWithPath:(id)arg1;

@end

