//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

#import "KKMediaPlayerEventProtocol-Protocol.h"
#import "QLMediaPlayerBusinessDataSource-Protocol.h"
#import "QLMediaPlayerBusinessDelegate-Protocol.h"
#import "QLRequestModelDelegate-Protocol.h"
#import "QLRightShareViewDatasource-Protocol.h"
#import "QLVideoSplitMicroRectifyDelegate-Protocol.h"

@class KKMediaRootViewController, NSArray, NSMutableArray, NSString, QLVideoFantuanListModel, QLVideoPreviewControlView, QLVideoSplitItem, QLVideoSplitModel;
@protocol QLMediaRootPlayerViewCtlDataSource;

@interface QLVideoSplitingMgr : NSObject <QLRequestModelDelegate, QLRightShareViewDatasource, KKMediaPlayerEventProtocol, QLVideoSplitMicroRectifyDelegate, QLMediaPlayerBusinessDataSource, QLMediaPlayerBusinessDelegate>
{
    _Bool _kkMediaRootPlayerIsInMiniVideoCuttingMode;
    _Bool _enteredIntoBackground;
    _Bool _needShowInitialBottomSharePanel;
    _Bool _hasCancelUpload;
    _Bool _canPlayVideo;
    _Bool _isInMiniVideoPreViewMode;
    _Bool _needReovkeStandout;
    double _videoStartTime;
    double _videoEndTime;
    double _enterPreviewTime;
    double _videoUploadStartTime;
    double _videoUploadEndTime;
    long long _videoUploadStatus;
    unsigned long long _videoCutMode;
    unsigned long long _frequencyTimeGap;
    double _floatingWindowStartTime;
    double _floatingWindowEndTime;
    NSMutableArray *_configuredSubMgrAry;
    QLVideoSplitModel *_videoSplitModel;
    long long _curVideoSplitStatus;
    long long _curShareSourceType;
    KKMediaRootViewController *_weakFullSrcCtl;
    QLVideoPreviewControlView *_drawingView;
    QLVideoSplitItem *_videoSplitResultSyncItem;
    QLVideoFantuanListModel *_videoFantuanListModel;
    NSArray *_relatedFantuanActorInfoAryPart;
    NSArray *_relatedFantuanActorInfoAryAll;
    NSMutableArray *_origViewAryOfAlpha0;
    id <QLMediaRootPlayerViewCtlDataSource> _dataSource;
}

@property(nonatomic) __weak id <QLMediaRootPlayerViewCtlDataSource> dataSource; // @synthesize dataSource=_dataSource;
@property(nonatomic) _Bool needReovkeStandout; // @synthesize needReovkeStandout=_needReovkeStandout;
@property(retain, nonatomic) NSMutableArray *origViewAryOfAlpha0; // @synthesize origViewAryOfAlpha0=_origViewAryOfAlpha0;
@property(retain, nonatomic) NSArray *relatedFantuanActorInfoAryAll; // @synthesize relatedFantuanActorInfoAryAll=_relatedFantuanActorInfoAryAll;
@property(retain, nonatomic) NSArray *relatedFantuanActorInfoAryPart; // @synthesize relatedFantuanActorInfoAryPart=_relatedFantuanActorInfoAryPart;
@property(nonatomic) _Bool isInMiniVideoPreViewMode; // @synthesize isInMiniVideoPreViewMode=_isInMiniVideoPreViewMode;
@property(nonatomic) _Bool canPlayVideo; // @synthesize canPlayVideo=_canPlayVideo;
@property(retain, nonatomic) QLVideoFantuanListModel *videoFantuanListModel; // @synthesize videoFantuanListModel=_videoFantuanListModel;
@property(nonatomic) _Bool hasCancelUpload; // @synthesize hasCancelUpload=_hasCancelUpload;
@property(nonatomic) _Bool needShowInitialBottomSharePanel; // @synthesize needShowInitialBottomSharePanel=_needShowInitialBottomSharePanel;
@property(retain, nonatomic) QLVideoSplitItem *videoSplitResultSyncItem; // @synthesize videoSplitResultSyncItem=_videoSplitResultSyncItem;
@property(retain, nonatomic) QLVideoPreviewControlView *drawingView; // @synthesize drawingView=_drawingView;
@property(nonatomic) __weak KKMediaRootViewController *weakFullSrcCtl; // @synthesize weakFullSrcCtl=_weakFullSrcCtl;
@property(nonatomic) long long curShareSourceType; // @synthesize curShareSourceType=_curShareSourceType;
@property(nonatomic) long long curVideoSplitStatus; // @synthesize curVideoSplitStatus=_curVideoSplitStatus;
@property(retain, nonatomic) QLVideoSplitModel *videoSplitModel; // @synthesize videoSplitModel=_videoSplitModel;
@property(retain, nonatomic) NSMutableArray *configuredSubMgrAry; // @synthesize configuredSubMgrAry=_configuredSubMgrAry;
@property(nonatomic) _Bool enteredIntoBackground; // @synthesize enteredIntoBackground=_enteredIntoBackground;
@property(nonatomic) _Bool kkMediaRootPlayerIsInMiniVideoCuttingMode; // @synthesize kkMediaRootPlayerIsInMiniVideoCuttingMode=_kkMediaRootPlayerIsInMiniVideoCuttingMode;
@property(nonatomic) double floatingWindowEndTime; // @synthesize floatingWindowEndTime=_floatingWindowEndTime;
@property(nonatomic) double floatingWindowStartTime; // @synthesize floatingWindowStartTime=_floatingWindowStartTime;
@property(nonatomic) unsigned long long frequencyTimeGap; // @synthesize frequencyTimeGap=_frequencyTimeGap;
@property(nonatomic) unsigned long long videoCutMode; // @synthesize videoCutMode=_videoCutMode;
@property(nonatomic) long long videoUploadStatus; // @synthesize videoUploadStatus=_videoUploadStatus;
@property(nonatomic) double videoUploadEndTime; // @synthesize videoUploadEndTime=_videoUploadEndTime;
@property(nonatomic) double videoUploadStartTime; // @synthesize videoUploadStartTime=_videoUploadStartTime;
@property(nonatomic) double enterPreviewTime; // @synthesize enterPreviewTime=_enterPreviewTime;
@property(nonatomic) double videoEndTime; // @synthesize videoEndTime=_videoEndTime;
@property(nonatomic) double videoStartTime; // @synthesize videoStartTime=_videoStartTime;
- (void).cxx_destruct;
- (void)cycleVideoPlay;
- (void)cycleVideoPlayWithBeginTime:(double)arg1 endTime:(double)arg2;
- (void)continuePlayVideo;
- (void)onAppDidBecomeActive;
- (void)onAppWillResignActive;
- (void)mpbMediaClosed;
- (void)mpbMediaRotatetionChange;
- (_Bool)showedEndRecmView;
- (_Bool)mpbShouldContinuePlay;
- (void)mpbStartToPlayMedia;
- (void)mpbJobsAfterPlayBackFinished;
- (void)mpbPlayBackFinished;
- (void)mpbMgrSetDataSource:(id)arg1;
- (void)didMediaPlayerStateChanged:(int)arg1 error:(id)arg2 playerCtl:(id)arg3;
- (void)didMediaPlayerProgressUpdated:(double)arg1 duration:(double)arg2;
- (void)showErrorForPlayer;
- (void)onMediaPlayerWillDisappear;
- (void)onMediaPlayerDidAppear;
- (void)dissAlert;
- (void)showAlert;
- (id)shareEntryItemListWithActionSender:(id)arg1;
- (id)shareEntryImageWithURL:(id)arg1 actionSender:(id)arg2;
- (id)updateVideoSplitSyncItemWhenRequestStatusChanged:(id)arg1;
- (void)requestModel:(id)arg1 didFailedLoadWithError:(id)arg2;
- (void)requestModelDidFinishLoad:(id)arg1;
- (void)tryToFetchVideoFantuanList;
- (void)tryToUpLoadMiniVideo;
- (_Bool)safeBringSubviewBack:(id)arg1 parent:(id)arg2 doMove:(_Bool)arg3;
- (_Bool)safeBringSubviewBack:(id)arg1 parent:(id)arg2;
- (_Bool)safeBringSubviewToFront:(id)arg1 parent:(id)arg2;
- (_Bool)quitStandOutSubView:(id)arg1 parentView:(id)arg2 exceptFor:(id)arg3;
- (id)standOutSubView:(id)arg1 parentView:(id)arg2 otherViewAffected:(_Bool *)arg3;
- (void)adjustKKMediaRootPlayerLayoutIfNeeded;
- (_Bool)kkMediaRootBringBackMiniVideoPreviewPlayer:(_Bool)arg1;
- (_Bool)kkMediaRootBringFrontMiniVideoPreviewPlayer;
- (void)updatePlayerViewSmall;
- (void)magnifyAnimatePlayerView:(_Bool)arg1;
- (void)magnifyAnimatePlayerView;
- (struct CGRect)minifyAnimatePlayerView:(_Bool)arg1 mediaPlay:(_Bool)arg2;
- (struct CGRect)minifyAnimatePlayerView;
- (void)cancelFetchFantuanList;
- (void)cancelUploadVideo;
- (void)sendVideoSplittingInfo:(id)arg1;
@property(readonly, nonatomic) _Bool shouldEnableJustSeeHerJump;
@property(readonly, nonatomic) _Bool kkMediaRootPlayerIsInMiniVideoPreViewMode;
- (void)dealWith3GMediaPlay:(_Bool)arg1;
- (void)cancelMiniVideoCutPreviewWithAnimate:(_Bool)arg1;
- (void)cancelMiniVideoCutPreview;
- (void)clearMgrResource;
- (id)init;
- (void)dealloc;
- (void)tryToLoadMiniVideoPosterImage:(id)arg1;
- (void)tryToLoadFantuanActorImageList:(id)arg1;
- (id)tryToFetchImageWithURL:(id)arg1;
- (id)tryToFecthMiniSplitGifImageData;
- (id)tryToFetchMiniSplitGifImage;
- (id)tryToFetchMiniSplitGifImageURL;
- (id)configuredBobAnimationShareEntries;
- (unsigned long long)shareEntryMaskForShareSourceType:(long long)arg1;
- (long long)defaultShareSourceType;
- (long long)shouldSupportShareSourceType;
- (_Bool)sendCommandToPreviewView:(id)arg1 commandType:(long long)arg2;
- (_Bool)receiveCommandFromSubMgr:(id)arg1 commandType:(long long)arg2;
- (void)synchronizeUserOperationToSubMgr:(long long)arg1 objectItem:(id)arg2;
- (void)synchronizeVideoSplitResultToSubMgr:(long long)arg1 objectItem:(id)arg2;
- (void)configureVideoSplitSubMgr:(id)arg1;
- (void)synchronizeShareSwitchOperationToAllSubMgr:(long long)arg1;
- (void)doPreloadIfNeededWhenShareTypeSwitchTo:(long long)arg1;
- (long long)isReadyForShare;
- (id)shareDataSource;
- (void)setShareSourceType:(long long)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

