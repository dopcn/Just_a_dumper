//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <UIKit/UIView.h>

@class CADisplayLink, CAEAGLLayer, EAGLContext, NSObject, NSString, NSThread, YXGLBlur, YXGLCrop, YXGLDownMem, YXGLLogo, YXGLMirror, YXPixelFormatGLConverter, YXSampleBufferQueue;
@protocol OS_dispatch_queue, YXGLViewDelegate;

@interface YXGLView : UIView
{
    _Bool _theThreadExit;
    _Bool _isInitView;
    _Bool _renderFirstFrame;
    _Bool _isLiveView;
    _Bool _isInitOperationGL;
    _Bool _isNeedDownMemoryForEncode;
    unsigned int _glProgram;
    unsigned int _glProgram2;
    unsigned int _glColorRenderBuffer;
    unsigned int _glColorFrameBuffer;
    unsigned int _glAttrBuffer;
    unsigned int _glAttrBuffer2;
    unsigned int _glPosition;
    unsigned int _glTextCoor;
    int _camWidth;
    int _camHeight;
    int _videoWidth;
    int _videoHeight;
    int _overlayX;
    int _overlayY;
    unsigned int _glTextureOriginalIn;
    int _fps;
    int _nviewWidth;
    int _nviewHeight;
    int _lviewWidth;
    int _lviewHeight;
    int _mBlurCount;
    int _fillMode;
    int _viewportX;
    int _viewportY;
    int _viewportW;
    int _viewportH;
    EAGLContext *_glContext;
    CAEAGLLayer *_glEagLayer;
    id <YXGLViewDelegate> _mYXGLViewDelegate;
    CDUnknownBlockType _theBlock;
    NSString *_watermarkUrl;
    NSThread *_theThread;
    YXGLCrop *_gLCrop;
    YXGLBlur *_gLBlur;
    YXGLDownMem *_glDownMem;
    YXGLLogo *_glLogo;
    YXGLMirror *_glMirror;
    struct __CVBuffer *_glOriginalTexture;
    struct __CVOpenGLESTextureCache *_glTextureCache;
    CADisplayLink *_displayLinkOnInitOpenGL;
    CADisplayLink *_displayLinkOnInitOperationGL;
    CADisplayLink *_displayLinkOnUinitOpenGL;
    CADisplayLink *_displayLinkRenderView;
    char *_mDownbuffer;
    YXPixelFormatGLConverter *_glFormatGLConverter;
    YXSampleBufferQueue *_sampleBufferQueue;
    NSObject<OS_dispatch_queue> *_streamingQueue;
}

+ (Class)layerClass;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *streamingQueue; // @synthesize streamingQueue=_streamingQueue;
@property(retain, nonatomic) YXSampleBufferQueue *sampleBufferQueue; // @synthesize sampleBufferQueue=_sampleBufferQueue;
@property(retain, nonatomic) YXPixelFormatGLConverter *glFormatGLConverter; // @synthesize glFormatGLConverter=_glFormatGLConverter;
@property(nonatomic) char *mDownbuffer; // @synthesize mDownbuffer=_mDownbuffer;
@property(nonatomic) int viewportH; // @synthesize viewportH=_viewportH;
@property(nonatomic) int viewportW; // @synthesize viewportW=_viewportW;
@property(nonatomic) int viewportY; // @synthesize viewportY=_viewportY;
@property(nonatomic) int viewportX; // @synthesize viewportX=_viewportX;
@property(nonatomic) int fillMode; // @synthesize fillMode=_fillMode;
@property(nonatomic) int mBlurCount; // @synthesize mBlurCount=_mBlurCount;
@property(nonatomic) int lviewHeight; // @synthesize lviewHeight=_lviewHeight;
@property(nonatomic) int lviewWidth; // @synthesize lviewWidth=_lviewWidth;
@property(nonatomic) int nviewHeight; // @synthesize nviewHeight=_nviewHeight;
@property(nonatomic) int nviewWidth; // @synthesize nviewWidth=_nviewWidth;
@property(retain, nonatomic) CADisplayLink *displayLinkRenderView; // @synthesize displayLinkRenderView=_displayLinkRenderView;
@property(retain, nonatomic) CADisplayLink *displayLinkOnUinitOpenGL; // @synthesize displayLinkOnUinitOpenGL=_displayLinkOnUinitOpenGL;
@property(retain, nonatomic) CADisplayLink *displayLinkOnInitOperationGL; // @synthesize displayLinkOnInitOperationGL=_displayLinkOnInitOperationGL;
@property(retain, nonatomic) CADisplayLink *displayLinkOnInitOpenGL; // @synthesize displayLinkOnInitOpenGL=_displayLinkOnInitOpenGL;
@property(nonatomic) int fps; // @synthesize fps=_fps;
@property(nonatomic) _Bool isNeedDownMemoryForEncode; // @synthesize isNeedDownMemoryForEncode=_isNeedDownMemoryForEncode;
@property(nonatomic) unsigned int glTextureOriginalIn; // @synthesize glTextureOriginalIn=_glTextureOriginalIn;
@property(nonatomic) struct __CVOpenGLESTextureCache *glTextureCache; // @synthesize glTextureCache=_glTextureCache;
@property(nonatomic) struct __CVBuffer *glOriginalTexture; // @synthesize glOriginalTexture=_glOriginalTexture;
@property(nonatomic) _Bool isInitOperationGL; // @synthesize isInitOperationGL=_isInitOperationGL;
@property(nonatomic) _Bool isLiveView; // @synthesize isLiveView=_isLiveView;
@property(nonatomic) _Bool renderFirstFrame; // @synthesize renderFirstFrame=_renderFirstFrame;
@property(nonatomic) _Bool isInitView; // @synthesize isInitView=_isInitView;
@property(retain, nonatomic) YXGLMirror *glMirror; // @synthesize glMirror=_glMirror;
@property(retain, nonatomic) YXGLLogo *glLogo; // @synthesize glLogo=_glLogo;
@property(retain, nonatomic) YXGLDownMem *glDownMem; // @synthesize glDownMem=_glDownMem;
@property(retain, nonatomic) YXGLBlur *gLBlur; // @synthesize gLBlur=_gLBlur;
@property(retain, nonatomic) YXGLCrop *gLCrop; // @synthesize gLCrop=_gLCrop;
@property(nonatomic) _Bool theThreadExit; // @synthesize theThreadExit=_theThreadExit;
@property(retain, nonatomic) NSThread *theThread; // @synthesize theThread=_theThread;
@property(nonatomic) int overlayY; // @synthesize overlayY=_overlayY;
@property(nonatomic) int overlayX; // @synthesize overlayX=_overlayX;
@property(retain, nonatomic) NSString *watermarkUrl; // @synthesize watermarkUrl=_watermarkUrl;
@property(nonatomic) int videoHeight; // @synthesize videoHeight=_videoHeight;
@property(nonatomic) int videoWidth; // @synthesize videoWidth=_videoWidth;
@property(nonatomic) int camHeight; // @synthesize camHeight=_camHeight;
@property(nonatomic) int camWidth; // @synthesize camWidth=_camWidth;
@property(nonatomic) unsigned int glTextCoor; // @synthesize glTextCoor=_glTextCoor;
@property(nonatomic) unsigned int glPosition; // @synthesize glPosition=_glPosition;
@property(nonatomic) unsigned int glAttrBuffer2; // @synthesize glAttrBuffer2=_glAttrBuffer2;
@property(nonatomic) unsigned int glAttrBuffer; // @synthesize glAttrBuffer=_glAttrBuffer;
@property(nonatomic) unsigned int glColorFrameBuffer; // @synthesize glColorFrameBuffer=_glColorFrameBuffer;
@property(nonatomic) unsigned int glColorRenderBuffer; // @synthesize glColorRenderBuffer=_glColorRenderBuffer;
@property(nonatomic) __weak CDUnknownBlockType theBlock; // @synthesize theBlock=_theBlock;
@property(nonatomic) __weak id <YXGLViewDelegate> mYXGLViewDelegate; // @synthesize mYXGLViewDelegate=_mYXGLViewDelegate;
@property(nonatomic) unsigned int glProgram2; // @synthesize glProgram2=_glProgram2;
@property(nonatomic) unsigned int glProgram; // @synthesize glProgram=_glProgram;
@property(retain, nonatomic) CAEAGLLayer *glEagLayer; // @synthesize glEagLayer=_glEagLayer;
@property(retain, nonatomic) EAGLContext *glContext; // @synthesize glContext=_glContext;
- (void).cxx_destruct;
- (void)uinit;
- (void)compileShader:(unsigned int *)arg1 type:(unsigned int)arg2 file:(id)arg3;
- (unsigned int)loadShaders:(id)arg1 frag:(id)arg2;
- (void)destoryRenderAndFrameBuffer;
- (void)setupFrameBuffer;
- (void)setupRenderBuffer;
- (void)createOpenGLContext;
- (void)setupLayer;
- (unsigned int)renderWithTexture:(unsigned int)arg1;
- (void)didBecameActive;
- (void)willResignActive;
- (void)saveImage:(id)arg1 decription:(id)arg2 time:(double)arg3;
- (id)getUIImageFromGLRGBABytes:(char *)arg1 withImageSize:(struct CGSize)arg2 iBytesPerRow:(int)arg3;
- (id)YUVtoUIImage:(int)arg1 h:(int)arg2 buffer:(char *)arg3;
- (void)renderinit;
- (void)updateVertice;
- (void)putVideoData:(struct opaqueCMSampleBuffer *)arg1 cameraId:(int)arg2 mirror:(int)arg3 pts:(long long)arg4;
- (void)uninitRenderThread;
- (void)initGLRenderThread;
- (float)getRotateType:(int)arg1;
- (void)renderThread;
- (unsigned int)pixelBufferToTexture:(struct __CVBuffer *)arg1;
- (void)setBlurEffect:(int)arg1;
- (void)onRenderView:(id)arg1;
- (void)onUinitOpenGL:(id)arg1;
- (void)onInitOpenGL_2:(id)arg1;
- (void)onInitOpenGL_1:(id)arg1;
- (void)setParamsCamWidth:(int)arg1 camHeight:(int)arg2 videoWidth:(int)arg3 videoHeight:(int)arg4 watermarkUrl:(id)arg5 overlayX:(int)arg6 overlayY:(int)arg7 fps:(int)arg8 fillmode:(int)arg9;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)removeObserverUserFrameChange;
- (void)addObserverUserFrameChange;
- (id)initWithFrame:(struct CGRect)arg1 theBlock:(CDUnknownBlockType)arg2 mDelegate:(id)arg3;

@end

