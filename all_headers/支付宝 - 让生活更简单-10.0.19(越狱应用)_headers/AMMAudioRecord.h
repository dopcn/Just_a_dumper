//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

#import "WAudioInputQueueDelegate-Protocol.h"

@class AMMAudioMessage, NSMutableData, NSString, NSTimer, VoiceCache2, WAudioInputQueue;
@protocol AMMAudioRecordDelegate, OS_dispatch_queue;

@interface AMMAudioRecord : NSObject <WAudioInputQueueDelegate>
{
    _Bool _isRecording;
    id <AMMAudioRecordDelegate> _delegate;
    NSString *_recordTaskKey;
    double _maxDuration;
    double _minDuration;
    NSString *_recordFilePath;
    NSTimer *_micPowerTimer;
    AMMAudioMessage *_message;
    NSObject<OS_dispatch_queue> *_recordQueue;
    NSMutableData *_silkData;
    double _recordedDurationTime;
    VoiceCache2 *_voiceCache;
    WAudioInputQueue *_recorder;
    NSMutableData *_data;
    unsigned long long _encodeFailedTimes;
    double _encodeTotalTimeInterval;
    struct AudioStreamBasicDescription _format;
}

+ (void)requestMicrophonePermission:(CDUnknownBlockType)arg1;
@property(nonatomic) double encodeTotalTimeInterval; // @synthesize encodeTotalTimeInterval=_encodeTotalTimeInterval;
@property(nonatomic) unsigned long long encodeFailedTimes; // @synthesize encodeFailedTimes=_encodeFailedTimes;
@property(retain, nonatomic) NSMutableData *data; // @synthesize data=_data;
@property(retain, nonatomic) WAudioInputQueue *recorder; // @synthesize recorder=_recorder;
@property(nonatomic) struct AudioStreamBasicDescription format; // @synthesize format=_format;
@property(nonatomic) _Bool isRecording; // @synthesize isRecording=_isRecording;
@property(retain, nonatomic) VoiceCache2 *voiceCache; // @synthesize voiceCache=_voiceCache;
@property(nonatomic) double recordedDurationTime; // @synthesize recordedDurationTime=_recordedDurationTime;
@property(retain, nonatomic) NSMutableData *silkData; // @synthesize silkData=_silkData;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *recordQueue; // @synthesize recordQueue=_recordQueue;
@property(retain, nonatomic) AMMAudioMessage *message; // @synthesize message=_message;
@property(retain, nonatomic) NSTimer *micPowerTimer; // @synthesize micPowerTimer=_micPowerTimer;
@property(copy, nonatomic) NSString *recordFilePath; // @synthesize recordFilePath=_recordFilePath;
@property(nonatomic) double minDuration; // @synthesize minDuration=_minDuration;
@property(nonatomic) double maxDuration; // @synthesize maxDuration=_maxDuration;
@property(retain, nonatomic) NSString *recordTaskKey; // @synthesize recordTaskKey=_recordTaskKey;
@property(nonatomic) __weak id <AMMAudioRecordDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)delegateForAudioQueneConvertFinish;
- (void)delegateForAudioQueneConvertData:(id)arg1 averageCostTime:(double)arg2 errorCode:(id)arg3 time:(id)arg4;
- (void)delegateForMicPower:(double)arg1;
- (void)delegateForCancel;
- (void)delegateForTimeNotEnough;
- (void)delegateForTimeOut:(id)arg1;
- (void)delegateForSuccess:(id)arg1;
- (void)delegateForTimer:(double)arg1;
- (void)delegateForRecording;
- (void)delegateForBegin;
- (void)inputQueue:(id)arg1 errorOccur:(id)arg2;
- (void)inputQueue:(id)arg1 inputData:(id)arg2 numberOfPackets:(unsigned int)arg3;
- (void)convertToSilkWithPCMData:(id)arg1 time:(id)arg2;
- (void)interrupted:(id)arg1;
- (void)cancelRecord;
- (void)voicePowerTimerCallback;
- (_Bool)isPlaying;
- (void)finishRecordCallback;
- (void)stopRecord;
- (void)startRecord:(_Bool)arg1 thirdAudioPlaying:(_Bool)arg2;
- (void)dealloc;
- (id)initWithMaxSec:(double)arg1 minSec:(double)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

