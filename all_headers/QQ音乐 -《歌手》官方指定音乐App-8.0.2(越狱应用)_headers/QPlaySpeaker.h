//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "QPlayDevice.h"

@class NSDate, NSDictionary, NSMutableDictionary, NSMutableSet, NSObject, NSString, NSTimer, QPlayQueue, QPlayTrack;
@protocol OS_dispatch_queue, QPlaySpeakerDelegate;

@interface QPlaySpeaker : QPlayDevice
{
    double _lastVolumeSetTime;
    double _lastVolumeEffectSetTime;
    NSMutableSet *subscribedServices;
    _Bool _isAttached;
    _Bool trackReachedEnd;
    _Bool isSuccessOfSetAVTransportURI;
    _Bool authed;
    _Bool occupied;
    _Bool lostControl;
    _Bool _hasCheckFlac;
    _Bool _hasTryAttach;
    _Bool _hasSubscribe;
    _Bool _isGetPositioning;
    _Bool _isSeekTracking;
    _Bool _ignoreEvent;
    float rate;
    int expectedQueueUpdateID;
    NSString *currentAVTransportURI;
    NSDate *positionSnapshotTimeStamp;
    NSDictionary *playbackEventing;
    NSMutableDictionary *last5AVTransportURI;
    unsigned long long QPlayVersion;
    QPlayQueue *playQueue;
    NSDate *pauseTime;
    NSTimer *subscribeTimer;
    NSObject<OS_dispatch_queue> *qplayThread;
    unsigned long long supportLyricType;
    id <QPlaySpeakerDelegate> _delegate;
    long long _actionTimeOutCount;
    NSString *_authSeed;
    double _playEndTime;
    NSTimer *_timerCheckPlaying;
    QPlayTrack *_lastSpeakerSong;
    CDStruct_1b6d18a9 currentTime;
    CDStruct_1b6d18a9 positionSnapshot;
    CDStruct_1b6d18a9 duration;
}

+ (id)createPlaybackEventing:(unsigned long long)arg1 song:(id)arg2;
+ (unsigned long long)DMRType:(id)arg1 identifier:(id)arg2;
@property(retain, nonatomic) QPlayTrack *lastSpeakerSong; // @synthesize lastSpeakerSong=_lastSpeakerSong;
@property(nonatomic) _Bool ignoreEvent; // @synthesize ignoreEvent=_ignoreEvent;
@property(nonatomic) _Bool isSeekTracking; // @synthesize isSeekTracking=_isSeekTracking;
@property(nonatomic) _Bool isGetPositioning; // @synthesize isGetPositioning=_isGetPositioning;
@property(nonatomic) _Bool hasSubscribe; // @synthesize hasSubscribe=_hasSubscribe;
@property(retain, nonatomic) NSTimer *timerCheckPlaying; // @synthesize timerCheckPlaying=_timerCheckPlaying;
@property(nonatomic) double playEndTime; // @synthesize playEndTime=_playEndTime;
@property(retain, nonatomic) NSString *authSeed; // @synthesize authSeed=_authSeed;
@property(nonatomic) long long actionTimeOutCount; // @synthesize actionTimeOutCount=_actionTimeOutCount;
@property(nonatomic) _Bool hasTryAttach; // @synthesize hasTryAttach=_hasTryAttach;
@property(nonatomic) _Bool hasCheckFlac; // @synthesize hasCheckFlac=_hasCheckFlac;
@property(nonatomic) __weak id <QPlaySpeakerDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) unsigned long long supportLyricType; // @synthesize supportLyricType;
@property(nonatomic) _Bool lostControl; // @synthesize lostControl;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *qplayThread; // @synthesize qplayThread;
@property(nonatomic) _Bool occupied; // @synthesize occupied;
@property(retain, nonatomic) NSTimer *subscribeTimer; // @synthesize subscribeTimer;
@property(nonatomic) _Bool authed; // @synthesize authed;
@property(retain, nonatomic) NSDate *pauseTime; // @synthesize pauseTime;
@property(nonatomic) int expectedQueueUpdateID; // @synthesize expectedQueueUpdateID;
@property(retain, nonatomic) QPlayQueue *playQueue; // @synthesize playQueue;
- (void)setQPlayVersion:(unsigned long long)arg1;
- (unsigned long long)QPlayVersion;
@property(readonly, nonatomic) NSMutableSet *subscribedServices; // @synthesize subscribedServices;
@property(nonatomic) _Bool isSuccessOfSetAVTransportURI; // @synthesize isSuccessOfSetAVTransportURI;
@property(retain, nonatomic) NSMutableDictionary *last5AVTransportURI; // @synthesize last5AVTransportURI;
@property(nonatomic) _Bool trackReachedEnd; // @synthesize trackReachedEnd;
@property(retain, nonatomic) NSDictionary *playbackEventing; // @synthesize playbackEventing;
@property(nonatomic) CDStruct_1b6d18a9 duration; // @synthesize duration;
@property(retain, nonatomic) NSDate *positionSnapshotTimeStamp; // @synthesize positionSnapshotTimeStamp;
@property(nonatomic) CDStruct_1b6d18a9 positionSnapshot; // @synthesize positionSnapshot;
@property(retain, nonatomic) NSString *currentAVTransportURI; // @synthesize currentAVTransportURI;
@property(nonatomic) float rate; // @synthesize rate;
- (void).cxx_destruct;
- (id)uriOfOwnQueue;
- (void)sendOutVolumeChangedNotification:(float)arg1;
- (long long)sortDevice:(id)arg1;
- (void)fillLast5AVTransportURI:(id)arg1;
- (id)description;
- (void)sendTrackEndEvent;
- (id)getVolumeKey;
- (id)getContextFromMetaData:(id)arg1;
- (id)getSongIDFromMetaData:(id)arg1;
- (_Bool)isSpeakerURLSameWithLast5URL:(id)arg1;
- (void)checkValid;
- (void)checkDeviceOccupied;
- (void)checkFlac;
- (void)checkPlaying;
- (void)_updatePlayingListByQueue:(id)arg1;
- (void)setCurrentItem:(id)arg1;
- (void)addTracks:(id)arg1 toQueueAtIndex:(long long)arg2;
- (void)removeTracksInRangeFromQueue:(struct _NSRange)arg1;
- (void)replaceAllTracks:(id)arg1 currentTrackIndex:(long long)arg2 newCurrentTrackIndex:(long long)arg3 newNextTrackIndex:(long long)arg4;
- (void)replaceQueue:(id)arg1;
- (void)seekToTrack:(long long)arg1;
- (void)playQueueAtIndex:(long long)arg1;
- (void)setCurrentURIStringForQueue:(id)arg1;
- (void)addTracksThanPlay;
- (void)playTracks;
- (void)playWithQueue:(id)arg1;
- (void)didReceiveSAVTChange:(id)arg1;
- (void)didReceiveAVTChangeForPlaying;
- (_Bool)trySyncSpeakerSong:(id)arg1 AVTransportURI:(id)arg2 state:(unsigned long long)arg3;
- (void)DealWithQAVTChange:(unsigned long long)arg1 song:(id)arg2 AVTransportURI:(id)arg3;
- (_Bool)AVTransportURI_Has_A_differentQueueID:(struct _NSRange)arg1 AVTransportURI:(id)arg2;
- (void)didReceiveQAVTChange:(id)arg1;
- (void)didReceiveAVTChange:(id)arg1;
- (void)didReceiveCMChange:(id)arg1;
- (void)didReceiveQChange:(id)arg1;
- (void)didReceiveRCChange:(id)arg1;
- (void)unsubscribe;
- (id)getAllNeededServices;
- (int)subscribeTimeOut;
- (void)subscribe;
- (void)save;
- (void)attachWithSongs:(id)arg1 queueID:(int)arg2 queueOwnerID:(id)arg3 queueContext:(id)arg4;
- (void)tryToAttach:(id)arg1;
- (_Bool)isAttached;
- (_Bool)canAttach;
- (void)getVolume;
- (void)setVolume:(float)arg1 filter:(_Bool)arg2;
- (void)seekToTime:(CDStruct_1b6d18a9)arg1;
- (void)stop;
- (void)pause;
- (void)play;
- (void)startVolumechange;
@property(readonly, nonatomic) CDStruct_1b6d18a9 currentTime; // @synthesize currentTime;
- (void)snapshotPosition;
- (_Bool)supportQPlay;
- (void)cleanPlayQueue;
- (void)cleanup:(_Bool)arg1;
- (void)restoreDefaultStat;
- (void)releaseControl;
- (void)setVersion:(id)arg1;
- (void)DeviceOccupied;
- (id)getAuthSeed;
- (void)auth;
- (unsigned long long)DMRType;
- (void)startConnect;
- (void)dealloc;
- (id)makeArgForAddMultipleURIs:(id)arg1 toQueueAtIndex:(long long)arg2;
- (id)makeUrisAndMetadata:(id)arg1;
- (_Bool)performAction:(id)arg1 serviceID:(id)arg2 arguments:(id)arg3 result:(id *)arg4 actionErrorCode:(int *)arg5;
- (_Bool)performAction:(id)arg1 serviceID:(id)arg2 arguments:(id)arg3 result:(id *)arg4;
- (_Bool)performCMAction:(id)arg1 arguments:(id)arg2 result:(id *)arg3;
- (_Bool)performRCAction:(id)arg1 arguments:(id)arg2 result:(id *)arg3;
- (_Bool)performGRCAction:(id)arg1 arguments:(id)arg2 result:(id *)arg3;
- (_Bool)performQPlayAction:(id)arg1 arguments:(id)arg2 result:(id *)arg3;
- (_Bool)performAVTAction:(id)arg1 arguments:(id)arg2 result:(id *)arg3;
- (void)attachQueue:(id)arg1 callback:(CDUnknownBlockType)arg2;
- (void)CreateQueue:(id)arg1 context:(id)arg2 callback:(CDUnknownBlockType)arg3;
- (void)RemoveTrackRange:(int)arg1 range:(struct _NSRange)arg2 callback:(CDUnknownBlockType)arg3;
- (void)RemoveAllTracks:(int)arg1 callback:(CDUnknownBlockType)arg2;
- (void)replaceAllTracks:(id)arg1 currentTrackIndex:(long long)arg2 newCurrentTrackIndex:(long long)arg3 newNextTrackIndex:(long long)arg4 callback:(CDUnknownBlockType)arg5;
- (void)AddMultipleURIs:(id)arg1 toQueueAtIndex:(long long)arg2 callback:(CDUnknownBlockType)arg3;
- (_Bool)performQAction:(id)arg1 arguments:(id)arg2 result:(id *)arg3;
- (void)GetTracksInfo:(long long)arg1 count:(long long)arg2 callback:(CDUnknownBlockType)arg3;
- (void)RemoveTracks:(int)arg1 range:(struct _NSRange)arg2 callback:(CDUnknownBlockType)arg3;
- (void)InsertTracks:(int)arg1 index:(long long)arg2 metadata:(id)arg3 callback:(CDUnknownBlockType)arg4;
- (void)SetTracksInfo:(int)arg1 startIndex:(int)arg2 nextIndex:(int)arg3 metadata:(id)arg4 callback:(CDUnknownBlockType)arg5;
- (void)setLyric:(id)arg1 type:(unsigned long long)arg2 text:(id)arg3;
- (void)getLyricSupportType:(CDUnknownBlockType)arg1;
- (void)qplayAuth:(id)arg1 callback:(CDUnknownBlockType)arg2;
- (void)SetAVTransportURI:(id)arg1 metadata:(id)arg2 callback:(CDUnknownBlockType)arg3;
- (void)GetProtocolInfo:(CDUnknownBlockType)arg1;
- (void)GetTransportInfo:(CDUnknownBlockType)arg1;
- (void)getPositionInfo:(CDUnknownBlockType)arg1;
- (void)getMediaInfo:(CDUnknownBlockType)arg1;
- (void)setPlayMode:(id)arg1 callback:(CDUnknownBlockType)arg2;
- (_Bool)sendVolumeAction:(id)arg1;
- (void)setVolume:(float)arg1 callback:(CDUnknownBlockType)arg2;
- (void)setMute:(_Bool)arg1;
- (void)getMute:(CDUnknownBlockType)arg1;
- (void)getSpeakerCurrentVolume:(CDUnknownBlockType)arg1;
- (void)previous;
- (void)next;
- (void)seekTrack:(long long)arg1 callback:(CDUnknownBlockType)arg2;
- (void)seekToTime:(CDStruct_1b6d18a9)arg1 callback:(CDUnknownBlockType)arg2;
- (void)stop:(CDUnknownBlockType)arg1;
- (void)pause:(CDUnknownBlockType)arg1;
- (void)play:(CDUnknownBlockType)arg1;

@end

