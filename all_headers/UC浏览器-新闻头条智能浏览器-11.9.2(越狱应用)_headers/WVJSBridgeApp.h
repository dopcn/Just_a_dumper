//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

@class NSMutableArray, NSMutableDictionary, NSString;
@protocol WebkitBasicWebView;

@interface WVJSBridgeApp : NSObject
{
    _Bool m_isInternalDomain;
    _Bool m_isInternalDomainValid;
    NSString *m_domain;
    NSMutableDictionary *m_jsHandlerRegister;
    id <WebkitBasicWebView> m_webview;
    NSMutableArray *m_startupMessageQueue;
    NSMutableDictionary *m_responseCallbacks;
}

+ (id)handlerForName:(id)arg1;
+ (_Bool)isHandlerRegistered:(id)arg1;
+ (_Bool)registerForJSHandler:(id)arg1;
+ (_Bool)registerForJSHandler:(id)arg1 selector:(SEL)arg2 target:(id)arg3 internal:(_Bool)arg4;
+ (_Bool)registerForJSHandler:(id)arg1 selector:(SEL)arg2 target:(id)arg3;
+ (void)deregisterForJSHandler:(id)arg1;
+ (void)deregisterForJSHandler:(id)arg1 selector:(SEL)arg2 target:(id)arg3;
+ (id)globalJsHandlerRegister;
+ (id)bridgeForWebView:(id)arg1;
+ (void)enableLogging;
@property(retain, nonatomic) NSMutableDictionary *responseCallbacks; // @synthesize responseCallbacks=m_responseCallbacks;
@property(retain, nonatomic) NSMutableArray *startupMessageQueue; // @synthesize startupMessageQueue=m_startupMessageQueue;
@property(nonatomic) id <WebkitBasicWebView> webview; // @synthesize webview=m_webview;
@property(retain, nonatomic) NSMutableDictionary *jsHandlerRegister; // @synthesize jsHandlerRegister=m_jsHandlerRegister;
@property(nonatomic) _Bool isInternalDomainValid; // @synthesize isInternalDomainValid=m_isInternalDomainValid;
@property(retain, nonatomic) NSString *domain; // @synthesize domain=m_domain;
@property(nonatomic) _Bool isInternalDomain; // @synthesize isInternalDomain=m_isInternalDomain;
- (_Bool)handleJSBridgeMsg:(id)arg1;
- (id)commandStringOfAddJSInterfacesForHandler:(id)arg1;
- (void)initializeForJSBridge;
- (void)initializeForJSBridge:(CDUnknownBlockType)arg1;
- (id)getBridgeInitString;
- (id)commandStringForDispatchBridgeReadyEvent;
- (id)commandStringOfAddAllJSInterfaces;
- (_Bool)isBridgeInitialized;
- (void)_log:(id)arg1 json:(id)arg2;
- (id)_deserializeMessageJSON:(id)arg1;
- (id)_serializeMessage:(id)arg1;
- (id)packResponseData:(void *)arg1 type:(BOOL)arg2;
- (BOOL)getReturnTypeChar:(const char *)arg1;
- (_Bool)isFixedLengthReturnType:(BOOL)arg1;
- (void)callHandler:(id)arg1 data:(id)arg2 callBack:(CDUnknownBlockType)arg3;
- (void)handleMessages:(id)arg1;
- (void)_flushMessageQueue;
- (void)_dispatchMessage:(id)arg1;
- (void)_queueMessage:(id)arg1;
- (void)updateInternalDomainFlag;
- (_Bool)isMethodSupported:(id)arg1 onDomain:(id)arg2;
- (_Bool)isMethodSupported:(id)arg1;
- (_Bool)isJsHandlerShouldSupported:(id)arg1;
- (void)detachAssociatedWebView;
- (void)dealloc;
- (id)init;
- (void)deregisterForJSHandler:(id)arg1 selector:(SEL)arg2 target:(id)arg3;
- (_Bool)registerForJSHandler:(id)arg1 selector:(SEL)arg2 target:(id)arg3;
- (_Bool)registerForJSHandler:(id)arg1 selector:(SEL)arg2 target:(id)arg3 internal:(_Bool)arg4;
- (_Bool)isHandlerRegistered:(id)arg1;
- (id)handlerForName:(id)arg1;

@end

