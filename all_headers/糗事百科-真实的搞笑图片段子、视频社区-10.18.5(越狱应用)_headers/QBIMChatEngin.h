//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

#import "QBMQTTClientDelegate-Protocol.h"

@class NSString, QBIMModelGroup, QBIMMsgBroker, QBIMUnreadCountHelper, QBMQTTClient, QBMessageDB, Reachability;

@interface QBIMChatEngin : NSObject <QBMQTTClientDelegate>
{
    _Bool _isInChatTab;
    NSString *_curUidStr;
    QBMessageDB *_messageDB;
    unsigned long long _engineState;
    QBIMModelGroup *_modelGroup;
    QBIMMsgBroker *_msgBroker;
    QBIMUnreadCountHelper *_unreadCountHelper;
    QBMQTTClient *_mqttClient;
    NSString *_pathForCurUser;
    long long _unreadCount;
    Reachability *_rechability;
    long long _lastUnReadCount;
    long long _intervalEnterBackground;
    double _lastServerTime;
    double _lastCPUTime;
    long long _groupInfoFailCnt;
    double _lastGroupMsgT;
    double _connectSuccessT;
}

+ (id)currentUserPath;
+ (id)s;
@property(nonatomic) double connectSuccessT; // @synthesize connectSuccessT=_connectSuccessT;
@property(nonatomic) double lastGroupMsgT; // @synthesize lastGroupMsgT=_lastGroupMsgT;
@property(nonatomic) long long groupInfoFailCnt; // @synthesize groupInfoFailCnt=_groupInfoFailCnt;
@property(nonatomic) double lastCPUTime; // @synthesize lastCPUTime=_lastCPUTime;
@property(nonatomic) double lastServerTime; // @synthesize lastServerTime=_lastServerTime;
@property long long intervalEnterBackground; // @synthesize intervalEnterBackground=_intervalEnterBackground;
@property long long lastUnReadCount; // @synthesize lastUnReadCount=_lastUnReadCount;
@property(retain) Reachability *rechability; // @synthesize rechability=_rechability;
@property(nonatomic) long long unreadCount; // @synthesize unreadCount=_unreadCount;
@property(retain, nonatomic) NSString *pathForCurUser; // @synthesize pathForCurUser=_pathForCurUser;
@property(retain, nonatomic) QBMQTTClient *mqttClient; // @synthesize mqttClient=_mqttClient;
@property(retain, nonatomic) QBIMUnreadCountHelper *unreadCountHelper; // @synthesize unreadCountHelper=_unreadCountHelper;
@property(retain, nonatomic) QBIMMsgBroker *msgBroker; // @synthesize msgBroker=_msgBroker;
@property(retain, nonatomic) QBIMModelGroup *modelGroup; // @synthesize modelGroup=_modelGroup;
@property(nonatomic) _Bool isInChatTab; // @synthesize isInChatTab=_isInChatTab;
@property(nonatomic) unsigned long long engineState; // @synthesize engineState=_engineState;
@property(retain, nonatomic) QBMessageDB *messageDB; // @synthesize messageDB=_messageDB;
@property(retain, nonatomic) NSString *curUidStr; // @synthesize curUidStr=_curUidStr;
- (void).cxx_destruct;
- (void)onUserLoginStateChanged:(_Bool)arg1;
- (void)handlePreProcessingMsgDict:(id)arg1;
- (void)onReciveData:(id)arg1;
- (void)onMsgSendSuccess:(id)arg1;
- (void)onClientState:(int)arg1;
- (void)onClientConnectSuccess:(long long)arg1;
- (void)onClientConnectCloseWithUnsendMsgs:(id)arg1;
- (void)onNextworkStateChange;
- (void)EnterBackground;
- (void)EnterForeground;
- (void)onTabbarChanged:(id)arg1;
- (void)uploadUnreadCount;
- (void)updateUnreadCountWhenDisconnected;
- (void)clientRepeatLogin;
- (void)onHandleMyContainerMsg:(id)arg1;
- (void)onHandleSyncCommandMsg:(id)arg1;
- (void)onDeleteSessionWithUserType:(unsigned long long)arg1 uid:(long long)arg2;
- (void)postInputtingStateToUid:(long long)arg1;
- (void)postHaveReadedMsgIds:(id)arg1 toUid:(long long)arg2;
- (void)postHeartbeatData:(id)arg1;
- (void)postMessageData:(id)arg1 needCache:(_Bool)arg2;
- (id)postMsgDataWithMessage:(id)arg1;
- (void)postPackageWithMessage:(id)arg1;
- (void)postRMDataHasUploadSuccessWithMsg:(id)arg1;
- (void)postmessageForSayingHi:(id)arg1;
- (void)postMessage:(id)arg1 toSession:(id)arg2;
- (void)sendedStateMsgHandle:(id)arg1 toUid:(long long)arg2;
- (void)timingMsgHandle:(id)arg1;
@property(readonly, nonatomic) double curTime;
@property(readonly, nonatomic) _Bool isNeedUpdateUI;
- (void)updateMyGroupInfos:(id)arg1;
- (void)getMyGroupInfos;
- (long long)unReadCount;
@property(readonly) _Bool isClosed;
- (void)mqttCreateConnectionAfterDelay:(float)arg1;
- (void)tryToReconnectMqtt;
- (void)closeMqtt;
- (void)reset;
- (void)close;
- (id)init;
- (void)dealloc;

@end

