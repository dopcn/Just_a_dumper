//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "MLFireHouseDogDelegate-Protocol.h"
#import "MLXmppConnectorProtocol-Protocol.h"
#import "XMXmppConnectionDelegate-Protocol.h"
#import "XMXmppHostConnectProtocol-Protocol.h"

@class MLFireHouseDog, MLSmartHost, MLXmppHostInfo, NSString, XMMulticastDelegate, XMXmppConnectionManager;
@protocol MLXmppConnectionDelegate;

@interface MLXmppConnector : NSObject <XMXmppHostConnectProtocol, XMXmppConnectionDelegate, MLFireHouseDogDelegate, MLXmppConnectorProtocol>
{
    XMXmppConnectionManager *mConnectionManager;
    XMMulticastDelegate<MLXmppConnectionDelegate> *mConnectionMultiDelegate;
    long long mReconnectCount;
    long long mInvalidTokenCount;
    MLFireHouseDog *mFireHouseDog;
    _Bool isInBackground;
    int networkStatus;
    MLSmartHost *mSmartHost;
    MLXmppHostInfo *mHostInfo;
    int state;
}

- (void).cxx_destruct;
- (void)deactivateFireHouseDog;
- (void)activateFireHouseDog;
- (void)doFireHouseDogJob;
- (void)doReConnectServer;
- (_Bool)needReconnectServer;
- (void)clearReconnectMechanism;
- (void)resetReconnectMechanism;
- (void)gotoState:(int)arg1;
- (_Bool)validateLoginState;
- (void)onNotRetryIndicate:(id)arg1;
- (void)onMultiLogin;
- (void)errorHandling:(id)arg1;
- (void)xmppStream:(id)arg1 didReceiveError:(id)arg2;
- (void)xmppStream:(id)arg1 bytesDisconnected:(long long)arg2;
- (void)xmppStream:(id)arg1 bytesConnected:(long long)arg2;
- (void)xmppStream:(id)arg1 bytesRecv:(long long)arg2;
- (void)xmppStream:(id)arg1 bytesSent:(long long)arg2;
- (void)xmppDidNotReceivePong:(id)arg1;
- (void)xmppDidReceivePresence:(id)arg1;
- (void)xmppStreamDidAuthenticate:(id)arg1;
- (void)reportOnline;
- (void)reportOffline;
- (void)doRealOffline;
- (void)xmppDidDisconnect:(id)arg1 withError:(id)arg2;
- (void)xmppConnectionError:(id)arg1;
- (void)xmppDidConnect:(id)arg1;
- (void)xmppWillConnect:(id)arg1;
- (id)getXmppHostInfo;
- (void)networkChanged:(int)arg1 oldStatus:(int)arg2;
- (void)reachabilityChanged:(id)arg1;
- (void)unsubscribeFromNetworkReachabilityNotifications;
- (void)registerForNetworkReachabilityNotifications;
- (void)onReceivedKick:(id)arg1 asError:(id)arg2;
- (void)sendMessage:(id)arg1 channel:(id)arg2;
- (void)reconnectServer;
- (void)disconnectServer;
- (void)doConnectServer;
- (void)connectServer;
- (void)checkConnectionWhileBecomeActive;
- (void)checkConnectionWhileResignActive;
- (_Bool)isServerDisconnected;
- (_Bool)isServerConnected;
- (id)getHostIp;
- (id)connectionChallenge;
- (void)authenticateBind:(id)arg1 error:(id *)arg2 challenge:(id)arg3;
- (void)removeXmppChannel:(id)arg1;
- (void)addXmppChannel:(id)arg1;
- (void)removeConnectionDelegate:(id)arg1;
- (void)addConnectionDelegate:(id)arg1 delegateQueue:(struct dispatch_queue_s *)arg2;
- (void)dealloc;
- (id)initWithJID:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

