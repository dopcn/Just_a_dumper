//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

#import "NSCopying-Protocol.h"

@class NSDate, NSError, NSMutableArray, NSString;

@interface ARTVCCallStatistics : NSObject <NSCopying>
{
    _Bool _isReported;
    NSString *_roomID;
    NSString *_userID;
    NSString *_bizName;
    NSString *_brokerID;
    NSDate *_createCallRPCStartDate;
    NSDate *_createCallRPCEndDate;
    NSDate *_joinCallRPCStartDate;
    NSDate *_joinCallRPCEndDate;
    NSDate *_exitCallRPCStartDate;
    NSDate *_exitCallRPCEndDate;
    NSDate *_recvJoinCallDate;
    NSDate *_recvAnswerDate;
    NSDate *_connectionCompletedDate;
    NSDate *_disConnectByUserDate;
    NSError *_error;
    NSError *_rpcError;
    NSString *_captureResolution;
    NSString *_maxCaptureFrameRate;
    NSString *_minCaptureFrameRate;
    NSString *_encodeResolution;
    NSString *_maxEncodeFrameRate;
    NSString *_minEncodeFrameRate;
    NSString *_maxTransportBitRate;
    NSString *_rvFirstFrameResolution;
    NSString *_p2pOrCoturn;
    NSMutableArray *_rvSizeChangedInfoArray;
}

+ (id)nameOfRpc:(unsigned long long)arg1;
+ (void)reset;
+ (id)sharedInstance;
@property(retain, nonatomic) NSMutableArray *rvSizeChangedInfoArray; // @synthesize rvSizeChangedInfoArray=_rvSizeChangedInfoArray;
@property(copy, nonatomic) NSString *p2pOrCoturn; // @synthesize p2pOrCoturn=_p2pOrCoturn;
@property(copy, nonatomic) NSString *rvFirstFrameResolution; // @synthesize rvFirstFrameResolution=_rvFirstFrameResolution;
@property(copy, nonatomic) NSString *maxTransportBitRate; // @synthesize maxTransportBitRate=_maxTransportBitRate;
@property(copy, nonatomic) NSString *minEncodeFrameRate; // @synthesize minEncodeFrameRate=_minEncodeFrameRate;
@property(copy, nonatomic) NSString *maxEncodeFrameRate; // @synthesize maxEncodeFrameRate=_maxEncodeFrameRate;
@property(copy, nonatomic) NSString *encodeResolution; // @synthesize encodeResolution=_encodeResolution;
@property(copy, nonatomic) NSString *minCaptureFrameRate; // @synthesize minCaptureFrameRate=_minCaptureFrameRate;
@property(copy, nonatomic) NSString *maxCaptureFrameRate; // @synthesize maxCaptureFrameRate=_maxCaptureFrameRate;
@property(copy, nonatomic) NSString *captureResolution; // @synthesize captureResolution=_captureResolution;
@property(copy, nonatomic) NSError *rpcError; // @synthesize rpcError=_rpcError;
@property(copy, nonatomic) NSError *error; // @synthesize error=_error;
@property(retain, nonatomic) NSDate *disConnectByUserDate; // @synthesize disConnectByUserDate=_disConnectByUserDate;
@property(retain, nonatomic) NSDate *connectionCompletedDate; // @synthesize connectionCompletedDate=_connectionCompletedDate;
@property(retain, nonatomic) NSDate *recvAnswerDate; // @synthesize recvAnswerDate=_recvAnswerDate;
@property(retain, nonatomic) NSDate *recvJoinCallDate; // @synthesize recvJoinCallDate=_recvJoinCallDate;
@property(retain, nonatomic) NSDate *exitCallRPCEndDate; // @synthesize exitCallRPCEndDate=_exitCallRPCEndDate;
@property(retain, nonatomic) NSDate *exitCallRPCStartDate; // @synthesize exitCallRPCStartDate=_exitCallRPCStartDate;
@property(retain, nonatomic) NSDate *joinCallRPCEndDate; // @synthesize joinCallRPCEndDate=_joinCallRPCEndDate;
@property(retain, nonatomic) NSDate *joinCallRPCStartDate; // @synthesize joinCallRPCStartDate=_joinCallRPCStartDate;
@property(retain, nonatomic) NSDate *createCallRPCEndDate; // @synthesize createCallRPCEndDate=_createCallRPCEndDate;
@property(retain, nonatomic) NSDate *createCallRPCStartDate; // @synthesize createCallRPCStartDate=_createCallRPCStartDate;
@property(nonatomic) _Bool isReported; // @synthesize isReported=_isReported;
@property(copy, nonatomic) NSString *brokerID; // @synthesize brokerID=_brokerID;
@property(copy, nonatomic) NSString *bizName; // @synthesize bizName=_bizName;
@property(copy, nonatomic) NSString *userID; // @synthesize userID=_userID;
@property(copy, nonatomic) NSString *roomID; // @synthesize roomID=_roomID;
- (void).cxx_destruct;
- (void)remoteLogProxy:(int)arg1 info:(id)arg2;
- (void)logForRpcWithType:(unsigned long long)arg1 code:(long long)arg2 cost:(double)arg3 err:(id)arg4 roomID:(id)arg5;
- (void)remoteVideoSizeChangedTo:(id)arg1;
- (void)logForCallStatics;
- (void)logForExitcallRPC:(id)arg1;
- (void)logForReportICERPC:(id)arg1 cost:(double)arg2;
- (void)logForJoinCallRPC:(id)arg1;
- (void)logForCreateCallRPC:(id)arg1 roomID:(id)arg2;
- (id)description;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)errcode;
- (id)parseErrorDescription:(id)arg1;
- (id)parseRvChangeArray:(id)arg1;
- (double)callDuration;
- (double)iceConnectedAsCallerCost;
- (double)recvAnswerAsCallerCost;
- (double)recvJoincallCmdFromSyncCost;
- (double)exitCallRpcCost;
- (double)joinCallRpcCost;
- (double)createCallRpcCost;
- (void)dealloc;

@end

