//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "BBAAudioPlayBase.h"

#import "BBAAudioPlayerContentViewDelegate-Protocol.h"
#import "BBAAudioPlayerPlayListViewDelegate-Protocol.h"
#import "BBAAudioPlayerProgressBarDelegate-Protocol.h"
#import "BBAAudioPlayerToolBarDelegate-Protocol.h"
#import "BBAAudioTTSSettingViewDelegate-Protocol.h"
#import "UIGestureRecognizerDelegate-Protocol.h"

@class BBAAudioPlayerContentView, BBAAudioPlayerPlayListView, BBAAudioPlayerProgressBar, BBAAudioPlayerToolBar, BBAAudioTTSSettingView, NSString, UIButton, UISwipeGestureRecognizer, UIView;
@protocol BBAAudioFullScreenPlayerDelegate;

@interface BBAAudioFullScreenPlayer : BBAAudioPlayBase <BBAAudioPlayerToolBarDelegate, BBAAudioPlayerProgressBarDelegate, BBAAudioTTSSettingViewDelegate, BBAAudioPlayerPlayListViewDelegate, BBAAudioPlayerContentViewDelegate, UIGestureRecognizerDelegate>
{
    _Bool _isShow;
    _Bool _ttsBeginPlaying;
    _Bool _bManuslClosed;
    id <BBAAudioFullScreenPlayerDelegate> _delegate;
    UIButton *_switchBtn;
    UIButton *_closeBtn;
    UIButton *_backMiniBtn;
    UIButton *_lastBtn;
    UIButton *_nextBtn;
    UIButton *_playBtn;
    BBAAudioPlayerProgressBar *_progressBar;
    BBAAudioPlayerToolBar *_toolBar;
    BBAAudioPlayerContentView *_contentView;
    BBAAudioTTSSettingView *_ttsSettingView;
    BBAAudioPlayerPlayListView *_playListView;
    UIView *_maskView;
    long long _popViewType;
    UISwipeGestureRecognizer *_swipeGesture;
}

+ (id)sharedInstance;
@property(retain, nonatomic) UISwipeGestureRecognizer *swipeGesture; // @synthesize swipeGesture=_swipeGesture;
@property(nonatomic) _Bool bManuslClosed; // @synthesize bManuslClosed=_bManuslClosed;
@property(nonatomic) long long popViewType; // @synthesize popViewType=_popViewType;
@property(retain, nonatomic) UIView *maskView; // @synthesize maskView=_maskView;
@property(retain, nonatomic) BBAAudioPlayerPlayListView *playListView; // @synthesize playListView=_playListView;
@property(retain, nonatomic) BBAAudioTTSSettingView *ttsSettingView; // @synthesize ttsSettingView=_ttsSettingView;
@property(retain, nonatomic) BBAAudioPlayerContentView *contentView; // @synthesize contentView=_contentView;
@property(retain, nonatomic) BBAAudioPlayerToolBar *toolBar; // @synthesize toolBar=_toolBar;
@property(retain, nonatomic) BBAAudioPlayerProgressBar *progressBar; // @synthesize progressBar=_progressBar;
@property(retain, nonatomic) UIButton *playBtn; // @synthesize playBtn=_playBtn;
@property(retain, nonatomic) UIButton *nextBtn; // @synthesize nextBtn=_nextBtn;
@property(retain, nonatomic) UIButton *lastBtn; // @synthesize lastBtn=_lastBtn;
@property(retain, nonatomic) UIButton *backMiniBtn; // @synthesize backMiniBtn=_backMiniBtn;
@property(retain, nonatomic) UIButton *closeBtn; // @synthesize closeBtn=_closeBtn;
@property(retain, nonatomic) UIButton *switchBtn; // @synthesize switchBtn=_switchBtn;
@property(nonatomic) _Bool ttsBeginPlaying; // @synthesize ttsBeginPlaying=_ttsBeginPlaying;
@property(nonatomic) _Bool isShow; // @synthesize isShow=_isShow;
@property(nonatomic) __weak id <BBAAudioFullScreenPlayerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (unsigned long long)supportedInterfaceOrientations;
- (_Bool)shouldAutorotate;
- (void)closePlayer;
- (_Bool)p_checkAudioAlreadyDownloaded:(id)arg1 audioSource:(long long)arg2;
- (void)resetPlayControllerStatus;
- (void)setLastAudioItemUIStatus:(_Bool)arg1;
- (void)setFirstAudioItemUIStatus:(_Bool)arg1;
- (void)setPlayControlPreviousBtnEnable:(_Bool)arg1 nextBtnEnable:(_Bool)arg2;
- (void)selectAudioAtIndex:(unsigned long long)arg1;
- (_Bool)getCurrentPlayStatus;
- (unsigned long long)getCurrentPlayIndex;
- (void)onPlayListViewWillClose;
- (id)p_parseResponseDataArray:(id)arg1;
- (id)p_parseResponseDict:(id)arg1;
- (void)insertAudioListHandler:(long long)arg1 pageNum:(unsigned long long)arg2 audioList:(id)arg3;
- (void)appendAudioListHandler:(long long)arg1 pageNum:(unsigned long long)arg2 audioList:(id)arg3;
- (void)loadMoreAudioDataWithAlbumID:(id)arg1 andTrackID:(id)arg2;
- (void)loadNewAudioDataWithAlbumID:(id)arg1 andTrackID:(id)arg2;
- (void)switchToContentViewIndex:(long long)arg1;
- (void)onReadingContentChanged:(long long)arg1;
- (void)onReadingToneChanged:(long long)arg1;
- (void)updateDownloadStatus:(id)arg1 showToast:(_Bool)arg2;
- (void)updateTTSPlayerStatus:(long long)arg1;
- (void)dismissViewControllerAnimated:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;
- (void)updatePlayerStatus:(long long)arg1 withCurrent:(double)arg2;
- (void)updateAudioPlayProgress:(float)arg1 withDuration:(double)arg2 withCurrent:(double)arg3;
- (void)updateAudioLoadProgress:(float)arg1;
- (void)updateAudioItemInfo:(id)arg1;
- (void)onTTSSettingBtnClick;
- (void)p_downloadAudio:(id)arg1;
- (void)showDownLoadAudioAlertWithSizeMessage:(id)arg1 audioItem:(id)arg2;
- (void)p_fetchCurrentAudioDownloadInfo;
- (id)p_getDownloadToastString:(long long)arg1;
- (void)showWWANDownLoadAlert;
- (void)downLoadAudioResource;
- (void)onDownloadBtnClick;
- (void)onPlayModeBtnClick;
- (void)onPlaylistBtnClick;
- (void)onProgressValueManualChanged:(double)arg1;
- (void)p_switchToMiniPlayer;
- (void)p_switchBtnClicked:(id)arg1;
- (void)switchToMiniPlayer;
- (void)showCloseAlert:(id)arg1;
- (void)p_closeBtnClicked:(id)arg1;
- (void)p_playNextAudio:(id)arg1;
- (void)p_playLastAudio:(id)arg1;
- (void)p_playOrPause:(id)arg1;
- (void)loadView;
- (void)didReceiveMemoryWarning;
- (void)refreshPlayContronView;
- (void)refeshToolBarView;
- (void)refreshProgressView;
- (void)refreshContentView;
- (void)refreshFullScreenView;
- (void)p_viewSwipeHandler;
- (void)p_maskViewTapped;
- (void)p_initSubController;
- (void)p_initTTSSettingView;
- (void)_initMaskView;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (void)p_becomeActive:(id)arg1;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

