//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class EKCalendar, EKEventStore, NSString;
@protocol OS_dispatch_queue;

@interface VSCalendarEventManager : NSObject
{
    NSObject<OS_dispatch_queue> *workQueue;
    _Bool _isAuthorizationGranted;
    EKEventStore *_eventStore;
    CDUnknownBlockType _resultBlock;
    EKCalendar *_currentCalendar;
    NSString *_procedureErrorReason;
}

+ (id)instanceManager;
@property(copy, nonatomic) NSString *procedureErrorReason; // @synthesize procedureErrorReason=_procedureErrorReason;
@property(retain, nonatomic) EKCalendar *currentCalendar; // @synthesize currentCalendar=_currentCalendar;
@property(nonatomic) _Bool isAuthorizationGranted; // @synthesize isAuthorizationGranted=_isAuthorizationGranted;
@property(copy, nonatomic) CDUnknownBlockType resultBlock; // @synthesize resultBlock=_resultBlock;
@property(retain, nonatomic) EKEventStore *eventStore; // @synthesize eventStore=_eventStore;
- (void).cxx_destruct;
- (id)p_someTime:(id)arg1 afterFromDate:(id)arg2;
- (id)p_errorWithCode:(long long)arg1 reasonDescription:(id)arg2;
- (id)p_filtedMatchedEventFromStartDate:(id)arg1 endDate:(id)arg2 calendars:(id)arg3 filtedPredicate:(id)arg4;
- (id)p_sourceInEventStore:(id)arg1 sourceType:(long long)arg2 sourceTitle:(id)arg3;
- (void)p_putTaskInQueue:(CDUnknownBlockType)arg1;
- (void)p_addSingleEventSuffixStringForEvent:(id)arg1;
- (_Bool)p_deleteExpiredEventsFromVSDefaultCalendarWithError:(id *)arg1;
- (void)p_eventAddDefaultProperty:(id)arg1;
- (id)p_mergeSameStartDateEventFromEventsArray:(id)arg1 needRemoveOldEvents:(_Bool)arg2;
- (id)p_dateWithSomeDaysAfter:(int)arg1 fromDate:(id)arg2;
- (id)p_defaultVSSource;
- (id)p_defaultVSCalendar;
- (void)p_handleCurrentStatus;
- (id)constructEventWithTitle:(id)arg1 startDate:(id)arg2 endDate:(id)arg3;
- (id)constructEventWithTitle:(id)arg1 startDate:(id)arg2 endDate:(id)arg3 wapUrl:(id)arg4;
- (id)constructEventWithBrandsName:(id)arg1 startDate:(id)arg2 endDate:(id)arg3 brandID:(id)arg4;
- (void)deleteEvent:(id)arg1 includeMergedEvent:(_Bool)arg2 deleteResultBlock:(CDUnknownBlockType)arg3;
- (void)insertEvent:(id)arg1 autoMergeEvent:(_Bool)arg2 isUnique:(_Bool)arg3 insertResultBlock:(CDUnknownBlockType)arg4;
- (void)prepareUserAuthorizeWithResultBlock:(CDUnknownBlockType)arg1;
- (void)dealloc;

@end

