//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@interface IMDateUtil : NSObject
{
}

+ (long long)weekdayStringFromDate:(id)arg1;
+ (_Bool)inSameWeek:(id)arg1 date:(id)arg2;
+ (id)getTimestampByDate:(id)arg1;
+ (long long)calculateAgeWithBirthdate:(id)arg1 toNowDate:(id)arg2;
+ (long long)calculateAgeWithBirthdate:(id)arg1;
+ (int)compareBetweenDate:(id)arg1 andDate:(id)arg2 withFormat:(id)arg3;
+ (int)compareDateStringWithFirstDateString:(id)arg1 secondDateString:(id)arg2 compareStringLength:(unsigned long long)arg3;
+ (int)monthDays:(int)arg1 month:(int)arg2;
+ (int)leapMonth:(int)arg1;
+ (int)leapDays:(int)arg1;
+ (int)yearDays:(int)arg1;
+ (id)lunarForSolar:(id)arg1;
+ (id)getShowWeekByDate1:(id)arg1 weekType:(int)arg2;
+ (id)getFirstDateOfMonthWithDate:(id)arg1;
+ (id)getLastDateOfMonthWithDate:(id)arg1;
+ (long long)compareSecondFromStartDate:(id)arg1 endDate:(id)arg2;
+ (long long)compareMinutesFromStartDate:(id)arg1 endDate:(id)arg2;
+ (id)compareFromDateTime:(id)arg1 toDateTime:(id)arg2;
+ (id)compareFromDate:(id)arg1 toDate:(id)arg2;
+ (long long)compareDaysWithoutABSFromStartDateStr:(id)arg1 endDateStr:(id)arg2;
+ (long long)compareDaysFromStartDateStr:(id)arg1 endDateStr:(id)arg2;
+ (long long)compareDaysWithStartDate:(id)arg1 endDate:(id)arg2;
+ (long long)compareDaysFromStartDate:(id)arg1 endDate:(id)arg2 sign:(_Bool)arg3;
+ (id)getDateWithYear:(long long)arg1 month:(long long)arg2 day:(long long)arg3 hour:(long long)arg4 minute:(long long)arg5 second:(long long)arg6;
+ (id)getDateWithYear:(long long)arg1 month:(long long)arg2 day:(long long)arg3;
+ (id)getDateStringWithYear:(long long)arg1 month:(long long)arg2 day:(long long)arg3 hour:(long long)arg4 minute:(long long)arg5 second:(long long)arg6;
+ (id)getDateStringWithYear:(long long)arg1 month:(long long)arg2 day:(long long)arg3;
+ (id)getHolidayString:(id)arg1;
+ (_Bool)dateStringEqulsToday:(id)arg1;
+ (_Bool)getDateStringBeforeToday:(id)arg1;
+ (_Bool)dateStringBeforeToday:(id)arg1;
+ (_Bool)dateStringAfterToday:(id)arg1;
+ (_Bool)dateCalendarBeforeToday:(id)arg1;
+ (_Bool)dateCalendarEqulsToday:(id)arg1;
+ (_Bool)dateCalendarAfterToday:(id)arg1;
+ (_Bool)isMiddleDateWithStartDate:(id)arg1 endDate:(id)arg2 middleDate:(id)arg3;
+ (_Bool)firstDateAboveThanSecondDate:(id)arg1 secondDate:(id)arg2;
+ (_Bool)firstDateLessThanSecondDate:(id)arg1 secondDate:(id)arg2;
+ (_Bool)firstDateEquleSecondDate:(id)arg1 secondDate:(id)arg2;
+ (_Bool)firstCalendarEquleSecondCalendar:(id)arg1 secondDate:(id)arg2;
+ (_Bool)firstCalendarBeforeSecondCalendar:(id)arg1 secondDate:(id)arg2;
+ (_Bool)firstCalendarAfterSecondCalendar:(id)arg1 secondDate:(id)arg2;
+ (_Bool)firstDateStrEquleSecondDateStr:(id)arg1 secondDate:(id)arg2;
+ (_Bool)firstDateStrBeforeSecondDateStr:(id)arg1 secondDate:(id)arg2;
+ (_Bool)firstDateStrAfterSecondDateStr:(id)arg1 secondDate:(id)arg2;
+ (_Bool)dateStringEquls:(id)arg1 secondDate:(id)arg2;
+ (long long)compareDateStringByLevel:(id)arg1 secondDate:(id)arg2;
+ (long long)compareCalendarByLevel:(id)arg1 secondDate:(id)arg2;
+ (id)calculateDate:(id)arg1 field:(int)arg2 amount:(int)arg3;
+ (id)convertStringToDate:(id)arg1;
+ (id)getCurrentDateFormatter;
+ (id)dateFromString:(id)arg1 formate:(id)arg2;
+ (id)dateFormateWithDate:(id)arg1 formate:(id)arg2;
+ (id)getShowStrByDateStr:(id)arg1;
+ (id)getShowWeekByDate6:(id)arg1;
+ (id)getShowWeekByDate4:(id)arg1;
+ (id)getShowWeekByDate3:(id)arg1;
+ (id)getShowWeekByDate5:(id)arg1;
+ (id)getShowHolidayOrWeekStr:(id)arg1;
+ (id)getShowWeekByDate2:(id)arg1;
+ (id)getDateStrCompareWithToday:(id)arg1;
+ (id)getDateStrCompareToDay:(id)arg1;
+ (id)getShowWeekStringWithDateStr:(id)arg1;
+ (id)getAllShowWeek:(id)arg1;
+ (id)getShowWeek:(id)arg1;
+ (id)getShowWeekByDateString:(id)arg1;
+ (id)dateOfString:(id)arg1 dateFormat:(id)arg2;
+ (id)stringOfDate:(id)arg1 dateFormat:(id)arg2;
+ (id)getCalendarStrBySimpleDateFormat:(id)arg1 simpleDateFormatType:(int)arg2;
+ (id)calendarStrBySimpleDateFormat:(id)arg1 simpleDateFormatType:(int)arg2;
+ (id)calculateCalendar:(id)arg1 field:(int)arg2 amount:(int)arg3;
+ (id)getTimeByStep:(id)arg1 field:(int)arg2 step:(int)arg3;
+ (id)getDateByStep:(id)arg1 step:(int)arg2;
+ (long long)getSecond:(id)arg1;
+ (long long)getMinute:(id)arg1;
+ (long long)getHourOfDay:(id)arg1;
+ (long long)getDaysOfMonth:(id)arg1;
+ (long long)getDay:(id)arg1;
+ (long long)getMonth:(id)arg1;
+ (long long)getYear:(id)arg1;
+ (id)getThreeDayDes:(long long)arg1;
+ (long long)getWeek:(id)arg1;
+ (id)getShowWeekByDate:(id)arg1;
+ (id)getThreeDayAfterDate;
+ (id)getAfterNextDate;
+ (id)getNextDate:(id)arg1;
+ (id)getNextDate;
+ (id)getLastDate;
+ (id)getDateByDateTimeStr:(id)arg1;
+ (id)getDateByDateStr:(id)arg1;
+ (long long)getCurrentLongDate;
+ (id)getCurrentCalendar;
+ (id)getCurrentDate;
+ (id)getCurrentTimeForCommLog;
+ (id)getCurrentTimeMillisecond;
+ (id)getCurrentTime;
+ (id)SIMPLEFORMATTYPESTRING14;
+ (id)SIMPLEFORMATTYPESTRING13;
+ (id)SIMPLEFORMATTYPESTRING12;
+ (id)SIMPLEFORMATTYPESTRING11;
+ (id)SIMPLEFORMATTYPESTRING10;
+ (id)SIMPLEFORMATTYPESTRING9;
+ (id)SIMPLEFORMATTYPESTRING8;
+ (id)SIMPLEFORMATTYPESTRING7;
+ (id)SIMPLEFORMATTYPESTRING6;
+ (id)SIMPLEFORMATTYPESTRING5;
+ (id)SIMPLEFORMATTYPESTRING4;
+ (id)SIMPLEFORMATTYPESTRING3;
+ (id)SIMPLEFORMATTYPESTRING2;
+ (id)SIMPLEFORMATTYPESTRING1;
+ (id)displayTimeZone;
+ (id)storageTimeZone;

@end

