//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <UIKit/UIViewController.h>

#import "ControllerAdapterProtocol-Protocol.h"
#import "MJHttpOperationDelegate-Protocol.h"
#import "UIGestureRecognizerDelegate-Protocol.h"

@class APNSPushStatistic, MBProgressHUD, MJExceptionPage, MJLAbnormalBar, MJLAbnormalView, MojiAlertView, NSDate, NSString, RDVTabBarController, UIImageView, UINavigationController, UISwipeGestureRecognizer;

@interface MJUIViewController : UIViewController <UIGestureRecognizerDelegate, MJHttpOperationDelegate, ControllerAdapterProtocol>
{
    _Bool _cancelHttpOperationWhenDisappear;
    _Bool _hideTabBarWhenDidAppear;
    _Bool _enablePopGesture;
    _Bool _enableScrollsToTop;
    _Bool _detectScreenshot;
    _Bool _viewAppeared;
    _Bool _tabBarAnimated;
    _Bool _shouldResponseScreenshot;
    long long _barStyle;
    long long _stayTimeType;
    NSDate *_beginTime;
    double _stayTime;
    UIImageView *_imageViewForNavBar;
    NSString *_screenshotHintKey;
    NSString *_shareSource;
    long long _transitionStyle;
    APNSPushStatistic *_apnsPush;
    RDVTabBarController *_weakRdvTabBar;
    UINavigationController *_weakNavigationController;
    MJLAbnormalView *_anomalView;
    long long _screenshotStyle;
    MBProgressHUD *_progressHUD;
    MojiAlertView *_alertView;
    MJLAbnormalBar *_abnormalBar;
    UISwipeGestureRecognizer *_swipeRecognizer;
    MJExceptionPage *_exceptionPage;
    NSString *_stayEventString;
    NSString *_stayEventTag;
}

+ (_Bool)hasFullyParameters:(id)arg1;
+ (id)instanceFromBindingController:(id)arg1;
+ (long long)transformErrorType:(long long)arg1 clearBg:(_Bool)arg2;
@property(copy, nonatomic) NSString *stayEventTag; // @synthesize stayEventTag=_stayEventTag;
@property(copy, nonatomic) NSString *stayEventString; // @synthesize stayEventString=_stayEventString;
@property(retain, nonatomic) MJExceptionPage *exceptionPage; // @synthesize exceptionPage=_exceptionPage;
@property(nonatomic) _Bool shouldResponseScreenshot; // @synthesize shouldResponseScreenshot=_shouldResponseScreenshot;
@property(nonatomic) __weak UISwipeGestureRecognizer *swipeRecognizer; // @synthesize swipeRecognizer=_swipeRecognizer;
@property(retain, nonatomic) MJLAbnormalBar *abnormalBar; // @synthesize abnormalBar=_abnormalBar;
@property(retain, nonatomic) MojiAlertView *alertView; // @synthesize alertView=_alertView;
@property(retain, nonatomic) MBProgressHUD *progressHUD; // @synthesize progressHUD=_progressHUD;
@property(nonatomic) long long screenshotStyle; // @synthesize screenshotStyle=_screenshotStyle;
@property(retain, nonatomic) MJLAbnormalView *anomalView; // @synthesize anomalView=_anomalView;
@property(nonatomic) __weak UINavigationController *weakNavigationController; // @synthesize weakNavigationController=_weakNavigationController;
@property(nonatomic) __weak RDVTabBarController *weakRdvTabBar; // @synthesize weakRdvTabBar=_weakRdvTabBar;
@property(nonatomic) _Bool tabBarAnimated; // @synthesize tabBarAnimated=_tabBarAnimated;
@property(retain, nonatomic) APNSPushStatistic *apnsPush; // @synthesize apnsPush=_apnsPush;
@property(nonatomic) long long transitionStyle; // @synthesize transitionStyle=_transitionStyle;
@property(nonatomic) _Bool viewAppeared; // @synthesize viewAppeared=_viewAppeared;
@property(retain, nonatomic) NSString *shareSource; // @synthesize shareSource=_shareSource;
@property(retain, nonatomic) NSString *screenshotHintKey; // @synthesize screenshotHintKey=_screenshotHintKey;
@property(nonatomic) _Bool detectScreenshot; // @synthesize detectScreenshot=_detectScreenshot;
@property(nonatomic) __weak UIImageView *imageViewForNavBar; // @synthesize imageViewForNavBar=_imageViewForNavBar;
@property(nonatomic) double stayTime; // @synthesize stayTime=_stayTime;
@property(retain, nonatomic) NSDate *beginTime; // @synthesize beginTime=_beginTime;
@property(nonatomic) long long stayTimeType; // @synthesize stayTimeType=_stayTimeType;
@property(nonatomic) long long barStyle; // @synthesize barStyle=_barStyle;
@property(nonatomic) _Bool enableScrollsToTop; // @synthesize enableScrollsToTop=_enableScrollsToTop;
@property(nonatomic) _Bool enablePopGesture; // @synthesize enablePopGesture=_enablePopGesture;
@property(nonatomic) _Bool hideTabBarWhenDidAppear; // @synthesize hideTabBarWhenDidAppear=_hideTabBarWhenDidAppear;
@property(nonatomic) _Bool cancelHttpOperationWhenDisappear; // @synthesize cancelHttpOperationWhenDisappear=_cancelHttpOperationWhenDisappear;
- (void).cxx_destruct;
- (void)imageWithScreenshotInPNGFormatFromLibraryCallBack:(CDUnknownBlockType)arg1;
- (void)imageWithScreenshotInPNGFormatWithSize:(struct CGSize)arg1 CallBack:(CDUnknownBlockType)arg2;
- (id)imageWithScreenshotInPNGFormatWithSize:(struct CGSize)arg1;
- (void)recordPushClickSuccess;
- (void)endCompute;
- (void)beginCompute;
- (void)hideAlertView;
- (void)showAlertView:(id)arg1 alertType:(long long)arg2 userInteractionEnabled:(_Bool)arg3;
- (void)showAlertView:(id)arg1 alertType:(long long)arg2;
- (void)showAlertView:(id)arg1;
- (void)hideProgressHUD;
- (void)showProgressHUD:(id)arg1;
- (void)showLoadingPageWithType:(long long)arg1 topOffset:(double)arg2;
- (void)showExceptionPageWithType:(long long)arg1 topOffset:(double)arg2 retryblk:(CDUnknownBlockType)arg3;
- (void)showExceptionPageWithHttpErrorType:(long long)arg1 clearBg:(_Bool)arg2 topOffset:(double)arg3 retryblk:(CDUnknownBlockType)arg4;
- (void)showAbnormalBarInView:(id)arg1 offsetY:(double)arg2;
- (void)hideAbnomalView;
- (void)showAbnomalViewWithType:(long long)arg1 offsetY:(double)arg2 noticeString:(id)arg3 retryblk:(CDUnknownBlockType)arg4;
- (void)showAbnomalViewWithType:(long long)arg1 noticeString:(id)arg2 retryblk:(CDUnknownBlockType)arg3;
- (void)showAbnomalViewWithType:(long long)arg1 offsetY:(double)arg2 retryblk:(CDUnknownBlockType)arg3;
- (void)showAbnomalViewWithType:(long long)arg1 retryblk:(CDUnknownBlockType)arg2;
- (void)httpOperationFailed:(id)arg1 error:(id)arg2;
- (void)httpOperationFinish:(id)arg1 error:(id)arg2;
- (void)back:(_Bool)arg1;
- (void)dealloc;
- (_Bool)isTopViewController;
- (_Bool)isPushingViewController;
- (void)cancelHttpOperation;
- (void)handleInteractivePopGestureNotification:(id)arg1;
- (void)setStayTimeStatisticsEvent:(id)arg1 tag:(id)arg2;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)didReceiveMemoryWarning;
- (void)handleSwipeRight:(id)arg1;
- (void)addPopGesture;
- (void)setScrollToTop;
- (void)disableScrollToTop;
- (void)scrollToTop:(id)arg1;
- (void)didTapScreenshotShareBar;
- (void)mjDidTakeScreenshot;
- (void)mjVoiceLanguageSettingChanged;
- (void)mjPressureUnitSettingChanged;
- (void)mjWindUnitSettingChanged;
- (void)mjTempUnitSettingChanged;
- (void)mjLocalizedLanguageChanged;
- (void)addobserver;
- (void)handleTabBarHidden;
- (void)viewDidLoad;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (unsigned long long)supportedInterfaceOrientations;
- (_Bool)shouldAutorotate;
- (void)changeEdgesForExtendedLayoutAndFrameOfBackgroundViewForNavgationBar:(unsigned long long)arg1;
- (void)enableInteractivePopGesture:(_Bool)arg1;
- (void)updateBackgroundViewForNavBar:(id)arg1;
- (double)heightOfNavgationBar;
- (void)customNavBar;
- (void)setBarAppearance;
- (void)setCloseButton:(CDUnknownBlockType)arg1;
- (void)setShareButton:(CDUnknownBlockType)arg1;
- (id)getBarButtonsByButtons:(id)arg1;
- (void)setLeftButtonsEnabled:(_Bool)arg1;
- (void)setRightButtonsEnabled:(_Bool)arg1;
- (void)setRightButtons:(id)arg1;
- (void)setLeftButtons:(id)arg1;
- (void)setRightNoButton;
- (void)setLeftNoButton;
- (void)setRightButton:(id)arg1;
- (void)setLeftButton:(id)arg1;
- (void)setBackButtonByblock:(CDUnknownBlockType)arg1;
- (id)imageNameByBackItem;
- (void)setRightButton:(id)arg1 normalColor:(id)arg2 hightlightColor:(id)arg3 touchBlock:(CDUnknownBlockType)arg4;
- (void)setRightButton:(id)arg1 block:(CDUnknownBlockType)arg2;
- (void)setLeftButtonImage:(id)arg1 block:(CDUnknownBlockType)arg2;
- (void)setLeftButton:(id)arg1 normalColor:(id)arg2 hightlightColor:(id)arg3 touchBlock:(CDUnknownBlockType)arg4;
- (void)setLeftButton:(id)arg1 block:(CDUnknownBlockType)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

