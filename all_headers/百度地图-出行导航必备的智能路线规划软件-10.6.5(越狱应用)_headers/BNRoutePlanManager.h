//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

#import "BNRoutePlanManagerProtocol-Protocol.h"

@class BNaviCalcRouteTime, BNaviRoutePlanNode, NSData, NSDictionary, NSMutableArray, NSString, NSThread;
@protocol BNNaviRoutePlanDelegate;

@interface BNRoutePlanManager : NSObject <BNRoutePlanManagerProtocol>
{
    BNaviRoutePlanNode *_NodeList[5];
    long long _CurNodeCount;
    unsigned int _calcID;
    int _curNetMode;
    double _lastRoutePlanTime;
    long long stCurSelectIdx;
    unsigned int calcStartTime;
    int routeTotalCount;
    _Bool _isOnlineRoute;
    char *_pbData;
    int _pbLength;
    _Bool _bIsCanCancel;
    _Bool _isAllDataReady;
    _Bool _isRouteEntrance;
    _Bool _isLightRoutPlan;
    _Bool _isCurrentRouteResultOnline;
    _Bool _needShowLoading;
    _Bool _needShowAlert;
    _Bool _isRoutePlan;
    _Bool _needCloseRoadCondition;
    _Bool _mapCallUpdateRoadCondition;
    _Bool _isKeyWordSearch;
    _Bool _bNoBuildCars;
    int _sensorAngleValue;
    unsigned int _ePreference;
    int _routePlanType;
    int _naviMode;
    int _userInfoNetMode;
    id <BNNaviRoutePlanDelegate> _roadConditionDelegate;
    id <BNNaviRoutePlanDelegate> _delegate;
    NSDictionary *_userInfo;
    NSMutableArray *_mapNodes;
    NSMutableArray *_cacheNodeList;
    long long _mapLevel;
    double _mapLeft;
    double _mapRight;
    double _mapTop;
    double _mapBottom;
    NSThread *_searchThread;
    unsigned long long _nodeIndex;
    NSString *_routeURL;
    NSMutableArray *_nodesArray;
    BNaviCalcRouteTime *_calcRouteTime;
    unsigned long long _enComfrom;
    BNaviCalcRouteTime *_calctime;
    NSData *_pbBuffer;
    NSString *_lightNaviMrsl;
    CDUnknownBlockType _selecteRouteCompletion;
}

+ (id)getSessionID;
+ (_Bool)convertErrorCode:(long long)arg1 toMapCode:(long long *)arg2;
+ (void)ReleaseInstance;
+ (_Bool)instanceIsCreate;
+ (id)GetInstance;
+ (double)calcGeoSphereDistance:(id)arg1 andNode:(id)arg2;
@property(nonatomic) _Bool bNoBuildCars; // @synthesize bNoBuildCars=_bNoBuildCars;
@property(copy, nonatomic) CDUnknownBlockType selecteRouteCompletion; // @synthesize selecteRouteCompletion=_selecteRouteCompletion;
@property(nonatomic) int userInfoNetMode; // @synthesize userInfoNetMode=_userInfoNetMode;
@property(retain, nonatomic) NSString *lightNaviMrsl; // @synthesize lightNaviMrsl=_lightNaviMrsl;
@property(nonatomic) int naviMode; // @synthesize naviMode=_naviMode;
@property(nonatomic) _Bool isKeyWordSearch; // @synthesize isKeyWordSearch=_isKeyWordSearch;
@property(nonatomic) _Bool mapCallUpdateRoadCondition; // @synthesize mapCallUpdateRoadCondition=_mapCallUpdateRoadCondition;
@property(nonatomic) _Bool needCloseRoadCondition; // @synthesize needCloseRoadCondition=_needCloseRoadCondition;
@property(retain, nonatomic) NSData *pbBuffer; // @synthesize pbBuffer=_pbBuffer;
@property(nonatomic) _Bool isRoutePlan; // @synthesize isRoutePlan=_isRoutePlan;
@property(nonatomic) _Bool needShowAlert; // @synthesize needShowAlert=_needShowAlert;
@property(nonatomic) _Bool needShowLoading; // @synthesize needShowLoading=_needShowLoading;
@property(retain, nonatomic) BNaviCalcRouteTime *calctime; // @synthesize calctime=_calctime;
@property(readonly, nonatomic) _Bool isCurrentRouteResultOnline; // @synthesize isCurrentRouteResultOnline=_isCurrentRouteResultOnline;
@property(nonatomic) _Bool isLightRoutPlan; // @synthesize isLightRoutPlan=_isLightRoutPlan;
@property(nonatomic) unsigned long long enComfrom; // @synthesize enComfrom=_enComfrom;
@property(nonatomic) int routePlanType; // @synthesize routePlanType=_routePlanType;
@property(nonatomic) _Bool isRouteEntrance; // @synthesize isRouteEntrance=_isRouteEntrance;
@property(retain, nonatomic) BNaviCalcRouteTime *calcRouteTime; // @synthesize calcRouteTime=_calcRouteTime;
@property(retain, nonatomic) NSMutableArray *nodesArray; // @synthesize nodesArray=_nodesArray;
@property(retain, nonatomic) NSString *routeURL; // @synthesize routeURL=_routeURL;
@property(nonatomic) unsigned long long nodeIndex; // @synthesize nodeIndex=_nodeIndex;
@property(retain, nonatomic) NSThread *searchThread; // @synthesize searchThread=_searchThread;
@property(nonatomic) _Bool isAllDataReady; // @synthesize isAllDataReady=_isAllDataReady;
@property(nonatomic) double mapBottom; // @synthesize mapBottom=_mapBottom;
@property(nonatomic) double mapTop; // @synthesize mapTop=_mapTop;
@property(nonatomic) double mapRight; // @synthesize mapRight=_mapRight;
@property(nonatomic) double mapLeft; // @synthesize mapLeft=_mapLeft;
@property(nonatomic) long long mapLevel; // @synthesize mapLevel=_mapLevel;
@property(retain, nonatomic) NSMutableArray *cacheNodeList; // @synthesize cacheNodeList=_cacheNodeList;
@property(retain, nonatomic) NSMutableArray *mapNodes; // @synthesize mapNodes=_mapNodes;
@property(retain, nonatomic) NSDictionary *userInfo; // @synthesize userInfo=_userInfo;
@property(nonatomic) __weak id <BNNaviRoutePlanDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) unsigned int ePreference; // @synthesize ePreference=_ePreference;
@property(nonatomic) __weak id <BNNaviRoutePlanDelegate> roadConditionDelegate; // @synthesize roadConditionDelegate=_roadConditionDelegate;
@property(nonatomic) int sensorAngleValue; // @synthesize sensorAngleValue=_sensorAngleValue;
- (void).cxx_destruct;
- (void)needMixRouteWithLimitLineRegion:(_Bool)arg1;
- (id)getRoutePlanVoiceInfo:(int)arg1;
- (unsigned long long)getCalcuComeFrom;
- (id)getPreLoadRouteWithNodes:(id)arg1 comeFrome:(id)arg2;
- (void)setEngTTSActive:(_Bool)arg1;
- (void)setPreRoutePlanStatus:(_Bool)arg1;
- (void)showItsRouteLayer:(_Bool)arg1;
- (void)showItsRouteLayer:(_Bool)arg1 animated:(_Bool)arg2;
- (void)resetRouteDetailIndexNeedAnimation:(_Bool)arg1 isSerialAnimation:(_Bool)arg2;
- (void)enableUpdateRoadCondition:(_Bool)arg1;
- (void)selectRouteWithIndex:(long long)arg1;
- (void)showAllItsRoutes:(_Bool)arg1;
- (void)setMapWinBound:(struct BMRect)arg1;
- (void)focusOneItsRouteSegmentPreOrNext:(_Bool)arg1;
- (void)focusOneItsRouteSegmentWithIndex:(long long)arg1;
- (id)routePlanResultMapProtoBufWithType:(int)arg1;
- (id)routePlanResultMapYellowTipListProtoBuf;
- (id)routePlanResultMapLongDistanceProtoBuf;
- (id)routePlanResultMapUIProtoBuf;
- (id)routePlanResultMapFullProtoBuf;
- (int)getCurRouteToll:(_Bool)arg1;
- (id)calcSpecPoiRouteWithNaviNodes:(id)arg1 poiType:(int)arg2 requestType:(int)arg3 routePlanUrlParam:(id)arg4 preference:(int)arg5;
- (id)getRouteBounds;
- (long long)routePlanId;
- (void)setBNoBuildCarsWithUserInfo:(id)arg1;
- (_Bool)routeDataIsReady;
- (void)setNetModeWithUserInfo:(id)arg1;
- (unsigned long long)routeCountsInNavi;
- (int)getCurrentPreference;
- (void)setUserChooseRouteBit:(int)arg1;
- (void)setLightNaviEntranceTimeType:(long long)arg1;
- (void)setLightNaviEntranceType:(long long)arg1;
- (void)startGuidanceServices;
- (void)resetCalcID;
- (void)reset;
- (void)reloadEngineIfNeed;
- (void)setRoutePlanNetMode;
- (_Bool)checkServiceIsReady:(_Bool)arg1;
- (void)reCalculateRouteWithDelegate:(id)arg1;
- (void)reCalculateRouteWithDelegate:(id)arg1 extParam:(id)arg2;
- (void)handleSelectRouteFinish;
- (_Bool)setMrslRoutePlanMode:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (_Bool)setMrslRoutePlanMode:(id)arg1;
- (_Bool)setRoutePlanUrl:(id)arg1;
- (void)setRouteplanType:(int)arg1;
- (void)handleRoutePlanFailed:(long long)arg1 bLightNavi:(_Bool)arg2;
- (void)handleRoutePlanFailedLater:(long long)arg1 bLightNavi:(_Bool)arg2;
- (void)handleRoutePlanSucceed:(_Bool)arg1;
- (void)handleLongJouneryViaDataFinish;
- (void)handleUpdateRoadConditionFinish;
- (void)handleRoutePlanCanceled:(_Bool)arg1;
- (_Bool)removeLastRoute;
- (id)getRoutePlanTime;
- (void)setRoutePlanTime:(id)arg1;
- (id)isAvoidRoute;
- (_Bool)cancelLastRoutePlan;
- (_Bool)cancelCalcRoute:(unsigned int)arg1;
- (_Bool)cancelRoutePlanByID:(long long)arg1;
- (_Bool)cancelRoutePlanByIDInner:(long long)arg1;
- (_Bool)setLightProtoBufToEngine:(void *)arg1 length:(long long)arg2 preference:(int)arg3 extraParams:(id)arg4;
- (long long)startRoutePlan:(unsigned int)arg1 NetMode:(int)arg2 isLightNavi:(_Bool)arg3 userInfo:(id)arg4;
- (void)setConfigParams:(_Bool)arg1;
- (_Bool)reRequestRouteData:(_Bool)arg1 mrsl:(id)arg2;
- (_Bool)getCurMultiMode;
- (int)getCurNetMode;
- (_Bool)updateCurrentRouteResultNetStatus;
- (_Bool)isCurRouteTolled;
- (void)setCurRoutePlanMode:(int)arg1;
- (int)getCurRoutePlanMode;
- (id)getStartDateDescription:(id)arg1;
- (_Bool)hasRoute;
- (void)onHandleNaviKeyWordResult;
- (void)onHandleKeyWordResult;
- (void)setupRoutePlanWithResult:(struct _NE_RoutePlan_Result_t)arg1;
- (void)onHandleRoutePlanResult:(_Bool)arg1;
- (void)onNaviEngineMsg:(id)arg1;
- (void)unRegisterNaviNotification;
- (void)registerNaviNotification;
- (id)trExtraUrlParam;
- (void)hideLoading;
- (void)showLoading:(_Bool)arg1;
- (void)searchCancel:(_Bool)arg1 bLightNavi:(_Bool)arg2;
- (void)trySwitchToOnline:(_Bool)arg1;
- (void)handleLackData:(id)arg1 beforeCalc:(_Bool)arg2 bLightNavi:(_Bool)arg3;
- (void)startRoutePlan:(_Bool)arg1 userInfo:(id)arg2;
- (void)routePlanInterface:(unsigned int)arg1 naviNodes:(id)arg2 time:(id)arg3 delegete:(id)arg4 userInfo:(id)arg5 lightNavi:(_Bool)arg6;
- (void)startRoutePlan:(int)arg1 naviNodes:(id)arg2 time:(id)arg3 delegete:(id)arg4 userInfo:(id)arg5 lightNavi:(_Bool)arg6;
- (void)startRoutePlan:(unsigned int)arg1 naviNodes:(id)arg2 time:(id)arg3 delegete:(id)arg4 userInfo:(id)arg5;
- (long long)startUpdateRoadCondition:(int)arg1 delegete:(id)arg2 userInfo:(id)arg3;
- (void)startRoutePlanOrSearch:(int)arg1 routePlanURL:(id)arg2 naviNodes:(id)arg3 time:(id)arg4 delegete:(id)arg5 userInfo:(id)arg6 lightNavi:(_Bool)arg7;
- (void)startRoutePlanOrSearch:(int)arg1 routePlanURL:(id)arg2 naviNodes:(id)arg3 time:(id)arg4 delegete:(id)arg5 userInfo:(id)arg6;
- (void)startNaviRoutePlan:(int)arg1 routePlanURL:(id)arg2 naviNodes:(id)arg3 protoBuf:(char *)arg4 aLen:(int)arg5 time:(id)arg6 delegete:(id)arg7 userInfo:(id)arg8;
- (void)startNaviRoutePlan:(int)arg1 routePlanURL:(id)arg2 naviNodes:(id)arg3 protoBuf:(char *)arg4 aLen:(int)arg5 time:(id)arg6 delegete:(id)arg7 userInfo:(id)arg8 rpEntry:(unsigned long long)arg9;
- (long long)startNaviRoutePlan:(int)arg1 routePlanURL:(id)arg2 routePlanType:(int)arg3 routePlanMode:(_Bool)arg4 naviNodes:(id)arg5 time:(id)arg6 delegete:(id)arg7 userInfo:(id)arg8 produceOperationID:(_Bool)arg9 lightNavi:(_Bool)arg10;
- (long long)startNaviRoutePlan:(int)arg1 routePlanURL:(id)arg2 routePlanType:(int)arg3 routePlanMode:(_Bool)arg4 naviNodes:(id)arg5 time:(id)arg6 delegete:(id)arg7 userInfo:(id)arg8 produceOperationID:(_Bool)arg9;
- (long long)startNaviRoutePlan:(int)arg1 routePlanURL:(id)arg2 routePlanType:(int)arg3 routePlanMode:(_Bool)arg4 naviNodes:(id)arg5 time:(id)arg6 delegete:(id)arg7 userInfo:(id)arg8;
- (_Bool)isExceptionReportMode:(id)arg1;
- (long long)startNaviRoutePlan:(int)arg1 routePlanURL:(id)arg2 routePlanType:(int)arg3 routePlanMode:(_Bool)arg4 naviNodes:(id)arg5 time:(id)arg6 delegete:(id)arg7 userInfo:(id)arg8 rpEntry:(unsigned long long)arg9;
- (void)mapRouteCarPageHaveShown:(id)arg1;
- (void)mapRouteCarPageHaveShown;
- (void)routePlanSourceStatistic:(id)arg1;
- (void)startRoutePlan:(int)arg1 delegete:(id)arg2 userInfo:(id)arg3 lightNavi:(_Bool)arg4;
- (void)startRoutePlanNaviSDKInner:(int)arg1 delegete:(id)arg2 userInfo:(id)arg3;
- (void)startRoutePlan:(int)arg1 delegete:(id)arg2 userInfo:(id)arg3;
- (void)dealloc;
- (id)init;
- (void)setStatisticsParam:(id)arg1;
- (id)statisticsParam;
- (void)addStatisticFromExternal:(id)arg1;
- (void)logStaticEventOfStartRoutePlan;
- (id)getWholeRoutePlanStatData;
- (void)setRoutePlanSucessStatisticParam:(int)arg1;
- (void)doStatisticAfterRoutePlanSuccess;
- (void)addMapStatisticRouteplanAction;
- (void)setMapStatistics:(_Bool)arg1;
- (void)doStatisticWhenRouteCalcFinish:(struct _NE_RoutePlan_Result_t *)arg1;
- (void)statisticWhenSearchFinish:(_Bool)arg1;
- (void)doRoutePlanStatistics:(_Bool)arg1 errorCode:(long long)arg2;
- (void)doRoutePlanSuccessStatistics:(_Bool)arg1;
- (void)routePlanStatisticsParams:(_Bool)arg1 errorCode:(int)arg2 completion:(CDUnknownBlockType)arg3;
- (void)saveErrorCodeToFile:(long long)arg1;
- (void)doStatisticAfterRoutePlanFailed:(int)arg1;
- (void)setRealPreference:(int)arg1;
- (void)handleSearchFailed;
- (void)doAfterSearch:(id)arg1;
- (void)jumpToRouteplan:(id)arg1;
- (void)doSearch:(id)arg1;
- (void)startSearch:(id)arg1;
- (void)stopSearchServices;
- (void)startSearchServices;
- (void)updateMapNodes;
- (id)lastMapNodeFilePath;
- (void)saveLastMapNodeToLocalFile:(id)arg1;
- (id)getLastMapNodeFromLocalFile;
- (int)bnComeFromToNe:(int)arg1;
- (int)getBNRouteData_Comfrom:(id)arg1;
- (int)routePlanComeFrom:(id)arg1;
- (void)setFatherNodeViewPoint:(id)arg1 fatherNode:(id)arg2;
- (long long)getStartNode:(struct _NE_RouteNode_t *)arg1 endNodes:(CVArray_f7969e8f *)arg2 fromNodeList:(id)arg3;
- (void)getStartNode:(struct _NE_RouteNode_t *)arg1 fromNode:(id)arg2;
- (long long)getStartNode:(struct _NE_RouteNode_t *)arg1 endNodes:(CVArray_f7969e8f *)arg2;
- (_Bool)isCanStartRoutePlan;
- (_Bool)setRoutePlanNodes:(id)arg1;
- (void)refreshRouteNode:(CVArray_f7969e8f)arg1;
- (id)checkRoutePlanOrSearch:(id)arg1;
- (long long)GetCurrentSelectRouteIdx;
- (id)getCurrentRouteDetailInfo:(int)arg1;
- (id)getCurRouteDetailInfo:(int)arg1;
- (id)getLackedDataList;
- (void)cleanAllNodeInfo;
- (struct _NE_RouteNode_t)getNENode:(id)arg1;
- (struct _RP_WayPos_t)getWayPos:(id)arg1;
- (struct _NE_Pos_t)getNEPos:(id)arg1;
- (_Bool)checkIfAvoidTrafficJamAvailable;
- (_Bool)offlineDataAllReady;
- (id)checkDataAllReady;
- (id)getDistictByNode:(id)arg1;
- (id)checkDistanceInNodes:(id)arg1;
- (_Bool)checkDistanceIsOK;
- (_Bool)clearAllNode;
- (_Bool)setStartNodeWithMyLoc;
- (id)nodeOfMyLoc;
- (id)getLastNode;
- (id)getNodeAtIndex:(long long)arg1;
- (id)getNearestPointInRoute:(id)arg1;
- (id)getNaviNodeAtIndex:(long long)arg1;
- (unsigned long long)getCurRouteNum;
- (_Bool)isGoHomeOrCompany;
- (long long)getCurNodeCount;
- (void)setNaviNodes:(id)arg1;
- (_Bool)setNode:(id)arg1 atIndex:(long long)arg2;
- (_Bool)deleteViaNodeAtIndex:(int)arg1;
- (void)deleteViaNodeBackupAtIndex:(long long)arg1;
- (_Bool)deleteFirstViaNode;
- (id)mergeTheSameNaviInfo:(id)arg1;
- (id)convertToNaviNode:(id)arg1;
- (id)convertBNNodeToBNaviNode:(id)arg1;
- (void)resetLastMapNodeID:(id)arg1;
- (id)lastMapNode;
- (void)resetMapNodes:(id)arg1;
@property(nonatomic) long long routePlanOpID;
@property(nonatomic) long long updateRoadConditionOpID;
@property(nonatomic) long long operationID;
@property(nonatomic) _Bool operationIsDone; // @dynamic operationIsDone;
@property(retain, nonatomic) NSMutableArray *operationArray; // @dynamic operationArray;
- (long long)produceOperationID;
- (void)doNextOperation;
- (_Bool)removeOperationByID:(long long)arg1;
- (long long)enterQueueWithRoadConditionType:(int)arg1 delegate:(id)arg2 userInfo:(id)arg3;
- (long long)enterQueueWithEMode:(int)arg1 routePlanUrl:(id)arg2 routePlanType:(int)arg3 routePlanMode:(_Bool)arg4 naviNodes:(id)arg5 time:(id)arg6 delegete:(id)arg7 userInfo:(id)arg8;
- (void)clearPbData;
- (void)cancelLightSearch;
- (void)handleSendLightRoutePlanFailed;
- (void)setLightCalcRouteErrror:(long long)arg1;
- (void)doCancelRouteplan:(id)arg1;
- (void)CancelRequestID;
- (void)sendRoutePlanToMap:(id)arg1 timeOut:(long long)arg2;

@end

