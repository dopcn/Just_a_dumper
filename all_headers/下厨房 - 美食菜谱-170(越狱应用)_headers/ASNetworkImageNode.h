//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "ASImageNode.h"

@class NSArray, NSURL, NSUUID, UIImage;
@protocol ASImageCacheProtocol, ASImageDownloaderProtocol, ASNetworkImageNodeDelegate;

@interface ASNetworkImageNode : ASImageNode
{
    id <ASNetworkImageNodeDelegate> _delegate;
    NSArray *_URLs;
    UIImage *_defaultImage;
    NSUUID *_cacheUUID;
    id _downloadIdentifier;
    id _downloadIdentifierForProgressBlock;
    _Bool _imageLoaded;
    _Bool _imageWasSetExternally;
    double _currentImageQuality;
    double _renderedImageQuality;
    _Bool _shouldRenderProgressImages;
    struct {
        unsigned int delegateDidStartFetchingData:1;
        unsigned int delegateDidFailWithError:1;
        unsigned int delegateDidFinishDecoding:1;
        unsigned int delegateDidLoadImage:1;
    } _delegateFlags;
    id <ASImageDownloaderProtocol> _downloader;
    struct {
        unsigned int downloaderImplementsSetProgress:1;
        unsigned int downloaderImplementsSetPriority:1;
        unsigned int downloaderImplementsAnimatedImage:1;
        unsigned int downloaderImplementsCancelWithResume:1;
        unsigned int downloaderImplementsDownloadURLs:1;
    } _downloaderFlags;
    id <ASImageCacheProtocol> _cache;
    struct {
        unsigned int cacheSupportsClearing:1;
        unsigned int cacheSupportsSynchronousFetch:1;
        unsigned int cacheSupportsCachedURLs:1;
    } _cacheFlags;
    _Bool _shouldCacheImage;
}

@property(nonatomic) _Bool shouldCacheImage; // @synthesize shouldCacheImage=_shouldCacheImage;
- (void).cxx_destruct;
- (void)displayDidFinish;
- (void)_lazilyLoadImageIfNecessary;
- (void)_downloadImageWithCompletion:(CDUnknownBlockType)arg1;
- (void)_locked_cancelImageDownloadWithResumePossibility:(_Bool)arg1;
- (void)_cancelImageDownloadWithResumePossibility:(_Bool)arg1;
- (void)_locked_cancelDownloadAndClearImageWithResumePossibility:(_Bool)arg1;
- (void)_cancelDownloadAndClearImageWithResumePossibility:(_Bool)arg1;
- (void)_updateProgressImageBlockOnDownloaderIfNeeded;
- (void)handleProgressImage:(id)arg1 progress:(double)arg2 downloadIdentifier:(id)arg3;
- (void)didEnterPreloadState;
- (void)didExitPreloadState;
- (void)didExitVisibleState;
- (void)didEnterVisibleState;
- (void)displayWillStartAsynchronously:(_Bool)arg1;
- (_Bool)placeholderShouldPersist;
@property(nonatomic) _Bool shouldRenderProgressImages;
@property(nonatomic) __weak id <ASNetworkImageNodeDelegate> delegate;
@property(readonly, nonatomic) double renderedImageQuality;
- (void)setRenderedImageQuality:(double)arg1;
- (void)_locked_setCurrentImageQuality:(double)arg1;
- (void)_setCurrentImageQuality:(double)arg1;
@property(readonly, nonatomic) double currentImageQuality;
- (void)setCurrentImageQuality:(double)arg1;
@property(retain, nonatomic) UIImage *defaultImage;
- (void)_locked_setDefaultImage:(id)arg1;
@property(retain, nonatomic) NSArray *URLs;
- (void)setURLs:(id)arg1 resetToDefault:(_Bool)arg2;
@property(retain, nonatomic) NSURL *URL;
- (void)setURL:(id)arg1 resetToDefault:(_Bool)arg2;
- (void)_locked__setImage:(id)arg1;
- (void)_setImage:(id)arg1;
- (void)_locked_setImage:(id)arg1;
@property(retain, nonatomic) UIImage *image; // @dynamic image;
- (void)dealloc;
- (id)init;
- (id)initWithCache:(id)arg1 downloader:(id)arg2;

@end

