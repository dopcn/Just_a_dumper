//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <SpriteKit/SKScene.h>

#import "SKSceneDelegate-Protocol.h"
#import "VIRunGameNodeDelegate-Protocol.h"

@class NSArray, NSString, SKAction, SKSpriteNode;
@protocol VIRunGameSceneDelegate;

@interface VIRunGameScene : SKScene <SKSceneDelegate, VIRunGameNodeDelegate>
{
    _Bool _touching;
    id <VIRunGameSceneDelegate> _gameDelegate;
    double _mapScale;
    NSArray *_mapList;
    double _mapHeight;
    SKSpriteNode *_contentNode;
    SKSpriteNode *_userNode;
    SKSpriteNode *_avatarNode;
    SKAction *_auraAction;
    SKSpriteNode *_donateNode;
    SKAction *_pongAction;
    NSArray *_userGoingLocations;
    CDUnknownBlockType _updateLocationsCompletion;
    double _velocity;
}

@property(nonatomic) _Bool touching; // @synthesize touching=_touching;
@property(nonatomic) double velocity; // @synthesize velocity=_velocity;
@property(copy, nonatomic) CDUnknownBlockType updateLocationsCompletion; // @synthesize updateLocationsCompletion=_updateLocationsCompletion;
@property(retain, nonatomic) NSArray *userGoingLocations; // @synthesize userGoingLocations=_userGoingLocations;
@property(retain, nonatomic) SKAction *pongAction; // @synthesize pongAction=_pongAction;
@property(retain, nonatomic) SKSpriteNode *donateNode; // @synthesize donateNode=_donateNode;
@property(retain, nonatomic) SKAction *auraAction; // @synthesize auraAction=_auraAction;
@property(retain, nonatomic) SKSpriteNode *avatarNode; // @synthesize avatarNode=_avatarNode;
@property(retain, nonatomic) SKSpriteNode *userNode; // @synthesize userNode=_userNode;
@property(retain, nonatomic) SKSpriteNode *contentNode; // @synthesize contentNode=_contentNode;
@property(nonatomic) double mapHeight; // @synthesize mapHeight=_mapHeight;
@property(retain, nonatomic) NSArray *mapList; // @synthesize mapList=_mapList;
@property(nonatomic) double mapScale; // @synthesize mapScale=_mapScale;
@property(nonatomic) __weak id <VIRunGameSceneDelegate> gameDelegate; // @synthesize gameDelegate=_gameDelegate;
- (void).cxx_destruct;
- (void)touchesCancelled:(id)arg1 withEvent:(id)arg2;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (void)touchesMoved:(id)arg1 withEvent:(id)arg2;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (void)update:(double)arg1 forScene:(id)arg2;
- (void)didPressNode:(id)arg1 distance:(long long)arg2;
- (struct CGPoint)_translateToGameLocationWithSKLocation:(struct CGPoint)arg1;
- (struct CGPoint)_translateLocationInSKViewWithSKLocation:(struct CGPoint)arg1;
- (struct CGPoint)_translateToSceneLocationWithMapLocation:(struct CGPoint)arg1;
- (struct CGPoint)_translateToSKLocationWithLocation:(id)arg1;
- (void)_moveContentNodeWithOffset:(double)arg1;
- (id)nodeForLocation:(id)arg1;
- (void)_receiveTaskFromLocation:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)_receiveCurrencyFromLocation:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)_userReceiveActionFromLocation:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (id)_moveActionWithLocation:(id)arg1;
- (void)_donateNodePong;
- (void)clearVelocity;
- (struct CGPoint)currentLocationOfUser;
- (double)maxOffsetFromCurrentUserPosition;
- (void)setUserAvatar:(id)arg1;
@property(readonly, nonatomic) double mapScaleHeight;
- (void)locateToUserPosition;
- (void)stopAllAnimation;
- (void)startRegularAnimation;
- (void)startGameAnimation;
- (void)updateUserLocation:(id)arg1;
- (void)updateUserLocations:(id)arg1 index:(long long)arg2 animated:(_Bool)arg3 manualReceiveHandler:(CDUnknownBlockType)arg4 completion:(CDUnknownBlockType)arg5;
- (void)updateUserLocations:(id)arg1 animated:(_Bool)arg2 manualReceiveHandler:(CDUnknownBlockType)arg3 completion:(CDUnknownBlockType)arg4;
- (void)updateLocation:(id)arg1 animated:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;
- (void)updateLocations:(id)arg1;
- (_Bool)reloadMapWithMapList:(id)arg1 mapSize:(struct CGSize)arg2;
- (id)initWithSize:(struct CGSize)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

