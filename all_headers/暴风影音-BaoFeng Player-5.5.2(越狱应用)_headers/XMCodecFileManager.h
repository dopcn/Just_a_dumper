//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "XMCodecFileHandleManagerDelegate-Protocol.h"

@class NSDictionary, NSMutableDictionary, NSRunLoop, NSString, NSThread, NSURL, XMCodecFileDBOperation, XMCodecFileHandleManager, XMRunLoopThread;
@protocol XMAudioFileDownloadDelegate;

@interface XMCodecFileManager : NSObject <XMCodecFileHandleManagerDelegate>
{
    NSRunLoop *downloadRunLoop;
    id <XMAudioFileDownloadDelegate> _delegate;
    NSDictionary *_requestExParam;
    unsigned long long _userId;
    NSURL *_authURL;
    NSString *_authResPath;
    NSURL *_cdnURL;
    NSString *_cdnResPath;
    NSString *_cdnHost;
    NSString *_authHost;
    NSString *_downloadPath;
    NSMutableDictionary *_requestQueue;
    NSMutableDictionary *_requestRetryCountDict;
    NSMutableDictionary *_blockIdexDict;
    NSMutableDictionary *_checkMD5Dict;
    NSThread *_downloadThread;
    XMCodecFileDBOperation *_codecFileDBOpt;
    XMCodecFileHandleManager *_codecFileHandleMgr;
    NSMutableDictionary *_cookieDict;
    NSMutableDictionary *_headDict;
    XMRunLoopThread *_runLoopThread;
}

+ (id)getVersion;
@property(retain, nonatomic) XMRunLoopThread *runLoopThread; // @synthesize runLoopThread=_runLoopThread;
@property(retain, nonatomic) NSMutableDictionary *headDict; // @synthesize headDict=_headDict;
@property(retain, nonatomic) NSMutableDictionary *cookieDict; // @synthesize cookieDict=_cookieDict;
@property(retain, nonatomic) XMCodecFileHandleManager *codecFileHandleMgr; // @synthesize codecFileHandleMgr=_codecFileHandleMgr;
@property(retain, nonatomic) XMCodecFileDBOperation *codecFileDBOpt; // @synthesize codecFileDBOpt=_codecFileDBOpt;
@property(retain, nonatomic) NSThread *downloadThread; // @synthesize downloadThread=_downloadThread;
@property(retain, nonatomic) NSMutableDictionary *checkMD5Dict; // @synthesize checkMD5Dict=_checkMD5Dict;
@property(retain, nonatomic) NSMutableDictionary *blockIdexDict; // @synthesize blockIdexDict=_blockIdexDict;
@property(retain, nonatomic) NSMutableDictionary *requestRetryCountDict; // @synthesize requestRetryCountDict=_requestRetryCountDict;
@property(retain, nonatomic) NSMutableDictionary *requestQueue; // @synthesize requestQueue=_requestQueue;
@property(retain, nonatomic) NSString *downloadPath; // @synthesize downloadPath=_downloadPath;
@property(retain, nonatomic) NSString *authHost; // @synthesize authHost=_authHost;
@property(retain, nonatomic) NSString *cdnHost; // @synthesize cdnHost=_cdnHost;
@property(retain, nonatomic) NSString *cdnResPath; // @synthesize cdnResPath=_cdnResPath;
@property(retain, nonatomic) NSURL *cdnURL; // @synthesize cdnURL=_cdnURL;
@property(retain, nonatomic) NSString *authResPath; // @synthesize authResPath=_authResPath;
@property(retain, nonatomic) NSURL *authURL; // @synthesize authURL=_authURL;
@property(nonatomic) unsigned long long userId; // @synthesize userId=_userId;
@property(retain, nonatomic) NSDictionary *requestExParam; // @synthesize requestExParam=_requestExParam;
@property(nonatomic) id <XMAudioFileDownloadDelegate> delegate; // @synthesize delegate=_delegate;
- (void)didGetFileHandle:(id)arg1 error:(id)arg2;
- (void)finalGetError:(id)arg1 withTrackId:(id)arg2;
- (void)checkDataMD5:(id)arg1 withBlockIndex:(int)arg2 withTrackId:(unsigned long long)arg3;
- (void)getDataMD5:(id)arg1 withMD5String:(id)arg2;
- (void)doDownloadRawDataCheck:(unsigned long long)arg1;
- (void)pauseRawDataCheck:(unsigned long long)arg1;
- (void)endRawDataCheck:(unsigned long long)arg1;
- (void)didRawDataToWrite:(id)arg1;
- (void)startRawDataCheck:(unsigned long long)arg1;
- (void)doDownloadDataCheck:(unsigned long long)arg1;
- (void)updateAudioDataDownloadWithTrackId:(unsigned long long)arg1 withProcessBlockIndex:(unsigned long long)arg2 withTotalIndex:(unsigned long long)arg3;
- (void)setAudioDataDownloadOkStatus:(unsigned long long)arg1;
- (id)getAudioDataDownloadingPath:(unsigned long long)arg1;
- (id)getAudioDataDownloadPathV2:(unsigned long long)arg1;
- (id)getAudioDataDownloadPath:(unsigned long long)arg1;
- (id)getAudioDataProtocolVersion:(unsigned long long)arg1;
- (_Bool)updateAudioDownloadStatus:(long long)arg1 withTrackId:(unsigned long long)arg2;
- (long long)getAudioDownloadStatusV2:(unsigned long long)arg1;
- (long long)getAudioDownloadStatus:(unsigned long long)arg1;
- (void)didNeedRetryDownload:(unsigned long long)arg1;
- (void)doneRequest:(unsigned long long)arg1;
- (void)delayReTryRequest:(id)arg1;
- (void)didRequestFailedMayCauseByCarrier:(id)arg1 withRequestStatus:(int)arg2;
- (void)didRequestFailed:(id)arg1 errorCode:(int)arg2 errorData:(id)arg3;
- (void)didNeedDownloadAuth:(id)arg1;
- (void)didRequestFailedMayCauseByCarrier:(id)arg1 withError:(id)arg2;
- (void)didErrorDownloadTrack:(unsigned long long)arg1 withErrorData:(id)arg2;
- (void)didGetAudioFileDownload:(unsigned long long)arg1 withMetaData:(id)arg2;
- (void)cancelGetEncryptedAudioDataWithTrackId:(unsigned long long)arg1;
- (void)startGetEncryptedAudioDataWithTrackId:(unsigned long long)arg1 withParam:(id)arg2;
- (void)addValue:(id)arg1 forHTTPHeaderField:(id)arg2;
- (void)printLogwithError:(id)arg1;
- (void)deleteDownloadImComplete:(unsigned long long)arg1;
- (void)renameDownloadWithTrackId:(unsigned long long)arg1;
- (void)clearAllDownloadData;
- (void)deleteDownloadWithTrackIdV2:(unsigned long long)arg1;
- (void)deleteDownloadWithTrackId:(unsigned long long)arg1;
- (void)pauseDownloadWithTrackId:(unsigned long long)arg1;
- (void)pauseDownload:(id)arg1;
- (void)doDownloadRequest:(id)arg1;
- (void)startDownloadWithTrackId:(unsigned long long)arg1;
- (void)clearCookie;
- (void)addCookie:(id)arg1 withKey:(id)arg2;
- (id)initWithUserId:(unsigned long long)arg1 withDownloadPath:(id)arg2 usingDatabase:(_Bool)arg3;
- (id)initWithUserId:(unsigned long long)arg1 withDownloadPath:(id)arg2;
- (void)createNeedFoder;
- (void)requestThread;
- (void)innerInit:(_Bool)arg1;
- (_Bool)checkValidate;
- (id)init;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

