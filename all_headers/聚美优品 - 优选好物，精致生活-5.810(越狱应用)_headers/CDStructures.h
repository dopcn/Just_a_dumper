//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

@class NSArray, NSAttributedString, NSCharacterSet, UIColor;

#pragma mark Function Pointers and Blocks

typedef void (*CDUnknownFunctionPointerType)(void); // return type and parameters are unknown

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct APTaskInfoData {
    unsigned char _field1[30];
};

struct ASDisplayNodeFlags {
    unsigned int synchronous:1;
    unsigned int layerBacked:1;
    unsigned int displaysAsynchronously:1;
    unsigned int shouldRasterizeDescendants:1;
    unsigned int shouldBypassEnsureDisplay:1;
    unsigned int displaySuspended:1;
    unsigned int implementsDrawRect:1;
    unsigned int implementsImageDisplay:1;
    unsigned int implementsDrawParameters:1;
    unsigned int isMeasured:1;
    unsigned int isEnteringHierarchy:1;
    unsigned int isExitingHierarchy:1;
    unsigned int isInHierarchy:1;
    unsigned int visibilityNotificationsDisabled:4;
};

struct ASRangeGeometry {
    struct CGRect _field1;
    struct CGRect _field2;
};

struct ASTextKitAttributes {
    NSAttributedString *attributedString;
    NSAttributedString *truncationAttributedString;
    NSCharacterSet *avoidTailTruncationSet;
    long long lineBreakMode;
    unsigned long long maximumNumberOfLines;
    NSArray *exclusionPaths;
    struct CGSize shadowOffset;
    UIColor *shadowColor;
    double shadowOpacity;
    double shadowRadius;
    CDUnknownFunctionPointerType layoutManagerFactory;
};

struct AURenderCallbackStruct {
    CDUnknownFunctionPointerType inputProc;
    void *inputProcRefCon;
};

struct AVAppAsyncStatistic {
    unsigned long long size;
    long long buf_backwards;
    long long buf_forwards;
    long long buf_capacity;
};

struct AVAudioCtrlProxy {
    CDUnknownFunctionPointerType *_field1;
    CDUnknownFunctionPointerType *_field2;
    struct CAsynCallProxy *_field3;
};

struct AVBasicRoomDeletateImp {
    CDUnknownFunctionPointerType *_field1;
    id _field2;
    _Bool _field3;
};

struct AVCallbackMainThreadSafeDelegate<tencent::av::AVContextProxy> {
    struct AVCallbackSafeEntity<tencent::av::AVContextProxy> *_field1;
    struct AVCallbackMainThreadSwitcher *_field2;
};

struct AVCallbackMainThreadSafeDelegate<tencent::av::AVRoomProxy> {
    struct AVCallbackSafeEntity<tencent::av::AVRoomProxy> *_field1;
    struct AVCallbackMainThreadSwitcher *_field2;
};

struct AVCallbackMainThreadSwitcher;

struct AVCallbackSafeEntity<tencent::av::AVContextProxy>;

struct AVCallbackSafeEntity<tencent::av::AVRoomProxy>;

struct AVCameraDeviceIOS {
    CDUnknownFunctionPointerType *_field1;
    CDUnknownFunctionPointerType *_field2;
    struct CAsynCallProxy *_field3;
    CDUnknownFunctionPointerType *_field4;
    int _field5;
    int _field6;
    int _field7;
    long long _field8;
    int _field9;
    int _field10;
    int _field11;
    _Bool _field12;
    CDUnknownFunctionPointerType _field13;
    void *_field14;
    int _field15;
    int _field16;
};

struct AVContextProxy {
    CDUnknownFunctionPointerType *_field1;
    CDUnknownFunctionPointerType *_field2;
    struct CAsynCallProxy *_field3;
    struct AVCallbackMainThreadSafeDelegate<tencent::av::AVContextProxy> _field4;
    struct Delegate *_field5;
    CDUnknownFunctionPointerType _field6;
    void *_field7;
    struct AVCoreRoomMultiDelegatePtr<tencent::av::AVContextProxy> _field8;
    struct AVRoomProxy _field9;
    struct AVAudioCtrlProxy _field10;
    struct AVVideoCtrlProxy _field11;
    struct AVCoreContext *_field12;
};

struct AVCoreContext;

struct AVCoreRoomMultiDelegate<tencent::av::AVContextProxy>;

struct AVCoreRoomMultiDelegatePtr<tencent::av::AVContextProxy> {
    struct AVCoreRoomMultiDelegate<tencent::av::AVContextProxy> *_field1;
};

struct AVEnableCallbackSafeImpl<VideoCallback>;

struct AVEnableCameraDelegate<VideoCallback> {
    struct AVEnableCallbackSafeImpl<VideoCallback> *_field1;
};

struct AVEndpoint {
    CDUnknownFunctionPointerType *_field1;
};

struct AVMessage {
    int what;
    int arg1;
    int arg2;
    struct AVMessage *next;
};

struct AVRequestViewCallback<tencent::av::AVRoomProxy>;

struct AVRequestViewCallbackPtr<tencent::av::AVRoomProxy> {
    struct AVRequestViewCallback<tencent::av::AVRoomProxy> *_field1;
};

struct AVRoomProxy {
    CDUnknownFunctionPointerType *_field1;
    CDUnknownFunctionPointerType *_field2;
    struct CAsynCallProxy *_field3;
    struct AVCallbackMainThreadSafeDelegate<tencent::av::AVRoomProxy> _field4;
    struct AVCallbackMainThreadSafeDelegate<tencent::av::AVRoomProxy> _field5;
    struct AVCallbackMainThreadSafeDelegate<tencent::av::AVRoomProxy> _field6;
    CDUnknownFunctionPointerType _field7;
    void *_field8;
    CDUnknownFunctionPointerType _field9;
    void *_field10;
    CDUnknownFunctionPointerType _field11;
    void *_field12;
    CDUnknownFunctionPointerType _field13;
    void *_field14;
    struct AVRequestViewCallbackPtr<tencent::av::AVRoomProxy> _field15;
};

struct AVSwitchCallbackSafeImpl<VideoCallback>;

struct AVSwitchDelegate<VideoCallback> {
    struct AVSwitchCallbackSafeImpl<VideoCallback> *_field1;
};

struct AVVideoCtrlProxy {
    CDUnknownFunctionPointerType *_field1;
    CDUnknownFunctionPointerType *_field2;
    struct CAsynCallProxy *_field3;
};

struct Array;

struct AtomicSharedPtr<realm::_impl::CollectionNotifier, true> {
    struct shared_ptr<realm::_impl::CollectionNotifier> m_ptr;
};

struct AudioComponentDescription {
    unsigned int componentType;
    unsigned int componentSubType;
    unsigned int componentManufacturer;
    unsigned int componentFlags;
    unsigned int componentFlagsMask;
};

struct AudioFrame {
    basic_string_1cdf7af0 _field1;
    struct AudioFrameDesc _field2;
    unsigned int _field3;
    char *_field4;
};

struct AudioFrameDesc {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    int _field4;
};

struct AudioStreamBasicDescription {
    double mSampleRate;
    unsigned int mFormatID;
    unsigned int mFormatFlags;
    unsigned int mBytesPerPacket;
    unsigned int mFramesPerPacket;
    unsigned int mBytesPerFrame;
    unsigned int mChannelsPerFrame;
    unsigned int mBitsPerChannel;
    unsigned int mReserved;
};

struct AuidoInternalCallback {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    void *_field3;
};

struct BCSegment {
    union BCPoint _field1;
    union BCPoint _field2;
};

struct BacklinkColumn;

struct BasicRow<const realm::Table> {
    struct BasicTableRef<realm::Table> m_table;
    unsigned long long m_row_ndx;
    struct RowBase *m_prev;
    struct RowBase *m_next;
};

struct BasicRow<realm::Table> {
    struct BasicTableRef<realm::Table> m_table;
    unsigned long long m_row_ndx;
    struct RowBase *m_prev;
    struct RowBase *m_next;
};

struct BasicTableRef<realm::Table> {
    struct Table *m_ptr;
};

struct BinaryData {
    char *m_data;
    unsigned long long m_size;
};

struct BindStateBase;

struct BpTree<long long> {
    struct unique_ptr<realm::Array, std::__1::default_delete<realm::Array>> m_root;
};

struct CAMapSrvProj {
    CDUnknownFunctionPointerType *_field1;
    struct tagAMAPSRVPROJECTION _field2;
    int _field3;
};

struct CAMapSrvVectorOverLay {
    CDUnknownFunctionPointerType *_field1;
    void *_field2;
    void *_field3;
    int _field4;
    int _field5;
    int _field6;
    int _field7;
    int _field8;
    int _field9;
    int _field10;
    struct CAMapSrvView *_field11;
    long long _field12;
    int _field13;
    int _field14;
    struct CAMapSrvView *_field15;
    void *_field16;
    void *_field17;
    void *_field18;
    void *_field19;
    int _field20;
};

struct CAMapSrvView;

struct CATransform3D {
    double m11;
    double m12;
    double m13;
    double m14;
    double m21;
    double m22;
    double m23;
    double m24;
    double m31;
    double m32;
    double m33;
    double m34;
    double m41;
    double m42;
    double m43;
    double m44;
};

struct CAnAppInstance {
    CDUnknownFunctionPointerType *_field1;
    struct CAnServiceViewMgr *_field2;
    struct CAnResTmStmpRecord *_field3;
};

struct CAnResTmStmpRecord;

struct CAnServiceViewMgr;

struct CAsynCallProxy;

struct CGAffineTransform {
    double a;
    double b;
    double c;
    double d;
    double tx;
    double ty;
};

struct CGColor;

struct CGPoint {
    double x;
    double y;
};

struct CGRect {
    struct CGPoint origin;
    struct CGSize size;
};

struct CGSize {
    double width;
    double height;
};

struct CLLocationCoordinate2D {
    double latitude;
    double longitude;
};

struct CNetworkEvent {
    CDUnknownFunctionPointerType *_field1;
    basic_string_a490aa4c _field2;
    struct CQQUin _field3;
    basic_string_a490aa4c _field4;
};

struct CNetworkRequestSO {
    CDUnknownFunctionPointerType *_field1;
    struct CNetworkEvent _field2;
    int _field3;
    int _field4;
    int _field5;
    int _field6;
    int _field7;
    _Bool _field8;
    char _field9;
    char _field10;
    char _field11;
    char _field12;
    basic_string_a490aa4c _field13;
    int _field14;
    int _field15;
    _Bool _field16;
    int _field17;
    long long _field18;
    long long _field19;
    _Bool _field20;
};

struct CNetworkResponseSO {
    CDUnknownFunctionPointerType *_field1;
    struct CNetworkEvent _field2;
    int _field3;
    int _field4;
    basic_string_a490aa4c _field5;
};

struct CQQUin {
    CDUnknownFunctionPointerType *_field1;
    char _field2;
    basic_string_a490aa4c _field3;
};

struct Callback<void ()> {
    struct scoped_refptr<QAVBase::internal::BindStateBase> _field1;
    CDUnknownFunctionPointerType _field2;
};

struct ChangesetCooker;

struct Chunk;

struct CollectionChangeSet {
    struct IndexSet deletions;
    struct IndexSet insertions;
    struct IndexSet modifications;
    struct IndexSet modifications_new;
    struct vector<realm::CollectionChangeSet::Move, std::__1::allocator<realm::CollectionChangeSet::Move>> moves;
    struct vector<realm::IndexSet, std::__1::allocator<realm::IndexSet>> columns;
};

struct CollectionNotifier;

struct Column<long long> {
    CDUnknownFunctionPointerType *_vptr$ColumnBase;
    unsigned long long m_column_ndx;
    struct unique_ptr<realm::StringIndex, std::__1::default_delete<realm::StringIndex>> m_search_index;
    struct BpTree<long long> m_tree;
};

struct Condition {
    int type;
    basic_string_a490aa4c user_id;
    struct pair<std::__1::basic_string<char>, std::__1::basic_string<char>> key_value;
};

struct Config {
    basic_string_a490aa4c path;
    struct BinaryData realm_data;
    struct vector<char, std::__1::allocator<char>> encryption_key;
    _Bool in_memory;
    unsigned char schema_mode;
    struct Optional<realm::Schema> schema;
    unsigned long long schema_version;
    struct function<void (std::__1::shared_ptr<realm::Realm>, std::__1::shared_ptr<realm::Realm>, realm::Schema &)> migration_function;
    struct function<void (std::__1::shared_ptr<realm::Realm>)> initialization_function;
    struct function<bool (unsigned long long, unsigned long long)> should_compact_on_launch_function;
    _Bool cache;
    _Bool disable_format_upgrade;
    _Bool automatic_change_notifications;
    struct Optional<unsigned long> execution_context;
    struct shared_ptr<realm::SyncConfig> sync_config;
    _Bool force_sync_history;
};

struct CustomElem {
    basic_string_a490aa4c _field1;
    basic_string_a490aa4c _field2;
    basic_string_a490aa4c _field3;
    basic_string_a490aa4c _field4;
};

struct Delegate;

struct Descriptor;

struct DescriptorOrdering {
    struct SortDescriptor sort;
    struct SortDescriptor distinct;
};

struct DomainMonitor {
    basic_string_a490aa4c _field1;
    basic_string_a490aa4c _field2;
    basic_string_a490aa4c _field3;
    long long _field4;
    long long _field5;
    long long _field6;
    long long _field7;
    long long _field8;
    basic_string_a490aa4c _field9;
    basic_string_a490aa4c _field10;
    long long _field11;
    int _field12;
    int _field13;
    struct vector<char, std::__1::allocator<char>> _field14;
    basic_string_a490aa4c _field15;
};

struct DomainSource {
    basic_string_a490aa4c _field1;
    int _field2;
    _Bool _field3;
    _Bool _field4;
};

struct Draft {
    struct vector<imcore::Elem, std::__1::allocator<imcore::Elem>> elems;
    basic_string_a490aa4c user_define;
    unsigned long long uint64_edit_time;
};

struct Elem {
    basic_string_a490aa4c _field1;
    int _field2;
    struct TextElem _field3;
    struct ImageElem _field4;
    struct SoundElem _field5;
    struct CustomElem _field6;
    struct FileElem _field7;
    struct GroupTipsElem _field8;
    struct FaceElem _field9;
    struct LocationElem _field10;
    struct GroupReportElem _field11;
    struct ProfileChangeElem _field12;
    struct FriendChangeElem _field13;
    struct VideoElem _field14;
    basic_string_a490aa4c _field15;
};

struct EventRecord {
    basic_string_a490aa4c _field1;
    basic_string_a490aa4c _field2;
    basic_string_a490aa4c _field3;
    _Bool _field4;
    long long _field5;
    long long _field6;
    basic_string_a490aa4c _field7;
    long long _field8;
    int _field9;
};

struct EventRecordPackage {
    struct vector<beacon::EventRecord, std::__1::allocator<beacon::EventRecord>> _field1;
};

struct FaceElem {
    int _field1;
    basic_string_a490aa4c _field2;
};

struct FileElem {
    basic_string_a490aa4c _field1;
    basic_string_a490aa4c _field2;
    long long _field3;
    int _field4;
    basic_string_a490aa4c _field5;
    int _field6;
    int _field7;
    struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> _field8;
};

struct FriendChangeElem {
    unsigned int _field1;
    struct vector<imcore::FriendChangeUserInfo, std::__1::allocator<imcore::FriendChangeUserInfo>> _field2;
    unsigned long long _field3;
    unsigned long long _field4;
    unsigned long long _field5;
};

struct FriendChangeUserInfo;

struct FriendProfile {
    basic_string_a490aa4c _field1;
    basic_string_a490aa4c _field2;
    basic_string_a490aa4c _field3;
    basic_string_a490aa4c _field4;
    struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> _field5;
    basic_string_a490aa4c _field6;
    basic_string_a490aa4c _field7;
    unsigned int _field8;
    unsigned int _field9;
    int _field10;
    basic_string_a490aa4c _field11;
    basic_string_a490aa4c _field12;
    basic_string_a490aa4c _field13;
    basic_string_a490aa4c _field14;
    unsigned long long _field15;
    unsigned long long _field16;
    struct map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char>>>> _field17;
    unsigned long long _field18;
};

struct GVCommOprHead {
    CDUnknownFunctionPointerType *_field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned long long _field6;
    unsigned int _field7;
    unsigned int _field8;
    struct RepeatedPtrField<changed::im::groupvideo::commonoperate::RelayInfo> _field9;
    basic_string_a490aa4c *_field10;
    basic_string_a490aa4c *_field11;
    struct RepeatedField<unsigned long long> _field12;
    unsigned int _field13;
    unsigned int _field14;
    basic_string_a490aa4c *_field15;
    struct RepeatedPtrField<std::__1::basic_string<char>> _field16;
    basic_string_a490aa4c *_field17;
    basic_string_a490aa4c *_field18;
    struct RepeatedField<unsigned long long> _field19;
    int _field20;
    unsigned int _field21[1];
};

struct GetProfileOption {
    unsigned long long _field1;
    struct map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char>>>> _field2;
};

struct GroupCacheInfo {
    struct GroupDetailInfo _field1;
    struct GroupSelfInfo _field2;
};

struct GroupDetailInfo {
    basic_string_a490aa4c _field1;
    basic_string_a490aa4c _field2;
    basic_string_a490aa4c _field3;
    basic_string_a490aa4c _field4;
    basic_string_a490aa4c _field5;
    basic_string_a490aa4c _field6;
    basic_string_a490aa4c _field7;
    unsigned long long _field8;
    unsigned int _field9;
    unsigned int _field10;
    unsigned int _field11;
    unsigned int _field12;
    unsigned int _field13;
    unsigned int _field14;
    unsigned int _field15;
    unsigned int _field16;
    unsigned int _field17;
    unsigned int _field18;
    int _field19;
    int _field20;
    struct Msg _field21;
    struct map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char>>>> _field22;
};

struct GroupReportElem {
    unsigned int _field1;
    basic_string_a490aa4c _field2;
    basic_string_a490aa4c _field3;
    basic_string_a490aa4c _field4;
    unsigned long long _field5;
    basic_string_a490aa4c _field6;
    basic_string_a490aa4c _field7;
    basic_string_a490aa4c _field8;
    struct FriendProfile _field9;
    struct NewGroupMemberInfo _field10;
    basic_string_a490aa4c _field11;
};

struct GroupSelfInfo {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
};

struct GroupTipsElem {
    int _field1;
    basic_string_a490aa4c _field2;
    basic_string_a490aa4c _field3;
    basic_string_a490aa4c _field4;
    unsigned int _field5;
    struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> _field6;
    struct vector<imcore::GroupTipsElem_GroupInfo, std::__1::allocator<imcore::GroupTipsElem_GroupInfo>> _field7;
    struct vector<imcore::GroupTipsElem_MemberInfo, std::__1::allocator<imcore::GroupTipsElem_MemberInfo>> _field8;
    struct FriendProfile _field9;
    struct NewGroupMemberInfo _field10;
    struct map<std::__1::basic_string<char>, imcore::FriendProfile, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, imcore::FriendProfile>>> _field11;
    struct map<std::__1::basic_string<char>, imcore::NewGroupMemberInfo, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, imcore::NewGroupMemberInfo>>> _field12;
    unsigned int _field13;
    basic_string_a490aa4c _field14;
};

struct GroupTipsElem_GroupInfo;

struct GroupTipsElem_MemberInfo;

struct Handle<realm::_impl::ListNotifier> {
    struct ListNotifier *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct Handle<realm::_impl::ObjectNotifier> {
    struct ObjectNotifier *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct Handle<realm::_impl::ResultsNotifier> {
    struct ResultsNotifier *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct ICMPHeader {
    unsigned char _field1;
    unsigned char _field2;
    unsigned short _field3;
    unsigned short _field4;
    unsigned short _field5;
};

struct IMSFDataDelegate {
    CDUnknownFunctionPointerType *_field1;
};

struct IMSFHttpSysEngineImplEvent {
    CDUnknownFunctionPointerType *_field1;
};

struct IMSFNetEnvEvent {
    CDUnknownFunctionPointerType *_field1;
};

struct IMSFTcpEngineEvent {
    CDUnknownFunctionPointerType *_field1;
};

struct IPv4Header {
    unsigned char _field1;
    unsigned char _field2;
    unsigned short _field3;
    unsigned short _field4;
    unsigned short _field5;
    unsigned char _field6;
    unsigned char _field7;
    unsigned short _field8;
    unsigned char _field9[4];
    unsigned char _field10[4];
};

struct ImageElem {
    basic_string_a490aa4c _field1;
    int _field2;
    int _field3;
    int _field4;
    int _field5;
    int _field6;
    int _field7;
    int _field8;
    int _field9;
    int _field10;
    basic_string_a490aa4c _field11;
    basic_string_a490aa4c _field12;
    basic_string_a490aa4c _field13;
    int _field14;
    int _field15;
    int _field16;
};

struct IndexSet {
    struct vector<realm::_impl::ChunkedRangeVector::Chunk, std::__1::allocator<realm::_impl::ChunkedRangeVector::Chunk>> m_data;
};

struct IpMonitor {
    basic_string_a490aa4c _field1;
    basic_string_a490aa4c _field2;
    basic_string_a490aa4c _field3;
    int _field4;
    long long _field5;
    long long _field6;
    long long _field7;
    long long _field8;
    long long _field9;
    int _field10;
    int _field11;
    struct vector<char, std::__1::allocator<char>> _field12;
    basic_string_a490aa4c _field13;
};

struct IpSource {
    basic_string_a490aa4c _field1;
    int _field2;
    int _field3;
    _Bool _field4;
};

struct JKConstBuffer {
    struct JKConstPtrRange _field1;
};

struct JKConstPtrRange {
    char *_field1;
    unsigned long long _field2;
};

struct JKEncodeCache {
    id _field1;
    unsigned long long _field2;
    unsigned long long _field3;
};

struct JKEncodeState {
    struct JKManagedBuffer _field1;
    struct JKManagedBuffer _field2;
    unsigned long long _field3;
    struct JKFastClassLookup _field4;
    struct JKEncodeCache _field5[1024];
    unsigned long long _field6;
    unsigned long long _field7;
    unsigned long long _field8;
    id _field9;
    id _field10;
    SEL _field11;
    CDUnknownFunctionPointerType _field12;
    CDUnknownBlockType _field13;
};

struct JKFastClassLookup {
    void *_field1;
    void *_field2;
    void *_field3;
    void *_field4;
    void *_field5;
};

struct JKHashTableEntry {
    unsigned long long _field1;
    id _field2;
    id _field3;
};

struct JKManagedBuffer {
    struct JKPtrRange _field1;
    unsigned long long _field2;
    unsigned long long _field3;
};

struct JKObjCImpCache {
    Class _field1;
    CDUnknownFunctionPointerType _field2;
    CDUnknownFunctionPointerType _field3;
};

struct JKObjectStack {
    void **_field1;
    void **_field2;
    unsigned long long *_field3;
    unsigned long long _field4;
    unsigned long long _field5;
    unsigned long long _field6;
    unsigned long long _field7;
};

struct JKParseState {
    unsigned long long _field1;
    struct JKConstBuffer _field2;
    unsigned long long _field3;
    unsigned long long _field4;
    unsigned long long _field5;
    unsigned long long _field6;
    unsigned long long _field7;
    unsigned long long _field8;
    struct JKParseToken _field9;
    struct JKObjectStack _field10;
    struct JKTokenCache _field11;
    struct JKObjCImpCache _field12;
    id _field13;
    int _field14;
    _Bool _field15;
};

struct JKParseToken {
    struct JKConstPtrRange _field1;
    unsigned long long _field2;
    struct JKTokenValue _field3;
    struct JKManagedBuffer _field4;
};

struct JKPtrRange {
    char *_field1;
    unsigned long long _field2;
};

struct JKTokenCache {
    struct JKTokenCacheItem *_field1;
    unsigned long long _field2;
    unsigned int _field3;
    unsigned char _field4[1024];
};

struct JKTokenCacheItem;

struct JKTokenValue {
    struct JKConstPtrRange _field1;
    unsigned long long _field2;
    unsigned long long _field3;
    CDUnion_abebb5d1 _field4;
    struct JKTokenCacheItem *_field5;
};

struct JMergePoint {
    int _field1;
    int _field2;
};

struct JceInputStream<analyticstaf::BufferReader> {
    char *_field1;
    unsigned long long _field2;
    unsigned long long _field3;
};

struct JceOutputStream<analyticstaf::BufferWriter> {
    char *_field1;
    unsigned long long _field2;
    unsigned long long _field3;
};

struct LinkView;

struct List {
    shared_ptr_130f66cc m_realm;
    struct ObjectSchema *m_object_schema;
    struct shared_ptr<realm::LinkView> m_link_view;
    struct Handle<realm::_impl::ListNotifier> m_notifier;
};

struct ListNotifier;

struct Location {
    char *_field1;
    char *_field2;
    int _field3;
    void *_field4;
};

struct LocationElem {
    basic_string_a490aa4c _field1;
    double _field2;
    double _field3;
};

struct MACoordinateBounds {
    struct CLLocationCoordinate2D northEast;
    struct CLLocationCoordinate2D southWest;
};

struct MACoordinateRegion {
    struct CLLocationCoordinate2D center;
    struct MACoordinateSpan span;
};

struct MACoordinateSpan {
    double latitudeDelta;
    double longitudeDelta;
};

struct MAMapEngineCallBack {
    CDUnknownFunctionPointerType *_field1;
    id _field2;
};

struct MAMapPoint {
    double x;
    double y;
};

struct MAMapRect {
    struct MAMapPoint origin;
    struct MAMapSize size;
};

struct MAMapSize {
    double width;
    double height;
};

struct MAPolygonClipper {
    vector_f60ea51c *_field1;
    unsigned long long _field2;
    struct Vector3<float> *_field3;
    struct Vector3<float> _field4[4];
    struct Vector3<float> _field5[4];
    vector_f60ea51c _field6;
    struct vector<MAClipper::IntersectState, std::__1::allocator<MAClipper::IntersectState>> _field7;
    struct vector<short, std::__1::allocator<short>> _field8;
    vector_195fe69b _field9;
    unsigned short _field10;
    unsigned short _field11;
    unsigned short _field12;
    unsigned short _field13;
    _Bool _field14;
    int _field15;
    vector_195fe69b _field16;
};

struct MAPolygonTriangulator {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    int _field3;
    int _field4;
    vector_f60ea51c *_field5;
    unsigned long long _field6;
    vector_195fe69b _field7;
    struct vector<short, std::__1::allocator<short>> _field8;
    vector_195fe69b _field9;
};

struct MAQuadTreeNode {
    struct MAQuadTreeNode *_field1;
    struct MAQuadTreeNode *_field2;
    struct MAQuadTreeNode *_field3;
    struct MAQuadTreeNode *_field4;
    struct MAMapRect _field5;
    int _field6;
    struct MAQuadTreeNodeData *_field7;
    int _field8;
    int _field9;
};

struct MAQuadTreeNodeData;

struct MATile {
    unsigned int x;
    unsigned int y;
    short zoom;
};

struct MATileOverlayPath {
    long long x;
    long long y;
    long long z;
    double contentScaleFactor;
};

struct MGSwipeAnimationData {
    double from;
    double to;
    double duration;
    double start;
};

struct MixPackage {
    struct map<int, std::__1::vector<char, std::__1::allocator<char>>, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, std::__1::vector<char, std::__1::allocator<char>>>>> _field1;
};

struct ModuleData;

struct ModuleStrategy {
    char _field1;
    char _field2;
    basic_string_a490aa4c _field3;
    struct map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char>>>> _field4;
    struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> _field5;
    struct SpeedMonitorStrategy _field6;
    struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> _field7;
};

struct Move;

struct Msg {
    struct shared_ptr<imcore::MsgNode> msg_;
};

struct MsgNode;

struct Mutex {
    struct _opaque_pthread_mutex_t _m;
};

struct NSDictionary {
    Class _field1;
};

struct NSMutableDictionary {
    Class _field1;
};

struct NSURL {
    Class _field1;
    id _field2;
    id _field3;
    void *_field4;
    void *_field5;
};

struct NewGroupMemberInfo {
    basic_string_a490aa4c _field1;
    int _field2;
    int _field3;
    basic_string_a490aa4c _field4;
    struct map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char>>>> _field5;
};

struct NotificationToken {
    struct AtomicSharedPtr<realm::_impl::CollectionNotifier, true> m_notifier;
    unsigned long long m_token;
};

struct Object {
    shared_ptr_130f66cc m_realm;
    struct ObjectSchema *m_object_schema;
    struct BasicRow<realm::Table> m_row;
    struct Handle<realm::_impl::ObjectNotifier> m_notifier;
};

struct ObjectNotifier;

struct ObjectSchema {
    basic_string_a490aa4c _field1;
    struct vector<realm::Property, std::__1::allocator<realm::Property>> _field2;
    struct vector<realm::Property, std::__1::allocator<realm::Property>> _field3;
    basic_string_a490aa4c _field4;
};

struct OpaqueAudioComponent;

struct OpaqueAudioComponentInstance;

struct Optional<realm::Permission> {
    union {
        struct Permission m_value;
        char m_null_state;
    } ;
    _Bool m_engaged;
};

struct Optional<realm::Schema> {
    union {
        struct Schema m_value;
        char m_null_state;
    } ;
    _Bool m_engaged;
};

struct Optional<std::__1::array<char, 64>> {
    union {
        struct array<char, 64> _field1;
        char _field2;
    } _field1;
    _Bool _field2;
};

struct Optional<std::__1::basic_string<char>> {
    union {
        basic_string_a490aa4c _field1;
        char _field2;
    } _field1;
    _Bool _field2;
};

struct Optional<unsigned long long> {
    CDUnion_f76efdce ;
    _Bool m_engaged;
};

struct Optional<unsigned long> {
    CDUnion_f76efdce ;
    _Bool m_engaged;
};

struct POPAnimatorItem;

struct Permission {
    basic_string_a490aa4c path;
    int access;
    struct Condition condition;
    struct Timestamp updated_at;
};

struct PermissionResults;

struct ProfileChangeElem {
    unsigned int _field1;
    basic_string_a490aa4c _field2;
    basic_string_a490aa4c _field3;
};

struct Property {
    basic_string_a490aa4c _field1;
    unsigned char _field2;
    basic_string_a490aa4c _field3;
    basic_string_a490aa4c _field4;
    struct TaggedBool<realm::IsPrimaryTag> _field5;
    struct TaggedBool<realm::IsIndexedTag> _field6;
    unsigned long long _field7;
};

struct QAVAudioFrameDesc {
    long long SampleRate;
    long long ChannelNum;
    long long Bits;
};

struct QiMeiInfo {
    basic_string_a490aa4c _field1;
    basic_string_a490aa4c _field2;
    basic_string_a490aa4c _field3;
    basic_string_a490aa4c _field4;
    basic_string_a490aa4c _field5;
    basic_string_a490aa4c _field6;
    basic_string_a490aa4c _field7;
    basic_string_a490aa4c _field8;
    basic_string_a490aa4c _field9;
    basic_string_a490aa4c _field10;
    basic_string_a490aa4c _field11;
    basic_string_a490aa4c _field12;
};

struct Query {
    basic_string_a490aa4c error_code;
    struct vector<realm::QueryGroup, std::__1::allocator<realm::QueryGroup>> m_groups;
    struct vector<unsigned long, std::__1::allocator<unsigned long>> m_subtable_path;
    struct shared_ptr<const realm::Descriptor> m_current_descriptor;
    struct BasicTableRef<realm::Table> m_table;
    struct RowIndexes *m_view;
    struct shared_ptr<realm::LinkView> m_source_link_view;
    struct TableViewBase *m_source_table_view;
    struct unique_ptr<realm::TableViewBase, std::__1::default_delete<realm::TableViewBase>> m_owned_source_table_view;
};

struct QueryGroup;

struct RCTJSContextData {
    _Bool _field1;
    id _field2;
    id _field3;
};

struct RLMClassInfo {
    id _field1;
    id _field2;
    struct ObjectSchema *_field3;
    struct vector<RLMObservationInfo *, std::__1::allocator<RLMObservationInfo *>> _field4;
    struct Table *_field5;
    struct vector<RLMClassInfo *, std::__1::allocator<RLMClassInfo *>> _field6;
};

struct RLMObservationInfo {
    struct RLMObservationInfo *_field1;
    struct RLMObservationInfo *_field2;
    struct BasicRow<realm::Table> _field3;
    struct RLMClassInfo *_field4;
    id _field5;
    _Bool _field6;
    unsigned long long _field7;
    id _field8;
    id _field9;
    id _field10;
};

struct RLMSchemaInfo {
    struct unordered_map<NSString *, RLMClassInfo, std::__1::hash<NSString *>, std::__1::equal_to<NSString *>, std::__1::allocator<std::__1::pair<NSString *const, RLMClassInfo>>> m_objects;
};

struct RandomAccessBundleData {
    struct unique_ptr<__sFILE, int (*)(__sFILE *)> bundle;
    unsigned long long baseOffset;
    unsigned long long numTableEntries;
    struct unique_ptr<ModuleData [], std::__1::default_delete<ModuleData []>> table;
};

struct Realm;

struct RecursiveMutex {
    struct _opaque_pthread_mutex_t _m;
};

struct RepeatedField<unsigned long long> {
    unsigned long long *_field1;
    int _field2;
    int _field3;
};

struct RepeatedPtrField<changed::im::groupvideo::commonoperate::RelayInfo> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<std::__1::basic_string<char>> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct ReqBody {
    CDUnknownFunctionPointerType *_field1;
    struct SubReq_0x1 *_field2;
    struct SubReq_0x2 *_field3;
    struct SubReq_0x3 *_field4;
    struct SubReq_0x4 *_field5;
    struct SubReq_0x5 *_field6;
    struct SubReq_0x6 *_field7;
    struct SubReq_0x7 *_field8;
    struct SpeedTestReq_0x8 *_field9;
    struct SpeedResultReportReq_0x9 *_field10;
    struct SubReq_0x101 *_field11;
    int _field12;
    unsigned int _field13[1];
};

struct RequestPackage {
    char _field1;
    basic_string_a490aa4c _field2;
    basic_string_a490aa4c _field3;
    basic_string_a490aa4c _field4;
    basic_string_a490aa4c _field5;
    int _field6;
    struct vector<char, std::__1::allocator<char>> _field7;
    char _field8;
    char _field9;
    basic_string_a490aa4c _field10;
    basic_string_a490aa4c _field11;
    basic_string_a490aa4c _field12;
};

struct ResponsePackage {
    char _field1;
    int _field2;
    struct vector<char, std::__1::allocator<char>> _field3;
    basic_string_a490aa4c _field4;
    char _field5;
    char _field6;
    long long _field7;
    basic_string_a490aa4c _field8;
    basic_string_a490aa4c _field9;
};

struct Results {
    shared_ptr_130f66cc m_realm;
    struct ObjectSchema *m_object_schema;
    struct Query m_query;
    struct TableView m_table_view;
    struct shared_ptr<realm::LinkView> m_link_view;
    struct BasicTableRef<realm::Table> m_table;
    struct DescriptorOrdering m_descriptor_ordering;
    struct Handle<realm::_impl::ResultsNotifier> m_notifier;
    int m_mode;
    int m_update_policy;
    _Bool m_has_used_table_view;
    _Bool m_wants_background_updates;
};

struct ResultsNotifier;

struct RowBase;

struct RowIndexes;

struct RspBody {
    CDUnknownFunctionPointerType *_field1;
    struct SubRsp_0x1 *_field2;
    struct SubRsp_0x2 *_field3;
    struct SubRsp_0x3 *_field4;
    struct SubRsp_0x4 *_field5;
    struct SubRsp_0x5 *_field6;
    struct SubRsp_0x6 *_field7;
    struct SubRsp_0x7 *_field8;
    struct SpeedTestRsp_0x8 *_field9;
    struct SpeedResultReportRsp_0x9 *_field10;
    struct SubRsp_0x101 *_field11;
    int _field12;
    unsigned int _field13[1];
};

struct SDL_AudioSpec {
    int freq;
    unsigned short format;
    unsigned char channels;
    unsigned char silence;
    unsigned short samples;
    unsigned short padding;
    unsigned int size;
    CDUnknownFunctionPointerType callback;
    void *userdata;
};

struct SDL_Class;

struct SDL_SpeedSampler2 {
    long long sample_range;
    long long last_profile_tick;
    long long last_profile_duration;
    long long last_profile_quantity;
    long long last_profile_speed;
};

struct SDL_VoutOverlay {
    int _field1;
    int _field2;
    unsigned int _field3;
    int _field4;
    unsigned short *_field5;
    char **_field6;
    int _field7;
    int _field8;
    int _field9;
    struct SDL_Class *_field10;
    struct SDL_VoutOverlay_Opaque *_field11;
    CDUnknownFunctionPointerType _field12;
    CDUnknownFunctionPointerType _field13;
    CDUnknownFunctionPointerType _field14;
    CDUnknownFunctionPointerType _field15;
    CDUnknownFunctionPointerType _field16;
};

struct SDL_VoutOverlay_Opaque;

struct SSState<POP::Vector4<double>> {
    struct Vector4<double> _field1;
    struct Vector4<double> _field2;
};

struct Schema {
    struct ObjectSchema *__begin_;
    struct ObjectSchema *__end_;
    struct __compressed_pair<realm::ObjectSchema *, std::__1::allocator<realm::ObjectSchema>> {
        struct ObjectSchema *__first_;
    } __end_cap_;
};

struct Session {
    struct shared_ptr<imcore::SessionNode> _field1;
};

struct SessionNode;

struct SidewayHttpNetworkModule {
    void *_field1[100];
    id _field2;
    _Bool _field3;
    struct {
        int _field1;
        int _field2;
        int _field3;
        int _field4;
        int _field5;
    } _field4;
    int _field5;
    int _field6;
    long long _field7;
    _Bool _field8;
    struct set<std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::basic_string<char>>> _field9;
};

struct SortDescriptor {
    struct vector<std::__1::vector<const realm::ColumnBase *, std::__1::allocator<const realm::ColumnBase *>>, std::__1::allocator<std::__1::vector<const realm::ColumnBase *, std::__1::allocator<const realm::ColumnBase *>>>> m_columns;
    struct vector<bool, std::__1::allocator<bool>> m_ascending;
};

struct SoundElem {
    basic_string_a490aa4c _field1;
    int _field2;
    int _field3;
    int _field4;
    basic_string_a490aa4c _field5;
    int _field6;
    int _field7;
    struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> _field8;
};

struct SpeedMonitorPackage {
    struct vector<speedmonitor::IpMonitor, std::__1::allocator<speedmonitor::IpMonitor>> _field1;
    struct vector<speedmonitor::DomainMonitor, std::__1::allocator<speedmonitor::DomainMonitor>> _field2;
    struct vector<speedmonitor::TxHostMonitor, std::__1::allocator<speedmonitor::TxHostMonitor>> _field3;
};

struct SpeedMonitorStrategy {
    struct vector<beacon::IpSource, std::__1::allocator<beacon::IpSource>> _field1;
    struct vector<beacon::DomainSource, std::__1::allocator<beacon::DomainSource>> _field2;
    struct vector<beacon::TxHostSource, std::__1::allocator<beacon::TxHostSource>> _field3;
};

struct SpeedResultReportReq_0x9;

struct SpeedResultReportRsp_0x9;

struct SpeedTestReq_0x8;

struct SpeedTestRsp_0x8;

struct SpringSolver<POP::Vector4<double>> {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
    double _field5;
    double _field6;
    double _field7;
    struct SSState<POP::Vector4<double>> _field8;
    struct Vector4<double> _field9;
    _Bool _field10;
};

struct StringIndex;

struct SubReq_0x1;

struct SubReq_0x101;

struct SubReq_0x2;

struct SubReq_0x3;

struct SubReq_0x4;

struct SubReq_0x5;

struct SubReq_0x6;

struct SubReq_0x7;

struct SubRsp_0x1;

struct SubRsp_0x101;

struct SubRsp_0x2;

struct SubRsp_0x3;

struct SubRsp_0x4;

struct SubRsp_0x5;

struct SubRsp_0x6;

struct SubRsp_0x7;

struct SyncConfig {
    shared_ptr_324a0594 _field1;
    basic_string_a490aa4c _field2;
    int _field3;
    struct function<void (const std::__1::basic_string<char>&, const realm::SyncConfig &, std::__1::shared_ptr<realm::SyncSession>)> _field4;
    function_0cf83702 _field5;
    struct shared_ptr<realm::sync::ClientHistory::ChangesetCooker> _field6;
    struct Optional<std::__1::array<char, 64>> _field7;
    _Bool _field8;
    struct Optional<std::__1::basic_string<char>> _field9;
};

struct SyncSession;

struct SyncUser;

struct TTimerCallBack {
    CDUnknownFunctionPointerType _field1;
    void *_field2;
};

struct Table;

struct TableView {
    CDUnknownFunctionPointerType *_vptr$RowIndexes;
    struct Column<long long> m_row_indexes;
    unsigned long long m_debug_cookie;
    struct BasicTableRef<realm::Table> m_table;
    struct BacklinkColumn *m_linked_column;
    struct BasicRow<const realm::Table> m_linked_row;
    struct shared_ptr<const realm::LinkView> m_linkview_source;
    unsigned long long m_distinct_column_source;
    struct SortDescriptor m_distinct_predicate;
    struct SortDescriptor m_sorting_predicate;
    struct Query m_query;
    unsigned long long m_start;
    unsigned long long m_end;
    unsigned long long m_limit;
    struct Optional<unsigned long long> m_last_seen_version;
    unsigned long long m_num_detached_refs;
};

struct TableViewBase;

struct TaggedBool<realm::IsIndexedTag> {
    _Bool _field1;
};

struct TaggedBool<realm::IsPrimaryTag> {
    _Bool _field1;
};

struct TaskMsg {
    struct Location _field1;
    struct Callback<void ()> _field2;
};

struct TextElem {
    basic_string_a490aa4c _field1;
};

struct ThreadSafeReferenceBase;

struct Timestamp {
    long long m_seconds;
    int m_nanoseconds;
    _Bool m_is_null;
};

struct TxHostMonitor {
    basic_string_a490aa4c _field1;
    basic_string_a490aa4c _field2;
    basic_string_a490aa4c _field3;
    long long _field4;
    long long _field5;
    long long _field6;
    long long _field7;
    long long _field8;
    basic_string_a490aa4c _field9;
    basic_string_a490aa4c _field10;
    long long _field11;
    int _field12;
    int _field13;
    struct vector<char, std::__1::allocator<char>> _field14;
    basic_string_a490aa4c _field15;
    basic_string_a490aa4c _field16;
    int _field17;
    basic_string_a490aa4c _field18;
};

struct TxHostSource {
    basic_string_a490aa4c _field1;
    int _field2;
    basic_string_a490aa4c _field3;
    basic_string_a490aa4c _field4;
};

struct UIColor {
    Class _field1;
};

struct UIEdgeInsets {
    double top;
    double left;
    double bottom;
    double right;
};

struct UPAFileRef {
    int _field1;
};

struct UploadLog {
    basic_string_a490aa4c _field1;
};

struct Vector3<float> {
    float _field1;
    float _field2;
    float _field3;
};

struct Vector4<double> {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
};

struct Vector4<float> {
    float _field1;
    float _field2;
    float _field3;
    float _field4;
};

struct Vertex;

struct VideoCallback {
    struct AVEnableCameraDelegate<VideoCallback> _field1;
    struct AVEnableCameraDelegate<VideoCallback> _field2;
    struct AVSwitchDelegate<VideoCallback> _field3;
    void *_field4;
};

struct VideoElem {
    basic_string_a490aa4c _field1;
    basic_string_a490aa4c _field2;
    unsigned int _field3;
    int _field4;
    basic_string_a490aa4c _field5;
    unsigned int _field6;
    unsigned int _field7;
    basic_string_a490aa4c _field8;
    int _field9;
    struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> _field10;
    basic_string_a490aa4c _field11;
    unsigned int _field12;
    unsigned int _field13;
    unsigned int _field14;
    basic_string_a490aa4c _field15;
    int _field16;
    struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> _field17;
};

struct VideoFrame {
    basic_string_1cdf7af0 _field1;
    struct VideoFrameDesc _field2;
    unsigned int _field3;
    char *_field4;
};

struct VideoFrameDesc {
    int _field1;
    unsigned int _field2;
    unsigned int _field3;
    int _field4;
    int _field5;
};

struct WBSDKJKConstBuffer {
    struct WBSDKJKConstPtrRange _field1;
};

struct WBSDKJKConstPtrRange {
    char *_field1;
    unsigned long long _field2;
};

struct WBSDKJKEncodeCache {
    id _field1;
    unsigned long long _field2;
    unsigned long long _field3;
};

struct WBSDKJKEncodeState {
    struct WBSDKJKManagedBuffer _field1;
    struct WBSDKJKManagedBuffer _field2;
    unsigned long long _field3;
    struct WBSDKJKFastClassLookup _field4;
    struct WBSDKJKEncodeCache _field5[1024];
    unsigned long long _field6;
    unsigned long long _field7;
    unsigned long long _field8;
    id _field9;
    id _field10;
    SEL _field11;
    CDUnknownFunctionPointerType _field12;
    CDUnknownBlockType _field13;
};

struct WBSDKJKFastClassLookup {
    void *_field1;
    void *_field2;
    void *_field3;
    void *_field4;
    void *_field5;
};

struct WBSDKJKHashTableEntry {
    unsigned long long _field1;
    id _field2;
    id _field3;
};

struct WBSDKJKManagedBuffer {
    struct WBSDKJKPtrRange _field1;
    unsigned long long _field2;
    unsigned long long _field3;
};

struct WBSDKJKObjCImpCache {
    Class _field1;
    CDUnknownFunctionPointerType _field2;
    CDUnknownFunctionPointerType _field3;
};

struct WBSDKJKObjectStack {
    void **_field1;
    void **_field2;
    unsigned long long *_field3;
    unsigned long long _field4;
    unsigned long long _field5;
    unsigned long long _field6;
    unsigned long long _field7;
};

struct WBSDKJKParseState {
    unsigned long long _field1;
    struct WBSDKJKConstBuffer _field2;
    unsigned long long _field3;
    unsigned long long _field4;
    unsigned long long _field5;
    unsigned long long _field6;
    unsigned long long _field7;
    unsigned long long _field8;
    struct WBSDKJKParseToken _field9;
    struct WBSDKJKObjectStack _field10;
    struct WBSDKJKTokenCache _field11;
    struct WBSDKJKObjCImpCache _field12;
    id _field13;
    int _field14;
    _Bool _field15;
};

struct WBSDKJKParseToken {
    struct WBSDKJKConstPtrRange _field1;
    unsigned long long _field2;
    struct WBSDKJKTokenValue _field3;
    struct WBSDKJKManagedBuffer _field4;
};

struct WBSDKJKPtrRange {
    char *_field1;
    unsigned long long _field2;
};

struct WBSDKJKTokenCache {
    struct WBSDKJKTokenCacheItem *_field1;
    unsigned long long _field2;
    unsigned int _field3;
    unsigned char _field4[1024];
};

struct WBSDKJKTokenCacheItem;

struct WBSDKJKTokenValue {
    struct WBSDKJKConstPtrRange _field1;
    unsigned long long _field2;
    unsigned long long _field3;
    CDUnion_abebb5d1 _field4;
    struct WBSDKJKTokenCacheItem *_field5;
};

struct YGValue {
    float value;
    int unit;
};

struct _00066 {
    struct _00651 {
        struct _00651 {
            struct _00219 _field1;
            struct _00219 _field2;
        } _field1;
        int _field2;
        int _field3;
        float _field4;
    } _field1;
    _Bool _field2;
    int _field3;
    int _field4;
    int _field5;
    unsigned long long _field6;
    struct _00445 {
        struct unique_ptr<_00509::_00445::_00716, std::__1::default_delete<_00509::_00445::_00716>> _field1;
    } _field7;
    struct _00206 {
        struct unique_ptr<_00509::_00206::_00716, std::__1::default_delete<_00509::_00206::_00716>> _field1;
    } _field8;
    struct _00599 _field9;
    struct _00084 {
        struct time_point<std::__1::chrono::steady_clock, std::__1::chrono::duration<long long, std::__1::ratio<1, 1000000000>>> _field1;
        _Bool _field2;
    } _field10;
    struct _00460 _field11;
    int _field12;
    struct _00111 {
        struct _00184 _field1;
        struct _00599 _field2;
    } _field13;
};

struct _00184 {
    int _field1;
    struct _00210 {
        _Bool _field1;
        struct _00367 _field2;
        struct _00367 _field3;
        struct _00599 _field4;
    } _field2;
};

struct _00219 {
    float _field1;
    float _field2;
    float _field3;
    float _field4;
    float _field5;
    float _field6;
};

struct _00348 {
    int _field1;
    float _field2;
    float _field3;
};

struct _00367 {
    _Bool _field1;
    int _field2;
    float _field3;
    float _field4;
    float _field5;
    float _field6;
    float _field7;
    float _field8;
};

struct _00460 {
    unsigned long long _field1;
    struct _00650 _field2;
    float _field3;
};

struct _00599 {
    struct _00611 {
        _Bool _field1;
        _Bool _field2;
        _Bool _field3;
        _Bool _field4;
        _Bool _field5;
        _Bool _field6;
        _Bool _field7;
        _Bool _field8;
    } _field1;
    struct _00650 _field2;
    struct _00687 {
        float _field1;
        float _field2;
    } _field3;
    struct _00348 _field4[7];
    struct _00348 _field5[7];
    unsigned long long _field6;
    struct _00671 {
        float _field1;
        float _field2;
        float _field3;
        float _field4;
    } _field7;
    struct _00614 {
        float _field1;
        float _field2;
        float _field3;
        float _field4;
    } _field8;
    struct _00621 {
        float _field1;
        float _field2;
        float _field3;
    } _field9;
    float _field10;
    float _field11;
    float _field12;
    float _field13;
    float _field14;
    float _field15;
    float _field16;
    float _field17;
    float _field18;
    float _field19;
};

struct _00650 {
    float _field1;
    float _field2;
};

struct _00716;

struct _Alloc_hider {
    char *_field1;
};

struct _DetectorConfig {
    double timeout;
    int maxTaskQueueSize;
    int minFaceSize;
    float maxYawAngle;
    float maxPitchAngle;
    float minBrightness;
    float maxBrightness;
    float maxMotionBlurness;
    float maxGaussianBlurness;
    float maxEyeOpen;
    float maxMouthOpen;
    float minIntegrity;
};

struct _MAProjectionContext {
    float _field1;
    float _field2;
    float _field3;
    int _field4;
    int _field5;
};

struct _NSRange {
    unsigned long long location;
    unsigned long long length;
};

struct _POPAnimationState {
    CDUnknownFunctionPointerType *_field1;
    id _field2;
    int _field3;
    id _field4;
    unsigned long long _field5;
    double _field6;
    double _field7;
    double _field8;
    id _field9;
    CDUnknownBlockType _field10;
    CDUnknownBlockType _field11;
    CDUnknownBlockType _field12;
    CDUnknownBlockType _field13;
    id _field14;
    id _field15;
    double _field16;
    long long _field17;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
};

struct __CFString;

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, RLMClassInfo>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, RLMClassInfo>, void *>*> *__next_;
};

struct __list_node_base<std::__1::shared_ptr<POPAnimatorItem>, void *> {
    struct __list_node_base<std::__1::shared_ptr<POPAnimatorItem>, void *> *__prev_;
    struct __list_node_base<std::__1::shared_ptr<POPAnimatorItem>, void *> *__next_;
};

struct __shared_weak_count;

struct __tree_end_node<std::__1::__tree_node_base<void *>*> {
    struct __tree_node_base<void *> *__left_;
};

struct _opaque_pthread_mutex_t {
    long long __sig;
    char __opaque[56];
};

struct _opaque_pthread_rwlock_t {
    long long __sig;
    char __opaque[192];
};

struct _utils {
    CDUnknownFunctionPointerType _field1;
};

struct am_indoor_struct {
    char _field1[64];
    char _field2[64];
    char _field3[8];
    int _field4;
    char _field5[20];
    char _field6[8];
    int _field7;
    int *_field8;
    char **_field9;
    char **_field10;
    int _field11;
    int *_field12;
    float _field13;
};

struct am_maptile_struct {
    char _field1[21];
    char _field2[20];
    short _field3;
    unsigned short _field4;
};

struct array<char, 64> {
    char _field1[64];
};

struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
    struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
        struct __rep {
            union {
                struct __long {
                    char *__data_;
                    unsigned long long __size_;
                    unsigned long long __cap_;
                } __l;
                struct __short {
                    char __data_[23];
                    struct {
                        unsigned char __size_;
                    } ;
                } __s;
                struct __raw {
                    unsigned long long __words[3];
                } __r;
            } ;
        } __first_;
    } __r_;
};

struct basic_string<char, std::char_traits<char>, std::allocator<char>> {
    struct _Alloc_hider _field1;
};

struct cameraEulerAngle {
    double yaw;
    double pitch;
    double roll;
};

struct cameraVec3 {
    double x;
    double y;
    double z;
};

struct duration<long long, std::__1::ratio<1, 1000000000>> {
    long long _field1;
};

struct function<bool (unsigned long long, unsigned long long)> {
    struct type __buf_;
    struct __base<bool (unsigned long long, unsigned long long)> *__f_;
};

struct function<realm::Realm::Config (std::__1::shared_ptr<realm::SyncUser>, std::__1::basic_string<char>)>;

struct function<void (const std::__1::basic_string<char>&, const realm::SyncConfig &, std::__1::shared_ptr<realm::SyncSession>)> {
    struct type _field1;
    struct __base<void (const std::__1::basic_string<char>&, const realm::SyncConfig &, std::__1::shared_ptr<realm::SyncSession>)> *_field2;
};

struct function<void (std::__1::shared_ptr<realm::Realm>)> {
    struct type __buf_;
    struct __base<void (std::__1::shared_ptr<realm::Realm>)> *__f_;
};

struct function<void (std::__1::shared_ptr<realm::Realm>, std::__1::shared_ptr<realm::Realm>, realm::Schema &)> {
    struct type __buf_;
    struct __base<void (std::__1::shared_ptr<realm::Realm>, std::__1::shared_ptr<realm::Realm>, realm::Schema &)> *__f_;
};

struct function<void (std::__1::shared_ptr<realm::SyncSession>, realm::SyncError)> {
    struct type _field1;
    struct __base<void (std::__1::shared_ptr<realm::SyncSession>, realm::SyncError)> *_field2;
};

struct hostent {
    char *_field1;
    char **_field2;
    int _field3;
    int _field4;
    char **_field5;
};

struct in6_addr {
    union {
        unsigned char _field1[16];
        unsigned short _field2[8];
        unsigned int _field3[4];
    } _field1;
};

struct in_addr {
    unsigned int _field1;
};

struct internal_state;

struct list<std::__1::shared_ptr<POPAnimatorItem>, std::__1::allocator<std::__1::shared_ptr<POPAnimatorItem>>> {
    struct __list_node_base<std::__1::shared_ptr<POPAnimatorItem>, void *> __end_;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<std::__1::shared_ptr<POPAnimatorItem>, void *>>> {
        unsigned long long __first_;
    } __size_alloc_;
};

struct map<int, std::__1::vector<char, std::__1::allocator<char>>, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, std::__1::vector<char, std::__1::allocator<char>>>>> {
    struct __tree<std::__1::__value_type<int, std::__1::vector<char, std::__1::allocator<char>>>, std::__1::__map_value_compare<int, std::__1::__value_type<int, std::__1::vector<char, std::__1::allocator<char>>>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, std::__1::vector<char, std::__1::allocator<char>>>>> {
        struct __tree_node<std::__1::__value_type<int, std::__1::vector<char, std::__1::allocator<char>>>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, std::__1::vector<char, std::__1::allocator<char>>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<int, std::__1::__value_type<int, std::__1::vector<char, std::__1::allocator<char>>>, std::__1::less<int>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::basic_string<char>, imcore::FriendProfile, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, imcore::FriendProfile>>> {
    struct __tree<std::__1::__value_type<std::__1::basic_string<char>, imcore::FriendProfile>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, imcore::FriendProfile>, std::__1::less<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, imcore::FriendProfile>>> {
        struct __tree_node<std::__1::__value_type<std::__1::basic_string<char>, imcore::FriendProfile>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, imcore::FriendProfile>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, imcore::FriendProfile>, std::__1::less<std::__1::basic_string<char>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::basic_string<char>, imcore::NewGroupMemberInfo, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, imcore::NewGroupMemberInfo>>> {
    struct __tree<std::__1::__value_type<std::__1::basic_string<char>, imcore::NewGroupMemberInfo>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, imcore::NewGroupMemberInfo>, std::__1::less<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, imcore::NewGroupMemberInfo>>> {
        struct __tree_node<std::__1::__value_type<std::__1::basic_string<char>, imcore::NewGroupMemberInfo>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, imcore::NewGroupMemberInfo>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, imcore::NewGroupMemberInfo>, std::__1::less<std::__1::basic_string<char>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::basic_string<char>, long, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, long>>> {
    struct __tree<std::__1::__value_type<std::__1::basic_string<char>, long>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, long>, std::__1::less<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, long>>> {
        struct __tree_node<std::__1::__value_type<std::__1::basic_string<char>, long>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, long>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, long>, std::__1::less<std::__1::basic_string<char>>, true>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char>>>> {
    struct __tree<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::less<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>>> {
        struct __tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::less<std::__1::basic_string<char>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct msgpack_object {
    int _field1;
    union {
        _Bool _field1;
        unsigned long long _field2;
        long long _field3;
        double _field4;
        struct {
            unsigned int _field1;
            struct msgpack_object *_field2;
        } _field5;
        struct {
            unsigned int _field1;
            struct msgpack_object_kv *_field2;
        } _field6;
        struct {
            unsigned int _field1;
            char *_field2;
        } _field7;
    } _field2;
};

struct msgpack_object_kv;

struct msgpack_packer {
    void *_field1;
    CDUnknownFunctionPointerType _field2;
};

struct mutex {
    struct _opaque_pthread_mutex_t __m_;
};

struct pair<std::__1::basic_string<char>, std::__1::basic_string<char>> {
    basic_string_a490aa4c first;
    basic_string_a490aa4c second;
};

struct scoped_refptr<QAVBase::internal::BindStateBase> {
    struct BindStateBase *_field1;
};

struct set<std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::basic_string<char>>> {
    struct __tree<std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::basic_string<char>>> {
        struct __tree_node<std::__1::basic_string<char>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::basic_string<char>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::less<std::__1::basic_string<char>>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct shared_ptr<POPAnimatorItem> {
    struct POPAnimatorItem *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<const realm::Descriptor> {
    struct Descriptor *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<const realm::LinkView> {
    struct LinkView *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<imcore::MsgNode> {
    struct MsgNode *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<imcore::SessionNode> {
    struct SessionNode *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<realm::LinkView> {
    struct LinkView *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<realm::Realm> {
    struct Realm *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<realm::SyncConfig> {
    struct SyncConfig *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<realm::SyncSession> {
    struct SyncSession *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<realm::SyncUser> {
    struct SyncUser *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<realm::_impl::CollectionNotifier> {
    struct CollectionNotifier *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<realm::sync::ClientHistory::ChangesetCooker> {
    struct ChangesetCooker *_field1;
    struct __shared_weak_count *_field2;
};

struct sigaction {
    union __sigaction_u {
        CDUnknownFunctionPointerType _field1;
        CDUnknownFunctionPointerType _field2;
    } _field1;
    unsigned int _field2;
    int _field3;
};

struct sockaddr {
    unsigned char sa_len;
    unsigned char sa_family;
    char sa_data[14];
};

struct sockaddr_in {
    unsigned char _field1;
    unsigned char _field2;
    unsigned short _field3;
    struct in_addr _field4;
    char _field5[8];
};

struct sockaddr_in6 {
    unsigned char _field1;
    unsigned char _field2;
    unsigned short _field3;
    unsigned int _field4;
    struct in6_addr _field5;
    unsigned int _field6;
};

struct sockaddr_un {
    unsigned char _field1;
    unsigned char _field2;
    char _field3[104];
};

struct tagAMAPSRVPROJECTION {
    void *_field1;
};

struct time_point<std::__1::chrono::steady_clock, std::__1::chrono::duration<long long, std::__1::ratio<1, 1000000000>>> {
    struct duration<long long, std::__1::ratio<1, 1000000000>> _field1;
};

struct timeval {
    long long tv_sec;
    int tv_usec;
};

struct tm_zip_s {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned int _field6;
};

struct type {
    unsigned char __lx[24];
};

struct unique_ptr<ModuleData [], std::__1::default_delete<ModuleData []>> {
    struct __compressed_pair<ModuleData *, std::__1::default_delete<ModuleData []>> {
        struct ModuleData *__first_;
    } __ptr_;
};

struct unique_ptr<RLMObservationInfo, std::__1::default_delete<RLMObservationInfo>> {
    struct __compressed_pair<RLMObservationInfo *, std::__1::default_delete<RLMObservationInfo>> {
        struct RLMObservationInfo *__first_;
    } __ptr_;
};

struct unique_ptr<_00509::_00206::_00716, std::__1::default_delete<_00509::_00206::_00716>> {
    struct __compressed_pair<_00509::_00206::_00716 *, std::__1::default_delete<_00509::_00206::_00716>> {
        struct _00716 *_field1;
    } _field1;
};

struct unique_ptr<_00509::_00445::_00716, std::__1::default_delete<_00509::_00445::_00716>> {
    struct __compressed_pair<_00509::_00445::_00716 *, std::__1::default_delete<_00509::_00445::_00716>> {
        struct _00716 *_field1;
    } _field1;
};

struct unique_ptr<__sFILE, int (*)(__sFILE *)> {
    struct __compressed_pair<__sFILE *, int (*)(__sFILE *)> {
        struct __sFILE *__first_;
        CDUnknownFunctionPointerType __second_;
    } __ptr_;
};

struct unique_ptr<id [], std::__1::default_delete<id []>> {
    struct __compressed_pair<__strong id *, std::__1::default_delete<id []>> {
        id *__first_;
    } __ptr_;
};

struct unique_ptr<realm::Array, std::__1::default_delete<realm::Array>> {
    struct __compressed_pair<realm::Array *, std::__1::default_delete<realm::Array>> {
        struct Array *__first_;
    } __ptr_;
};

struct unique_ptr<realm::PermissionResults, std::__1::default_delete<realm::PermissionResults>> {
    struct __compressed_pair<realm::PermissionResults *, std::__1::default_delete<realm::PermissionResults>> {
        struct PermissionResults *__first_;
    } __ptr_;
};

struct unique_ptr<realm::StringIndex, std::__1::default_delete<realm::StringIndex>> {
    struct __compressed_pair<realm::StringIndex *, std::__1::default_delete<realm::StringIndex>> {
        struct StringIndex *__first_;
    } __ptr_;
};

struct unique_ptr<realm::SyncConfig, std::__1::default_delete<realm::SyncConfig>> {
    struct __compressed_pair<realm::SyncConfig *, std::__1::default_delete<realm::SyncConfig>> {
        struct SyncConfig *__first_;
    } __ptr_;
};

struct unique_ptr<realm::TableViewBase, std::__1::default_delete<realm::TableViewBase>> {
    struct __compressed_pair<realm::TableViewBase *, std::__1::default_delete<realm::TableViewBase>> {
        struct TableViewBase *__first_;
    } __ptr_;
};

struct unique_ptr<realm::ThreadSafeReferenceBase, std::__1::default_delete<realm::ThreadSafeReferenceBase>> {
    struct __compressed_pair<realm::ThreadSafeReferenceBase *, std::__1::default_delete<realm::ThreadSafeReferenceBase>> {
        struct ThreadSafeReferenceBase *__first_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, RLMClassInfo>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, RLMClassInfo>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, RLMClassInfo>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, RLMClassInfo>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, RLMClassInfo>, void *>*> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, RLMClassInfo>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, RLMClassInfo>, void *>*>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::function<realm::Realm::Config (std::__1::shared_ptr<realm::SyncUser>, std::__1::basic_string<char>)>, std::__1::default_delete<std::__1::function<realm::Realm::Config (std::__1::shared_ptr<realm::SyncUser>, std::__1::basic_string<char>)>>> {
    struct __compressed_pair<std::__1::function<realm::Realm::Config (std::__1::shared_ptr<realm::SyncUser>, std::__1::basic_string<char>)>*, std::__1::default_delete<std::__1::function<realm::Realm::Config (std::__1::shared_ptr<realm::SyncUser>, std::__1::basic_string<char>)>>> {
        struct function<realm::Realm::Config (std::__1::shared_ptr<realm::SyncUser>, std::__1::basic_string<char>)> *__first_;
    } __ptr_;
};

struct unordered_map<NSString *, RLMClassInfo, std::__1::hash<NSString *>, std::__1::equal_to<NSString *>, std::__1::allocator<std::__1::pair<NSString *const, RLMClassInfo>>> {
    struct __hash_table<std::__1::__hash_value_type<NSString *, RLMClassInfo>, std::__1::__unordered_map_hasher<NSString *, std::__1::__hash_value_type<NSString *, RLMClassInfo>, std::__1::hash<NSString *>, true>, std::__1::__unordered_map_equal<NSString *, std::__1::__hash_value_type<NSString *, RLMClassInfo>, std::__1::equal_to<NSString *>, true>, std::__1::allocator<std::__1::__hash_value_type<NSString *, RLMClassInfo>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, RLMClassInfo>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, RLMClassInfo>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, RLMClassInfo>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, RLMClassInfo>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, RLMClassInfo>, void *>*> __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<NSString *, std::__1::__hash_value_type<NSString *, RLMClassInfo>, std::__1::hash<NSString *>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<NSString *, std::__1::__hash_value_type<NSString *, RLMClassInfo>, std::__1::equal_to<NSString *>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct uregex;

struct vector<ASIndexPathRange, std::__1::allocator<ASIndexPathRange>> {
    CDStruct_183601bc *__begin_;
    CDStruct_183601bc *__end_;
    struct __compressed_pair<ASIndexPathRange *, std::__1::allocator<ASIndexPathRange>> {
        CDStruct_183601bc *__first_;
    } __end_cap_;
};

struct vector<ASRangeTuningParameters, std::__1::allocator<ASRangeTuningParameters>> {
    CDStruct_183601bc *__begin_;
    CDStruct_183601bc *__end_;
    struct __compressed_pair<ASRangeTuningParameters *, std::__1::allocator<ASRangeTuningParameters>> {
        CDStruct_183601bc *__first_;
    } __end_cap_;
};

struct vector<CGRect, std::__1::allocator<CGRect>> {
    struct CGRect *__begin_;
    struct CGRect *__end_;
    struct __compressed_pair<CGRect *, std::__1::allocator<CGRect>> {
        struct CGRect *__first_;
    } __end_cap_;
};

struct vector<MAClipper::IntersectState, std::__1::allocator<MAClipper::IntersectState>> {
    int *_field1;
    int *_field2;
    struct __compressed_pair<MAClipper::IntersectState *, std::__1::allocator<MAClipper::IntersectState>> {
        int *_field1;
    } _field3;
};

struct vector<MAGradientColoredLine::Vertex, std::__1::allocator<MAGradientColoredLine::Vertex>> {
    struct Vertex *_field1;
    struct Vertex *_field2;
    struct __compressed_pair<MAGradientColoredLine::Vertex *, std::__1::allocator<MAGradientColoredLine::Vertex>> {
        struct Vertex *_field1;
    } _field3;
};

struct vector<MANormalLineBuilder::Vertex, std::__1::allocator<MANormalLineBuilder::Vertex>> {
    struct Vertex *_field1;
    struct Vertex *_field2;
    struct __compressed_pair<MANormalLineBuilder::Vertex *, std::__1::allocator<MANormalLineBuilder::Vertex>> {
        struct Vertex *_field1;
    } _field3;
};

struct vector<RLMClassInfo *, std::__1::allocator<RLMClassInfo *>> {
    struct RLMClassInfo **_field1;
    struct RLMClassInfo **_field2;
    struct __compressed_pair<RLMClassInfo **, std::__1::allocator<RLMClassInfo *>> {
        struct RLMClassInfo **_field1;
    } _field3;
};

struct vector<RLMObservationInfo *, std::__1::allocator<RLMObservationInfo *>> {
    struct RLMObservationInfo **_field1;
    struct RLMObservationInfo **_field2;
    struct __compressed_pair<RLMObservationInfo **, std::__1::allocator<RLMObservationInfo *>> {
        struct RLMObservationInfo **_field1;
    } _field3;
};

struct vector<Vector3<float>, std::__1::allocator<Vector3<float>>> {
    struct Vector3<float> *_field1;
    struct Vector3<float> *_field2;
    struct __compressed_pair<Vector3<float>*, std::__1::allocator<Vector3<float>>> {
        struct Vector3<float> *_field1;
    } _field3;
};

struct vector<Vector4<float>, std::__1::allocator<Vector4<float>>> {
    struct Vector4<float> *_field1;
    struct Vector4<float> *_field2;
    struct __compressed_pair<Vector4<float>*, std::__1::allocator<Vector4<float>>> {
        struct Vector4<float> *_field1;
    } _field3;
};

struct vector<_NSRange, std::__1::allocator<_NSRange>> {
    struct _NSRange *__begin_;
    struct _NSRange *__end_;
    struct __compressed_pair<_NSRange *, std::__1::allocator<_NSRange>> {
        struct _NSRange *__first_;
    } __end_cap_;
};

struct vector<beacon::DomainSource, std::__1::allocator<beacon::DomainSource>> {
    struct DomainSource *_field1;
    struct DomainSource *_field2;
    struct __compressed_pair<beacon::DomainSource *, std::__1::allocator<beacon::DomainSource>> {
        struct DomainSource *_field1;
    } _field3;
};

struct vector<beacon::EventRecord, std::__1::allocator<beacon::EventRecord>> {
    struct EventRecord *_field1;
    struct EventRecord *_field2;
    struct __compressed_pair<beacon::EventRecord *, std::__1::allocator<beacon::EventRecord>> {
        struct EventRecord *_field1;
    } _field3;
};

struct vector<beacon::IpSource, std::__1::allocator<beacon::IpSource>> {
    struct IpSource *_field1;
    struct IpSource *_field2;
    struct __compressed_pair<beacon::IpSource *, std::__1::allocator<beacon::IpSource>> {
        struct IpSource *_field1;
    } _field3;
};

struct vector<beacon::TxHostSource, std::__1::allocator<beacon::TxHostSource>> {
    struct TxHostSource *_field1;
    struct TxHostSource *_field2;
    struct __compressed_pair<beacon::TxHostSource *, std::__1::allocator<beacon::TxHostSource>> {
        struct TxHostSource *_field1;
    } _field3;
};

struct vector<bool, std::__1::allocator<bool>> {
    unsigned long long *__begin_;
    unsigned long long __size_;
    struct __compressed_pair<unsigned long, std::__1::allocator<unsigned long>> {
        unsigned long long __first_;
    } __cap_alloc_;
};

struct vector<char, std::__1::allocator<char>> {
    char *__begin_;
    char *__end_;
    struct __compressed_pair<char *, std::__1::allocator<char>> {
        char *__first_;
    } __end_cap_;
};

struct vector<const realm::ColumnBase *, std::__1::allocator<const realm::ColumnBase *>>;

struct vector<float, std::__1::allocator<float>> {
    float *_field1;
    float *_field2;
    struct __compressed_pair<float *, std::__1::allocator<float>> {
        float *_field1;
    } _field3;
};

struct vector<imcore::Elem, std::__1::allocator<imcore::Elem>> {
    struct Elem *__begin_;
    struct Elem *__end_;
    struct __compressed_pair<imcore::Elem *, std::__1::allocator<imcore::Elem>> {
        struct Elem *__first_;
    } __end_cap_;
};

struct vector<imcore::FriendChangeUserInfo, std::__1::allocator<imcore::FriendChangeUserInfo>> {
    struct FriendChangeUserInfo *_field1;
    struct FriendChangeUserInfo *_field2;
    struct __compressed_pair<imcore::FriendChangeUserInfo *, std::__1::allocator<imcore::FriendChangeUserInfo>> {
        struct FriendChangeUserInfo *_field1;
    } _field3;
};

struct vector<imcore::GroupTipsElem_GroupInfo, std::__1::allocator<imcore::GroupTipsElem_GroupInfo>> {
    struct GroupTipsElem_GroupInfo *_field1;
    struct GroupTipsElem_GroupInfo *_field2;
    struct __compressed_pair<imcore::GroupTipsElem_GroupInfo *, std::__1::allocator<imcore::GroupTipsElem_GroupInfo>> {
        struct GroupTipsElem_GroupInfo *_field1;
    } _field3;
};

struct vector<imcore::GroupTipsElem_MemberInfo, std::__1::allocator<imcore::GroupTipsElem_MemberInfo>> {
    struct GroupTipsElem_MemberInfo *_field1;
    struct GroupTipsElem_MemberInfo *_field2;
    struct __compressed_pair<imcore::GroupTipsElem_MemberInfo *, std::__1::allocator<imcore::GroupTipsElem_MemberInfo>> {
        struct GroupTipsElem_MemberInfo *_field1;
    } _field3;
};

struct vector<realm::CollectionChangeSet::Move, std::__1::allocator<realm::CollectionChangeSet::Move>> {
    struct Move *__begin_;
    struct Move *__end_;
    struct __compressed_pair<realm::CollectionChangeSet::Move *, std::__1::allocator<realm::CollectionChangeSet::Move>> {
        struct Move *__first_;
    } __end_cap_;
};

struct vector<realm::IndexSet, std::__1::allocator<realm::IndexSet>> {
    struct IndexSet *__begin_;
    struct IndexSet *__end_;
    struct __compressed_pair<realm::IndexSet *, std::__1::allocator<realm::IndexSet>> {
        struct IndexSet *__first_;
    } __end_cap_;
};

struct vector<realm::Property, std::__1::allocator<realm::Property>> {
    struct Property *_field1;
    struct Property *_field2;
    struct __compressed_pair<realm::Property *, std::__1::allocator<realm::Property>> {
        struct Property *_field1;
    } _field3;
};

struct vector<realm::QueryGroup, std::__1::allocator<realm::QueryGroup>> {
    struct QueryGroup *__begin_;
    struct QueryGroup *__end_;
    struct __compressed_pair<realm::QueryGroup *, std::__1::allocator<realm::QueryGroup>> {
        struct QueryGroup *__first_;
    } __end_cap_;
};

struct vector<realm::_impl::ChunkedRangeVector::Chunk, std::__1::allocator<realm::_impl::ChunkedRangeVector::Chunk>> {
    struct Chunk *__begin_;
    struct Chunk *__end_;
    struct __compressed_pair<realm::_impl::ChunkedRangeVector::Chunk *, std::__1::allocator<realm::_impl::ChunkedRangeVector::Chunk>> {
        struct Chunk *__first_;
    } __end_cap_;
};

struct vector<short, std::__1::allocator<short>> {
    short *_field1;
    short *_field2;
    struct __compressed_pair<short *, std::__1::allocator<short>> {
        short *_field1;
    } _field3;
};

struct vector<speedmonitor::DomainMonitor, std::__1::allocator<speedmonitor::DomainMonitor>> {
    struct DomainMonitor *_field1;
    struct DomainMonitor *_field2;
    struct __compressed_pair<speedmonitor::DomainMonitor *, std::__1::allocator<speedmonitor::DomainMonitor>> {
        struct DomainMonitor *_field1;
    } _field3;
};

struct vector<speedmonitor::IpMonitor, std::__1::allocator<speedmonitor::IpMonitor>> {
    struct IpMonitor *_field1;
    struct IpMonitor *_field2;
    struct __compressed_pair<speedmonitor::IpMonitor *, std::__1::allocator<speedmonitor::IpMonitor>> {
        struct IpMonitor *_field1;
    } _field3;
};

struct vector<speedmonitor::TxHostMonitor, std::__1::allocator<speedmonitor::TxHostMonitor>> {
    struct TxHostMonitor *_field1;
    struct TxHostMonitor *_field2;
    struct __compressed_pair<speedmonitor::TxHostMonitor *, std::__1::allocator<speedmonitor::TxHostMonitor>> {
        struct TxHostMonitor *_field1;
    } _field3;
};

struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> {
    basic_string_a490aa4c *_field1;
    basic_string_a490aa4c *_field2;
    struct __compressed_pair<std::__1::basic_string<char>*, std::__1::allocator<std::__1::basic_string<char>>> {
        basic_string_a490aa4c *_field1;
    } _field3;
};

struct vector<std::__1::vector<Vector3<float>, std::__1::allocator<Vector3<float>>>, std::__1::allocator<std::__1::vector<Vector3<float>, std::__1::allocator<Vector3<float>>>>> {
    vector_f60ea51c *_field1;
    vector_f60ea51c *_field2;
    struct __compressed_pair<std::__1::vector<Vector3<float>, std::__1::allocator<Vector3<float>>>*, std::__1::allocator<std::__1::vector<Vector3<float>, std::__1::allocator<Vector3<float>>>>> {
        vector_f60ea51c *_field1;
    } _field3;
};

struct vector<std::__1::vector<const realm::ColumnBase *, std::__1::allocator<const realm::ColumnBase *>>, std::__1::allocator<std::__1::vector<const realm::ColumnBase *, std::__1::allocator<const realm::ColumnBase *>>>> {
    struct vector<const realm::ColumnBase *, std::__1::allocator<const realm::ColumnBase *>> *__begin_;
    struct vector<const realm::ColumnBase *, std::__1::allocator<const realm::ColumnBase *>> *__end_;
    struct __compressed_pair<std::__1::vector<const realm::ColumnBase *, std::__1::allocator<const realm::ColumnBase *>>*, std::__1::allocator<std::__1::vector<const realm::ColumnBase *, std::__1::allocator<const realm::ColumnBase *>>>> {
        struct vector<const realm::ColumnBase *, std::__1::allocator<const realm::ColumnBase *>> *__first_;
    } __end_cap_;
};

struct vector<unsigned char, std::__1::allocator<unsigned char>> {
    char *__begin_;
    char *__end_;
    struct __compressed_pair<unsigned char *, std::__1::allocator<unsigned char>> {
        char *__first_;
    } __end_cap_;
};

struct vector<unsigned long, std::__1::allocator<unsigned long>> {
    unsigned long long *__begin_;
    unsigned long long *__end_;
    struct __compressed_pair<unsigned long *, std::__1::allocator<unsigned long>> {
        unsigned long long *__first_;
    } __end_cap_;
};

struct vector<unsigned short, std::__1::allocator<unsigned short>> {
    unsigned short *_field1;
    unsigned short *_field2;
    struct __compressed_pair<unsigned short *, std::__1::allocator<unsigned short>> {
        unsigned short *_field1;
    } _field3;
};

struct weak_ptr<realm::SyncSession> {
    struct SyncSession *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct weak_ptr<realm::SyncUser> {
    struct SyncUser *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct z_stream_s {
    char *next_in;
    unsigned int avail_in;
    unsigned long long total_in;
    char *next_out;
    unsigned int avail_out;
    unsigned long long total_out;
    char *msg;
    struct internal_state *state;
    CDUnknownFunctionPointerType zalloc;
    CDUnknownFunctionPointerType zfree;
    void *opaque;
    int data_type;
    unsigned long long adler;
    unsigned long long reserved;
};

#if 0
// Names with conflicting types:
typedef struct {
    vector_195fe69b _field1;
    struct vector<MAGradientColoredLine::Vertex, std::__1::allocator<MAGradientColoredLine::Vertex>> _field2;
} Drawable_98991264;

typedef struct {
    vector_195fe69b _field1;
    struct vector<MANormalLineBuilder::Vertex, std::__1::allocator<MANormalLineBuilder::Vertex>> _field2;
    vector_195fe69b _field3;
    vector_195fe69b _field4;
} Drawable_97df83bd;

typedef struct {
    CDUnknownFunctionPointerType *_field1;
    float _field2;
    float _field3;
    struct Drawable {
        vector_195fe69b _field1;
        struct vector<MANormalLineBuilder::Vertex, std::__1::allocator<MANormalLineBuilder::Vertex>> _field2;
        vector_195fe69b _field3;
        vector_195fe69b _field4;
    } _field4;
    vector_f60ea51c _field5;
    struct vector<float, std::__1::allocator<float>> _field6;
} MALineBuilder_6dabcb35;

typedef struct {
    CDUnknownFunctionPointerType *_field1;
    float _field2;
    float _field3;
    struct Vector4<float> _field4;
    struct Drawable {
        vector_195fe69b _field1;
        struct vector<MAGradientColoredLine::Vertex, std::__1::allocator<MAGradientColoredLine::Vertex>> _field2;
    } _field5;
    vector_f60ea51c _field6;
    struct vector<float, std::__1::allocator<float>> _field7;
    struct vector<Vector4<float>, std::__1::allocator<Vector4<float>>> _field8;
} MALineBuilder_3b276b09;

#endif

#pragma mark Typedef'd Structures

typedef struct {
    _Bool _field1;
    unsigned char _field2;
    _Bool _field3;
    unsigned long long _field4;
} CDStruct_6a6a01a4;

typedef struct {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
} CDStruct_7523a67d;

typedef struct {
    unsigned long long _field1;
    id *_field2;
    unsigned long long *_field3;
    unsigned long long _field4[5];
} CDStruct_70511ce9;

typedef struct {
    unsigned long long count;
    double *array;
} CDStruct_3b9f1d24;

typedef struct {
    unsigned short wCmd;
    unsigned short wSubCmd;
    short wRst;
    unsigned int dwUsed;
    unsigned int dwCalUsed;
    unsigned short wTry;
    unsigned char acHostName[32];
    unsigned char acHostIp[32];
    unsigned short wPort;
    unsigned char cConn;
    unsigned char cNetType;
    unsigned char cNetwork;
    unsigned char acErrorStr[64];
    unsigned short wSendDataLen;
    unsigned short wResvDataLen;
} CDStruct_34f44c17;

typedef struct {
    char *_field1;
    int _field2;
    int _field3;
} CDStruct_9c718cc4;

typedef struct {
    double timeout;
    double maximumAge;
    double accuracy;
    double distanceFilter;
} CDStruct_0ddf8746;

typedef struct {
    int _field1;
    int _field2;
    char *_field3;
} CDStruct_3553761d;

typedef struct {
    int _field1;
    int _field2;
    void *_field3;
} CDStruct_da23731b;

typedef struct {
    int left;
    int top;
    int right;
    int bottom;
} CDStruct_51449276;

typedef struct {
    int _field1;
    int _field2;
    int _field3;
} CDStruct_77932685;

typedef struct {
    long long version;
    void *info;
    CDUnknownFunctionPointerType retain;
    CDUnknownFunctionPointerType release;
    CDUnknownFunctionPointerType copyDescription;
} CDStruct_4210025a;

typedef struct {
    long long type;
    double value;
} CDStruct_5f1639cb;

typedef struct {
    long long _field1;
    int _field2;
    unsigned int _field3;
    long long _field4;
} CDStruct_198678f7;

typedef struct {
    long long _field1;
    int _field2;
} CDStruct_87dc826d;

typedef struct {
    long long section;
    long long row;
} CDStruct_fc6cb5ee;

typedef struct CDStruct_183601bc;

typedef struct {
    unsigned long long count;
    double baseLine;
    double lineHeight;
    struct __CTLine **lines;
    double *widths;
} CDStruct_7a56664d;

typedef struct {
    CDStruct_183601bc *_field1;
    int _field2;
} CDStruct_af61540b;

typedef struct {
    struct CGColor *_field1;
    struct CGColor *_field2;
    struct CGColor *_field3;
    struct CGColor *_field4;
} CDStruct_a5ac02f4;

typedef struct {
    struct OpaqueAudioComponentInstance *audioUnit;
    struct AudioComponentDescription desc;
    struct AudioStreamBasicDescription inDf;
    struct AudioStreamBasicDescription outDf;
    struct OpaqueAudioComponent *aComponent;
    struct AURenderCallbackStruct callbackStruct;
    _Bool mIsRunning;
} CDStruct_0373e3e9;

typedef struct {
    float low_quality;
    float in_bound;
    float is_idcard;
    _Bool has_shadow;
    int shadow_count;
    _Bool has_specular_highlight;
    int specular_highlight_count;
    struct CGPoint corner_points[4];
    struct CGPoint portrait_points[4];
    float angles[3];
    unsigned long long side;
    float brightness;
    unsigned long long idcard_type;
    _Bool legality;
} CDStruct_46efb013;

typedef struct {
    CDStruct_51449276 _field1;
    int _field2;
    float _field3;
    float _field4;
    float _field5;
    float _field6;
    float _field7;
    float _field8;
    int _field9;
    int _field10;
    int _field11;
} CDStruct_31865034;

typedef struct {
    CDStruct_5f1639cb width;
    CDStruct_5f1639cb height;
} CDStruct_55ce9b82;

typedef struct {
    CDStruct_fc6cb5ee start;
    CDStruct_fc6cb5ee end;
} CDStruct_474eb98f;

typedef struct {
    struct CGSize min;
    struct CGSize max;
} CDStruct_42a63532;

typedef struct {
    struct CLLocationCoordinate2D center;
    struct {
        double latitudeDelta;
        double longitudeDelta;
    } span;
} CDStruct_b7cb895d;

typedef struct {
    struct tm_zip_s _field1;
    unsigned long long _field2;
    unsigned long long _field3;
    unsigned long long _field4;
} CDStruct_192a48cb;

typedef struct {
    _Bool _field1;
    _Bool _field2;
    struct CGRect _field3;
    struct CGRect _field4;
    double _field5;
    long long _field6;
    unsigned long long _field7;
} CDStruct_902a08d0;

typedef struct {
    _Bool has_face;
    float yaw;
    float pitch;
    float blurness_motion;
    float blurness_gaussian;
    struct CGRect face_rect;
    struct CGPoint face_landmarks[7];
    float eye_left_hwratio;
    float eye_right_hwratio;
    float mouth_hwratio;
    float glasses;
    float brightness;
    float integrity;
    int frame_type;
    _Bool not_video;
    float smooth_yaw;
    float smooth_pitch;
    float eye_left_det;
    float eye_right_det;
    float mouth_det;
    float eye_left_occlusion;
    float eye_right_occlusion;
    float mouth_occlusion;
    _Bool eye_blink;
    _Bool mouth_open;
    _Bool pitch3d;
    float quality;
    float smooth_quality;
    _Bool face_too_large;
} CDStruct_e441acf7;

typedef struct {
    CDStruct_55ce9b82 min;
    CDStruct_55ce9b82 max;
} CDStruct_32e40e3f;

// Ambiguous groups
typedef struct {
    double _field1;
    double _field2;
} CDStruct_c3b9c2ee;

typedef struct JceInputStream<analyticstaf::BufferReader> {
    char *_field1;
    unsigned long long _field2;
    unsigned long long _field3;
} JceInputStream_f07640a9;

typedef struct JceOutputStream<analyticstaf::BufferWriter> {
    char *_field1;
    unsigned long long _field2;
    unsigned long long _field3;
} JceOutputStream_31132a5e;

typedef struct SpringSolver<POP::Vector4<double>> {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
    double _field5;
    double _field6;
    double _field7;
    struct SSState<POP::Vector4<double>> _field8;
    struct Vector4<double> _field9;
    _Bool _field10;
} SpringSolver_fe820e75;

typedef struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
    struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
        struct __rep {
            union {
                struct __long {
                    char *__data_;
                    unsigned long long __size_;
                    unsigned long long __cap_;
                } __l;
                struct __short {
                    char __data_[23];
                    struct {
                        unsigned char __size_;
                    } ;
                } __s;
                struct __raw {
                    unsigned long long __words[3];
                } __r;
            } ;
        } __first_;
    } __r_;
} basic_string_a490aa4c;

typedef struct basic_string<char, std::char_traits<char>, std::allocator<char>> {
    struct _Alloc_hider _field1;
} basic_string_1cdf7af0;

typedef struct function<void (std::__1::shared_ptr<realm::SyncSession>, realm::SyncError)> {
    struct type _field1;
    struct __base<void (std::__1::shared_ptr<realm::SyncSession>, realm::SyncError)> *_field2;
} function_0cf83702;

typedef struct list<std::__1::shared_ptr<POPAnimatorItem>, std::__1::allocator<std::__1::shared_ptr<POPAnimatorItem>>> {
    struct __list_node_base<std::__1::shared_ptr<POPAnimatorItem>, void *> __end_;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<std::__1::shared_ptr<POPAnimatorItem>, void *>>> {
        unsigned long long __first_;
    } __size_alloc_;
} list_670f5810;

typedef struct shared_ptr<POPAnimatorItem> {
    struct POPAnimatorItem *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_1553c9f8;

typedef struct shared_ptr<realm::Realm> {
    struct Realm *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_130f66cc;

typedef struct shared_ptr<realm::SyncSession> {
    struct SyncSession *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_3c92bca6;

typedef struct shared_ptr<realm::SyncUser> {
    struct SyncUser *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_324a0594;

typedef struct unique_ptr<realm::PermissionResults, std::__1::default_delete<realm::PermissionResults>> {
    struct __compressed_pair<realm::PermissionResults *, std::__1::default_delete<realm::PermissionResults>> {
        struct PermissionResults *__first_;
    } __ptr_;
} unique_ptr_48be5826;

typedef struct unique_ptr<realm::ThreadSafeReferenceBase, std::__1::default_delete<realm::ThreadSafeReferenceBase>> {
    struct __compressed_pair<realm::ThreadSafeReferenceBase *, std::__1::default_delete<realm::ThreadSafeReferenceBase>> {
        struct ThreadSafeReferenceBase *__first_;
    } __ptr_;
} unique_ptr_c83a4463;

typedef struct vector<Vector3<float>, std::__1::allocator<Vector3<float>>> {
    struct Vector3<float> *_field1;
    struct Vector3<float> *_field2;
    struct __compressed_pair<Vector3<float>*, std::__1::allocator<Vector3<float>>> {
        struct Vector3<float> *_field1;
    } _field3;
} vector_f60ea51c;

typedef struct vector<_NSRange, std::__1::allocator<_NSRange>> {
    struct _NSRange *__begin_;
    struct _NSRange *__end_;
    struct __compressed_pair<_NSRange *, std::__1::allocator<_NSRange>> {
        struct _NSRange *__first_;
    } __end_cap_;
} vector_d5f79a51;

typedef struct vector<std::__1::vector<Vector3<float>, std::__1::allocator<Vector3<float>>>, std::__1::allocator<std::__1::vector<Vector3<float>, std::__1::allocator<Vector3<float>>>>> {
    vector_f60ea51c *_field1;
    vector_f60ea51c *_field2;
    struct __compressed_pair<std::__1::vector<Vector3<float>, std::__1::allocator<Vector3<float>>>*, std::__1::allocator<std::__1::vector<Vector3<float>, std::__1::allocator<Vector3<float>>>>> {
        vector_f60ea51c *_field1;
    } _field3;
} vector_aac46ba0;

typedef struct vector<unsigned short, std::__1::allocator<unsigned short>> {
    unsigned short *_field1;
    unsigned short *_field2;
    struct __compressed_pair<unsigned short *, std::__1::allocator<unsigned short>> {
        unsigned short *_field1;
    } _field3;
} vector_195fe69b;

#pragma mark Named Unions

union BCPoint {
    struct {
        double _field1;
        double _field2;
    } _field1;
    double _field2[2];
};

union BCTrapezoid {
    struct {
        union BCPoint _field1;
        union BCPoint _field2;
        union BCPoint _field3;
        union BCPoint _field4;
    } _field1;
    union BCPoint _field2[4];
};

#pragma mark Typedef'd Unions

typedef union {
    unsigned long long m_value;
    char m_null_state;
} CDUnion_f76efdce;

typedef union {
    long long _field1;
    unsigned long long _field2;
    double _field3;
} CDUnion_abebb5d1;

