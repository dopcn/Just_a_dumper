//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "PLT_MediaControllerDeviceDelegateObject-Protocol.h"
#import "PLT_MediaControllerDeviceEventDelegateObject-Protocol.h"

@class MPVolumeView, NSString, NSTimer, PLT_MediaControllerObject, PlayParameInfo, UIButton;
@protocol PLT_MediaControllerDeviceDelegateObject, PLT_MediaControllerDeviceEventDelegateObject, RemoteControlDelegate;

@interface RemoteControl : NSObject <PLT_MediaControllerDeviceDelegateObject, PLT_MediaControllerDeviceEventDelegateObject>
{
    _Bool _isConnected;
    _Bool _needSeekWhenStartPlay;
    _Bool _isIgnoreStopEventOnce;
    _Bool _multiVideoUrlsHint;
    _Bool _isNotStopQueryTimerOnce;
    _Bool _isVideoFormatBeSupport;
    _Bool _isContinuePlayNextVod;
    PlayParameInfo *_currentPlayParameInfo;
    CDUnknownBlockType _deviceChooseTblVCCloseHandler;
    double _currentTrackDuration;
    id <RemoteControlDelegate> _delegate;
    double _seekDuration;
    id <PLT_MediaControllerDeviceDelegateObject> _deviceDelegate;
    id <PLT_MediaControllerDeviceEventDelegateObject> _deviceEventDelegate;
    MPVolumeView *_volumeView;
    PLT_MediaControllerObject *_mediaController;
    UIButton *_globalScreenProjectionBtn;
    unsigned long long _startPlayFrom;
    NSTimer *_queryTimer;
    double _startTime;
}

+ (id)shareInstance;
@property(nonatomic) double startTime; // @synthesize startTime=_startTime;
@property(retain, nonatomic) NSTimer *queryTimer; // @synthesize queryTimer=_queryTimer;
@property(nonatomic) unsigned long long startPlayFrom; // @synthesize startPlayFrom=_startPlayFrom;
@property(retain, nonatomic) UIButton *globalScreenProjectionBtn; // @synthesize globalScreenProjectionBtn=_globalScreenProjectionBtn;
@property(retain, nonatomic) PLT_MediaControllerObject *mediaController; // @synthesize mediaController=_mediaController;
@property(retain, nonatomic) MPVolumeView *volumeView; // @synthesize volumeView=_volumeView;
@property(nonatomic) id <PLT_MediaControllerDeviceEventDelegateObject> deviceEventDelegate; // @synthesize deviceEventDelegate=_deviceEventDelegate;
@property(nonatomic) id <PLT_MediaControllerDeviceDelegateObject> deviceDelegate; // @synthesize deviceDelegate=_deviceDelegate;
@property(nonatomic) _Bool isContinuePlayNextVod; // @synthesize isContinuePlayNextVod=_isContinuePlayNextVod;
@property(nonatomic) _Bool isVideoFormatBeSupport; // @synthesize isVideoFormatBeSupport=_isVideoFormatBeSupport;
@property(nonatomic) _Bool isNotStopQueryTimerOnce; // @synthesize isNotStopQueryTimerOnce=_isNotStopQueryTimerOnce;
@property(nonatomic) _Bool multiVideoUrlsHint; // @synthesize multiVideoUrlsHint=_multiVideoUrlsHint;
@property(nonatomic) _Bool isIgnoreStopEventOnce; // @synthesize isIgnoreStopEventOnce=_isIgnoreStopEventOnce;
@property(nonatomic) double seekDuration; // @synthesize seekDuration=_seekDuration;
@property(nonatomic) _Bool needSeekWhenStartPlay; // @synthesize needSeekWhenStartPlay=_needSeekWhenStartPlay;
@property(nonatomic) id <RemoteControlDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) double currentTrackDuration; // @synthesize currentTrackDuration=_currentTrackDuration;
@property(copy, nonatomic) CDUnknownBlockType deviceChooseTblVCCloseHandler; // @synthesize deviceChooseTblVCCloseHandler=_deviceChooseTblVCCloseHandler;
@property(retain, nonatomic) PlayParameInfo *currentPlayParameInfo; // @synthesize currentPlayParameInfo=_currentPlayParameInfo;
@property(nonatomic) _Bool isConnected; // @synthesize isConnected=_isConnected;
- (void)OnMRStateVariablesChanged:(id)arg1;
- (void)OnStopResult:(id)arg1;
- (void)OnPauseResult:(id)arg1;
- (void)OnPlayResult:(id)arg1;
- (void)OnGetTransportInfoResult:(id)arg1;
- (void)OnGetPositionInfoResult:(id)arg1;
- (void)OnSetAVTransportURIResult:(id)arg1;
- (void)OnMRRemoved;
- (_Bool)OnMRAdded;
- (void)routesAvailableDidChangeNotification:(id)arg1;
- (void)presentRoutesRemoteControl;
@property(readonly, nonatomic, getter=hasRoutesAvailable) _Bool routesAvailable;
- (void)initRoutesRemoteControl;
- (void)getTransportInfo;
- (void)getPositionInfo;
- (void)getMediaInfo;
- (void)getProtocolInfo;
- (void)getDeviceCapabilities;
- (void)getCurrentTransportActions;
- (void)getMediaRendererVolume;
- (void)setMediaRendererVolume:(int)arg1;
- (void)setMediaRendererAVTransportURI:(id)arg1 WithMetaData:(id)arg2;
- (void)setMediaRendererStop;
- (void)setMediaRendererPause;
- (void)setMediaRendererPlay;
- (void)sendToMediaRendererWithSeekCommand:(id)arg1;
- (void)setMediaRendererUnMute;
- (void)getMediaRendererMute;
- (void)setMediaRendererMute;
- (_Bool)isActiveMediaRenderersContainDevice:(id)arg1;
- (id)getCurrentMediaRenderer;
- (void)chooseMediaRendererWithUUID:(id)arg1;
- (id)getActiveMediaRenderers;
- (void)stop;
- (void)restart;
- (void)start;
- (id)getVideoUrlInfoFromPlayParameInfo:(id)arg1;
- (id)getVideoTitleFromPlayParameInfo:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (_Bool)isBaoFengMediaRenderer;
- (void)showAlertWithMessage:(id)arg1;
- (void)gotoScreenProjectionControlPage:(id)arg1;
- (id)getRendererList;
- (void)queryTimerAction:(id)arg1;
- (void)stopQueryRendererState;
- (void)startQueryRendererState;
- (void)setGlobalScreenProjectionBtnState:(unsigned long long)arg1;
- (void)showGlobalScreenProjectionBtn:(_Bool)arg1 State:(unsigned long long)arg2;
- (unsigned long long)playWithParameInfo:(id)arg1 From:(unsigned long long)arg2;
- (_Bool)isPlayParamInfoSuitableForPlay:(id)arg1;
- (void)setPlayParamInfo:(id)arg1;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

