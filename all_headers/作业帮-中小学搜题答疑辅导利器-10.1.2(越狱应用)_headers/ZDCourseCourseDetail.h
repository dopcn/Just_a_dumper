//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "ZDApi.h"

@class NSArray, NSString, ZDCourseCourseDetailBoundinfoItem, ZDCourseCourseDetailCourseItem, ZDCourseCourseDetailShareinfoItem, ZDCourseCourseDetailTeacherItem;
@protocol Optional, ZDCourseCourseDetailAssistantItem, ZDCourseCourseDetailLessonItem;

@interface ZDCourseCourseDetail : ZDApi
{
    NSString<Optional> *_http_method;
    id <Optional> _extension;
    long long _cartNum;
    NSArray<ZDCourseCourseDetailAssistantItem> *_assistant;
    ZDCourseCourseDetailShareinfoItem *_shareInfo;
    ZDCourseCourseDetailCourseItem *_course;
    long long _isReg;
    ZDCourseCourseDetailBoundinfoItem *_boundInfo;
    NSArray<ZDCourseCourseDetailLessonItem> *_lesson;
    ZDCourseCourseDetailTeacherItem *_teacher;
    NSArray *_desc;
}

@property(copy, nonatomic) NSArray *desc; // @synthesize desc=_desc;
@property(retain, nonatomic) ZDCourseCourseDetailTeacherItem *teacher; // @synthesize teacher=_teacher;
@property(copy, nonatomic) NSArray<ZDCourseCourseDetailLessonItem> *lesson; // @synthesize lesson=_lesson;
@property(retain, nonatomic) ZDCourseCourseDetailBoundinfoItem *boundInfo; // @synthesize boundInfo=_boundInfo;
@property(nonatomic) long long isReg; // @synthesize isReg=_isReg;
@property(retain, nonatomic) ZDCourseCourseDetailCourseItem *course; // @synthesize course=_course;
@property(retain, nonatomic) ZDCourseCourseDetailShareinfoItem *shareInfo; // @synthesize shareInfo=_shareInfo;
@property(copy, nonatomic) NSArray<ZDCourseCourseDetailAssistantItem> *assistant; // @synthesize assistant=_assistant;
@property(nonatomic) long long cartNum; // @synthesize cartNum=_cartNum;
@property(retain, nonatomic) id <Optional> extension; // @synthesize extension=_extension;
@property(retain, nonatomic) NSString<Optional> *http_method; // @synthesize http_method=_http_method;
- (void).cxx_destruct;
- (id)initWithDictionary:(id)arg1 error:(id *)arg2;

@end

