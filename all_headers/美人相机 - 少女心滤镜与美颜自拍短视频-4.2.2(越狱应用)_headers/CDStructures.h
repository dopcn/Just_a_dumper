//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#pragma mark Function Pointers and Blocks

typedef void (*CDUnknownFunctionPointerType)(void); // return type and parameters are unknown

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct APTaskInfoData {
    unsigned char _field1[30];
};

struct AudioBuffer {
    unsigned int _field1;
    unsigned int _field2;
    void *_field3;
};

struct AudioBufferList {
    unsigned int _field1;
    struct AudioBuffer _field2[1];
};

struct AudioClassDescription {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
};

struct AudioQueueBuffer {
    unsigned int _field1;
    void *_field2;
    unsigned int _field3;
    void *_field4;
    unsigned int _field5;
    struct AudioStreamPacketDescription *_field6;
    unsigned int _field7;
};

struct AudioStreamBasicDescription {
    double mSampleRate;
    unsigned int mFormatID;
    unsigned int mFormatFlags;
    unsigned int mBytesPerPacket;
    unsigned int mFramesPerPacket;
    unsigned int mBytesPerFrame;
    unsigned int mChannelsPerFrame;
    unsigned int mBitsPerChannel;
    unsigned int mReserved;
};

struct AudioStreamPacketDescription;

struct Blob;

struct C0A9BBBBA;

struct C0B744477;

struct C1A3B36D1;

struct C5BD38E39;

struct C6878A8C3;

struct C7B7C4902;

struct C7B889EC7;

struct C9DEB780B;

struct CA7961F06;

struct CATransform3D {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
    double _field5;
    double _field6;
    double _field7;
    double _field8;
    double _field9;
    double _field10;
    double _field11;
    double _field12;
    double _field13;
    double _field14;
    double _field15;
    double _field16;
};

struct CB14117C8 {
    CDUnknownFunctionPointerType *_field1;
    struct weak_ptr<CBD45359E::component::Component> _field2;
    CDUnknownFunctionPointerType *_field3;
    struct function<void (CBD45359E::component::C0DAF309A)> _field4;
    int _field5;
    int _field6;
    int _field7;
    _Bool _field8;
    struct shared_ptr<CBD45359E::component::C6878A8C3> _field9;
};

struct CB2D20F1F;

struct CD0B50E06;

struct CD37F5BCC;

struct CDenseptns {
    float _field1[200];
    float _field2[200];
    float _field3[200];
    float _field4[200];
    float _field5[200];
    float _field6[200];
    float _field7[300];
    int _field8;
    float _field9[300];
};

struct CE25B559B;

struct CE44193FD;

struct CE78EF716;

struct CFF153DBB;

struct CGAffineTransform {
    double a;
    double b;
    double c;
    double d;
    double tx;
    double ty;
};

struct CGPoint {
    double x;
    double y;
};

struct CGRect {
    struct CGPoint origin;
    struct CGSize size;
};

struct CGSize {
    double width;
    double height;
};

struct CLLocationCoordinate2D {
    double latitude;
    double longitude;
};

struct CameraDevice;

struct CameraFrameStreamer;

struct ColorConverter {
    struct ColorConverterImpl *impl;
};

struct ColorConverterImpl;

struct Component;

struct FBSDKLikeControlLayout {
    struct CGSize _field1;
    struct CGRect _field2;
    struct CGRect _field3;
};

struct FaceTracker;

struct FeatureComp {
    struct GPUObjects *_gpuObjects;
    struct Size_<int> _regionSz;
    int _targetCount;
    _Bool _oglInit;
};

struct GPUObjects;

struct Image;

struct ImageTracker;

struct JMergePoint {
    int _field1;
    int _field2;
};

struct Layer;

struct LocationPoint {
    double x;
    double y;
    long long w;
    long long h;
    long long location;
};

struct MACoordinateBounds {
    struct CLLocationCoordinate2D northEast;
    struct CLLocationCoordinate2D southWest;
};

struct MACoordinateRegion {
    struct CLLocationCoordinate2D center;
    struct MACoordinateSpan span;
};

struct MACoordinateSpan {
    double latitudeDelta;
    double longitudeDelta;
};

struct MAGLESUnityResult {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    int _field4;
    int _field5;
};

struct MAMapPoint {
    double x;
    double y;
};

struct MAMapPointLenWithWin {
    double lenValue;
    double zoomLevel;
    double totalGeoPoint;
};

struct MAMapRect {
    struct MAMapPoint origin;
    struct MAMapSize size;
};

struct MAMapSize {
    double width;
    double height;
};

struct MAPolygonClipper {
    vector_f60ea51c *_field1;
    unsigned long long _field2;
    struct Vector3<float> *_field3;
    struct Vector3<float> _field4[4];
    struct Vector3<float> _field5[4];
    vector_f60ea51c _field6;
    struct vector<MAClipper::IntersectState, std::__1::allocator<MAClipper::IntersectState>> _field7;
    struct vector<short, std::__1::allocator<short>> _field8;
    vector_195fe69b _field9;
    unsigned short _field10;
    unsigned short _field11;
    unsigned short _field12;
    unsigned short _field13;
    _Bool _field14;
    int _field15;
    vector_195fe69b _field16;
};

struct MAPolygonTriangulator {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    int _field3;
    int _field4;
    vector_f60ea51c *_field5;
    unsigned long long _field6;
    vector_195fe69b _field7;
    struct vector<short, std::__1::allocator<short>> _field8;
    vector_195fe69b _field9;
};

struct MATile {
    unsigned int x;
    unsigned int y;
    short zoom;
};

struct MATileOverlayPath {
    long long _field1;
    long long _field2;
    long long _field3;
    double _field4;
};

struct MSize {
    int *p;
};

struct MStep {
    unsigned long long *p;
    unsigned long long buf[2];
};

struct Mat {
    int flags;
    int dims;
    int rows;
    int cols;
    char *data;
    int *refcount;
    char *datastart;
    char *dataend;
    char *datalimit;
    struct MatAllocator *allocator;
    struct MSize size;
    struct MStep step;
};

struct MatAllocator;

struct Mat_<double> {
    int flags;
    int dims;
    int rows;
    int cols;
    char *data;
    int *refcount;
    char *datastart;
    char *dataend;
    char *datalimit;
    struct MatAllocator *allocator;
    struct MSize size;
    struct MStep step;
};

struct Mat_<float> {
    int flags;
    int dims;
    int rows;
    int cols;
    char *data;
    int *refcount;
    char *datastart;
    char *dataend;
    char *datalimit;
    struct MatAllocator *allocator;
    struct MSize size;
    struct MStep step;
};

struct Mat_<unsigned char> {
    int flags;
    int dims;
    int rows;
    int cols;
    char *data;
    int *refcount;
    char *datastart;
    char *dataend;
    char *datalimit;
    struct MatAllocator *allocator;
    struct MSize size;
    struct MStep step;
};

struct Net {
    struct vector<ncnn::Blob, std::__1::allocator<ncnn::Blob>> _field1;
    struct vector<ncnn::Layer *, std::__1::allocator<ncnn::Layer *>> _field2;
    struct vector<ncnn::layer_registry_entry, std::__1::allocator<ncnn::layer_registry_entry>> _field3;
};

struct OI2DFloatVector_ {
    float _field1;
    float _field2;
};

struct OI4DFloatVector_ {
    float _field1;
    float _field2;
    float _field3;
    float _field4;
};

struct OIColor_ {
    float red;
    float green;
    float blue;
    float alpha;
};

struct OSSCancellationTokenSource {
    Class _field1;
};

struct PGCVPixelBuffer {
    struct __CFDictionary *m_pPixelBufferAttribs;
    struct __CVBuffer *m_pPixelBuffer;
};

struct POCOGLTextureOptions {
    unsigned int minFilter;
    unsigned int magFilter;
    unsigned int wrapS;
    unsigned int wrapT;
    unsigned int internalFormat;
    unsigned int format;
    unsigned int type;
};

struct Poco3DModelVertexBoneInfoC_ {
    float _field1[10];
    float _field2[10];
    unsigned int _field3;
    unsigned int _field4;
};

struct PodBeautyMallSDK_BeautyCamera_OSSCancellationTokenSource {
    Class _field1;
};

struct PoseStablization;

struct Renderer;

struct Size_<int> {
    int width;
    int height;
};

struct SpeexBits {
    char *chars;
    int nbBits;
    int charPtr;
    int bitPtr;
    int owner;
    int overflow;
    int buf_size;
    int reserved1;
    void *reserved2;
};

struct Target;

struct ThreadPool {
    struct vector<std::__1::thread, std::__1::allocator<std::__1::thread>> _field1;
    struct queue<std::__1::function<void ()>, std::__1::deque<std::__1::function<void ()>, std::__1::allocator<std::__1::function<void ()>>>> _field2;
    unsigned long long _field3;
    struct mutex _field4;
    struct condition_variable _field5;
    _Bool _field6;
};

struct TrackerWrapper {
    struct FaceTracker *tracker;
};

struct UIColor {
    Class _field1;
};

struct UIEdgeInsets {
    double top;
    double left;
    double bottom;
    double right;
};

struct Vec2I {
    struct array<int, 2> _field1;
};

struct Vec4F {
    struct array<float, 4> _field1;
};

struct Vec4I {
    struct array<int, 4> _field1;
};

struct Vector3<float> {
    float _field1;
    float _field2;
    float _field3;
};

struct Vector4<float> {
    float _field1;
    float _field2;
    float _field3;
    float _field4;
};

struct Vertex;

struct WBSDKJKConstBuffer {
    struct WBSDKJKConstPtrRange _field1;
};

struct WBSDKJKConstPtrRange {
    char *_field1;
    unsigned long long _field2;
};

struct WBSDKJKEncodeCache {
    id _field1;
    unsigned long long _field2;
    unsigned long long _field3;
};

struct WBSDKJKEncodeState {
    struct WBSDKJKManagedBuffer _field1;
    struct WBSDKJKManagedBuffer _field2;
    unsigned long long _field3;
    struct WBSDKJKFastClassLookup _field4;
    struct WBSDKJKEncodeCache _field5[1024];
    unsigned long long _field6;
    unsigned long long _field7;
    unsigned long long _field8;
    id _field9;
    id _field10;
    SEL _field11;
    CDUnknownFunctionPointerType _field12;
    CDUnknownBlockType _field13;
};

struct WBSDKJKFastClassLookup {
    void *_field1;
    void *_field2;
    void *_field3;
    void *_field4;
    void *_field5;
};

struct WBSDKJKHashTableEntry {
    unsigned long long _field1;
    id _field2;
    id _field3;
};

struct WBSDKJKManagedBuffer {
    struct WBSDKJKPtrRange _field1;
    unsigned long long _field2;
    unsigned long long _field3;
};

struct WBSDKJKObjCImpCache {
    Class _field1;
    CDUnknownFunctionPointerType _field2;
    CDUnknownFunctionPointerType _field3;
};

struct WBSDKJKObjectStack {
    void **_field1;
    void **_field2;
    unsigned long long *_field3;
    unsigned long long _field4;
    unsigned long long _field5;
    unsigned long long _field6;
    unsigned long long _field7;
};

struct WBSDKJKParseState {
    unsigned long long _field1;
    struct WBSDKJKConstBuffer _field2;
    unsigned long long _field3;
    unsigned long long _field4;
    unsigned long long _field5;
    unsigned long long _field6;
    unsigned long long _field7;
    unsigned long long _field8;
    struct WBSDKJKParseToken _field9;
    struct WBSDKJKObjectStack _field10;
    struct WBSDKJKTokenCache _field11;
    struct WBSDKJKObjCImpCache _field12;
    id _field13;
    int _field14;
    _Bool _field15;
};

struct WBSDKJKParseToken {
    struct WBSDKJKConstPtrRange _field1;
    unsigned long long _field2;
    struct WBSDKJKTokenValue _field3;
    struct WBSDKJKManagedBuffer _field4;
};

struct WBSDKJKPtrRange {
    char *_field1;
    unsigned long long _field2;
};

struct WBSDKJKTokenCache {
    struct WBSDKJKTokenCacheItem *_field1;
    unsigned long long _field2;
    unsigned int _field3;
    unsigned char _field4[1024];
};

struct WBSDKJKTokenCacheItem;

struct WBSDKJKTokenValue {
    struct WBSDKJKConstPtrRange _field1;
    unsigned long long _field2;
    unsigned long long _field3;
    union {
        long long _field1;
        unsigned long long _field2;
        double _field3;
    } _field4;
    struct WBSDKJKTokenCacheItem *_field5;
};

struct _GLattributes {
    int position;
    int texCoord;
};

struct _GLfbo {
    unsigned int renderBuffer;
    unsigned int frameBuffer;
    unsigned int texture;
};

struct _GLprogram {
    unsigned int program;
    unsigned int vertexShader;
    unsigned int fragmentShader;
    struct _GLattributes attributes;
    struct _GLuniforms unifroms;
};

struct _GLtextures {
    unsigned int imageTexture;
    unsigned int maskTexture;
    unsigned int redTableTexture;
    unsigned int greenTableTexture;
    unsigned int blueTableTexture;
    unsigned int colorTableTexture;
};

struct _GLuniforms {
    int sourceImage;
    int maskImage;
    int proportion;
    int colorFormat;
    int redTable;
    int greenTable;
    int blueTable;
    int colorTable;
    int rotation;
    int orientation;
    int maxColor;
    int minColor;
    int shade1;
    int shade2;
    int tables;
    int offset;
    int hOffsets;
    int vOffsets;
    int Coefficients;
    int parameterCount;
    int radius;
};

struct _IplImage {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
    int _field5;
    char _field6[4];
    char _field7[4];
    int _field8;
    int _field9;
    int _field10;
    int _field11;
    int _field12;
    struct _IplROI *_field13;
    struct _IplImage *_field14;
    void *_field15;
    struct _IplTileInfo *_field16;
    int _field17;
    char *_field18;
    int _field19;
    int _field20[4];
    int _field21[4];
    char *_field22;
};

struct _IplROI;

struct _IplTileInfo;

struct _NSRange {
    unsigned long long location;
    unsigned long long length;
};

struct _POCOFaceStruct {
    struct CGPoint _field1;
    struct CGPoint _field2;
    struct CGPoint _field3;
    struct CGRect _field4;
};

struct _PORSCGLFramebuffer {
    unsigned int _field1;
    float _field2;
    float _field3;
    struct _PORSCGLTexture _field4;
};

struct _PORSCGLProgram {
    unsigned int _field1;
};

struct _PORSCGLTexture {
    unsigned int _field1;
    float _field2;
    float _field3;
};

struct _PORSEasyARCCamera {
    struct shared_ptr<easyar::CameraDevice> _field1;
    struct shared_ptr<easyar::CameraFrameStreamer> _field2;
    struct shared_ptr<easyar::ImageTracker> _field3;
    int _field4;
    int _field5;
    int _field6;
};

struct _PORSEasyARGLRender {
    struct shared_ptr<easyar::Renderer> _field1;
    _Bool _field2;
    struct Vec2I _field3;
    struct Vec4I _field4;
    int _field5;
    _Bool _field6;
    struct Vec4F _field7;
};

struct _PORSEyeGazeState {
    float _field1;
    float _field2;
    float _field3;
    float _field4;
};

struct _PocoImage {
    char *_field1;
    int _field2;
    int _field3;
    int _field4;
    int _field5;
};

struct _SLConstraintEdge {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
};

struct __sbuf {
    char *_field1;
    int _field2;
};

struct __shared_weak_count;

struct _mosquitto_packet {
    unsigned char _field1;
    unsigned char _field2;
    unsigned char _field3;
    unsigned short _field4;
    unsigned int _field5;
    unsigned int _field6;
    unsigned int _field7;
    unsigned int _field8;
    unsigned int _field9;
    char *_field10;
    struct _mosquitto_packet *_field11;
};

struct _opaque_pthread_mutex_t {
    long long __sig;
    char __opaque[56];
};

struct _utils {
    CDUnknownFunctionPointerType _field1;
};

struct am_indoor_struct {
    char _field1[64];
    char _field2[64];
    char _field3[8];
    int _field4;
    char _field5[20];
    char _field6[8];
    int _field7;
    int *_field8;
    char **_field9;
    char **_field10;
    int _field11;
    int *_field12;
};

struct am_maptile_struct {
    char _field1[21];
    short _field2;
    unsigned short _field3;
};

struct array<float, 4> {
    float _field1[4];
};

struct array<int, 2> {
    int _field1[2];
};

struct array<int, 4> {
    int _field1[4];
};

struct condition_variable {
    struct _opaque_pthread_cond_t {
        long long __sig;
        char __opaque[40];
    } __cv_;
};

struct deque<std::__1::function<void ()>, std::__1::allocator<std::__1::function<void ()>>> {
    struct __split_buffer<std::__1::function<void ()>*, std::__1::allocator<std::__1::function<void ()>*>> {
        struct function<void ()> **_field1;
        struct function<void ()> **_field2;
        struct function<void ()> **_field3;
        struct __compressed_pair<std::__1::function<void ()>**, std::__1::allocator<std::__1::function<void ()>*>> {
            struct function<void ()> **_field1;
        } _field4;
    } _field1;
    unsigned long long _field2;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::function<void ()>>> {
        unsigned long long _field1;
    } _field3;
};

struct detector {
    float _field1;
    struct vector<float, std::__1::allocator<float>> _field2;
    _Bool _field3;
    float _field4;
    struct Net _field5;
    struct Net _field6;
    struct Net _field7;
    _Bool _field8;
};

struct fa_face {
    struct fa_rect _field1;
    struct fa_point _field2[106];
    int _field3;
    int _field4;
    int _field5;
};

struct fa_point {
    float _field1;
    float _field2;
};

struct fa_rect {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
};

struct face_info {
    unsigned long long _field1;
    unsigned long long _field2;
    struct poco_rectf _field3;
    struct poco_pointf _field4[106];
    struct poco_pointf _field5[114];
    struct poco_pointf _field6[66];
    struct poco_point3f _field7[66];
    float _field8;
    int _field9;
    float _field10;
    float _field11;
    float _field12;
    _Bool _field13;
    _Bool _field14;
    _Bool _field15;
    _Bool _field16;
    _Bool _field17;
    _Bool _field18;
    _Bool _field19;
    _Bool _field20;
    _Bool _field21;
    struct poco_point3f _field22;
    struct poco_point3f _field23;
};

struct function<void ()>;

struct function<void (CBD45359E::component::C0DAF309A)> {
    struct type _field1;
    struct __base<void (CBD45359E::component::C0DAF309A)> *_field2;
};

struct in_addr {
    unsigned int _field1;
};

struct internal_state;

struct layer_registry_entry;

struct mosquitto {
    int _field1;
    char *_field2;
    char *_field3;
    char *_field4;
    char *_field5;
    unsigned short _field6;
    _Bool _field7;
    int _field8;
    long long _field9;
    long long _field10;
    long long _field11;
    unsigned short _field12;
    struct _mosquitto_packet _field13;
    struct _mosquitto_packet *_field14;
    struct _mosquitto_packet *_field15;
    struct mosquitto_message *_field16;
    struct ssl_st *_field17;
    struct ssl_ctx_st *_field18;
    char *_field19;
    char *_field20;
    char *_field21;
    char *_field22;
    CDUnknownFunctionPointerType _field23;
    int _field24;
    char *_field25;
    char *_field26;
    char *_field27;
    char *_field28;
    _Bool _field29;
    _Bool _field30;
    _Bool _field31;
    void *_field32;
    _Bool _field33;
    unsigned int _field34;
    long long _field35;
    struct mosquitto_message_all *_field36;
    CDUnknownFunctionPointerType _field37;
    CDUnknownFunctionPointerType _field38;
    CDUnknownFunctionPointerType _field39;
    CDUnknownFunctionPointerType _field40;
    CDUnknownFunctionPointerType _field41;
    CDUnknownFunctionPointerType _field42;
    CDUnknownFunctionPointerType _field43;
    char *_field44;
    int _field45;
    int _field46;
    char *_field47;
    unsigned int _field48;
    unsigned int _field49;
    _Bool _field50;
    _Bool _field51;
    struct _mosquitto_packet *_field52;
    struct mosquitto_message_all *_field53;
    int _field54;
    int _field55;
};

struct mosquitto_message;

struct mosquitto_message_all;

struct mtjCpuType {
    char *_field1;
    _Bool _field2;
};

struct mutex {
    struct _opaque_pthread_mutex_t __m_;
};

struct poco_point3f {
    float _field1;
    float _field2;
    float _field3;
};

struct poco_pointf {
    float _field1;
    float _field2;
};

struct poco_rectf {
    float _field1;
    float _field2;
    float _field3;
    float _field4;
};

struct queue<std::__1::function<void ()>, std::__1::deque<std::__1::function<void ()>, std::__1::allocator<std::__1::function<void ()>>>> {
    struct deque<std::__1::function<void ()>, std::__1::allocator<std::__1::function<void ()>>> _field1;
};

struct recursive_mutex {
    struct _opaque_pthread_mutex_t __m_;
};

struct shared_ptr<CBD45359E::component::C0A9BBBBA> {
    struct C0A9BBBBA *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<CBD45359E::component::C0B744477> {
    struct C0B744477 *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<CBD45359E::component::C1A3B36D1> {
    struct C1A3B36D1 *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<CBD45359E::component::C5BD38E39> {
    struct C5BD38E39 *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<CBD45359E::component::C6878A8C3> {
    struct C6878A8C3 *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<CBD45359E::component::C7B7C4902> {
    struct C7B7C4902 *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<CBD45359E::component::C7B889EC7> {
    struct C7B889EC7 *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<CBD45359E::component::C9DEB780B> {
    struct C9DEB780B *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<CBD45359E::component::CA7961F06> {
    struct CA7961F06 *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<CBD45359E::component::CB14117C8> {
    struct CB14117C8 *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<CBD45359E::component::CB2D20F1F> {
    struct CB2D20F1F *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<CBD45359E::component::CD0B50E06> {
    struct CD0B50E06 *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<CBD45359E::component::CD37F5BCC> {
    struct CD37F5BCC *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<CBD45359E::component::CE25B559B> {
    struct CE25B559B *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<CBD45359E::component::CE44193FD> {
    struct CE44193FD *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<CBD45359E::component::CE78EF716> {
    struct CE78EF716 *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<CBD45359E::component::CFF153DBB> {
    struct CFF153DBB *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<CBD45359E::component::Image> {
    struct Image *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<CBD45359E::component::Target> {
    struct Target *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<easyar::CameraDevice> {
    struct CameraDevice *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<easyar::CameraFrameStreamer> {
    struct CameraFrameStreamer *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<easyar::ImageTracker> {
    struct ImageTracker *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<easyar::Renderer> {
    struct Renderer *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<void> {
    void *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct sigaction {
    union __sigaction_u {
        CDUnknownFunctionPointerType _field1;
        CDUnknownFunctionPointerType _field2;
    } _field1;
    unsigned int _field2;
    int _field3;
};

struct sockaddr {
    unsigned char _field1;
    unsigned char _field2;
    char _field3[14];
};

struct sockaddr_in {
    unsigned char _field1;
    unsigned char _field2;
    unsigned short _field3;
    struct in_addr _field4;
    char _field5[8];
};

struct sockaddr_storage {
    unsigned char ss_len;
    unsigned char ss_family;
    char __ss_pad1[6];
    long long __ss_align;
    char __ss_pad2[112];
};

struct ssl_ctx_st;

struct ssl_st;

struct thread;

struct tm {
    int tm_sec;
    int tm_min;
    int tm_hour;
    int tm_mday;
    int tm_mon;
    int tm_year;
    int tm_wday;
    int tm_yday;
    int tm_isdst;
    long long tm_gmtoff;
    char *tm_zone;
};

struct tm_zip_s {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned int _field6;
};

struct type {
    unsigned char _field1[24];
};

struct vector<CGRect, std::__1::allocator<CGRect>> {
    struct CGRect *__begin_;
    struct CGRect *__end_;
    struct __compressed_pair<CGRect *, std::__1::allocator<CGRect>> {
        struct CGRect *__first_;
    } __end_cap_;
};

struct vector<MAClipper::IntersectState, std::__1::allocator<MAClipper::IntersectState>> {
    int *_field1;
    int *_field2;
    struct __compressed_pair<MAClipper::IntersectState *, std::__1::allocator<MAClipper::IntersectState>> {
        int *_field1;
    } _field3;
};

struct vector<MAGradientColoredLine::Vertex, std::__1::allocator<MAGradientColoredLine::Vertex>> {
    struct Vertex *_field1;
    struct Vertex *_field2;
    struct __compressed_pair<MAGradientColoredLine::Vertex *, std::__1::allocator<MAGradientColoredLine::Vertex>> {
        struct Vertex *_field1;
    } _field3;
};

struct vector<MANormalLineBuilder::Vertex, std::__1::allocator<MANormalLineBuilder::Vertex>> {
    struct Vertex *_field1;
    struct Vertex *_field2;
    struct __compressed_pair<MANormalLineBuilder::Vertex *, std::__1::allocator<MANormalLineBuilder::Vertex>> {
        struct Vertex *_field1;
    } _field3;
};

struct vector<PoseStablization, std::__1::allocator<PoseStablization>> {
    struct PoseStablization *__begin_;
    struct PoseStablization *__end_;
    struct __compressed_pair<PoseStablization *, std::__1::allocator<PoseStablization>> {
        struct PoseStablization *__first_;
    } __end_cap_;
};

struct vector<TrackerWrapper, std::__1::allocator<TrackerWrapper>> {
    struct TrackerWrapper *__begin_;
    struct TrackerWrapper *__end_;
    struct __compressed_pair<TrackerWrapper *, std::__1::allocator<TrackerWrapper>> {
        struct TrackerWrapper *__first_;
    } __end_cap_;
};

struct vector<ULSTracker *, std::__1::allocator<ULSTracker *>> {
    id *__begin_;
    id *__end_;
    struct __compressed_pair<ULSTracker *__strong *, std::__1::allocator<ULSTracker *>> {
        id *__first_;
    } __end_cap_;
};

struct vector<Vector3<float>, std::__1::allocator<Vector3<float>>> {
    struct Vector3<float> *_field1;
    struct Vector3<float> *_field2;
    struct __compressed_pair<Vector3<float>*, std::__1::allocator<Vector3<float>>> {
        struct Vector3<float> *_field1;
    } _field3;
};

struct vector<Vector4<float>, std::__1::allocator<Vector4<float>>> {
    struct Vector4<float> *_field1;
    struct Vector4<float> *_field2;
    struct __compressed_pair<Vector4<float>*, std::__1::allocator<Vector4<float>>> {
        struct Vector4<float> *_field1;
    } _field3;
};

struct vector<bool, std::__1::allocator<bool>> {
    unsigned long long *__begin_;
    unsigned long long __size_;
    struct __compressed_pair<unsigned long, std::__1::allocator<unsigned long>> {
        unsigned long long __first_;
    } __cap_alloc_;
};

struct vector<cv::Mat_<float>, std::__1::allocator<cv::Mat_<float>>> {
    struct Mat_<float> *__begin_;
    struct Mat_<float> *__end_;
    struct __compressed_pair<cv::Mat_<float>*, std::__1::allocator<cv::Mat_<float>>> {
        struct Mat_<float> *__first_;
    } __end_cap_;
};

struct vector<float *, std::__1::allocator<float *>> {
    float **__begin_;
    float **__end_;
    struct __compressed_pair<float **, std::__1::allocator<float *>> {
        float **__first_;
    } __end_cap_;
};

struct vector<float, std::__1::allocator<float>> {
    float *__begin_;
    float *__end_;
    struct __compressed_pair<float *, std::__1::allocator<float>> {
        float *__first_;
    } __end_cap_;
};

struct vector<ncnn::Blob, std::__1::allocator<ncnn::Blob>> {
    struct Blob *_field1;
    struct Blob *_field2;
    struct __compressed_pair<ncnn::Blob *, std::__1::allocator<ncnn::Blob>> {
        struct Blob *_field1;
    } _field3;
};

struct vector<ncnn::Layer *, std::__1::allocator<ncnn::Layer *>> {
    struct Layer **_field1;
    struct Layer **_field2;
    struct __compressed_pair<ncnn::Layer **, std::__1::allocator<ncnn::Layer *>> {
        struct Layer **_field1;
    } _field3;
};

struct vector<ncnn::layer_registry_entry, std::__1::allocator<ncnn::layer_registry_entry>> {
    struct layer_registry_entry *_field1;
    struct layer_registry_entry *_field2;
    struct __compressed_pair<ncnn::layer_registry_entry *, std::__1::allocator<ncnn::layer_registry_entry>> {
        struct layer_registry_entry *_field1;
    } _field3;
};

struct vector<short, std::__1::allocator<short>> {
    short *_field1;
    short *_field2;
    struct __compressed_pair<short *, std::__1::allocator<short>> {
        short *_field1;
    } _field3;
};

struct vector<std::__1::thread, std::__1::allocator<std::__1::thread>> {
    struct thread *_field1;
    struct thread *_field2;
    struct __compressed_pair<std::__1::thread *, std::__1::allocator<std::__1::thread>> {
        struct thread *_field1;
    } _field3;
};

struct vector<std::__1::vector<Vector3<float>, std::__1::allocator<Vector3<float>>>, std::__1::allocator<std::__1::vector<Vector3<float>, std::__1::allocator<Vector3<float>>>>> {
    vector_f60ea51c *_field1;
    vector_f60ea51c *_field2;
    struct __compressed_pair<std::__1::vector<Vector3<float>, std::__1::allocator<Vector3<float>>>*, std::__1::allocator<std::__1::vector<Vector3<float>, std::__1::allocator<Vector3<float>>>>> {
        vector_f60ea51c *_field1;
    } _field3;
};

struct vector<unsigned short, std::__1::allocator<unsigned short>> {
    unsigned short *_field1;
    unsigned short *_field2;
    struct __compressed_pair<unsigned short *, std::__1::allocator<unsigned short>> {
        unsigned short *_field1;
    } _field3;
};

struct weak_ptr<CBD45359E::component::CA7961F06> {
    struct CA7961F06 *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct weak_ptr<CBD45359E::component::Component> {
    struct Component *_field1;
    struct __shared_weak_count *_field2;
};

struct z_stream_s {
    char *next_in;
    unsigned int avail_in;
    unsigned long long total_in;
    char *next_out;
    unsigned int avail_out;
    unsigned long long total_out;
    char *msg;
    struct internal_state *state;
    CDUnknownFunctionPointerType zalloc;
    CDUnknownFunctionPointerType zfree;
    void *opaque;
    int data_type;
    unsigned long long adler;
    unsigned long long reserved;
};

#if 0
// Names with conflicting types:
typedef struct {
    vector_195fe69b _field1;
    struct vector<MAGradientColoredLine::Vertex, std::__1::allocator<MAGradientColoredLine::Vertex>> _field2;
} Drawable_98991264;

typedef struct {
    vector_195fe69b _field1;
    struct vector<MANormalLineBuilder::Vertex, std::__1::allocator<MANormalLineBuilder::Vertex>> _field2;
    vector_195fe69b _field3;
    vector_195fe69b _field4;
} Drawable_97df83bd;

typedef struct {
    CDUnknownFunctionPointerType *_field1;
    float _field2;
    float _field3;
    struct Drawable {
        vector_195fe69b _field1;
        struct vector<MANormalLineBuilder::Vertex, std::__1::allocator<MANormalLineBuilder::Vertex>> _field2;
        vector_195fe69b _field3;
        vector_195fe69b _field4;
    } _field4;
    vector_f60ea51c _field5;
    struct vector<float, std::__1::allocator<float>> _field6;
} MALineBuilder_a517bab4;

typedef struct {
    CDUnknownFunctionPointerType *_field1;
    float _field2;
    float _field3;
    struct Vector4<float> _field4;
    struct Drawable {
        vector_195fe69b _field1;
        struct vector<MAGradientColoredLine::Vertex, std::__1::allocator<MAGradientColoredLine::Vertex>> _field2;
    } _field5;
    vector_f60ea51c _field6;
    struct vector<float, std::__1::allocator<float>> _field7;
    struct vector<Vector4<float>, std::__1::allocator<Vector4<float>>> _field8;
} MALineBuilder_bdfb273c;

#endif

#pragma mark Typedef'd Structures

typedef struct {
    _Bool _field1;
    unsigned char _field2;
    _Bool _field3;
    unsigned long long _field4;
} CDStruct_6a6a01a4;

typedef struct {
    unsigned int major;
    unsigned int minor;
    unsigned int bugfix;
} CDStruct_e24ffa00;

typedef struct {
    unsigned long long _field1;
    id *_field2;
    unsigned long long *_field3;
    unsigned long long _field4[5];
} CDStruct_70511ce9;

typedef struct {
    char *_field1;
    void **_field2;
    unsigned int _field3;
    int _field4;
} CDStruct_19471fff;

typedef struct {
    char *header;
    long long header_len;
    char *body;
    long long body_len;
} CDStruct_3b4b9e0a;

typedef struct {
    char *body_data;
    long long body_storage;
    long long body_fill;
    long long body_returned;
    int *lacing_vals;
    long long *granule_vals;
    long long lacing_storage;
    long long lacing_fill;
    long long lacing_packet;
    long long lacing_returned;
    unsigned char header[282];
    int header_fill;
    int e_o_s;
    int b_o_s;
    long long serialno;
    long long pageno;
    long long packetno;
    long long granulepos;
} CDStruct_a58b8198;

typedef struct {
    unsigned int layoutNeedUpdate:1;
    unsigned int showingHighlight:1;
    unsigned int trackingTouch:1;
    unsigned int swallowTouch:1;
    unsigned int touchMoved:1;
    unsigned int hasTapAction:1;
    unsigned int hasLongPressAction:1;
    unsigned int contentsNeedFade:1;
} CDStruct_d5031506;

typedef struct {
    unsigned int trackingGrabber:2;
    unsigned int trackingCaret:1;
    unsigned int trackingPreSelect:1;
    unsigned int trackingTouch:1;
    unsigned int swallowTouch:1;
    unsigned int touchMoved:3;
    unsigned int selectedWithoutEdit:1;
    unsigned int deleteConfirm:1;
    unsigned int ignoreFirstResponder:1;
    unsigned int ignoreTouchBegan:1;
    unsigned int showingMagnifierCaret:1;
    unsigned int showingMagnifierRanged:1;
    unsigned int showingMenu:1;
    unsigned int showingHighlight:1;
    unsigned int typingAttributesOnce:1;
    unsigned int clearsOnInsertionOnce:1;
    unsigned int autoScrollTicked:1;
    unsigned int firstShowDot:1;
    unsigned int needUpdate:1;
    unsigned int placeholderNeedUpdate:1;
    unsigned int insideUndoBlock:1;
    unsigned int firstResponderBeforeUndoAlert:1;
} CDStruct_cc4e03cb;

typedef struct {
    double _field1;
    double _field2;
} CDStruct_c3b9c2ee;

typedef struct {
    float minimum;
    float maximum;
} CDStruct_930042bc;

typedef struct {
    long long _field1;
    void *_field2;
    CDUnknownFunctionPointerType _field3;
    CDUnknownFunctionPointerType _field4;
    CDUnknownFunctionPointerType _field5;
} CDStruct_e097db04;

typedef struct {
    long long value;
    int timescale;
    unsigned int flags;
    long long epoch;
} CDStruct_1b6d18a9;

typedef struct {
    long long _field1;
    long long _field2;
    long long _field3;
} CDStruct_2ec95fd7;

typedef struct {
    long long _field1;
    long long _field2;
} CDStruct_912cb5d2;

typedef struct CDStruct_183601bc;

typedef struct {
    struct {
        unsigned int _field1;
        unsigned int _field2;
        unsigned char _field3;
        unsigned char _field4;
        unsigned char _field5;
        unsigned char _field6;
        unsigned char _field7;
    } _field1;
    CDStruct_183601bc *_field2;
    unsigned int _field3;
    CDStruct_183601bc *_field4;
    unsigned int _field5;
    unsigned int _field6;
    unsigned int *_field7;
    unsigned int _field8;
    unsigned int _field9;
    unsigned int _field10;
    _Bool _field11;
} CDStruct_d0590039;

typedef struct {
    CDStruct_1b6d18a9 start;
    CDStruct_1b6d18a9 duration;
} CDStruct_e83c9415;

typedef struct {
    struct tm_zip_s _field1;
    unsigned long long _field2;
    unsigned long long _field3;
    unsigned long long _field4;
} CDStruct_192a48cb;

typedef struct {
    _Bool _field1;
    _Bool _field2;
    struct CGRect _field3;
    struct CGRect _field4;
    double _field5;
    long long _field6;
    unsigned long long _field7;
} CDStruct_902a08d0;

// Ambiguous groups
typedef struct {
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
} CDStruct_d8808cea;

typedef struct {
    float _field1;
    float _field2;
    float _field3;
    float _field4;
} CDStruct_818bb265;

typedef struct shared_ptr<CBD45359E::component::C0A9BBBBA> {
    struct C0A9BBBBA *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_b49e3a4b;

typedef struct shared_ptr<CBD45359E::component::C0B744477> {
    struct C0B744477 *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_41eefe70;

typedef struct shared_ptr<CBD45359E::component::C1A3B36D1> {
    struct C1A3B36D1 *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_37c40124;

typedef struct shared_ptr<CBD45359E::component::C5BD38E39> {
    struct C5BD38E39 *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_ddcd7214;

typedef struct shared_ptr<CBD45359E::component::C7B7C4902> {
    struct C7B7C4902 *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_9bccee7a;

typedef struct shared_ptr<CBD45359E::component::C7B889EC7> {
    struct C7B889EC7 *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_e6d8a1f4;

typedef struct shared_ptr<CBD45359E::component::C9DEB780B> {
    struct C9DEB780B *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_71940418;

typedef struct shared_ptr<CBD45359E::component::CA7961F06> {
    struct CA7961F06 *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_5c69a3a8;

typedef struct shared_ptr<CBD45359E::component::CB14117C8> {
    struct CB14117C8 *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_49a4e9ae;

typedef struct shared_ptr<CBD45359E::component::CB2D20F1F> {
    struct CB2D20F1F *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_b7cce5bc;

typedef struct shared_ptr<CBD45359E::component::CD0B50E06> {
    struct CD0B50E06 *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_346100f9;

typedef struct shared_ptr<CBD45359E::component::CD37F5BCC> {
    struct CD37F5BCC *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_ff268e90;

typedef struct shared_ptr<CBD45359E::component::CE25B559B> {
    struct CE25B559B *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_96fef941;

typedef struct shared_ptr<CBD45359E::component::CE44193FD> {
    struct CE44193FD *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_34c58c53;

typedef struct shared_ptr<CBD45359E::component::CE78EF716> {
    struct CE78EF716 *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_3602c073;

typedef struct shared_ptr<CBD45359E::component::CFF153DBB> {
    struct CFF153DBB *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_595605f9;

typedef struct shared_ptr<CBD45359E::component::Image> {
    struct Image *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_4e053757;

typedef struct shared_ptr<CBD45359E::component::Target> {
    struct Target *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_ead77b11;

typedef struct shared_ptr<void> {
    void *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_b60d0e1e;

typedef struct vector<Vector3<float>, std::__1::allocator<Vector3<float>>> {
    struct Vector3<float> *_field1;
    struct Vector3<float> *_field2;
    struct __compressed_pair<Vector3<float>*, std::__1::allocator<Vector3<float>>> {
        struct Vector3<float> *_field1;
    } _field3;
} vector_f60ea51c;

typedef struct vector<std::__1::vector<Vector3<float>, std::__1::allocator<Vector3<float>>>, std::__1::allocator<std::__1::vector<Vector3<float>, std::__1::allocator<Vector3<float>>>>> {
    vector_f60ea51c *_field1;
    vector_f60ea51c *_field2;
    struct __compressed_pair<std::__1::vector<Vector3<float>, std::__1::allocator<Vector3<float>>>*, std::__1::allocator<std::__1::vector<Vector3<float>, std::__1::allocator<Vector3<float>>>>> {
        vector_f60ea51c *_field1;
    } _field3;
} vector_aac46ba0;

typedef struct vector<unsigned short, std::__1::allocator<unsigned short>> {
    unsigned short *_field1;
    unsigned short *_field2;
    struct __compressed_pair<unsigned short *, std::__1::allocator<unsigned short>> {
        unsigned short *_field1;
    } _field3;
} vector_195fe69b;

typedef struct weak_ptr<CBD45359E::component::CA7961F06> {
    struct CA7961F06 *__ptr_;
    struct __shared_weak_count *__cntrl_;
} weak_ptr_c96f98be;

#pragma mark Named Unions

union _GLKMatrix3 {
    struct {
        float _field1;
        float _field2;
        float _field3;
        float _field4;
        float _field5;
        float _field6;
        float _field7;
        float _field8;
        float _field9;
    } _field1;
    float _field2[9];
};

union _GLKMatrix4 {
    struct {
        float m00;
        float m01;
        float m02;
        float m03;
        float m10;
        float m11;
        float m12;
        float m13;
        float m20;
        float m21;
        float m22;
        float m23;
        float m30;
        float m31;
        float m32;
        float m33;
    } ;
    float m[16];
};

union _GLKVector3 {
    struct {
        float x;
        float y;
        float z;
    } ;
    struct {
        float r;
        float g;
        float b;
    } ;
    struct {
        float s;
        float t;
        float p;
    } ;
    float v[3];
};

union _GLKVector4 {
    struct {
        float x;
        float y;
        float z;
        float w;
    } ;
    struct {
        float r;
        float g;
        float b;
        float a;
    } ;
    struct {
        float s;
        float t;
        float p;
        float q;
    } ;
    float v[4];
};

