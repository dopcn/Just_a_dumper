//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

@class GMSModelStyleIcon, GMSx_GPBMessage, NSData, NSMutableData, NSObject, NSOutputStream, NSString;

#pragma mark Function Pointers and Blocks

typedef void (*CDUnknownFunctionPointerType)(void); // return type and parameters are unknown

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct AVAsset {
    Class _field1;
    id _field2;
};

struct AVPlayer {
    Class _field1;
    id _field2;
};

struct AVPlayerItem {
    Class _field1;
    id _field2;
};

struct AVPlayerLayer {
    Class _field1;
    struct _CALayerIvars _field2;
    id _field3;
};

struct AbsolutePosition;

struct AdjustableTextureShaderState;

struct Alignment {
    unsigned char value_;
};

struct Arena;

struct ArenaStringPtr {
    basic_string_a490aa4c *ptr_;
};

struct AudioLinkEvent {
    CDUnknownFunctionPointerType onEvent;
    void *userData;
};

struct Behavior;

struct BlendState;

struct BlockBasedBehavior;

struct BubbleBehavior;

struct CATransform3D {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
    double _field5;
    double _field6;
    double _field7;
    double _field8;
    double _field9;
    double _field10;
    double _field11;
    double _field12;
    double _field13;
    double _field14;
    double _field15;
    double _field16;
};

struct CGAffineTransform {
    double a;
    double b;
    double c;
    double d;
    double tx;
    double ty;
};

struct CGPoint {
    double x;
    double y;
};

struct CGRect {
    struct CGPoint origin;
    struct CGSize size;
};

struct CGSize {
    double width;
    double height;
};

struct CLLocationCoordinate2D {
    double latitude;
    double longitude;
};

struct CalloutImageLayout {
    struct {
        unsigned int x;
        unsigned int y;
    } imageAnchor;
    CDStruct_0a4f9365 contentCollisionBounds;
    CDStruct_0a4f9365 arrowCollisionBounds;
    struct {
        unsigned int width;
        unsigned int height;
    } imageSize;
};

struct CalloutSharedState;

struct CalloutStrategy;

struct Camera {
    CDUnknownFunctionPointerType *_vptr$MessageLite;
    struct InternalMetadataWithArenaLite _internal_metadata_;
    struct HasBits<1> _has_bits_;
    int _cached_size_;
    struct GMSx_Location *location_;
    struct Rotation *rotation_;
    struct Size *screen_size_;
    float field_of_view_y_;
};

struct ClickToGoMap;

struct Collidable2D {
    CDUnknownFunctionPointerType *_field1;
};

struct CollidableSet2D;

struct ColorMaskState;

struct ColorMatrix {
    float *m_;
};

struct ColorSpan;

struct ColoredOverlayBehavior;

struct ColoredPoint;

struct CookieStore;

struct DASHDataInputProvider {
    CDUnknownFunctionPointerType *_vptr$DataInputProvider;
    _Bool doneAdding_;
    _Bool gotError_;
    NSObject *data_ready_semaphore_;
    NSObject *access_semaphore_;
    NSMutableData *data_;
    char *base_;
    unsigned long long size_;
    unsigned long long offset_;
};

struct DataInputProvider;

struct DefaultAlphaShaderState;

struct DefaultShaderState;

struct DepthBufferState;

struct EffectService {
    CDUnknownFunctionPointerType *_field1;
    struct EffectServiceListener *_field2;
    struct EffectServiceLuaScriptListener *_field3;
    struct unordered_map<long long, std::__1::shared_ptr<yuki::Effector>, std::__1::hash<long long>, std::__1::equal_to<long long>, std::__1::allocator<std::__1::pair<const long long, std::__1::shared_ptr<yuki::Effector>>>> _field4;
    struct mutex _field5;
};

struct EffectServiceListener;

struct EffectServiceLuaScriptListener;

struct Effector;

struct Entity;

struct EntityRenderer {
    CDUnknownFunctionPointerType *_field1;
    struct vector<gmscore::base::reffed_ptr<gmscore::renderer::BaseEntity>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::renderer::BaseEntity>>> _field2;
    struct GMSx_Mutex _field3;
    struct vector<gmscore::renderer::EntityRenderer::PendingOp, std::__1::allocator<gmscore::renderer::EntityRenderer::PendingOp>> _field4;
    struct list<gmscore::base::reffed_ptr<gmscore::renderer::Behavior>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::renderer::Behavior>>> _field5;
    struct set<gmscore::base::reffed_ptr<gmscore::renderer::RenderTarget>, std::__1::less<gmscore::base::reffed_ptr<gmscore::renderer::RenderTarget>>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::renderer::RenderTarget>>> _field6;
    struct set<gmscore::base::reffed_ptr<gmscore::renderer::Camera3D>, std::__1::less<gmscore::base::reffed_ptr<gmscore::renderer::Camera3D>>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::renderer::Camera3D>>> _field7;
    struct map<const char *, gmscore::renderer::RenderBin *, std::__1::less<const char *>, std::__1::allocator<std::__1::pair<const char *const, gmscore::renderer::RenderBin *>>> _field8;
    vector_ef47c132 _field9;
    reffed_ptr_c8344b08 _field10[13];
    struct GMSx_Time *_field11;
    _Bool _field12;
    _Bool _field13;
    struct FPSCounter _field14;
    unsigned int _field15;
    reffed_ptr_f31d11c9 _field16;
    struct vector<gmscore::renderer::EntityRenderer::PendingOp, std::__1::allocator<gmscore::renderer::EntityRenderer::PendingOp>> _field17;
};

struct EntityState;

struct FPSCounter {
    double _field1;
    double _field2;
    int _field3;
};

struct FaceData {
    int _field1;
    int _field2;
    _Bool _field3;
    unsigned long long _field4;
    float _field5;
    float _field6;
    float _field7;
    float _field8;
    float *_field9;
    float *_field10;
    float *_field11;
    float *_field12;
    float *_field13;
    struct Rectangle _field14;
    struct Rectangle _field15;
    _Bool _field16;
    struct Rectangle _field17;
    struct Rectangle _field18;
    float _field19;
    float _field20;
    float _field21;
    float _field22;
    float _field23;
    float _field24;
    float _field25;
    float _field26;
    float _field27;
    float _field28;
    float *_field29;
    float *_field30;
    float *_field31;
    float _field32;
    float _field33;
    float _field34;
    float _field35;
    float _field36;
    float _field37;
    float *_field38;
    float *_field39;
    float *_field40;
};

struct FeatureData;

struct FeatureID {
    unsigned long long cell_id_;
    unsigned long long fingerprint_;
    unsigned long long hash_;
    _Bool is_valid_;
};

struct FilterListManager;

struct Frustum2D {
    CDUnknownFunctionPointerType *_field1;
    struct Point2D _field2;
    struct Point2D _field3;
    struct Point2D _field4;
    struct Point2D _field5;
    struct Rectangle2D _field6;
};

struct GAIReachabilityApi {
    CDUnknownFunctionPointerType _field1;
    CDUnknownFunctionPointerType _field2;
    CDUnknownFunctionPointerType _field3;
    CDUnknownFunctionPointerType _field4;
    CDUnknownFunctionPointerType _field5;
};

struct GLAlphaOnlyTextureShaderState;

struct GLAlphaShaderState;

struct GLAreaGroup;

struct GLBasicShaderState;

struct GLBuildingFadingAlphaShaderState;

struct GLBuildingFadingShaderState;

struct GLBuildingGroupFadeBehavior;

struct GLColorPair {
    unsigned int first;
    unsigned int second;
};

struct GLLabel;

struct GLLabelGroup {
    CDUnknownFunctionPointerType *_field1;
    struct vector<std::__1::vector<gmscore::base::reffed_ptr<gmscore::vector::GLLabelGroupElement>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::GLLabelGroupElement>>>, std::__1::allocator<std::__1::vector<gmscore::base::reffed_ptr<gmscore::vector::GLLabelGroupElement>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::GLLabelGroupElement>>>>> _field2;
    int _field3;
    int _field4;
    float _field5;
    float _field6;
    float _field7;
    float _field8;
    id _field9;
    int _field10;
    int _field11;
    float _field12;
    struct LabelTheme *_field13;
    int _field14;
    _Bool _field15;
    _Bool _field16;
    struct Vector2f _field17;
    id _field18;
    struct reffed_ptr<gmscore::vector::IconTextureCache> _field19;
    struct GLLabel *_field20;
    struct set<std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::basic_string<char>>> _field21;
    id _field22;
    id _field23;
};

struct GLState {
    CDUnknownFunctionPointerType *_field1;
    struct GLrectangle _field2;
    struct GLrectangle _field3;
    _Bool _field4;
    unsigned int _field5;
    struct Vector4f _field6;
    _Bool _field7;
    int _field8;
    _Bool _field9;
    float _field10;
    _Bool _field11;
    _Bool _field12;
    _Bool _field13;
    _Bool _field14;
    _Bool _field15;
    _Bool _field16;
    _Bool _field17;
    _Bool _field18;
    unsigned int _field19;
    _Bool _field20;
    unsigned int _field21;
    unsigned int _field22;
    unsigned int _field23[8];
    unsigned int _field24;
    _Bool _field25;
    unsigned int _field26;
    _Bool _field27;
    unsigned int _field28;
    _Bool _field29;
    unsigned int _field30;
    _Bool _field31;
    unsigned int _field32;
    unsigned int _field33;
    _Bool _field34;
    unsigned int _field35;
    int _field36;
    unsigned int _field37;
    _Bool _field38;
    unsigned int _field39;
    _Bool _field40;
    unsigned int _field41;
    unsigned int _field42;
    unsigned int _field43;
    _Bool _field44;
    float _field45;
    float _field46;
    _Bool _field47;
    unsigned int _field48;
    _Bool _field49;
    struct map<std::__1::basic_string<char>, gmscore::base::reffed_ptr<gmscore::renderer::ShaderProgram>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, gmscore::base::reffed_ptr<gmscore::renderer::ShaderProgram>>>> _field50;
    float _field51;
    _Bool _field52;
    unsigned long long _field53;
    unsigned int _field54;
    unsigned int _field55;
};

struct GLStrokeLayer {
    CDUnknownFunctionPointerType *_field1;
    struct vector<gmscore::base::reffed_ptr<gmscore::renderer::Entity>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::renderer::Entity>>> _field2;
    struct ZOrdering _field3;
    int _field4;
    int _field5;
    unsigned long long _field6;
    vector_5b3bfa18 _field7;
    vector_5b3bfa18 _field8;
    unsigned long long _field9;
    unsigned long long _field10;
    struct vector<gmscore::vector::GLStrokeLayer::LineAttributeInfo, std::__1::allocator<gmscore::vector::GLStrokeLayer::LineAttributeInfo>> _field11;
    id _field12;
    reffed_ptr_7371fe81 _field13;
    reffed_ptr_7371fe81 _field14;
    struct unordered_set<std::__1::basic_string<char>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::basic_string<char>>> _field15;
    struct unordered_set<std::__1::basic_string<char>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::basic_string<char>>> _field16;
    _Bool _field17;
    _Bool _field18;
    _Bool _field19;
    reffed_ptr_484c2754 _field20;
    struct reffed_ptr<gmscore::vector::GMSStippleTexture> _field21;
    unsigned long long _field22;
    char *_field23;
    struct vector<std::__1::vector<gmscore::base::reffed_ptr<gmscore::renderer::SafeVBOWithAttributes<gmscore::vector::GMSLineColorAndWidthAttributes>>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::renderer::SafeVBOWithAttributes<gmscore::vector::GMSLineColorAndWidthAttributes>>>>, std::__1::allocator<std::__1::vector<gmscore::base::reffed_ptr<gmscore::renderer::SafeVBOWithAttributes<gmscore::vector::GMSLineColorAndWidthAttributes>>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::renderer::SafeVBOWithAttributes<gmscore::vector::GMSLineColorAndWidthAttributes>>>>>> _field24;
    struct vector<std::__1::vector<gmscore::base::reffed_ptr<gmscore::renderer::SafeVBOWithAttributes<gmscore::vector::GMSLineStampAttributes>>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::renderer::SafeVBOWithAttributes<gmscore::vector::GMSLineStampAttributes>>>>, std::__1::allocator<std::__1::vector<gmscore::base::reffed_ptr<gmscore::renderer::SafeVBOWithAttributes<gmscore::vector::GMSLineStampAttributes>>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::renderer::SafeVBOWithAttributes<gmscore::vector::GMSLineStampAttributes>>>>>> _field25;
    struct vector<std::__1::vector<gmscore::base::reffed_ptr<gmscore::renderer::SafeVBOWithAttributes<gmscore::vector::GMSLineStippleAttributes>>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::renderer::SafeVBOWithAttributes<gmscore::vector::GMSLineStippleAttributes>>>>, std::__1::allocator<std::__1::vector<gmscore::base::reffed_ptr<gmscore::renderer::SafeVBOWithAttributes<gmscore::vector::GMSLineStippleAttributes>>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::renderer::SafeVBOWithAttributes<gmscore::vector::GMSLineStippleAttributes>>>>>> _field26;
    id _field27;
};

struct GLTileUpdaterBehavior;

struct GLrectangle {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
};

struct GMSContourList {
    vector_e0f2bd7e indices_;
    vector_ac2b163d vertices_;
};

struct GMSCoordinate {
    double latitude;
    double longitude;
};

struct GMSCoordinateRectangle {
    struct GMSCoordinate center;
    struct GMSCoordinate span;
};

struct GMSCopyrightOverlayPadding {
    double _field1;
    double _field2;
    long long _field3;
};

struct GMSEntityTapClassStatusSet {
    _Bool is_whitelist_;
    struct set<unsigned short, std::__1::less<unsigned short>, std::__1::allocator<unsigned short>> classes_;
};

struct GMSEntityTapOrdering {
    struct GMSEntityTapPriority tapPriority;
    struct tuple<int, int, unsigned int> zOrder;
    short rank;
};

struct GMSEntityTapPriority {
    unsigned short tapClass;
    unsigned short relativePriority;
};

struct GMSGeneratedTextureAtlas;

struct GMSLazyMultiZoomStyle;

struct GMSMarkupBehavior;

struct GMSRocketIconService {
    CDUnknownFunctionPointerType *_field1;
    struct map<std::__1::basic_string<char>, std::__1::weak_ptr<GMSRocketIconService::Holder>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::weak_ptr<GMSRocketIconService::Holder>>>> _field2;
};

struct GMSStippleTexture;

struct GMSStippleTexturePool;

struct GMSTextureAtlas {
    int _field1;
    int _field2;
    int _field3;
    struct GMSTextureAtlasItem *_field4;
};

struct GMSTextureAtlasItem;

struct GMSTileTypeInfo {
    int _field1;
    int _field2;
    unsigned int _field3;
    int _field4;
    _Bool _field5;
    _Bool _field6;
    _Bool _field7;
    _Bool _field8;
    _Bool _field9;
    _Bool _field10;
    _Bool _field11;
};

struct GMSx_LOGGMMUserInteraction_Params {
    Class _field1;
};

struct GMSx_Location;

struct GMSx_Mutex {
    struct _opaque_pthread_mutex_t mutex_;
    _Bool is_safe_;
    _Bool destroy_;
};

struct GMSx_Time {
    CDUnknownFunctionPointerType *_field1;
};

struct GPBCodedInputStreamState {
    char *bytes;
    unsigned long long bufferSize;
    unsigned long long bufferPos;
    unsigned long long currentLimit;
    int lastTag;
    unsigned long long recursionDepth;
};

struct GPBExtensionDescription {
    CDUnion_7ae79ea2 _field1;
    char *_field2;
    char *_field3;
    char *_field4;
    CDUnknownFunctionPointerType _field5;
    int _field6;
    unsigned char _field7;
    unsigned char _field8;
};

struct GPBExtensionRange {
    unsigned int _field1;
    unsigned int _field2;
};

struct GPBMessageFieldDescription {
    char *_field1;
    union {
        char *_field1;
        CDUnknownFunctionPointerType _field2;
        CDUnknownFunctionPointerType _field3;
    } _field2;
    unsigned int _field3;
    int _field4;
    unsigned int _field5;
    unsigned short _field6;
    unsigned char _field7;
};

struct GPBMessage_Storage {
    unsigned int _field1[0];
};

struct GPBOutputBufferState {
    char *bytes;
    unsigned long long size;
    unsigned long long position;
    NSOutputStream *output;
};

struct HasBits<1> {
    unsigned int has_bits_[1];
};

struct Holder;

struct IImage {
    CDUnknownFunctionPointerType *_field1;
};

struct IOSGLState;

struct IOSPlatformContext {
    CDUnknownFunctionPointerType *_field1;
    struct unique_ptr<GMSx_gmm_photo::api::Service<GMSx_gmm_photo::api::Tile, GMSx_gmm_photo::api::Image>, std::__1::default_delete<GMSx_gmm_photo::api::Service<GMSx_gmm_photo::api::Tile, GMSx_gmm_photo::api::Image>>> _field2;
    struct unique_ptr<GMSx_gmm_photo::api::SchedulingService, std::__1::default_delete<GMSx_gmm_photo::api::SchedulingService>> _field3;
    struct unique_ptr<GMSx_gmm_photo::api::Service<GMSx_gmm_photo::api::AreaConnectivityRequest, GMSx_gmm_photo::api::AreaConnectivityResponse>, std::__1::default_delete<GMSx_gmm_photo::api::Service<GMSx_gmm_photo::api::AreaConnectivityRequest, GMSx_gmm_photo::api::AreaConnectivityResponse>>> _field4;
    struct unique_ptr<GMSx_gmm_photo::api::Service<GMSx_gmm_photo::api::Text, GMSx_gmm_photo::api::Image>, std::__1::default_delete<GMSx_gmm_photo::api::Service<GMSx_gmm_photo::api::Text, GMSx_gmm_photo::api::Image>>> _field5;
    struct unique_ptr<GMSx_gmm_photo::api::Service<GMSx_gmm_photo::api::IconSource, GMSx_gmm_photo::api::Image>, std::__1::default_delete<GMSx_gmm_photo::api::Service<GMSx_gmm_photo::api::IconSource, GMSx_gmm_photo::api::Image>>> _field6;
    id _field7;
};

struct IVIOSGLContext;

struct IconHandle {
    struct __hash_const_iterator<std::__1::__hash_node<std::__1::unique_ptr<GMSx_gmm_photo::api::IconOptions, std::__1::default_delete<GMSx_gmm_photo::api::IconOptions>>, void *>*> {
        struct __hash_node<std::__1::unique_ptr<GMSx_gmm_photo::api::IconOptions, std::__1::default_delete<GMSx_gmm_photo::api::IconOptions>>, void *> *_field1;
    } _field1;
};

struct IconOptions {
    CDUnknownFunctionPointerType *_vptr$MessageLite;
    struct InternalMetadataWithArenaLite _internal_metadata_;
    struct HasBits<1> _has_bits_;
    int _cached_size_;
    struct ArenaStringPtr url_;
    double latitude_;
    double longitude_;
    double altitude_;
    long long resource_id_;
    float opacity_;
    float scale_;
    float anchor_offset_x_;
    float anchor_offset_y_;
};

struct IconRenderer {
    CDUnknownFunctionPointerType *_field1;
};

struct IconTextureCache;

struct ImageData;

struct ImageDataSignature {
    unsigned long long _field1;
    unsigned long long _field2;
};

struct IndexedTriangleList2D {
    vector_aa37bc82 vertices_;
    vector_e0f2bd7e indices_;
};

struct IndoorID {
    unsigned long long cell_id_;
    unsigned long long fingerprint_;
    unsigned long long hash_;
    _Bool is_valid_;
};

struct IndoorTileAnimationBehavior;

struct InternalMetadataWithArenaLite {
    void *ptr_;
};

struct Item;

struct JKConstBuffer {
    struct JKConstPtrRange _field1;
};

struct JKConstPtrRange {
    char *_field1;
    unsigned long long _field2;
};

struct JKEncodeCache {
    id _field1;
    unsigned long long _field2;
    unsigned long long _field3;
};

struct JKEncodeState {
    struct JKManagedBuffer _field1;
    struct JKManagedBuffer _field2;
    unsigned long long _field3;
    struct JKFastClassLookup _field4;
    struct JKEncodeCache _field5[1024];
    unsigned long long _field6;
    unsigned long long _field7;
    unsigned long long _field8;
    id _field9;
    id _field10;
    SEL _field11;
    CDUnknownFunctionPointerType _field12;
    CDUnknownBlockType _field13;
};

struct JKFastClassLookup {
    void *_field1;
    void *_field2;
    void *_field3;
    void *_field4;
    void *_field5;
};

struct JKHashTableEntry {
    unsigned long long _field1;
    id _field2;
    id _field3;
};

struct JKManagedBuffer {
    struct JKPtrRange _field1;
    unsigned long long _field2;
    unsigned long long _field3;
};

struct JKObjCImpCache {
    Class _field1;
    CDUnknownFunctionPointerType _field2;
    CDUnknownFunctionPointerType _field3;
};

struct JKObjectStack {
    void **_field1;
    void **_field2;
    unsigned long long *_field3;
    unsigned long long _field4;
    unsigned long long _field5;
    unsigned long long _field6;
    unsigned long long _field7;
};

struct JKParseToken {
    struct JKConstPtrRange _field1;
    unsigned long long _field2;
    struct JKTokenValue _field3;
    struct JKManagedBuffer _field4;
};

struct JKPtrRange {
    char *_field1;
    unsigned long long _field2;
};

struct JKTokenCache {
    struct JKTokenCacheItem *_field1;
    unsigned long long _field2;
    unsigned int _field3;
    unsigned char _field4[1024];
};

struct JKTokenCacheItem;

struct JKTokenValue {
    struct JKConstPtrRange _field1;
    unsigned long long _field2;
    unsigned long long _field3;
    union {
        long long _field1;
        unsigned long long _field2;
        double _field3;
    } _field4;
    struct JKTokenCacheItem *_field5;
};

struct JavaDataInput {
    struct DataInputProvider *_field1;
};

struct JavaDataOutput {
    id _field1;
};

struct KaleEffectTextModel {
    struct vector<kuru::KaleTextRenderItem, std::__1::allocator<kuru::KaleTextRenderItem>> _field1;
    struct vector<kuru::KaleTextLayer, std::__1::allocator<kuru::KaleTextLayer>> _field2;
    struct Vector2 _field3;
    basic_string_a490aa4c _field4;
    basic_string_a490aa4c _field5;
    basic_string_a490aa4c _field6;
    basic_string_a490aa4c _field7;
    double _field8;
    double _field9;
    double _field10;
    double _field11;
    int _field12;
    int _field13;
    _Bool _field14;
    _Bool _field15;
    basic_string_a490aa4c _field16;
};

struct KaleTextLayer {
    _Bool _field1;
    _Bool _field2;
    _Bool _field3;
    basic_string_a490aa4c _field4;
    basic_string_a490aa4c _field5;
    basic_string_a490aa4c _field6;
    basic_string_a490aa4c _field7;
    double _field8;
    double _field9;
    basic_string_a490aa4c _field10;
    struct Vector2 _field11;
    basic_string_a490aa4c _field12;
    struct Vector2 _field13;
    basic_string_a490aa4c _field14;
    double _field15;
    int _field16;
    _Bool _field17;
    basic_string_a490aa4c _field18;
    double _field19;
    struct Vector2 _field20;
};

struct KaleTextRenderItem;

struct KuruEvent<kuru::KuruTouchExtension::GestureEventArgs>;

struct KuruEvent<kuru::KuruTouchExtension::TouchEventArgs>;

struct KuruFaceDetectorExtension {
    CDUnknownFunctionPointerType *_field1;
    unsigned int _field2;
    _Bool _field3;
    int _field4;
    int _field5;
    int _field6;
    int _field7;
    _Bool _field8;
    struct KuruFaceFeature **_field9;
};

struct KuruFaceFeature;

struct KuruGestureRecognizer {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
    int _field5;
    int _field6;
    _Bool _field7;
    struct vector<kuru::KuruGestureRecognizer::Template, std::__1::allocator<kuru::KuruGestureRecognizer::Template>> _field8;
};

struct KuruTouchExtension {
    CDUnknownFunctionPointerType *_field1;
    unsigned int _field2;
    _Bool _field3;
    float _field4;
    _Bool _field5;
    void *_field6;
    void *_field7;
    _Bool _field8;
    struct Vector2 _field9;
    long long _field10;
    struct Vector2 _field11;
    struct KuruGestureRecognizer _field12;
    struct vector<gameplay::Vector2, std::__1::allocator<gameplay::Vector2>> _field13;
    struct KuruEvent<kuru::KuruTouchExtension::TouchEventArgs> *_field14;
    struct KuruEvent<kuru::KuruTouchExtension::TouchEventArgs> *_field15;
    struct KuruEvent<kuru::KuruTouchExtension::TouchEventArgs> *_field16;
    struct KuruEvent<kuru::KuruTouchExtension::GestureEventArgs> *_field17;
    struct shared_ptr<HandyRx::Subscription<HandyRx::Void>> _field18;
    struct shared_ptr<HandyRx::Subscription<HandyRx::Void>> _field19;
};

struct LCJKParseState {
    unsigned long long _field1;
    struct JKConstBuffer _field2;
    unsigned long long _field3;
    unsigned long long _field4;
    unsigned long long _field5;
    unsigned long long _field6;
    unsigned long long _field7;
    unsigned long long _field8;
    struct JKParseToken _field9;
    struct JKObjectStack _field10;
    struct JKTokenCache _field11;
    struct JKObjCImpCache _field12;
    id _field13;
    int _field14;
    _Bool _field15;
};

struct LOT_Subpath {
    int _field1;
    double _field2;
    struct CGPoint _field3;
    struct CGPoint _field4;
    struct CGPoint _field5;
    struct LOT_Subpath *_field6;
};

struct LRUCache<gmscore::model::FeatureID, GMSIndoorBuilding *, std::__1::hash<gmscore::model::FeatureID>, false> {
    CDUnknownFunctionPointerType *_vptr$LRUCache;
    unsigned long long max_entries_;
    basic_string_a490aa4c cache_name_;
    struct Reservations<gmscore::model::FeatureID, std::__1::hash<gmscore::model::FeatureID>> reservations_;
    struct unordered_map<gmscore::model::FeatureID, gmscore::utils::LRUCache<gmscore::model::FeatureID, GMSIndoorBuilding *, std::__1::hash<gmscore::model::FeatureID>, false>::LRUCacheEntry *, std::__1::hash<gmscore::model::FeatureID>, std::__1::equal_to<gmscore::model::FeatureID>, std::__1::allocator<std::__1::pair<const gmscore::model::FeatureID, gmscore::utils::LRUCache<gmscore::model::FeatureID, GMSIndoorBuilding *, std::__1::hash<gmscore::model::FeatureID>, false>::LRUCacheEntry *>>> map_;
    struct LRUCacheEntry *oldest_;
    struct LRUCacheEntry *youngest_;
    unsigned int mutations_counter_;
    unsigned int hit_counter_;
    unsigned int miss_counter_;
    unsigned int eject_counter_;
};

struct LRUCache<gmscore::model::IndoorID, GMSIndoorLevel *, std::__1::hash<gmscore::model::IndoorID>, false> {
    CDUnknownFunctionPointerType *_vptr$LRUCache;
    unsigned long long max_entries_;
    basic_string_a490aa4c cache_name_;
    struct Reservations<gmscore::model::IndoorID, std::__1::hash<gmscore::model::IndoorID>> reservations_;
    struct unordered_map<gmscore::model::IndoorID, gmscore::utils::LRUCache<gmscore::model::IndoorID, GMSIndoorLevel *, std::__1::hash<gmscore::model::IndoorID>, false>::LRUCacheEntry *, std::__1::hash<gmscore::model::IndoorID>, std::__1::equal_to<gmscore::model::IndoorID>, std::__1::allocator<std::__1::pair<const gmscore::model::IndoorID, gmscore::utils::LRUCache<gmscore::model::IndoorID, GMSIndoorLevel *, std::__1::hash<gmscore::model::IndoorID>, false>::LRUCacheEntry *>>> map_;
    struct LRUCacheEntry *oldest_;
    struct LRUCacheEntry *youngest_;
    unsigned int mutations_counter_;
    unsigned int hit_counter_;
    unsigned int miss_counter_;
    unsigned int eject_counter_;
};

struct LRUCache<gmscore::model::IndoorID, gmscore::model::IndoorID, std::__1::hash<gmscore::model::IndoorID>, false> {
    CDUnknownFunctionPointerType *_vptr$LRUCache;
    unsigned long long max_entries_;
    basic_string_a490aa4c cache_name_;
    struct Reservations<gmscore::model::IndoorID, std::__1::hash<gmscore::model::IndoorID>> reservations_;
    struct unordered_map<gmscore::model::IndoorID, gmscore::utils::LRUCache<gmscore::model::IndoorID, gmscore::model::IndoorID, std::__1::hash<gmscore::model::IndoorID>, false>::LRUCacheEntry *, std::__1::hash<gmscore::model::IndoorID>, std::__1::equal_to<gmscore::model::IndoorID>, std::__1::allocator<std::__1::pair<const gmscore::model::IndoorID, gmscore::utils::LRUCache<gmscore::model::IndoorID, gmscore::model::IndoorID, std::__1::hash<gmscore::model::IndoorID>, false>::LRUCacheEntry *>>> map_;
    struct LRUCacheEntry *oldest_;
    struct LRUCacheEntry *youngest_;
    unsigned int mutations_counter_;
    unsigned int hit_counter_;
    unsigned int miss_counter_;
    unsigned int eject_counter_;
};

struct LRUCache<std::__1::basic_string<char>, gmscore::base::reffed_ptr<gmscore::renderer::TextureState>, std::__1::hash<std::__1::basic_string<char>>, false> {
    CDUnknownFunctionPointerType *_field1;
    unsigned long long _field2;
    basic_string_a490aa4c _field3;
    struct Reservations<std::__1::basic_string<char>, std::__1::hash<std::__1::basic_string<char>>> _field4;
    struct unordered_map<std::__1::basic_string<char>, gmscore::utils::LRUCache<std::__1::basic_string<char>, gmscore::base::reffed_ptr<gmscore::renderer::TextureState>, std::__1::hash<std::__1::basic_string<char>>, false>::LRUCacheEntry *, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, gmscore::utils::LRUCache<std::__1::basic_string<char>, gmscore::base::reffed_ptr<gmscore::renderer::TextureState>, std::__1::hash<std::__1::basic_string<char>>, false>::LRUCacheEntry *>>> _field5;
    struct LRUCacheEntry *_field6;
    struct LRUCacheEntry *_field7;
    unsigned int _field8;
    unsigned int _field9;
    unsigned int _field10;
    unsigned int _field11;
};

struct LRUCacheEntry;

struct LabelDedupingRule;

struct LabelElement;

struct LabelGroup {
    struct vector<gmscore::model::LabelElement, std::__1::allocator<gmscore::model::LabelElement>> label_elements_;
    struct Alignment alignment_;
    basic_string_a490aa4c text_;
};

struct LabelProvider;

struct LabelSnapshot;

struct LabelSource;

struct LabelSourceSet {
    CDUnknownFunctionPointerType *_field1;
    struct vector<gmscore::base::reffed_ptr<gmscore::vector::LabelSource>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::LabelSource>>> _field2;
    struct map<unsigned long, unsigned long, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned long>>> _field3;
};

struct LabelTheme;

struct LabelUpdateDelegate;

struct LabelableFeature;

struct LabelableFeatureSelector;

struct LabelingBehavior;

struct LabelingUpdateListener;

struct LayeredFeatureGroup {
    struct multiset<id<GMSFeature>, gmscore::vector::detail::LayeredFeatureGroup::TypeOrdering, std::__1::allocator<id<GMSFeature>>> _field1;
    struct map<FeatureTypeCode, std::__1::__tree_const_iterator<id<GMSFeature>, std::__1::__tree_node<id<GMSFeature>, void *>*, long>, std::__1::less<FeatureTypeCode>, std::__1::allocator<std::__1::pair<const FeatureTypeCode, std::__1::__tree_const_iterator<id<GMSFeature>, std::__1::__tree_node<id<GMSFeature>, void *>*, long>>>> _field2;
};

struct LineAttributeInfo;

struct LineState;

struct Listener;

struct LuaBindings;

struct MakeupManager;

struct MarkupRevealOptions {
    double _field1;
    double _field2;
    _Bool _field3;
    int _field4;
};

struct Matrix4f {
    union _GLKMatrix4 _field1;
};

struct ModelRendererValue<bool>;

struct ModelRendererValue<float>;

struct ModelRendererValue<unsigned int>;

struct MutableState;

struct MutableStateTracker;

struct NCXDeviceModelIdentifier {
    int _field1;
    int _field2;
};

struct NCYYukiEffectListener {
    CDUnknownFunctionPointerType *_field1;
    id _field2;
    struct vector<yuki::KaleStickerModel::Item, std::__1::allocator<yuki::KaleStickerModel::Item>> _field3;
    struct vector<yuki::KaleStickerModel::SoundItem, std::__1::allocator<yuki::KaleStickerModel::SoundItem>> _field4;
    struct TriggerGroup _field5;
    _Bool _field6;
    unsigned long long _field7;
};

struct NCYYukiScriptListener {
    CDUnknownFunctionPointerType *_field1;
    id _field2;
    struct shared_ptr<kuru::LuaBindings> _field3;
    unsigned long long _field4;
};

struct NLMessageCellSizeResult {
    struct CGSize _field1;
    _Bool _field2;
};

struct NLTextMessageViewMeasureResult {
    struct CGSize _field1;
    _Bool _field2;
};

struct NSDictionary {
    Class _field1;
};

struct NSManagedObject {
    Class _field1;
};

struct NSMutableDictionary {
    Class _field1;
};

struct NormalVector;

struct PLCrashHostInfoVersion {
    unsigned long long major;
    unsigned long long minor;
    unsigned long long revision;
};

struct PLCrashReporterCallbacks {
    unsigned short _field1;
    void *_field2;
    CDUnknownFunctionPointerType _field3;
};

struct PackageManager;

struct PendingOp;

struct Photo {
    CDUnknownFunctionPointerType *_vptr$MessageLite;
    struct InternalMetadataWithArenaLite _internal_metadata_;
    struct HasBits<1> _has_bits_;
    int _cached_size_;
    struct RepeatedPtrField<GMSx_gmm_photo::api::NavArrow> nav_arrows_;
    struct RepeatedPtrField<GMSx_gmm_photo::api::RoadLabel> road_labels_;
    struct PhotoId *id_;
    struct GMSx_Location *location_;
    struct Rotation *orientation_;
    struct Size *original_size_;
    struct Size *tile_size_;
    struct Size *equirectangular_size_;
    struct Size *equirectangular_offset_;
    struct PlanarDepthMap *depth_map_;
    struct ClickToGoMap *click_to_go_map_;
};

struct PhotoHandle {
    struct PhotoId photo_id_;
};

struct PhotoId {
    CDUnknownFunctionPointerType *_vptr$MessageLite;
    struct InternalMetadataWithArenaLite _internal_metadata_;
    struct HasBits<1> _has_bits_;
    int _cached_size_;
    struct ArenaStringPtr id_;
    int frontend_;
};

struct PhotoTransition {
    CDUnknownFunctionPointerType *_vptr$MessageLite;
    struct InternalMetadataWithArenaLite _internal_metadata_;
    struct HasBits<1> _has_bits_;
    int _cached_size_;
    struct PhotoId *animation_final_photo_;
    struct Camera *camera_;
    float throw_duration_;
};

struct PlanarDepthMap;

struct Point2D {
    int x_;
    int y_;
};

struct Point3D {
    int _field1;
    int _field2;
    int _field3;
};

struct PointsBehavior;

struct PolylineSpan2D {
    struct __wrap_iter<const gmscore::model::Point2D *> _field1;
    struct __wrap_iter<const gmscore::model::Point2D *> _field2;
    struct __wrap_iter<const gmscore::model::Point2D *> _field3;
    float _field4;
    struct Rectangle2D _field5;
};

struct Quaternion {
    float _field1;
    float _field2;
    float _field3;
    float _field4;
};

struct Rectangle {
    float _field1;
    float _field2;
    float _field3;
    float _field4;
};

struct Rectangle2D {
    CDUnknownFunctionPointerType *_vptr$Collidable2D;
    struct Point2D low_;
    struct Point2D high_;
};

struct Region2D {
    CDUnknownFunctionPointerType *_field1;
};

struct RenderBin;

struct RenderOptions {
    CDUnknownFunctionPointerType *_vptr$MessageLite;
    struct InternalMetadataWithArenaLite _internal_metadata_;
    struct HasBits<1> _has_bits_;
    int _cached_size_;
    float photo_b_opacity_;
    _Bool photo_a_hi_res_fetch_disabled_;
    float road_label_opacity_;
    float ui_swipe_rail_opacity_;
    float ui_swipe_rail_width_meters_;
    float ui_nav_arrow_opacity_;
    float display_density_;
    float photo_a_opacity_;
    _Bool photo_b_hi_res_fetch_disabled_;
};

struct RenderTarget;

struct Renderer {
    CDUnknownFunctionPointerType *_field1;
};

struct Rep;

struct RepeatedPtrField<GMSx_gmm_photo::api::NavArrow> {
    struct Arena *arena_;
    int current_size_;
    int total_size_;
    struct Rep *rep_;
};

struct RepeatedPtrField<GMSx_gmm_photo::api::RoadLabel> {
    struct Arena *arena_;
    int current_size_;
    int total_size_;
    struct Rep *rep_;
};

struct RequestDescriptor {
    int _field1;
    Class _field2;
    Class _field3;
    SEL _field4;
    int _field5;
};

struct Reservations<gmscore::model::FeatureID, std::__1::hash<gmscore::model::FeatureID>> {
    struct unordered_map<void *, std::__1::unordered_set<gmscore::model::FeatureID, std::__1::hash<gmscore::model::FeatureID>, std::__1::equal_to<gmscore::model::FeatureID>, std::__1::allocator<gmscore::model::FeatureID>>, std::__1::hash<void *>, std::__1::equal_to<void *>, std::__1::allocator<std::__1::pair<void *const, std::__1::unordered_set<gmscore::model::FeatureID, std::__1::hash<gmscore::model::FeatureID>, std::__1::equal_to<gmscore::model::FeatureID>, std::__1::allocator<gmscore::model::FeatureID>>>>> map_;
};

struct Reservations<gmscore::model::IndoorID, std::__1::hash<gmscore::model::IndoorID>> {
    struct unordered_map<void *, std::__1::unordered_set<gmscore::model::IndoorID, std::__1::hash<gmscore::model::IndoorID>, std::__1::equal_to<gmscore::model::IndoorID>, std::__1::allocator<gmscore::model::IndoorID>>, std::__1::hash<void *>, std::__1::equal_to<void *>, std::__1::allocator<std::__1::pair<void *const, std::__1::unordered_set<gmscore::model::IndoorID, std::__1::hash<gmscore::model::IndoorID>, std::__1::equal_to<gmscore::model::IndoorID>, std::__1::allocator<gmscore::model::IndoorID>>>>> map_;
};

struct Reservations<std::__1::basic_string<char>, std::__1::hash<std::__1::basic_string<char>>> {
    struct unordered_map<void *, std::__1::unordered_set<std::__1::basic_string<char>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::basic_string<char>>>, std::__1::hash<void *>, std::__1::equal_to<void *>, std::__1::allocator<std::__1::pair<void *const, std::__1::unordered_set<std::__1::basic_string<char>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::basic_string<char>>>>>> _field1;
};

struct ResourceFinder {
    CDUnknownFunctionPointerType *_field1;
};

struct Rotation {
    CDUnknownFunctionPointerType *_field1;
    struct InternalMetadataWithArenaLite _field2;
    struct HasBits<1> _field3;
    int _field4;
    float _field5;
    float _field6;
    float _field7;
};

struct STLRange<const std::__1::set<gmscore::model::IndoorID, std::__1::less<gmscore::model::IndoorID>, std::__1::allocator<gmscore::model::IndoorID>>> {
    struct __tree_const_iterator<gmscore::model::IndoorID, std::__1::__tree_node<gmscore::model::IndoorID, void *>*, long> _field1;
    struct __tree_const_iterator<gmscore::model::IndoorID, std::__1::__tree_node<gmscore::model::IndoorID, void *>*, long> _field2;
};

struct STLRange<const std::__1::vector<gmscore::model::AbsolutePosition, std::__1::allocator<gmscore::model::AbsolutePosition>>> {
    struct __wrap_iter<const gmscore::model::AbsolutePosition *> _field1;
    struct __wrap_iter<const gmscore::model::AbsolutePosition *> _field2;
};

struct STLRange<const std::__1::vector<gmscore::model::Alignment, std::__1::allocator<gmscore::model::Alignment>>> {
    struct __wrap_iter<const gmscore::model::Alignment *> _field1;
    struct __wrap_iter<const gmscore::model::Alignment *> _field2;
};

struct STLRange<const std::__1::vector<gmscore::model::LabelGroup, std::__1::allocator<gmscore::model::LabelGroup>>> {
    struct __wrap_iter<const gmscore::model::LabelGroup *> _field1;
    struct __wrap_iter<const gmscore::model::LabelGroup *> _field2;
};

struct STLRange<const std::__1::vector<gmscore::model::Point3D, std::__1::allocator<gmscore::model::Point3D>>> {
    struct __wrap_iter<const gmscore::model::Point3D *> _field1;
    struct __wrap_iter<const gmscore::model::Point3D *> _field2;
};

struct STLRange<const std::__1::vector<gmscore::model::Stroke, std::__1::allocator<gmscore::model::Stroke>>> {
    struct __wrap_iter<const gmscore::model::Stroke *> _field1;
    struct __wrap_iter<const gmscore::model::Stroke *> _field2;
};

struct STLRange<const std::__1::vector<gmscore::model::stripified_mesh::NormalVector, std::__1::allocator<gmscore::model::stripified_mesh::NormalVector>>> {
    struct __wrap_iter<const gmscore::model::stripified_mesh::NormalVector *> _field1;
    struct __wrap_iter<const gmscore::model::stripified_mesh::NormalVector *> _field2;
};

struct STLRange<const std::__1::vector<gmscore::vector::ColoredPoint, std::__1::allocator<gmscore::vector::ColoredPoint>>> {
    struct __wrap_iter<const gmscore::vector::ColoredPoint *> _field1;
    struct __wrap_iter<const gmscore::vector::ColoredPoint *> _field2;
};

struct STLRange<const std::__1::vector<int, std::__1::allocator<int>>> {
    struct __wrap_iter<const int *> _field1;
    struct __wrap_iter<const int *> _field2;
};

struct STLRange<const std::__1::vector<unsigned int, std::__1::allocator<unsigned int>>> {
    struct __wrap_iter<const unsigned int *> _field1;
    struct __wrap_iter<const unsigned int *> _field2;
};

struct SchedulingService;

struct Service<GMSx_gmm_photo::api::AreaConnectivityRequest, GMSx_gmm_photo::api::AreaConnectivityResponse>;

struct Service<GMSx_gmm_photo::api::IconSource, GMSx_gmm_photo::api::Image>;

struct Service<GMSx_gmm_photo::api::Text, GMSx_gmm_photo::api::Image>;

struct Service<GMSx_gmm_photo::api::Tile, GMSx_gmm_photo::api::Image>;

struct ServicesConfig {
    basic_string_a490aa4c product_id;
    basic_string_a490aa4c language;
    basic_string_a490aa4c country;
    basic_string_a490aa4c geo_photo_metadata_url;
    basic_string_a490aa4c geo_photo_single_image_url;
    basic_string_a490aa4c geo_photo_local_tiled_single_image_url;
    basic_string_a490aa4c geo_photo_area_connectivity_url;
    basic_string_a490aa4c alleycat_url;
    basic_string_a490aa4c fife_url;
    struct vector<GMSx_gmm_photo::platform_ios::ServicesConfig::TileTemplate, std::__1::allocator<GMSx_gmm_photo::platform_ios::ServicesConfig::TileTemplate>> tile_templates;
};

struct Size;

struct SoundItem;

struct SpotlightParams {
    _Bool tactile_styler_enabled;
    _Bool spotlight_labels_visible;
    _Bool secondary_clickability_enabled;
};

struct StencilState;

struct StickerBehavior;

struct StickerManager;

struct StringTableEntry;

struct Stroke {
    unsigned int color_;
    unsigned short width_eighths_;
    struct vector<short, std::__1::allocator<short>> dashes_;
    float width_;
    int orthogonal_offset_eighths_;
    basic_string_a490aa4c texture_url_;
    basic_string_a490aa4c start_cap_url_;
    basic_string_a490aa4c end_cap_url_;
};

struct StrokeTextureCache;

struct StyleID {
    long long styleID;
    unsigned long long type;
};

struct Subscription<HandyRx::Void>;

struct TappableMapItemQueue {
    struct set<id<GMSEntityTappableUIItem>, gmscore::vector::TappableMapItemQueue::TappableItemsCompare, std::__1::allocator<id<GMSEntityTappableUIItem>>> items_;
    struct set<id<GMSEntityTappableUIItem>, gmscore::vector::TappableMapItemQueue::TappableItemsCompare, std::__1::allocator<id<GMSEntityTappableUIItem>>> inactive_items_;
    struct GMSEntityTapClassStatusSet active_tap_classes_;
};

struct Template;

struct TextBoxStyle {
    unsigned int fill_color_;
    struct Stroke stroke_;
    GMSModelStyleIcon *box_icon_;
};

struct TextStyle {
    unsigned int color_;
    unsigned int outline_color_;
    float outline_width_;
    unsigned char size_;
    float leading_ratio_;
    float tracking_ratio_;
    int attributes_;
};

struct TextureAtlasesContext;

struct TextureCache {
    struct GMSx_Mutex _field1;
    struct LRUCache<std::__1::basic_string<char>, gmscore::base::reffed_ptr<gmscore::renderer::TextureState>, std::__1::hash<std::__1::basic_string<char>>, false> _field2;
};

struct TextureShaderState;

struct TextureState;

struct TileLabelProvider;

struct TileTemplate;

struct Triangle2D;

struct TriangleList2D {
    struct vector<gmscore::model::Triangle2D, std::__1::allocator<gmscore::model::Triangle2D>> triangles_;
};

struct TriggerForTooltipGroup {
    CDUnknownFunctionPointerType *_vptr$TriggerForTooltipGroup;
    int m_triggersValue;
};

struct TriggerGroup {
    CDUnknownFunctionPointerType *_vptr$TriggerGroup;
    int m_triggersValue;
};

struct UIEdgeInsets {
    double top;
    double left;
    double bottom;
    double right;
};

struct UIOffset {
    double _field1;
    double _field2;
};

struct UpdateMyLocationBehavior;

struct Vector2 {
    float _field1;
    float _field2;
};

struct Vector2f {
    union _GLKVector2 vector_;
};

struct Vector3 {
    float _field1;
    float _field2;
    float _field3;
};

struct Vector4f {
    union _GLKVector4 _field1;
};

struct Vector<3, double> {
    double elem_[3];
};

struct VertexData;

struct ViewRenderTargetChangedSizeListener;

struct WFSegmentEndpoints {
    struct Point2D _field1;
    struct Point2D _field2;
};

struct WrappedFrustum2D {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    struct Point2D _field3;
    struct Point2D _field4;
    struct Point2D _field5;
    struct Point2D _field6;
    struct Frustum2D _field7;
    struct WFSegmentEndpoints _field8[6];
};

struct WrappedRectangle2D {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    struct Point2D _field3;
    struct Point2D _field4;
    struct Rectangle2D _field5;
    int _field6;
    int _field7;
    int _field8;
};

struct YCEVideoImage {
    void *buffer;
    int bufferSize;
    int width;
    int height;
};

struct YukiEffectServiceListener;

struct YukiEffectServiceLuaScriptListener;

struct ZOrdering {
    struct tuple<int, int, int, unsigned int, unsigned int> _field1;
};

struct _CALayerIvars {
    int _field1;
    unsigned int _field2;
    void *_field3;
};

struct _IplImage {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
    int _field5;
    char _field6[4];
    char _field7[4];
    int _field8;
    int _field9;
    int _field10;
    int _field11;
    int _field12;
    struct _IplROI *_field13;
    struct _IplImage *_field14;
    void *_field15;
    struct _IplTileInfo *_field16;
    int _field17;
    char *_field18;
    int _field19;
    int _field20[4];
    int _field21[4];
    char *_field22;
};

struct _IplROI;

struct _IplTileInfo;

struct _NSRange {
    unsigned long long location;
    unsigned long long length;
};

struct _PLCrashReportDecoder {
    struct _Plcrash__CrashReport *_field1;
};

struct _Plcrash__CrashReport {
    struct _ProtobufCMessage _field1;
    struct _Plcrash__CrashReport__SystemInfo *_field2;
    struct _Plcrash__CrashReport__ApplicationInfo *_field3;
    unsigned long long _field4;
    struct _Plcrash__CrashReport__Thread **_field5;
    unsigned long long _field6;
    struct _Plcrash__CrashReport__BinaryImage **_field7;
    struct _Plcrash__CrashReport__Exception *_field8;
    struct _Plcrash__CrashReport__Signal *_field9;
    struct _Plcrash__CrashReport__ProcessInfo *_field10;
    struct _Plcrash__CrashReport__MachineInfo *_field11;
    struct _Plcrash__CrashReport__ReportInfo *_field12;
};

struct _Plcrash__CrashReport__ApplicationInfo {
    struct _ProtobufCMessage _field1;
    char *_field2;
    char *_field3;
};

struct _Plcrash__CrashReport__BinaryImage;

struct _Plcrash__CrashReport__Exception {
    struct _ProtobufCMessage _field1;
    char *_field2;
    char *_field3;
    unsigned long long _field4;
    struct _Plcrash__CrashReport__Thread__StackFrame **_field5;
};

struct _Plcrash__CrashReport__MachineInfo {
    struct _ProtobufCMessage _field1;
    char *_field2;
    struct _Plcrash__CrashReport__Processor *_field3;
    unsigned int _field4;
    unsigned int _field5;
};

struct _Plcrash__CrashReport__ProcessInfo {
    struct _ProtobufCMessage _field1;
    char *_field2;
    unsigned int _field3;
    char *_field4;
    char *_field5;
    unsigned int _field6;
    int _field7;
    int _field8;
    unsigned long long _field9;
};

struct _Plcrash__CrashReport__Processor {
    struct _ProtobufCMessage _field1;
    int _field2;
    int _field3;
    unsigned long long _field4;
    unsigned long long _field5;
};

struct _Plcrash__CrashReport__ReportInfo;

struct _Plcrash__CrashReport__Signal {
    struct _ProtobufCMessage _field1;
    char *_field2;
    char *_field3;
    unsigned long long _field4;
    struct _Plcrash__CrashReport__Signal__MachException *_field5;
};

struct _Plcrash__CrashReport__Signal__MachException {
    struct _ProtobufCMessage _field1;
    unsigned long long _field2;
    unsigned long long _field3;
    unsigned long long *_field4;
};

struct _Plcrash__CrashReport__Symbol {
    struct _ProtobufCMessage _field1;
    char *_field2;
    unsigned long long _field3;
    int _field4;
    unsigned long long _field5;
};

struct _Plcrash__CrashReport__SystemInfo {
    struct _ProtobufCMessage _field1;
    int _field2;
    int _field3;
    char *_field4;
    int _field5;
    long long _field6;
    char *_field7;
};

struct _Plcrash__CrashReport__Thread;

struct _Plcrash__CrashReport__Thread__StackFrame {
    struct _ProtobufCMessage _field1;
    unsigned long long _field2;
    struct _Plcrash__CrashReport__Symbol *_field3;
};

struct _ProtobufCMessage {
    struct _ProtobufCMessageDescriptor *_field1;
    unsigned int _field2;
    struct _ProtobufCMessageUnknownField *_field3;
};

struct _ProtobufCMessageDescriptor;

struct _ProtobufCMessageUnknownField;

struct _TimelineViewControllerSection {
    long long TopMargin;
    long long Posts;
    long long Margin;
    long long Counts;
};

struct __hash_node<std::__1::__hash_value_type<gmscore::model::FeatureID, gmscore::utils::LRUCache<gmscore::model::FeatureID, GMSIndoorBuilding *, std::__1::hash<gmscore::model::FeatureID>, false>::LRUCacheEntry *>, void *>;

struct __hash_node<std::__1::__hash_value_type<gmscore::model::IndoorID, GMSIndoorBuildingState *>, void *>;

struct __hash_node<std::__1::__hash_value_type<gmscore::model::IndoorID, gmscore::base::reffed_ptr<gmscore::vector::LabelSource>>, void *>;

struct __hash_node<std::__1::__hash_value_type<gmscore::model::IndoorID, gmscore::utils::LRUCache<gmscore::model::IndoorID, GMSIndoorLevel *, std::__1::hash<gmscore::model::IndoorID>, false>::LRUCacheEntry *>, void *>;

struct __hash_node<std::__1::__hash_value_type<gmscore::model::IndoorID, gmscore::utils::LRUCache<gmscore::model::IndoorID, gmscore::model::IndoorID, std::__1::hash<gmscore::model::IndoorID>, false>::LRUCacheEntry *>, void *>;

struct __hash_node<std::__1::__hash_value_type<int, unsigned long long>, void *>;

struct __hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, gmscore::utils::LRUCache<std::__1::basic_string<char>, gmscore::base::reffed_ptr<gmscore::renderer::TextureState>, std::__1::hash<std::__1::basic_string<char>>, false>::LRUCacheEntry *>, void *>;

struct __hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long>, void *>;

struct __hash_node<std::__1::__hash_value_type<void *, std::__1::unordered_set<gmscore::model::FeatureID, std::__1::hash<gmscore::model::FeatureID>, std::__1::equal_to<gmscore::model::FeatureID>, std::__1::allocator<gmscore::model::FeatureID>>>, void *>;

struct __hash_node<std::__1::__hash_value_type<void *, std::__1::unordered_set<gmscore::model::IndoorID, std::__1::hash<gmscore::model::IndoorID>, std::__1::equal_to<gmscore::model::IndoorID>, std::__1::allocator<gmscore::model::IndoorID>>>, void *>;

struct __hash_node<std::__1::__hash_value_type<void *, std::__1::unordered_set<std::__1::basic_string<char>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::basic_string<char>>>>, void *>;

struct __hash_node<std::__1::basic_string<char>, void *>;

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, std::__1::shared_ptr<yuki::Effector>>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, std::__1::shared_ptr<yuki::Effector>>, void *>*> *_field1;
};

struct __list_node_base<gmscore::base::reffed_ptr<gmscore::renderer::Behavior>, void *> {
    struct __list_node_base<gmscore::base::reffed_ptr<gmscore::renderer::Behavior>, void *> *_field1;
    struct __list_node_base<gmscore::base::reffed_ptr<gmscore::renderer::Behavior>, void *> *_field2;
};

struct __list_node_base<gmscore::renderer::ImageDataSignature, void *> {
    struct __list_node_base<gmscore::renderer::ImageDataSignature, void *> *__prev_;
    struct __list_node_base<gmscore::renderer::ImageDataSignature, void *> *__next_;
};

struct __shared_weak_count;

struct __tree_const_iterator<gmscore::model::IndoorID, std::__1::__tree_node<gmscore::model::IndoorID, void *>*, long> {
    struct __tree_node<gmscore::model::IndoorID, void *> *_field1;
};

struct __tree_end_node<std::__1::__tree_node_base<void *>*> {
    struct __tree_node_base<void *> *__left_;
};

struct __tree_node<gmscore::model::IndoorID, void *>;

struct __wrap_iter<const gmscore::model::AbsolutePosition *> {
    struct AbsolutePosition *_field1;
};

struct __wrap_iter<const gmscore::model::Alignment *> {
    struct Alignment *_field1;
};

struct __wrap_iter<const gmscore::model::LabelGroup *> {
    struct LabelGroup *_field1;
};

struct __wrap_iter<const gmscore::model::Point2D *> {
    struct Point2D *_field1;
};

struct __wrap_iter<const gmscore::model::Point3D *> {
    struct Point3D *_field1;
};

struct __wrap_iter<const gmscore::model::Stroke *> {
    struct Stroke *_field1;
};

struct __wrap_iter<const gmscore::model::stripified_mesh::NormalVector *> {
    struct NormalVector *_field1;
};

struct __wrap_iter<const gmscore::vector::ColoredPoint *> {
    struct ColoredPoint *_field1;
};

struct __wrap_iter<const int *> {
    int *_field1;
};

struct __wrap_iter<const unsigned int *> {
    unsigned int *_field1;
};

struct _opaque_pthread_mutex_t {
    long long __sig;
    char __opaque[56];
};

struct _tagEFFECTTRANSFER {
    int _field1;
    char *_field2;
    char *_field3;
    int _field4;
    int _field5;
    int _field6;
    int _field7;
    int _field8;
    int _field9;
    int _field10;
};

struct array<gmscore::base::reffed_ptr<gmscore::renderer::StencilState>, 8> {
    reffed_ptr_b6b7b6c6 __elems_[8];
};

struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
    struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
        struct __rep {
            union {
                struct __long {
                    char *__data_;
                    unsigned long long __size_;
                    unsigned long long __cap_;
                } __l;
                struct __short {
                    char __data_[23];
                    struct {
                        unsigned char __size_;
                    } ;
                } __s;
                struct __raw {
                    unsigned long long __words[3];
                } __r;
            } ;
        } __first_;
    } __r_;
};

struct deque<GMSEntityTapClassStatusSet, std::__1::allocator<GMSEntityTapClassStatusSet>> {
    struct __split_buffer<GMSEntityTapClassStatusSet *, std::__1::allocator<GMSEntityTapClassStatusSet *>> {
        struct GMSEntityTapClassStatusSet **__first_;
        struct GMSEntityTapClassStatusSet **__begin_;
        struct GMSEntityTapClassStatusSet **__end_;
        struct __compressed_pair<GMSEntityTapClassStatusSet **, std::__1::allocator<GMSEntityTapClassStatusSet *>> {
            struct GMSEntityTapClassStatusSet **__first_;
        } __end_cap_;
    } __map_;
    unsigned long long __start_;
    struct __compressed_pair<unsigned long, std::__1::allocator<GMSEntityTapClassStatusSet>> {
        unsigned long long __first_;
    } __size_;
};

struct duration<long long, std::__1::ratio<1, 1000000000>> {
    long long __rep_;
};

struct in6_addr {
    union {
        unsigned char _field1[16];
        unsigned short _field2[8];
        unsigned int _field3[4];
    } _field1;
};

struct in_addr {
    unsigned int _field1;
};

struct internal_state;

struct list<gmscore::base::reffed_ptr<gmscore::renderer::Behavior>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::renderer::Behavior>>> {
    struct __list_node_base<gmscore::base::reffed_ptr<gmscore::renderer::Behavior>, void *> _field1;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<gmscore::base::reffed_ptr<gmscore::renderer::Behavior>, void *>>> {
        unsigned long long _field1;
    } _field2;
};

struct list<gmscore::renderer::ImageDataSignature, std::__1::allocator<gmscore::renderer::ImageDataSignature>> {
    struct __list_node_base<gmscore::renderer::ImageDataSignature, void *> __end_;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<gmscore::renderer::ImageDataSignature, void *>>> {
        unsigned long long __first_;
    } __size_alloc_;
};

struct map<FeatureTypeCode, std::__1::__tree_const_iterator<id<GMSFeature>, std::__1::__tree_node<id<GMSFeature>, void *>*, long>, std::__1::less<FeatureTypeCode>, std::__1::allocator<std::__1::pair<const FeatureTypeCode, std::__1::__tree_const_iterator<id<GMSFeature>, std::__1::__tree_node<id<GMSFeature>, void *>*, long>>>> {
    struct __tree<std::__1::__value_type<FeatureTypeCode, std::__1::__tree_const_iterator<id<GMSFeature>, std::__1::__tree_node<id<GMSFeature>, void *>*, long>>, std::__1::__map_value_compare<FeatureTypeCode, std::__1::__value_type<FeatureTypeCode, std::__1::__tree_const_iterator<id<GMSFeature>, std::__1::__tree_node<id<GMSFeature>, void *>*, long>>, std::__1::less<FeatureTypeCode>, true>, std::__1::allocator<std::__1::__value_type<FeatureTypeCode, std::__1::__tree_const_iterator<id<GMSFeature>, std::__1::__tree_node<id<GMSFeature>, void *>*, long>>>> {
        struct __tree_node<std::__1::__value_type<FeatureTypeCode, std::__1::__tree_const_iterator<id<GMSFeature>, std::__1::__tree_node<id<GMSFeature>, void *>*, long>>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<FeatureTypeCode, std::__1::__tree_const_iterator<id<GMSFeature>, std::__1::__tree_node<id<GMSFeature>, void *>*, long>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<FeatureTypeCode, std::__1::__value_type<FeatureTypeCode, std::__1::__tree_const_iterator<id<GMSFeature>, std::__1::__tree_node<id<GMSFeature>, void *>*, long>>, std::__1::less<FeatureTypeCode>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<GMPStyleTableMapping_VersatileMapStyle, GMSMultiZoomStyle *, std::__1::less<GMPStyleTableMapping_VersatileMapStyle>, std::__1::allocator<std::__1::pair<const GMPStyleTableMapping_VersatileMapStyle, GMSMultiZoomStyle *>>> {
    struct __tree<std::__1::__value_type<GMPStyleTableMapping_VersatileMapStyle, GMSMultiZoomStyle *>, std::__1::__map_value_compare<GMPStyleTableMapping_VersatileMapStyle, std::__1::__value_type<GMPStyleTableMapping_VersatileMapStyle, GMSMultiZoomStyle *>, std::__1::less<GMPStyleTableMapping_VersatileMapStyle>, true>, std::__1::allocator<std::__1::__value_type<GMPStyleTableMapping_VersatileMapStyle, GMSMultiZoomStyle *>>> {
        struct __tree_node<std::__1::__value_type<GMPStyleTableMapping_VersatileMapStyle, GMSMultiZoomStyle *>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<GMPStyleTableMapping_VersatileMapStyle, GMSMultiZoomStyle *>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<GMPStyleTableMapping_VersatileMapStyle, std::__1::__value_type<GMPStyleTableMapping_VersatileMapStyle, GMSMultiZoomStyle *>, std::__1::less<GMPStyleTableMapping_VersatileMapStyle>, true>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct map<GMSGLTileProvider *, unsigned int, std::__1::less<GMSGLTileProvider *>, std::__1::allocator<std::__1::pair<GMSGLTileProvider *const, unsigned int>>> {
    struct __tree<std::__1::__value_type<GMSGLTileProvider *, unsigned int>, std::__1::__map_value_compare<GMSGLTileProvider *, std::__1::__value_type<GMSGLTileProvider *, unsigned int>, std::__1::less<GMSGLTileProvider *>, true>, std::__1::allocator<std::__1::__value_type<GMSGLTileProvider *, unsigned int>>> {
        struct __tree_node<std::__1::__value_type<GMSGLTileProvider *, unsigned int>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<GMSGLTileProvider *, unsigned int>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<GMSGLTileProvider *, std::__1::__value_type<GMSGLTileProvider *, unsigned int>, std::__1::less<GMSGLTileProvider *>, true>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct map<GMSMarker *, GMSMarkerRenderInfo *, std::__1::less<GMSMarker *>, std::__1::allocator<std::__1::pair<GMSMarker *const, GMSMarkerRenderInfo *>>> {
    struct __tree<std::__1::__value_type<GMSMarker *, GMSMarkerRenderInfo *>, std::__1::__map_value_compare<GMSMarker *, std::__1::__value_type<GMSMarker *, GMSMarkerRenderInfo *>, std::__1::less<GMSMarker *>, true>, std::__1::allocator<std::__1::__value_type<GMSMarker *, GMSMarkerRenderInfo *>>> {
        struct __tree_node<std::__1::__value_type<GMSMarker *, GMSMarkerRenderInfo *>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<GMSMarker *, GMSMarkerRenderInfo *>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<GMSMarker *, std::__1::__value_type<GMSMarker *, GMSMarkerRenderInfo *>, std::__1::less<GMSMarker *>, true>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct map<GMSMarker *, long long, std::__1::less<GMSMarker *>, std::__1::allocator<std::__1::pair<GMSMarker *const, long long>>> {
    struct __tree<std::__1::__value_type<GMSMarker *, long long>, std::__1::__map_value_compare<GMSMarker *, std::__1::__value_type<GMSMarker *, long long>, std::__1::less<GMSMarker *>, true>, std::__1::allocator<std::__1::__value_type<GMSMarker *, long long>>> {
        struct __tree_node<std::__1::__value_type<GMSMarker *, long long>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<GMSMarker *, long long>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<GMSMarker *, std::__1::__value_type<GMSMarker *, long long>, std::__1::less<GMSMarker *>, true>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct map<GMSOverlay *, GMSOverlay *, std::__1::less<GMSOverlay *>, std::__1::allocator<std::__1::pair<GMSOverlay *const, GMSOverlay *>>> {
    struct __tree<std::__1::__value_type<GMSOverlay *, GMSOverlay *>, std::__1::__map_value_compare<GMSOverlay *, std::__1::__value_type<GMSOverlay *, GMSOverlay *>, std::__1::less<GMSOverlay *>, true>, std::__1::allocator<std::__1::__value_type<GMSOverlay *, GMSOverlay *>>> {
        struct __tree_node<std::__1::__value_type<GMSOverlay *, GMSOverlay *>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<GMSOverlay *, GMSOverlay *>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<GMSOverlay *, std::__1::__value_type<GMSOverlay *, GMSOverlay *>, std::__1::less<GMSOverlay *>, true>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct map<GMSStyleType, NSMutableArray<GMSModelStyle *>*, std::__1::less<GMSStyleType>, std::__1::allocator<std::__1::pair<const GMSStyleType, NSMutableArray<GMSModelStyle *>*>>> {
    struct __tree<std::__1::__value_type<GMSStyleType, NSMutableArray<GMSModelStyle *>*>, std::__1::__map_value_compare<GMSStyleType, std::__1::__value_type<GMSStyleType, NSMutableArray<GMSModelStyle *>*>, std::__1::less<GMSStyleType>, true>, std::__1::allocator<std::__1::__value_type<GMSStyleType, NSMutableArray<GMSModelStyle *>*>>> {
        struct __tree_node<std::__1::__value_type<GMSStyleType, NSMutableArray<GMSModelStyle *>*>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<GMSStyleType, NSMutableArray<GMSModelStyle *>*>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<GMSStyleType, std::__1::__value_type<GMSStyleType, NSMutableArray<GMSModelStyle *>*>, std::__1::less<GMSStyleType>, true>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct map<GMSTileLayer *, GMSGLTileProvider *, std::__1::less<GMSTileLayer *>, std::__1::allocator<std::__1::pair<GMSTileLayer *const, GMSGLTileProvider *>>> {
    struct __tree<std::__1::__value_type<GMSTileLayer *, GMSGLTileProvider *>, std::__1::__map_value_compare<GMSTileLayer *, std::__1::__value_type<GMSTileLayer *, GMSGLTileProvider *>, std::__1::less<GMSTileLayer *>, true>, std::__1::allocator<std::__1::__value_type<GMSTileLayer *, GMSGLTileProvider *>>> {
        struct __tree_node<std::__1::__value_type<GMSTileLayer *, GMSGLTileProvider *>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<GMSTileLayer *, GMSGLTileProvider *>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<GMSTileLayer *, std::__1::__value_type<GMSTileLayer *, GMSGLTileProvider *>, std::__1::less<GMSTileLayer *>, true>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct map<UIView *, GMSOffscreenEntityView *, std::__1::less<UIView *>, std::__1::allocator<std::__1::pair<UIView *const, GMSOffscreenEntityView *>>> {
    struct __tree<std::__1::__value_type<UIView *, GMSOffscreenEntityView *>, std::__1::__map_value_compare<UIView *, std::__1::__value_type<UIView *, GMSOffscreenEntityView *>, std::__1::less<UIView *>, true>, std::__1::allocator<std::__1::__value_type<UIView *, GMSOffscreenEntityView *>>> {
        struct __tree_node<std::__1::__value_type<UIView *, GMSOffscreenEntityView *>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<UIView *, GMSOffscreenEntityView *>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<UIView *, std::__1::__value_type<UIView *, GMSOffscreenEntityView *>, std::__1::less<UIView *>, true>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct map<const char *, gmscore::renderer::RenderBin *, std::__1::less<const char *>, std::__1::allocator<std::__1::pair<const char *const, gmscore::renderer::RenderBin *>>> {
    struct __tree<std::__1::__value_type<const char *, gmscore::renderer::RenderBin *>, std::__1::__map_value_compare<const char *, std::__1::__value_type<const char *, gmscore::renderer::RenderBin *>, std::__1::less<const char *>, true>, std::__1::allocator<std::__1::__value_type<const char *, gmscore::renderer::RenderBin *>>> {
        struct __tree_node<std::__1::__value_type<const char *, gmscore::renderer::RenderBin *>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<const char *, gmscore::renderer::RenderBin *>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<const char *, std::__1::__value_type<const char *, gmscore::renderer::RenderBin *>, std::__1::less<const char *>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<gmscore::renderer::ImageDataSignature, std::__1::vector<unsigned int, std::__1::allocator<unsigned int>>, std::__1::less<gmscore::renderer::ImageDataSignature>, std::__1::allocator<std::__1::pair<const gmscore::renderer::ImageDataSignature, std::__1::vector<unsigned int, std::__1::allocator<unsigned int>>>>> {
    struct __tree<std::__1::__value_type<gmscore::renderer::ImageDataSignature, std::__1::vector<unsigned int, std::__1::allocator<unsigned int>>>, std::__1::__map_value_compare<gmscore::renderer::ImageDataSignature, std::__1::__value_type<gmscore::renderer::ImageDataSignature, std::__1::vector<unsigned int, std::__1::allocator<unsigned int>>>, std::__1::less<gmscore::renderer::ImageDataSignature>, true>, std::__1::allocator<std::__1::__value_type<gmscore::renderer::ImageDataSignature, std::__1::vector<unsigned int, std::__1::allocator<unsigned int>>>>> {
        struct __tree_node<std::__1::__value_type<gmscore::renderer::ImageDataSignature, std::__1::vector<unsigned int, std::__1::allocator<unsigned int>>>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gmscore::renderer::ImageDataSignature, std::__1::vector<unsigned int, std::__1::allocator<unsigned int>>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<gmscore::renderer::ImageDataSignature, std::__1::__value_type<gmscore::renderer::ImageDataSignature, std::__1::vector<unsigned int, std::__1::allocator<unsigned int>>>, std::__1::less<gmscore::renderer::ImageDataSignature>, true>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct map<long long, GMSMarker *, std::__1::less<long long>, std::__1::allocator<std::__1::pair<const long long, GMSMarker *>>> {
    struct __tree<std::__1::__value_type<long long, GMSMarker *>, std::__1::__map_value_compare<long long, std::__1::__value_type<long long, GMSMarker *>, std::__1::less<long long>, true>, std::__1::allocator<std::__1::__value_type<long long, GMSMarker *>>> {
        struct __tree_node<std::__1::__value_type<long long, GMSMarker *>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<long long, GMSMarker *>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<long long, std::__1::__value_type<long long, GMSMarker *>, std::__1::less<long long>, true>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct map<long long, GMSMultiZoomStyle *, std::__1::less<long long>, std::__1::allocator<std::__1::pair<const long long, GMSMultiZoomStyle *>>> {
    struct __tree<std::__1::__value_type<long long, GMSMultiZoomStyle *>, std::__1::__map_value_compare<long long, std::__1::__value_type<long long, GMSMultiZoomStyle *>, std::__1::less<long long>, true>, std::__1::allocator<std::__1::__value_type<long long, GMSMultiZoomStyle *>>> {
        struct __tree_node<std::__1::__value_type<long long, GMSMultiZoomStyle *>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<long long, GMSMultiZoomStyle *>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<long long, std::__1::__value_type<long long, GMSMultiZoomStyle *>, std::__1::less<long long>, true>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct map<long long, int, std::__1::less<long long>, std::__1::allocator<std::__1::pair<const long long, int>>> {
    struct __tree<std::__1::__value_type<long long, int>, std::__1::__map_value_compare<long long, std::__1::__value_type<long long, int>, std::__1::less<long long>, true>, std::__1::allocator<std::__1::__value_type<long long, int>>> {
        struct __tree_node<std::__1::__value_type<long long, int>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<long long, int>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<long long, std::__1::__value_type<long long, int>, std::__1::less<long long>, true>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct map<std::__1::basic_string<char>, gmscore::base::reffed_ptr<gmscore::renderer::ShaderProgram>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, gmscore::base::reffed_ptr<gmscore::renderer::ShaderProgram>>>> {
    struct __tree<std::__1::__value_type<std::__1::basic_string<char>, gmscore::base::reffed_ptr<gmscore::renderer::ShaderProgram>>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, gmscore::base::reffed_ptr<gmscore::renderer::ShaderProgram>>, std::__1::less<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, gmscore::base::reffed_ptr<gmscore::renderer::ShaderProgram>>>> {
        struct __tree_node<std::__1::__value_type<std::__1::basic_string<char>, gmscore::base::reffed_ptr<gmscore::renderer::ShaderProgram>>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, gmscore::base::reffed_ptr<gmscore::renderer::ShaderProgram>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, gmscore::base::reffed_ptr<gmscore::renderer::ShaderProgram>>, std::__1::less<std::__1::basic_string<char>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::basic_string<char>, gmscore::base::reffed_ptr<gmscore::vector::GMSGeneratedTextureAtlas>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, gmscore::base::reffed_ptr<gmscore::vector::GMSGeneratedTextureAtlas>>>> {
    struct __tree<std::__1::__value_type<std::__1::basic_string<char>, gmscore::base::reffed_ptr<gmscore::vector::GMSGeneratedTextureAtlas>>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, gmscore::base::reffed_ptr<gmscore::vector::GMSGeneratedTextureAtlas>>, std::__1::less<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, gmscore::base::reffed_ptr<gmscore::vector::GMSGeneratedTextureAtlas>>>> {
        struct __tree_node<std::__1::__value_type<std::__1::basic_string<char>, gmscore::base::reffed_ptr<gmscore::vector::GMSGeneratedTextureAtlas>>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, gmscore::base::reffed_ptr<gmscore::vector::GMSGeneratedTextureAtlas>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, gmscore::base::reffed_ptr<gmscore::vector::GMSGeneratedTextureAtlas>>, std::__1::less<std::__1::basic_string<char>>, true>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct map<std::__1::basic_string<char>, std::__1::weak_ptr<GMSRocketIconService::Holder>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::weak_ptr<GMSRocketIconService::Holder>>>> {
    struct __tree<std::__1::__value_type<std::__1::basic_string<char>, std::__1::weak_ptr<GMSRocketIconService::Holder>>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::weak_ptr<GMSRocketIconService::Holder>>, std::__1::less<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::weak_ptr<GMSRocketIconService::Holder>>>> {
        struct __tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::weak_ptr<GMSRocketIconService::Holder>>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::weak_ptr<GMSRocketIconService::Holder>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::weak_ptr<GMSRocketIconService::Holder>>, std::__1::less<std::__1::basic_string<char>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::tuple<gmscore::model::StyleID, int, bool>, GMSModelStyle *, std::__1::less<std::__1::tuple<gmscore::model::StyleID, int, bool>>, std::__1::allocator<std::__1::pair<const std::__1::tuple<gmscore::model::StyleID, int, bool>, GMSModelStyle *>>> {
    struct __tree<std::__1::__value_type<std::__1::tuple<gmscore::model::StyleID, int, bool>, GMSModelStyle *>, std::__1::__map_value_compare<std::__1::tuple<gmscore::model::StyleID, int, bool>, std::__1::__value_type<std::__1::tuple<gmscore::model::StyleID, int, bool>, GMSModelStyle *>, std::__1::less<std::__1::tuple<gmscore::model::StyleID, int, bool>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::tuple<gmscore::model::StyleID, int, bool>, GMSModelStyle *>>> {
        struct __tree_node<std::__1::__value_type<std::__1::tuple<gmscore::model::StyleID, int, bool>, GMSModelStyle *>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::tuple<gmscore::model::StyleID, int, bool>, GMSModelStyle *>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::tuple<gmscore::model::StyleID, int, bool>, std::__1::__value_type<std::__1::tuple<gmscore::model::StyleID, int, bool>, GMSModelStyle *>, std::__1::less<std::__1::tuple<gmscore::model::StyleID, int, bool>>, true>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct map<unsigned int, (anonymous namespace)::PooledTextureState, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, (anonymous namespace)::PooledTextureState>>> {
    struct __tree<std::__1::__value_type<unsigned int, (anonymous namespace)::PooledTextureState>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, (anonymous namespace)::PooledTextureState>, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, (anonymous namespace)::PooledTextureState>>> {
        struct __tree_node<std::__1::__value_type<unsigned int, (anonymous namespace)::PooledTextureState>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, (anonymous namespace)::PooledTextureState>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, (anonymous namespace)::PooledTextureState>, std::__1::less<unsigned int>, true>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct map<unsigned long long, id<GMSTileService>, std::__1::less<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, id<GMSTileService>>>> {
    struct __tree<std::__1::__value_type<unsigned long long, id<GMSTileService>>, std::__1::__map_value_compare<unsigned long long, std::__1::__value_type<unsigned long long, id<GMSTileService>>, std::__1::less<unsigned long long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long long, id<GMSTileService>>>> {
        struct __tree_node<std::__1::__value_type<unsigned long long, id<GMSTileService>>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned long long, id<GMSTileService>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned long long, std::__1::__value_type<unsigned long long, id<GMSTileService>>, std::__1::less<unsigned long long>, true>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct map<unsigned long long, int, std::__1::less<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, int>>> {
    struct __tree<std::__1::__value_type<unsigned long long, int>, std::__1::__map_value_compare<unsigned long long, std::__1::__value_type<unsigned long long, int>, std::__1::less<unsigned long long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long long, int>>> {
        struct __tree_node<std::__1::__value_type<unsigned long long, int>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned long long, int>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned long long, std::__1::__value_type<unsigned long long, int>, std::__1::less<unsigned long long>, true>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct map<unsigned long, GMSOverlay *, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, GMSOverlay *>>> {
    struct __tree<std::__1::__value_type<unsigned long, GMSOverlay *>, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, GMSOverlay *>, std::__1::less<unsigned long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long, GMSOverlay *>>> {
        struct __tree_node<std::__1::__value_type<unsigned long, GMSOverlay *>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned long, GMSOverlay *>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, GMSOverlay *>, std::__1::less<unsigned long>, true>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct map<unsigned long, unsigned long, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned long>>> {
    struct __tree<std::__1::__value_type<unsigned long, unsigned long>, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, unsigned long>, std::__1::less<unsigned long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long, unsigned long>>> {
        struct __tree_node<std::__1::__value_type<unsigned long, unsigned long>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned long, unsigned long>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, unsigned long>, std::__1::less<unsigned long>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct multiset<id<GMSFeature>, gmscore::vector::detail::LayeredFeatureGroup::TypeOrdering, std::__1::allocator<id<GMSFeature>>> {
    struct __tree<id<GMSFeature>, gmscore::vector::detail::LayeredFeatureGroup::TypeOrdering, std::__1::allocator<id<GMSFeature>>> {
        struct __tree_node<id<GMSFeature>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<id<GMSFeature>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, gmscore::vector::detail::LayeredFeatureGroup::TypeOrdering> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct mutex {
    struct _opaque_pthread_mutex_t _field1;
};

struct plcrash_exception_server_context {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    CDUnknownFunctionPointerType _field5;
    void *_field6;
    struct _opaque_pthread_mutex_t _field7;
    struct _opaque_pthread_cond_t {
        long long _field1;
        char _field2[40];
    } _field8;
    unsigned int _field9;
    _Bool _field10;
};

struct plcrash_mach_exception_port_set {
    unsigned int count;
    unsigned int masks[13];
    unsigned int ports[13];
    int behaviors[13];
    int flavors[13];
};

struct recursive_mutex {
    struct _opaque_pthread_mutex_t __m_;
};

struct referenced_ptr<yuki::Effector> {
    CDUnknownFunctionPointerType *_vptr$referenced_ptr;
    struct weak_ptr<yuki::Effector> m_weakPtr;
    struct Effector *m_ptr;
};

struct referenced_ptr<yuki::FilterListManager> {
    CDUnknownFunctionPointerType *_vptr$referenced_ptr;
    struct weak_ptr<yuki::FilterListManager> m_weakPtr;
    struct FilterListManager *m_ptr;
};

struct reffed_ptr<(anonymous namespace)::BubbleBehavior> {
    struct BubbleBehavior *ptr_;
};

struct reffed_ptr<(anonymous namespace)::ColoredOverlayBehavior> {
    struct ColoredOverlayBehavior *ptr_;
};

struct reffed_ptr<(anonymous namespace)::GLTileUpdaterBehavior> {
    struct GLTileUpdaterBehavior *ptr_;
};

struct reffed_ptr<(anonymous namespace)::IndoorTileAnimationBehavior> {
    struct IndoorTileAnimationBehavior *ptr_;
};

struct reffed_ptr<(anonymous namespace)::LabelingUpdateListener> {
    struct LabelingUpdateListener *ptr_;
};

struct reffed_ptr<(anonymous namespace)::PointsBehavior> {
    struct PointsBehavior *ptr_;
};

struct reffed_ptr<(anonymous namespace)::StickerBehavior> {
    struct StickerBehavior *ptr_;
};

struct reffed_ptr<(anonymous namespace)::UpdateMyLocationBehavior> {
    struct UpdateMyLocationBehavior *ptr_;
};

struct reffed_ptr<gmscore::renderer::AdjustableTextureShaderState> {
    struct AdjustableTextureShaderState *ptr_;
};

struct reffed_ptr<gmscore::renderer::BaseEntity>;

struct reffed_ptr<gmscore::renderer::Behavior> {
    struct Behavior *ptr_;
};

struct reffed_ptr<gmscore::renderer::BlendState> {
    struct BlendState *ptr_;
};

struct reffed_ptr<gmscore::renderer::ColorMaskState> {
    struct ColorMaskState *ptr_;
};

struct reffed_ptr<gmscore::renderer::DefaultAlphaShaderState> {
    struct DefaultAlphaShaderState *ptr_;
};

struct reffed_ptr<gmscore::renderer::DefaultShaderState> {
    struct DefaultShaderState *ptr_;
};

struct reffed_ptr<gmscore::renderer::DepthBufferState> {
    struct DepthBufferState *ptr_;
};

struct reffed_ptr<gmscore::renderer::Entity> {
    struct Entity *ptr_;
};

struct reffed_ptr<gmscore::renderer::EntityState> {
    struct EntityState *ptr_;
};

struct reffed_ptr<gmscore::renderer::ImageData> {
    struct ImageData *ptr_;
};

struct reffed_ptr<gmscore::renderer::LineState> {
    struct LineState *ptr_;
};

struct reffed_ptr<gmscore::renderer::PolygonState>;

struct reffed_ptr<gmscore::renderer::RenderTarget> {
    struct RenderTarget *ptr_;
};

struct reffed_ptr<gmscore::renderer::StencilState> {
    struct StencilState *ptr_;
};

struct reffed_ptr<gmscore::renderer::TextureShaderState> {
    struct TextureShaderState *ptr_;
};

struct reffed_ptr<gmscore::renderer::TextureState> {
    struct TextureState *ptr_;
};

struct reffed_ptr<gmscore::renderer::VertexData> {
    struct VertexData *ptr_;
};

struct reffed_ptr<gmscore::renderer::ios::BlockBasedBehavior> {
    struct BlockBasedBehavior *ptr_;
};

struct reffed_ptr<gmscore::streetview::Camera> {
    struct Camera *_field1;
};

struct reffed_ptr<gmscore::vector::CalloutSharedState> {
    struct CalloutSharedState *ptr_;
};

struct reffed_ptr<gmscore::vector::CalloutStrategy> {
    struct CalloutStrategy *ptr_;
};

struct reffed_ptr<gmscore::vector::Camera> {
    struct Camera *ptr_;
};

struct reffed_ptr<gmscore::vector::GLAlphaOnlyTextureShaderState> {
    struct GLAlphaOnlyTextureShaderState *ptr_;
};

struct reffed_ptr<gmscore::vector::GLAlphaShaderState> {
    struct GLAlphaShaderState *ptr_;
};

struct reffed_ptr<gmscore::vector::GLAreaGroup> {
    struct GLAreaGroup *ptr_;
};

struct reffed_ptr<gmscore::vector::GLBasicShaderState> {
    struct GLBasicShaderState *ptr_;
};

struct reffed_ptr<gmscore::vector::GLBuildingFadingAlphaShaderState> {
    struct GLBuildingFadingAlphaShaderState *ptr_;
};

struct reffed_ptr<gmscore::vector::GLBuildingFadingShaderState> {
    struct GLBuildingFadingShaderState *ptr_;
};

struct reffed_ptr<gmscore::vector::GLBuildingGroupFadeBehavior> {
    struct GLBuildingGroupFadeBehavior *ptr_;
};

struct reffed_ptr<gmscore::vector::GLFeatureGroup>;

struct reffed_ptr<gmscore::vector::GLLabel> {
    struct GLLabel *ptr_;
};

struct reffed_ptr<gmscore::vector::GLLineGroup>;

struct reffed_ptr<gmscore::vector::GMSGeneratedTextureAtlas> {
    struct GMSGeneratedTextureAtlas *_field1;
};

struct reffed_ptr<gmscore::vector::GMSMarkupBehavior> {
    struct GMSMarkupBehavior *ptr_;
};

struct reffed_ptr<gmscore::vector::GMSStippleTexture> {
    struct GMSStippleTexture *_field1;
};

struct reffed_ptr<gmscore::vector::GMSStippleTexturePool> {
    struct GMSStippleTexturePool *ptr_;
};

struct reffed_ptr<gmscore::vector::IconTextureCache> {
    struct IconTextureCache *_field1;
};

struct reffed_ptr<gmscore::vector::LabelDedupingRule> {
    struct LabelDedupingRule *ptr_;
};

struct reffed_ptr<gmscore::vector::LabelProvider> {
    struct LabelProvider *_field1;
};

struct reffed_ptr<gmscore::vector::LabelSource> {
    struct LabelSource *ptr_;
};

struct reffed_ptr<gmscore::vector::LabelUpdateDelegate> {
    struct LabelUpdateDelegate *ptr_;
};

struct reffed_ptr<gmscore::vector::LabelableFeature> {
    struct LabelableFeature *_field1;
};

struct reffed_ptr<gmscore::vector::LabelableFeatureSelector> {
    struct LabelableFeatureSelector *ptr_;
};

struct reffed_ptr<gmscore::vector::LabelingBehavior::LabelSnapshot> {
    struct LabelSnapshot *_field1;
};

struct reffed_ptr<gmscore::vector::LabelingBehavior::Listener> {
    struct Listener *_field1;
};

struct reffed_ptr<gmscore::vector::LabelingBehavior> {
    struct LabelingBehavior *ptr_;
};

struct reffed_ptr<gmscore::vector::ModelRendererValue<bool>> {
    struct ModelRendererValue<bool> *ptr_;
};

struct reffed_ptr<gmscore::vector::ModelRendererValue<float>> {
    struct ModelRendererValue<float> *ptr_;
};

struct reffed_ptr<gmscore::vector::ModelRendererValue<unsigned int>> {
    struct ModelRendererValue<unsigned int> *ptr_;
};

struct reffed_ptr<gmscore::vector::MutableState> {
    struct MutableState *ptr_;
};

struct reffed_ptr<gmscore::vector::TextureAtlasesContext> {
    struct TextureAtlasesContext *ptr_;
};

struct reffed_ptr<gmscore::vector::TileLabelProvider> {
    struct TileLabelProvider *ptr_;
};

struct set<GMSFeatureEntityUIItem *, (anonymous namespace)::TappableItemSetOrdering, std::__1::allocator<GMSFeatureEntityUIItem *>> {
    struct __tree<GMSFeatureEntityUIItem *, (anonymous namespace)::TappableItemSetOrdering, std::__1::allocator<GMSFeatureEntityUIItem *>> {
        struct __tree_node<GMSFeatureEntityUIItem *, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<GMSFeatureEntityUIItem *, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, (anonymous namespace)::TappableItemSetOrdering> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct set<GMSOverlay *, std::__1::less<GMSOverlay *>, std::__1::allocator<GMSOverlay *>> {
    struct __tree<GMSOverlay *, std::__1::less<GMSOverlay *>, std::__1::allocator<GMSOverlay *>> {
        struct __tree_node<GMSOverlay *, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<GMSOverlay *, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::less<GMSOverlay *>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct set<UIView *, std::__1::less<UIView *>, std::__1::allocator<UIView *>> {
    struct __tree<UIView *, std::__1::less<UIView *>, std::__1::allocator<UIView *>> {
        struct __tree_node<UIView *, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<UIView *, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::less<UIView *>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct set<gmscore::base::reffed_ptr<gmscore::renderer::Behavior>, std::__1::less<gmscore::base::reffed_ptr<gmscore::renderer::Behavior>>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::renderer::Behavior>>> {
    struct __tree<gmscore::base::reffed_ptr<gmscore::renderer::Behavior>, std::__1::less<gmscore::base::reffed_ptr<gmscore::renderer::Behavior>>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::renderer::Behavior>>> {
        struct __tree_node<gmscore::base::reffed_ptr<gmscore::renderer::Behavior>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<gmscore::base::reffed_ptr<gmscore::renderer::Behavior>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::less<gmscore::base::reffed_ptr<gmscore::renderer::Behavior>>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct set<gmscore::base::reffed_ptr<gmscore::renderer::Camera3D>, std::__1::less<gmscore::base::reffed_ptr<gmscore::renderer::Camera3D>>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::renderer::Camera3D>>> {
    struct __tree<gmscore::base::reffed_ptr<gmscore::renderer::Camera3D>, std::__1::less<gmscore::base::reffed_ptr<gmscore::renderer::Camera3D>>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::renderer::Camera3D>>> {
        struct __tree_node<gmscore::base::reffed_ptr<gmscore::renderer::Camera3D>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<gmscore::base::reffed_ptr<gmscore::renderer::Camera3D>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::less<gmscore::base::reffed_ptr<gmscore::renderer::Camera3D>>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct set<gmscore::base::reffed_ptr<gmscore::renderer::RenderTarget>, std::__1::less<gmscore::base::reffed_ptr<gmscore::renderer::RenderTarget>>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::renderer::RenderTarget>>> {
    struct __tree<gmscore::base::reffed_ptr<gmscore::renderer::RenderTarget>, std::__1::less<gmscore::base::reffed_ptr<gmscore::renderer::RenderTarget>>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::renderer::RenderTarget>>> {
        struct __tree_node<gmscore::base::reffed_ptr<gmscore::renderer::RenderTarget>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<gmscore::base::reffed_ptr<gmscore::renderer::RenderTarget>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::less<gmscore::base::reffed_ptr<gmscore::renderer::RenderTarget>>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct set<gmscore::base::reffed_ptr<gmscore::vector::GLLabel>, std::__1::less<gmscore::base::reffed_ptr<gmscore::vector::GLLabel>>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::GLLabel>>> {
    struct __tree<gmscore::base::reffed_ptr<gmscore::vector::GLLabel>, std::__1::less<gmscore::base::reffed_ptr<gmscore::vector::GLLabel>>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::GLLabel>>> {
        struct __tree_node<gmscore::base::reffed_ptr<gmscore::vector::GLLabel>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<gmscore::base::reffed_ptr<gmscore::vector::GLLabel>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::less<gmscore::base::reffed_ptr<gmscore::vector::GLLabel>>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct set<gmscore::base::reffed_ptr<gmscore::vector::LabelDedupingRule>, std::__1::less<gmscore::base::reffed_ptr<gmscore::vector::LabelDedupingRule>>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::LabelDedupingRule>>> {
    struct __tree<gmscore::base::reffed_ptr<gmscore::vector::LabelDedupingRule>, std::__1::less<gmscore::base::reffed_ptr<gmscore::vector::LabelDedupingRule>>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::LabelDedupingRule>>> {
        struct __tree_node<gmscore::base::reffed_ptr<gmscore::vector::LabelDedupingRule>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<gmscore::base::reffed_ptr<gmscore::vector::LabelDedupingRule>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::less<gmscore::base::reffed_ptr<gmscore::vector::LabelDedupingRule>>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct set<gmscore::base::reffed_ptr<gmscore::vector::LabelProvider>, std::__1::less<gmscore::base::reffed_ptr<gmscore::vector::LabelProvider>>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::LabelProvider>>> {
    struct __tree<gmscore::base::reffed_ptr<gmscore::vector::LabelProvider>, std::__1::less<gmscore::base::reffed_ptr<gmscore::vector::LabelProvider>>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::LabelProvider>>> {
        struct __tree_node<gmscore::base::reffed_ptr<gmscore::vector::LabelProvider>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<gmscore::base::reffed_ptr<gmscore::vector::LabelProvider>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::less<gmscore::base::reffed_ptr<gmscore::vector::LabelProvider>>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct set<gmscore::base::reffed_ptr<gmscore::vector::LabelableFeatureSelector>, std::__1::less<gmscore::base::reffed_ptr<gmscore::vector::LabelableFeatureSelector>>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::LabelableFeatureSelector>>> {
    struct __tree<gmscore::base::reffed_ptr<gmscore::vector::LabelableFeatureSelector>, std::__1::less<gmscore::base::reffed_ptr<gmscore::vector::LabelableFeatureSelector>>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::LabelableFeatureSelector>>> {
        struct __tree_node<gmscore::base::reffed_ptr<gmscore::vector::LabelableFeatureSelector>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<gmscore::base::reffed_ptr<gmscore::vector::LabelableFeatureSelector>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::less<gmscore::base::reffed_ptr<gmscore::vector::LabelableFeatureSelector>>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct set<gmscore::base::reffed_ptr<gmscore::vector::LabelingBehavior::Listener>, std::__1::less<gmscore::base::reffed_ptr<gmscore::vector::LabelingBehavior::Listener>>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::LabelingBehavior::Listener>>> {
    struct __tree<gmscore::base::reffed_ptr<gmscore::vector::LabelingBehavior::Listener>, std::__1::less<gmscore::base::reffed_ptr<gmscore::vector::LabelingBehavior::Listener>>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::LabelingBehavior::Listener>>> {
        struct __tree_node<gmscore::base::reffed_ptr<gmscore::vector::LabelingBehavior::Listener>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<gmscore::base::reffed_ptr<gmscore::vector::LabelingBehavior::Listener>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::less<gmscore::base::reffed_ptr<gmscore::vector::LabelingBehavior::Listener>>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct set<gmscore::model::FeatureID, std::__1::less<gmscore::model::FeatureID>, std::__1::allocator<gmscore::model::FeatureID>> {
    struct __tree<gmscore::model::FeatureID, std::__1::less<gmscore::model::FeatureID>, std::__1::allocator<gmscore::model::FeatureID>> {
        struct __tree_node<gmscore::model::FeatureID, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<gmscore::model::FeatureID, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::less<gmscore::model::FeatureID>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct set<gmscore::model::IndoorID, std::__1::less<gmscore::model::IndoorID>, std::__1::allocator<gmscore::model::IndoorID>> {
    struct __tree<gmscore::model::IndoorID, std::__1::less<gmscore::model::IndoorID>, std::__1::allocator<gmscore::model::IndoorID>> {
        struct __tree_node<gmscore::model::IndoorID, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<gmscore::model::IndoorID, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::less<gmscore::model::IndoorID>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct set<id<GMSEntityTappableUIItem>, gmscore::vector::TappableMapItemQueue::TappableItemsCompare, std::__1::allocator<id<GMSEntityTappableUIItem>>> {
    struct __tree<id<GMSEntityTappableUIItem>, gmscore::vector::TappableMapItemQueue::TappableItemsCompare, std::__1::allocator<id<GMSEntityTappableUIItem>>> {
        struct __tree_node<id<GMSEntityTappableUIItem>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<id<GMSEntityTappableUIItem>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, gmscore::vector::TappableMapItemQueue::TappableItemsCompare> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct set<int, std::__1::less<int>, std::__1::allocator<int>> {
    struct __tree<int, std::__1::less<int>, std::__1::allocator<int>> {
        struct __tree_node<int, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<int, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::less<int>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct set<std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::basic_string<char>>> {
    struct __tree<std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::basic_string<char>>> {
        struct __tree_node<std::__1::basic_string<char>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::basic_string<char>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::less<std::__1::basic_string<char>>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct set<unsigned long long, std::__1::less<unsigned long long>, std::__1::allocator<unsigned long long>> {
    struct __tree<unsigned long long, std::__1::less<unsigned long long>, std::__1::allocator<unsigned long long>> {
        struct __tree_node<unsigned long long, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<unsigned long long, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::less<unsigned long long>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct set<unsigned short, std::__1::less<unsigned short>, std::__1::allocator<unsigned short>> {
    struct __tree<unsigned short, std::__1::less<unsigned short>, std::__1::allocator<unsigned short>> {
        struct __tree_node<unsigned short, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<unsigned short, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::less<unsigned short>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct shared_ptr<GMSRocketIconService::Holder> {
    struct Holder *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<HandyRx::Subscription<HandyRx::Void>> {
    struct Subscription<HandyRx::Void> *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<NCYYukiEffectListener> {
    struct NCYYukiEffectListener *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<NCYYukiScriptListener> {
    struct NCYYukiScriptListener *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<kuru::LuaBindings> {
    struct LuaBindings *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<yuki::EffectService> {
    struct EffectService *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<yuki::MakeupManager> {
    struct MakeupManager *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<yuki::PackageManager> {
    struct PackageManager *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<yuki::StickerManager> {
    struct StickerManager *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<yuki::YukiEffectServiceListener> {
    struct YukiEffectServiceListener *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<yuki::YukiEffectServiceLuaScriptListener> {
    struct YukiEffectServiceLuaScriptListener *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct sockaddr {
    unsigned char _field1;
    unsigned char _field2;
    char _field3[14];
};

struct sockaddr_in {
    unsigned char _field1;
    unsigned char _field2;
    unsigned short _field3;
    struct in_addr _field4;
    char _field5[8];
};

struct sockaddr_in6 {
    unsigned char _field1;
    unsigned char _field2;
    unsigned short _field3;
    unsigned int _field4;
    struct in6_addr _field5;
    unsigned int _field6;
};

struct spdylay_buffer_chunk {
    char *_field1;
    struct spdylay_buffer_chunk *_field2;
};

struct spdylay_map_entry;

struct spdylay_origin;

struct spdylay_session {
    unsigned short _field1;
    unsigned char _field2;
    unsigned int _field3;
    int _field4;
    unsigned int _field5;
    long long _field6;
    struct {
        struct spdylay_map_entry *_field1;
        unsigned long long _field2;
    } _field7;
    unsigned long long _field8;
    unsigned long long _field9;
    CDStruct_63aedad7 _field10;
    CDStruct_63aedad7 _field11;
    struct {
        struct *_field1;
        char *_field2;
        unsigned long long _field3;
        unsigned long long _field4;
        unsigned long long _field5;
    } _field12;
    struct {
        int _field1;
        unsigned char _field2[8];
        unsigned long long _field3;
        char *_field4;
        unsigned long long _field5;
        unsigned long long _field6;
        unsigned long long _field7;
        unsigned long long _field8;
        struct {
            unsigned long long _field1;
            struct spdylay_buffer_chunk _field2;
            struct spdylay_buffer_chunk *_field3;
            unsigned long long _field4;
            unsigned long long _field5;
        } _field9;
        int _field10;
    } _field13;
    char *_field14;
    unsigned long long _field15;
    CDStruct_b4a17f9c _field16;
    CDStruct_b4a17f9c _field17;
    unsigned int _field18;
    unsigned char _field19;
    int _field20;
    unsigned char _field21;
    unsigned int _field22[9];
    unsigned int _field23[9];
    unsigned int _field24;
    unsigned int _field25;
    struct {
        struct spdylay_origin **_field1;
        unsigned long long _field2;
        unsigned long long _field3;
        unsigned long long _field4;
    } _field26;
    struct {
        CDUnknownFunctionPointerType _field1;
        CDUnknownFunctionPointerType _field2;
        CDUnknownFunctionPointerType _field3;
        CDUnknownFunctionPointerType _field4;
        CDUnknownFunctionPointerType _field5;
        CDUnknownFunctionPointerType _field6;
        CDUnknownFunctionPointerType _field7;
        CDUnknownFunctionPointerType _field8;
        CDUnknownFunctionPointerType _field9;
        CDUnknownFunctionPointerType _field10;
        CDUnknownFunctionPointerType _field11;
        CDUnknownFunctionPointerType _field12;
        CDUnknownFunctionPointerType _field13;
        CDUnknownFunctionPointerType _field14;
        CDUnknownFunctionPointerType _field15;
        CDUnknownFunctionPointerType _field16;
        CDUnknownFunctionPointerType _field17;
    } _field27;
    void *_field28;
};

struct st_image_t {
    char *_field1;
    int _field2;
    int _field3;
    int _field4;
    int _field5;
    struct st_time_t _field6;
};

struct st_mobile_106_t {
    struct st_rect_t _field1;
    float _field2;
    struct st_pointf_t _field3[106];
    float _field4[106];
    float _field5;
    float _field6;
    float _field7;
    float _field8;
    int _field9;
};

struct st_mobile_face_t {
    struct st_mobile_106_t _field1;
    struct st_pointf_t *_field2;
    int _field3;
    struct st_pointf_t *_field4;
    int _field5;
    struct st_pointf_t *_field6;
    int _field7;
    float _field8;
    float _field9;
    unsigned long long _field10;
};

struct st_pointf_t {
    float _field1;
    float _field2;
};

struct st_rect_t {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
};

struct st_time_t {
    long long _field1;
    long long _field2;
};

struct stack<GMSEntityTapClassStatusSet, std::__1::deque<GMSEntityTapClassStatusSet, std::__1::allocator<GMSEntityTapClassStatusSet>>> {
    struct deque<GMSEntityTapClassStatusSet, std::__1::allocator<GMSEntityTapClassStatusSet>> c;
};

struct time_point<std::__1::chrono::steady_clock, std::__1::chrono::duration<long long, std::__1::ratio<1, 1000000000>>> {
    struct duration<long long, std::__1::ratio<1, 1000000000>> __d_;
};

struct timeval {
    long long tv_sec;
    int tv_usec;
};

struct tuple<int, int, int, unsigned int, unsigned int> {
    struct __tuple_impl<std::__1::__tuple_indices<0, 1, 2, 3, 4>, int, int, int, unsigned int, unsigned int> {
        int _field1;
        int _field2;
        int _field3;
        unsigned int _field4;
        unsigned int _field5;
    } _field1;
};

struct tuple<int, int, unsigned int> {
    struct __tuple_impl<std::__1::__tuple_indices<0, 1, 2>, int, int, unsigned int> {
        int value;
        int value;
        unsigned int value;
    } base_;
};

struct unique_ptr<(anonymous namespace)::ViewRenderTargetChangedSizeListener, std::__1::default_delete<(anonymous namespace)::ViewRenderTargetChangedSizeListener>> {
    struct __compressed_pair<(anonymous namespace)::ViewRenderTargetChangedSizeListener *, std::__1::default_delete<(anonymous namespace)::ViewRenderTargetChangedSizeListener>> {
        struct ViewRenderTargetChangedSizeListener *__first_;
    } __ptr_;
};

struct unique_ptr<GMSx_gmm_photo::api::IconRenderer, std::__1::default_delete<GMSx_gmm_photo::api::IconRenderer>> {
    struct __compressed_pair<GMSx_gmm_photo::api::IconRenderer *, std::__1::default_delete<GMSx_gmm_photo::api::IconRenderer>> {
        struct IconRenderer *__first_;
    } __ptr_;
};

struct unique_ptr<GMSx_gmm_photo::api::Renderer, std::__1::default_delete<GMSx_gmm_photo::api::Renderer>> {
    struct __compressed_pair<GMSx_gmm_photo::api::Renderer *, std::__1::default_delete<GMSx_gmm_photo::api::Renderer>> {
        struct Renderer *__first_;
    } __ptr_;
};

struct unique_ptr<GMSx_gmm_photo::api::SchedulingService, std::__1::default_delete<GMSx_gmm_photo::api::SchedulingService>> {
    struct __compressed_pair<GMSx_gmm_photo::api::SchedulingService *, std::__1::default_delete<GMSx_gmm_photo::api::SchedulingService>> {
        struct SchedulingService *_field1;
    } _field1;
};

struct unique_ptr<GMSx_gmm_photo::api::Service<GMSx_gmm_photo::api::AreaConnectivityRequest, GMSx_gmm_photo::api::AreaConnectivityResponse>, std::__1::default_delete<GMSx_gmm_photo::api::Service<GMSx_gmm_photo::api::AreaConnectivityRequest, GMSx_gmm_photo::api::AreaConnectivityResponse>>> {
    struct __compressed_pair<GMSx_gmm_photo::api::Service<GMSx_gmm_photo::api::AreaConnectivityRequest, GMSx_gmm_photo::api::AreaConnectivityResponse>*, std::__1::default_delete<GMSx_gmm_photo::api::Service<GMSx_gmm_photo::api::AreaConnectivityRequest, GMSx_gmm_photo::api::AreaConnectivityResponse>>> {
        struct Service<GMSx_gmm_photo::api::AreaConnectivityRequest, GMSx_gmm_photo::api::AreaConnectivityResponse> *_field1;
    } _field1;
};

struct unique_ptr<GMSx_gmm_photo::api::Service<GMSx_gmm_photo::api::IconSource, GMSx_gmm_photo::api::Image>, std::__1::default_delete<GMSx_gmm_photo::api::Service<GMSx_gmm_photo::api::IconSource, GMSx_gmm_photo::api::Image>>> {
    struct __compressed_pair<GMSx_gmm_photo::api::Service<GMSx_gmm_photo::api::IconSource, GMSx_gmm_photo::api::Image>*, std::__1::default_delete<GMSx_gmm_photo::api::Service<GMSx_gmm_photo::api::IconSource, GMSx_gmm_photo::api::Image>>> {
        struct Service<GMSx_gmm_photo::api::IconSource, GMSx_gmm_photo::api::Image> *_field1;
    } _field1;
};

struct unique_ptr<GMSx_gmm_photo::api::Service<GMSx_gmm_photo::api::Text, GMSx_gmm_photo::api::Image>, std::__1::default_delete<GMSx_gmm_photo::api::Service<GMSx_gmm_photo::api::Text, GMSx_gmm_photo::api::Image>>> {
    struct __compressed_pair<GMSx_gmm_photo::api::Service<GMSx_gmm_photo::api::Text, GMSx_gmm_photo::api::Image>*, std::__1::default_delete<GMSx_gmm_photo::api::Service<GMSx_gmm_photo::api::Text, GMSx_gmm_photo::api::Image>>> {
        struct Service<GMSx_gmm_photo::api::Text, GMSx_gmm_photo::api::Image> *_field1;
    } _field1;
};

struct unique_ptr<GMSx_gmm_photo::api::Service<GMSx_gmm_photo::api::Tile, GMSx_gmm_photo::api::Image>, std::__1::default_delete<GMSx_gmm_photo::api::Service<GMSx_gmm_photo::api::Tile, GMSx_gmm_photo::api::Image>>> {
    struct __compressed_pair<GMSx_gmm_photo::api::Service<GMSx_gmm_photo::api::Tile, GMSx_gmm_photo::api::Image>*, std::__1::default_delete<GMSx_gmm_photo::api::Service<GMSx_gmm_photo::api::Tile, GMSx_gmm_photo::api::Image>>> {
        struct Service<GMSx_gmm_photo::api::Tile, GMSx_gmm_photo::api::Image> *_field1;
    } _field1;
};

struct unique_ptr<GMSx_gmm_photo::platform_ios::IOSPlatformContext, std::__1::default_delete<GMSx_gmm_photo::platform_ios::IOSPlatformContext>> {
    struct __compressed_pair<GMSx_gmm_photo::platform_ios::IOSPlatformContext *, std::__1::default_delete<GMSx_gmm_photo::platform_ios::IOSPlatformContext>> {
        struct IOSPlatformContext *__first_;
    } __ptr_;
};

struct unique_ptr<GMSx_gmm_photo::platform_ios::IVIOSGLContext, std::__1::default_delete<GMSx_gmm_photo::platform_ios::IVIOSGLContext>> {
    struct __compressed_pair<GMSx_gmm_photo::platform_ios::IVIOSGLContext *, std::__1::default_delete<GMSx_gmm_photo::platform_ios::IVIOSGLContext>> {
        struct IVIOSGLContext *__first_;
    } __ptr_;
};

struct unique_ptr<gmscore::dash::CookieStore, std::__1::default_delete<gmscore::dash::CookieStore>> {
    struct __compressed_pair<gmscore::dash::CookieStore *, std::__1::default_delete<gmscore::dash::CookieStore>> {
        struct CookieStore *__first_;
    } __ptr_;
};

struct unique_ptr<gmscore::model::CollidableSet2D, std::__1::default_delete<gmscore::model::CollidableSet2D>> {
    struct __compressed_pair<gmscore::model::CollidableSet2D *, std::__1::default_delete<gmscore::model::CollidableSet2D>> {
        struct CollidableSet2D *__first_;
    } __ptr_;
};

struct unique_ptr<gmscore::renderer::EntityRenderer, std::__1::default_delete<gmscore::renderer::EntityRenderer>> {
    struct __compressed_pair<gmscore::renderer::EntityRenderer *, std::__1::default_delete<gmscore::renderer::EntityRenderer>> {
        struct EntityRenderer *__first_;
    } __ptr_;
};

struct unique_ptr<gmscore::renderer::GMSx_Time, std::__1::default_delete<gmscore::renderer::GMSx_Time>> {
    struct __compressed_pair<gmscore::renderer::GMSx_Time *, std::__1::default_delete<gmscore::renderer::GMSx_Time>> {
        struct GMSx_Time *__first_;
    } __ptr_;
};

struct unique_ptr<gmscore::renderer::ResourceFinder, std::__1::default_delete<gmscore::renderer::ResourceFinder>> {
    struct __compressed_pair<gmscore::renderer::ResourceFinder *, std::__1::default_delete<gmscore::renderer::ResourceFinder>> {
        struct ResourceFinder *_field1;
    } _field1;
};

struct unique_ptr<gmscore::renderer::ios::IOSGLState, std::__1::default_delete<gmscore::renderer::ios::IOSGLState>> {
    struct __compressed_pair<gmscore::renderer::ios::IOSGLState *, std::__1::default_delete<gmscore::renderer::ios::IOSGLState>> {
        struct IOSGLState *__first_;
    } __ptr_;
};

struct unique_ptr<gmscore::vector::MutableStateTracker, std::__1::default_delete<gmscore::vector::MutableStateTracker>> {
    struct __compressed_pair<gmscore::vector::MutableStateTracker *, std::__1::default_delete<gmscore::vector::MutableStateTracker>> {
        struct MutableStateTracker *__first_;
    } __ptr_;
};

struct unique_ptr<gmscore::vector::StrokeTextureCache, std::__1::default_delete<gmscore::vector::StrokeTextureCache>> {
    struct __compressed_pair<gmscore::vector::StrokeTextureCache *, std::__1::default_delete<gmscore::vector::StrokeTextureCache>> {
        struct StrokeTextureCache *__first_;
    } __ptr_;
};

struct unique_ptr<gmscore::vector::TextureCache, std::__1::default_delete<gmscore::vector::TextureCache>> {
    struct __compressed_pair<gmscore::vector::TextureCache *, std::__1::default_delete<gmscore::vector::TextureCache>> {
        struct TextureCache *__first_;
    } __ptr_;
};

struct unique_ptr<gmscore::vector::detail::FeatureData, std::__1::default_delete<gmscore::vector::detail::FeatureData>> {
    struct __compressed_pair<gmscore::vector::detail::FeatureData *, std::__1::default_delete<gmscore::vector::detail::FeatureData>> {
        struct FeatureData *__first_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<gmscore::model::FeatureID, gmscore::utils::LRUCache<gmscore::model::FeatureID, GMSIndoorBuilding *, std::__1::hash<gmscore::model::FeatureID>, false>::LRUCacheEntry *>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<gmscore::model::FeatureID, gmscore::utils::LRUCache<gmscore::model::FeatureID, GMSIndoorBuilding *, std::__1::hash<gmscore::model::FeatureID>, false>::LRUCacheEntry *>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<gmscore::model::FeatureID, gmscore::utils::LRUCache<gmscore::model::FeatureID, GMSIndoorBuilding *, std::__1::hash<gmscore::model::FeatureID>, false>::LRUCacheEntry *>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<gmscore::model::FeatureID, gmscore::utils::LRUCache<gmscore::model::FeatureID, GMSIndoorBuilding *, std::__1::hash<gmscore::model::FeatureID>, false>::LRUCacheEntry *>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<gmscore::model::FeatureID, gmscore::utils::LRUCache<gmscore::model::FeatureID, GMSIndoorBuilding *, std::__1::hash<gmscore::model::FeatureID>, false>::LRUCacheEntry *>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<gmscore::model::FeatureID, gmscore::utils::LRUCache<gmscore::model::FeatureID, GMSIndoorBuilding *, std::__1::hash<gmscore::model::FeatureID>, false>::LRUCacheEntry *>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<gmscore::model::FeatureID, gmscore::utils::LRUCache<gmscore::model::FeatureID, GMSIndoorBuilding *, std::__1::hash<gmscore::model::FeatureID>, false>::LRUCacheEntry *>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<gmscore::model::IndoorID, GMSIndoorBuildingState *>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<gmscore::model::IndoorID, GMSIndoorBuildingState *>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<gmscore::model::IndoorID, GMSIndoorBuildingState *>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<gmscore::model::IndoorID, GMSIndoorBuildingState *>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<gmscore::model::IndoorID, GMSIndoorBuildingState *>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<gmscore::model::IndoorID, GMSIndoorBuildingState *>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<gmscore::model::IndoorID, GMSIndoorBuildingState *>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<gmscore::model::IndoorID, gmscore::base::reffed_ptr<gmscore::vector::LabelSource>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<gmscore::model::IndoorID, gmscore::base::reffed_ptr<gmscore::vector::LabelSource>>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<gmscore::model::IndoorID, gmscore::base::reffed_ptr<gmscore::vector::LabelSource>>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<gmscore::model::IndoorID, gmscore::base::reffed_ptr<gmscore::vector::LabelSource>>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<gmscore::model::IndoorID, gmscore::base::reffed_ptr<gmscore::vector::LabelSource>>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<gmscore::model::IndoorID, gmscore::base::reffed_ptr<gmscore::vector::LabelSource>>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<gmscore::model::IndoorID, gmscore::base::reffed_ptr<gmscore::vector::LabelSource>>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<gmscore::model::IndoorID, gmscore::utils::LRUCache<gmscore::model::IndoorID, GMSIndoorLevel *, std::__1::hash<gmscore::model::IndoorID>, false>::LRUCacheEntry *>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<gmscore::model::IndoorID, gmscore::utils::LRUCache<gmscore::model::IndoorID, GMSIndoorLevel *, std::__1::hash<gmscore::model::IndoorID>, false>::LRUCacheEntry *>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<gmscore::model::IndoorID, gmscore::utils::LRUCache<gmscore::model::IndoorID, GMSIndoorLevel *, std::__1::hash<gmscore::model::IndoorID>, false>::LRUCacheEntry *>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<gmscore::model::IndoorID, gmscore::utils::LRUCache<gmscore::model::IndoorID, GMSIndoorLevel *, std::__1::hash<gmscore::model::IndoorID>, false>::LRUCacheEntry *>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<gmscore::model::IndoorID, gmscore::utils::LRUCache<gmscore::model::IndoorID, GMSIndoorLevel *, std::__1::hash<gmscore::model::IndoorID>, false>::LRUCacheEntry *>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<gmscore::model::IndoorID, gmscore::utils::LRUCache<gmscore::model::IndoorID, GMSIndoorLevel *, std::__1::hash<gmscore::model::IndoorID>, false>::LRUCacheEntry *>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<gmscore::model::IndoorID, gmscore::utils::LRUCache<gmscore::model::IndoorID, GMSIndoorLevel *, std::__1::hash<gmscore::model::IndoorID>, false>::LRUCacheEntry *>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<gmscore::model::IndoorID, gmscore::utils::LRUCache<gmscore::model::IndoorID, gmscore::model::IndoorID, std::__1::hash<gmscore::model::IndoorID>, false>::LRUCacheEntry *>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<gmscore::model::IndoorID, gmscore::utils::LRUCache<gmscore::model::IndoorID, gmscore::model::IndoorID, std::__1::hash<gmscore::model::IndoorID>, false>::LRUCacheEntry *>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<gmscore::model::IndoorID, gmscore::utils::LRUCache<gmscore::model::IndoorID, gmscore::model::IndoorID, std::__1::hash<gmscore::model::IndoorID>, false>::LRUCacheEntry *>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<gmscore::model::IndoorID, gmscore::utils::LRUCache<gmscore::model::IndoorID, gmscore::model::IndoorID, std::__1::hash<gmscore::model::IndoorID>, false>::LRUCacheEntry *>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<gmscore::model::IndoorID, gmscore::utils::LRUCache<gmscore::model::IndoorID, gmscore::model::IndoorID, std::__1::hash<gmscore::model::IndoorID>, false>::LRUCacheEntry *>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<gmscore::model::IndoorID, gmscore::utils::LRUCache<gmscore::model::IndoorID, gmscore::model::IndoorID, std::__1::hash<gmscore::model::IndoorID>, false>::LRUCacheEntry *>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<gmscore::model::IndoorID, gmscore::utils::LRUCache<gmscore::model::IndoorID, gmscore::model::IndoorID, std::__1::hash<gmscore::model::IndoorID>, false>::LRUCacheEntry *>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<int, unsigned long long>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, unsigned long long>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<int, unsigned long long>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, unsigned long long>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<int, unsigned long long>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, unsigned long long>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, unsigned long long>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, gmscore::utils::LRUCache<std::__1::basic_string<char>, gmscore::base::reffed_ptr<gmscore::renderer::TextureState>, std::__1::hash<std::__1::basic_string<char>>, false>::LRUCacheEntry *>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, gmscore::utils::LRUCache<std::__1::basic_string<char>, gmscore::base::reffed_ptr<gmscore::renderer::TextureState>, std::__1::hash<std::__1::basic_string<char>>, false>::LRUCacheEntry *>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, gmscore::utils::LRUCache<std::__1::basic_string<char>, gmscore::base::reffed_ptr<gmscore::renderer::TextureState>, std::__1::hash<std::__1::basic_string<char>>, false>::LRUCacheEntry *>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, gmscore::utils::LRUCache<std::__1::basic_string<char>, gmscore::base::reffed_ptr<gmscore::renderer::TextureState>, std::__1::hash<std::__1::basic_string<char>>, false>::LRUCacheEntry *>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, gmscore::utils::LRUCache<std::__1::basic_string<char>, gmscore::base::reffed_ptr<gmscore::renderer::TextureState>, std::__1::hash<std::__1::basic_string<char>>, false>::LRUCacheEntry *>, void *> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, gmscore::utils::LRUCache<std::__1::basic_string<char>, gmscore::base::reffed_ptr<gmscore::renderer::TextureState>, std::__1::hash<std::__1::basic_string<char>>, false>::LRUCacheEntry *>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, gmscore::utils::LRUCache<std::__1::basic_string<char>, gmscore::base::reffed_ptr<gmscore::renderer::TextureState>, std::__1::hash<std::__1::basic_string<char>>, false>::LRUCacheEntry *>, void *>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<void *, std::__1::unordered_set<gmscore::model::FeatureID, std::__1::hash<gmscore::model::FeatureID>, std::__1::equal_to<gmscore::model::FeatureID>, std::__1::allocator<gmscore::model::FeatureID>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<void *, std::__1::unordered_set<gmscore::model::FeatureID, std::__1::hash<gmscore::model::FeatureID>, std::__1::equal_to<gmscore::model::FeatureID>, std::__1::allocator<gmscore::model::FeatureID>>>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<void *, std::__1::unordered_set<gmscore::model::FeatureID, std::__1::hash<gmscore::model::FeatureID>, std::__1::equal_to<gmscore::model::FeatureID>, std::__1::allocator<gmscore::model::FeatureID>>>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<void *, std::__1::unordered_set<gmscore::model::FeatureID, std::__1::hash<gmscore::model::FeatureID>, std::__1::equal_to<gmscore::model::FeatureID>, std::__1::allocator<gmscore::model::FeatureID>>>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<void *, std::__1::unordered_set<gmscore::model::FeatureID, std::__1::hash<gmscore::model::FeatureID>, std::__1::equal_to<gmscore::model::FeatureID>, std::__1::allocator<gmscore::model::FeatureID>>>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<void *, std::__1::unordered_set<gmscore::model::FeatureID, std::__1::hash<gmscore::model::FeatureID>, std::__1::equal_to<gmscore::model::FeatureID>, std::__1::allocator<gmscore::model::FeatureID>>>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<void *, std::__1::unordered_set<gmscore::model::FeatureID, std::__1::hash<gmscore::model::FeatureID>, std::__1::equal_to<gmscore::model::FeatureID>, std::__1::allocator<gmscore::model::FeatureID>>>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<void *, std::__1::unordered_set<gmscore::model::IndoorID, std::__1::hash<gmscore::model::IndoorID>, std::__1::equal_to<gmscore::model::IndoorID>, std::__1::allocator<gmscore::model::IndoorID>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<void *, std::__1::unordered_set<gmscore::model::IndoorID, std::__1::hash<gmscore::model::IndoorID>, std::__1::equal_to<gmscore::model::IndoorID>, std::__1::allocator<gmscore::model::IndoorID>>>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<void *, std::__1::unordered_set<gmscore::model::IndoorID, std::__1::hash<gmscore::model::IndoorID>, std::__1::equal_to<gmscore::model::IndoorID>, std::__1::allocator<gmscore::model::IndoorID>>>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<void *, std::__1::unordered_set<gmscore::model::IndoorID, std::__1::hash<gmscore::model::IndoorID>, std::__1::equal_to<gmscore::model::IndoorID>, std::__1::allocator<gmscore::model::IndoorID>>>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<void *, std::__1::unordered_set<gmscore::model::IndoorID, std::__1::hash<gmscore::model::IndoorID>, std::__1::equal_to<gmscore::model::IndoorID>, std::__1::allocator<gmscore::model::IndoorID>>>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<void *, std::__1::unordered_set<gmscore::model::IndoorID, std::__1::hash<gmscore::model::IndoorID>, std::__1::equal_to<gmscore::model::IndoorID>, std::__1::allocator<gmscore::model::IndoorID>>>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<void *, std::__1::unordered_set<gmscore::model::IndoorID, std::__1::hash<gmscore::model::IndoorID>, std::__1::equal_to<gmscore::model::IndoorID>, std::__1::allocator<gmscore::model::IndoorID>>>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<void *, std::__1::unordered_set<std::__1::basic_string<char>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::basic_string<char>>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<void *, std::__1::unordered_set<std::__1::basic_string<char>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::basic_string<char>>>>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<void *, std::__1::unordered_set<std::__1::basic_string<char>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::basic_string<char>>>>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<void *, std::__1::unordered_set<std::__1::basic_string<char>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::basic_string<char>>>>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<void *, std::__1::unordered_set<std::__1::basic_string<char>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::basic_string<char>>>>, void *> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<void *, std::__1::unordered_set<std::__1::basic_string<char>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::basic_string<char>>>>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<void *, std::__1::unordered_set<std::__1::basic_string<char>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::basic_string<char>>>>, void *>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node<std::__1::basic_string<char>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::basic_string<char>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::basic_string<char>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::basic_string<char>, void *>*>>> {
        struct __hash_node<std::__1::basic_string<char>, void *> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::basic_string<char>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::basic_string<char>, void *>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, std::__1::shared_ptr<yuki::Effector>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, std::__1::shared_ptr<yuki::Effector>>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, std::__1::shared_ptr<yuki::Effector>>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, std::__1::shared_ptr<yuki::Effector>>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, std::__1::shared_ptr<yuki::Effector>>, void *>*> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, std::__1::shared_ptr<yuki::Effector>>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, std::__1::shared_ptr<yuki::Effector>>, void *>*>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unordered_map<gmscore::model::FeatureID, gmscore::utils::LRUCache<gmscore::model::FeatureID, GMSIndoorBuilding *, std::__1::hash<gmscore::model::FeatureID>, false>::LRUCacheEntry *, std::__1::hash<gmscore::model::FeatureID>, std::__1::equal_to<gmscore::model::FeatureID>, std::__1::allocator<std::__1::pair<const gmscore::model::FeatureID, gmscore::utils::LRUCache<gmscore::model::FeatureID, GMSIndoorBuilding *, std::__1::hash<gmscore::model::FeatureID>, false>::LRUCacheEntry *>>> {
    struct __hash_table<std::__1::__hash_value_type<gmscore::model::FeatureID, gmscore::utils::LRUCache<gmscore::model::FeatureID, GMSIndoorBuilding *, std::__1::hash<gmscore::model::FeatureID>, false>::LRUCacheEntry *>, std::__1::__unordered_map_hasher<gmscore::model::FeatureID, std::__1::__hash_value_type<gmscore::model::FeatureID, gmscore::utils::LRUCache<gmscore::model::FeatureID, GMSIndoorBuilding *, std::__1::hash<gmscore::model::FeatureID>, false>::LRUCacheEntry *>, std::__1::hash<gmscore::model::FeatureID>, true>, std::__1::__unordered_map_equal<gmscore::model::FeatureID, std::__1::__hash_value_type<gmscore::model::FeatureID, gmscore::utils::LRUCache<gmscore::model::FeatureID, GMSIndoorBuilding *, std::__1::hash<gmscore::model::FeatureID>, false>::LRUCacheEntry *>, std::__1::equal_to<gmscore::model::FeatureID>, true>, std::__1::allocator<std::__1::__hash_value_type<gmscore::model::FeatureID, gmscore::utils::LRUCache<gmscore::model::FeatureID, GMSIndoorBuilding *, std::__1::hash<gmscore::model::FeatureID>, false>::LRUCacheEntry *>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<gmscore::model::FeatureID, gmscore::utils::LRUCache<gmscore::model::FeatureID, GMSIndoorBuilding *, std::__1::hash<gmscore::model::FeatureID>, false>::LRUCacheEntry *>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<gmscore::model::FeatureID, gmscore::utils::LRUCache<gmscore::model::FeatureID, GMSIndoorBuilding *, std::__1::hash<gmscore::model::FeatureID>, false>::LRUCacheEntry *>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<gmscore::model::FeatureID, gmscore::utils::LRUCache<gmscore::model::FeatureID, GMSIndoorBuilding *, std::__1::hash<gmscore::model::FeatureID>, false>::LRUCacheEntry *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<gmscore::model::FeatureID, gmscore::utils::LRUCache<gmscore::model::FeatureID, GMSIndoorBuilding *, std::__1::hash<gmscore::model::FeatureID>, false>::LRUCacheEntry *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<gmscore::model::FeatureID, gmscore::utils::LRUCache<gmscore::model::FeatureID, GMSIndoorBuilding *, std::__1::hash<gmscore::model::FeatureID>, false>::LRUCacheEntry *>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<gmscore::model::FeatureID, gmscore::utils::LRUCache<gmscore::model::FeatureID, GMSIndoorBuilding *, std::__1::hash<gmscore::model::FeatureID>, false>::LRUCacheEntry *>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<gmscore::model::FeatureID, std::__1::__hash_value_type<gmscore::model::FeatureID, gmscore::utils::LRUCache<gmscore::model::FeatureID, GMSIndoorBuilding *, std::__1::hash<gmscore::model::FeatureID>, false>::LRUCacheEntry *>, std::__1::hash<gmscore::model::FeatureID>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<gmscore::model::FeatureID, std::__1::__hash_value_type<gmscore::model::FeatureID, gmscore::utils::LRUCache<gmscore::model::FeatureID, GMSIndoorBuilding *, std::__1::hash<gmscore::model::FeatureID>, false>::LRUCacheEntry *>, std::__1::equal_to<gmscore::model::FeatureID>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<gmscore::model::IndoorID, GMSIndoorBuildingState *, std::__1::hash<gmscore::model::IndoorID>, std::__1::equal_to<gmscore::model::IndoorID>, std::__1::allocator<std::__1::pair<const gmscore::model::IndoorID, GMSIndoorBuildingState *>>> {
    struct __hash_table<std::__1::__hash_value_type<gmscore::model::IndoorID, GMSIndoorBuildingState *>, std::__1::__unordered_map_hasher<gmscore::model::IndoorID, std::__1::__hash_value_type<gmscore::model::IndoorID, GMSIndoorBuildingState *>, std::__1::hash<gmscore::model::IndoorID>, true>, std::__1::__unordered_map_equal<gmscore::model::IndoorID, std::__1::__hash_value_type<gmscore::model::IndoorID, GMSIndoorBuildingState *>, std::__1::equal_to<gmscore::model::IndoorID>, true>, std::__1::allocator<std::__1::__hash_value_type<gmscore::model::IndoorID, GMSIndoorBuildingState *>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<gmscore::model::IndoorID, GMSIndoorBuildingState *>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<gmscore::model::IndoorID, GMSIndoorBuildingState *>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<gmscore::model::IndoorID, GMSIndoorBuildingState *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<gmscore::model::IndoorID, GMSIndoorBuildingState *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<gmscore::model::IndoorID, GMSIndoorBuildingState *>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<gmscore::model::IndoorID, GMSIndoorBuildingState *>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<gmscore::model::IndoorID, std::__1::__hash_value_type<gmscore::model::IndoorID, GMSIndoorBuildingState *>, std::__1::hash<gmscore::model::IndoorID>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<gmscore::model::IndoorID, std::__1::__hash_value_type<gmscore::model::IndoorID, GMSIndoorBuildingState *>, std::__1::equal_to<gmscore::model::IndoorID>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<gmscore::model::IndoorID, gmscore::base::reffed_ptr<gmscore::vector::LabelSource>, std::__1::hash<gmscore::model::IndoorID>, std::__1::equal_to<gmscore::model::IndoorID>, std::__1::allocator<std::__1::pair<const gmscore::model::IndoorID, gmscore::base::reffed_ptr<gmscore::vector::LabelSource>>>> {
    struct __hash_table<std::__1::__hash_value_type<gmscore::model::IndoorID, gmscore::base::reffed_ptr<gmscore::vector::LabelSource>>, std::__1::__unordered_map_hasher<gmscore::model::IndoorID, std::__1::__hash_value_type<gmscore::model::IndoorID, gmscore::base::reffed_ptr<gmscore::vector::LabelSource>>, std::__1::hash<gmscore::model::IndoorID>, true>, std::__1::__unordered_map_equal<gmscore::model::IndoorID, std::__1::__hash_value_type<gmscore::model::IndoorID, gmscore::base::reffed_ptr<gmscore::vector::LabelSource>>, std::__1::equal_to<gmscore::model::IndoorID>, true>, std::__1::allocator<std::__1::__hash_value_type<gmscore::model::IndoorID, gmscore::base::reffed_ptr<gmscore::vector::LabelSource>>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<gmscore::model::IndoorID, gmscore::base::reffed_ptr<gmscore::vector::LabelSource>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<gmscore::model::IndoorID, gmscore::base::reffed_ptr<gmscore::vector::LabelSource>>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<gmscore::model::IndoorID, gmscore::base::reffed_ptr<gmscore::vector::LabelSource>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<gmscore::model::IndoorID, gmscore::base::reffed_ptr<gmscore::vector::LabelSource>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<gmscore::model::IndoorID, gmscore::base::reffed_ptr<gmscore::vector::LabelSource>>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<gmscore::model::IndoorID, gmscore::base::reffed_ptr<gmscore::vector::LabelSource>>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<gmscore::model::IndoorID, std::__1::__hash_value_type<gmscore::model::IndoorID, gmscore::base::reffed_ptr<gmscore::vector::LabelSource>>, std::__1::hash<gmscore::model::IndoorID>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<gmscore::model::IndoorID, std::__1::__hash_value_type<gmscore::model::IndoorID, gmscore::base::reffed_ptr<gmscore::vector::LabelSource>>, std::__1::equal_to<gmscore::model::IndoorID>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<gmscore::model::IndoorID, gmscore::utils::LRUCache<gmscore::model::IndoorID, GMSIndoorLevel *, std::__1::hash<gmscore::model::IndoorID>, false>::LRUCacheEntry *, std::__1::hash<gmscore::model::IndoorID>, std::__1::equal_to<gmscore::model::IndoorID>, std::__1::allocator<std::__1::pair<const gmscore::model::IndoorID, gmscore::utils::LRUCache<gmscore::model::IndoorID, GMSIndoorLevel *, std::__1::hash<gmscore::model::IndoorID>, false>::LRUCacheEntry *>>> {
    struct __hash_table<std::__1::__hash_value_type<gmscore::model::IndoorID, gmscore::utils::LRUCache<gmscore::model::IndoorID, GMSIndoorLevel *, std::__1::hash<gmscore::model::IndoorID>, false>::LRUCacheEntry *>, std::__1::__unordered_map_hasher<gmscore::model::IndoorID, std::__1::__hash_value_type<gmscore::model::IndoorID, gmscore::utils::LRUCache<gmscore::model::IndoorID, GMSIndoorLevel *, std::__1::hash<gmscore::model::IndoorID>, false>::LRUCacheEntry *>, std::__1::hash<gmscore::model::IndoorID>, true>, std::__1::__unordered_map_equal<gmscore::model::IndoorID, std::__1::__hash_value_type<gmscore::model::IndoorID, gmscore::utils::LRUCache<gmscore::model::IndoorID, GMSIndoorLevel *, std::__1::hash<gmscore::model::IndoorID>, false>::LRUCacheEntry *>, std::__1::equal_to<gmscore::model::IndoorID>, true>, std::__1::allocator<std::__1::__hash_value_type<gmscore::model::IndoorID, gmscore::utils::LRUCache<gmscore::model::IndoorID, GMSIndoorLevel *, std::__1::hash<gmscore::model::IndoorID>, false>::LRUCacheEntry *>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<gmscore::model::IndoorID, gmscore::utils::LRUCache<gmscore::model::IndoorID, GMSIndoorLevel *, std::__1::hash<gmscore::model::IndoorID>, false>::LRUCacheEntry *>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<gmscore::model::IndoorID, gmscore::utils::LRUCache<gmscore::model::IndoorID, GMSIndoorLevel *, std::__1::hash<gmscore::model::IndoorID>, false>::LRUCacheEntry *>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<gmscore::model::IndoorID, gmscore::utils::LRUCache<gmscore::model::IndoorID, GMSIndoorLevel *, std::__1::hash<gmscore::model::IndoorID>, false>::LRUCacheEntry *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<gmscore::model::IndoorID, gmscore::utils::LRUCache<gmscore::model::IndoorID, GMSIndoorLevel *, std::__1::hash<gmscore::model::IndoorID>, false>::LRUCacheEntry *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<gmscore::model::IndoorID, gmscore::utils::LRUCache<gmscore::model::IndoorID, GMSIndoorLevel *, std::__1::hash<gmscore::model::IndoorID>, false>::LRUCacheEntry *>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<gmscore::model::IndoorID, gmscore::utils::LRUCache<gmscore::model::IndoorID, GMSIndoorLevel *, std::__1::hash<gmscore::model::IndoorID>, false>::LRUCacheEntry *>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<gmscore::model::IndoorID, std::__1::__hash_value_type<gmscore::model::IndoorID, gmscore::utils::LRUCache<gmscore::model::IndoorID, GMSIndoorLevel *, std::__1::hash<gmscore::model::IndoorID>, false>::LRUCacheEntry *>, std::__1::hash<gmscore::model::IndoorID>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<gmscore::model::IndoorID, std::__1::__hash_value_type<gmscore::model::IndoorID, gmscore::utils::LRUCache<gmscore::model::IndoorID, GMSIndoorLevel *, std::__1::hash<gmscore::model::IndoorID>, false>::LRUCacheEntry *>, std::__1::equal_to<gmscore::model::IndoorID>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<gmscore::model::IndoorID, gmscore::utils::LRUCache<gmscore::model::IndoorID, gmscore::model::IndoorID, std::__1::hash<gmscore::model::IndoorID>, false>::LRUCacheEntry *, std::__1::hash<gmscore::model::IndoorID>, std::__1::equal_to<gmscore::model::IndoorID>, std::__1::allocator<std::__1::pair<const gmscore::model::IndoorID, gmscore::utils::LRUCache<gmscore::model::IndoorID, gmscore::model::IndoorID, std::__1::hash<gmscore::model::IndoorID>, false>::LRUCacheEntry *>>> {
    struct __hash_table<std::__1::__hash_value_type<gmscore::model::IndoorID, gmscore::utils::LRUCache<gmscore::model::IndoorID, gmscore::model::IndoorID, std::__1::hash<gmscore::model::IndoorID>, false>::LRUCacheEntry *>, std::__1::__unordered_map_hasher<gmscore::model::IndoorID, std::__1::__hash_value_type<gmscore::model::IndoorID, gmscore::utils::LRUCache<gmscore::model::IndoorID, gmscore::model::IndoorID, std::__1::hash<gmscore::model::IndoorID>, false>::LRUCacheEntry *>, std::__1::hash<gmscore::model::IndoorID>, true>, std::__1::__unordered_map_equal<gmscore::model::IndoorID, std::__1::__hash_value_type<gmscore::model::IndoorID, gmscore::utils::LRUCache<gmscore::model::IndoorID, gmscore::model::IndoorID, std::__1::hash<gmscore::model::IndoorID>, false>::LRUCacheEntry *>, std::__1::equal_to<gmscore::model::IndoorID>, true>, std::__1::allocator<std::__1::__hash_value_type<gmscore::model::IndoorID, gmscore::utils::LRUCache<gmscore::model::IndoorID, gmscore::model::IndoorID, std::__1::hash<gmscore::model::IndoorID>, false>::LRUCacheEntry *>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<gmscore::model::IndoorID, gmscore::utils::LRUCache<gmscore::model::IndoorID, gmscore::model::IndoorID, std::__1::hash<gmscore::model::IndoorID>, false>::LRUCacheEntry *>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<gmscore::model::IndoorID, gmscore::utils::LRUCache<gmscore::model::IndoorID, gmscore::model::IndoorID, std::__1::hash<gmscore::model::IndoorID>, false>::LRUCacheEntry *>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<gmscore::model::IndoorID, gmscore::utils::LRUCache<gmscore::model::IndoorID, gmscore::model::IndoorID, std::__1::hash<gmscore::model::IndoorID>, false>::LRUCacheEntry *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<gmscore::model::IndoorID, gmscore::utils::LRUCache<gmscore::model::IndoorID, gmscore::model::IndoorID, std::__1::hash<gmscore::model::IndoorID>, false>::LRUCacheEntry *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<gmscore::model::IndoorID, gmscore::utils::LRUCache<gmscore::model::IndoorID, gmscore::model::IndoorID, std::__1::hash<gmscore::model::IndoorID>, false>::LRUCacheEntry *>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<gmscore::model::IndoorID, gmscore::utils::LRUCache<gmscore::model::IndoorID, gmscore::model::IndoorID, std::__1::hash<gmscore::model::IndoorID>, false>::LRUCacheEntry *>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<gmscore::model::IndoorID, std::__1::__hash_value_type<gmscore::model::IndoorID, gmscore::utils::LRUCache<gmscore::model::IndoorID, gmscore::model::IndoorID, std::__1::hash<gmscore::model::IndoorID>, false>::LRUCacheEntry *>, std::__1::hash<gmscore::model::IndoorID>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<gmscore::model::IndoorID, std::__1::__hash_value_type<gmscore::model::IndoorID, gmscore::utils::LRUCache<gmscore::model::IndoorID, gmscore::model::IndoorID, std::__1::hash<gmscore::model::IndoorID>, false>::LRUCacheEntry *>, std::__1::equal_to<gmscore::model::IndoorID>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<int, unsigned long long, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, unsigned long long>>> {
    struct __hash_table<std::__1::__hash_value_type<int, unsigned long long>, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, unsigned long long>, std::__1::hash<int>, true>, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, unsigned long long>, std::__1::equal_to<int>, true>, std::__1::allocator<std::__1::__hash_value_type<int, unsigned long long>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<int, unsigned long long>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, unsigned long long>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, unsigned long long>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, unsigned long long>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, unsigned long long>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<int, unsigned long long>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, unsigned long long>, std::__1::hash<int>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, unsigned long long>, std::__1::equal_to<int>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<long long, std::__1::shared_ptr<yuki::Effector>, std::__1::hash<long long>, std::__1::equal_to<long long>, std::__1::allocator<std::__1::pair<const long long, std::__1::shared_ptr<yuki::Effector>>>> {
    struct __hash_table<std::__1::__hash_value_type<long long, std::__1::shared_ptr<yuki::Effector>>, std::__1::__unordered_map_hasher<long long, std::__1::__hash_value_type<long long, std::__1::shared_ptr<yuki::Effector>>, std::__1::hash<long long>, true>, std::__1::__unordered_map_equal<long long, std::__1::__hash_value_type<long long, std::__1::shared_ptr<yuki::Effector>>, std::__1::equal_to<long long>, true>, std::__1::allocator<std::__1::__hash_value_type<long long, std::__1::shared_ptr<yuki::Effector>>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, std::__1::shared_ptr<yuki::Effector>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, std::__1::shared_ptr<yuki::Effector>>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, std::__1::shared_ptr<yuki::Effector>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<long long, std::__1::shared_ptr<yuki::Effector>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, std::__1::shared_ptr<yuki::Effector>>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<long long, std::__1::__hash_value_type<long long, std::__1::shared_ptr<yuki::Effector>>, std::__1::hash<long long>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<long long, std::__1::__hash_value_type<long long, std::__1::shared_ptr<yuki::Effector>>, std::__1::equal_to<long long>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<std::__1::basic_string<char>, gmscore::utils::LRUCache<std::__1::basic_string<char>, gmscore::base::reffed_ptr<gmscore::renderer::TextureState>, std::__1::hash<std::__1::basic_string<char>>, false>::LRUCacheEntry *, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, gmscore::utils::LRUCache<std::__1::basic_string<char>, gmscore::base::reffed_ptr<gmscore::renderer::TextureState>, std::__1::hash<std::__1::basic_string<char>>, false>::LRUCacheEntry *>>> {
    struct __hash_table<std::__1::__hash_value_type<std::__1::basic_string<char>, gmscore::utils::LRUCache<std::__1::basic_string<char>, gmscore::base::reffed_ptr<gmscore::renderer::TextureState>, std::__1::hash<std::__1::basic_string<char>>, false>::LRUCacheEntry *>, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, gmscore::utils::LRUCache<std::__1::basic_string<char>, gmscore::base::reffed_ptr<gmscore::renderer::TextureState>, std::__1::hash<std::__1::basic_string<char>>, false>::LRUCacheEntry *>, std::__1::hash<std::__1::basic_string<char>>, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, gmscore::utils::LRUCache<std::__1::basic_string<char>, gmscore::base::reffed_ptr<gmscore::renderer::TextureState>, std::__1::hash<std::__1::basic_string<char>>, false>::LRUCacheEntry *>, std::__1::equal_to<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char>, gmscore::utils::LRUCache<std::__1::basic_string<char>, gmscore::base::reffed_ptr<gmscore::renderer::TextureState>, std::__1::hash<std::__1::basic_string<char>>, false>::LRUCacheEntry *>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, gmscore::utils::LRUCache<std::__1::basic_string<char>, gmscore::base::reffed_ptr<gmscore::renderer::TextureState>, std::__1::hash<std::__1::basic_string<char>>, false>::LRUCacheEntry *>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, gmscore::utils::LRUCache<std::__1::basic_string<char>, gmscore::base::reffed_ptr<gmscore::renderer::TextureState>, std::__1::hash<std::__1::basic_string<char>>, false>::LRUCacheEntry *>, void *>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, gmscore::utils::LRUCache<std::__1::basic_string<char>, gmscore::base::reffed_ptr<gmscore::renderer::TextureState>, std::__1::hash<std::__1::basic_string<char>>, false>::LRUCacheEntry *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, gmscore::utils::LRUCache<std::__1::basic_string<char>, gmscore::base::reffed_ptr<gmscore::renderer::TextureState>, std::__1::hash<std::__1::basic_string<char>>, false>::LRUCacheEntry *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, gmscore::utils::LRUCache<std::__1::basic_string<char>, gmscore::base::reffed_ptr<gmscore::renderer::TextureState>, std::__1::hash<std::__1::basic_string<char>>, false>::LRUCacheEntry *>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, gmscore::utils::LRUCache<std::__1::basic_string<char>, gmscore::base::reffed_ptr<gmscore::renderer::TextureState>, std::__1::hash<std::__1::basic_string<char>>, false>::LRUCacheEntry *>, void *> *_field1;
            } _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, gmscore::utils::LRUCache<std::__1::basic_string<char>, gmscore::base::reffed_ptr<gmscore::renderer::TextureState>, std::__1::hash<std::__1::basic_string<char>>, false>::LRUCacheEntry *>, std::__1::hash<std::__1::basic_string<char>>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, gmscore::utils::LRUCache<std::__1::basic_string<char>, gmscore::base::reffed_ptr<gmscore::renderer::TextureState>, std::__1::hash<std::__1::basic_string<char>>, false>::LRUCacheEntry *>, std::__1::equal_to<std::__1::basic_string<char>>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<unsigned long long, unsigned long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned long>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned long long, unsigned long>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, unsigned long>, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, unsigned long>, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, unsigned long>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, unsigned long>, std::__1::hash<unsigned long long>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, unsigned long>, std::__1::equal_to<unsigned long long>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<void *, std::__1::unordered_set<gmscore::model::FeatureID, std::__1::hash<gmscore::model::FeatureID>, std::__1::equal_to<gmscore::model::FeatureID>, std::__1::allocator<gmscore::model::FeatureID>>, std::__1::hash<void *>, std::__1::equal_to<void *>, std::__1::allocator<std::__1::pair<void *const, std::__1::unordered_set<gmscore::model::FeatureID, std::__1::hash<gmscore::model::FeatureID>, std::__1::equal_to<gmscore::model::FeatureID>, std::__1::allocator<gmscore::model::FeatureID>>>>> {
    struct __hash_table<std::__1::__hash_value_type<void *, std::__1::unordered_set<gmscore::model::FeatureID, std::__1::hash<gmscore::model::FeatureID>, std::__1::equal_to<gmscore::model::FeatureID>, std::__1::allocator<gmscore::model::FeatureID>>>, std::__1::__unordered_map_hasher<void *, std::__1::__hash_value_type<void *, std::__1::unordered_set<gmscore::model::FeatureID, std::__1::hash<gmscore::model::FeatureID>, std::__1::equal_to<gmscore::model::FeatureID>, std::__1::allocator<gmscore::model::FeatureID>>>, std::__1::hash<void *>, true>, std::__1::__unordered_map_equal<void *, std::__1::__hash_value_type<void *, std::__1::unordered_set<gmscore::model::FeatureID, std::__1::hash<gmscore::model::FeatureID>, std::__1::equal_to<gmscore::model::FeatureID>, std::__1::allocator<gmscore::model::FeatureID>>>, std::__1::equal_to<void *>, true>, std::__1::allocator<std::__1::__hash_value_type<void *, std::__1::unordered_set<gmscore::model::FeatureID, std::__1::hash<gmscore::model::FeatureID>, std::__1::equal_to<gmscore::model::FeatureID>, std::__1::allocator<gmscore::model::FeatureID>>>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<void *, std::__1::unordered_set<gmscore::model::FeatureID, std::__1::hash<gmscore::model::FeatureID>, std::__1::equal_to<gmscore::model::FeatureID>, std::__1::allocator<gmscore::model::FeatureID>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<void *, std::__1::unordered_set<gmscore::model::FeatureID, std::__1::hash<gmscore::model::FeatureID>, std::__1::equal_to<gmscore::model::FeatureID>, std::__1::allocator<gmscore::model::FeatureID>>>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<void *, std::__1::unordered_set<gmscore::model::FeatureID, std::__1::hash<gmscore::model::FeatureID>, std::__1::equal_to<gmscore::model::FeatureID>, std::__1::allocator<gmscore::model::FeatureID>>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<void *, std::__1::unordered_set<gmscore::model::FeatureID, std::__1::hash<gmscore::model::FeatureID>, std::__1::equal_to<gmscore::model::FeatureID>, std::__1::allocator<gmscore::model::FeatureID>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<void *, std::__1::unordered_set<gmscore::model::FeatureID, std::__1::hash<gmscore::model::FeatureID>, std::__1::equal_to<gmscore::model::FeatureID>, std::__1::allocator<gmscore::model::FeatureID>>>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<void *, std::__1::unordered_set<gmscore::model::FeatureID, std::__1::hash<gmscore::model::FeatureID>, std::__1::equal_to<gmscore::model::FeatureID>, std::__1::allocator<gmscore::model::FeatureID>>>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<void *, std::__1::__hash_value_type<void *, std::__1::unordered_set<gmscore::model::FeatureID, std::__1::hash<gmscore::model::FeatureID>, std::__1::equal_to<gmscore::model::FeatureID>, std::__1::allocator<gmscore::model::FeatureID>>>, std::__1::hash<void *>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<void *, std::__1::__hash_value_type<void *, std::__1::unordered_set<gmscore::model::FeatureID, std::__1::hash<gmscore::model::FeatureID>, std::__1::equal_to<gmscore::model::FeatureID>, std::__1::allocator<gmscore::model::FeatureID>>>, std::__1::equal_to<void *>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<void *, std::__1::unordered_set<gmscore::model::IndoorID, std::__1::hash<gmscore::model::IndoorID>, std::__1::equal_to<gmscore::model::IndoorID>, std::__1::allocator<gmscore::model::IndoorID>>, std::__1::hash<void *>, std::__1::equal_to<void *>, std::__1::allocator<std::__1::pair<void *const, std::__1::unordered_set<gmscore::model::IndoorID, std::__1::hash<gmscore::model::IndoorID>, std::__1::equal_to<gmscore::model::IndoorID>, std::__1::allocator<gmscore::model::IndoorID>>>>> {
    struct __hash_table<std::__1::__hash_value_type<void *, std::__1::unordered_set<gmscore::model::IndoorID, std::__1::hash<gmscore::model::IndoorID>, std::__1::equal_to<gmscore::model::IndoorID>, std::__1::allocator<gmscore::model::IndoorID>>>, std::__1::__unordered_map_hasher<void *, std::__1::__hash_value_type<void *, std::__1::unordered_set<gmscore::model::IndoorID, std::__1::hash<gmscore::model::IndoorID>, std::__1::equal_to<gmscore::model::IndoorID>, std::__1::allocator<gmscore::model::IndoorID>>>, std::__1::hash<void *>, true>, std::__1::__unordered_map_equal<void *, std::__1::__hash_value_type<void *, std::__1::unordered_set<gmscore::model::IndoorID, std::__1::hash<gmscore::model::IndoorID>, std::__1::equal_to<gmscore::model::IndoorID>, std::__1::allocator<gmscore::model::IndoorID>>>, std::__1::equal_to<void *>, true>, std::__1::allocator<std::__1::__hash_value_type<void *, std::__1::unordered_set<gmscore::model::IndoorID, std::__1::hash<gmscore::model::IndoorID>, std::__1::equal_to<gmscore::model::IndoorID>, std::__1::allocator<gmscore::model::IndoorID>>>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<void *, std::__1::unordered_set<gmscore::model::IndoorID, std::__1::hash<gmscore::model::IndoorID>, std::__1::equal_to<gmscore::model::IndoorID>, std::__1::allocator<gmscore::model::IndoorID>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<void *, std::__1::unordered_set<gmscore::model::IndoorID, std::__1::hash<gmscore::model::IndoorID>, std::__1::equal_to<gmscore::model::IndoorID>, std::__1::allocator<gmscore::model::IndoorID>>>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<void *, std::__1::unordered_set<gmscore::model::IndoorID, std::__1::hash<gmscore::model::IndoorID>, std::__1::equal_to<gmscore::model::IndoorID>, std::__1::allocator<gmscore::model::IndoorID>>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<void *, std::__1::unordered_set<gmscore::model::IndoorID, std::__1::hash<gmscore::model::IndoorID>, std::__1::equal_to<gmscore::model::IndoorID>, std::__1::allocator<gmscore::model::IndoorID>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<void *, std::__1::unordered_set<gmscore::model::IndoorID, std::__1::hash<gmscore::model::IndoorID>, std::__1::equal_to<gmscore::model::IndoorID>, std::__1::allocator<gmscore::model::IndoorID>>>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<void *, std::__1::unordered_set<gmscore::model::IndoorID, std::__1::hash<gmscore::model::IndoorID>, std::__1::equal_to<gmscore::model::IndoorID>, std::__1::allocator<gmscore::model::IndoorID>>>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<void *, std::__1::__hash_value_type<void *, std::__1::unordered_set<gmscore::model::IndoorID, std::__1::hash<gmscore::model::IndoorID>, std::__1::equal_to<gmscore::model::IndoorID>, std::__1::allocator<gmscore::model::IndoorID>>>, std::__1::hash<void *>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<void *, std::__1::__hash_value_type<void *, std::__1::unordered_set<gmscore::model::IndoorID, std::__1::hash<gmscore::model::IndoorID>, std::__1::equal_to<gmscore::model::IndoorID>, std::__1::allocator<gmscore::model::IndoorID>>>, std::__1::equal_to<void *>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<void *, std::__1::unordered_set<std::__1::basic_string<char>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::basic_string<char>>>, std::__1::hash<void *>, std::__1::equal_to<void *>, std::__1::allocator<std::__1::pair<void *const, std::__1::unordered_set<std::__1::basic_string<char>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::basic_string<char>>>>>> {
    struct __hash_table<std::__1::__hash_value_type<void *, std::__1::unordered_set<std::__1::basic_string<char>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::basic_string<char>>>>, std::__1::__unordered_map_hasher<void *, std::__1::__hash_value_type<void *, std::__1::unordered_set<std::__1::basic_string<char>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::basic_string<char>>>>, std::__1::hash<void *>, true>, std::__1::__unordered_map_equal<void *, std::__1::__hash_value_type<void *, std::__1::unordered_set<std::__1::basic_string<char>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::basic_string<char>>>>, std::__1::equal_to<void *>, true>, std::__1::allocator<std::__1::__hash_value_type<void *, std::__1::unordered_set<std::__1::basic_string<char>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::basic_string<char>>>>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<void *, std::__1::unordered_set<std::__1::basic_string<char>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::basic_string<char>>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<void *, std::__1::unordered_set<std::__1::basic_string<char>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::basic_string<char>>>>, void *>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<void *, std::__1::unordered_set<std::__1::basic_string<char>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::basic_string<char>>>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<void *, std::__1::unordered_set<std::__1::basic_string<char>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::basic_string<char>>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<void *, std::__1::unordered_set<std::__1::basic_string<char>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::basic_string<char>>>>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<void *, std::__1::unordered_set<std::__1::basic_string<char>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::basic_string<char>>>>, void *> *_field1;
            } _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<void *, std::__1::__hash_value_type<void *, std::__1::unordered_set<std::__1::basic_string<char>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::basic_string<char>>>>, std::__1::hash<void *>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<void *, std::__1::__hash_value_type<void *, std::__1::unordered_set<std::__1::basic_string<char>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::basic_string<char>>>>, std::__1::equal_to<void *>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_set<std::__1::basic_string<char>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::basic_string<char>>> {
    struct __hash_table<std::__1::basic_string<char>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::basic_string<char>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::basic_string<char>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::basic_string<char>, void *>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::basic_string<char>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::basic_string<char>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::basic_string<char>, void *>*> {
                struct __hash_node<std::__1::basic_string<char>, void *> *_field1;
            } _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::hash<std::__1::basic_string<char>>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::equal_to<std::__1::basic_string<char>>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unz_file_info_s {
    unsigned short _field1;
    unsigned short _field2;
    unsigned short _field3;
    unsigned short _field4;
    unsigned int _field5;
    unsigned int _field6;
    unsigned int _field7;
    unsigned int _field8;
    unsigned short _field9;
    unsigned short _field10;
    unsigned short _field11;
    unsigned short _field12;
    unsigned short _field13;
    unsigned int _field14;
    unsigned long long _field15;
};

struct unz_global_info_s {
    unsigned int _field1;
    unsigned int _field2;
    unsigned short _field3;
};

struct vector<(anonymous namespace)::StringTableEntry, std::__1::allocator<(anonymous namespace)::StringTableEntry>> {
    struct StringTableEntry *__begin_;
    struct StringTableEntry *__end_;
    struct __compressed_pair<(anonymous namespace)::StringTableEntry *, std::__1::allocator<(anonymous namespace)::StringTableEntry>> {
        struct StringTableEntry *__first_;
    } __end_cap_;
};

struct vector<CLLocationCoordinate2D, std::__1::allocator<CLLocationCoordinate2D>> {
    struct CLLocationCoordinate2D *__begin_;
    struct CLLocationCoordinate2D *__end_;
    struct __compressed_pair<CLLocationCoordinate2D *, std::__1::allocator<CLLocationCoordinate2D>> {
        struct CLLocationCoordinate2D *__first_;
    } __end_cap_;
};

struct vector<GMSCoordinate, std::__1::allocator<GMSCoordinate>> {
    struct GMSCoordinate *_field1;
    struct GMSCoordinate *_field2;
    struct __compressed_pair<GMSCoordinate *, std::__1::allocator<GMSCoordinate>> {
        struct GMSCoordinate *_field1;
    } _field3;
};

struct vector<GMSLazyMultiZoomStyle, std::__1::allocator<GMSLazyMultiZoomStyle>> {
    struct GMSLazyMultiZoomStyle *__begin_;
    struct GMSLazyMultiZoomStyle *__end_;
    struct __compressed_pair<GMSLazyMultiZoomStyle *, std::__1::allocator<GMSLazyMultiZoomStyle>> {
        struct GMSLazyMultiZoomStyle *__first_;
    } __end_cap_;
};

struct vector<GMSOffscreenEntityView *, std::__1::allocator<GMSOffscreenEntityView *>> {
    id *__begin_;
    id *__end_;
    struct __compressed_pair<GMSOffscreenEntityView *__strong *, std::__1::allocator<GMSOffscreenEntityView *>> {
        id *__first_;
    } __end_cap_;
};

struct vector<GMSx_gmm_photo::platform_ios::ServicesConfig::TileTemplate, std::__1::allocator<GMSx_gmm_photo::platform_ios::ServicesConfig::TileTemplate>> {
    struct TileTemplate *__begin_;
    struct TileTemplate *__end_;
    struct __compressed_pair<GMSx_gmm_photo::platform_ios::ServicesConfig::TileTemplate *, std::__1::allocator<GMSx_gmm_photo::platform_ios::ServicesConfig::TileTemplate>> {
        struct TileTemplate *__first_;
    } __end_cap_;
};

struct vector<double, std::__1::allocator<double>> {
    double *__begin_;
    double *__end_;
    struct __compressed_pair<double *, std::__1::allocator<double>> {
        double *__first_;
    } __end_cap_;
};

struct vector<float, std::__1::allocator<float>> {
    float *__begin_;
    float *__end_;
    struct __compressed_pair<float *, std::__1::allocator<float>> {
        float *__first_;
    } __end_cap_;
};

struct vector<gameplay::Vector2, std::__1::allocator<gameplay::Vector2>> {
    struct Vector2 *_field1;
    struct Vector2 *_field2;
    struct __compressed_pair<gameplay::Vector2 *, std::__1::allocator<gameplay::Vector2>> {
        struct Vector2 *_field1;
    } _field3;
};

struct vector<gmscore::base::reffed_ptr<gmscore::renderer::BaseEntity>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::renderer::BaseEntity>>> {
    struct reffed_ptr<gmscore::renderer::BaseEntity> *_field1;
    struct reffed_ptr<gmscore::renderer::BaseEntity> *_field2;
    struct __compressed_pair<gmscore::base::reffed_ptr<gmscore::renderer::BaseEntity>*, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::renderer::BaseEntity>>> {
        struct reffed_ptr<gmscore::renderer::BaseEntity> *_field1;
    } _field3;
};

struct vector<gmscore::base::reffed_ptr<gmscore::renderer::Entity>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::renderer::Entity>>> {
    reffed_ptr_67673b8c *_field1;
    reffed_ptr_67673b8c *_field2;
    struct __compressed_pair<gmscore::base::reffed_ptr<gmscore::renderer::Entity>*, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::renderer::Entity>>> {
        reffed_ptr_67673b8c *_field1;
    } _field3;
};

struct vector<gmscore::base::reffed_ptr<gmscore::renderer::PolygonState>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::renderer::PolygonState>>> {
    struct reffed_ptr<gmscore::renderer::PolygonState> *__begin_;
    struct reffed_ptr<gmscore::renderer::PolygonState> *__end_;
    struct __compressed_pair<gmscore::base::reffed_ptr<gmscore::renderer::PolygonState>*, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::renderer::PolygonState>>> {
        struct reffed_ptr<gmscore::renderer::PolygonState> *__first_;
    } __end_cap_;
};

struct vector<gmscore::base::reffed_ptr<gmscore::renderer::SafeVBOWithAttributes<gmscore::vector::GMSLineColorAndWidthAttributes>>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::renderer::SafeVBOWithAttributes<gmscore::vector::GMSLineColorAndWidthAttributes>>>>;

struct vector<gmscore::base::reffed_ptr<gmscore::renderer::SafeVBOWithAttributes<gmscore::vector::GMSLineStampAttributes>>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::renderer::SafeVBOWithAttributes<gmscore::vector::GMSLineStampAttributes>>>>;

struct vector<gmscore::base::reffed_ptr<gmscore::renderer::SafeVBOWithAttributes<gmscore::vector::GMSLineStippleAttributes>>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::renderer::SafeVBOWithAttributes<gmscore::vector::GMSLineStippleAttributes>>>>;

struct vector<gmscore::base::reffed_ptr<gmscore::vector::GLFeatureGroup>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::GLFeatureGroup>>> {
    struct reffed_ptr<gmscore::vector::GLFeatureGroup> *__begin_;
    struct reffed_ptr<gmscore::vector::GLFeatureGroup> *__end_;
    struct __compressed_pair<gmscore::base::reffed_ptr<gmscore::vector::GLFeatureGroup>*, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::GLFeatureGroup>>> {
        struct reffed_ptr<gmscore::vector::GLFeatureGroup> *__first_;
    } __end_cap_;
};

struct vector<gmscore::base::reffed_ptr<gmscore::vector::GLLabel>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::GLLabel>>> {
    reffed_ptr_3c29ede8 *_field1;
    reffed_ptr_3c29ede8 *_field2;
    struct __compressed_pair<gmscore::base::reffed_ptr<gmscore::vector::GLLabel>*, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::GLLabel>>> {
        reffed_ptr_3c29ede8 *_field1;
    } _field3;
};

struct vector<gmscore::base::reffed_ptr<gmscore::vector::GLLabelGroupElement>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::GLLabelGroupElement>>>;

struct vector<gmscore::base::reffed_ptr<gmscore::vector::GLLineGroup>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::GLLineGroup>>> {
    struct reffed_ptr<gmscore::vector::GLLineGroup> *__begin_;
    struct reffed_ptr<gmscore::vector::GLLineGroup> *__end_;
    struct __compressed_pair<gmscore::base::reffed_ptr<gmscore::vector::GLLineGroup>*, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::GLLineGroup>>> {
        struct reffed_ptr<gmscore::vector::GLLineGroup> *__first_;
    } __end_cap_;
};

struct vector<gmscore::base::reffed_ptr<gmscore::vector::GMSGeneratedTextureAtlas>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::GMSGeneratedTextureAtlas>>> {
    reffed_ptr_eca42765 *_field1;
    reffed_ptr_eca42765 *_field2;
    struct __compressed_pair<gmscore::base::reffed_ptr<gmscore::vector::GMSGeneratedTextureAtlas>*, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::GMSGeneratedTextureAtlas>>> {
        reffed_ptr_eca42765 *_field1;
    } _field3;
};

struct vector<gmscore::base::reffed_ptr<gmscore::vector::LabelSource>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::LabelSource>>> {
    reffed_ptr_799bd618 *_field1;
    reffed_ptr_799bd618 *_field2;
    struct __compressed_pair<gmscore::base::reffed_ptr<gmscore::vector::LabelSource>*, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::LabelSource>>> {
        reffed_ptr_799bd618 *_field1;
    } _field3;
};

struct vector<gmscore::base::reffed_ptr<gmscore::vector::LabelableFeature>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::LabelableFeature>>> {
    reffed_ptr_a24f2af8 *__begin_;
    reffed_ptr_a24f2af8 *__end_;
    struct __compressed_pair<gmscore::base::reffed_ptr<gmscore::vector::LabelableFeature>*, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::LabelableFeature>>> {
        reffed_ptr_a24f2af8 *__first_;
    } __end_cap_;
};

struct vector<gmscore::base::reffed_ptr<gmscore::vector::MutableState>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::MutableState>>> {
    reffed_ptr_57016b98 *_field1;
    reffed_ptr_57016b98 *_field2;
    struct __compressed_pair<gmscore::base::reffed_ptr<gmscore::vector::MutableState>*, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::MutableState>>> {
        reffed_ptr_57016b98 *_field1;
    } _field3;
};

struct vector<gmscore::math::Vector2f, std::__1::allocator<gmscore::math::Vector2f>> {
    struct Vector2f *__begin_;
    struct Vector2f *__end_;
    struct __compressed_pair<gmscore::math::Vector2f *, std::__1::allocator<gmscore::math::Vector2f>> {
        struct Vector2f *__first_;
    } __end_cap_;
};

struct vector<gmscore::model::AbsolutePosition, std::__1::allocator<gmscore::model::AbsolutePosition>> {
    struct AbsolutePosition *__begin_;
    struct AbsolutePosition *__end_;
    struct __compressed_pair<gmscore::model::AbsolutePosition *, std::__1::allocator<gmscore::model::AbsolutePosition>> {
        struct AbsolutePosition *__first_;
    } __end_cap_;
};

struct vector<gmscore::model::Alignment, std::__1::allocator<gmscore::model::Alignment>> {
    struct Alignment *__begin_;
    struct Alignment *__end_;
    struct __compressed_pair<gmscore::model::Alignment *, std::__1::allocator<gmscore::model::Alignment>> {
        struct Alignment *__first_;
    } __end_cap_;
};

struct vector<gmscore::model::IndoorID, std::__1::allocator<gmscore::model::IndoorID>> {
    struct IndoorID *__begin_;
    struct IndoorID *__end_;
    struct __compressed_pair<gmscore::model::IndoorID *, std::__1::allocator<gmscore::model::IndoorID>> {
        struct IndoorID *__first_;
    } __end_cap_;
};

struct vector<gmscore::model::LabelElement, std::__1::allocator<gmscore::model::LabelElement>> {
    struct LabelElement *__begin_;
    struct LabelElement *__end_;
    struct __compressed_pair<gmscore::model::LabelElement *, std::__1::allocator<gmscore::model::LabelElement>> {
        struct LabelElement *__first_;
    } __end_cap_;
};

struct vector<gmscore::model::LabelGroup, std::__1::allocator<gmscore::model::LabelGroup>> {
    struct LabelGroup *__begin_;
    struct LabelGroup *__end_;
    struct __compressed_pair<gmscore::model::LabelGroup *, std::__1::allocator<gmscore::model::LabelGroup>> {
        struct LabelGroup *__first_;
    } __end_cap_;
};

struct vector<gmscore::model::Point2D, std::__1::allocator<gmscore::model::Point2D>> {
    struct Point2D *__begin_;
    struct Point2D *__end_;
    struct __compressed_pair<gmscore::model::Point2D *, std::__1::allocator<gmscore::model::Point2D>> {
        struct Point2D *__first_;
    } __end_cap_;
};

struct vector<gmscore::model::Point3D, std::__1::allocator<gmscore::model::Point3D>> {
    struct Point3D *__begin_;
    struct Point3D *__end_;
    struct __compressed_pair<gmscore::model::Point3D *, std::__1::allocator<gmscore::model::Point3D>> {
        struct Point3D *__first_;
    } __end_cap_;
};

struct vector<gmscore::model::Rectangle2D, std::__1::allocator<gmscore::model::Rectangle2D>> {
    struct Rectangle2D *__begin_;
    struct Rectangle2D *__end_;
    struct __compressed_pair<gmscore::model::Rectangle2D *, std::__1::allocator<gmscore::model::Rectangle2D>> {
        struct Rectangle2D *__first_;
    } __end_cap_;
};

struct vector<gmscore::model::Stroke, std::__1::allocator<gmscore::model::Stroke>> {
    struct Stroke *__begin_;
    struct Stroke *__end_;
    struct __compressed_pair<gmscore::model::Stroke *, std::__1::allocator<gmscore::model::Stroke>> {
        struct Stroke *__first_;
    } __end_cap_;
};

struct vector<gmscore::model::Triangle2D, std::__1::allocator<gmscore::model::Triangle2D>> {
    struct Triangle2D *__begin_;
    struct Triangle2D *__end_;
    struct __compressed_pair<gmscore::model::Triangle2D *, std::__1::allocator<gmscore::model::Triangle2D>> {
        struct Triangle2D *__first_;
    } __end_cap_;
};

struct vector<gmscore::model::TriangleList2D, std::__1::allocator<gmscore::model::TriangleList2D>> {
    struct TriangleList2D *__begin_;
    struct TriangleList2D *__end_;
    struct __compressed_pair<gmscore::model::TriangleList2D *, std::__1::allocator<gmscore::model::TriangleList2D>> {
        struct TriangleList2D *__first_;
    } __end_cap_;
};

struct vector<gmscore::model::stripified_mesh::NormalVector, std::__1::allocator<gmscore::model::stripified_mesh::NormalVector>> {
    struct NormalVector *__begin_;
    struct NormalVector *__end_;
    struct __compressed_pair<gmscore::model::stripified_mesh::NormalVector *, std::__1::allocator<gmscore::model::stripified_mesh::NormalVector>> {
        struct NormalVector *__first_;
    } __end_cap_;
};

struct vector<gmscore::renderer::EntityRenderer::PendingOp, std::__1::allocator<gmscore::renderer::EntityRenderer::PendingOp>> {
    struct PendingOp *_field1;
    struct PendingOp *_field2;
    struct __compressed_pair<gmscore::renderer::EntityRenderer::PendingOp *, std::__1::allocator<gmscore::renderer::EntityRenderer::PendingOp>> {
        struct PendingOp *_field1;
    } _field3;
};

struct vector<gmscore::renderer::RenderBin *, std::__1::allocator<gmscore::renderer::RenderBin *>> {
    struct RenderBin **_field1;
    struct RenderBin **_field2;
    struct __compressed_pair<gmscore::renderer::RenderBin **, std::__1::allocator<gmscore::renderer::RenderBin *>> {
        struct RenderBin **_field1;
    } _field3;
};

struct vector<gmscore::vector::ColorSpan, std::__1::allocator<gmscore::vector::ColorSpan>> {
    struct ColorSpan *__begin_;
    struct ColorSpan *__end_;
    struct __compressed_pair<gmscore::vector::ColorSpan *, std::__1::allocator<gmscore::vector::ColorSpan>> {
        struct ColorSpan *__first_;
    } __end_cap_;
};

struct vector<gmscore::vector::ColoredPoint, std::__1::allocator<gmscore::vector::ColoredPoint>> {
    struct ColoredPoint *__begin_;
    struct ColoredPoint *__end_;
    struct __compressed_pair<gmscore::vector::ColoredPoint *, std::__1::allocator<gmscore::vector::ColoredPoint>> {
        struct ColoredPoint *__first_;
    } __end_cap_;
};

struct vector<gmscore::vector::GLStrokeLayer::LineAttributeInfo, std::__1::allocator<gmscore::vector::GLStrokeLayer::LineAttributeInfo>> {
    struct LineAttributeInfo *_field1;
    struct LineAttributeInfo *_field2;
    struct __compressed_pair<gmscore::vector::GLStrokeLayer::LineAttributeInfo *, std::__1::allocator<gmscore::vector::GLStrokeLayer::LineAttributeInfo>> {
        struct LineAttributeInfo *_field1;
    } _field3;
};

struct vector<gmscore::vector::MutableStateTracker *, std::__1::allocator<gmscore::vector::MutableStateTracker *>> {
    struct MutableStateTracker **__begin_;
    struct MutableStateTracker **__end_;
    struct __compressed_pair<gmscore::vector::MutableStateTracker **, std::__1::allocator<gmscore::vector::MutableStateTracker *>> {
        struct MutableStateTracker **__first_;
    } __end_cap_;
};

struct vector<int, std::__1::allocator<int>> {
    int *__begin_;
    int *__end_;
    struct __compressed_pair<int *, std::__1::allocator<int>> {
        int *__first_;
    } __end_cap_;
};

struct vector<kuru::KaleTextLayer, std::__1::allocator<kuru::KaleTextLayer>> {
    struct KaleTextLayer *_field1;
    struct KaleTextLayer *_field2;
    struct __compressed_pair<kuru::KaleTextLayer *, std::__1::allocator<kuru::KaleTextLayer>> {
        struct KaleTextLayer *_field1;
    } _field3;
};

struct vector<kuru::KaleTextRenderItem, std::__1::allocator<kuru::KaleTextRenderItem>> {
    struct KaleTextRenderItem *_field1;
    struct KaleTextRenderItem *_field2;
    struct __compressed_pair<kuru::KaleTextRenderItem *, std::__1::allocator<kuru::KaleTextRenderItem>> {
        struct KaleTextRenderItem *_field1;
    } _field3;
};

struct vector<kuru::KuruGestureRecognizer::Template, std::__1::allocator<kuru::KuruGestureRecognizer::Template>> {
    struct Template *_field1;
    struct Template *_field2;
    struct __compressed_pair<kuru::KuruGestureRecognizer::Template *, std::__1::allocator<kuru::KuruGestureRecognizer::Template>> {
        struct Template *_field1;
    } _field3;
};

struct vector<long long, std::__1::allocator<long long>> {
    long long *__begin_;
    long long *__end_;
    struct __compressed_pair<long long *, std::__1::allocator<long long>> {
        long long *__first_;
    } __end_cap_;
};

struct vector<short, std::__1::allocator<short>> {
    short *__begin_;
    short *__end_;
    struct __compressed_pair<short *, std::__1::allocator<short>> {
        short *__first_;
    } __end_cap_;
};

struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> {
    basic_string_a490aa4c *_field1;
    basic_string_a490aa4c *_field2;
    struct __compressed_pair<std::__1::basic_string<char>*, std::__1::allocator<std::__1::basic_string<char>>> {
        basic_string_a490aa4c *_field1;
    } _field3;
};

struct vector<std::__1::vector<gmscore::base::reffed_ptr<gmscore::renderer::SafeVBOWithAttributes<gmscore::vector::GMSLineColorAndWidthAttributes>>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::renderer::SafeVBOWithAttributes<gmscore::vector::GMSLineColorAndWidthAttributes>>>>, std::__1::allocator<std::__1::vector<gmscore::base::reffed_ptr<gmscore::renderer::SafeVBOWithAttributes<gmscore::vector::GMSLineColorAndWidthAttributes>>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::renderer::SafeVBOWithAttributes<gmscore::vector::GMSLineColorAndWidthAttributes>>>>>> {
    struct vector<gmscore::base::reffed_ptr<gmscore::renderer::SafeVBOWithAttributes<gmscore::vector::GMSLineColorAndWidthAttributes>>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::renderer::SafeVBOWithAttributes<gmscore::vector::GMSLineColorAndWidthAttributes>>>> *_field1;
    struct vector<gmscore::base::reffed_ptr<gmscore::renderer::SafeVBOWithAttributes<gmscore::vector::GMSLineColorAndWidthAttributes>>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::renderer::SafeVBOWithAttributes<gmscore::vector::GMSLineColorAndWidthAttributes>>>> *_field2;
    struct __compressed_pair<std::__1::vector<gmscore::base::reffed_ptr<gmscore::renderer::SafeVBOWithAttributes<gmscore::vector::GMSLineColorAndWidthAttributes>>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::renderer::SafeVBOWithAttributes<gmscore::vector::GMSLineColorAndWidthAttributes>>>>*, std::__1::allocator<std::__1::vector<gmscore::base::reffed_ptr<gmscore::renderer::SafeVBOWithAttributes<gmscore::vector::GMSLineColorAndWidthAttributes>>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::renderer::SafeVBOWithAttributes<gmscore::vector::GMSLineColorAndWidthAttributes>>>>>> {
        struct vector<gmscore::base::reffed_ptr<gmscore::renderer::SafeVBOWithAttributes<gmscore::vector::GMSLineColorAndWidthAttributes>>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::renderer::SafeVBOWithAttributes<gmscore::vector::GMSLineColorAndWidthAttributes>>>> *_field1;
    } _field3;
};

struct vector<std::__1::vector<gmscore::base::reffed_ptr<gmscore::renderer::SafeVBOWithAttributes<gmscore::vector::GMSLineStampAttributes>>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::renderer::SafeVBOWithAttributes<gmscore::vector::GMSLineStampAttributes>>>>, std::__1::allocator<std::__1::vector<gmscore::base::reffed_ptr<gmscore::renderer::SafeVBOWithAttributes<gmscore::vector::GMSLineStampAttributes>>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::renderer::SafeVBOWithAttributes<gmscore::vector::GMSLineStampAttributes>>>>>> {
    struct vector<gmscore::base::reffed_ptr<gmscore::renderer::SafeVBOWithAttributes<gmscore::vector::GMSLineStampAttributes>>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::renderer::SafeVBOWithAttributes<gmscore::vector::GMSLineStampAttributes>>>> *_field1;
    struct vector<gmscore::base::reffed_ptr<gmscore::renderer::SafeVBOWithAttributes<gmscore::vector::GMSLineStampAttributes>>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::renderer::SafeVBOWithAttributes<gmscore::vector::GMSLineStampAttributes>>>> *_field2;
    struct __compressed_pair<std::__1::vector<gmscore::base::reffed_ptr<gmscore::renderer::SafeVBOWithAttributes<gmscore::vector::GMSLineStampAttributes>>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::renderer::SafeVBOWithAttributes<gmscore::vector::GMSLineStampAttributes>>>>*, std::__1::allocator<std::__1::vector<gmscore::base::reffed_ptr<gmscore::renderer::SafeVBOWithAttributes<gmscore::vector::GMSLineStampAttributes>>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::renderer::SafeVBOWithAttributes<gmscore::vector::GMSLineStampAttributes>>>>>> {
        struct vector<gmscore::base::reffed_ptr<gmscore::renderer::SafeVBOWithAttributes<gmscore::vector::GMSLineStampAttributes>>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::renderer::SafeVBOWithAttributes<gmscore::vector::GMSLineStampAttributes>>>> *_field1;
    } _field3;
};

struct vector<std::__1::vector<gmscore::base::reffed_ptr<gmscore::renderer::SafeVBOWithAttributes<gmscore::vector::GMSLineStippleAttributes>>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::renderer::SafeVBOWithAttributes<gmscore::vector::GMSLineStippleAttributes>>>>, std::__1::allocator<std::__1::vector<gmscore::base::reffed_ptr<gmscore::renderer::SafeVBOWithAttributes<gmscore::vector::GMSLineStippleAttributes>>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::renderer::SafeVBOWithAttributes<gmscore::vector::GMSLineStippleAttributes>>>>>> {
    struct vector<gmscore::base::reffed_ptr<gmscore::renderer::SafeVBOWithAttributes<gmscore::vector::GMSLineStippleAttributes>>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::renderer::SafeVBOWithAttributes<gmscore::vector::GMSLineStippleAttributes>>>> *_field1;
    struct vector<gmscore::base::reffed_ptr<gmscore::renderer::SafeVBOWithAttributes<gmscore::vector::GMSLineStippleAttributes>>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::renderer::SafeVBOWithAttributes<gmscore::vector::GMSLineStippleAttributes>>>> *_field2;
    struct __compressed_pair<std::__1::vector<gmscore::base::reffed_ptr<gmscore::renderer::SafeVBOWithAttributes<gmscore::vector::GMSLineStippleAttributes>>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::renderer::SafeVBOWithAttributes<gmscore::vector::GMSLineStippleAttributes>>>>*, std::__1::allocator<std::__1::vector<gmscore::base::reffed_ptr<gmscore::renderer::SafeVBOWithAttributes<gmscore::vector::GMSLineStippleAttributes>>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::renderer::SafeVBOWithAttributes<gmscore::vector::GMSLineStippleAttributes>>>>>> {
        struct vector<gmscore::base::reffed_ptr<gmscore::renderer::SafeVBOWithAttributes<gmscore::vector::GMSLineStippleAttributes>>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::renderer::SafeVBOWithAttributes<gmscore::vector::GMSLineStippleAttributes>>>> *_field1;
    } _field3;
};

struct vector<std::__1::vector<gmscore::base::reffed_ptr<gmscore::vector::GLLabelGroupElement>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::GLLabelGroupElement>>>, std::__1::allocator<std::__1::vector<gmscore::base::reffed_ptr<gmscore::vector::GLLabelGroupElement>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::GLLabelGroupElement>>>>> {
    struct vector<gmscore::base::reffed_ptr<gmscore::vector::GLLabelGroupElement>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::GLLabelGroupElement>>> *_field1;
    struct vector<gmscore::base::reffed_ptr<gmscore::vector::GLLabelGroupElement>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::GLLabelGroupElement>>> *_field2;
    struct __compressed_pair<std::__1::vector<gmscore::base::reffed_ptr<gmscore::vector::GLLabelGroupElement>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::GLLabelGroupElement>>>*, std::__1::allocator<std::__1::vector<gmscore::base::reffed_ptr<gmscore::vector::GLLabelGroupElement>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::GLLabelGroupElement>>>>> {
        struct vector<gmscore::base::reffed_ptr<gmscore::vector::GLLabelGroupElement>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::GLLabelGroupElement>>> *_field1;
    } _field3;
};

struct vector<std::__1::vector<gmscore::base::reffed_ptr<gmscore::vector::LabelableFeature>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::LabelableFeature>>>, std::__1::allocator<std::__1::vector<gmscore::base::reffed_ptr<gmscore::vector::LabelableFeature>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::LabelableFeature>>>>> {
    vector_a9c0dc88 *__begin_;
    vector_a9c0dc88 *__end_;
    struct __compressed_pair<std::__1::vector<gmscore::base::reffed_ptr<gmscore::vector::LabelableFeature>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::LabelableFeature>>>*, std::__1::allocator<std::__1::vector<gmscore::base::reffed_ptr<gmscore::vector::LabelableFeature>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::LabelableFeature>>>>> {
        vector_a9c0dc88 *__first_;
    } __end_cap_;
};

struct vector<std::__1::vector<gmscore::model::Point2D, std::__1::allocator<gmscore::model::Point2D>>, std::__1::allocator<std::__1::vector<gmscore::model::Point2D, std::__1::allocator<gmscore::model::Point2D>>>> {
    vector_aa37bc82 *_field1;
    vector_aa37bc82 *_field2;
    struct __compressed_pair<std::__1::vector<gmscore::model::Point2D, std::__1::allocator<gmscore::model::Point2D>>*, std::__1::allocator<std::__1::vector<gmscore::model::Point2D, std::__1::allocator<gmscore::model::Point2D>>>> {
        vector_aa37bc82 *_field1;
    } _field3;
};

struct vector<unsigned char, std::__1::allocator<unsigned char>> {
    char *_field1;
    char *_field2;
    struct __compressed_pair<unsigned char *, std::__1::allocator<unsigned char>> {
        char *_field1;
    } _field3;
};

struct vector<unsigned int, std::__1::allocator<unsigned int>> {
    unsigned int *__begin_;
    unsigned int *__end_;
    struct __compressed_pair<unsigned int *, std::__1::allocator<unsigned int>> {
        unsigned int *__first_;
    } __end_cap_;
};

struct vector<unsigned long, std::__1::allocator<unsigned long>> {
    unsigned long long *__begin_;
    unsigned long long *__end_;
    struct __compressed_pair<unsigned long *, std::__1::allocator<unsigned long>> {
        unsigned long long *__first_;
    } __end_cap_;
};

struct vector<unsigned short, std::__1::allocator<unsigned short>> {
    unsigned short *__begin_;
    unsigned short *__end_;
    struct __compressed_pair<unsigned short *, std::__1::allocator<unsigned short>> {
        unsigned short *__first_;
    } __end_cap_;
};

struct vector<yuki::KaleStickerModel::Item, std::__1::allocator<yuki::KaleStickerModel::Item>> {
    struct Item *_field1;
    struct Item *_field2;
    struct __compressed_pair<yuki::KaleStickerModel::Item *, std::__1::allocator<yuki::KaleStickerModel::Item>> {
        struct Item *_field1;
    } _field3;
};

struct vector<yuki::KaleStickerModel::SoundItem, std::__1::allocator<yuki::KaleStickerModel::SoundItem>> {
    struct SoundItem *_field1;
    struct SoundItem *_field2;
    struct __compressed_pair<yuki::KaleStickerModel::SoundItem *, std::__1::allocator<yuki::KaleStickerModel::SoundItem>> {
        struct SoundItem *_field1;
    } _field3;
};

struct weak_ptr<yuki::Effector> {
    struct Effector *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct weak_ptr<yuki::FilterListManager> {
    struct FilterListManager *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct z_stream_s {
    char *_field1;
    unsigned int _field2;
    unsigned long long _field3;
    char *_field4;
    unsigned int _field5;
    unsigned long long _field6;
    char *_field7;
    struct internal_state *_field8;
    CDUnknownFunctionPointerType _field9;
    CDUnknownFunctionPointerType _field10;
    void *_field11;
    int _field12;
    unsigned long long _field13;
    unsigned long long _field14;
};

#pragma mark Typedef'd Structures

typedef struct {
    id _field1;
    unsigned short _field2;
} CDStruct_6a59ab51;

typedef struct {
    _Bool _field1;
    long long _field2;
} CDStruct_8f3a66c8;

typedef struct {
    unsigned int x;
    unsigned int y;
    unsigned int width;
    unsigned int height;
} CDStruct_0a4f9365;

typedef struct {
    unsigned int _field1;
    unsigned short _field2;
    unsigned int _field3;
} CDStruct_91b80c38;

typedef struct {
    unsigned long long _field1;
    id *_field2;
    unsigned long long *_field3;
    unsigned long long _field4[5];
} CDStruct_70511ce9;

typedef struct {
    float m[16];
} CDStruct_25e28ff4;

typedef struct {
    void **_field1;
    unsigned long long _field2;
    unsigned long long _field3;
    CDUnknownFunctionPointerType _field4;
} CDStruct_63aedad7;

typedef struct {
    void *_field1;
    unsigned long long _field2;
} CDStruct_6c7289c3;

typedef struct {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
} CDStruct_d2b197d1;

typedef struct {
    double _field1;
    double _field2;
} CDStruct_c3b9c2ee;

typedef struct {
    float _field1;
    float _field2;
    float _field3;
    float _field4;
} CDStruct_818bb265;

typedef struct {
    float x;
    float y;
    float z;
} CDStruct_03942939;

typedef struct {
    int projectionLoc;
    int positionLoc;
    int texCoordLoc;
    int colorLoc;
} CDStruct_220dd382;

typedef struct {
    int _field1;
    int _field2;
} CDStruct_1ef3fb1f;

typedef struct {
    long long _field1;
    CDUnknownFunctionPointerType _field2;
    CDUnknownFunctionPointerType _field3;
    CDUnknownFunctionPointerType _field4;
    CDUnknownFunctionPointerType _field5;
} CDStruct_70d275a4;

typedef struct {
    long long value;
    int timescale;
    unsigned int flags;
    long long epoch;
} CDStruct_1b6d18a9;

typedef struct {
    long long package;
    int version;
    int ID;
    int stickerOptions;
} CDStruct_49c7ca40;

typedef struct {
    long long _field1;
    int _field2;
} CDStruct_87dc826d;

typedef struct {
    long long _field1;
    long long _field2;
    long long _field3;
} CDStruct_2ec95fd7;

typedef struct {
    long long _field1;
    long long _field2;
} CDStruct_912cb5d2;

typedef struct {
    struct {
        unsigned short _field1;
        unsigned short _field2;
        unsigned char _field3;
        int _field4;
    } _field1;
    int _field2;
    int _field3;
    unsigned char _field4;
    unsigned char _field5;
    char **_field6;
} CDStruct_cc4bca6b;

typedef struct {
    CDStruct_1b6d18a9 start;
    CDStruct_1b6d18a9 duration;
} CDStruct_e83c9415;

typedef struct {
    struct CGPoint _field1;
    struct CGPoint _field2;
} CDStruct_e3b9714e;

typedef struct {
    struct CLLocationCoordinate2D _field1;
    struct CLLocationCoordinate2D _field2;
    struct CLLocationCoordinate2D _field3;
    struct CLLocationCoordinate2D _field4;
} CDStruct_165487e6;

typedef struct {
    struct z_stream_s _field1;
    unsigned short _field2;
} CDStruct_b4a17f9c;

// Ambiguous groups
typedef struct {
    unsigned int square:1;
    unsigned int squareAuthority:1;
    unsigned int squareStatus:1;
    unsigned int squareMember:1;
    unsigned int squareFeatureSet:1;
    unsigned int noteStatus:1;
} CDStruct_ea6cc41e;

typedef struct {
    unsigned int squareChatMid:1;
    unsigned int squareMember:1;
    unsigned int botMid:1;
    unsigned int botDisplayName:1;
} CDStruct_63eeb063;

typedef struct {
    unsigned int squareMid:1;
    unsigned int targetSquareMemberMid:1;
    unsigned int updatedAttrs:1;
    unsigned int relation:1;
} CDStruct_d7b6469b;

typedef struct {
    unsigned int subscription:1;
    unsigned int events:1;
    unsigned int syncToken:1;
    unsigned int continuationToken:1;
} CDStruct_0c997899;

typedef struct {
    unsigned int code:1;
    unsigned int reason:1;
    unsigned int extra:1;
} CDStruct_e1ec870b;

typedef struct {
    unsigned int code:1;
    unsigned int reason:1;
    unsigned int parameterMap:1;
} CDStruct_bc66a103;

typedef struct {
    unsigned int productList:1;
    unsigned int continuationToken:1;
    unsigned int totalSize:1;
} CDStruct_1ca558dd;

typedef struct {
    unsigned int productList:1;
    unsigned int offset:1;
    unsigned int totalSize:1;
} CDStruct_c8eabc8e;

typedef struct {
    unsigned int results:1;
    unsigned int continuationToken:1;
    unsigned int totalSize:1;
} CDStruct_21ea7fb1;

typedef struct {
    unsigned int squareChat:1;
    unsigned int squareChatStatus:1;
    unsigned int squareChatMember:1;
} CDStruct_66474427;

typedef struct {
    unsigned int squareMid:1;
    unsigned int squareName:1;
    unsigned int profileImageObsHash:1;
} CDStruct_f7c4d20a;

typedef struct {
    unsigned int continuationToken:1;
    unsigned int limit:1;
} CDStruct_c4b6cff0;

typedef struct {
    unsigned int productType:1;
    unsigned int productIds:1;
} CDStruct_4e039fb7;

typedef struct {
    unsigned int squareChatMid:1;
    unsigned int announcementSeq:1;
} CDStruct_53771daf;

typedef struct {
    unsigned int squareChatMid:1;
    unsigned int messageId:1;
} CDStruct_adc413be;

typedef struct {
    unsigned int squareMid:1;
    unsigned int requestedMemberMids:1;
} CDStruct_7a1066e3;

typedef struct {
    unsigned int start:1;
    unsigned int size:1;
} CDStruct_93d51a37;

typedef struct {
    unsigned int updateAttributes:1;
    unsigned int squareFeatureSet:1;
} CDStruct_fb65e2d9;

typedef struct {
    unsigned int updatedAttrs:1;
    unsigned int square:1;
} CDStruct_79b3e941;

typedef struct {
    unsigned int updatedAttrs:1;
    unsigned int squareChat:1;
} CDStruct_ae788e31;

typedef struct {
    unsigned int mid:1;
} CDStruct_9ed232e7;

typedef struct {
    unsigned int showcases:1;
} CDStruct_53019ef1;

typedef struct {
    unsigned int squareChatMid:1;
} CDStruct_75db50d3;

typedef struct {
    unsigned int squareFeatureSet:1;
} CDStruct_2b6eba0b;

typedef struct {
    unsigned int squareMid:1;
} CDStruct_2daa8461;

typedef struct {
    unsigned int suggestResources:1;
} CDStruct_0942e3da;

typedef struct STLRange<const std::__1::set<gmscore::model::IndoorID, std::__1::less<gmscore::model::IndoorID>, std::__1::allocator<gmscore::model::IndoorID>>> {
    struct __tree_const_iterator<gmscore::model::IndoorID, std::__1::__tree_node<gmscore::model::IndoorID, void *>*, long> _field1;
    struct __tree_const_iterator<gmscore::model::IndoorID, std::__1::__tree_node<gmscore::model::IndoorID, void *>*, long> _field2;
} STLRange_c5e1684d;

typedef struct STLRange<const std::__1::vector<gmscore::model::AbsolutePosition, std::__1::allocator<gmscore::model::AbsolutePosition>>> {
    struct __wrap_iter<const gmscore::model::AbsolutePosition *> _field1;
    struct __wrap_iter<const gmscore::model::AbsolutePosition *> _field2;
} STLRange_5fcae3ea;

typedef struct STLRange<const std::__1::vector<gmscore::model::Alignment, std::__1::allocator<gmscore::model::Alignment>>> {
    struct __wrap_iter<const gmscore::model::Alignment *> _field1;
    struct __wrap_iter<const gmscore::model::Alignment *> _field2;
} STLRange_34380436;

typedef struct STLRange<const std::__1::vector<gmscore::model::LabelGroup, std::__1::allocator<gmscore::model::LabelGroup>>> {
    struct __wrap_iter<const gmscore::model::LabelGroup *> _field1;
    struct __wrap_iter<const gmscore::model::LabelGroup *> _field2;
} STLRange_9ddfc5e7;

typedef struct STLRange<const std::__1::vector<gmscore::model::Point3D, std::__1::allocator<gmscore::model::Point3D>>> {
    struct __wrap_iter<const gmscore::model::Point3D *> _field1;
    struct __wrap_iter<const gmscore::model::Point3D *> _field2;
} STLRange_4dbe973e;

typedef struct STLRange<const std::__1::vector<gmscore::model::Stroke, std::__1::allocator<gmscore::model::Stroke>>> {
    struct __wrap_iter<const gmscore::model::Stroke *> _field1;
    struct __wrap_iter<const gmscore::model::Stroke *> _field2;
} STLRange_53ae3e1a;

typedef struct STLRange<const std::__1::vector<gmscore::model::stripified_mesh::NormalVector, std::__1::allocator<gmscore::model::stripified_mesh::NormalVector>>> {
    struct __wrap_iter<const gmscore::model::stripified_mesh::NormalVector *> _field1;
    struct __wrap_iter<const gmscore::model::stripified_mesh::NormalVector *> _field2;
} STLRange_5078e726;

typedef struct STLRange<const std::__1::vector<gmscore::vector::ColoredPoint, std::__1::allocator<gmscore::vector::ColoredPoint>>> {
    struct __wrap_iter<const gmscore::vector::ColoredPoint *> _field1;
    struct __wrap_iter<const gmscore::vector::ColoredPoint *> _field2;
} STLRange_20c09f2e;

typedef struct STLRange<const std::__1::vector<int, std::__1::allocator<int>>> {
    struct __wrap_iter<const int *> _field1;
    struct __wrap_iter<const int *> _field2;
} STLRange_9491c893;

typedef struct STLRange<const std::__1::vector<unsigned int, std::__1::allocator<unsigned int>>> {
    struct __wrap_iter<const unsigned int *> _field1;
    struct __wrap_iter<const unsigned int *> _field2;
} STLRange_c62eef92;

typedef struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
    struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
        struct __rep {
            union {
                struct __long {
                    char *__data_;
                    unsigned long long __size_;
                    unsigned long long __cap_;
                } __l;
                struct __short {
                    char __data_[23];
                    struct {
                        unsigned char __size_;
                    } ;
                } __s;
                struct __raw {
                    unsigned long long __words[3];
                } __r;
            } ;
        } __first_;
    } __r_;
} basic_string_a490aa4c;

typedef struct map<long long, GMSMultiZoomStyle *, std::__1::less<long long>, std::__1::allocator<std::__1::pair<const long long, GMSMultiZoomStyle *>>> {
    struct __tree<std::__1::__value_type<long long, GMSMultiZoomStyle *>, std::__1::__map_value_compare<long long, std::__1::__value_type<long long, GMSMultiZoomStyle *>, std::__1::less<long long>, true>, std::__1::allocator<std::__1::__value_type<long long, GMSMultiZoomStyle *>>> {
        struct __tree_node<std::__1::__value_type<long long, GMSMultiZoomStyle *>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<long long, GMSMultiZoomStyle *>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<long long, std::__1::__value_type<long long, GMSMultiZoomStyle *>, std::__1::less<long long>, true>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
} map_7b3d8116;

typedef struct referenced_ptr<yuki::Effector> {
    CDUnknownFunctionPointerType *_vptr$referenced_ptr;
    struct weak_ptr<yuki::Effector> m_weakPtr;
    struct Effector *m_ptr;
} referenced_ptr_08d37e39;

typedef struct referenced_ptr<yuki::FilterListManager> {
    CDUnknownFunctionPointerType *_vptr$referenced_ptr;
    struct weak_ptr<yuki::FilterListManager> m_weakPtr;
    struct FilterListManager *m_ptr;
} referenced_ptr_1b1d4951;

typedef struct reffed_ptr<(anonymous namespace)::GLTileUpdaterBehavior> {
    struct GLTileUpdaterBehavior *ptr_;
} reffed_ptr_74d684ff;

typedef struct reffed_ptr<gmscore::renderer::AdjustableTextureShaderState> {
    struct AdjustableTextureShaderState *ptr_;
} reffed_ptr_737cd738;

typedef struct reffed_ptr<gmscore::renderer::Behavior> {
    struct Behavior *ptr_;
} reffed_ptr_f31d11c9;

typedef struct reffed_ptr<gmscore::renderer::BlendState> {
    struct BlendState *ptr_;
} reffed_ptr_9dddd61a;

typedef struct reffed_ptr<gmscore::renderer::ColorMaskState> {
    struct ColorMaskState *ptr_;
} reffed_ptr_5b7b7427;

typedef struct reffed_ptr<gmscore::renderer::DefaultAlphaShaderState> {
    struct DefaultAlphaShaderState *ptr_;
} reffed_ptr_23a2d03e;

typedef struct reffed_ptr<gmscore::renderer::DefaultShaderState> {
    struct DefaultShaderState *ptr_;
} reffed_ptr_36a6b36a;

typedef struct reffed_ptr<gmscore::renderer::DepthBufferState> {
    struct DepthBufferState *ptr_;
} reffed_ptr_4c2746c7;

typedef struct reffed_ptr<gmscore::renderer::Entity> {
    struct Entity *ptr_;
} reffed_ptr_67673b8c;

typedef struct reffed_ptr<gmscore::renderer::EntityState> {
    struct EntityState *ptr_;
} reffed_ptr_c8344b08;

typedef struct reffed_ptr<gmscore::renderer::ImageData> {
    struct ImageData *ptr_;
} reffed_ptr_5e8a2241;

typedef struct reffed_ptr<gmscore::renderer::LineState> {
    struct LineState *ptr_;
} reffed_ptr_08be8c30;

typedef struct reffed_ptr<gmscore::renderer::RenderTarget> {
    struct RenderTarget *ptr_;
} reffed_ptr_e23c8d60;

typedef struct reffed_ptr<gmscore::renderer::StencilState> {
    struct StencilState *ptr_;
} reffed_ptr_b6b7b6c6;

typedef struct reffed_ptr<gmscore::renderer::TextureShaderState> {
    struct TextureShaderState *ptr_;
} reffed_ptr_54a4db53;

typedef struct reffed_ptr<gmscore::renderer::TextureState> {
    struct TextureState *ptr_;
} reffed_ptr_7371fe81;

typedef struct reffed_ptr<gmscore::renderer::VertexData> {
    struct VertexData *ptr_;
} reffed_ptr_6df9c1dc;

typedef struct reffed_ptr<gmscore::streetview::Camera> {
    struct Camera *_field1;
} reffed_ptr_a9a59d6a;

typedef struct reffed_ptr<gmscore::vector::CalloutSharedState> {
    struct CalloutSharedState *ptr_;
} reffed_ptr_63f0ddf6;

typedef struct reffed_ptr<gmscore::vector::CalloutStrategy> {
    struct CalloutStrategy *ptr_;
} reffed_ptr_33d7f2af;

typedef struct reffed_ptr<gmscore::vector::Camera> {
    struct Camera *ptr_;
} reffed_ptr_329922e5;

typedef struct reffed_ptr<gmscore::vector::GLAlphaOnlyTextureShaderState> {
    struct GLAlphaOnlyTextureShaderState *ptr_;
} reffed_ptr_331440ca;

typedef struct reffed_ptr<gmscore::vector::GLAlphaShaderState> {
    struct GLAlphaShaderState *ptr_;
} reffed_ptr_33eccd4f;

typedef struct reffed_ptr<gmscore::vector::GLAreaGroup> {
    struct GLAreaGroup *ptr_;
} reffed_ptr_3232b67b;

typedef struct reffed_ptr<gmscore::vector::GLBasicShaderState> {
    struct GLBasicShaderState *ptr_;
} reffed_ptr_e65f5ec8;

typedef struct reffed_ptr<gmscore::vector::GLBuildingFadingAlphaShaderState> {
    struct GLBuildingFadingAlphaShaderState *ptr_;
} reffed_ptr_ee68e0a3;

typedef struct reffed_ptr<gmscore::vector::GLBuildingFadingShaderState> {
    struct GLBuildingFadingShaderState *ptr_;
} reffed_ptr_4233df6d;

typedef struct reffed_ptr<gmscore::vector::GLLabel> {
    struct GLLabel *ptr_;
} reffed_ptr_3c29ede8;

typedef struct reffed_ptr<gmscore::vector::GMSGeneratedTextureAtlas> {
    struct GMSGeneratedTextureAtlas *_field1;
} reffed_ptr_eca42765;

typedef struct reffed_ptr<gmscore::vector::GMSMarkupBehavior> {
    struct GMSMarkupBehavior *ptr_;
} reffed_ptr_913e2e02;

typedef struct reffed_ptr<gmscore::vector::GMSStippleTexturePool> {
    struct GMSStippleTexturePool *ptr_;
} reffed_ptr_484c2754;

typedef struct reffed_ptr<gmscore::vector::LabelDedupingRule> {
    struct LabelDedupingRule *ptr_;
} reffed_ptr_e654501b;

typedef struct reffed_ptr<gmscore::vector::LabelProvider> {
    struct LabelProvider *_field1;
} reffed_ptr_03f800df;

typedef struct reffed_ptr<gmscore::vector::LabelSource> {
    struct LabelSource *ptr_;
} reffed_ptr_799bd618;

typedef struct reffed_ptr<gmscore::vector::LabelUpdateDelegate> {
    struct LabelUpdateDelegate *ptr_;
} reffed_ptr_64032976;

typedef struct reffed_ptr<gmscore::vector::LabelableFeature> {
    struct LabelableFeature *_field1;
} reffed_ptr_a24f2af8;

typedef struct reffed_ptr<gmscore::vector::LabelableFeatureSelector> {
    struct LabelableFeatureSelector *ptr_;
} reffed_ptr_d5e81332;

typedef struct reffed_ptr<gmscore::vector::LabelingBehavior::LabelSnapshot> {
    struct LabelSnapshot *_field1;
} reffed_ptr_fe03a69a;

typedef struct reffed_ptr<gmscore::vector::LabelingBehavior::Listener> {
    struct Listener *_field1;
} reffed_ptr_1c161f82;

typedef struct reffed_ptr<gmscore::vector::MutableState> {
    struct MutableState *ptr_;
} reffed_ptr_57016b98;

typedef struct reffed_ptr<gmscore::vector::TextureAtlasesContext> {
    struct TextureAtlasesContext *ptr_;
} reffed_ptr_933c1cb6;

typedef struct set<GMSFeatureEntityUIItem *, (anonymous namespace)::TappableItemSetOrdering, std::__1::allocator<GMSFeatureEntityUIItem *>> {
    struct __tree<GMSFeatureEntityUIItem *, (anonymous namespace)::TappableItemSetOrdering, std::__1::allocator<GMSFeatureEntityUIItem *>> {
        struct __tree_node<GMSFeatureEntityUIItem *, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<GMSFeatureEntityUIItem *, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, (anonymous namespace)::TappableItemSetOrdering> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
} set_ce9d08b8;

typedef struct set<UIView *, std::__1::less<UIView *>, std::__1::allocator<UIView *>> {
    struct __tree<UIView *, std::__1::less<UIView *>, std::__1::allocator<UIView *>> {
        struct __tree_node<UIView *, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<UIView *, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::less<UIView *>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
} set_9588e74c;

typedef struct set<gmscore::base::reffed_ptr<gmscore::vector::GLLabel>, std::__1::less<gmscore::base::reffed_ptr<gmscore::vector::GLLabel>>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::GLLabel>>> {
    struct __tree<gmscore::base::reffed_ptr<gmscore::vector::GLLabel>, std::__1::less<gmscore::base::reffed_ptr<gmscore::vector::GLLabel>>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::GLLabel>>> {
        struct __tree_node<gmscore::base::reffed_ptr<gmscore::vector::GLLabel>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<gmscore::base::reffed_ptr<gmscore::vector::GLLabel>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::less<gmscore::base::reffed_ptr<gmscore::vector::GLLabel>>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
} set_d4c3d469;

typedef struct set<gmscore::model::FeatureID, std::__1::less<gmscore::model::FeatureID>, std::__1::allocator<gmscore::model::FeatureID>> {
    struct __tree<gmscore::model::FeatureID, std::__1::less<gmscore::model::FeatureID>, std::__1::allocator<gmscore::model::FeatureID>> {
        struct __tree_node<gmscore::model::FeatureID, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<gmscore::model::FeatureID, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::less<gmscore::model::FeatureID>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
} set_cc773ffc;

typedef struct set<gmscore::model::IndoorID, std::__1::less<gmscore::model::IndoorID>, std::__1::allocator<gmscore::model::IndoorID>> {
    struct __tree<gmscore::model::IndoorID, std::__1::less<gmscore::model::IndoorID>, std::__1::allocator<gmscore::model::IndoorID>> {
        struct __tree_node<gmscore::model::IndoorID, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<gmscore::model::IndoorID, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::less<gmscore::model::IndoorID>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
} set_88de248f;

typedef struct set<int, std::__1::less<int>, std::__1::allocator<int>> {
    struct __tree<int, std::__1::less<int>, std::__1::allocator<int>> {
        struct __tree_node<int, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<int, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::less<int>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
} set_c08b4b4f;

typedef struct set<unsigned long long, std::__1::less<unsigned long long>, std::__1::allocator<unsigned long long>> {
    struct __tree<unsigned long long, std::__1::less<unsigned long long>, std::__1::allocator<unsigned long long>> {
        struct __tree_node<unsigned long long, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<unsigned long long, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::less<unsigned long long>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
} set_65ab1293;

typedef struct shared_ptr<GMSRocketIconService::Holder> {
    struct Holder *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_f23710bc;

typedef struct unique_ptr<GMSx_gmm_photo::platform_ios::IOSPlatformContext, std::__1::default_delete<GMSx_gmm_photo::platform_ios::IOSPlatformContext>> {
    struct __compressed_pair<GMSx_gmm_photo::platform_ios::IOSPlatformContext *, std::__1::default_delete<GMSx_gmm_photo::platform_ios::IOSPlatformContext>> {
        struct IOSPlatformContext *__first_;
    } __ptr_;
} unique_ptr_a2201ac9;

typedef struct unique_ptr<gmscore::renderer::ResourceFinder, std::__1::default_delete<gmscore::renderer::ResourceFinder>> {
    struct __compressed_pair<gmscore::renderer::ResourceFinder *, std::__1::default_delete<gmscore::renderer::ResourceFinder>> {
        struct ResourceFinder *_field1;
    } _field1;
} unique_ptr_c2a19896;

typedef struct vector<CLLocationCoordinate2D, std::__1::allocator<CLLocationCoordinate2D>> {
    struct CLLocationCoordinate2D *__begin_;
    struct CLLocationCoordinate2D *__end_;
    struct __compressed_pair<CLLocationCoordinate2D *, std::__1::allocator<CLLocationCoordinate2D>> {
        struct CLLocationCoordinate2D *__first_;
    } __end_cap_;
} vector_1961437c;

typedef struct vector<GMSCoordinate, std::__1::allocator<GMSCoordinate>> {
    struct GMSCoordinate *_field1;
    struct GMSCoordinate *_field2;
    struct __compressed_pair<GMSCoordinate *, std::__1::allocator<GMSCoordinate>> {
        struct GMSCoordinate *_field1;
    } _field3;
} vector_04a19197;

typedef struct vector<double, std::__1::allocator<double>> {
    double *__begin_;
    double *__end_;
    struct __compressed_pair<double *, std::__1::allocator<double>> {
        double *__first_;
    } __end_cap_;
} vector_3f7ffb82;

typedef struct vector<gmscore::base::reffed_ptr<gmscore::renderer::PolygonState>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::renderer::PolygonState>>> {
    struct reffed_ptr<gmscore::renderer::PolygonState> *__begin_;
    struct reffed_ptr<gmscore::renderer::PolygonState> *__end_;
    struct __compressed_pair<gmscore::base::reffed_ptr<gmscore::renderer::PolygonState>*, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::renderer::PolygonState>>> {
        struct reffed_ptr<gmscore::renderer::PolygonState> *__first_;
    } __end_cap_;
} vector_bbf33a47;

typedef struct vector<gmscore::base::reffed_ptr<gmscore::vector::GLLabel>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::GLLabel>>> {
    reffed_ptr_3c29ede8 *_field1;
    reffed_ptr_3c29ede8 *_field2;
    struct __compressed_pair<gmscore::base::reffed_ptr<gmscore::vector::GLLabel>*, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::GLLabel>>> {
        reffed_ptr_3c29ede8 *_field1;
    } _field3;
} vector_fe8c6592;

typedef struct vector<gmscore::base::reffed_ptr<gmscore::vector::GLLineGroup>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::GLLineGroup>>> {
    struct reffed_ptr<gmscore::vector::GLLineGroup> *__begin_;
    struct reffed_ptr<gmscore::vector::GLLineGroup> *__end_;
    struct __compressed_pair<gmscore::base::reffed_ptr<gmscore::vector::GLLineGroup>*, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::GLLineGroup>>> {
        struct reffed_ptr<gmscore::vector::GLLineGroup> *__first_;
    } __end_cap_;
} vector_f78b1800;

typedef struct vector<gmscore::base::reffed_ptr<gmscore::vector::GMSGeneratedTextureAtlas>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::GMSGeneratedTextureAtlas>>> {
    reffed_ptr_eca42765 *_field1;
    reffed_ptr_eca42765 *_field2;
    struct __compressed_pair<gmscore::base::reffed_ptr<gmscore::vector::GMSGeneratedTextureAtlas>*, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::GMSGeneratedTextureAtlas>>> {
        reffed_ptr_eca42765 *_field1;
    } _field3;
} vector_8e13786b;

typedef struct vector<gmscore::base::reffed_ptr<gmscore::vector::LabelableFeature>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::LabelableFeature>>> {
    reffed_ptr_a24f2af8 *__begin_;
    reffed_ptr_a24f2af8 *__end_;
    struct __compressed_pair<gmscore::base::reffed_ptr<gmscore::vector::LabelableFeature>*, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::LabelableFeature>>> {
        reffed_ptr_a24f2af8 *__first_;
    } __end_cap_;
} vector_a9c0dc88;

typedef struct vector<gmscore::base::reffed_ptr<gmscore::vector::MutableState>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::MutableState>>> {
    reffed_ptr_57016b98 *_field1;
    reffed_ptr_57016b98 *_field2;
    struct __compressed_pair<gmscore::base::reffed_ptr<gmscore::vector::MutableState>*, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::MutableState>>> {
        reffed_ptr_57016b98 *_field1;
    } _field3;
} vector_4b334fea;

typedef struct vector<gmscore::math::Vector2f, std::__1::allocator<gmscore::math::Vector2f>> {
    struct Vector2f *__begin_;
    struct Vector2f *__end_;
    struct __compressed_pair<gmscore::math::Vector2f *, std::__1::allocator<gmscore::math::Vector2f>> {
        struct Vector2f *__first_;
    } __end_cap_;
} vector_ac2b163d;

typedef struct vector<gmscore::model::AbsolutePosition, std::__1::allocator<gmscore::model::AbsolutePosition>> {
    struct AbsolutePosition *__begin_;
    struct AbsolutePosition *__end_;
    struct __compressed_pair<gmscore::model::AbsolutePosition *, std::__1::allocator<gmscore::model::AbsolutePosition>> {
        struct AbsolutePosition *__first_;
    } __end_cap_;
} vector_ed1e7c9d;

typedef struct vector<gmscore::model::Alignment, std::__1::allocator<gmscore::model::Alignment>> {
    struct Alignment *__begin_;
    struct Alignment *__end_;
    struct __compressed_pair<gmscore::model::Alignment *, std::__1::allocator<gmscore::model::Alignment>> {
        struct Alignment *__first_;
    } __end_cap_;
} vector_d3954caf;

typedef struct vector<gmscore::model::IndoorID, std::__1::allocator<gmscore::model::IndoorID>> {
    struct IndoorID *__begin_;
    struct IndoorID *__end_;
    struct __compressed_pair<gmscore::model::IndoorID *, std::__1::allocator<gmscore::model::IndoorID>> {
        struct IndoorID *__first_;
    } __end_cap_;
} vector_d74feb1a;

typedef struct vector<gmscore::model::LabelGroup, std::__1::allocator<gmscore::model::LabelGroup>> {
    struct LabelGroup *__begin_;
    struct LabelGroup *__end_;
    struct __compressed_pair<gmscore::model::LabelGroup *, std::__1::allocator<gmscore::model::LabelGroup>> {
        struct LabelGroup *__first_;
    } __end_cap_;
} vector_1d953e31;

typedef struct vector<gmscore::model::Point2D, std::__1::allocator<gmscore::model::Point2D>> {
    struct Point2D *__begin_;
    struct Point2D *__end_;
    struct __compressed_pair<gmscore::model::Point2D *, std::__1::allocator<gmscore::model::Point2D>> {
        struct Point2D *__first_;
    } __end_cap_;
} vector_aa37bc82;

typedef struct vector<gmscore::model::Point3D, std::__1::allocator<gmscore::model::Point3D>> {
    struct Point3D *__begin_;
    struct Point3D *__end_;
    struct __compressed_pair<gmscore::model::Point3D *, std::__1::allocator<gmscore::model::Point3D>> {
        struct Point3D *__first_;
    } __end_cap_;
} vector_b547f507;

typedef struct vector<gmscore::model::Stroke, std::__1::allocator<gmscore::model::Stroke>> {
    struct Stroke *__begin_;
    struct Stroke *__end_;
    struct __compressed_pair<gmscore::model::Stroke *, std::__1::allocator<gmscore::model::Stroke>> {
        struct Stroke *__first_;
    } __end_cap_;
} vector_57c59ce3;

typedef struct vector<gmscore::model::TriangleList2D, std::__1::allocator<gmscore::model::TriangleList2D>> {
    struct TriangleList2D *__begin_;
    struct TriangleList2D *__end_;
    struct __compressed_pair<gmscore::model::TriangleList2D *, std::__1::allocator<gmscore::model::TriangleList2D>> {
        struct TriangleList2D *__first_;
    } __end_cap_;
} vector_7f9db2f5;

typedef struct vector<gmscore::model::stripified_mesh::NormalVector, std::__1::allocator<gmscore::model::stripified_mesh::NormalVector>> {
    struct NormalVector *__begin_;
    struct NormalVector *__end_;
    struct __compressed_pair<gmscore::model::stripified_mesh::NormalVector *, std::__1::allocator<gmscore::model::stripified_mesh::NormalVector>> {
        struct NormalVector *__first_;
    } __end_cap_;
} vector_1a85bb8f;

typedef struct vector<gmscore::renderer::RenderBin *, std::__1::allocator<gmscore::renderer::RenderBin *>> {
    struct RenderBin **_field1;
    struct RenderBin **_field2;
    struct __compressed_pair<gmscore::renderer::RenderBin **, std::__1::allocator<gmscore::renderer::RenderBin *>> {
        struct RenderBin **_field1;
    } _field3;
} vector_ef47c132;

typedef struct vector<gmscore::vector::ColorSpan, std::__1::allocator<gmscore::vector::ColorSpan>> {
    struct ColorSpan *__begin_;
    struct ColorSpan *__end_;
    struct __compressed_pair<gmscore::vector::ColorSpan *, std::__1::allocator<gmscore::vector::ColorSpan>> {
        struct ColorSpan *__first_;
    } __end_cap_;
} vector_6e37a17d;

typedef struct vector<gmscore::vector::ColoredPoint, std::__1::allocator<gmscore::vector::ColoredPoint>> {
    struct ColoredPoint *__begin_;
    struct ColoredPoint *__end_;
    struct __compressed_pair<gmscore::vector::ColoredPoint *, std::__1::allocator<gmscore::vector::ColoredPoint>> {
        struct ColoredPoint *__first_;
    } __end_cap_;
} vector_8183c344;

typedef struct vector<int, std::__1::allocator<int>> {
    int *__begin_;
    int *__end_;
    struct __compressed_pair<int *, std::__1::allocator<int>> {
        int *__first_;
    } __end_cap_;
} vector_e0f2bd7e;

typedef struct vector<long long, std::__1::allocator<long long>> {
    long long *__begin_;
    long long *__end_;
    struct __compressed_pair<long long *, std::__1::allocator<long long>> {
        long long *__first_;
    } __end_cap_;
} vector_c1c297d2;

typedef struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> {
    basic_string_a490aa4c *_field1;
    basic_string_a490aa4c *_field2;
    struct __compressed_pair<std::__1::basic_string<char>*, std::__1::allocator<std::__1::basic_string<char>>> {
        basic_string_a490aa4c *_field1;
    } _field3;
} vector_9492931a;

typedef struct vector<std::__1::vector<gmscore::model::Point2D, std::__1::allocator<gmscore::model::Point2D>>, std::__1::allocator<std::__1::vector<gmscore::model::Point2D, std::__1::allocator<gmscore::model::Point2D>>>> {
    vector_aa37bc82 *_field1;
    vector_aa37bc82 *_field2;
    struct __compressed_pair<std::__1::vector<gmscore::model::Point2D, std::__1::allocator<gmscore::model::Point2D>>*, std::__1::allocator<std::__1::vector<gmscore::model::Point2D, std::__1::allocator<gmscore::model::Point2D>>>> {
        vector_aa37bc82 *_field1;
    } _field3;
} vector_f04d5db1;

typedef struct vector<unsigned char, std::__1::allocator<unsigned char>> {
    char *_field1;
    char *_field2;
    struct __compressed_pair<unsigned char *, std::__1::allocator<unsigned char>> {
        char *_field1;
    } _field3;
} vector_5b3bfa18;

typedef struct vector<unsigned int, std::__1::allocator<unsigned int>> {
    unsigned int *__begin_;
    unsigned int *__end_;
    struct __compressed_pair<unsigned int *, std::__1::allocator<unsigned int>> {
        unsigned int *__first_;
    } __end_cap_;
} vector_a9c0768e;

typedef struct vector<unsigned short, std::__1::allocator<unsigned short>> {
    unsigned short *__begin_;
    unsigned short *__end_;
    struct __compressed_pair<unsigned short *, std::__1::allocator<unsigned short>> {
        unsigned short *__first_;
    } __end_cap_;
} vector_eef16772;

#pragma mark Named Unions

union _GLKMatrix4 {
    struct {
        float _field1;
        float _field2;
        float _field3;
        float _field4;
        float _field5;
        float _field6;
        float _field7;
        float _field8;
        float _field9;
        float _field10;
        float _field11;
        float _field12;
        float _field13;
        float _field14;
        float _field15;
        float _field16;
    } _field1;
    float _field2[16];
};

union _GLKVector2 {
    struct {
        float x;
        float y;
    } ;
    struct {
        float s;
        float t;
    } ;
    float v[2];
};

union _GLKVector4 {
    CDStruct_818bb265 _field1;
    CDStruct_818bb265 _field2;
    CDStruct_818bb265 _field3;
    float _field4[4];
};

#pragma mark Typedef'd Unions

typedef union {
    _Bool valueBool;
    int valueInt32;
    long long valueInt64;
    unsigned int valueUInt32;
    unsigned long long valueUInt64;
    float valueFloat;
    double valueDouble;
    NSData *valueData;
    NSString *valueString;
    GMSx_GPBMessage *valueMessage;
    int valueEnum;
} CDUnion_7ae79ea2;

