//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "CDAbstractDAO.h"

@interface CDGPSBindInfoDAO : CDAbstractDAO
{
}

+ (_Bool)deleteTrainingRecordWithSportID:(long long)arg1;
+ (_Bool)insertTrainingRecord:(id)arg1;
+ (id)selectTrainingRecordWithSportID:(long long)arg1;
+ (_Bool)deleteTrackRecordWithSportID:(long long)arg1;
+ (_Bool)insertTrackRecord:(id)arg1;
+ (_Bool)updateSportTrackRecord:(id)arg1;
+ (id)selectTrackRecordWithSportID:(long long)arg1;
+ (_Bool)deleteEarphoneRecordWithSportID:(long long)arg1;
+ (_Bool)insertEarphoneRecord:(id)arg1;
+ (_Bool)updateEarphoneRecord:(id)arg1;
+ (id)selectEarphoneRecordWithSportID:(long long)arg1;
+ (_Bool)deleteBraRecordWithSportID:(long long)arg1;
+ (_Bool)updateBraRecord:(id)arg1;
+ (_Bool)insertBraRecord:(id)arg1;
+ (id)selectBraRecordWithSportID:(long long)arg1;
+ (_Bool)deleteBikeRecordWithSportID:(long long)arg1;
+ (_Bool)insertBikeRecord:(id)arg1;
+ (id)selectBikeRecordWithSportID:(long long)arg1;
+ (id)selectShoeRecordWithSportID:(long long)arg1;
+ (_Bool)deleteShoeRecordWithSportID:(long long)arg1;
+ (_Bool)insertShoeRecord:(id)arg1;
+ (id)strideFrequencyRecordWithFMResultSet:(id)arg1;
+ (id)heartRateRecordWithFMResultSet:(id)arg1;
+ (id)perKmRecordWithFMResultSet:(id)arg1;
+ (id)pointRecordWithFMResultSet:(id)arg1;
+ (id)sportRecordWithFMResultSet:(id)arg1 db:(id)arg2;
+ (_Bool)updateSportRecordWithSport:(id)arg1;
+ (_Bool)deleteStrideFrequencyRecordWithSportID:(long long)arg1;
+ (_Bool)deleteHeartRateRecordWithSportID:(long long)arg1;
+ (_Bool)deleteperKMRecordWithSportID:(long long)arg1;
+ (_Bool)deleteLastPointOfSportID:(long long)arg1;
+ (_Bool)deleteAllSensorPointsWithSportID:(long long)arg1;
+ (_Bool)deletePointRecords:(id)arg1;
+ (_Bool)deletePointRecordWithSportID:(long long)arg1;
+ (_Bool)deleteSportRecordWithSportID:(long long)arg1;
+ (_Bool)deleteSportRecordAndOtherRelevantInformationWithSportID:(long long)arg1 routeID:(id)arg2;
+ (id)selectSkiSegmentRecordWithSportID:(long long)arg1;
+ (id)selectStrideFrequencyRecordWithSportID:(long long)arg1;
+ (id)selectHeartRateRecordWithSportID:(long long)arg1;
+ (id)selectPerKmRecordWithSportID:(long long)arg1;
+ (long long)selectPointRecordCountWithSportID:(long long)arg1;
+ (id)selectPointRecordWithSportID:(long long)arg1;
+ (id)selectLastAutoSaveSportRecordWithUserID:(id)arg1;
+ (id)selectSportRecordWithServerID:(id)arg1;
+ (id)selectSportRecordWithSportID:(long long)arg1;
+ (id)selectSportRecordWithUser:(id)arg1;
+ (id)selectSportRecordWithUser:(id)arg1 fromDate:(id)arg2 toDate:(id)arg3;
+ (id)selectSportRecordWithUser:(id)arg1 fromDate:(id)arg2 toDate:(id)arg3 sportType:(long long)arg4;
+ (id)selectSportRecordWithUser:(id)arg1 fromDate:(id)arg2 toDate:(id)arg3 sportType:(long long)arg4 isUpload:(_Bool)arg5;
+ (id)selectSportRecords;
+ (id)selectAllServerIDLenghtZeroSportRecordWithUser:(id)arg1;
+ (long long)insertRecordWithTableName:(id)arg1 recordArray:(id)arg2;
+ (_Bool)createGPSTable;

@end

