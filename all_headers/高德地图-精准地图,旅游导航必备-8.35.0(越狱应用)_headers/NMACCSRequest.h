//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSOperation.h>

#import "NMHTTPRequest-Protocol.h"
#import "NWURLConnectionDelegate-Protocol.h"

@class NSArray, NSData, NSDictionary, NSError, NSMutableArray, NSMutableData, NSMutableDictionary, NSMutableURLRequest, NSRecursiveLock, NSString, NSThread, NSTimer, NSURL, NWURLConnection;
@protocol NMHTTPRequestDelegate;

@interface NMACCSRequest : NSOperation <NWURLConnectionDelegate, NMHTTPRequest>
{
    id <NMHTTPRequestDelegate> _delegate;
    NSThread *_runThread;
    NSMutableData *_reqeuestData;
    NSURL *_url;
    NSMutableURLRequest *_request;
    NWURLConnection *_connection;
    NSDictionary *_userInfoForTracer;
    NSTimer *_debugTimer;
    _Bool finished;
    _Bool shouldContinueWhenAppEntersBackground;
    _Bool useCookiePersistence;
    _Bool useAllCookiesPersistence;
    _Bool bNeedRunInMain;
    _Bool cancelled;
    _Bool haveBuiltRequestHeaders;
    _Bool allowCompressedResponse;
    _Bool shouldCompressRequestBody;
    _Bool shouldWaitToInflateCompressedResponses;
    _Bool shouldAttemptPersistentConnection;
    _Bool validatesSecureCertificate;
    _Bool useSessionPersistence;
    _Bool allowResumeForFileDownloads;
    _Bool shouldStreamPostDataFromDisk;
    _Bool _complete;
    _Bool _haveBuiltPostBody;
    int responseStatusCode;
    int numberOfTimesToRetryOnTimeout;
    id uploadProgressDelegate;
    id downloadProgressDelegate;
    SEL didStartSelector;
    SEL didReceiveResponseHeadersSelector;
    SEL didFinishSelector;
    SEL didFailSelector;
    SEL didReceiveDataSelector;
    NSURL *originalURL;
    NSMutableArray *requestCookies;
    double timeOutSeconds;
    NSMutableData *postBody;
    NSData *compressedPostBody;
    unsigned long long postLength;
    NSMutableDictionary *requestHeaders;
    NSDictionary *responseHeaders;
    unsigned long long responseEncoding;
    NSDictionary *userInfo;
    long long tag;
    NSError *error;
    NSArray *responseCookies;
    long long queuePriority;
    NSString *downloadDestinationPath;
    NSString *temporaryFileDownloadPath;
    NSString *postBodyFilePath;
    CDUnknownBlockType bytesSentBlock;
    NSMutableArray *_postData;
    NSRecursiveLock *_recursiveLock;
}

+ (id)networkRequestThread;
+ (void)networkRequestThreadEntryPoint:(id)arg1;
+ (void)willEnterForceground;
+ (void)load;
@property(retain) NSRecursiveLock *recursiveLock; // @synthesize recursiveLock=_recursiveLock;
@property(retain) NSMutableArray *postData; // @synthesize postData=_postData;
@property _Bool haveBuiltPostBody; // @synthesize haveBuiltPostBody=_haveBuiltPostBody;
@property _Bool complete; // @synthesize complete=_complete;
@property _Bool allowResumeForFileDownloads; // @synthesize allowResumeForFileDownloads;
@property(retain) NSString *temporaryFileDownloadPath; // @synthesize temporaryFileDownloadPath;
@property(retain) NSString *downloadDestinationPath; // @synthesize downloadDestinationPath;
@property _Bool useSessionPersistence; // @synthesize useSessionPersistence;
@property _Bool validatesSecureCertificate; // @synthesize validatesSecureCertificate;
@property _Bool shouldAttemptPersistentConnection; // @synthesize shouldAttemptPersistentConnection;
@property long long queuePriority; // @synthesize queuePriority;
@property int numberOfTimesToRetryOnTimeout; // @synthesize numberOfTimesToRetryOnTimeout;
@property _Bool shouldWaitToInflateCompressedResponses; // @synthesize shouldWaitToInflateCompressedResponses;
@property _Bool shouldCompressRequestBody; // @synthesize shouldCompressRequestBody;
@property _Bool allowCompressedResponse; // @synthesize allowCompressedResponse;
@property _Bool haveBuiltRequestHeaders; // @synthesize haveBuiltRequestHeaders;
@property _Bool bNeedRunInMain; // @synthesize bNeedRunInMain;
@property int responseStatusCode; // @synthesize responseStatusCode;
@property(retain) NSArray *responseCookies; // @synthesize responseCookies;
@property(retain) NSError *error; // @synthesize error;
@property long long tag; // @synthesize tag;
@property(retain) NSDictionary *userInfo; // @synthesize userInfo;
@property unsigned long long responseEncoding; // @synthesize responseEncoding;
@property(retain) NSDictionary *responseHeaders; // @synthesize responseHeaders;
@property(retain) NSMutableDictionary *requestHeaders; // @synthesize requestHeaders;
@property _Bool useAllCookiesPersistence; // @synthesize useAllCookiesPersistence;
@property unsigned long long postLength; // @synthesize postLength;
@property(retain) NSData *compressedPostBody; // @synthesize compressedPostBody;
@property(retain) NSMutableData *postBody; // @synthesize postBody;
@property _Bool useCookiePersistence; // @synthesize useCookiePersistence;
@property double timeOutSeconds; // @synthesize timeOutSeconds;
@property _Bool shouldContinueWhenAppEntersBackground; // @synthesize shouldContinueWhenAppEntersBackground;
@property(retain) NSMutableArray *requestCookies; // @synthesize requestCookies;
@property(retain) NSURL *originalURL; // @synthesize originalURL;
@property SEL didReceiveDataSelector; // @synthesize didReceiveDataSelector;
@property SEL didFailSelector; // @synthesize didFailSelector;
@property SEL didFinishSelector; // @synthesize didFinishSelector;
@property SEL didReceiveResponseHeadersSelector; // @synthesize didReceiveResponseHeadersSelector;
@property SEL didStartSelector; // @synthesize didStartSelector;
@property(nonatomic) id downloadProgressDelegate; // @synthesize downloadProgressDelegate;
@property(nonatomic) id uploadProgressDelegate; // @synthesize uploadProgressDelegate;
- (void).cxx_destruct;
- (void)nwconnection:(id)arg1 wasRedirectedToRequest:(id)arg2 redirectResponse:(id)arg3;
- (void)nwconnectionDidFinishLoading:(id)arg1;
- (void)nwconnection:(id)arg1 nsurlConnection:(id)arg2 didSendBodyData:(long long)arg3 totalBytesWritten:(long long)arg4 totalBytesExpectedToWrite:(long long)arg5;
- (void)nwconnection:(id)arg1 didFailWithError:(id)arg2;
- (void)nwconnection:(id)arg1 didReceiveData:(id)arg2;
- (void)nwconnection:(id)arg1 didReceiveResponse:(id)arg2;
- (void)failWithError:(id)arg1;
- (void)applyCookieHeader;
- (void)buildRequestHeaders;
- (void)parseStringEncodingFromHeaders;
- (void)setUserInfoForTracer:(id)arg1;
- (void)handelDelegateInvocation:(id)arg1;
- (void)callDelegateSelector:(SEL)arg1 andObj:(id)arg2;
- (void)debugTimeOut;
- (void)cancelDebugTimer;
- (void)startConnection;
- (void)unSupportInterface;
@property(copy) CDUnknownBlockType bytesSentBlock; // @synthesize bytesSentBlock;
@property(retain) NSString *postBodyFilePath; // @synthesize postBodyFilePath;
@property _Bool shouldStreamPostDataFromDisk; // @synthesize shouldStreamPostDataFromDisk;
- (void)addFile:(id)arg1 forKey:(id)arg2;
- (id)encodeURL:(id)arg1;
- (void)buildURLEncodedPostBody;
- (void)rebuildPostBody:(id)arg1;
- (void)buildPostBody;
- (void)setupPostBody;
- (void)addRequestHeader:(id)arg1 value:(id)arg2;
- (void)appendPostData:(id)arg1;
- (void)setPostValue:(id)arg1 forKey:(id)arg2;
- (void)addPostValue:(id)arg1 forKey:(id)arg2;
- (id)responseData;
- (id)responseString;
- (void)notifyCompleted;
- (void)markAsFinished;
- (_Bool)isExecuting;
- (_Bool)isFinished;
@property(readonly, getter=isCancelled) _Bool cancelled; // @synthesize cancelled;
- (void)cancel;
- (void)clearDelegatesAndCancel;
- (void)prepareForConnection;
- (void)startAsynchronous;
@property(retain, nonatomic) NSString *requestMethod;
- (void)startSynchronousWithLoopSec:(double)arg1;
- (void)startSynchronous;
@property(retain, nonatomic, setter=setURL:) NSURL *url;
@property(nonatomic) id <NMHTTPRequestDelegate> delegate;
- (void)main;
- (void)start;
- (_Bool)isConcurrent;
- (void)dealloc;
- (id)initWithURL:(id)arg1 isGET:(_Bool)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

