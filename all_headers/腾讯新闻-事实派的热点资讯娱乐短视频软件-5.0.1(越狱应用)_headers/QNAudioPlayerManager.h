//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

@class AVPlayerItem, NSArray, QNAudioInfoItem, QNAudioOverlayControlView, QNAudioPlayer, UIAlertView;

@interface QNAudioPlayerManager : NSObject
{
    _Bool _showNoWifiTips;
    _Bool _showOverlayControlView;
    _Bool _shouldAutoPlay;
    _Bool _insideAudioList;
    NSArray *_playList;
    long long _playStatus;
    long long _playListStatus;
    QNAudioOverlayControlView *_controlView;
    long long _playPattern;
    long long _playListType;
    double _liveAudioTimeWithCurrentTimeDif;
    long long _cornerViewStatus;
    QNAudioPlayer *_player;
    AVPlayerItem *_currentPlayItem;
    id _timeObserver;
    UIAlertView *_wwanAlert;
    UIAlertView *_downloadedAlert;
    QNAudioInfoItem *_blockedItem;
}

+ (id)sharedInstance;
@property(nonatomic) _Bool insideAudioList; // @synthesize insideAudioList=_insideAudioList;
@property(nonatomic) _Bool shouldAutoPlay; // @synthesize shouldAutoPlay=_shouldAutoPlay;
@property(nonatomic) _Bool showOverlayControlView; // @synthesize showOverlayControlView=_showOverlayControlView;
@property(nonatomic) _Bool showNoWifiTips; // @synthesize showNoWifiTips=_showNoWifiTips;
@property(retain, nonatomic) QNAudioInfoItem *blockedItem; // @synthesize blockedItem=_blockedItem;
@property(retain, nonatomic) UIAlertView *downloadedAlert; // @synthesize downloadedAlert=_downloadedAlert;
@property(retain, nonatomic) UIAlertView *wwanAlert; // @synthesize wwanAlert=_wwanAlert;
@property(retain, nonatomic) id timeObserver; // @synthesize timeObserver=_timeObserver;
@property(retain, nonatomic) AVPlayerItem *currentPlayItem; // @synthesize currentPlayItem=_currentPlayItem;
@property(retain, nonatomic) QNAudioPlayer *player; // @synthesize player=_player;
@property(nonatomic) long long cornerViewStatus; // @synthesize cornerViewStatus=_cornerViewStatus;
@property(nonatomic) double liveAudioTimeWithCurrentTimeDif; // @synthesize liveAudioTimeWithCurrentTimeDif=_liveAudioTimeWithCurrentTimeDif;
@property(nonatomic) long long playListType; // @synthesize playListType=_playListType;
@property(nonatomic) long long playPattern; // @synthesize playPattern=_playPattern;
@property(retain, nonatomic) QNAudioOverlayControlView *controlView; // @synthesize controlView=_controlView;
@property(nonatomic) long long playListStatus; // @synthesize playListStatus=_playListStatus;
@property(nonatomic) long long playStatus; // @synthesize playStatus=_playStatus;
@property(retain, nonatomic) NSArray *playList; // @synthesize playList=_playList;
- (void).cxx_destruct;
- (void)alertViewCancel:(id)arg1;
- (void)alertView:(id)arg1 clickedButtonAtIndex:(long long)arg2;
- (void)handleNetworkChanged;
- (void)showDownloadedAlert;
- (_Bool)checkNetStatus;
- (void)cleanPlayInfo;
- (void)updatePlayInfo;
- (void)checkPlayable;
- (void)_initializeAudioSession;
- (CDStruct_1b6d18a9)playerItemDuration;
- (void)updateProgress;
- (void)updateControlView;
- (double)playProcess;
- (void)hideCornerView;
- (void)displayCornerView;
- (void)hideOverlayControl;
- (void)showOverlayControl;
- (void)_playSynchronizationState;
- (void)_playWithPattern;
- (_Bool)_playItemIsInCurrentPlayList:(id)arg1;
- (_Bool)_isInAudioChannel;
- (void)audioInterruptionReceived:(id)arg1;
- (void)musicStartPlay:(id)arg1;
- (void)videoStartPlay:(id)arg1;
- (void)_audioRouteChangeListenerCallback:(id)arg1;
- (void)p_channelChange:(id)arg1;
- (void)playerItemFailedToPlayToEnd:(id)arg1;
- (void)playerItemDidPlayToEnd:(id)arg1;
- (void)handleVideoStartPlay;
- (_Bool)shouldRetry;
- (void)retryPlay;
- (void)playPreviousShouldStop:(_Bool)arg1;
- (void)playNextShouldLoadMore:(_Bool)arg1;
- (void)playPrevious;
- (void)playNext;
- (void)playAudioFile:(id)arg1 shouldCheckNetwork:(_Bool)arg2;
- (void)playAudioFile:(id)arg1;
- (void)stop;
- (void)seekProcess:(double)arg1;
- (void)play;
- (void)pause;
- (id)playerItemFromURL:(id)arg1 withListener:(_Bool)arg2;
- (void)initializePlayList:(id)arg1 startItem:(id)arg2 withListener:(_Bool)arg3;
- (void)syncPlayList:(id)arg1;
- (void)playListItemList:(id)arg1 startItem:(id)arg2;
- (void)addTimeObserver;
- (void)removeTimeObserver;
- (void)initPlayerWithPlayerItem:(id)arg1;
- (void)addPlayList:(id)arg1;
- (void)cleanPlayList;
- (void)cleanPlayItem;
- (void)cleanPlayer;
- (id)previousIsExistListItem:(id)arg1;
- (id)nextIsExistListItem:(id)arg1;
- (void)_liveAudioWithIndex:(long long)arg1 type:(long long)arg2 callBack:(CDUnknownBlockType)arg3;
- (long long)_getIndexInPlayList:(id)arg1;
- (void)previousPlayableListItem:(id)arg1 callBack:(CDUnknownBlockType)arg2;
- (void)nextPlayableListItem:(id)arg1 callBack:(CDUnknownBlockType)arg2;
- (id)currentPlayingAudioInfo;
- (void)setCurrentAudioInfo:(id)arg1;
- (_Bool)autoPlayFlag;
- (_Bool)hasPlayList;
- (_Bool)isPlayingDownloadList;
- (_Bool)isAudioInfoIsPlaying:(id)arg1;
- (_Bool)isValidAudioInfo:(id)arg1;
- (void)dealloc;
- (id)init;

@end

