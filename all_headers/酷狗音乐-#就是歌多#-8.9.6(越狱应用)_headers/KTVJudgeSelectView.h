//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <UIKit/UIView.h>

#import "KFSwipeCardViewDataSource-Protocol.h"
#import "KFSwipeCardViewDelegate-Protocol.h"
#import "KTVAudioRotatePlayerDelegate-Protocol.h"
#import "KTVJudgeFakeAnimationViewDelegate-Protocol.h"
#import "KTVJudgeTipToolViewViewDelegate-Protocol.h"
#import "KTVJudgeTipViewDelegate-Protocol.h"
#import "KTVMakeJudgeViewDelegate-Protocol.h"

@class KFSwipeCardView, KTVJudgeFakeAnimationView, KTVJudgeFakeTipView, KTVJudgeMaxTipView, KTVJudgeTipToolView, KTVJudgeTipView, KTVMakeJudgeInfo, KTVMakeJudgeView, KTVThemeButton, NSObject, NSString, UIButton, UIImageView;
@protocol ADCAudioRotatePlayerProtocol, KTVJudgeSelectViewDataSoucre, KTVJudgeSelectViewDelegate;

@interface KTVJudgeSelectView : UIView <KFSwipeCardViewDelegate, KFSwipeCardViewDataSource, KTVMakeJudgeViewDelegate, KTVAudioRotatePlayerDelegate, KTVJudgeTipToolViewViewDelegate, KTVJudgeTipViewDelegate, KTVJudgeFakeAnimationViewDelegate>
{
    double preTime;
    double playTotalTime;
    double playLeftTime;
    double playRightTime;
    double endTime;
    double currentTimePoint;
    _Bool _isWillLeave;
    _Bool _isPrepared;
    _Bool _isJumpPrelude;
    _Bool _isDraging;
    _Bool _needRotate;
    _Bool _isVoting;
    _Bool _needShowAnimation;
    _Bool _isPlayNewOpus;
    _Bool _isVoted;
    _Bool _isFirstVoted;
    int _canvassPlayerId;
    int _canvassPkId;
    KFSwipeCardView *_cardView;
    id <KTVJudgeSelectViewDelegate> _delegate;
    id <KTVJudgeSelectViewDataSoucre> _dataSource;
    KTVMakeJudgeInfo *_canvassJudgeInfo;
    UIImageView *_bgView;
    KTVThemeButton *_nextBtn;
    UIButton *_skipBtn;
    KTVMakeJudgeView *_selectView;
    long long _currentIndex;
    NSObject<ADCAudioRotatePlayerProtocol> *_player;
    unsigned long long _currentPlayType;
    KTVMakeJudgeView *_fakeView;
    UIView *_tipSelectView;
    KTVJudgeFakeAnimationView *_fakeAnimationView;
    KTVJudgeFakeTipView *_fakeTipView;
    KTVJudgeTipToolView *_tipToolView;
    KTVJudgeTipView *_judgeTipView;
    KTVJudgeMaxTipView *_judgeMaxTipView;
    long long _releaseKCardSuccess;
    long long _makeAWholeGoodSongCard;
    struct CGRect _cardFrame;
    struct CGRect _tipViewFrame;
}

@property(nonatomic) long long makeAWholeGoodSongCard; // @synthesize makeAWholeGoodSongCard=_makeAWholeGoodSongCard;
@property(nonatomic) long long releaseKCardSuccess; // @synthesize releaseKCardSuccess=_releaseKCardSuccess;
@property(retain, nonatomic) KTVJudgeMaxTipView *judgeMaxTipView; // @synthesize judgeMaxTipView=_judgeMaxTipView;
@property(nonatomic) struct CGRect tipViewFrame; // @synthesize tipViewFrame=_tipViewFrame;
@property(retain, nonatomic) KTVJudgeTipView *judgeTipView; // @synthesize judgeTipView=_judgeTipView;
@property(retain, nonatomic) KTVJudgeTipToolView *tipToolView; // @synthesize tipToolView=_tipToolView;
@property(nonatomic) int canvassPkId; // @synthesize canvassPkId=_canvassPkId;
@property(nonatomic) int canvassPlayerId; // @synthesize canvassPlayerId=_canvassPlayerId;
@property(nonatomic) struct CGRect cardFrame; // @synthesize cardFrame=_cardFrame;
@property(retain, nonatomic) KTVJudgeFakeTipView *fakeTipView; // @synthesize fakeTipView=_fakeTipView;
@property(retain, nonatomic) KTVJudgeFakeAnimationView *fakeAnimationView; // @synthesize fakeAnimationView=_fakeAnimationView;
@property(nonatomic) _Bool isFirstVoted; // @synthesize isFirstVoted=_isFirstVoted;
@property(nonatomic) _Bool isVoted; // @synthesize isVoted=_isVoted;
@property(nonatomic) _Bool isPlayNewOpus; // @synthesize isPlayNewOpus=_isPlayNewOpus;
@property(nonatomic) _Bool needShowAnimation; // @synthesize needShowAnimation=_needShowAnimation;
@property(nonatomic) _Bool isVoting; // @synthesize isVoting=_isVoting;
@property(retain, nonatomic) UIView *tipSelectView; // @synthesize tipSelectView=_tipSelectView;
@property(retain, nonatomic) KTVMakeJudgeView *fakeView; // @synthesize fakeView=_fakeView;
@property(nonatomic) unsigned long long currentPlayType; // @synthesize currentPlayType=_currentPlayType;
@property(nonatomic) _Bool needRotate; // @synthesize needRotate=_needRotate;
@property(retain, nonatomic) NSObject<ADCAudioRotatePlayerProtocol> *player; // @synthesize player=_player;
@property(nonatomic) long long currentIndex; // @synthesize currentIndex=_currentIndex;
@property(nonatomic) _Bool isDraging; // @synthesize isDraging=_isDraging;
@property(nonatomic) _Bool isJumpPrelude; // @synthesize isJumpPrelude=_isJumpPrelude;
@property(retain, nonatomic) KTVMakeJudgeView *selectView; // @synthesize selectView=_selectView;
@property(retain, nonatomic) UIButton *skipBtn; // @synthesize skipBtn=_skipBtn;
@property(retain, nonatomic) KTVThemeButton *nextBtn; // @synthesize nextBtn=_nextBtn;
@property(retain, nonatomic) UIImageView *bgView; // @synthesize bgView=_bgView;
@property(retain, nonatomic) KTVMakeJudgeInfo *canvassJudgeInfo; // @synthesize canvassJudgeInfo=_canvassJudgeInfo;
@property(nonatomic) _Bool isPrepared; // @synthesize isPrepared=_isPrepared;
@property(nonatomic) _Bool isWillLeave; // @synthesize isWillLeave=_isWillLeave;
@property(nonatomic) __weak id <KTVJudgeSelectViewDataSoucre> dataSource; // @synthesize dataSource=_dataSource;
@property(nonatomic) __weak id <KTVJudgeSelectViewDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) KFSwipeCardView *cardView; // @synthesize cardView=_cardView;
- (void).cxx_destruct;
- (void)hiddenWillSingTip;
- (void)stopAnimation;
- (void)startAnimation;
- (void)endLoading;
- (void)startNormalLoading;
- (void)startFirstLoading;
- (void)makeJudgeView:(id)arg1 didClickFollowButton:(id)arg2 complete:(CDUnknownBlockType)arg3;
- (void)showCanvassTipViewWithIsMax:(_Bool)arg1;
- (void)showJudgeTipWithDic:(id)arg1;
- (void)makeJudgeView:(id)arg1 playSource:(unsigned long long)arg2 didClickPraiseComplete:(CDUnknownBlockType)arg3;
- (void)gotoCoolCardCenter;
- (void)swipeCardView:(id)arg1 cellDidOutOfBounds:(id)arg2 forIndex:(long long)arg3;
- (void)swipeCardView:(id)arg1 cellWillOutOfBounds:(id)arg2 forIndex:(long long)arg3;
- (void)resetSelectSkipBtnAndNextBtn;
- (void)resetSkipBtnAndNextBtn;
- (id)defaultCell:(id)arg1 reusingView:(id)arg2;
- (id)swipeCardView:(id)arg1 itemForViewAtIndex:(long long)arg2 reusingView:(id)arg3;
- (long long)numberOfItemsInSwipeCardView:(id)arg1;
- (void)updatePlayStateWithTimePoint:(double)arg1;
- (void)rotatePlayer:(id)arg1 statusChange:(int)arg2 subState:(int)arg3;
- (void)rotatePlayer:(id)arg1 updatePlayTimePoint:(double)arg2;
- (void)dismissComplete;
- (void)share:(id)arg1;
- (void)goListenWork:(id)arg1;
- (void)goCompetiton:(id)arg1;
- (void)makeJudgeView:(id)arg1 willSwitchPlaySource:(unsigned long long)arg2;
- (void)makeJudgeView:(id)arg1 toUserSpaceWithPlayerId:(long long)arg2;
- (void)showRemainTime;
- (void)actionStop;
- (void)actionFirstTap;
- (void)actionProgress:(double)arg1;
- (void)actionPause;
- (void)actionPlay;
- (void)viewWillLeave;
- (void)updateTopCellKrcModel;
- (void)playOpusWithOpusInfo:(id)arg1;
- (void)playNewOpus:(id)arg1;
- (void)shuffleCompleteWithLeftMaskString:(id)arg1 rightMaskString:(id)arg2;
- (void)showFakeAnimationViewWithIsOver:(_Bool)arg1;
- (void)activeUnActiveRemoteControl;
- (void)activeRemoteControl;
- (void)resetPlayStatus;
- (void)resetSongMemory;
- (void)saveSongMemory;
- (void)playSongMemory;
- (void)showSelectTip;
- (void)canvassSwipeTopCellToLeft;
- (void)saveSwipeTopCellToLeft;
- (void)actionNextGroup:(id)arg1;
- (void)setNextButtonHidden:(_Bool)arg1;
- (void)hideSubview:(_Bool)arg1 loading:(_Bool)arg2;
- (void)loadNextInfoWithIndex:(long long)arg1;
- (void)reloadRelations;
- (void)reloadView:(_Bool)arg1;
- (void)showBackGroundImageWithAlbumURLString:(id)arg1;
- (void)updateCardViewCanPanChanged;
- (void)updateWithCanvassPlayerId:(int)arg1 canvassPkId:(int)arg2;
- (void)adjustBound;
- (void)setupContentViews;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1 canvassPkId:(int)arg2 canvassPlayerId:(int)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

