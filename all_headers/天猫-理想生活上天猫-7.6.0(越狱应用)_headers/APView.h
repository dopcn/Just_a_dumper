//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <UIKit/UIView.h>

@class APCamera, APRenderer, CADisplayLink, NSObject, UIPanGestureRecognizer, UIPinchGestureRecognizer, UITapGestureRecognizer;
@protocol APPanoramaProtocol, APSceneProtocol, APViewDelegate;

@interface APView : UIView
{
    struct CGPoint newPoint;
    NSObject<APPanoramaProtocol> *scene;
    _Bool isClickable;
    _Bool isAnimating;
    _Bool isPointerVisible;
    _Bool needRender;
    _Bool decelerating;
    _Bool enableConstantSpeedScroll;
    int touchStatus;
    unsigned long long animationFrameInterval;
    NSObject<APViewDelegate> *delegate;
    UIPinchGestureRecognizer *pinchGesture;
    UIPanGestureRecognizer *panGesture;
    UITapGestureRecognizer *tapGesture;
    CADisplayLink *displayLink;
    APRenderer *renderer;
    struct CGPoint startPoint;
    struct CGPoint endPoint;
    struct CGPoint lastVelocity;
}

+ (Class)layerClass;
@property(nonatomic) _Bool enableConstantSpeedScroll; // @synthesize enableConstantSpeedScroll;
@property(nonatomic) struct CGPoint lastVelocity; // @synthesize lastVelocity;
@property(nonatomic) _Bool decelerating; // @synthesize decelerating;
@property(nonatomic) _Bool needRender; // @synthesize needRender;
@property(retain, nonatomic, getter=renderer) APRenderer *renderer; // @synthesize renderer;
@property(retain, nonatomic) UITapGestureRecognizer *tapGesture; // @synthesize tapGesture;
@property(retain, nonatomic) UIPanGestureRecognizer *panGesture; // @synthesize panGesture;
@property(retain, nonatomic) UIPinchGestureRecognizer *pinchGesture; // @synthesize pinchGesture;
@property(nonatomic) _Bool isPointerVisible; // @synthesize isPointerVisible;
@property(readonly, nonatomic) int touchStatus; // @synthesize touchStatus;
@property(nonatomic) __weak NSObject<APViewDelegate> *delegate; // @synthesize delegate;
@property(readonly, nonatomic) _Bool isAnimating; // @synthesize isAnimating;
@property(nonatomic) struct CGPoint endPoint; // @synthesize endPoint;
@property(nonatomic) struct CGPoint startPoint; // @synthesize startPoint;
@property(nonatomic) _Bool isClickable; // @synthesize isClickable;
@property(nonatomic) unsigned long long animationFrameInterval; // @synthesize animationFrameInterval;
@property(retain, nonatomic) NSObject<APPanoramaProtocol> *panorama; // @synthesize panorama=scene;
- (void).cxx_destruct;
- (void)dealloc;
- (void)resetTouchPoints;
- (void)clear;
- (void)resetTouchStatus;
- (struct CGPoint)getLocationOfFirstTouch:(id)arg1;
- (_Bool)isTouchInView:(id)arg1;
- (void)didZoom:(id)arg1;
- (void)didPan:(id)arg1;
- (void)didTap:(id)arg1;
- (void)setInitiatePitch:(double)arg1 yaw:(double)arg2;
- (void)stopAnimation;
- (void)startAnimation;
- (void)layoutSubviews;
- (void)regenerateRenderBuffer;
- (void)endDeceleration;
- (void)decelerationStep;
- (void)beginDeceleration;
- (void)drawViewInternallyNTimes:(unsigned long long)arg1;
- (void)drawViewInternally;
- (void)drawViewNTimes:(unsigned long long)arg1;
- (void)drawView;
@property(retain, nonatomic, getter=displayLink, setter=setDisplayLink:) CADisplayLink *displayLink; // @synthesize displayLink;
- (_Bool)isMultiAPeTouchEnabled;
- (void)setSceneAlpha:(float)arg1;
@property(readonly, nonatomic, getter=getCamera) APCamera *camera;
@property(readonly, nonatomic, getter=scene) NSObject<APSceneProtocol> *scene;
- (void)resetSceneAlpha;
- (void)resetWithoutAlpha;
- (void)reset;
- (void)willMoveToWindow:(id)arg1;
- (void)initializeValues;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

