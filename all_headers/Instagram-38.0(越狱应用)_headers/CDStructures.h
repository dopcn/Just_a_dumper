//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

@class FBAACEncoder, FBDiskVideoRecorder, FBDiskVideoRecorderDiskResults, NSError, NSObject, NSString, NSURL;

#pragma mark Function Pointers and Blocks

typedef void (*CDUnknownFunctionPointerType)(void); // return type and parameters are unknown

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct AQBufferParameters {
    unsigned int bufferSize;
    unsigned int packetCount;
};

struct AQBufferState {
    struct AudioQueueBuffer *bufferRef;
    struct AudioTimeStamp timestamp;
    _Bool enqueued;
};

struct ARLinkScanner;

struct AVCFrame;

struct AVCFrameSplitterBitStream {
    CDUnknownFunctionPointerType *_vptr$AVCFrameSplitter;
    struct shared_ptr<facebook::quickfire::H264SPS> m_sps;
    shared_ptr_aecb8741 m_spsNalu;
    shared_ptr_aecb8741 m_ppsNalu;
    shared_ptr_d7f3c67e m_currframe;
};

struct AdaptiveBitrateAlgorithm;

struct AdaptiveBitrateAlgorithmFactory;

struct AdaptiveBitrateConfig {
    _Bool enabled;
    int intervalInVideoFrames;
    int minBitrate;
    int maxBitrate;
    int maxBitrateWifi;
    struct vector<std::__1::pair<std::__1::unordered_map<std::__1::basic_string<char>, std::__1::pair<double, double>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::pair<double, double>>>>, facebook::mobile::xplat::livestreaming::AdaptiveBitrateControlParameters>, std::__1::allocator<std::__1::pair<std::__1::unordered_map<std::__1::basic_string<char>, std::__1::pair<double, double>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::pair<double, double>>>>, facebook::mobile::xplat::livestreaming::AdaptiveBitrateControlParameters>>> rules;
    int statisticsWindowSize;
    double statisticsSmoothFactor;
    basic_string_a490aa4c abrClassName;
    basic_string_a490aa4c abrJS;
    basic_string_a490aa4c abrResolutionClassName;
    int videoBitrateThreshold216;
    int videoBitrateThreshold288;
    int videoBitrateThreshold360;
    int videoBitrateThreshold504;
    int videoBitrateThreshold648;
    int videoBitrateThreshold720;
    int videoBitrateThreshold24fps;
};

struct AdaptiveBitrateInputParameterProcessor;

struct Analytics;

struct AudioBuffer {
    unsigned int mNumberChannels;
    unsigned int mDataByteSize;
    void *mData;
};

struct AudioBufferList {
    unsigned int _field1;
    struct AudioBuffer _field2[1];
};

struct AudioClassDescription {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
};

struct AudioConfig {
    int sampleRate;
    int bitRate;
    int channels;
};

struct AudioInput<short>;

struct AudioInputMixer<short>;

struct AudioInputWithProgress<short>;

struct AudioLoop<short>;

struct AudioPacketizer;

struct AudioPacketizerFactory;

struct AudioPipeline<short>;

struct AudioQueueBuffer {
    unsigned int _field1;
    void *_field2;
    unsigned int _field3;
    void *_field4;
    unsigned int _field5;
    struct AudioStreamPacketDescription *_field6;
    unsigned int _field7;
};

struct AudioQueueLevelMeterState {
    float _field1;
    float _field2;
};

struct AudioServiceCreator;

struct AudioSource<short>;

struct AudioSourceConfig {
    basic_string_a490aa4c _field1;
    basic_string_a490aa4c _field2;
    _Bool _field3;
    _Bool _field4;
    _Bool _field5;
    float _field6;
    _Bool _field7;
    vector_8ec4fdfd _field8;
};

struct AudioStreamBasicDescription {
    double mSampleRate;
    unsigned int mFormatID;
    unsigned int mFormatFlags;
    unsigned int mBytesPerPacket;
    unsigned int mFramesPerPacket;
    unsigned int mBytesPerFrame;
    unsigned int mChannelsPerFrame;
    unsigned int mBitsPerChannel;
    unsigned int mReserved;
};

struct AudioStreamPacketDescription {
    long long _field1;
    unsigned int _field2;
    unsigned int _field3;
};

struct AudioTimeStamp {
    double mSampleTime;
    unsigned long long mHostTime;
    double mRateScalar;
    unsigned long long mWordClockTime;
    struct SMPTETime mSMPTETime;
    unsigned int mFlags;
    unsigned int mReserved;
};

struct AutoreleaseLoopCallback;

struct BitrateAdjuster;

struct BlockEntry;

struct BufferPool;

struct CAEAGLLayer {
    Class _field1;
    struct _CALayerIvars _field2;
    struct _CAEAGLNativeWindow *_field3;
};

struct CATransform3D {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
    double _field5;
    double _field6;
    double _field7;
    double _field8;
    double _field9;
    double _field10;
    double _field11;
    double _field12;
    double _field13;
    double _field14;
    double _field15;
    double _field16;
};

struct CGAffineTransform {
    double a;
    double b;
    double c;
    double d;
    double tx;
    double ty;
};

struct CGColor;

struct CGImage;

struct CGPoint {
    double x;
    double y;
};

struct CGPointError {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
    double _field5;
    double _field6;
};

struct CGRect {
    struct CGPoint origin;
    struct CGSize size;
};

struct CGSize {
    double width;
    double height;
};

struct CGVector {
    double _field1;
    double _field2;
};

struct CLLocationCoordinate2D {
    double latitude;
    double longitude;
};

struct CMSampleBufferSmartPtr {
    struct opaqueCMSampleBuffer *_field1;
};

struct CPU {
    double intercept;
    double slope;
};

struct CameraPreviewInfo {
    float _field1;
    struct PreviewPixelSize _field2;
    struct EffectSafeAreaInsets _field3;
};

struct CameraTimeStat {
    unsigned int _field1;
    unsigned int _field2;
};

struct CameraVideoInfo {
    _Bool _field1;
    _Bool _field2;
    unsigned char _field3;
};

struct CaptureEventService;

struct CaptureEventServiceCreator;

struct CertificatePinner;

struct Chapters;

struct Cluster {
    struct Segment *_field1;
    long long _field2;
    long long _field3;
    long long _field4;
    long long _field5;
    long long _field6;
    struct BlockEntry **_field7;
    long long _field8;
    long long _field9;
};

struct CompactBitstreamWriter {
    struct vector<unsigned char, std::__1::allocator<unsigned char>> _field1;
    unsigned long long _field2;
    unsigned long long _field3;
};

struct CuePoint {
    long long _field1;
    long long _field2;
    long long _field3;
    long long _field4;
    struct TrackPosition *_field5;
    unsigned long long _field6;
};

struct Cues;

struct CxxModule;

struct DiskVideoRecorderConfig {
    int availableSpaceThresholdInMB;
    struct duration<double, std::__1::ratio<1, 1>> checkAvailableSpaceIntervalInSeconds;
    struct duration<double, std::__1::ratio<1, 1>> movieFragmentIntervalInSeconds;
    struct VideoConfig videoConfig;
    struct AudioConfig audioConfig;
    _Bool enablePartialRecordingIfNoEnoughSpace;
};

struct Display {
    double intercept;
    double slope;
};

struct DisplayBrightnessInfo {
    float _field1;
    float _field2;
    double _field3;
};

struct DualTexture;

struct EffectAssetLoader;

struct EffectSafeAreaInsets {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
};

struct Either<NSError *, FBDiskVideoRecorderDiskResults *> {
    NSError *_left;
    FBDiskVideoRecorderDiskResults *_right;
    _Bool _isLeft;
};

struct Either<NSError *, id<FBMPData>> {
    id _field1;
    id _field2;
    _Bool _field3;
};

struct EngineDebugConfiguration {
    _Bool displayEngineDebugOverlay;
    _Bool displayFaceLandmarks;
    _Bool displayFaceWireframes;
    _Bool enableGpuTimer;
};

struct EventBase;

struct EvictingCacheMap<std::__1::tuple<unsigned long, unsigned long, unsigned int>, FBCFRefGuard<const void *>, std::__1::hash<std::__1::tuple<unsigned long, unsigned long, unsigned int>>, std::__1::equal_to<std::__1::tuple<unsigned long, unsigned long, unsigned int>>>;

struct Exception;

struct Executor {
    CDUnknownFunctionPointerType *_field1;
};

struct FBARAudioServiceConfigurationOverrides {
    _Bool audioPreviewInitiallyMuted;
};

struct FBARAudioServiceConfigurationTweaks {
    _Bool echoCancellationEnabled;
    float recordingVolume;
    _Bool enablePlayingOnRecording;
    _Bool disableAudioAssetsInVideo;
    _Bool keepRecordingOnReset;
    _Bool audioTracksDisabled;
};

struct FBARCaptureEventServiceCameraInfo {
    unsigned char _field1;
    float _field2;
    struct PixelSize _field3;
    struct EffectSafeAreaInsets _field4;
};

struct FBAREngineOutputSize {
    unsigned int _field1;
    unsigned int _field2;
};

struct FBAREngineRenderOptions {
    float _field1;
};

struct FBAROpenGLTexture {
    struct FBAROpenGLTextureInfo _field1;
    struct FBCFRefGuard<const void *> _field2;
    struct FBCFRefGuard<const void *> _field3;
};

struct FBAROpenGLTextureInfo {
    unsigned int _field1;
    unsigned int _field2;
};

struct FBAnimationPerformanceTrackerConfiguration {
    long long _field1;
    long long _field2;
    long long _field3;
    _Bool _field4;
};

struct FBAnimationPerformanceTrackingResult {
    _Bool _field1;
    long long _field2;
    double _field3;
    unsigned long long _field4;
    double _field5;
    unsigned long long _field6;
    double _field7;
    double _field8;
    long long _field9;
    double _field10;
    long long _field11;
};

struct FBCFRefGuard<const void *> {
    void *_field1;
};

struct FBCPUSpinDetectorConfig {
    short period_sec;
    short process_pct_usage;
    short thread_pct_usage;
};

struct FBDeviceBatteryInfo {
    long long _field1;
    double _field2;
};

struct FBGLUniformTextureInfo {
    unsigned int _field1;
    unsigned int _field2;
};

struct FBLigerRequestProperties {
    id _field1;
    id _field2;
    id _field3;
    int _field4;
};

struct FBMPCameraInfoInputConfiguration {
    _Bool replayOnPortConnect;
};

struct FBMPDataCapturerCompletionContext {
    NSObject *callbackQueue;
    CDUnknownBlockType block;
};

struct FBMPDataMetadata {
    unsigned long long _field1;
    unsigned long long _field2;
    _Bool _field3;
    _Bool _field4;
};

struct FBMPRendererConfiguration {
    _Bool _field1;
    _Bool _field2;
    _Bool _field3;
};

struct FBMPSessionConfig {
    _Bool trackPerformance;
};

struct FBMQTTChannelConnectEventObserver;

struct FBMQTTChannelConnectionStateObserver;

struct FBMQTTChannelEventLogger;

struct FBMQTTChannelPublishEventObserver;

struct FBMQTTChannelSubscribeEventObserver;

struct FBMediaUploadJobProgressInformation {
    long long _field1;
    double _field2;
    _Bool _field3;
};

struct FBNSStringCache {
    struct FBNSStringCacheItem *items;
    unsigned int prng_lfsr;
    unsigned char age[1024];
};

struct FBNSStringCacheItem;

struct FBNetworkSpeedTestStatus {
    int _field1;
    double _field2;
    unsigned long long _field3;
    id _field4;
    _Bool _field5;
};

struct FBPassThruConfig {
    _Bool enabled;
    _Bool doResolutionScaling;
};

struct FBProgressiveJPEGErrorManager {
    struct jpeg_error_mgr pub;
    int setjmp_buffer[48];
};

struct FBQualityEstimate {
    double _field1;
    _Bool _field2;
    float _field3;
    unsigned long long _field4;
};

struct FBSDKLikeControlLayout {
    struct CGSize _field1;
    struct CGRect _field2;
    struct CGRect _field3;
};

struct FBSSLKeyMaterialListenerAbstractLogger;

struct FBVideoBroadcastBaseSessionParameters {
    struct FBVideoBroadcastSessionTimestampConfig _field1;
    id _field2;
};

struct FBVideoBroadcastPipelineHolder {
    shared_ptr_c386cb19 networkSession;
    FBAACEncoder *audioEncoder;
    id videoEncoder;
    id audioPacketizer;
    id videoPacketizer;
    FBDiskVideoRecorder *diskRecorder;
};

struct FBVideoBroadcastRtmpSessionParameters {
    id _field1;
    CDStruct_bdc2dcf0 _field2;
    id _field3;
    id _field4;
    id _field5;
    shared_ptr_f32f4099 _field6;
    shared_ptr_d61e43bb _field7;
    CDUnknownBlockType _field8;
    CDUnknownBlockType _field9;
    CDUnknownBlockType _field10;
    CDUnknownBlockType _field11;
    shared_ptr_75e1c217 _field12;
    shared_ptr_b7837d35 _field13;
    shared_ptr_0a7db57b _field14;
    shared_ptr_0cdddaf5 _field15;
    struct FBVideoBroadcastBaseSessionParameters _field16;
};

struct FBVideoBroadcastRtmpSwapStats {
    double audioBufferDurationSeconds;
    double videoBufferDurationSeconds;
    double lastAudioPts;
    double lastVideoPts;
    double lastAudioPtsStreamTime;
    double callStartedToSocketWritabilityLatencySeconds;
    double callJoinedToSocketWritabilityLatencySeconds;
};

struct FBVideoBroadcastSessionLoggingInfo {
    NSString *reason;
    NSError *error;
    _Bool remoteEnded;
};

struct FBVideoBroadcastSessionStats {
    struct unordered_map<std::__1::basic_string<char>, double, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, double>>> adaptiveBitrateStats;
    CDStruct_1b6d18a9 pipelineLatency;
    CDStruct_1b6d18a9 lastSentAudioPts;
    CDStruct_1b6d18a9 lastSentVideoPts;
    double throughput;
    unsigned long long totalBytesSent;
    unsigned long long elapsedTimeInMs;
    CDStruct_1b6d18a9 lastAudioSampleBufferPts;
    CDStruct_1b6d18a9 lastVideoSampleBufferPts;
    double videoQueueSizeInSeconds;
    double audioQueueSizeInSeconds;
    unsigned long long queueSizeInBytes;
    unsigned long long totalVideoBytesSent;
    unsigned long long totalAudioBytesSent;
    unsigned long long audioPacketsLost;
    unsigned long long audioPacketsSent;
    unsigned long long videoPacketsLost;
    unsigned long long videoPacketsSent;
    unsigned long long videoFramesEncoded;
    _Bool bandwidthLimitedResolution;
    _Bool cpuLimitedResolution;
    unsigned int encodeUsagePercent;
    unsigned int averageEncodeMs;
    unsigned long long frameRateSent;
    unsigned long long nacksReceived;
    unsigned long long firsReceived;
    unsigned long long plisReceived;
};

struct FBVideoBroadcastSessionStatsInternal {
    struct FBVideoBroadcastSessionStats _field1;
    struct unordered_map<std::__1::basic_string<char>, double, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, double>>> _field2;
};

struct FBVideoBroadcastSessionTimestampConfig {
    _Bool shiftTimestampBase;
    _Bool collapseGapsInAudio;
    _Bool collapseGapsInVideo;
};

struct FBVideoBroadcastStreamTimestampGapDetector {
    CDStruct_1b6d18a9 _lastAudioPTS;
    CDStruct_1b6d18a9 _lastAudioDuration;
    CDStruct_1b6d18a9 _accumulatedGap;
    long long _gapCounter;
};

struct FBWhistleConnectionStatsLogger;

struct FNFDashAssetConfig {
    double fetchBufferSizeInSeconds;
    double unstallBufferSizeInSeconds;
    double firstUnstallBufferSizeInSeconds;
    double stallBufferSizeInSeconds;
    double firstFetchSizeInSeconds;
    double fetchBufferMultiplier;
    double unstallBufferMultiplier;
    _Bool enableSecondsFromEndToStart;
    unsigned int segmentsFromEndToStart;
    unsigned int segmentsFromEndToStartPrefetch;
    unsigned int secondsFromEndToStart;
    unsigned int secondsFromEndToStartPrefetch;
    unsigned int unfetchedSegmentCap;
    unsigned int unfetchedSegmentsAfterCap;
    _Bool enablePrefetchLookupWhenBypassCache;
    int staleMpdUpdatesThreshold;
    unsigned int selectorType;
    double fractionOfAvailableBandwidthToUse;
    _Bool filterByScreenResolution;
    int pushInitialSegmentCount;
    int pushContinuousSegmentCount;
    _Bool enableVodMidstreamSwitch;
    _Bool enableLiveMidstreamSwitch;
    _Bool ignorePrefetchQualitySelection;
    _Bool useLiveFrameCompressorForVodDash;
    _Bool dashVodInitFetchToFragmentBoundary;
    _Bool enableUnstallBufferSizeBaseOnConnection;
    double unstallBufferSizeExcellent;
    double unstallBufferSizeGood;
    double unstallBufferSizeModerate;
    double unstallBufferSizePoor;
    double unstallBufferSizeUnknown;
    _Bool shouldUsePtsForInitialTime;
    _Bool shouldUseVideoPtsForAudioInitialTime;
    double bufferDeciderNetworkFraction;
    int minutesToPadAvailabilityEndTime;
    _Bool dashVodEnableDiskCacheWifi;
    _Bool dashVodEnableDiskCacheCell;
    _Bool dashVodDiskCacheFBCdnOnly;
    long long dashVodDiskCacheWifiNetworkConditionMask;
    long long dashVodDiskCacheCellNetworkConditionMask;
    long long dashVodDiskCacheWifiMaxSize;
    long long dashVodDiskCacheCellMaxSize;
    long long dashVodDiskCacheWifiRestartSize;
    long long dashVodDiskCacheCellRestartSize;
    double dashVodDiskCacheSafeMultiplier;
    double dashVodDiskCacheAbrThreshold;
    _Bool assetReaderCheckEnoughBytesWhenMovingOffset;
    _Bool usePlaylistDurationForSegmentedDash;
    _Bool enablePredictiveDash;
};

struct FNFDashAssetPrefetchMetadata {
    _Bool isInMemoryCached;
    _Bool isPrefetched;
    unsigned long long prefetchBytesRequested;
    unsigned long long prefetchBytesReceived;
    unsigned long long prefetchLeadTimeInMS;
    _Bool isPreviouslyKnownURL;
};

struct FNFDashConfig {
    _Bool enableFury;
    _Bool enable360;
    _Bool enableVp9;
    _Bool enableOpus;
    int initialFetchChunkCount;
    int fetchSizeInSecondsForCellLow;
    int fetchSizeInSecondsForCellHigh;
    int fetchSizeInSecondsForWifiLow;
    int fetchSizeInSecondsForWifiHigh;
    int fetchSizeHighThresholdInChunkCount;
    int fetchSizePerRequestInChunkCount;
    double stallThresholdInSeconds;
    double initialUnstallThresholdInSeconds;
    double initialUnstallThresholdInSecondsForUnknown;
    double initialUnstallThresholdInSecondsForPoor;
    double initialUnstallThresholdInSecondsForModerate;
    double initialUnstallThresholdInSecondsForGood;
    double initialUnstallThresholdInSecondsForExcellent;
    double unstallThresholdInSeconds;
    double unstallThresholdInSecondsForUnknown;
    double unstallThresholdInSecondsForPoor;
    double unstallThresholdInSecondsForModerate;
    double unstallThresholdInSecondsForGood;
    double unstallThresholdInSecondsForExcellent;
    _Bool enableBandwidthQualityUnstallThresholds;
    long long qualitySelectorType;
    _Bool loadAudioBeforeVideo;
    int liveTimelineEntriesCountAtParsing;
    int mpdAvailabilityEndTimePaddingInMinute;
    int liveStaleMpdCountThreshold;
    double abrBandwidthFraction;
    _Bool enableHeaderChunkCountMismatchError;
    _Bool disableUpdateTimeLoadedWhenInStall;
    _Bool enableLiveAbsoluteTimeCheck;
    _Bool enableDashVideoTypeCheck;
    _Bool enablePredictiveDash;
    _Bool lowLatencyBypassCDN;
};

struct FNFDashWebmStreamReader {
    CDUnknownFunctionPointerType *_field1;
    id _field2;
    long long _field3;
    long long _field4;
};

struct FNFFrameMetadata {
    unsigned int _field1;
    CDStruct_1b6d18a9 _field2;
    CDStruct_1b6d18a9 _field3;
    CDStruct_1b6d18a9 _field4;
    unsigned int _field5;
};

struct FNFMP4MehdAtom {
    int duration;
};

struct FNFMP4MoofAtom;

struct FNFMP4MoovAtom {
    struct FNFMP4MvhdAtom mvhdAtom;
    struct vector<FNFMP4TrakAtom, std::__1::allocator<FNFMP4TrakAtom>> trakAtoms;
    struct FNFMP4MvexAtom mvexAtom;
};

struct FNFMP4MoovAtomCompressed {
    struct vector<FNFMP4TrakAtomForSeek, std::__1::allocator<FNFMP4TrakAtomForSeek>> trakAtoms;
    struct FNFMP4MvhdAtom mvhdAtom;
};

struct FNFMP4MoovAtomProvider {
    struct FNFMP4MoovAtom _moovAtom;
    unsigned long long _moovAtomSize;
    struct FNFMP4SidxAtom _sidxAtom;
    vector_ae6e441d _moofAtoms;
    _Bool _parseRotationAtoms;
};

struct FNFMP4MvexAtom {
    struct FNFMP4MehdAtom mehdAtom;
    struct vector<FNFMP4TrexAtom, std::__1::allocator<FNFMP4TrexAtom>> trexAtoms;
};

struct FNFMP4MvhdAtom {
    unsigned int timescale;
    unsigned int duration;
    float rotationAngle;
};

struct FNFMP4SidxAtom {
    unsigned int timescale;
    struct vector<FNFMP4SidxSegment, std::__1::allocator<FNFMP4SidxSegment>> segments;
};

struct FNFMP4SidxSegment {
    unsigned long long _field1;
    unsigned int _field2;
    unsigned int _field3;
};

struct FNFMP4TrakAtom;

struct FNFMP4TrakAtomForSeek;

struct FNFMP4TrexAtom;

struct FNFMp4FrameMetadataCompressor {
    CDUnknownFunctionPointerType *_field1;
};

struct FNFPlayerState {
    _Bool playingRequested;
    _Bool isPlaying;
    _Bool isStalled;
    _Bool endTimeReached;
    _Bool firstAudioFrameEnqueued;
    _Bool stoppedEnqueuingVideo;
    _Bool stoppedEnqueuingAudio;
    _Bool isFirstVideoFrame;
    _Bool recreatedLayerOnError;
    _Bool audioEngineInitialized;
    CDStruct_1b6d18a9 lastStartingTime;
    CDStruct_1b6d18a9 lastRequestedStartTime;
    CDStruct_1b6d18a9 latestEnqueuedVideoPts;
    CDStruct_1b6d18a9 latestEnqueuedAudioPts;
    CDStruct_1b6d18a9 latestEnqueuedAudioDts;
    id playbackTimeObserverForAsset;
    id durationTimerForAsset;
    id stallTimerObserver;
    id seekFrameUpdateObserver;
    id sampleBufferFlushTimerObserver;
    id levelMeterTimerObserver;
    CDStruct_1b6d18a9 backgroundPauseTime;
    unsigned int sampleAudioFrameSize;
    NSString *representationId;
    unsigned long long lastFrameSeekAttempt;
};

struct FNFSeekStatus {
    _Bool _field1;
    CDStruct_1b6d18a9 _field2;
    _Bool _field3;
    _Bool _field4;
    _Bool _field5;
    unsigned long long _field6;
    unsigned long long _field7;
};

struct GPUTimer;

struct GestureEvent;

struct GestureEventServiceCreator;

struct GraphicsEngine;

struct H264BitstreamParser {
    CDUnknownFunctionPointerType *_vptr$H264BitstreamParser;
    struct Optional<webrtc::SpsParser::SpsState> sps_;
    struct Optional<webrtc::PpsParser::PpsState> pps_;
    struct Optional<int> last_slice_qp_delta_;
};

struct H264SPS;

struct HTTPClientSettings {
    struct EventBase *_field1;
    struct unique_ptr<proxygen::httpclient::RequestHandlerFactory, std::__1::default_delete<proxygen::httpclient::RequestHandlerFactory>> _field2;
    struct HTTPTransactionAdaptorFactory *_field3;
};

struct HTTPHeaders {
    struct fbvector<proxygen::HTTPHeaderCode, std::__1::allocator<proxygen::HTTPHeaderCode>> _field1;
    struct fbvector<const std::__1::basic_string<char>*, std::__1::allocator<const std::__1::basic_string<char>*>> _field2;
    struct fbvector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> _field3;
    unsigned long long _field4;
};

struct HTTPRequest {
    basic_string_a490aa4c _field1;
    struct URL _field2;
    unsigned char _field3;
    basic_string_a490aa4c _field4;
    struct HTTPHeaders _field5;
    _Bool _field6;
    unsigned char _field7;
    unsigned int _field8;
    basic_string_a490aa4c _field9;
    struct duration<long long, std::__1::ratio<1, 1000>> _field10;
    struct duration<long long, std::__1::ratio<1, 1000>> _field11;
    map_5554a4ce _field12;
};

struct HTTPResponse {
    unsigned short _field1;
    basic_string_a490aa4c _field2;
    struct HTTPHeaders _field3;
};

struct HTTPTransactionAdaptorFactory;

struct IAudioComponent;

struct IDeformationEvents;

struct IExperimentConfig;

struct IGAccountSettingsOverflowRows {
    _Bool savedOverflow;
};

struct IGAddressRangeScanner;

struct IGAssetKitCompressionInfo {
    double _field1;
    double _field2;
    _Bool _field3;
};

struct IGAssetNetworkerRetryParams {
    long long maxRetries;
    long long minTimeBetweenRetries;
    long long maxTimeBetweenRetries;
};

struct IGAssetNetworkerRetryState {
    long long numAttemptsCompleted;
    double timeToRetry;
};

struct IGAssetSelectionMechanic {
    unsigned long long options;
    unsigned long long maxSelectionCount;
};

struct IGAttitudeSample;

struct IGCameraPreviewInfo {
    long long cameraPosition;
    struct CGSize previewSize;
    struct UIEdgeInsets safeArea;
};

struct IGCompositionFilterTransform {
    struct CGPoint scale;
    struct CGPoint translation;
    double rotation;
};

struct IGCropInfo {
    struct CGSize _field1;
    struct CGPoint _field2;
    struct CGPoint _field3;
    struct CGPoint _field4;
};

struct IGDistributedNetworkDispatcherConfiguration {
    long long lowConcurrencyImageOperationCount;
    long long highConcurrencyImageOperationCount;
    long long lowConcurrencyVideoOperationCount;
    long long highConcurrencyVideoOperationCount;
};

struct IGExpandableButtonLayouts {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
    double _field5;
    double _field6;
    double _field7;
    double _field8;
    double _field9;
    double _field10;
    double _field11;
    double _field12;
};

struct IGFrameSample {
    double _field1;
    double _field2;
};

struct IGGallerySectionLayout;

struct IGGridLayoutConfiguration {
    double interitemSpacing;
    struct UIEdgeInsets insets;
    long long mediasPerRow;
    double aspectRatio;
};

struct IGGyroSample;

struct IGListSectionEntry;

struct IGMallocDiskLogger;

struct IGMediaAssetTrancoderOptions {
    _Bool multipass;
    _Bool copiesSampleData;
};

struct IGMediaUploadFlowOptions {
    _Bool skipStatusFetchForFistTimeUpload;
    _Bool enableNonSegmentedProtocolIfPossible;
    _Bool skipCoverPhotoUpload;
    _Bool smarterSnapshotRecovering;
};

struct IGMediaUploadProgressInfo {
    double currentStepProgress;
    double overallProgress;
};

struct IGMediaUploadSegmentedUploaderOptions {
    _Bool skipStatusFetchForFistTimeUpload;
    _Bool enableNonSegmentedProtocol;
    _Bool useCheckpointing;
};

struct IGMemoryCacheStatistics {
    unsigned long long hits;
    unsigned long long misses;
};

struct IGNavigationBadgeParameters {
    long long _field1;
    long long _field2;
};

struct IGOrientationSample;

struct IGOverlayViewLocationInfo {
    struct CGPoint position;
    struct CGSize size;
    struct CGPoint translation;
    double scale;
    double rotation;
    _Bool isMirroredHorizontally;
};

struct IGOverlayViewTapInfo {
    struct CGPoint center;
    struct CGSize size;
    double rotation;
    long long zIndex;
};

struct IGPagingFocusOffsets {
    long long before;
    long long focused;
    long long after;
};

struct IGPercentageLayoutInfo {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
};

struct IGPerspectiveAdjustments {
    union _GLKMatrix4 _field1;
    double _field2;
    struct IGPerspectiveRotation _field3;
    struct IGPerspectiveCrop _field4;
    struct CGSize _field5;
};

struct IGPerspectiveCrop {
    struct CGPoint _field1;
    struct CGSize _field2;
    double _field3;
    double _field4;
};

struct IGPerspectiveRotation {
    double _field1;
    double _field2;
    double _field3;
};

struct IGProfileNavButtonExperiments {
    _Bool meOnlyEnabled;
    _Bool moveSettingsEnabled;
    _Bool layoutUpdateEnabled;
    _Bool favoritesEnabled;
    _Bool friendCodeEnabled;
    _Bool facebookEntrypointEnabled;
};

struct IGProfileNavigationIcons {
    id _field1;
    id _field2;
    id _field3;
    id _field4;
    id _field5;
    id _field6;
    id _field7;
};

struct IGQuickPerformanceLoggerDelegate;

struct IGRegion {
    struct CGPoint _field1;
    struct CGSize _field2;
    double _field3;
};

struct IGSectionEntry;

struct IGTimeInfo {
    long long _field1;
    long long _field2;
};

struct IGVideoCompositionOptions {
    _Bool enabled;
    struct CGAffineTransform layerInstructionTransform;
    struct CGSize renderSize;
};

struct ILogger {
    CDUnknownFunctionPointerType *_field1;
};

struct IMkvReader;

struct IMotionDataProvider;

struct IScriptingLogger {
    CDUnknownFunctionPointerType *_field1;
};

struct IServiceHost {
    CDUnknownFunctionPointerType *_field1;
};

struct ISessionPlayer;

struct ISessionRecorder;

struct IShaderLogger;

struct IViewport;

struct ImageMetadata {
    int _field1;
    int _field2;
    int _field3;
    float _field4;
    _Bool _field5;
};

struct Info {
    struct Optional<std::__1::basic_string<char>> _field1;
};

struct InlineSerialExecutor;

struct Instance;

struct JKConstBuffer {
    struct JKConstPtrRange _field1;
};

struct JKConstPtrRange {
    char *_field1;
    unsigned long long _field2;
};

struct JKEncodeCache {
    id _field1;
    unsigned long long _field2;
    unsigned long long _field3;
};

struct JKEncodeState {
    struct JKManagedBuffer _field1;
    struct JKManagedBuffer _field2;
    unsigned long long _field3;
    struct JKFastClassLookup _field4;
    struct JKEncodeCache _field5[1024];
    unsigned long long _field6;
    unsigned long long _field7;
    unsigned long long _field8;
    id _field9;
    id _field10;
    SEL _field11;
    CDUnknownFunctionPointerType _field12;
    CDUnknownBlockType _field13;
};

struct JKFastClassLookup {
    void *_field1;
    void *_field2;
    void *_field3;
    void *_field4;
    void *_field5;
};

struct JKHashTableEntry {
    unsigned long long _field1;
    id _field2;
    id _field3;
};

struct JKManagedBuffer {
    struct JKPtrRange _field1;
    unsigned long long _field2;
    unsigned long long _field3;
};

struct JKObjCImpCache {
    Class _field1;
    CDUnknownFunctionPointerType _field2;
    CDUnknownFunctionPointerType _field3;
};

struct JKObjectStack {
    void **_field1;
    void **_field2;
    unsigned long long *_field3;
    unsigned long long _field4;
    unsigned long long _field5;
    unsigned long long _field6;
    unsigned long long _field7;
};

struct JKParseState {
    unsigned long long _field1;
    struct JKConstBuffer _field2;
    unsigned long long _field3;
    unsigned long long _field4;
    unsigned long long _field5;
    unsigned long long _field6;
    unsigned long long _field7;
    unsigned long long _field8;
    unsigned long long _field9;
    struct JKParseToken _field10;
    struct JKObjectStack _field11;
    struct JKTokenCache _field12;
    struct JKObjCImpCache _field13;
    id _field14;
    int _field15;
    _Bool _field16;
};

struct JKParseToken {
    struct JKConstPtrRange _field1;
    unsigned long long _field2;
    struct JKTokenValue _field3;
    struct JKManagedBuffer _field4;
};

struct JKPtrRange {
    char *_field1;
    unsigned long long _field2;
};

struct JKTokenCache {
    struct JKTokenCacheItem *_field1;
    unsigned long long _field2;
    unsigned int _field3;
    unsigned char _field4[1024];
};

struct JKTokenCacheItem;

struct JKTokenValue {
    struct JKConstPtrRange _field1;
    unsigned long long _field2;
    unsigned long long _field3;
    union {
        long long _field1;
        unsigned long long _field2;
        double _field3;
    } _field4;
    struct JKTokenCacheItem *_field5;
};

struct JSExecutorFactory;

struct LigerPushNotificationCallback;

struct LiveTraceConfig {
    _Bool enabled;
    int sampleIntervalInSeconds;
    int samplingSource;
};

struct LiveTraceIDGenerator {
    struct linear_congruential_engine<unsigned int, 48271, 0, 2147483647> generator_;
    struct uniform_int_distribution<unsigned int> distribution_;
    long long lastTraceIDEmbedTimestamp_;
    struct LiveTraceConfig config_;
};

struct LockedPixelBuffer;

struct Logger;

struct MQTTChannelAnalytics;

struct MQTTChannelCoordinatorProxy;

struct Manifest {
    struct VersionNumber _field1;
    struct Optional<msqrd::manifest::FaceTrackerConfig> _field2;
    struct Optional<msqrd::manifest::HandTrackerConfig> _field3;
    struct Optional<msqrd::manifest::ObjectTrackerConfig> _field4;
    struct Optional<msqrd::manifest::BodyTrackerConfig> _field5;
    struct Optional<msqrd::manifest::StyleTransferConfig> _field6;
    struct Optional<msqrd::manifest::LiveStreamingConfig> _field7;
    struct Optional<msqrd::manifest::InstructionConfig> _field8;
    struct Optional<msqrd::manifest::AudioConfig> _field9;
    struct Optional<msqrd::manifest::InternalScriptingAPIConfig> _field10;
    struct Optional<msqrd::manifest::ShadersConfig> _field11;
    _Bool _field12;
    struct Optional<msqrd::manifest::VideoConfig> _field13;
    struct Optional<msqrd::manifest::NativeUIControlConfig> _field14;
    struct Optional<msqrd::manifest::LocationConfig> _field15;
    struct Optional<msqrd::manifest::CustomFontConfig> _field16;
    struct Optional<msqrd::manifest::SupportedOrientationsConfig> _field17;
    struct Optional<msqrd::manifest::DateConfig> _field18;
    struct Optional<msqrd::manifest::WeatherConfig> _field19;
    struct Optional<msqrd::manifest::AltitudeConfig> _field20;
    struct Optional<msqrd::manifest::SpeedConfig> _field21;
    struct Optional<msqrd::manifest::VolumeConfig> _field22;
    struct Optional<msqrd::manifest::InterEffectLinkingConfig> _field23;
    struct Optional<msqrd::manifest::PersonalizationConfig> _field24;
    struct Optional<msqrd::manifest::DynamicTextConfig> _field25;
    struct Optional<msqrd::manifest::CreativeToolProxyConfig> _field26;
    struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> _field27;
    unordered_set_7cdfe647 _field28;
    struct Optional<msqrd::manifest::WorldTrackerConfig> _field29;
    struct Optional<msqrd::manifest::NetworkingConfig> _field30;
    struct Optional<msqrd::manifest::SegmentationConfig> _field31;
    struct Optional<msqrd::manifest::TargetRecognitionConfig> _field32;
    struct Optional<msqrd::manifest::FaceWarpConfig> _field33;
    int _field34;
};

struct MessagePackParseState {
    struct FBNSStringCache cache;
};

struct Method {
    basic_string_a490aa4c _field1;
    unsigned long long _field2;
    struct function<void (folly::dynamic, std::__1::function<void (std::__1::vector<folly::dynamic, std::__1::allocator<folly::dynamic>>)>, std::__1::function<void (std::__1::vector<folly::dynamic, std::__1::allocator<folly::dynamic>>)>)> _field3;
    struct function<folly::dynamic (folly::dynamic)> _field4;
};

struct ModuleRegistry;

struct MotionDataProvider;

struct Mutex {
    struct _opaque_pthread_mutex_t _m;
};

struct NSArray {
    Class _field1;
};

struct NSDictionary {
    Class _field1;
};

struct NSMapTable {
    Class _field1;
};

struct NSMutableArray {
    Class _field1;
};

struct NSMutableDictionary {
    Class _field1;
};

struct NSNumber {
    Class _field1;
};

struct NSObject {
    Class _field1;
};

struct NSString {
    Class _field1;
};

struct NSURL {
    Class _field1;
    id _field2;
    id _field3;
    void *_field4;
    void *_field5;
};

struct Network {
    double mWhPerTxSecond;
    double mWhPerTailSecond;
};

struct NetworkSession;

struct NetworkSessionFactory;

struct NetworkSpeedTestPingDetails;

struct NetworkSpeedTestStatus {
    int state;
    double estimatedUploadBandwidthInKBps;
    struct duration<long long, std::__1::ratio<1, 1000>> timeTaken;
    struct vector<facebook::mobile::xplat::livestreaming::NetworkSpeedTestPingDetails, std::__1::allocator<facebook::mobile::xplat::livestreaming::NetworkSpeedTestPingDetails>> measurements;
    _Bool speedTestPassesThreshold;
};

struct NetworkStatusMonitor {
    CDUnknownFunctionPointerType *_field1;
};

struct ObservableHelper<facebook::liger::LigerPushNotificationCallbackWrapper> {
    struct shared_ptr<facebook::mobile::xplat::executor::details::ObservableHelperImpl<facebook::mobile::xplat::executor::details::PointerObserverInfo<facebook::liger::LigerPushNotificationCallbackWrapper>>> _field1;
};

struct ObservableHelperImpl<facebook::mobile::xplat::executor::details::PointerObserverInfo<facebook::liger::LigerPushNotificationCallbackWrapper>>;

struct ObserverToken;

struct Optional<FBPJPEGEncodingInfo> {
    struct Storage storage_;
};

struct Optional<int> {
    _Bool has_value_;
    union {
        char empty_;
        int value_;
    } ;
};

struct Optional<msqrd::manifest::AltitudeConfig> {
    struct Storage _field1;
};

struct Optional<msqrd::manifest::AudioConfig> {
    struct Storage _field1;
};

struct Optional<msqrd::manifest::BodyTrackerConfig> {
    struct Storage _field1;
};

struct Optional<msqrd::manifest::CreativeToolProxyConfig> {
    struct Storage _field1;
};

struct Optional<msqrd::manifest::CustomFontConfig> {
    struct Storage _field1;
};

struct Optional<msqrd::manifest::DateConfig> {
    struct Storage _field1;
};

struct Optional<msqrd::manifest::DynamicTextConfig> {
    struct Storage _field1;
};

struct Optional<msqrd::manifest::FaceTrackerConfig> {
    struct Storage _field1;
};

struct Optional<msqrd::manifest::FaceWarpConfig> {
    struct Storage _field1;
};

struct Optional<msqrd::manifest::HandTrackerConfig> {
    struct Storage _field1;
};

struct Optional<msqrd::manifest::InstructionConfig> {
    struct Storage _field1;
};

struct Optional<msqrd::manifest::InterEffectLinkingConfig> {
    struct Storage _field1;
};

struct Optional<msqrd::manifest::InternalScriptingAPIConfig> {
    struct Storage _field1;
};

struct Optional<msqrd::manifest::LiveStreamingConfig> {
    struct Storage _field1;
};

struct Optional<msqrd::manifest::LocationConfig> {
    struct Storage _field1;
};

struct Optional<msqrd::manifest::NativeUIControlConfig> {
    struct Storage _field1;
};

struct Optional<msqrd::manifest::NetworkingConfig> {
    struct Storage _field1;
};

struct Optional<msqrd::manifest::ObjectTrackerConfig> {
    struct Storage _field1;
};

struct Optional<msqrd::manifest::PersonalizationConfig> {
    struct Storage _field1;
};

struct Optional<msqrd::manifest::SegmentationConfig> {
    struct Storage _field1;
};

struct Optional<msqrd::manifest::ShadersConfig> {
    struct Storage _field1;
};

struct Optional<msqrd::manifest::SpeedConfig> {
    struct Storage _field1;
};

struct Optional<msqrd::manifest::StyleTransferConfig> {
    struct Storage _field1;
};

struct Optional<msqrd::manifest::SupportedOrientationsConfig> {
    struct Storage _field1;
};

struct Optional<msqrd::manifest::TargetRecognitionConfig> {
    struct Storage _field1;
};

struct Optional<msqrd::manifest::VideoConfig> {
    struct Storage _field1;
};

struct Optional<msqrd::manifest::VolumeConfig> {
    struct Storage _field1;
};

struct Optional<msqrd::manifest::WeatherConfig> {
    struct Storage _field1;
};

struct Optional<msqrd::manifest::WorldTrackerConfig> {
    struct Storage _field1;
};

struct Optional<msqrd::shared_ref<const msqrd::services::IEffectDataSnapshotterCreator>> {
    struct Storage _field1;
};

struct Optional<msqrd::shared_ref<msqrd::logging::RenderTimeLogger>> {
    struct Storage _field1;
};

struct Optional<msqrd::shared_ref<msqrd::servicehost::AudioBufferUpdatableDataProviderCreator<msqrd::dataprovider::IAudioBufferDataProvider>>> {
    struct Storage storage_;
};

struct Optional<msqrd::shared_ref<msqrd::servicehost::BufferUpdatableDataProviderCreator<msqrd::dataprovider::IBodyTrackingDataProvider>>> {
    struct Storage storage_;
};

struct Optional<msqrd::shared_ref<msqrd::servicehost::BufferUpdatableDataProviderCreator<msqrd::dataprovider::IDepthDataProvider>>> {
    struct Storage storage_;
};

struct Optional<msqrd::shared_ref<msqrd::servicehost::BufferUpdatableDataProviderCreator<msqrd::dataprovider::IFaceTrackingDataProvider>>> {
    struct Storage storage_;
};

struct Optional<msqrd::shared_ref<msqrd::servicehost::BufferUpdatableDataProviderCreator<msqrd::dataprovider::IFrameBrightnessDataProvider>>> {
    struct Storage storage_;
};

struct Optional<msqrd::shared_ref<msqrd::servicehost::BufferUpdatableDataProviderCreator<msqrd::dataprovider::IHandTrackingDataProvider>>> {
    struct Storage storage_;
};

struct Optional<msqrd::shared_ref<msqrd::servicehost::BufferUpdatableDataProviderCreator<msqrd::dataprovider::IObjectTrackingDataProvider>>> {
    struct Storage storage_;
};

struct Optional<msqrd::shared_ref<msqrd::servicehost::BufferUpdatableDataProviderCreator<msqrd::dataprovider::IOpticalFlowDataProvider>>> {
    struct Storage storage_;
};

struct Optional<msqrd::shared_ref<msqrd::servicehost::BufferUpdatableDataProviderCreator<msqrd::dataprovider::ISegmentationDataProvider>>> {
    struct Storage storage_;
};

struct Optional<msqrd::shared_ref<msqrd::servicehost::BufferUpdatableDataProviderCreator<msqrd::dataprovider::ITargetTrackingDataProvider>>> {
    struct Storage storage_;
};

struct Optional<msqrd::shared_ref<msqrd::servicehost::BufferUpdatableDataProviderCreator<msqrd::dataprovider::IWorldTrackerDataProvider>>> {
    struct Storage storage_;
};

struct Optional<msqrd::shared_ref<msqrd::servicehost::BufferUpdatableDataProviderCreator<msqrd::dataprovider::IXRayDataProvider>>> {
    struct Storage storage_;
};

struct Optional<msqrd::shared_ref<msqrd::servicehost::BufferUpdatableDataProviderCreator<msqrd::services::ITargetRecognitionService>>> {
    struct Storage storage_;
};

struct Optional<msqrd::shared_ref<msqrd::servicehost::DataProviderCreator<msqrd::dataprovider::IDoodlingDataProvider>>> {
    struct Storage storage_;
};

struct Optional<msqrd::shared_ref<msqrd::servicehost::DataProviderCreator<msqrd::dataprovider::IMotionDataProvider>>> {
    struct Storage storage_;
};

struct Optional<msqrd::shared_ref<msqrd::servicehost::DataProviderCreator<msqrd::dataprovider::IMultiplayerDataProvider>>> {
    struct Storage storage_;
};

struct Optional<msqrd::shared_ref<msqrd::servicehost::DataProviderCreator<msqrd::dataprovider::ISpeedDataProvider>>> {
    struct Storage storage_;
};

struct Optional<msqrd::shared_ref<msqrd::servicehost::DataProviderCreator<msqrd::dataprovider::ITouchGesturesDataProvider>>> {
    struct Storage storage_;
};

struct Optional<msqrd::shared_ref<msqrd::servicehost::IEffectSessionListener>> {
    struct Storage _field1;
};

struct Optional<msqrd::shared_ref<msqrd::servicehost::ServiceCreator<msqrd::services::IAudioService>>> {
    struct Storage storage_;
};

struct Optional<msqrd::shared_ref<msqrd::servicehost::ServiceCreator<msqrd::services::ICameraControlService>>> {
    struct Storage storage_;
};

struct Optional<msqrd::shared_ref<msqrd::servicehost::ServiceCreator<msqrd::services::ICameraShareService>>> {
    struct Storage storage_;
};

struct Optional<msqrd::shared_ref<msqrd::servicehost::ServiceCreator<msqrd::services::ICaptureEventService>>> {
    struct Storage storage_;
};

struct Optional<msqrd::shared_ref<msqrd::servicehost::ServiceCreator<msqrd::services::ICreativeToolProxyService>>> {
    struct Storage storage_;
};

struct Optional<msqrd::shared_ref<msqrd::servicehost::ServiceCreator<msqrd::services::IDateService>>> {
    struct Storage storage_;
};

struct Optional<msqrd::shared_ref<msqrd::servicehost::ServiceCreator<msqrd::services::IDeepLinkAssetProvider>>> {
    struct Storage storage_;
};

struct Optional<msqrd::shared_ref<msqrd::servicehost::ServiceCreator<msqrd::services::IExternalAssetProvider>>> {
    struct Storage storage_;
};

struct Optional<msqrd::shared_ref<msqrd::servicehost::ServiceCreator<msqrd::services::IHTTPClientService>>> {
    struct Storage storage_;
};

struct Optional<msqrd::shared_ref<msqrd::servicehost::ServiceCreator<msqrd::services::IIdentityService>>> {
    struct Storage storage_;
};

struct Optional<msqrd::shared_ref<msqrd::servicehost::ServiceCreator<msqrd::services::IInstructionService>>> {
    struct Storage storage_;
};

struct Optional<msqrd::shared_ref<msqrd::servicehost::ServiceCreator<msqrd::services::IInterEffectLinkingService>>> {
    struct Storage storage_;
};

struct Optional<msqrd::shared_ref<msqrd::servicehost::ServiceCreator<msqrd::services::ILiveStreamingService>>> {
    struct Storage storage_;
};

struct Optional<msqrd::shared_ref<msqrd::servicehost::ServiceCreator<msqrd::services::ILocaleService>>> {
    struct Storage storage_;
};

struct Optional<msqrd::shared_ref<msqrd::servicehost::ServiceCreator<msqrd::services::ILocationService>>> {
    struct Storage storage_;
};

struct Optional<msqrd::shared_ref<msqrd::servicehost::ServiceCreator<msqrd::services::IMultiplayerService>>> {
    struct Storage storage_;
};

struct Optional<msqrd::shared_ref<msqrd::servicehost::ServiceCreator<msqrd::services::IMusicService>>> {
    struct Storage storage_;
};

struct Optional<msqrd::shared_ref<msqrd::servicehost::ServiceCreator<msqrd::services::INativeNavigationService>>> {
    struct Storage storage_;
};

struct Optional<msqrd::shared_ref<msqrd::servicehost::ServiceCreator<msqrd::services::INativeUIControlService>>> {
    struct Storage storage_;
};

struct Optional<msqrd::shared_ref<msqrd::servicehost::ServiceCreator<msqrd::services::IPersonalizationService>>> {
    struct Storage storage_;
};

struct Optional<msqrd::shared_ref<msqrd::servicehost::ServiceCreator<msqrd::services::IPhysicsService>>> {
    struct Storage storage_;
};

struct Optional<msqrd::shared_ref<msqrd::servicehost::ServiceCreator<msqrd::services::IPluginConfigurationService>>> {
    struct Storage storage_;
};

struct Optional<msqrd::shared_ref<msqrd::servicehost::ServiceCreator<msqrd::services::IRandomGeneratorService>>> {
    struct Storage storage_;
};

struct Optional<msqrd::shared_ref<msqrd::servicehost::ServiceCreator<msqrd::services::IRenderOptionsService>>> {
    struct Storage storage_;
};

struct Optional<msqrd::shared_ref<msqrd::servicehost::ServiceCreator<msqrd::services::IScriptAnalyticsService>>> {
    struct Storage storage_;
};

struct Optional<msqrd::shared_ref<msqrd::servicehost::ServiceCreator<msqrd::services::IStyleTransferProvider>>> {
    struct Storage storage_;
};

struct Optional<msqrd::shared_ref<msqrd::servicehost::ServiceCreator<msqrd::services::IWeatherService>>> {
    struct Storage storage_;
};

struct Optional<msqrd::shared_ref<msqrd::servicehost::UpdatableDataProviderCreator<msqrd::dataprovider::IVolumeDataProvider>>> {
    struct Storage storage_;
};

struct Optional<msqrd::shared_ref<msqrd::servicehost::UpdatableDataProviderCreator<msqrd::services::IVideoDataService>>> {
    struct Storage storage_;
};

struct Optional<msqrd::shared_ref<msqrd::services::IServiceConfiguration>> {
    struct Storage _field1;
};

struct Optional<std::__1::basic_string<char>> {
    struct Storage _field1;
};

struct Optional<std::__1::pair<FBMPVideoData *, FBMPDataMetadata>> {
    struct Storage storage_;
};

struct Optional<unsigned int> {
    struct Storage _field1;
};

struct Optional<webrtc::PpsParser::PpsState> {
    _Bool has_value_;
    union {
        char empty_;
        struct PpsState value_;
    } ;
};

struct Optional<webrtc::SpsParser::SpsState> {
    _Bool has_value_;
    union {
        char empty_;
        struct SpsState value_;
    } ;
};

struct POPAnimatorItem;

struct PartialReliabilityConfig {
    int percentBFramesToDrop;
    int percentPFramesToDrop;
};

struct PixelSize {
    unsigned int _field1;
    unsigned int _field2;
};

struct PowerModelConfig {
    basic_string_a490aa4c deviceType;
    double baseline;
    struct Display display;
    struct Network network;
    struct Video video;
    struct CPU cpuHighFreq;
    struct CPU cpuLowFreq;
};

struct PowerSnapshot {
    double displayEnergy;
    double networkEnergy;
    double cameraEnergy;
    double cpuEnergy;
    double totalEnergy;
    int nwakeups;
    int nErrors;
    unsigned short nTxSeconds;
    unsigned short nTailSeconds;
    unsigned long long nBytesSentUnknown;
    unsigned long long nBytesSentCell;
    unsigned long long nBytesSentWifi;
    unsigned long long nBytesRecvUnknown;
    unsigned long long nBytesRecvCell;
    unsigned long long nBytesRecvWifi;
    unsigned int backCameraOnSec;
    unsigned int frontCameraOnSec;
    float accumulativeDisplayBrightness;
    double accumulativeFGTime;
};

struct PpsState {
    _Bool bottom_field_pic_order_in_frame_present_flag;
    _Bool weighted_pred_flag;
    _Bool entropy_coding_mode_flag;
    unsigned int weighted_bipred_idc;
    unsigned int redundant_pic_cnt_present_flag;
    int pic_init_qp_minus26;
    unsigned int id;
    unsigned int sps_id;
};

struct PreviewPixelSize {
    unsigned int _field1;
    unsigned int _field2;
};

struct ProcessPMCpuStat {
    unsigned long long total_user;
    unsigned long long total_system;
    unsigned long long task_interrupt_wakeups;
    unsigned long long task_platform_idle_wakeups;
    unsigned long long task_gpu_utilisation;
};

struct Promise<FB::Functional::Either<NSError *, FBDiskVideoRecorderDiskResults *>>;

struct PromiseEither<NSError *, FBDiskVideoRecorderDiskResults *> {
    struct shared_ptr<FB::Promise<FB::Functional::Either<NSError *, FBDiskVideoRecorderDiskResults *>>> _field1;
};

struct PromiseEither<NSError *, FBVideoSimpleRecorderResult *>;

struct QuickPerformanceLogger;

struct QuickPerformanceLoggerBase;

struct RCTLayoutContext {
    struct CGPoint _field1;
    id _field2;
    id _field3;
};

struct RCTLayoutMetrics {
    struct CGRect frame;
    struct CGRect contentFrame;
    struct UIEdgeInsets borderWidth;
    long long displayType;
    long long layoutDirection;
};

struct RCTMessageThread;

struct RCTMethodInfo {
    char *_field1;
    char *_field2;
    _Bool _field3;
};

struct RadioMonitor {
    struct multiset<proxygen::battery::RadioMonitor::TransferData, proxygen::battery::RadioMonitor::sortByStartTime, std::__1::allocator<proxygen::battery::RadioMonitor::TransferData>> _field1;
    long long _field2;
    struct map<std::__1::basic_string<char>, double, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, double>>> _field3;
    struct map<std::__1::basic_string<char>, proxygen::battery::RadioMonitor::AggregationDataByCallPath, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, proxygen::battery::RadioMonitor::AggregationDataByCallPath>>> _field4;
    long long _field5;
    long long _field6;
};

struct RadioStatusObserver {
    CDUnknownFunctionPointerType *_field1;
    struct RadioMonitor _field2;
    struct TimeUtilGeneric<std::__1::chrono::steady_clock> _field3;
    struct mutex _field4;
    struct unique_ptr<folly::Executor, std::__1::default_delete<folly::Executor>> _field5;
};

struct Range<const msqrd::platform::IScriptingLogger::WatchEntry *> {
    struct WatchEntry *_field1;
    struct WatchEntry *_field2;
};

struct ReachabilityAnnouncer;

struct RenderSession;

struct RequestHandlerFactory;

struct RequestStats {
    vector_31c84f95 _field1;
};

struct RtmpSSLFactory;

struct RtmpSessionCallback;

struct SMPTETime {
    short mSubframes;
    short mSubframeDivisor;
    unsigned int mCounter;
    unsigned int mType;
    unsigned int mFlags;
    short mHours;
    short mMinutes;
    short mSeconds;
    short mFrames;
};

struct SSLKeyMaterialCallback {
    CDUnknownFunctionPointerType *_field1;
};

struct SSState<POP::Vector4<double>> {
    struct Vector4<double> _field1;
    struct Vector4<double> _field2;
};

struct ScriptLogger;

struct SeekHead;

struct Segment {
    struct IMkvReader *_field1;
    long long _field2;
    long long _field3;
    long long _field4;
    struct Cluster _field5;
    long long _field6;
    struct Cluster *_field7;
    struct SeekHead *_field8;
    struct SegmentInfo *_field9;
    struct Tracks *_field10;
    struct Cues *_field11;
    struct Chapters *_field12;
    struct Tags *_field13;
    struct Cluster **_field14;
    long long _field15;
    long long _field16;
    long long _field17;
};

struct SegmentInfo;

struct SerialDispatchQueueExecutor;

struct SerialExecutor;

struct ServiceCreatorRegistry {
    struct Optional<msqrd::shared_ref<msqrd::servicehost::ServiceCreator<msqrd::services::IDateService>>> dateServiceCreator;
    struct Optional<msqrd::shared_ref<msqrd::servicehost::ServiceCreator<msqrd::services::IIdentityService>>> identityServiceCreator;
    struct Optional<msqrd::shared_ref<msqrd::servicehost::ServiceCreator<msqrd::services::IStyleTransferProvider>>> styleTransferProviderCreator;
    struct Optional<msqrd::shared_ref<msqrd::servicehost::ServiceCreator<msqrd::services::ICaptureEventService>>> captureEventServiceCreator;
    struct Optional<msqrd::shared_ref<msqrd::servicehost::ServiceCreator<msqrd::services::IInstructionService>>> instructionServiceCreator;
    struct Optional<msqrd::shared_ref<msqrd::servicehost::ServiceCreator<msqrd::services::IInterEffectLinkingService>>> interEffectLinkingServiceCreator;
    struct Optional<msqrd::shared_ref<msqrd::servicehost::ServiceCreator<msqrd::services::IPersonalizationService>>> personalizationServiceCreator;
    struct Optional<msqrd::shared_ref<msqrd::servicehost::ServiceCreator<msqrd::services::IScriptAnalyticsService>>> scriptAnalyticsServiceCreator;
    struct Optional<msqrd::shared_ref<msqrd::servicehost::ServiceCreator<msqrd::services::ILocaleService>>> localeServiceCreator;
    struct Optional<msqrd::shared_ref<msqrd::servicehost::ServiceCreator<msqrd::services::IPhysicsService>>> physicsServiceCreator;
    struct Optional<msqrd::shared_ref<msqrd::servicehost::ServiceCreator<msqrd::services::IWeatherService>>> weatherServiceCreator;
    struct Optional<msqrd::shared_ref<msqrd::servicehost::ServiceCreator<msqrd::services::IMusicService>>> musicServiceCreator;
    struct Optional<msqrd::shared_ref<msqrd::servicehost::ServiceCreator<msqrd::services::IMultiplayerService>>> multiplayerServiceCreator;
    struct Optional<msqrd::shared_ref<msqrd::servicehost::ServiceCreator<msqrd::services::INativeUIControlService>>> nativeUIControlServiceCreator;
    struct Optional<msqrd::shared_ref<msqrd::servicehost::ServiceCreator<msqrd::services::ICameraControlService>>> cameraControlServiceCreator;
    struct Optional<msqrd::shared_ref<msqrd::servicehost::ServiceCreator<msqrd::services::ICameraShareService>>> cameraShareServiceCreator;
    struct Optional<msqrd::shared_ref<msqrd::servicehost::ServiceCreator<msqrd::services::IDeepLinkAssetProvider>>> deepLinkAssetProviderCreator;
    struct Optional<msqrd::shared_ref<msqrd::servicehost::ServiceCreator<msqrd::services::IPluginConfigurationService>>> pluginConfigurationService;
    struct Optional<msqrd::shared_ref<msqrd::servicehost::ServiceCreator<msqrd::services::ICreativeToolProxyService>>> creativeToolProxyServiceCreator;
    struct Optional<msqrd::shared_ref<msqrd::servicehost::ServiceCreator<msqrd::services::IRenderOptionsService>>> renderOptionsServiceCreator;
    struct Optional<msqrd::shared_ref<msqrd::servicehost::ServiceCreator<msqrd::services::ILiveStreamingService>>> liveStreamingServiceCreator;
    struct Optional<msqrd::shared_ref<msqrd::servicehost::ServiceCreator<msqrd::services::IRandomGeneratorService>>> randomGeneratorServiceCreator;
    struct Optional<msqrd::shared_ref<msqrd::servicehost::ServiceCreator<msqrd::services::ILocationService>>> locationServiceCreator;
    struct Optional<msqrd::shared_ref<msqrd::servicehost::ServiceCreator<msqrd::services::IHTTPClientService>>> httpClientServiceCreator;
    struct Optional<msqrd::shared_ref<msqrd::servicehost::ServiceCreator<msqrd::services::IExternalAssetProvider>>> externalAssetServiceCreator;
    struct Optional<msqrd::shared_ref<msqrd::servicehost::ServiceCreator<msqrd::services::INativeNavigationService>>> nativeNavigationServiceCreator;
    struct Optional<msqrd::shared_ref<msqrd::servicehost::ServiceCreator<msqrd::services::IAudioService>>> audioServiceCreator;
    struct Optional<msqrd::shared_ref<msqrd::servicehost::BufferUpdatableDataProviderCreator<msqrd::dataprovider::IDepthDataProvider>>> depthDataProviderCreator;
    struct Optional<msqrd::shared_ref<msqrd::servicehost::BufferUpdatableDataProviderCreator<msqrd::dataprovider::IOpticalFlowDataProvider>>> opticalFlowDataProviderCreator;
    struct Optional<msqrd::shared_ref<msqrd::servicehost::BufferUpdatableDataProviderCreator<msqrd::dataprovider::ISegmentationDataProvider>>> segmentationDataProviderCreator;
    struct Optional<msqrd::shared_ref<msqrd::servicehost::BufferUpdatableDataProviderCreator<msqrd::dataprovider::IXRayDataProvider>>> XRayDataProviderCreator;
    struct Optional<msqrd::shared_ref<msqrd::servicehost::BufferUpdatableDataProviderCreator<msqrd::dataprovider::IObjectTrackingDataProvider>>> objectTrackingDataProviderCreator;
    struct Optional<msqrd::shared_ref<msqrd::servicehost::BufferUpdatableDataProviderCreator<msqrd::dataprovider::IHandTrackingDataProvider>>> handTrackingDataProviderCreator;
    struct Optional<msqrd::shared_ref<msqrd::servicehost::BufferUpdatableDataProviderCreator<msqrd::dataprovider::IBodyTrackingDataProvider>>> bodyTrackingDataProviderCreator;
    struct Optional<msqrd::shared_ref<msqrd::servicehost::DataProviderCreator<msqrd::dataprovider::IMotionDataProvider>>> motionDataProviderCreator;
    struct Optional<msqrd::shared_ref<msqrd::servicehost::DataProviderCreator<msqrd::dataprovider::IMultiplayerDataProvider>>> multiplayerDataProviderCreator;
    struct Optional<msqrd::shared_ref<msqrd::servicehost::DataProviderCreator<msqrd::dataprovider::ISpeedDataProvider>>> speedDataProviderCreator;
    struct Optional<msqrd::shared_ref<msqrd::servicehost::BufferUpdatableDataProviderCreator<msqrd::dataprovider::IWorldTrackerDataProvider>>> worldTrackingDataProviderCreator;
    struct Optional<msqrd::shared_ref<msqrd::servicehost::UpdatableDataProviderCreator<msqrd::dataprovider::IVolumeDataProvider>>> volumeDataProviderCreator;
    struct Optional<msqrd::shared_ref<msqrd::servicehost::BufferUpdatableDataProviderCreator<msqrd::dataprovider::IFaceTrackingDataProvider>>> faceTrackingDataProviderCreator;
    struct Optional<msqrd::shared_ref<msqrd::servicehost::DataProviderCreator<msqrd::dataprovider::IDoodlingDataProvider>>> doodlingDataProviderCreator;
    struct Optional<msqrd::shared_ref<msqrd::servicehost::BufferUpdatableDataProviderCreator<msqrd::dataprovider::IFrameBrightnessDataProvider>>> frameBrightnessDataProviderCreator;
    struct Optional<msqrd::shared_ref<msqrd::servicehost::BufferUpdatableDataProviderCreator<msqrd::dataprovider::ITargetTrackingDataProvider>>> targetTrackingDataProviderCreator;
    struct Optional<msqrd::shared_ref<msqrd::servicehost::DataProviderCreator<msqrd::dataprovider::ITouchGesturesDataProvider>>> touchGesturesDataProviderCreator;
    struct Optional<msqrd::shared_ref<msqrd::servicehost::BufferUpdatableDataProviderCreator<msqrd::services::ITargetRecognitionService>>> targetRecognitionServiceCreator;
    struct Optional<msqrd::shared_ref<msqrd::servicehost::AudioBufferUpdatableDataProviderCreator<msqrd::dataprovider::IAudioBufferDataProvider>>> audioBufferDataProviderCreator;
    struct Optional<msqrd::shared_ref<msqrd::servicehost::UpdatableDataProviderCreator<msqrd::services::IVideoDataService>>> videoDataServiceCreator;
};

struct ServiceHost;

struct ServiceType {
    int _field1;
};

struct SettingsFlags {
    _Bool allowAncillarySettings;
    _Bool allowArchiveSettings;
    _Bool allowReshareSettings;
    _Bool allowShareToFacebook;
};

struct ShaderLogger;

struct SimpleVideoRecorder;

struct SpeedTestConfig {
    int speedTestPayloadSize;
    int speedTestPayloadChunkSize;
    struct duration<double, std::__1::ratio<1, 1>> speedTestWaitResponseTimeoutInSeconds;
    double speedTestMinimumBandwidthThreshold;
    int speedTestRetryMaxCount;
    struct duration<double, std::__1::ratio<1, 1>> speedTestRetryTimeDelay;
    _Bool speedTestDisable;
    _Bool runAfterConnect;
};

struct SpringSolver<POP::Vector4<double>> {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
    double _field5;
    double _field6;
    double _field7;
    struct SSState<POP::Vector4<double>> _field8;
    struct Vector4<double> _field9;
    _Bool _field10;
};

struct SpsState {
    unsigned int width;
    unsigned int height;
    unsigned int delta_pic_order_always_zero_flag;
    unsigned int separate_colour_plane_flag;
    unsigned int frame_mbs_only_flag;
    unsigned int log2_max_frame_num_minus4;
    unsigned int log2_max_pic_order_cnt_lsb_minus4;
    unsigned int pic_order_cnt_type;
    unsigned int max_num_ref_frames;
    unsigned int vui_params_present;
    unsigned int id;
};

struct Stabilizer;

struct StabilizerResult {
    _Bool _field1;
    struct vector<std::__1::array<double, 9>, std::__1::allocator<std::__1::array<double, 9>>> _field2;
    struct vector<std::__1::array<double, 4>, std::__1::allocator<std::__1::array<double, 4>>> _field3;
    double _field4;
    int _field5;
    double _field6;
    double _field7;
    double _field8;
};

struct StabilizerSettings;

struct Storage {
    _Bool hasValue_;
    struct type value_[1];
};

struct Tags;

struct TasksScheduler;

struct ThreadTime;

struct ThroughputMonitorConfig {
    double exponentialAverageDecayConstant;
};

struct TigonCallbacks {
    CDUnknownFunctionPointerType *_field1;
};

struct TigonHTTPHeader;

struct TigonLigerServicePolicy {
    _Bool _field1;
    _Bool _field2;
    _Bool _field3;
    int _field4;
};

struct TigonPriorityData {
    short _field1;
    unsigned short _field2;
};

struct TigonRequest {
    struct shared_ptr<std::__1::unordered_map<const char *, std::__1::shared_ptr<const facebook::tigon::TigonLayeredInformation<facebook::tigon::TigonRequest>::LayeredObject>, facebook::tigon::details::CharHash, facebook::tigon::details::CharCompare, std::__1::allocator<std::__1::pair<const char *const, std::__1::shared_ptr<const facebook::tigon::TigonLayeredInformation<facebook::tigon::TigonRequest>::LayeredObject>>>>> _field1;
    basic_string_a490aa4c _field2;
    basic_string_a490aa4c _field3;
    struct vector<facebook::tigon::TigonHTTPHeader, std::__1::allocator<facebook::tigon::TigonHTTPHeader>> _field4;
    struct TigonPriorityData _field5;
};

struct TigonRequestToken;

struct TigonService {
    CDUnknownFunctionPointerType *_field1;
};

struct TigonStack;

struct TigonSummary {
    struct shared_ptr<std::__1::unordered_map<const char *, std::__1::shared_ptr<const facebook::tigon::TigonLayeredInformation<facebook::tigon::TigonSummary>::LayeredObject>, facebook::tigon::details::CharHash, facebook::tigon::details::CharCompare, std::__1::allocator<std::__1::pair<const char *const, std::__1::shared_ptr<const facebook::tigon::TigonLayeredInformation<facebook::tigon::TigonSummary>::LayeredObject>>>>> _field1;
};

struct TimeSeriesLog {
    CDUnknownFunctionPointerType *_field1;
    struct mutex _field2;
    unsigned long long _field3;
    struct shared_ptr<unsigned long> _field4;
    unsigned long long _field5;
    struct shared_ptr<rtc::tslog::TsCounterStorageManager> _field6;
    struct shared_ptr<rtc::tslog::TsLogCompactStorage> _field7;
    struct vector<std::__1::shared_ptr<rtc::tslog::TimeSeriesStream>, std::__1::allocator<std::__1::shared_ptr<rtc::tslog::TimeSeriesStream>>> _field8;
    int _field9;
    struct TsDataLogHeader *_field10;
    _Bool _field11;
    struct unique_ptr<rtc::tslog::TasksScheduler, std::__1::default_delete<rtc::tslog::TasksScheduler>> _field12;
    unsigned long long _field13;
    long long _field14;
    struct TimeSeriesStreamWrapper _field15;
    struct vector<unsigned char, std::__1::allocator<unsigned char>> _field16;
    struct vector<unsigned int, std::__1::allocator<unsigned int>> _field17;
    struct CompactBitstreamWriter _field18;
    struct function<long long ()> _field19;
};

struct TimeSeriesStream;

struct TimeSeriesStreamWrapper {
    struct shared_ptr<rtc::tslog::TimeSeriesStream> stream_;
    _Bool is_owner_;
};

struct TimeUtilGeneric<std::__1::chrono::steady_clock> {
    CDUnknownFunctionPointerType *_field1;
};

struct TouchGesturesDataProvider;

struct TraceEvent;

struct TrackPosition {
    long long _field1;
    long long _field2;
    long long _field3;
};

struct TrackerKCF;

struct Tracks;

struct TsCounterStorageManager;

struct TsDataLogHeader;

struct TsLogCompactStorage;

struct UIEdgeInsets {
    double top;
    double left;
    double bottom;
    double right;
};

struct UIEvent {
    Class _field1;
};

struct UIImage {
    Class _field1;
};

struct UIOffset {
    double horizontal;
    double vertical;
};

struct URL {
    basic_string_a490aa4c _field1;
    basic_string_a490aa4c _field2;
    unsigned short _field3;
    basic_string_a490aa4c _field4;
    basic_string_a490aa4c _field5;
    basic_string_a490aa4c _field6;
    basic_string_a490aa4c _field7;
    _Bool _field8;
};

struct Vector4<double> {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
};

struct VersionNumber {
    unsigned int _field1;
    unsigned char _field2;
};

struct Video {
    double hiResFPS30Back;
    double lowResFPS30Back;
    double FPS60Back;
    double FPS120Back;
    double FPS240Back;
    double hiResFPS30Front;
    double lowResFPS30Front;
    double FPS60Front;
    double FPS120Front;
    double FPS240Front;
};

struct VideoConfig {
    int width;
    int height;
    int bitRate;
    int fps;
    _Bool allowBFrames;
    int keyFrameInterval;
    _Bool useMainProfile;
};

struct VideoPacketizer;

struct VideoPacketizerFactory;

struct VolumeLevelAudioTransform<short>;

struct WatchEntry;

struct WeakHolder {
    id _field1;
};

struct WhistleConnectionFactory;

struct YGValue {
    float value;
    int unit;
};

struct ZZCentralFileHeader {
    unsigned int _field1;
    unsigned char _field2;
    unsigned char _field3;
    unsigned short _field4;
    unsigned short _field5;
    unsigned short _field6;
    unsigned short _field7;
    unsigned short _field8;
    unsigned int _field9;
    unsigned int _field10;
    unsigned int _field11;
    unsigned short _field12;
    unsigned short _field13;
    unsigned short _field14;
    unsigned short _field15;
    unsigned short _field16;
    unsigned int _field17;
    unsigned int _field18;
};

struct ZZLocalFileHeader {
    unsigned int _field1;
    unsigned short _field2;
    unsigned short _field3;
    unsigned short _field4;
    unsigned short _field5;
    unsigned short _field6;
    unsigned int _field7;
    unsigned int _field8;
    unsigned int _field9;
    unsigned short _field10;
    unsigned short _field11;
};

struct ZZStandardCryptoEngine {
    int keys[3];
};

struct _CAEAGLNativeWindow;

struct _CALayerIvars {
    int _field1;
    unsigned int _field2;
    void *_field3;
};

struct _CPTEdgeInsets {
    double top;
    double left;
    double bottom;
    double right;
};

struct _CPTGradientElement {
    struct _CPTRGBAColor _field1;
    double _field2;
    struct _CPTGradientElement *_field3;
};

struct _CPTImageSlices {
    struct CGImage *slice[9];
};

struct _CPTNumericDataType {
    long long dataTypeFormat;
    unsigned long long sampleBytes;
    long long byteOrder;
};

struct _CPTRGBAColor {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
};

struct _GLKMatrix4 {
    float m[16];
};

struct _GLKVector2 {
    float _field1[2];
};

struct _GLKVector4 {
    float v[4];
};

struct _IGRange {
    double location;
    double length;
};

struct _NSRange {
    unsigned long long location;
    unsigned long long length;
};

struct _POPAnimationState {
    CDUnknownFunctionPointerType *_field1;
    id _field2;
    int _field3;
    id _field4;
    unsigned long long _field5;
    double _field6;
    double _field7;
    double _field8;
    id _field9;
    CDUnknownBlockType _field10;
    CDUnknownBlockType _field11;
    CDUnknownBlockType _field12;
    CDUnknownBlockType _field13;
    id _field14;
    id _field15;
    double _field16;
    long long _field17;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
};

struct _TagPolicyState {
    long long persisted;
    long long selected;
};

struct __hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerIndexPath, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerIndexPath, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerSectionControllerWrapper, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerSectionControllerWrapper, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<Class<IGUserSessionObject>, std::__1::shared_future<Value>>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<Class<IGUserSessionObject>, std::__1::shared_future<Value>>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<id, FBMPInternalFilterPerf>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<id, FBMPInternalFilterPerf>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *>*> *_field1;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, IGListMoveIndex *>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, IGListMoveIndex *>, void *>*> *_field1;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<msqrd::services::ServiceType::Enum, id<FBARServiceConfiguration>>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<msqrd::services::ServiceType::Enum, id<FBARServiceConfiguration>>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, double>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, double>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::basic_string<char>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::basic_string<char>, void *>*> *_field1;
};

struct __list_node_base<msqrd::services::AudioSourceConfig, void *> {
    struct __list_node_base<msqrd::services::AudioSourceConfig, void *> *__prev_;
    struct __list_node_base<msqrd::services::AudioSourceConfig, void *> *__next_;
};

struct __list_node_base<std::__1::shared_ptr<POPAnimatorItem>, void *> {
    struct __list_node_base<std::__1::shared_ptr<POPAnimatorItem>, void *> *__prev_;
    struct __list_node_base<std::__1::shared_ptr<POPAnimatorItem>, void *> *__next_;
};

struct __shared_weak_count;

struct __tree_end_node<std::__1::__tree_node_base<void *>*> {
    struct __tree_node_base<void *> *__left_;
};

struct _ftsent;

struct _mosquitto_packet {
    unsigned char _field1;
    unsigned char _field2;
    unsigned char _field3;
    unsigned short _field4;
    unsigned int _field5;
    unsigned long long _field6;
    unsigned long long _field7;
    unsigned long long _field8;
    unsigned long long _field9;
    char *_field10;
    struct _mosquitto_packet *_field11;
};

struct _opaque_pthread_mutex_t {
    long long __sig;
    char __opaque[56];
};

struct a8;

struct aligned_storage<16, 8> {
    union data_t data_;
};

struct allocator<IGGyroSample>;

struct array<double, 4>;

struct array<double, 9>;

struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
    struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
        struct __rep {
            union {
                struct __long {
                    char *__data_;
                    unsigned long long __size_;
                    unsigned long long __cap_;
                } __l;
                struct __short {
                    char __data_[23];
                    struct {
                        unsigned char __size_;
                    } ;
                } __s;
                struct __raw {
                    unsigned long long __words[3];
                } __r;
            } ;
        } __first_;
    } __r_;
};

struct circular_buffer<IGGyroSample, std::__1::allocator<IGGyroSample>> {
    struct IGGyroSample *m_buff;
    struct IGGyroSample *m_end;
    struct IGGyroSample *m_first;
    struct IGGyroSample *m_last;
    unsigned long long m_size;
    struct allocator<IGGyroSample> m_alloc;
};

struct duration<double, std::__1::ratio<1, 1>> {
    double __rep_;
};

struct duration<long long, std::__1::ratio<1, 1000000000>> {
    long long __rep_;
};

struct duration<long long, std::__1::ratio<1, 1000>> {
    long long __rep_;
};

struct fbvector<const std::__1::basic_string<char>*, std::__1::allocator<const std::__1::basic_string<char>*>> {
    struct Impl {
        basic_string_a490aa4c **_field1;
        basic_string_a490aa4c **_field2;
        basic_string_a490aa4c **_field3;
    } _field1;
};

struct fbvector<proxygen::HTTPHeaderCode, std::__1::allocator<proxygen::HTTPHeaderCode>> {
    struct Impl {
        unsigned char *_field1;
        unsigned char *_field2;
        unsigned char *_field3;
    } _field1;
};

struct fbvector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> {
    struct Impl {
        basic_string_a490aa4c *_field1;
        basic_string_a490aa4c *_field2;
        basic_string_a490aa4c *_field3;
    } _field1;
};

struct function<folly::dynamic (folly::dynamic)> {
    struct type _field1;
    struct __base<folly::dynamic (folly::dynamic)> *_field2;
};

struct function<long long ()> {
    struct type _field1;
    struct __base<long long ()> *_field2;
};

struct function<void (IGNetworkReachabilityStatus, IGNetworkReachabilityStatus)> {
    struct type __buf_;
    struct __base<void (IGNetworkReachabilityStatus, IGNetworkReachabilityStatus)> *__f_;
};

struct function<void (folly::dynamic, std::__1::function<void (std::__1::vector<folly::dynamic, std::__1::allocator<folly::dynamic>>)>, std::__1::function<void (std::__1::vector<folly::dynamic, std::__1::allocator<folly::dynamic>>)>)> {
    struct type _field1;
    struct __base<void (folly::dynamic, std::__1::function<void (std::__1::vector<folly::dynamic, std::__1::allocator<folly::dynamic>>)>, std::__1::function<void (std::__1::vector<folly::dynamic, std::__1::allocator<folly::dynamic>>)>)> *_field2;
};

struct in_addr {
    unsigned int _field1;
};

struct internal_state;

struct jpeg_color_deconverter;

struct jpeg_color_quantizer;

struct jpeg_d_coef_controller;

struct jpeg_d_main_controller;

struct jpeg_d_post_controller;

struct jpeg_decomp_master;

struct jpeg_decompress_struct {
    struct jpeg_error_mgr *err;
    struct jpeg_memory_mgr *mem;
    struct jpeg_progress_mgr *progress;
    void *client_data;
    int is_decompressor;
    int global_state;
    struct jpeg_source_mgr *src;
    unsigned int image_width;
    unsigned int image_height;
    int num_components;
    int jpeg_color_space;
    int out_color_space;
    unsigned int scale_num;
    unsigned int scale_denom;
    double output_gamma;
    int buffered_image;
    int raw_data_out;
    int dct_method;
    int do_fancy_upsampling;
    int do_block_smoothing;
    int quantize_colors;
    int dither_mode;
    int two_pass_quantize;
    int desired_number_of_colors;
    int enable_1pass_quant;
    int enable_external_quant;
    int enable_2pass_quant;
    unsigned int output_width;
    unsigned int output_height;
    int out_color_components;
    int output_components;
    int rec_outbuf_height;
    int actual_number_of_colors;
    char **colormap;
    unsigned int output_scanline;
    int input_scan_number;
    unsigned int input_iMCU_row;
    int output_scan_number;
    unsigned int output_iMCU_row;
    int (*coef_bits)[64];
    CDStruct_183601bc *quant_tbl_ptrs[4];
    CDStruct_183601bc *dc_huff_tbl_ptrs[4];
    CDStruct_183601bc *ac_huff_tbl_ptrs[4];
    int data_precision;
    CDStruct_183601bc *comp_info;
    int is_baseline;
    int progressive_mode;
    int arith_code;
    unsigned char arith_dc_L[16];
    unsigned char arith_dc_U[16];
    unsigned char arith_ac_K[16];
    unsigned int restart_interval;
    int saw_JFIF_marker;
    unsigned char JFIF_major_version;
    unsigned char JFIF_minor_version;
    unsigned char density_unit;
    unsigned short X_density;
    unsigned short Y_density;
    int saw_Adobe_marker;
    unsigned char Adobe_transform;
    int CCIR601_sampling;
    struct jpeg_marker_struct *marker_list;
    int max_h_samp_factor;
    int max_v_samp_factor;
    int min_DCT_h_scaled_size;
    int min_DCT_v_scaled_size;
    unsigned int total_iMCU_rows;
    char *sample_range_limit;
    int comps_in_scan;
    CDStruct_183601bc *cur_comp_info[4];
    unsigned int MCUs_per_row;
    unsigned int MCU_rows_in_scan;
    int blocks_in_MCU;
    int MCU_membership[10];
    int Ss;
    int Se;
    int Ah;
    int Al;
    int block_size;
    int *natural_order;
    int lim_Se;
    int unread_marker;
    struct jpeg_decomp_master *master;
    struct jpeg_d_main_controller *main;
    struct jpeg_d_coef_controller *coef;
    struct jpeg_d_post_controller *post;
    struct jpeg_input_controller *inputctl;
    struct jpeg_marker_reader *marker;
    struct jpeg_entropy_decoder *entropy;
    struct jpeg_inverse_dct *idct;
    struct jpeg_upsampler *upsample;
    struct jpeg_color_deconverter *cconvert;
    struct jpeg_color_quantizer *cquantize;
};

struct jpeg_entropy_decoder;

struct jpeg_error_mgr {
    CDUnknownFunctionPointerType error_exit;
    CDUnknownFunctionPointerType emit_message;
    CDUnknownFunctionPointerType output_message;
    CDUnknownFunctionPointerType format_message;
    CDUnknownFunctionPointerType reset_error_mgr;
    int msg_code;
    union {
        int i[8];
        char s[80];
    } msg_parm;
    int trace_level;
    long long num_warnings;
    char **jpeg_message_table;
    int last_jpeg_message;
    char **addon_message_table;
    int first_addon_message;
    int last_addon_message;
};

struct jpeg_input_controller;

struct jpeg_inverse_dct;

struct jpeg_marker_reader;

struct jpeg_marker_struct;

struct jpeg_memory_mgr;

struct jpeg_progress_mgr;

struct jpeg_source_mgr;

struct jpeg_upsampler;

struct linear_congruential_engine<unsigned int, 48271, 0, 2147483647> {
    unsigned int __x_;
};

struct list<msqrd::services::AudioSourceConfig, std::__1::allocator<msqrd::services::AudioSourceConfig>> {
    struct __list_node_base<msqrd::services::AudioSourceConfig, void *> __end_;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<msqrd::services::AudioSourceConfig, void *>>> {
        unsigned long long __first_;
    } __size_alloc_;
};

struct list<std::__1::shared_ptr<POPAnimatorItem>, std::__1::allocator<std::__1::shared_ptr<POPAnimatorItem>>> {
    struct __list_node_base<std::__1::shared_ptr<POPAnimatorItem>, void *> __end_;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<std::__1::shared_ptr<POPAnimatorItem>, void *>>> {
        unsigned long long __first_;
    } __size_alloc_;
};

struct malloc_introspection_t;

struct map<FBDataSegment, NSData *, cmpOfDataSegment, std::__1::allocator<std::__1::pair<const FBDataSegment, NSData *>>> {
    struct __tree<std::__1::__value_type<FBDataSegment, NSData *>, std::__1::__map_value_compare<FBDataSegment, std::__1::__value_type<FBDataSegment, NSData *>, cmpOfDataSegment, true>, std::__1::allocator<std::__1::__value_type<FBDataSegment, NSData *>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<FBDataSegment, NSData *>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<FBDataSegment, std::__1::__value_type<FBDataSegment, NSData *>, cmpOfDataSegment, true>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct map<double, boost::qvm::quat<double>, std::__1::less<double>, std::__1::allocator<std::__1::pair<const double, boost::qvm::quat<double>>>> {
    struct __tree<std::__1::__value_type<double, boost::qvm::quat<double>>, std::__1::__map_value_compare<double, std::__1::__value_type<double, boost::qvm::quat<double>>, std::__1::less<double>, true>, std::__1::allocator<std::__1::__value_type<double, boost::qvm::quat<double>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<double, boost::qvm::quat<double>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<double, std::__1::__value_type<double, boost::qvm::quat<double>>, std::__1::less<double>, true>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct map<int, IGRegion, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, IGRegion>>> {
    struct __tree<std::__1::__value_type<int, IGRegion>, std::__1::__map_value_compare<int, std::__1::__value_type<int, IGRegion>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, IGRegion>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, IGRegion>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<int, std::__1::__value_type<int, IGRegion>, std::__1::less<int>, true>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct map<std::__1::basic_string<char>, double, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, double>>> {
    struct __tree<std::__1::__value_type<std::__1::basic_string<char>, double>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, double>, std::__1::less<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, double>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, double>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, double>, std::__1::less<std::__1::basic_string<char>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::basic_string<char>, proxygen::battery::RadioMonitor::AggregationDataByCallPath, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, proxygen::battery::RadioMonitor::AggregationDataByCallPath>>> {
    struct __tree<std::__1::__value_type<std::__1::basic_string<char>, proxygen::battery::RadioMonitor::AggregationDataByCallPath>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, proxygen::battery::RadioMonitor::AggregationDataByCallPath>, std::__1::less<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, proxygen::battery::RadioMonitor::AggregationDataByCallPath>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, proxygen::battery::RadioMonitor::AggregationDataByCallPath>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, proxygen::battery::RadioMonitor::AggregationDataByCallPath>, std::__1::less<std::__1::basic_string<char>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char>>>> {
    struct __tree<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::less<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::less<std::__1::basic_string<char>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::basic_string<char>, std::__1::map<std::__1::basic_string<char>, double, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, double>>>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::map<std::__1::basic_string<char>, double, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, double>>>>>>;

struct map<std::__1::basic_string<char>, std::__1::shared_ptr<facebook::audiofiltercore::AudioSource<short>>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::shared_ptr<facebook::audiofiltercore::AudioSource<short>>>>> {
    struct __tree<std::__1::__value_type<std::__1::basic_string<char>, std::__1::shared_ptr<facebook::audiofiltercore::AudioSource<short>>>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::shared_ptr<facebook::audiofiltercore::AudioSource<short>>>, std::__1::less<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::shared_ptr<facebook::audiofiltercore::AudioSource<short>>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::shared_ptr<facebook::audiofiltercore::AudioSource<short>>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::shared_ptr<facebook::audiofiltercore::AudioSource<short>>>, std::__1::less<std::__1::basic_string<char>>, true>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct map<std::__1::basic_string<char>, std::__1::shared_ptr<std::__1::vector<std::__1::shared_ptr<facebook::audiofiltercore::AudioSource<short>>, std::__1::allocator<std::__1::shared_ptr<facebook::audiofiltercore::AudioSource<short>>>>>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::shared_ptr<std::__1::vector<std::__1::shared_ptr<facebook::audiofiltercore::AudioSource<short>>, std::__1::allocator<std::__1::shared_ptr<facebook::audiofiltercore::AudioSource<short>>>>>>>> {
    struct __tree<std::__1::__value_type<std::__1::basic_string<char>, std::__1::shared_ptr<std::__1::vector<std::__1::shared_ptr<facebook::audiofiltercore::AudioSource<short>>, std::__1::allocator<std::__1::shared_ptr<facebook::audiofiltercore::AudioSource<short>>>>>>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::shared_ptr<std::__1::vector<std::__1::shared_ptr<facebook::audiofiltercore::AudioSource<short>>, std::__1::allocator<std::__1::shared_ptr<facebook::audiofiltercore::AudioSource<short>>>>>>, std::__1::less<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::shared_ptr<std::__1::vector<std::__1::shared_ptr<facebook::audiofiltercore::AudioSource<short>>, std::__1::allocator<std::__1::shared_ptr<facebook::audiofiltercore::AudioSource<short>>>>>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::shared_ptr<std::__1::vector<std::__1::shared_ptr<facebook::audiofiltercore::AudioSource<short>>, std::__1::allocator<std::__1::shared_ptr<facebook::audiofiltercore::AudioSource<short>>>>>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::shared_ptr<std::__1::vector<std::__1::shared_ptr<facebook::audiofiltercore::AudioSource<short>>, std::__1::allocator<std::__1::shared_ptr<facebook::audiofiltercore::AudioSource<short>>>>>>, std::__1::less<std::__1::basic_string<char>>, true>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct mosquitto {
    struct _mosquitto_core {
        int _field1;
        char *_field2;
        char *_field3;
        char *_field4;
        char *_field5;
        unsigned short _field6;
        void *_field7;
        _Bool _field8;
        int _field9;
        long long _field10;
        long long _field11;
        unsigned short _field12;
        struct _mosquitto_packet _field13;
        struct _mosquitto_packet *_field14;
        struct mosquitto_message *_field15;
        struct mosquitto_callbacks _field16;
        _Bool _field17;
        _Bool _field18;
        void *_field19;
        char *_field20;
        char *_field21;
        int _field22;
    } _field1;
    unsigned int _field2;
    long long _field3;
    void *_field4;
    struct mosquitto_message_all *_field5;
    int _field6;
    int _field7;
    CDUnknownFunctionPointerType _field8;
    CDUnknownFunctionPointerType _field9;
    CDUnknownFunctionPointerType _field10;
    CDUnknownFunctionPointerType _field11;
    CDUnknownFunctionPointerType _field12;
    CDUnknownFunctionPointerType _field13;
    CDUnknownFunctionPointerType _field14;
};

struct mosquitto_callbacks {
    CDUnknownFunctionPointerType _field1;
    CDUnknownFunctionPointerType _field2;
    CDUnknownFunctionPointerType _field3;
    CDUnknownFunctionPointerType _field4;
    CDUnknownFunctionPointerType _field5;
};

struct mosquitto_message;

struct mosquitto_message_all;

struct msgpack_packer {
    void *_field1;
    CDUnknownFunctionPointerType _field2;
};

struct multiset<proxygen::battery::RadioMonitor::TransferData, proxygen::battery::RadioMonitor::sortByStartTime, std::__1::allocator<proxygen::battery::RadioMonitor::TransferData>> {
    struct __tree<proxygen::battery::RadioMonitor::TransferData, proxygen::battery::RadioMonitor::sortByStartTime, std::__1::allocator<proxygen::battery::RadioMonitor::TransferData>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<proxygen::battery::RadioMonitor::TransferData, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, proxygen::battery::RadioMonitor::sortByStartTime> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct mutex {
    struct _opaque_pthread_mutex_t __m_;
};

struct opaqueCMSampleBuffer;

struct pair<NSArray<FBCaptureCoordinatorFilter *>*, NSArray<FBCaptureCoordinatorFilter *>*> {
    id _field1;
    id _field2;
};

struct pair<id<FBMPInput>, id<FBMPOutput>> {
    id _field1;
    id _field2;
};

struct pair<id<FBMPProducerPort>, id<FBMPConsumerPort>>;

struct pair<std::__1::unordered_map<std::__1::basic_string<char>, std::__1::pair<double, double>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::pair<double, double>>>>, facebook::mobile::xplat::livestreaming::AdaptiveBitrateControlParameters>;

struct pair<void (^)(double), NSObject<OS_dispatch_queue>*>;

struct param_type {
    unsigned int __a_;
    unsigned int __b_;
};

struct quat<double> {
    double _field1[4];
};

struct recursive_mutex {
    struct _opaque_pthread_mutex_t __m_;
};

struct set<std::__1::pair<double, std::__1::basic_string<char>>, std::__1::less<std::__1::pair<double, std::__1::basic_string<char>>>, std::__1::allocator<std::__1::pair<double, std::__1::basic_string<char>>>> {
    struct __tree<std::__1::pair<double, std::__1::basic_string<char>>, std::__1::less<std::__1::pair<double, std::__1::basic_string<char>>>, std::__1::allocator<std::__1::pair<double, std::__1::basic_string<char>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::pair<double, std::__1::basic_string<char>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::less<std::__1::pair<double, std::__1::basic_string<char>>>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct shared_ptr<FB::Functional::PromiseEither<NSError *, FBDiskVideoRecorderDiskResults *>> {
    PromiseEither_ab4a425c *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<FB::Promise<FB::Functional::Either<NSError *, FBDiskVideoRecorderDiskResults *>>> {
    struct Promise<FB::Functional::Either<NSError *, FBDiskVideoRecorderDiskResults *>> *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<FBMQTTChannelConnectEventObserver> {
    struct FBMQTTChannelConnectEventObserver *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<FBMQTTChannelConnectionStateObserver> {
    struct FBMQTTChannelConnectionStateObserver *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<FBMQTTChannelEventLogger> {
    struct FBMQTTChannelEventLogger *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<FBMQTTChannelPublishEventObserver> {
    struct FBMQTTChannelPublishEventObserver *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<FBMQTTChannelSubscribeEventObserver> {
    struct FBMQTTChannelSubscribeEventObserver *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<FBVideoBroadcastSessionStats> {
    struct FBVideoBroadcastSessionStats *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<POPAnimatorItem> {
    struct POPAnimatorItem *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<RtmpSessionCallback> {
    struct RtmpSessionCallback *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<bool> {
    _Bool *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<const msqrd::manifest::Manifest> {
    struct Manifest *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<const std::__1::vector<__weak id, std::__1::allocator<__weak id>>> {
    struct vector<__weak id, std::__1::allocator<__weak id>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<const std::__1::vector<unsigned char, std::__1::allocator<unsigned char>>> {
    struct vector<unsigned char, std::__1::allocator<unsigned char>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<facebook::arengine::utils::DualTexture> {
    struct DualTexture *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<facebook::arengine::utils::EffectAssetLoader> {
    struct EffectAssetLoader *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<facebook::arengineservices::LockedPixelBuffer> {
    struct LockedPixelBuffer *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<facebook::arengineservices::ShaderLogger> {
    struct ShaderLogger *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<facebook::arservices::apple::AudioServiceCreator> {
    struct AudioServiceCreator *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<facebook::arservices::apple::CaptureEventServiceCreator> {
    struct CaptureEventServiceCreator *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<facebook::arservices::apple::GestureEventServiceCreator> {
    struct GestureEventServiceCreator *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<facebook::audiofiltercore::AudioInput<short>> {
    struct AudioInput<short> *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<facebook::audiofiltercore::AudioInputMixer<short>> {
    struct AudioInputMixer<short> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<facebook::audiofiltercore::AudioInputWithProgress<short>> {
    struct AudioInputWithProgress<short> *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<facebook::audiofiltercore::AudioLoop<short>> {
    struct AudioLoop<short> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<facebook::audiofiltercore::AudioPipeline<short>> {
    struct AudioPipeline<short> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<facebook::audiofiltercore::AudioSource<short>> {
    struct AudioSource<short> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<facebook::audiofiltercore::IAudioComponent> {
    struct IAudioComponent *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<facebook::audiofiltercore::VolumeLevelAudioTransform<short>> {
    struct VolumeLevelAudioTransform<short> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<facebook::bufferpool::BufferPool> {
    struct BufferPool *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<facebook::cp::shortstab::Stabilizer> {
    struct Stabilizer *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<facebook::cp::shortstab::StabilizerResult> {
    struct StabilizerResult *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<facebook::cp::shortstab::StabilizerSettings> {
    struct StabilizerSettings *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<facebook::graphics::GPUTimer> {
    struct GPUTimer *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<facebook::liger::LigerPushNotificationCallback> {
    struct LigerPushNotificationCallback *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<facebook::livestreaming::RtmpSSLFactory> {
    struct RtmpSSLFactory *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<facebook::mobile::FBSSLKeyMaterialListenerAbstractLogger> {
    struct FBSSLKeyMaterialListenerAbstractLogger *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<facebook::mobile::perflogger::QuickPerformanceLogger> {
    struct QuickPerformanceLogger *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<facebook::mobile::perflogger::QuickPerformanceLoggerBase> {
    struct QuickPerformanceLoggerBase *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<facebook::mobile::xplat::executor::InlineSerialExecutor> {
    struct InlineSerialExecutor *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<facebook::mobile::xplat::executor::SerialDispatchQueueExecutor> {
    struct SerialDispatchQueueExecutor *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<facebook::mobile::xplat::executor::SerialExecutor> {
    struct SerialExecutor *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<facebook::mobile::xplat::executor::details::ObservableHelperImpl<facebook::mobile::xplat::executor::details::PointerObserverInfo<facebook::liger::LigerPushNotificationCallbackWrapper>>> {
    struct ObservableHelperImpl<facebook::mobile::xplat::executor::details::PointerObserverInfo<facebook::liger::LigerPushNotificationCallbackWrapper>> *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<facebook::mobile::xplat::livestreaming::AdaptiveBitrateAlgorithm> {
    struct AdaptiveBitrateAlgorithm *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<facebook::mobile::xplat::livestreaming::AdaptiveBitrateAlgorithmFactory> {
    struct AdaptiveBitrateAlgorithmFactory *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<facebook::mobile::xplat::livestreaming::AdaptiveBitrateInputParameterProcessor> {
    struct AdaptiveBitrateInputParameterProcessor *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<facebook::mobile::xplat::livestreaming::AudioPacketizer> {
    struct AudioPacketizer *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<facebook::mobile::xplat::livestreaming::AudioPacketizerFactory> {
    struct AudioPacketizerFactory *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<facebook::mobile::xplat::livestreaming::BitrateAdjuster> {
    struct BitrateAdjuster *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<facebook::mobile::xplat::livestreaming::Exception> {
    struct Exception *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<facebook::mobile::xplat::livestreaming::NetworkSession> {
    struct NetworkSession *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<facebook::mobile::xplat::livestreaming::NetworkSessionFactory> {
    struct NetworkSessionFactory *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<facebook::mobile::xplat::livestreaming::VideoPacketizer> {
    struct VideoPacketizer *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<facebook::mobile::xplat::livestreaming::VideoPacketizerFactory> {
    struct VideoPacketizerFactory *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<facebook::mobile::xplat::reachability::ReachabilityAnnouncer> {
    struct ReachabilityAnnouncer *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<facebook::mqttchannel::DefaultConnectScheduler::Analytics> {
    struct Analytics *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<facebook::mqttchannel::MQTTChannelAnalytics> {
    struct MQTTChannelAnalytics *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<facebook::mqttchannel::MQTTChannelCoordinatorProxy> {
    struct MQTTChannelCoordinatorProxy *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<facebook::mqttchannel::WhistleConnectionFactory> {
    struct WhistleConnectionFactory *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<facebook::quickfire::AVCFrame> {
    struct AVCFrame *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<facebook::quickfire::H264SPS> {
    struct H264SPS *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<facebook::react::Instance> {
    struct Instance *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<facebook::react::JSExecutorFactory> {
    struct JSExecutorFactory *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<facebook::react::ModuleRegistry> {
    struct ModuleRegistry *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<facebook::react::RCTMessageThread> {
    struct RCTMessageThread *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<facebook::tigon::TigonService> {
    struct TigonService *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<facebook::videostreaming::SimpleVideoRecorder> {
    struct SimpleVideoRecorder *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<instagram::perflogger::IGQuickPerformanceLoggerDelegate> {
    struct IGQuickPerformanceLoggerDelegate *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<msqrd::capture::CaptureEventService> {
    struct CaptureEventService *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<msqrd::dataprovider::GestureEvent> {
    struct GestureEvent *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<msqrd::dataprovider::IMotionDataProvider> {
    struct IMotionDataProvider *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<msqrd::experiment::IExperimentConfig> {
    struct IExperimentConfig *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<msqrd::fx::IViewport> {
    struct IViewport *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<msqrd::fx::RenderSession> {
    struct RenderSession *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<msqrd::motion::MotionDataProvider> {
    struct MotionDataProvider *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<msqrd::platform::IDeformationEvents> {
    struct IDeformationEvents *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<msqrd::platform::IShaderLogger> {
    struct IShaderLogger *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<msqrd::player::ISessionPlayer> {
    struct ISessionPlayer *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<msqrd::recorder::ISessionRecorder> {
    struct ISessionRecorder *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<msqrd::touch::TouchGesturesDataProvider> {
    struct TouchGesturesDataProvider *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<rtc::tslog::TimeSeriesStream> {
    struct TimeSeriesStream *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<rtc::tslog::TimeSeriesStreamWrapper> {
    struct TimeSeriesStreamWrapper *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<rtc::tslog::TsCounterStorageManager> {
    struct TsCounterStorageManager *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<rtc::tslog::TsLogCompactStorage> {
    struct TsLogCompactStorage *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<std::__1::basic_string<char>> {
    basic_string_a490aa4c *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::unordered_map<const char *, std::__1::shared_ptr<const facebook::tigon::TigonLayeredInformation<facebook::tigon::TigonRequest>::LayeredObject>, facebook::tigon::details::CharHash, facebook::tigon::details::CharCompare, std::__1::allocator<std::__1::pair<const char *const, std::__1::shared_ptr<const facebook::tigon::TigonLayeredInformation<facebook::tigon::TigonRequest>::LayeredObject>>>>> {
    struct unordered_map<const char *, std::__1::shared_ptr<const facebook::tigon::TigonLayeredInformation<facebook::tigon::TigonRequest>::LayeredObject>, facebook::tigon::details::CharHash, facebook::tigon::details::CharCompare, std::__1::allocator<std::__1::pair<const char *const, std::__1::shared_ptr<const facebook::tigon::TigonLayeredInformation<facebook::tigon::TigonRequest>::LayeredObject>>>> *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<std::__1::unordered_map<const char *, std::__1::shared_ptr<const facebook::tigon::TigonLayeredInformation<facebook::tigon::TigonSummary>::LayeredObject>, facebook::tigon::details::CharHash, facebook::tigon::details::CharCompare, std::__1::allocator<std::__1::pair<const char *const, std::__1::shared_ptr<const facebook::tigon::TigonLayeredInformation<facebook::tigon::TigonSummary>::LayeredObject>>>>> {
    struct unordered_map<const char *, std::__1::shared_ptr<const facebook::tigon::TigonLayeredInformation<facebook::tigon::TigonSummary>::LayeredObject>, facebook::tigon::details::CharHash, facebook::tigon::details::CharCompare, std::__1::allocator<std::__1::pair<const char *const, std::__1::shared_ptr<const facebook::tigon::TigonLayeredInformation<facebook::tigon::TigonSummary>::LayeredObject>>>> *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<std::__1::vector<facebook::mobile::xplat::livestreaming::DroppedFrame, std::__1::allocator<facebook::mobile::xplat::livestreaming::DroppedFrame>>> {
    struct vector<facebook::mobile::xplat::livestreaming::DroppedFrame, std::__1::allocator<facebook::mobile::xplat::livestreaming::DroppedFrame>> *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<unsigned long> {
    unsigned long long *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<void> {
    void *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ref<facebook::arengineservices::LockedPixelBuffer> {
    struct shared_ptr<facebook::arengineservices::LockedPixelBuffer> _field1;
};

struct shared_ref<msqrd::experiment::IExperimentConfig> {
    struct shared_ptr<msqrd::experiment::IExperimentConfig> _field1;
};

struct shared_ref<msqrd::player::ISessionPlayer> {
    struct shared_ptr<msqrd::player::ISessionPlayer> _field1;
};

struct sockaddr_in {
    unsigned char _field1;
    unsigned char _field2;
    unsigned short _field3;
    struct in_addr _field4;
    char _field5[8];
};

struct sockaddr_storage {
    unsigned char _field1;
    unsigned char _field2;
    char _field3[6];
    long long _field4;
    char _field5[112];
};

struct time_point<std::__1::chrono::steady_clock, std::__1::chrono::duration<long long, std::__1::ratio<1, 1000000000>>> {
    struct duration<long long, std::__1::ratio<1, 1000000000>> __d_;
};

struct tm_zip_s {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned int _field6;
};

struct tmat4x4<float> {
    struct tvec4<float> value[4];
};

struct tvec4<float> {
    union {
        CDStruct_83984b6f ;
        CDStruct_f8b81486 ;
        CDStruct_f2e236b6 ;
    } ;
};

struct type {
    unsigned char __lx[24];
};

struct uniform_int_distribution<unsigned int> {
    struct param_type __p_;
};

struct unique_ptr<AutoreleaseLoopCallback, std::__1::default_delete<AutoreleaseLoopCallback>> {
    struct __compressed_pair<AutoreleaseLoopCallback *, std::__1::default_delete<AutoreleaseLoopCallback>> {
        struct AutoreleaseLoopCallback *__first_;
    } __ptr_;
};

struct unique_ptr<FB::PowerMetrics::ProcessPMCpuStat, std::__1::default_delete<FB::PowerMetrics::ProcessPMCpuStat>> {
    struct __compressed_pair<FB::PowerMetrics::ProcessPMCpuStat *, std::__1::default_delete<FB::PowerMetrics::ProcessPMCpuStat>> {
        struct ProcessPMCpuStat *__first_;
    } __ptr_;
};

struct unique_ptr<FBWhistleConnectionStatsLogger, std::__1::default_delete<FBWhistleConnectionStatsLogger>> {
    struct __compressed_pair<FBWhistleConnectionStatsLogger *, std::__1::default_delete<FBWhistleConnectionStatsLogger>> {
        struct FBWhistleConnectionStatsLogger *__first_;
    } __ptr_;
};

struct unique_ptr<const instagram::mobile::memory::IGAddressRangeScanner, std::__1::default_delete<const instagram::mobile::memory::IGAddressRangeScanner>> {
    struct __compressed_pair<const instagram::mobile::memory::IGAddressRangeScanner *, std::__1::default_delete<const instagram::mobile::memory::IGAddressRangeScanner>> {
        struct IGAddressRangeScanner *__first_;
    } __ptr_;
};

struct unique_ptr<const instagram::mobile::memory::IGMallocDiskLogger, std::__1::default_delete<const instagram::mobile::memory::IGMallocDiskLogger>> {
    struct __compressed_pair<const instagram::mobile::memory::IGMallocDiskLogger *, std::__1::default_delete<const instagram::mobile::memory::IGMallocDiskLogger>> {
        struct IGMallocDiskLogger *__first_;
    } __ptr_;
};

struct unique_ptr<facebook::arengineservices::Logger, std::__1::default_delete<facebook::arengineservices::Logger>> {
    struct __compressed_pair<facebook::arengineservices::Logger *, std::__1::default_delete<facebook::arengineservices::Logger>> {
        struct Logger *__first_;
    } __ptr_;
};

struct unique_ptr<facebook::arengineservices::ScriptLogger, std::__1::default_delete<facebook::arengineservices::ScriptLogger>> {
    struct __compressed_pair<facebook::arengineservices::ScriptLogger *, std::__1::default_delete<facebook::arengineservices::ScriptLogger>> {
        struct ScriptLogger *__first_;
    } __ptr_;
};

struct unique_ptr<facebook::arlink::ARLinkScanner, std::__1::default_delete<facebook::arlink::ARLinkScanner>> {
    struct __compressed_pair<facebook::arlink::ARLinkScanner *, std::__1::default_delete<facebook::arlink::ARLinkScanner>> {
        struct ARLinkScanner *__first_;
    } __ptr_;
};

struct unique_ptr<facebook::cp::regiontracking::TrackerKCF, std::__1::default_delete<facebook::cp::regiontracking::TrackerKCF>> {
    struct __compressed_pair<facebook::cp::regiontracking::TrackerKCF *, std::__1::default_delete<facebook::cp::regiontracking::TrackerKCF>> {
        struct TrackerKCF *__first_;
    } __ptr_;
};

struct unique_ptr<facebook::mobile::xplat::executor::ObserverToken, std::__1::default_delete<facebook::mobile::xplat::executor::ObserverToken>> {
    struct __compressed_pair<facebook::mobile::xplat::executor::ObserverToken *, std::__1::default_delete<facebook::mobile::xplat::executor::ObserverToken>> {
        struct ObserverToken *_field1;
    } _field1;
};

struct unique_ptr<facebook::mqttchannel::TopicListener, std::__1::default_delete<facebook::mqttchannel::TopicListener>>;

struct unique_ptr<facebook::react::JSExecutorFactory, std::__1::default_delete<facebook::react::JSExecutorFactory>> {
    struct __compressed_pair<facebook::react::JSExecutorFactory *, std::__1::default_delete<facebook::react::JSExecutorFactory>> {
        struct JSExecutorFactory *_field1;
    } _field1;
};

struct unique_ptr<facebook::tigon::TigonCallbacks, std::__1::default_delete<facebook::tigon::TigonCallbacks>> {
    struct __compressed_pair<facebook::tigon::TigonCallbacks *, std::__1::default_delete<facebook::tigon::TigonCallbacks>> {
        struct TigonCallbacks *__first_;
    } __ptr_;
};

struct unique_ptr<facebook::tigon::TigonRequestToken, std::__1::default_delete<facebook::tigon::TigonRequestToken>> {
    struct __compressed_pair<facebook::tigon::TigonRequestToken *, std::__1::default_delete<facebook::tigon::TigonRequestToken>> {
        struct TigonRequestToken *__first_;
    } __ptr_;
};

struct unique_ptr<facebook::tigon::TigonService, std::__1::default_delete<facebook::tigon::TigonService>> {
    struct __compressed_pair<facebook::tigon::TigonService *, std::__1::default_delete<facebook::tigon::TigonService>> {
        struct TigonService *__first_;
    } __ptr_;
};

struct unique_ptr<facebook::tigon::TigonStack, std::__1::default_delete<facebook::tigon::TigonStack>> {
    struct __compressed_pair<facebook::tigon::TigonStack *, std::__1::default_delete<facebook::tigon::TigonStack>> {
        struct TigonStack *__first_;
    } __ptr_;
};

struct unique_ptr<facebook::xplat::module::CxxModule, std::__1::default_delete<facebook::xplat::module::CxxModule>> {
    struct __compressed_pair<facebook::xplat::module::CxxModule *, std::__1::default_delete<facebook::xplat::module::CxxModule>> {
        struct CxxModule *__first_;
    } __ptr_;
};

struct unique_ptr<facebook::xplat::module::CxxModule::Method, std::__1::default_delete<facebook::xplat::module::CxxModule::Method>> {
    struct __compressed_pair<facebook::xplat::module::CxxModule::Method *, std::__1::default_delete<facebook::xplat::module::CxxModule::Method>> {
        struct Method *__first_;
    } __ptr_;
};

struct unique_ptr<folly::EvictingCacheMap<std::__1::tuple<unsigned long, unsigned long, unsigned int>, FBCFRefGuard<const void *>, std::__1::hash<std::__1::tuple<unsigned long, unsigned long, unsigned int>>, std::__1::equal_to<std::__1::tuple<unsigned long, unsigned long, unsigned int>>>, std::__1::default_delete<folly::EvictingCacheMap<std::__1::tuple<unsigned long, unsigned long, unsigned int>, FBCFRefGuard<const void *>, std::__1::hash<std::__1::tuple<unsigned long, unsigned long, unsigned int>>, std::__1::equal_to<std::__1::tuple<unsigned long, unsigned long, unsigned int>>>>> {
    struct __compressed_pair<folly::EvictingCacheMap<std::__1::tuple<unsigned long, unsigned long, unsigned int>, FBCFRefGuard<const void *>, std::__1::hash<std::__1::tuple<unsigned long, unsigned long, unsigned int>>, std::__1::equal_to<std::__1::tuple<unsigned long, unsigned long, unsigned int>>>*, std::__1::default_delete<folly::EvictingCacheMap<std::__1::tuple<unsigned long, unsigned long, unsigned int>, FBCFRefGuard<const void *>, std::__1::hash<std::__1::tuple<unsigned long, unsigned long, unsigned int>>, std::__1::equal_to<std::__1::tuple<unsigned long, unsigned long, unsigned int>>>>> {
        struct EvictingCacheMap<std::__1::tuple<unsigned long, unsigned long, unsigned int>, FBCFRefGuard<const void *>, std::__1::hash<std::__1::tuple<unsigned long, unsigned long, unsigned int>>, std::__1::equal_to<std::__1::tuple<unsigned long, unsigned long, unsigned int>>> *__first_;
    } __ptr_;
};

struct unique_ptr<folly::Executor, std::__1::default_delete<folly::Executor>> {
    struct __compressed_pair<folly::Executor *, std::__1::default_delete<folly::Executor>> {
        struct Executor *_field1;
    } _field1;
};

struct unique_ptr<msqrd::fx::GraphicsEngine, std::__1::default_delete<msqrd::fx::GraphicsEngine>> {
    struct __compressed_pair<msqrd::fx::GraphicsEngine *, std::__1::default_delete<msqrd::fx::GraphicsEngine>> {
        struct GraphicsEngine *__first_;
    } __ptr_;
};

struct unique_ptr<msqrd::servicehost::ServiceHost, std::__1::default_delete<msqrd::servicehost::ServiceHost>> {
    struct __compressed_pair<msqrd::servicehost::ServiceHost *, std::__1::default_delete<msqrd::servicehost::ServiceHost>> {
        struct ServiceHost *__first_;
    } __ptr_;
};

struct unique_ptr<proxygen::battery::RadioStatusObserver, std::__1::default_delete<proxygen::battery::RadioStatusObserver>> {
    struct __compressed_pair<proxygen::battery::RadioStatusObserver *, std::__1::default_delete<proxygen::battery::RadioStatusObserver>> {
        struct RadioStatusObserver *__first_;
    } __ptr_;
};

struct unique_ptr<proxygen::httpclient::CertificatePinner, std::__1::default_delete<proxygen::httpclient::CertificatePinner>> {
    struct __compressed_pair<proxygen::httpclient::CertificatePinner *, std::__1::default_delete<proxygen::httpclient::CertificatePinner>> {
        struct CertificatePinner *__first_;
    } __ptr_;
};

struct unique_ptr<proxygen::httpclient::RequestHandlerFactory, std::__1::default_delete<proxygen::httpclient::RequestHandlerFactory>> {
    struct __compressed_pair<proxygen::httpclient::RequestHandlerFactory *, std::__1::default_delete<proxygen::httpclient::RequestHandlerFactory>> {
        struct RequestHandlerFactory *_field1;
    } _field1;
};

struct unique_ptr<rtc::tslog::TasksScheduler, std::__1::default_delete<rtc::tslog::TasksScheduler>> {
    struct __compressed_pair<rtc::tslog::TasksScheduler *, std::__1::default_delete<rtc::tslog::TasksScheduler>> {
        struct TasksScheduler *_field1;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerIndexPath, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerIndexPath, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerIndexPath, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerIndexPath, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerIndexPath, void *>*> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerIndexPath, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerIndexPath, void *>*>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerSectionControllerWrapper, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerSectionControllerWrapper, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerSectionControllerWrapper, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerSectionControllerWrapper, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerSectionControllerWrapper, void *>*> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerSectionControllerWrapper, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerSectionControllerWrapper, void *>*>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<Class<IGUserSessionObject>, std::__1::shared_future<Value>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<Class<IGUserSessionObject>, std::__1::shared_future<Value>>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<Class<IGUserSessionObject>, std::__1::shared_future<Value>>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<Class<IGUserSessionObject>, std::__1::shared_future<Value>>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<Class<IGUserSessionObject>, std::__1::shared_future<Value>>, void *>*> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<Class<IGUserSessionObject>, std::__1::shared_future<Value>>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<Class<IGUserSessionObject>, std::__1::shared_future<Value>>, void *>*>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<id, FBMPInternalFilterPerf>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<id, FBMPInternalFilterPerf>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<id, FBMPInternalFilterPerf>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<id, FBMPInternalFilterPerf>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<id, FBMPInternalFilterPerf>, void *>*> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<id, FBMPInternalFilterPerf>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<id, FBMPInternalFilterPerf>, void *>*>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *>*> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *>*>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, IGListMoveIndex *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, IGListMoveIndex *>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, IGListMoveIndex *>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, IGListMoveIndex *>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, IGListMoveIndex *>, void *>*> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, IGListMoveIndex *>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, IGListMoveIndex *>, void *>*>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<msqrd::services::ServiceType::Enum, id<FBARServiceConfiguration>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<msqrd::services::ServiceType::Enum, id<FBARServiceConfiguration>>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<msqrd::services::ServiceType::Enum, id<FBARServiceConfiguration>>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<msqrd::services::ServiceType::Enum, id<FBARServiceConfiguration>>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<msqrd::services::ServiceType::Enum, id<FBARServiceConfiguration>>, void *>*> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<msqrd::services::ServiceType::Enum, id<FBARServiceConfiguration>>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<msqrd::services::ServiceType::Enum, id<FBARServiceConfiguration>>, void *>*>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, double>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, double>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, double>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, double>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, double>, void *>*> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, double>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, double>, void *>*>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::basic_string<char>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::basic_string<char>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::basic_string<char>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::basic_string<char>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::basic_string<char>, void *>*> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::basic_string<char>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::basic_string<char>, void *>*>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unordered_map<Class<IGUserSessionObject>, std::__1::shared_future<Value>, std::__1::hash<Class<IGUserSessionObject>>, std::__1::equal_to<Class<IGUserSessionObject>>, std::__1::allocator<std::__1::pair<const Class<IGUserSessionObject>, std::__1::shared_future<Value>>>> {
    struct __hash_table<std::__1::__hash_value_type<Class<IGUserSessionObject>, std::__1::shared_future<Value>>, std::__1::__unordered_map_hasher<Class<IGUserSessionObject>, std::__1::__hash_value_type<Class<IGUserSessionObject>, std::__1::shared_future<Value>>, std::__1::hash<Class<IGUserSessionObject>>, true>, std::__1::__unordered_map_equal<Class<IGUserSessionObject>, std::__1::__hash_value_type<Class<IGUserSessionObject>, std::__1::shared_future<Value>>, std::__1::equal_to<Class<IGUserSessionObject>>, true>, std::__1::allocator<std::__1::__hash_value_type<Class<IGUserSessionObject>, std::__1::shared_future<Value>>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<Class<IGUserSessionObject>, std::__1::shared_future<Value>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<Class<IGUserSessionObject>, std::__1::shared_future<Value>>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<Class<IGUserSessionObject>, std::__1::shared_future<Value>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<Class<IGUserSessionObject>, std::__1::shared_future<Value>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<Class<IGUserSessionObject>, std::__1::shared_future<Value>>, void *>*> __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<Class<IGUserSessionObject>, std::__1::__hash_value_type<Class<IGUserSessionObject>, std::__1::shared_future<Value>>, std::__1::hash<Class<IGUserSessionObject>>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<Class<IGUserSessionObject>, std::__1::__hash_value_type<Class<IGUserSessionObject>, std::__1::shared_future<Value>>, std::__1::equal_to<Class<IGUserSessionObject>>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<const char *, std::__1::shared_ptr<const facebook::tigon::TigonLayeredInformation<facebook::tigon::TigonRequest>::LayeredObject>, facebook::tigon::details::CharHash, facebook::tigon::details::CharCompare, std::__1::allocator<std::__1::pair<const char *const, std::__1::shared_ptr<const facebook::tigon::TigonLayeredInformation<facebook::tigon::TigonRequest>::LayeredObject>>>>;

struct unordered_map<const char *, std::__1::shared_ptr<const facebook::tigon::TigonLayeredInformation<facebook::tigon::TigonSummary>::LayeredObject>, facebook::tigon::details::CharHash, facebook::tigon::details::CharCompare, std::__1::allocator<std::__1::pair<const char *const, std::__1::shared_ptr<const facebook::tigon::TigonLayeredInformation<facebook::tigon::TigonSummary>::LayeredObject>>>>;

struct unordered_map<id, FBMPInternalFilterPerf, FBMPHashFunctor<NSObject *>, std::__1::equal_to<id>, std::__1::allocator<std::__1::pair<const id, FBMPInternalFilterPerf>>> {
    struct __hash_table<std::__1::__hash_value_type<id, FBMPInternalFilterPerf>, std::__1::__unordered_map_hasher<id, std::__1::__hash_value_type<id, FBMPInternalFilterPerf>, FBMPHashFunctor<NSObject *>, true>, std::__1::__unordered_map_equal<id, std::__1::__hash_value_type<id, FBMPInternalFilterPerf>, std::__1::equal_to<id>, true>, std::__1::allocator<std::__1::__hash_value_type<id, FBMPInternalFilterPerf>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<id, FBMPInternalFilterPerf>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<id, FBMPInternalFilterPerf>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<id, FBMPInternalFilterPerf>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<id, FBMPInternalFilterPerf>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<id, FBMPInternalFilterPerf>, void *>*> __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<id, std::__1::__hash_value_type<id, FBMPInternalFilterPerf>, FBMPHashFunctor<NSObject *>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<id, std::__1::__hash_value_type<id, FBMPInternalFilterPerf>, std::__1::equal_to<id>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<int, int, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, int>>> {
    struct __hash_table<std::__1::__hash_value_type<int, int>, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, int>, std::__1::hash<int>, true>, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, int>, std::__1::equal_to<int>, true>, std::__1::allocator<std::__1::__hash_value_type<int, int>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, int>, std::__1::hash<int>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, int>, std::__1::equal_to<int>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<long, IGListMoveIndex *, std::__1::hash<long>, std::__1::equal_to<long>, std::__1::allocator<std::__1::pair<const long, IGListMoveIndex *>>> {
    struct __hash_table<std::__1::__hash_value_type<long, IGListMoveIndex *>, std::__1::__unordered_map_hasher<long, std::__1::__hash_value_type<long, IGListMoveIndex *>, std::__1::hash<long>, true>, std::__1::__unordered_map_equal<long, std::__1::__hash_value_type<long, IGListMoveIndex *>, std::__1::equal_to<long>, true>, std::__1::allocator<std::__1::__hash_value_type<long, IGListMoveIndex *>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, IGListMoveIndex *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, IGListMoveIndex *>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, IGListMoveIndex *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<long, IGListMoveIndex *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, IGListMoveIndex *>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<long, std::__1::__hash_value_type<long, IGListMoveIndex *>, std::__1::hash<long>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<long, std::__1::__hash_value_type<long, IGListMoveIndex *>, std::__1::equal_to<long>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<msqrd::services::ServiceType::Enum, id<FBARServiceConfiguration>, std::__1::hash<msqrd::services::ServiceType::Enum>, std::__1::equal_to<msqrd::services::ServiceType::Enum>, std::__1::allocator<std::__1::pair<const msqrd::services::ServiceType::Enum, id<FBARServiceConfiguration>>>> {
    struct __hash_table<std::__1::__hash_value_type<msqrd::services::ServiceType::Enum, id<FBARServiceConfiguration>>, std::__1::__unordered_map_hasher<msqrd::services::ServiceType::Enum, std::__1::__hash_value_type<msqrd::services::ServiceType::Enum, id<FBARServiceConfiguration>>, std::__1::hash<msqrd::services::ServiceType::Enum>, true>, std::__1::__unordered_map_equal<msqrd::services::ServiceType::Enum, std::__1::__hash_value_type<msqrd::services::ServiceType::Enum, id<FBARServiceConfiguration>>, std::__1::equal_to<msqrd::services::ServiceType::Enum>, true>, std::__1::allocator<std::__1::__hash_value_type<msqrd::services::ServiceType::Enum, id<FBARServiceConfiguration>>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<msqrd::services::ServiceType::Enum, id<FBARServiceConfiguration>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<msqrd::services::ServiceType::Enum, id<FBARServiceConfiguration>>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<msqrd::services::ServiceType::Enum, id<FBARServiceConfiguration>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<msqrd::services::ServiceType::Enum, id<FBARServiceConfiguration>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<msqrd::services::ServiceType::Enum, id<FBARServiceConfiguration>>, void *>*> __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<msqrd::services::ServiceType::Enum, std::__1::__hash_value_type<msqrd::services::ServiceType::Enum, id<FBARServiceConfiguration>>, std::__1::hash<msqrd::services::ServiceType::Enum>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<msqrd::services::ServiceType::Enum, std::__1::__hash_value_type<msqrd::services::ServiceType::Enum, id<FBARServiceConfiguration>>, std::__1::equal_to<msqrd::services::ServiceType::Enum>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<std::__1::basic_string<char>, double, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, double>>> {
    struct __hash_table<std::__1::__hash_value_type<std::__1::basic_string<char>, double>, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, double>, std::__1::hash<std::__1::basic_string<char>>, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, double>, std::__1::equal_to<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char>, double>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, double>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, double>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, double>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, double>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, double>, void *>*> __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, double>, std::__1::hash<std::__1::basic_string<char>>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, double>, std::__1::equal_to<std::__1::basic_string<char>>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_set<_IGListWorkingRangeHandlerIndexPath, _IGListWorkingRangeHandlerIndexPathHash, std::__1::equal_to<_IGListWorkingRangeHandlerIndexPath>, std::__1::allocator<_IGListWorkingRangeHandlerIndexPath>> {
    struct __hash_table<_IGListWorkingRangeHandlerIndexPath, _IGListWorkingRangeHandlerIndexPathHash, std::__1::equal_to<_IGListWorkingRangeHandlerIndexPath>, std::__1::allocator<_IGListWorkingRangeHandlerIndexPath>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerIndexPath, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerIndexPath, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerIndexPath, void *>*>, std::__1::allocator<std::__1::__hash_node<_IGListWorkingRangeHandlerIndexPath, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerIndexPath, void *>*> __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, _IGListWorkingRangeHandlerIndexPathHash> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::equal_to<_IGListWorkingRangeHandlerIndexPath>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_set<_IGListWorkingRangeHandlerSectionControllerWrapper, _IGListWorkingRangeHashID, std::__1::equal_to<_IGListWorkingRangeHandlerSectionControllerWrapper>, std::__1::allocator<_IGListWorkingRangeHandlerSectionControllerWrapper>> {
    struct __hash_table<_IGListWorkingRangeHandlerSectionControllerWrapper, _IGListWorkingRangeHashID, std::__1::equal_to<_IGListWorkingRangeHandlerSectionControllerWrapper>, std::__1::allocator<_IGListWorkingRangeHandlerSectionControllerWrapper>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerSectionControllerWrapper, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerSectionControllerWrapper, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerSectionControllerWrapper, void *>*>, std::__1::allocator<std::__1::__hash_node<_IGListWorkingRangeHandlerSectionControllerWrapper, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerSectionControllerWrapper, void *>*> __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, _IGListWorkingRangeHashID> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::equal_to<_IGListWorkingRangeHandlerSectionControllerWrapper>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_set<std::__1::basic_string<char>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::basic_string<char>>> {
    struct __hash_table<std::__1::basic_string<char>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::basic_string<char>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::basic_string<char>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::basic_string<char>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::basic_string<char>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::basic_string<char>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::basic_string<char>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::hash<std::__1::basic_string<char>>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::equal_to<std::__1::basic_string<char>>> {
            float _field1;
        } _field4;
    } _field1;
};

struct variant<FBMPSessionConnectOperation, FBMPSessionConnectPortsOperation, FBMPSessionDisconnectOperation, FBMPSessionDisconnectPortsOperation, FBMPSessionReplaceOperation, FBMPSessionRemoveOperation> {
    int which_;
    struct aligned_storage<16, 8> storage_;
};

struct vector<(anonymous namespace)::ThreadTime, std::__1::allocator<(anonymous namespace)::ThreadTime>> {
    struct ThreadTime *__begin_;
    struct ThreadTime *__end_;
    struct __compressed_pair<(anonymous namespace)::ThreadTime *, std::__1::allocator<(anonymous namespace)::ThreadTime>> {
        struct ThreadTime *__first_;
    } __end_cap_;
};

struct vector<CMTime, std::__1::allocator<CMTime>> {
    CDStruct_183601bc *_field1;
    CDStruct_183601bc *_field2;
    struct __compressed_pair<CMTime *, std::__1::allocator<CMTime>> {
        CDStruct_183601bc *_field1;
    } _field3;
};

struct vector<FB::Functional::PromiseEither<NSError *, FBVideoSimpleRecorderResult *>, std::__1::allocator<FB::Functional::PromiseEither<NSError *, FBVideoSimpleRecorderResult *>>> {
    struct PromiseEither<NSError *, FBVideoSimpleRecorderResult *> *__begin_;
    struct PromiseEither<NSError *, FBVideoSimpleRecorderResult *> *__end_;
    struct __compressed_pair<FB::Functional::PromiseEither<NSError *, FBVideoSimpleRecorderResult *>*, std::__1::allocator<FB::Functional::PromiseEither<NSError *, FBVideoSimpleRecorderResult *>>> {
        struct PromiseEither<NSError *, FBVideoSimpleRecorderResult *> *__first_;
    } __end_cap_;
};

struct vector<FNFDashFrameMetadata, std::__1::allocator<FNFDashFrameMetadata>> {
    CDStruct_183601bc *__begin_;
    CDStruct_183601bc *__end_;
    struct __compressed_pair<FNFDashFrameMetadata *, std::__1::allocator<FNFDashFrameMetadata>> {
        CDStruct_183601bc *__first_;
    } __end_cap_;
};

struct vector<FNFMP4MoofAtom, std::__1::allocator<FNFMP4MoofAtom>> {
    struct FNFMP4MoofAtom *__begin_;
    struct FNFMP4MoofAtom *__end_;
    struct __compressed_pair<FNFMP4MoofAtom *, std::__1::allocator<FNFMP4MoofAtom>> {
        struct FNFMP4MoofAtom *__first_;
    } __end_cap_;
};

struct vector<FNFMP4SidxSegment, std::__1::allocator<FNFMP4SidxSegment>> {
    struct FNFMP4SidxSegment *__begin_;
    struct FNFMP4SidxSegment *__end_;
    struct __compressed_pair<FNFMP4SidxSegment *, std::__1::allocator<FNFMP4SidxSegment>> {
        struct FNFMP4SidxSegment *__first_;
    } __end_cap_;
};

struct vector<FNFMP4TrakAtom, std::__1::allocator<FNFMP4TrakAtom>> {
    struct FNFMP4TrakAtom *__begin_;
    struct FNFMP4TrakAtom *__end_;
    struct __compressed_pair<FNFMP4TrakAtom *, std::__1::allocator<FNFMP4TrakAtom>> {
        struct FNFMP4TrakAtom *__first_;
    } __end_cap_;
};

struct vector<FNFMP4TrakAtomForSeek, std::__1::allocator<FNFMP4TrakAtomForSeek>> {
    struct FNFMP4TrakAtomForSeek *__begin_;
    struct FNFMP4TrakAtomForSeek *__end_;
    struct __compressed_pair<FNFMP4TrakAtomForSeek *, std::__1::allocator<FNFMP4TrakAtomForSeek>> {
        struct FNFMP4TrakAtomForSeek *__first_;
    } __end_cap_;
};

struct vector<FNFMP4TrexAtom, std::__1::allocator<FNFMP4TrexAtom>> {
    struct FNFMP4TrexAtom *__begin_;
    struct FNFMP4TrexAtom *__end_;
    struct __compressed_pair<FNFMP4TrexAtom *, std::__1::allocator<FNFMP4TrexAtom>> {
        struct FNFMP4TrexAtom *__first_;
    } __end_cap_;
};

struct vector<IGAttitudeSample, std::__1::allocator<IGAttitudeSample>> {
    struct IGAttitudeSample *__begin_;
    struct IGAttitudeSample *__end_;
    struct __compressed_pair<IGAttitudeSample *, std::__1::allocator<IGAttitudeSample>> {
        struct IGAttitudeSample *__first_;
    } __end_cap_;
};

struct vector<IGFrameSample, std::__1::allocator<IGFrameSample>> {
    struct IGFrameSample *__begin_;
    struct IGFrameSample *__end_;
    struct __compressed_pair<IGFrameSample *, std::__1::allocator<IGFrameSample>> {
        struct IGFrameSample *__first_;
    } __end_cap_;
};

struct vector<IGGallerySectionLayout, std::__1::allocator<IGGallerySectionLayout>> {
    struct IGGallerySectionLayout *__begin_;
    struct IGGallerySectionLayout *__end_;
    struct __compressed_pair<IGGallerySectionLayout *, std::__1::allocator<IGGallerySectionLayout>> {
        struct IGGallerySectionLayout *__first_;
    } __end_cap_;
};

struct vector<IGGyroSample, std::__1::allocator<IGGyroSample>> {
    struct IGGyroSample *__begin_;
    struct IGGyroSample *__end_;
    struct __compressed_pair<IGGyroSample *, std::__1::allocator<IGGyroSample>> {
        struct IGGyroSample *__first_;
    } __end_cap_;
};

struct vector<IGListSectionEntry, std::__1::allocator<IGListSectionEntry>> {
    struct IGListSectionEntry *__begin_;
    struct IGListSectionEntry *__end_;
    struct __compressed_pair<IGListSectionEntry *, std::__1::allocator<IGListSectionEntry>> {
        struct IGListSectionEntry *__first_;
    } __end_cap_;
};

struct vector<IGOrientationSample, std::__1::allocator<IGOrientationSample>> {
    struct IGOrientationSample *__begin_;
    struct IGOrientationSample *__end_;
    struct __compressed_pair<IGOrientationSample *, std::__1::allocator<IGOrientationSample>> {
        struct IGOrientationSample *__first_;
    } __end_cap_;
};

struct vector<IGSectionEntry, std::__1::allocator<IGSectionEntry>> {
    struct IGSectionEntry *__begin_;
    struct IGSectionEntry *__end_;
    struct __compressed_pair<IGSectionEntry *, std::__1::allocator<IGSectionEntry>> {
        struct IGSectionEntry *__first_;
    } __end_cap_;
};

struct vector<__weak id, std::__1::allocator<__weak id>>;

struct vector<boost::qvm::quat<double>, std::__1::allocator<boost::qvm::quat<double>>> {
    quat_f7c121b3 *__begin_;
    quat_f7c121b3 *__end_;
    struct __compressed_pair<boost::qvm::quat<double>*, std::__1::allocator<boost::qvm::quat<double>>> {
        quat_f7c121b3 *__first_;
    } __end_cap_;
};

struct vector<facebook::mobile::xplat::livestreaming::DroppedFrame, std::__1::allocator<facebook::mobile::xplat::livestreaming::DroppedFrame>>;

struct vector<facebook::mobile::xplat::livestreaming::NetworkSpeedTestPingDetails, std::__1::allocator<facebook::mobile::xplat::livestreaming::NetworkSpeedTestPingDetails>> {
    struct NetworkSpeedTestPingDetails *__begin_;
    struct NetworkSpeedTestPingDetails *__end_;
    struct __compressed_pair<facebook::mobile::xplat::livestreaming::NetworkSpeedTestPingDetails *, std::__1::allocator<facebook::mobile::xplat::livestreaming::NetworkSpeedTestPingDetails>> {
        struct NetworkSpeedTestPingDetails *__first_;
    } __end_cap_;
};

struct vector<facebook::tigon::TigonHTTPHeader, std::__1::allocator<facebook::tigon::TigonHTTPHeader>> {
    struct TigonHTTPHeader *_field1;
    struct TigonHTTPHeader *_field2;
    struct __compressed_pair<facebook::tigon::TigonHTTPHeader *, std::__1::allocator<facebook::tigon::TigonHTTPHeader>> {
        struct TigonHTTPHeader *_field1;
    } _field3;
};

struct vector<int, std::__1::allocator<int>> {
    int *__begin_;
    int *__end_;
    struct __compressed_pair<int *, std::__1::allocator<int>> {
        int *__first_;
    } __end_cap_;
};

struct vector<msqrd::platform::IScriptingLogger::WatchEntry, std::__1::allocator<msqrd::platform::IScriptingLogger::WatchEntry>> {
    struct WatchEntry *__begin_;
    struct WatchEntry *__end_;
    struct __compressed_pair<msqrd::platform::IScriptingLogger::WatchEntry *, std::__1::allocator<msqrd::platform::IScriptingLogger::WatchEntry>> {
        struct WatchEntry *__first_;
    } __end_cap_;
};

struct vector<proxygen::TraceEvent, std::__1::allocator<proxygen::TraceEvent>> {
    struct TraceEvent *_field1;
    struct TraceEvent *_field2;
    struct __compressed_pair<proxygen::TraceEvent *, std::__1::allocator<proxygen::TraceEvent>> {
        struct TraceEvent *_field1;
    } _field3;
};

struct vector<std::__1::array<double, 4>, std::__1::allocator<std::__1::array<double, 4>>> {
    struct array<double, 4> *_field1;
    struct array<double, 4> *_field2;
    struct __compressed_pair<std::__1::array<double, 4>*, std::__1::allocator<std::__1::array<double, 4>>> {
        struct array<double, 4> *_field1;
    } _field3;
};

struct vector<std::__1::array<double, 9>, std::__1::allocator<std::__1::array<double, 9>>> {
    struct array<double, 9> *_field1;
    struct array<double, 9> *_field2;
    struct __compressed_pair<std::__1::array<double, 9>*, std::__1::allocator<std::__1::array<double, 9>>> {
        struct array<double, 9> *_field1;
    } _field3;
};

struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> {
    basic_string_a490aa4c *_field1;
    basic_string_a490aa4c *_field2;
    struct __compressed_pair<std::__1::basic_string<char>*, std::__1::allocator<std::__1::basic_string<char>>> {
        basic_string_a490aa4c *_field1;
    } _field3;
};

struct vector<std::__1::map<std::__1::basic_string<char>, std::__1::map<std::__1::basic_string<char>, double, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, double>>>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::map<std::__1::basic_string<char>, double, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, double>>>>>>, std::__1::allocator<std::__1::map<std::__1::basic_string<char>, std::__1::map<std::__1::basic_string<char>, double, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, double>>>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::map<std::__1::basic_string<char>, double, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, double>>>>>>>> {
    struct map<std::__1::basic_string<char>, std::__1::map<std::__1::basic_string<char>, double, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, double>>>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::map<std::__1::basic_string<char>, double, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, double>>>>>> *_field1;
    struct map<std::__1::basic_string<char>, std::__1::map<std::__1::basic_string<char>, double, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, double>>>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::map<std::__1::basic_string<char>, double, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, double>>>>>> *_field2;
    struct __compressed_pair<std::__1::map<std::__1::basic_string<char>, std::__1::map<std::__1::basic_string<char>, double, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, double>>>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::map<std::__1::basic_string<char>, double, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, double>>>>>>*, std::__1::allocator<std::__1::map<std::__1::basic_string<char>, std::__1::map<std::__1::basic_string<char>, double, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, double>>>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::map<std::__1::basic_string<char>, double, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, double>>>>>>>> {
        struct map<std::__1::basic_string<char>, std::__1::map<std::__1::basic_string<char>, double, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, double>>>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::map<std::__1::basic_string<char>, double, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, double>>>>>> *_field1;
    } _field3;
};

struct vector<std::__1::pair<id<FBMPProducerPort>, id<FBMPConsumerPort>>, std::__1::allocator<std::__1::pair<id<FBMPProducerPort>, id<FBMPConsumerPort>>>> {
    struct pair<id<FBMPProducerPort>, id<FBMPConsumerPort>> *_field1;
    struct pair<id<FBMPProducerPort>, id<FBMPConsumerPort>> *_field2;
    struct __compressed_pair<std::__1::pair<id<FBMPProducerPort>, id<FBMPConsumerPort>>*, std::__1::allocator<std::__1::pair<id<FBMPProducerPort>, id<FBMPConsumerPort>>>> {
        struct pair<id<FBMPProducerPort>, id<FBMPConsumerPort>> *_field1;
    } _field3;
};

struct vector<std::__1::pair<std::__1::unordered_map<std::__1::basic_string<char>, std::__1::pair<double, double>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::pair<double, double>>>>, facebook::mobile::xplat::livestreaming::AdaptiveBitrateControlParameters>, std::__1::allocator<std::__1::pair<std::__1::unordered_map<std::__1::basic_string<char>, std::__1::pair<double, double>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::pair<double, double>>>>, facebook::mobile::xplat::livestreaming::AdaptiveBitrateControlParameters>>> {
    struct pair<std::__1::unordered_map<std::__1::basic_string<char>, std::__1::pair<double, double>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::pair<double, double>>>>, facebook::mobile::xplat::livestreaming::AdaptiveBitrateControlParameters> *__begin_;
    struct pair<std::__1::unordered_map<std::__1::basic_string<char>, std::__1::pair<double, double>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::pair<double, double>>>>, facebook::mobile::xplat::livestreaming::AdaptiveBitrateControlParameters> *__end_;
    struct __compressed_pair<std::__1::pair<std::__1::unordered_map<std::__1::basic_string<char>, std::__1::pair<double, double>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::pair<double, double>>>>, facebook::mobile::xplat::livestreaming::AdaptiveBitrateControlParameters>*, std::__1::allocator<std::__1::pair<std::__1::unordered_map<std::__1::basic_string<char>, std::__1::pair<double, double>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::pair<double, double>>>>, facebook::mobile::xplat::livestreaming::AdaptiveBitrateControlParameters>>> {
        struct pair<std::__1::unordered_map<std::__1::basic_string<char>, std::__1::pair<double, double>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::pair<double, double>>>>, facebook::mobile::xplat::livestreaming::AdaptiveBitrateControlParameters> *__first_;
    } __end_cap_;
};

struct vector<std::__1::pair<void (^)(double), NSObject<OS_dispatch_queue>*>, std::__1::allocator<std::__1::pair<void (^)(double), NSObject<OS_dispatch_queue>*>>> {
    struct pair<void (^)(double), NSObject<OS_dispatch_queue>*> *__begin_;
    struct pair<void (^)(double), NSObject<OS_dispatch_queue>*> *__end_;
    struct __compressed_pair<std::__1::pair<void (^)(double), NSObject<OS_dispatch_queue>*>*, std::__1::allocator<std::__1::pair<void (^)(double), NSObject<OS_dispatch_queue>*>>> {
        struct pair<void (^)(double), NSObject<OS_dispatch_queue>*> *__first_;
    } __end_cap_;
};

struct vector<std::__1::shared_ptr<facebook::videostreaming::SimpleVideoRecorder>, std::__1::allocator<std::__1::shared_ptr<facebook::videostreaming::SimpleVideoRecorder>>> {
    shared_ptr_9c840082 *__begin_;
    shared_ptr_9c840082 *__end_;
    struct __compressed_pair<std::__1::shared_ptr<facebook::videostreaming::SimpleVideoRecorder>*, std::__1::allocator<std::__1::shared_ptr<facebook::videostreaming::SimpleVideoRecorder>>> {
        shared_ptr_9c840082 *__first_;
    } __end_cap_;
};

struct vector<std::__1::shared_ptr<rtc::tslog::TimeSeriesStream>, std::__1::allocator<std::__1::shared_ptr<rtc::tslog::TimeSeriesStream>>> {
    struct shared_ptr<rtc::tslog::TimeSeriesStream> *_field1;
    struct shared_ptr<rtc::tslog::TimeSeriesStream> *_field2;
    struct __compressed_pair<std::__1::shared_ptr<rtc::tslog::TimeSeriesStream>*, std::__1::allocator<std::__1::shared_ptr<rtc::tslog::TimeSeriesStream>>> {
        struct shared_ptr<rtc::tslog::TimeSeriesStream> *_field1;
    } _field3;
};

struct vector<std::__1::unique_ptr<facebook::mqttchannel::TopicListener, std::__1::default_delete<facebook::mqttchannel::TopicListener>>, std::__1::allocator<std::__1::unique_ptr<facebook::mqttchannel::TopicListener, std::__1::default_delete<facebook::mqttchannel::TopicListener>>>> {
    struct unique_ptr<facebook::mqttchannel::TopicListener, std::__1::default_delete<facebook::mqttchannel::TopicListener>> *_field1;
    struct unique_ptr<facebook::mqttchannel::TopicListener, std::__1::default_delete<facebook::mqttchannel::TopicListener>> *_field2;
    struct __compressed_pair<std::__1::unique_ptr<facebook::mqttchannel::TopicListener, std::__1::default_delete<facebook::mqttchannel::TopicListener>>*, std::__1::allocator<std::__1::unique_ptr<facebook::mqttchannel::TopicListener, std::__1::default_delete<facebook::mqttchannel::TopicListener>>>> {
        struct unique_ptr<facebook::mqttchannel::TopicListener, std::__1::default_delete<facebook::mqttchannel::TopicListener>> *_field1;
    } _field3;
};

struct vector<unsigned char, std::__1::allocator<unsigned char>> {
    char *__begin_;
    char *__end_;
    struct __compressed_pair<unsigned char *, std::__1::allocator<unsigned char>> {
        char *__first_;
    } __end_cap_;
};

struct vector<unsigned int, std::__1::allocator<unsigned int>> {
    unsigned int *__begin_;
    unsigned int *__end_;
    struct __compressed_pair<unsigned int *, std::__1::allocator<unsigned int>> {
        unsigned int *__first_;
    } __end_cap_;
};

struct vector<unsigned long long, std::__1::allocator<unsigned long long>> {
    unsigned long long *_field1;
    unsigned long long *_field2;
    struct __compressed_pair<unsigned long long *, std::__1::allocator<unsigned long long>> {
        unsigned long long *_field1;
    } _field3;
};

struct z_stream_s {
    char *next_in;
    unsigned int avail_in;
    unsigned long long total_in;
    char *next_out;
    unsigned int avail_out;
    unsigned long long total_out;
    char *msg;
    struct internal_state *state;
    CDUnknownFunctionPointerType zalloc;
    CDUnknownFunctionPointerType zfree;
    void *opaque;
    int data_type;
    unsigned long long adler;
    unsigned long long reserved;
};

#if 0
// Names with conflicting types:
typedef struct {
    struct _GLKVector2 _field1;
    double _field2;
    double _field3;
    double _field4;
    double _field5;
} _IGTouchSample_67dca217;

typedef struct {
    union _GLKVector2 _field1;
    double _field2;
    double _field3;
    double _field4;
    double _field5;
} _IGTouchSample_8081ab9f;

#endif

#pragma mark Typedef'd Structures

typedef struct {
    _Bool irisExperimentEnabled;
    _Bool sandboxEnabled;
    _Bool shouldSubscribeToLiveTopic;
    _Bool isXplatMQTTAndWhistleEnabled;
    _Bool isMQTTOverH2Enabled;
    _Bool shouldSubscribeToPresenceUpdates;
    _Bool shouldUseNewVisualMessagingCursors;
    _Bool logAnalyticsEventForUser;
    _Bool blendedInboxExperimentEnabled;
} CDStruct_36b82515;

typedef struct {
    _Bool _field1;
    _Bool _field2;
    _Bool _field3;
    _Bool _field4;
    int _field5;
    _Bool _field6;
    unsigned int _field7;
    _Bool _field8;
    _Bool _field9;
    _Bool _field10;
    _Bool _field11;
    _Bool _field12;
    _Bool _field13;
    _Bool _field14;
} CDStruct_2fd9fc7b;

typedef struct {
    _Bool _field1;
    unsigned char _field2;
    _Bool _field3;
    unsigned long long _field4;
} CDStruct_6a6a01a4;

typedef struct {
    _Bool containsStaticImage;
    unsigned long long deviceSource;
} CDStruct_1916703e;

typedef struct {
    _Bool shouldCache;
    double cacheTimeout;
} CDStruct_f2b70bfe;

typedef struct {
    _Bool _field1;
    long long _field2;
    long long _field3;
    long long _field4;
} CDStruct_3b464f53;

typedef struct {
    _Bool skipPermissionRequests;
} CDStruct_3f9b6990;

typedef struct {
    unsigned long long activeAllocationsCount;
    unsigned long long activeAllocationsSize;
    unsigned long long activeTracesCount;
    unsigned long long activeTracesSize;
    unsigned long long eventsQueueSize;
    unsigned long long sampledSetCount;
    unsigned long long sampledSetSize;
    _Bool hasSampled;
    _Bool useExternalVersion;
} CDStruct_065a5dcd;

typedef struct {
    unsigned long long components;
    unsigned long long audioButtonOverlayPosition;
} CDStruct_fb1c0d4a;

typedef struct {
    unsigned long long _field1;
    id *_field2;
    unsigned long long *_field3;
    unsigned long long _field4[5];
} CDStruct_70511ce9;

typedef struct {
    unsigned long long count;
    double *array;
} CDStruct_3b9f1d24;

typedef struct {
    unsigned int _exponent:8;
    unsigned int _length:4;
    unsigned int _isNegative:1;
    unsigned int _isCompact:1;
    unsigned int _reserved:18;
    unsigned short _mantissa[8];
} CDStruct_6ece915e;

typedef struct {
    double timeout;
    double maximumAge;
    double accuracy;
    double distanceFilter;
    _Bool useSignificantChanges;
} CDStruct_6dd8fab3;

typedef struct {
    double fieldOfView;
    double aspectRatio;
    double gyroDelay;
    double shutterSpeed;
    char gyroOrientation[3];
} CDStruct_c91b0ade;

typedef struct {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
    double _field5;
    double _field6;
    _Bool _field7;
    double _field8;
    double _field9;
    double _field10;
    double _field11;
    double _field12;
    double _field13;
} CDStruct_4bf883ae;

typedef struct {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
} CDStruct_d2b197d1;

typedef struct {
    double latitudeDelta;
    double longitudeDelta;
} CDStruct_951efa70;

typedef struct {
    double initialRetryInterval;
    long long maxNumberOfFailures;
    double maximumAllowableRetryTime;
} CDStruct_ee3e10fe;

typedef struct {
    long long _field1;
    _Bool _field2;
} CDStruct_43bd567f;

typedef struct {
    long long _field1;
    unsigned long long _field2;
} CDStruct_1dee9796;

typedef struct {
    long long _field1;
    void *_field2;
    CDUnknownFunctionPointerType _field3;
    CDUnknownFunctionPointerType _field4;
    CDUnknownFunctionPointerType _field5;
} CDStruct_e097db04;

typedef struct {
    long long value;
    int timescale;
    unsigned int flags;
    long long epoch;
} CDStruct_1b6d18a9;

typedef struct {
    long long _field1;
    int _field2;
    int _field3;
    long long _field4;
    long long _field5;
    long long _field6;
    int _field7;
    unsigned int _field8;
} CDStruct_a127dee8;

typedef struct {
    long long cameraPosition;
    long long cameraOrientation;
    _Bool isColdStartEntry;
} CDStruct_2edefe3d;

typedef struct {
    long long _field1;
    long long _field2;
    long long _field3;
} CDStruct_2ec95fd7;

typedef struct {
    long long maximumUntruncatedNumberOfLines;
    long long truncateToNumberOfLines;
} CDStruct_ce671a2f;

typedef struct CDStruct_183601bc;

typedef struct {
    _Bool playerOverlaysEnabled;
    CDStruct_fb1c0d4a overlayOptions;
    unsigned long long watchAndMoreButtonType;
    _Bool watchAndMoreEnabled;
    _Bool timeIndicatorDisabled;
    _Bool tapForSoundDisabled;
    _Bool videoStitchingEnabled;
    _Bool carouselVideoPrefetchingEnabled;
} CDStruct_80bd44e7;

typedef struct {
    unsigned long long defaultMallocBytes;
    unsigned long long webKitBytes;
    unsigned long long customJSCMallocBytes;
    unsigned long long customJSCGCHeapBytes;
    unsigned long long drawRectBytes;
    unsigned long long bitmapBytes;
    unsigned long long decodedImageBytes;
    unsigned long long ioKitBytes;
    unsigned long long stackBytes;
    unsigned long long sqliteBytes;
    unsigned long long coreUIBytes;
    unsigned long long foundationBytes;
    struct {
        unsigned long long size;
        unsigned long long rss;
        unsigned long long swap;
    } textSection;
    unsigned long long unattributedBytes;
} CDStruct_0aeb17ac;

typedef struct {
    unsigned long long count;
    double baseLine;
    double lineHeight;
    struct __CTLine **lines;
    double *widths;
} CDStruct_7a56664d;

typedef struct {
    CDStruct_183601bc *_field1;
    unsigned long long _field2;
} CDStruct_7ba9a352;

typedef struct {
    struct CGColor *_field1;
    struct CGColor *_field2;
    struct CGColor *_field3;
    struct CGColor *_field4;
} CDStruct_a5ac02f4;

typedef struct {
    CDStruct_1b6d18a9 start;
    CDStruct_1b6d18a9 duration;
} CDStruct_e83c9415;

typedef struct {
    struct CGSize cellSize;
    double viewHeight;
} CDStruct_afe9634b;

typedef struct {
    struct CGSize speakerSize;
    struct CGSize smallSoundwaveSize;
    struct CGSize bigSoundwaveSize;
    struct CGSize soundwaveAreaSize;
    struct CGSize crossSize;
    double speakerSoundwavePadding;
    double speakerCrossPadding;
} CDStruct_b17e9ffe;

typedef struct {
    struct CLLocationCoordinate2D _field1;
    CDStruct_951efa70 _field2;
} CDStruct_d53ed6ef;

typedef struct {
    struct tm_zip_s _field1;
    unsigned long long _field2;
    unsigned long long _field3;
    unsigned long long _field4;
} CDStruct_192a48cb;

typedef struct {
    union _GLKVector4 _field1;
    union _GLKVector4 _field2;
} CDStruct_8aefd972;

typedef struct {
    union _GLKVector4 _field1;
    unsigned int _field2;
    float _field3;
    float _field4;
} CDStruct_07a05ba3;

typedef struct {
    struct CGRect _field1;
    struct CGRect _field2;
    struct CGRect _field3;
    struct CGRect _field4;
    struct CGRect _field5;
    struct CGRect _field6;
    struct CGRect _field7;
} CDStruct_b7a5ad77;

typedef struct {
    struct DiskVideoRecorderConfig diskRecordingConfig;
    _Bool recordOnDisk;
    _Bool useTimeSeriesLogging;
    _Bool skipFlushDuringSwap;
    int initialVideoBitrateKbps;
    int minVideoBitrateKbps;
    int maxVideoBitrateKbps;
    int bitrateScalerGranularity;
    int bitrateScalerMinHeight;
    int bitrateScalerMaxHeight;
    int framerate;
    int h264MaxEncodeFailureRetries;
    _Bool h264UseCABAC;
    _Bool audioInterruptionRestartDisabled;
    _Bool aacOverride;
    _Bool useAudioUnitWrapper;
    _Bool rtcH264ResetEncoderOnError;
    _Bool preferWifi;
    NSString *loggingLevels;
    _Bool useSendStreamDry;
    _Bool useNewFrameDropperImplementation;
    _Bool enableSendSidePacer;
} CDStruct_8b75df4c;

typedef struct {
    struct DiskVideoRecorderConfig diskRecordingConfig;
    _Bool recordOnDisk;
    _Bool videoCroppingEnabled;
    struct CGSize encodingDimension;
} CDStruct_f5ef7fd3;

typedef struct {
    NSURL *rtmpURL;
    NSURL *fbLiveURL;
    struct shared_ptr<const std::__1::vector<unsigned char, std::__1::allocator<unsigned char>>> rtmpConnectionToken;
    struct shared_ptr<const std::__1::vector<unsigned char, std::__1::allocator<unsigned char>>> fbLiveConnectionToken;
    struct AudioConfig audioConfig;
    struct VideoConfig videoConfig;
    struct {
        int sendHardTimeoutMsec;
        int sendCheckTimeoutMsec;
        int queueCapacityInBytes;
        double queueVideoCapacityInSeconds;
        int percentageOfCapacityToDrop;
        int connectionRetryCount;
        int connectionRetryDelay;
        int speedTestPayloadSize;
        int speedTestPayloadChunkSize;
        int speedTestWaitResponseTimeoutInSeconds;
        unsigned long long measurementsIntervalInMs;
        double speedTestMinimumBandwidthThreshold;
        int speedTestRetryMaxCount;
        double speedTestRetryTimeDelay;
        _Bool speedTestDisable;
        _Bool shouldProbeRTTWithPings;
        _Bool useSSLFactory;
        _Bool use1RTTconnectionSetup;
        _Bool useVideoProtocol;
        _Bool enableQuic;
        long long sendBufferSize;
    } networkConfig;
    struct PartialReliabilityConfig partialRelConfig;
    struct ThroughputMonitorConfig throughputMonitorConfig;
    struct AdaptiveBitrateConfig adaptiveBitrateConfig;
    struct DiskVideoRecorderConfig diskRecordingConfig;
    _Bool recordOnDisk;
    struct FBVideoBroadcastSessionTimestampConfig timestampConfig;
    _Bool useMaxBitrateWifiOverride;
    struct FBPassThruConfig passThruConfig;
    struct LiveTraceConfig liveTraceConfig;
    _Bool useBitrateAdjuster;
} CDStruct_bdc2dcf0;

// Ambiguous groups
typedef struct {
    _Bool _field1;
    _Bool _field2;
    _Bool _field3;
} CDStruct_2a4d9400;

typedef struct {
    _Bool disableLeftEdgeSwiping;
    _Bool disableRightEdgeSwiping;
    _Bool disableRightEdgeSwipeIntoDirect;
} CDStruct_a10f7afe;

typedef struct {
    _Bool _field1;
    _Bool _field2;
} CDStruct_3d581f42;

typedef struct {
    unsigned long long _field1;
    unsigned long long _field2;
    unsigned long long _field3;
} CDStruct_14f26992;

typedef struct {
    double _field1;
    double _field2;
    double _field3;
} CDStruct_39925896;

typedef struct {
    double scrollPosition;
    double scale;
    double translation;
} CDStruct_3a76e9cc;

typedef struct {
    float _field1;
    float _field2;
    float _field3;
    float _field4;
} CDStruct_818bb265;

typedef struct {
    float r;
    float g;
    float b;
    float a;
} CDStruct_83984b6f;

typedef struct {
    float s;
    float t;
    float p;
    float q;
} CDStruct_f8b81486;

typedef struct {
    float x;
    float y;
    float z;
    float w;
} CDStruct_f2e236b6;

typedef struct Either<NSError *, FBDiskVideoRecorderDiskResults *> {
    NSError *_left;
    FBDiskVideoRecorderDiskResults *_right;
    _Bool _isLeft;
} Either_4472cfe1;

typedef struct Either<NSError *, id<FBMPData>> {
    id _field1;
    id _field2;
    _Bool _field3;
} Either_964923b2;

typedef struct ObservableHelper<facebook::liger::LigerPushNotificationCallbackWrapper> {
    struct shared_ptr<facebook::mobile::xplat::executor::details::ObservableHelperImpl<facebook::mobile::xplat::executor::details::PointerObserverInfo<facebook::liger::LigerPushNotificationCallbackWrapper>>> _field1;
} ObservableHelper_eeb51dca;

typedef struct Optional<msqrd::shared_ref<const msqrd::services::IEffectDataSnapshotterCreator>> {
    struct Storage _field1;
} Optional_0b2a7aa5;

typedef struct Optional<msqrd::shared_ref<msqrd::logging::RenderTimeLogger>> {
    struct Storage _field1;
} Optional_d380e77e;

typedef struct Optional<msqrd::shared_ref<msqrd::servicehost::IEffectSessionListener>> {
    struct Storage _field1;
} Optional_05e8930b;

typedef struct Optional<msqrd::shared_ref<msqrd::services::IServiceConfiguration>> {
    struct Storage _field1;
} Optional_0a27d0c3;

typedef struct Optional<unsigned int> {
    struct Storage _field1;
} Optional_2a1b81ce;

typedef struct PromiseEither<NSError *, FBDiskVideoRecorderDiskResults *> {
    struct shared_ptr<FB::Promise<FB::Functional::Either<NSError *, FBDiskVideoRecorderDiskResults *>>> _field1;
} PromiseEither_ab4a425c;

typedef struct Range<const msqrd::platform::IScriptingLogger::WatchEntry *> {
    struct WatchEntry *_field1;
    struct WatchEntry *_field2;
} Range_88fef6a7;

typedef struct SpringSolver<POP::Vector4<double>> {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
    double _field5;
    double _field6;
    double _field7;
    struct SSState<POP::Vector4<double>> _field8;
    struct Vector4<double> _field9;
    _Bool _field10;
} SpringSolver_fe820e75;

typedef struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
    struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
        struct __rep {
            union {
                struct __long {
                    char *__data_;
                    unsigned long long __size_;
                    unsigned long long __cap_;
                } __l;
                struct __short {
                    char __data_[23];
                    struct {
                        unsigned char __size_;
                    } ;
                } __s;
                struct __raw {
                    unsigned long long __words[3];
                } __r;
            } ;
        } __first_;
    } __r_;
} basic_string_a490aa4c;

typedef struct function<void (IGNetworkReachabilityStatus, IGNetworkReachabilityStatus)> {
    struct type __buf_;
    struct __base<void (IGNetworkReachabilityStatus, IGNetworkReachabilityStatus)> *__f_;
} function_5936182b;

typedef struct list<std::__1::shared_ptr<POPAnimatorItem>, std::__1::allocator<std::__1::shared_ptr<POPAnimatorItem>>> {
    struct __list_node_base<std::__1::shared_ptr<POPAnimatorItem>, void *> __end_;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<std::__1::shared_ptr<POPAnimatorItem>, void *>>> {
        unsigned long long __first_;
    } __size_alloc_;
} list_670f5810;

typedef struct map<double, boost::qvm::quat<double>, std::__1::less<double>, std::__1::allocator<std::__1::pair<const double, boost::qvm::quat<double>>>> {
    struct __tree<std::__1::__value_type<double, boost::qvm::quat<double>>, std::__1::__map_value_compare<double, std::__1::__value_type<double, boost::qvm::quat<double>>, std::__1::less<double>, true>, std::__1::allocator<std::__1::__value_type<double, boost::qvm::quat<double>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<double, boost::qvm::quat<double>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<double, std::__1::__value_type<double, boost::qvm::quat<double>>, std::__1::less<double>, true>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
} map_6ecac17c;

typedef struct map<int, IGRegion, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, IGRegion>>> {
    struct __tree<std::__1::__value_type<int, IGRegion>, std::__1::__map_value_compare<int, std::__1::__value_type<int, IGRegion>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, IGRegion>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, IGRegion>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<int, std::__1::__value_type<int, IGRegion>, std::__1::less<int>, true>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
} map_98c9320c;

typedef struct map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char>>>> {
    struct __tree<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::less<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::less<std::__1::basic_string<char>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
} map_5554a4ce;

typedef struct pair<NSArray<FBCaptureCoordinatorFilter *>*, NSArray<FBCaptureCoordinatorFilter *>*> {
    id _field1;
    id _field2;
} pair_0b3c222c;

typedef struct pair<id<FBMPInput>, id<FBMPOutput>> {
    id _field1;
    id _field2;
} pair_c442e4d7;

typedef struct quat<double> {
    double _field1[4];
} quat_f7c121b3;

typedef struct shared_ptr<FBVideoBroadcastSessionStats> {
    struct FBVideoBroadcastSessionStats *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_44918ef6;

typedef struct shared_ptr<POPAnimatorItem> {
    struct POPAnimatorItem *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_1553c9f8;

typedef struct shared_ptr<const msqrd::manifest::Manifest> {
    struct Manifest *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_8f3f58d1;

typedef struct shared_ptr<facebook::audiofiltercore::AudioInput<short>> {
    struct AudioInput<short> *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_7cd5474a;

typedef struct shared_ptr<facebook::audiofiltercore::AudioInputWithProgress<short>> {
    struct AudioInputWithProgress<short> *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_dbdec512;

typedef struct shared_ptr<facebook::audiofiltercore::AudioLoop<short>> {
    struct AudioLoop<short> *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_4525b5cc;

typedef struct shared_ptr<facebook::audiofiltercore::IAudioComponent> {
    struct IAudioComponent *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_e5dbc317;

typedef struct shared_ptr<facebook::graphics::GPUTimer> {
    struct GPUTimer *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_7d4d5427;

typedef struct shared_ptr<facebook::liger::LigerPushNotificationCallback> {
    struct LigerPushNotificationCallback *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_1dbe9edf;

typedef struct shared_ptr<facebook::livestreaming::RtmpSSLFactory> {
    struct RtmpSSLFactory *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_f32f4099;

typedef struct shared_ptr<facebook::mobile::FBSSLKeyMaterialListenerAbstractLogger> {
    struct FBSSLKeyMaterialListenerAbstractLogger *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_1317cc0b;

typedef struct shared_ptr<facebook::mobile::perflogger::QuickPerformanceLogger> {
    struct QuickPerformanceLogger *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_e62c5e43;

typedef struct shared_ptr<facebook::mobile::perflogger::QuickPerformanceLoggerBase> {
    struct QuickPerformanceLoggerBase *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_2811b282;

typedef struct shared_ptr<facebook::mobile::xplat::executor::SerialExecutor> {
    struct SerialExecutor *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_1fd1dc02;

typedef struct shared_ptr<facebook::mobile::xplat::livestreaming::AdaptiveBitrateAlgorithm> {
    struct AdaptiveBitrateAlgorithm *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_8dc028ac;

typedef struct shared_ptr<facebook::mobile::xplat::livestreaming::AdaptiveBitrateAlgorithmFactory> {
    struct AdaptiveBitrateAlgorithmFactory *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_0cdddaf5;

typedef struct shared_ptr<facebook::mobile::xplat::livestreaming::AdaptiveBitrateInputParameterProcessor> {
    struct AdaptiveBitrateInputParameterProcessor *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_de4e634a;

typedef struct shared_ptr<facebook::mobile::xplat::livestreaming::AudioPacketizerFactory> {
    struct AudioPacketizerFactory *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_b7837d35;

typedef struct shared_ptr<facebook::mobile::xplat::livestreaming::Exception> {
    struct Exception *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_0529d599;

typedef struct shared_ptr<facebook::mobile::xplat::livestreaming::NetworkSession> {
    struct NetworkSession *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_c386cb19;

typedef struct shared_ptr<facebook::mobile::xplat::livestreaming::NetworkSessionFactory> {
    struct NetworkSessionFactory *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_75e1c217;

typedef struct shared_ptr<facebook::mobile::xplat::livestreaming::VideoPacketizerFactory> {
    struct VideoPacketizerFactory *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_0a7db57b;

typedef struct shared_ptr<facebook::mobile::xplat::reachability::ReachabilityAnnouncer> {
    struct ReachabilityAnnouncer *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_d61e43bb;

typedef struct shared_ptr<facebook::quickfire::AVCFrame> {
    struct AVCFrame *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_d7f3c67e;

typedef struct shared_ptr<facebook::react::JSExecutorFactory> {
    struct JSExecutorFactory *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_7c4996dd;

typedef struct shared_ptr<facebook::react::ModuleRegistry> {
    struct ModuleRegistry *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_8e97821c;

typedef struct shared_ptr<facebook::tigon::TigonService> {
    struct TigonService *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_05689265;

typedef struct shared_ptr<facebook::videostreaming::SimpleVideoRecorder> {
    struct SimpleVideoRecorder *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_9c840082;

typedef struct shared_ptr<msqrd::capture::CaptureEventService> {
    struct CaptureEventService *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_8df39f26;

typedef struct shared_ptr<msqrd::dataprovider::GestureEvent> {
    struct GestureEvent *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_549641cb;

typedef struct shared_ptr<msqrd::dataprovider::IMotionDataProvider> {
    struct IMotionDataProvider *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_06308cee;

typedef struct shared_ptr<msqrd::fx::IViewport> {
    struct IViewport *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_28782c24;

typedef struct shared_ptr<msqrd::motion::MotionDataProvider> {
    struct MotionDataProvider *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_692abb54;

typedef struct shared_ptr<msqrd::platform::IDeformationEvents> {
    struct IDeformationEvents *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_487a4958;

typedef struct shared_ptr<msqrd::platform::IShaderLogger> {
    struct IShaderLogger *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_6266c83b;

typedef struct shared_ptr<msqrd::touch::TouchGesturesDataProvider> {
    struct TouchGesturesDataProvider *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_6e0e6635;

typedef struct shared_ptr<rtc::tslog::TimeSeriesStreamWrapper> {
    struct TimeSeriesStreamWrapper *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_ec24f4c4;

typedef struct shared_ptr<std::__1::basic_string<char>> {
    basic_string_a490aa4c *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_aecb8741;

typedef struct shared_ptr<std::__1::vector<facebook::mobile::xplat::livestreaming::DroppedFrame, std::__1::allocator<facebook::mobile::xplat::livestreaming::DroppedFrame>>> {
    struct vector<facebook::mobile::xplat::livestreaming::DroppedFrame, std::__1::allocator<facebook::mobile::xplat::livestreaming::DroppedFrame>> *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_3f407d03;

typedef struct shared_ptr<void> {
    void *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_b60d0e1e;

typedef struct shared_ref<facebook::arengineservices::LockedPixelBuffer> {
    struct shared_ptr<facebook::arengineservices::LockedPixelBuffer> _field1;
} shared_ref_ee0a2387;

typedef struct shared_ref<msqrd::experiment::IExperimentConfig> {
    struct shared_ptr<msqrd::experiment::IExperimentConfig> _field1;
} shared_ref_5cdfb9eb;

typedef struct shared_ref<msqrd::player::ISessionPlayer> {
    struct shared_ptr<msqrd::player::ISessionPlayer> _field1;
} shared_ref_d7b05e06;

typedef struct time_point<std::__1::chrono::steady_clock, std::__1::chrono::duration<long long, std::__1::ratio<1, 1000000000>>> {
    struct duration<long long, std::__1::ratio<1, 1000000000>> __d_;
} time_point_e708cccf;

typedef struct tmat4x4<float> {
    struct tvec4<float> value[4];
} tmat4x4_991879e6;

typedef struct unique_ptr<facebook::mobile::xplat::executor::ObserverToken, std::__1::default_delete<facebook::mobile::xplat::executor::ObserverToken>> {
    struct __compressed_pair<facebook::mobile::xplat::executor::ObserverToken *, std::__1::default_delete<facebook::mobile::xplat::executor::ObserverToken>> {
        struct ObserverToken *_field1;
    } _field1;
} unique_ptr_b889f52c;

typedef struct unique_ptr<facebook::react::JSExecutorFactory, std::__1::default_delete<facebook::react::JSExecutorFactory>> {
    struct __compressed_pair<facebook::react::JSExecutorFactory *, std::__1::default_delete<facebook::react::JSExecutorFactory>> {
        struct JSExecutorFactory *_field1;
    } _field1;
} unique_ptr_0e0e1873;

typedef struct unique_ptr<facebook::tigon::TigonCallbacks, std::__1::default_delete<facebook::tigon::TigonCallbacks>> {
    struct __compressed_pair<facebook::tigon::TigonCallbacks *, std::__1::default_delete<facebook::tigon::TigonCallbacks>> {
        struct TigonCallbacks *__first_;
    } __ptr_;
} unique_ptr_1598e8fa;

typedef struct unique_ptr<facebook::tigon::TigonRequestToken, std::__1::default_delete<facebook::tigon::TigonRequestToken>> {
    struct __compressed_pair<facebook::tigon::TigonRequestToken *, std::__1::default_delete<facebook::tigon::TigonRequestToken>> {
        struct TigonRequestToken *__first_;
    } __ptr_;
} unique_ptr_175e7612;

typedef struct unique_ptr<facebook::tigon::TigonService, std::__1::default_delete<facebook::tigon::TigonService>> {
    struct __compressed_pair<facebook::tigon::TigonService *, std::__1::default_delete<facebook::tigon::TigonService>> {
        struct TigonService *__first_;
    } __ptr_;
} unique_ptr_e9d5c0d2;

typedef struct unique_ptr<facebook::xplat::module::CxxModule, std::__1::default_delete<facebook::xplat::module::CxxModule>> {
    struct __compressed_pair<facebook::xplat::module::CxxModule *, std::__1::default_delete<facebook::xplat::module::CxxModule>> {
        struct CxxModule *__first_;
    } __ptr_;
} unique_ptr_e5e57f22;

typedef struct unordered_map<Class<IGUserSessionObject>, std::__1::shared_future<Value>, std::__1::hash<Class<IGUserSessionObject>>, std::__1::equal_to<Class<IGUserSessionObject>>, std::__1::allocator<std::__1::pair<const Class<IGUserSessionObject>, std::__1::shared_future<Value>>>> {
    struct __hash_table<std::__1::__hash_value_type<Class<IGUserSessionObject>, std::__1::shared_future<Value>>, std::__1::__unordered_map_hasher<Class<IGUserSessionObject>, std::__1::__hash_value_type<Class<IGUserSessionObject>, std::__1::shared_future<Value>>, std::__1::hash<Class<IGUserSessionObject>>, true>, std::__1::__unordered_map_equal<Class<IGUserSessionObject>, std::__1::__hash_value_type<Class<IGUserSessionObject>, std::__1::shared_future<Value>>, std::__1::equal_to<Class<IGUserSessionObject>>, true>, std::__1::allocator<std::__1::__hash_value_type<Class<IGUserSessionObject>, std::__1::shared_future<Value>>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<Class<IGUserSessionObject>, std::__1::shared_future<Value>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<Class<IGUserSessionObject>, std::__1::shared_future<Value>>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<Class<IGUserSessionObject>, std::__1::shared_future<Value>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<Class<IGUserSessionObject>, std::__1::shared_future<Value>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<Class<IGUserSessionObject>, std::__1::shared_future<Value>>, void *>*> __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<Class<IGUserSessionObject>, std::__1::__hash_value_type<Class<IGUserSessionObject>, std::__1::shared_future<Value>>, std::__1::hash<Class<IGUserSessionObject>>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<Class<IGUserSessionObject>, std::__1::__hash_value_type<Class<IGUserSessionObject>, std::__1::shared_future<Value>>, std::__1::equal_to<Class<IGUserSessionObject>>, true>> {
            float __first_;
        } __p3_;
    } __table_;
} unordered_map_d406c1e6;

typedef struct unordered_map<int, int, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, int>>> {
    struct __hash_table<std::__1::__hash_value_type<int, int>, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, int>, std::__1::hash<int>, true>, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, int>, std::__1::equal_to<int>, true>, std::__1::allocator<std::__1::__hash_value_type<int, int>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, int>, std::__1::hash<int>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, int>, std::__1::equal_to<int>, true>> {
            float _field1;
        } _field4;
    } _field1;
} unordered_map_de91ee6a;

typedef struct unordered_map<long, IGListMoveIndex *, std::__1::hash<long>, std::__1::equal_to<long>, std::__1::allocator<std::__1::pair<const long, IGListMoveIndex *>>> {
    struct __hash_table<std::__1::__hash_value_type<long, IGListMoveIndex *>, std::__1::__unordered_map_hasher<long, std::__1::__hash_value_type<long, IGListMoveIndex *>, std::__1::hash<long>, true>, std::__1::__unordered_map_equal<long, std::__1::__hash_value_type<long, IGListMoveIndex *>, std::__1::equal_to<long>, true>, std::__1::allocator<std::__1::__hash_value_type<long, IGListMoveIndex *>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, IGListMoveIndex *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, IGListMoveIndex *>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, IGListMoveIndex *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<long, IGListMoveIndex *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, IGListMoveIndex *>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<long, std::__1::__hash_value_type<long, IGListMoveIndex *>, std::__1::hash<long>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<long, std::__1::__hash_value_type<long, IGListMoveIndex *>, std::__1::equal_to<long>, true>> {
            float _field1;
        } _field4;
    } _field1;
} unordered_map_6fea4092;

typedef struct unordered_set<std::__1::basic_string<char>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::basic_string<char>>> {
    struct __hash_table<std::__1::basic_string<char>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::basic_string<char>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::basic_string<char>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::basic_string<char>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::basic_string<char>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::basic_string<char>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::basic_string<char>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::hash<std::__1::basic_string<char>>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::equal_to<std::__1::basic_string<char>>> {
            float _field1;
        } _field4;
    } _field1;
} unordered_set_7cdfe647;

typedef struct variant<FBMPSessionConnectOperation, FBMPSessionConnectPortsOperation, FBMPSessionDisconnectOperation, FBMPSessionDisconnectPortsOperation, FBMPSessionReplaceOperation, FBMPSessionRemoveOperation> {
    int which_;
    struct aligned_storage<16, 8> storage_;
} variant_d68ec686;

typedef struct vector<CMTime, std::__1::allocator<CMTime>> {
    CDStruct_183601bc *_field1;
    CDStruct_183601bc *_field2;
    struct __compressed_pair<CMTime *, std::__1::allocator<CMTime>> {
        CDStruct_183601bc *_field1;
    } _field3;
} vector_1afa1685;

typedef struct vector<FNFMP4MoofAtom, std::__1::allocator<FNFMP4MoofAtom>> {
    struct FNFMP4MoofAtom *__begin_;
    struct FNFMP4MoofAtom *__end_;
    struct __compressed_pair<FNFMP4MoofAtom *, std::__1::allocator<FNFMP4MoofAtom>> {
        struct FNFMP4MoofAtom *__first_;
    } __end_cap_;
} vector_ae6e441d;

typedef struct vector<IGGallerySectionLayout, std::__1::allocator<IGGallerySectionLayout>> {
    struct IGGallerySectionLayout *__begin_;
    struct IGGallerySectionLayout *__end_;
    struct __compressed_pair<IGGallerySectionLayout *, std::__1::allocator<IGGallerySectionLayout>> {
        struct IGGallerySectionLayout *__first_;
    } __end_cap_;
} vector_f839dbbb;

typedef struct vector<int, std::__1::allocator<int>> {
    int *__begin_;
    int *__end_;
    struct __compressed_pair<int *, std::__1::allocator<int>> {
        int *__first_;
    } __end_cap_;
} vector_e0f2bd7e;

typedef struct vector<proxygen::TraceEvent, std::__1::allocator<proxygen::TraceEvent>> {
    struct TraceEvent *_field1;
    struct TraceEvent *_field2;
    struct __compressed_pair<proxygen::TraceEvent *, std::__1::allocator<proxygen::TraceEvent>> {
        struct TraceEvent *_field1;
    } _field3;
} vector_31c84f95;

typedef struct vector<std::__1::map<std::__1::basic_string<char>, std::__1::map<std::__1::basic_string<char>, double, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, double>>>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::map<std::__1::basic_string<char>, double, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, double>>>>>>, std::__1::allocator<std::__1::map<std::__1::basic_string<char>, std::__1::map<std::__1::basic_string<char>, double, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, double>>>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::map<std::__1::basic_string<char>, double, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, double>>>>>>>> {
    struct map<std::__1::basic_string<char>, std::__1::map<std::__1::basic_string<char>, double, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, double>>>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::map<std::__1::basic_string<char>, double, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, double>>>>>> *_field1;
    struct map<std::__1::basic_string<char>, std::__1::map<std::__1::basic_string<char>, double, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, double>>>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::map<std::__1::basic_string<char>, double, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, double>>>>>> *_field2;
    struct __compressed_pair<std::__1::map<std::__1::basic_string<char>, std::__1::map<std::__1::basic_string<char>, double, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, double>>>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::map<std::__1::basic_string<char>, double, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, double>>>>>>*, std::__1::allocator<std::__1::map<std::__1::basic_string<char>, std::__1::map<std::__1::basic_string<char>, double, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, double>>>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::map<std::__1::basic_string<char>, double, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, double>>>>>>>> {
        struct map<std::__1::basic_string<char>, std::__1::map<std::__1::basic_string<char>, double, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, double>>>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::map<std::__1::basic_string<char>, double, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, double>>>>>> *_field1;
    } _field3;
} vector_8ec4fdfd;

typedef struct vector<std::__1::pair<id<FBMPProducerPort>, id<FBMPConsumerPort>>, std::__1::allocator<std::__1::pair<id<FBMPProducerPort>, id<FBMPConsumerPort>>>> {
    struct pair<id<FBMPProducerPort>, id<FBMPConsumerPort>> *_field1;
    struct pair<id<FBMPProducerPort>, id<FBMPConsumerPort>> *_field2;
    struct __compressed_pair<std::__1::pair<id<FBMPProducerPort>, id<FBMPConsumerPort>>*, std::__1::allocator<std::__1::pair<id<FBMPProducerPort>, id<FBMPConsumerPort>>>> {
        struct pair<id<FBMPProducerPort>, id<FBMPConsumerPort>> *_field1;
    } _field3;
} vector_5871b4ad;

typedef struct vector<std::__1::unique_ptr<facebook::mqttchannel::TopicListener, std::__1::default_delete<facebook::mqttchannel::TopicListener>>, std::__1::allocator<std::__1::unique_ptr<facebook::mqttchannel::TopicListener, std::__1::default_delete<facebook::mqttchannel::TopicListener>>>> {
    struct unique_ptr<facebook::mqttchannel::TopicListener, std::__1::default_delete<facebook::mqttchannel::TopicListener>> *_field1;
    struct unique_ptr<facebook::mqttchannel::TopicListener, std::__1::default_delete<facebook::mqttchannel::TopicListener>> *_field2;
    struct __compressed_pair<std::__1::unique_ptr<facebook::mqttchannel::TopicListener, std::__1::default_delete<facebook::mqttchannel::TopicListener>>*, std::__1::allocator<std::__1::unique_ptr<facebook::mqttchannel::TopicListener, std::__1::default_delete<facebook::mqttchannel::TopicListener>>>> {
        struct unique_ptr<facebook::mqttchannel::TopicListener, std::__1::default_delete<facebook::mqttchannel::TopicListener>> *_field1;
    } _field3;
} vector_88f2426d;

typedef struct vector<unsigned long long, std::__1::allocator<unsigned long long>> {
    unsigned long long *_field1;
    unsigned long long *_field2;
    struct __compressed_pair<unsigned long long *, std::__1::allocator<unsigned long long>> {
        unsigned long long *_field1;
    } _field3;
} vector_cfeb9b06;

#pragma mark Named Unions

union _GLKMatrix2 {
    struct {
        float _field1;
        float _field2;
        float _field3;
        float _field4;
    } _field1;
    float _field2[2][2];
    float _field3[4];
};

union _GLKMatrix3 {
    struct {
        float _field1;
        float _field2;
        float _field3;
        float _field4;
        float _field5;
        float _field6;
        float _field7;
        float _field8;
        float _field9;
    } _field1;
    float _field2[9];
};

union _GLKMatrix4 {
    struct {
        float m00;
        float m01;
        float m02;
        float m03;
        float m10;
        float m11;
        float m12;
        float m13;
        float m20;
        float m21;
        float m22;
        float m23;
        float m30;
        float m31;
        float m32;
        float m33;
    } ;
    float m[16];
};

union _GLKQuaternion {
    struct {
        union _GLKVector3 _field1;
        float _field2;
    } _field1;
    struct {
        float _field1;
        float _field2;
        float _field3;
        float _field4;
    } _field2;
    float _field3[4];
};

union _GLKVector2 {
    struct {
        float x;
        float y;
    } ;
    struct {
        float s;
        float t;
    } ;
    float v[2];
};

union _GLKVector3 {
    struct {
        float x;
        float y;
        float z;
    } ;
    struct {
        float r;
        float g;
        float b;
    } ;
    struct {
        float s;
        float t;
        float p;
    } ;
    float v[3];
};

union _GLKVector4 {
    CDStruct_f2e236b6 ;
    CDStruct_83984b6f ;
    CDStruct_f8b81486 ;
    float v[4];
};

union data_t {
    char buf[16];
    struct a8 align_;
};

