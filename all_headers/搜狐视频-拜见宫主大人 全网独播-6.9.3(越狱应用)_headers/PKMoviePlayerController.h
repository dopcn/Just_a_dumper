//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

#import "TeaMediaPlayerDelegate-Protocol.h"

@class NSDictionary, NSString, NSURL, UIView;

@interface PKMoviePlayerController : NSObject <TeaMediaPlayerDelegate>
{
    _Bool _isPreparedToPlay;
    long long _loadState;
    long long _playbackState;
    double _duration;
    double _recordSeekCurrentTime;
    UIView *_view;
    long long _localServerState;
    NSString *_userAgentStr;
    UIView *_teaPlayerView;
    _Bool _alreadyInitDRM;
    _Bool _isPipPlaybackError;
    _Bool _tvIsVr;
    _Bool _isCallOpenPlayer;
    _Bool _shouldAutoplay;
    NSURL *_contentURL;
    double _pipPlaybackErrorTime;
    long long _movieSourceType;
    long long _scalingMode;
    long long _bufferringType;
    long long _bufferingProgress;
    double _initialPlaybackTime;
    NSURL *_contentURLForDLNA;
}

@property(retain, nonatomic) NSURL *contentURLForDLNA; // @synthesize contentURLForDLNA=_contentURLForDLNA;
@property(nonatomic) double initialPlaybackTime; // @synthesize initialPlaybackTime=_initialPlaybackTime;
@property(nonatomic) long long bufferingProgress; // @synthesize bufferingProgress=_bufferingProgress;
@property(nonatomic) long long bufferringType; // @synthesize bufferringType=_bufferringType;
@property(nonatomic) _Bool shouldAutoplay; // @synthesize shouldAutoplay=_shouldAutoplay;
@property(nonatomic) _Bool isCallOpenPlayer; // @synthesize isCallOpenPlayer=_isCallOpenPlayer;
@property(nonatomic) long long scalingMode; // @synthesize scalingMode=_scalingMode;
@property(nonatomic) long long movieSourceType; // @synthesize movieSourceType=_movieSourceType;
@property(nonatomic) _Bool tvIsVr; // @synthesize tvIsVr=_tvIsVr;
@property(nonatomic) double pipPlaybackErrorTime; // @synthesize pipPlaybackErrorTime=_pipPlaybackErrorTime;
@property(nonatomic) _Bool isPipPlaybackError; // @synthesize isPipPlaybackError=_isPipPlaybackError;
@property(copy, nonatomic) NSURL *contentURL; // @synthesize contentURL=_contentURL;
@property(readonly, nonatomic) long long localServerState; // @synthesize localServerState=_localServerState;
@property(readonly, nonatomic) long long playbackState; // @synthesize playbackState=_playbackState;
@property(readonly, nonatomic) long long loadState; // @synthesize loadState=_loadState;
@property(readonly, nonatomic) _Bool isPreparedToPlay; // @synthesize isPreparedToPlay=_isPreparedToPlay;
- (void).cxx_destruct;
- (_Bool)uninitDRMEnvironment;
- (id)getOfflineVideoUrl:(id)arg1 withType:(int)arg2 withParams:(id)arg3;
- (_Bool)initDRMEnvironment;
- (_Bool)stopDLNAServer;
- (void)fetchVideoURLForDLNAWithOriginURL:(id)arg1;
- (void)fetchVideoURLForDLNAWithOriginURL:(id)arg1 vid:(id)arg2 site:(id)arg3 defType:(long long)arg4;
@property(readonly, nonatomic) struct CGSize naturalSize;
@property(readonly, nonatomic) double downloadSpeed;
@property(readonly, nonatomic) double playableDuration;
@property(readonly, nonatomic) double duration;
@property(readonly, nonatomic, getter=isAirPlayVideoActive) _Bool airPlayVideoActive;
@property(nonatomic) _Bool allowsAirPlay;
@property(readonly, nonatomic) _Bool readyForDisplay;
@property(readonly, nonatomic) UIView *teaPlayerView;
@property(readonly, nonatomic) UIView *view;
- (void)setLocalServerStateStop;
- (void)setMPVolumeView:(id)arg1;
- (_Bool)isCachedVideoWithVid:(long long)arg1 site:(long long)arg2 defType:(long long)arg3 isCaptionVideo:(_Bool)arg4 otherId:(id)arg5;
- (void)clearCachedFiles;
@property(nonatomic) double currentPlaybackTime;
- (void)stop;
- (void)pause;
- (void)play;
- (void)prepareToPlay;
- (int)p_decoderType;
- (void)_applyPlayerConfig;
- (int)p_serviceType;
- (void)_playerReadyToPlay;
- (void)_rebulidVideoPlayerNeedResetView:(_Bool)arg1;
- (_Bool)isNowSOHUVideo;
- (void)forceRetryPlayCurrentVideo;
- (void)resetPlayer;
- (void)updatePlayerUserAgent:(id)arg1;
- (void)airplayStateChangedNotification:(id)arg1;
- (id)init;
- (id)initWithContentURL:(id)arg1;
- (void)dealloc;
@property(nonatomic) _Bool isSeek;
@property(nonatomic) _Bool isResetingPlayer;
@property(nonatomic) long long retryTimes;
- (_Bool)_stop;
@property(nonatomic) _Bool isUsingPIP;
- (void)onGetDlnaSource:(id)arg1;
- (void)onShowPlayerMessage:(id)arg1;
- (void)onAirPlayActiveDidChange:(long long)arg1;
- (void)onRouterQuality:(long long)arg1;
- (void)onSeekingBackward;
- (void)onSeekingForward;
- (void)onComplete;
- (void)onCatonAnalysis:(id)arg1;
- (void)onBufferingOk;
- (void)onBufferingUpdate:(long long)arg1;
- (void)onBufferingStart:(long long)arg1;
- (void)onFirstFrame;
- (void)onPrepared;
- (void)onErrorReport:(long long)arg1 arg:(void *)arg2;
- (void)_tryOnBufferingStart;
@property(readonly, nonatomic) NSString *teaMediaOperatorParam;
@property(readonly, nonatomic) long long teaMediaOperatorType;
@property(readonly, nonatomic) _Bool isOffline;
@property(readonly, nonatomic) _Bool isDRM;
@property(readonly, nonatomic) NSString *teaMediaPlayerOtherId;
@property(readonly, nonatomic) long long teaMediaPlayerDecoderType;
@property(readonly, nonatomic) long long teaMediaPlayerServiceType;
@property(readonly, nonatomic) long long teaMediaPlayerDefType;
@property(readonly, nonatomic) _Bool teaMediaPlayerIsCaptionVideo;
@property(readonly, nonatomic) NSString *teaMediaPlayerSite;
@property(readonly, nonatomic) NSString *teaMediaPlayerVid;
@property(readonly, nonatomic) NSString *teaMediaPlayerPath;
@property(retain, nonatomic) NSDictionary *userInfo;
- (void)pkMoviePlayerDidReceiveURLForDLNA:(id)arg1;
- (void)pkMoviePlayerViewTypeChange;
- (void)pkMoviePlayerAirplayActiveDidChange;
- (void)pkMoviePlayerPlaybackStateDidChange;
- (void)pkMoviePlayerLoadStateDidChange;
- (void)pkMoviePlayerRetryPlayWithAirplay;
- (void)pkMoviePlayerDurationAvailable;
- (void)pkMoviePlayerPlaybackIsPreparedToPlay;
- (void)pkMoviePlayerUpdateVideoViewFrame;
- (void)pkMoviePlayerPlaybackBufferingProgress;
- (void)pkMoviePlayerPlaybackDidFinish:(id)arg1;
- (void)pkMoviePlayerFirstFrameShow;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

