//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

@class MFSimpleDatabase, NSString;

@interface MFDbCollection : NSObject
{
    MFSimpleDatabase *database;
    NSString *tableName;
}

+ (id)collectionWithDatabase:(id)arg1 table:(id)arg2;
@property(readonly) NSString *tableName; // @synthesize tableName;
@property(readonly) MFSimpleDatabase *database; // @synthesize database;
- (_Bool)drop:(id)arg1;
- (_Bool)isRightEvent:(id)arg1;
- (_Bool)addTrigger:(id)arg1 at:(id)arg2 event:(id)arg3 update:(id)arg4;
- (_Bool)addTrigger:(id)arg1 afterEvent:(id)arg2 update:(id)arg3;
- (_Bool)addTrigger:(id)arg1 beforeEvent:(id)arg2 update:(id)arg3;
- (_Bool)addTrigger:(id)arg1 at:(id)arg2 event:(id)arg3 map:(id)arg4 toTable:(id)arg5 vFields:(id)arg6;
- (_Bool)addTrigger:(id)arg1 afterEvent:(id)arg2 map:(id)arg3 toTable:(id)arg4 vFields:(id)arg5;
- (_Bool)addTrigger:(id)arg1 beforeEvent:(id)arg2 map:(id)arg3 toTable:(id)arg4 vFields:(id)arg5;
- (_Bool)deleteForKey:(id)arg1 withValue:(id)arg2;
- (_Bool)delete:(id)arg1;
- (_Bool)delete;
- (unsigned long long)insertOrReplaceWithSqlString:(id)arg1 paraDictionaryArray:(id)arg2 outError:(id *)arg3;
- (unsigned long long)insertOrReplaceWithSqlString:(id)arg1 parameterDictionary:(id)arg2 error:(id *)arg3;
- (unsigned long long)insertOrReplaceUseMultiSQL:(id)arg1 rows:(id)arg2;
- (unsigned long long)insertOrReplaceUseUnionSQL:(id)arg1 rows:(id)arg2;
- (_Bool)update:(id)arg1 set:(id)arg2;
- (_Bool)updateForKey:(id)arg1 withValue:(id)arg2 row:(id)arg3;
- (_Bool)update:(id)arg1 row:(id)arg2;
- (_Bool)batchInsert:(id)arg1;
- (unsigned long long)batchUpsert:(id)arg1;
- (_Bool)upsertWithParameterDictionary:(id)arg1 error:(id *)arg2;
- (_Bool)upsert:(id)arg1;
- (_Bool)insert:(id)arg1;
- (id)findByKey:(id)arg1 andValues:(id)arg2 fields:(id)arg3;
- (long long)findCount:(id)arg1 withKey:(id)arg2;
- (id)ftsFindRange:(id)arg1 matchField:(id)arg2;
- (id)ftsFindRange:(id)arg1;
- (id)ftsFind:(id)arg1 matchField:(id)arg2 fields:(id)arg3;
- (id)ftsFind:(id)arg1 matchField:(id)arg2;
- (id)ftsFind:(id)arg1 fields:(id)arg2;
- (id)ftsFind:(id)arg1;
- (id)find:(id)arg1 fields:(id)arg2 groupBy:(id)arg3 orderBy:(id)arg4 skip:(long long)arg5 count:(long long)arg6;
- (id)find:(id)arg1 fields:(id)arg2 orderBy:(id)arg3 skip:(long long)arg4 count:(long long)arg5 eliminateNull:(_Bool)arg6;
- (id)find:(id)arg1 fields:(id)arg2 orderBy:(id)arg3 skip:(long long)arg4 count:(long long)arg5;
- (id)find:(id)arg1 fields:(id)arg2 orderBy:(id)arg3;
- (id)find:(id)arg1 fields:(id)arg2;
- (id)find:(id)arg1;
- (id)find;
- (id)findOne:(id)arg1 fields:(id)arg2;
- (id)findOne:(id)arg1;
- (id)fieldSet;
- (_Bool)exists;
- (void)dealloc;
- (id)initWithDatabase:(id)arg1 table:(id)arg2;

@end

