//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "XcfViewController.h"

#import "UICollectionViewDataSource-Protocol.h"
#import "UICollectionViewDelegateFlowLayout-Protocol.h"

@class DefaultLazyImageView, NSArray, NSLayoutConstraint, NSMutableDictionary, NSString, UICollectionView, UIImage, UIImageView, UIScrollView, UIView, XCFImageModel, XCFPasterImageModel;

@interface XCFImageEditorFilterAndScaleViewController : XcfViewController <UICollectionViewDataSource, UICollectionViewDelegateFlowLayout>
{
    _Bool _showScale;
    XCFImageModel *_imageModel;
    unsigned long long _selectedFilterType;
    UIScrollView *_imageScaleScrollView;
    UIView *_imageFilterView;
    UIView *_imageScaleView;
    NSLayoutConstraint *_scaleWidthConstarint;
    UIView *_scrollViewContainer;
    NSLayoutConstraint *_scrollViewWidthConstraint;
    NSLayoutConstraint *_scrollViewHeightConstraint;
    UICollectionView *_filterCollectionView;
    NSArray *_cropModeLabels;
    UIImageView *_imageView;
    UIImage *_currentProcessingImage;
    NSMutableDictionary *_filteredThumbnails;
    double _rotateDegree;
    DefaultLazyImageView *_pasterImageView;
    XCFPasterImageModel *_pasterImageModel;
    double _imageModelZoomScale;
    unsigned long long _imageModelZoomMode;
    unsigned long long _cropType;
    unsigned long long _imageModelResultType;
    struct CGPoint _pasterStartPoint;
    struct CGRect _pasterOriginFrame;
}

+ (id)filterTypes;
@property(nonatomic) unsigned long long imageModelResultType; // @synthesize imageModelResultType=_imageModelResultType;
@property(nonatomic) unsigned long long cropType; // @synthesize cropType=_cropType;
@property(nonatomic) unsigned long long imageModelZoomMode; // @synthesize imageModelZoomMode=_imageModelZoomMode;
@property(nonatomic) double imageModelZoomScale; // @synthesize imageModelZoomScale=_imageModelZoomScale;
@property(nonatomic) struct CGRect pasterOriginFrame; // @synthesize pasterOriginFrame=_pasterOriginFrame;
@property(nonatomic) struct CGPoint pasterStartPoint; // @synthesize pasterStartPoint=_pasterStartPoint;
@property(retain, nonatomic) XCFPasterImageModel *pasterImageModel; // @synthesize pasterImageModel=_pasterImageModel;
@property(retain, nonatomic) DefaultLazyImageView *pasterImageView; // @synthesize pasterImageView=_pasterImageView;
@property(nonatomic) double rotateDegree; // @synthesize rotateDegree=_rotateDegree;
@property(retain, nonatomic) NSMutableDictionary *filteredThumbnails; // @synthesize filteredThumbnails=_filteredThumbnails;
@property(retain, nonatomic) UIImage *currentProcessingImage; // @synthesize currentProcessingImage=_currentProcessingImage;
@property(retain, nonatomic) UIImageView *imageView; // @synthesize imageView=_imageView;
@property(retain, nonatomic) NSArray *cropModeLabels; // @synthesize cropModeLabels=_cropModeLabels;
@property(nonatomic) __weak UICollectionView *filterCollectionView; // @synthesize filterCollectionView=_filterCollectionView;
@property(nonatomic) __weak NSLayoutConstraint *scrollViewHeightConstraint; // @synthesize scrollViewHeightConstraint=_scrollViewHeightConstraint;
@property(nonatomic) __weak NSLayoutConstraint *scrollViewWidthConstraint; // @synthesize scrollViewWidthConstraint=_scrollViewWidthConstraint;
@property(nonatomic) __weak UIView *scrollViewContainer; // @synthesize scrollViewContainer=_scrollViewContainer;
@property(nonatomic) __weak NSLayoutConstraint *scaleWidthConstarint; // @synthesize scaleWidthConstarint=_scaleWidthConstarint;
@property(nonatomic) __weak UIView *imageScaleView; // @synthesize imageScaleView=_imageScaleView;
@property(nonatomic) __weak UIView *imageFilterView; // @synthesize imageFilterView=_imageFilterView;
@property(nonatomic) __weak UIScrollView *imageScaleScrollView; // @synthesize imageScaleScrollView=_imageScaleScrollView;
@property(nonatomic) unsigned long long selectedFilterType; // @synthesize selectedFilterType=_selectedFilterType;
@property(retain, nonatomic) XCFImageModel *imageModel; // @synthesize imageModel=_imageModel;
@property(nonatomic) _Bool showScale; // @synthesize showScale=_showScale;
- (void).cxx_destruct;
- (unsigned long long)resultType;
- (unsigned long long)zoomMode;
- (struct CGPoint)contentOffsetByImage;
- (double)zoomScale;
- (struct CGSize)collectionView:(id)arg1 layout:(id)arg2 sizeForItemAtIndexPath:(id)arg3;
- (void)collectionView:(id)arg1 didSelectItemAtIndexPath:(id)arg2;
- (id)collectionView:(id)arg1 cellForItemAtIndexPath:(id)arg2;
- (long long)collectionView:(id)arg1 numberOfItemsInSection:(long long)arg2;
- (long long)numberOfSectionsInCollectionView:(id)arg1;
- (void)imageScaleRotateButtonTouched:(id)arg1;
- (void)chooseCropModeAtIndex:(unsigned long long)arg1;
- (void)imageResultTypeSquareButtonTouched:(id)arg1;
- (void)imageZoomModeAspectFitButtonTouched:(id)arg1;
- (void)imageResultTypeInputButtonTouched:(id)arg1;
- (void)resetPasterPositionIfNeeded;
- (void)generateThumbnailsByImage:(id)arg1;
- (void)scrollViewDidZoom:(id)arg1;
- (id)viewForZoomingInScrollView:(id)arg1;
- (void)setupCollectionView;
- (struct CGRect)scrollViewCorrentBounds;
- (struct CGRect)imageViewFrameForZoomMode:(unsigned long long)arg1;
- (double)zoomScaleForZoomMode:(unsigned long long)arg1;
- (struct UIEdgeInsets)scrollContentInsets;
- (id)getResultImageFromCurrentContext;
- (void)resetEditorWithOldZoomMode:(unsigned long long)arg1;
- (void)resetImageScaleScrollViewContentSizeWithCropImageZoomMode:(unsigned long long)arg1 oldZoomMode:(unsigned long long)arg2;
- (void)resetImageScaleScrollViewMaxMinZoomScaleWithCropImageZoomMode:(unsigned long long)arg1 zoomScale:(double)arg2;
- (void)resetScrollViewWithImageEditorResultType:(unsigned long long)arg1;
- (void)setupImageViewAndScrollView;
- (void)viewFrameDidSetForTheFirstTime;
- (void)pasterImageViewMoved:(id)arg1;
- (void)setupPasterView;
- (void)viewDidLoad;
- (id)initWithImageModel:(id)arg1 pasterImageModel:(id)arg2;
- (void)didReceiveMemoryWarning;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

