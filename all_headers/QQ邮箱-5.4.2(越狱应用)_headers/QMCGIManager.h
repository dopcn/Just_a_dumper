//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

@interface QMCGIManager : NSObject
{
}

+ (_Bool)HostIpOrDomain:(id)arg1;
+ (void)post:(id)arg1 withBody:(id)arg2 withRequest:(id)arg3 withCallback:(id)arg4;
+ (void)post:(id)arg1 withBody:(id)arg2 withCallback:(id)arg3;
+ (void)get:(id)arg1 withRequest:(id)arg2 withCallback:(id)arg3;
+ (void)get:(id)arg1 withCallback:(id)arg2;
+ (id)getRequestWithURL:(id)arg1;
+ (id)getRequest:(id)arg1;
+ (id)getParamsForGeneral:(id)arg1 accountid:(long long)arg2;
+ (id)getParams:(id)arg1;
+ (id)getURL:(id)arg1 withAccountId:(long long)arg2;
+ (_Bool)__urlNeedToHandleSid:(id)arg1;
+ (id)getURL:(id)arg1;
+ (id)cgiURL:(id)arg1;
+ (int)reachabilityStatus;
+ (int)_getStatus:(long long)arg1;
+ (void)resumeSend:(id)arg1;
+ (void)startSend;
+ (void)abortAll;
+ (void)doRemoveFromRequestQueue:(id)arg1;
+ (void)abort:(id)arg1;
+ (_Bool)send:(id)arg1;
+ (void)clear;
+ (void)clearLoginQueue:(id)arg1 withError:(id)arg2;
+ (void)doLoginQueue:(id)arg1;
+ (void)sendingRequest:(id)arg1;
+ (void)sendForGeneral:(id)arg1;
+ (void)onsenderror:(id)arg1 withError:(id)arg2;
+ (void)onsendsuccess:(id)arg1;
+ (_Bool)isIdle;
+ (void)removeCookieWithKey:(id)arg1;
+ (id)cookies;
+ (void)saveCookies:(id)arg1;
+ (void)_send:(id)arg1;
+ (void)_addHttpOperation:(id)arg1;
+ (void)_sendAsync:(id)arg1;
+ (void)_networkRequestThreadEntryPoint:(id)arg1;
+ (id)networkThread;
+ (_Bool)_checkNetwork:(id)arg1;
+ (id)bizMailHost;
+ (id)antiSpamHost;
+ (id)host;
+ (id)domain;
+ (void)_initRequestQueue;
+ (id)getAKey:(id)arg1 isWtLogin:(_Bool)arg2;
+ (id)generateCookie:(id)arg1 Akey:(id)arg2 isWtLogin:(_Bool)arg3;
+ (id)addAkeyForDownloadRequestCookie:(id)arg1 withRequestUrl:(id)arg2 withAccount:(id)arg3 isWtlogin:(_Bool)arg4;
+ (id)setCookieWithCookie:(id)arg1 withAccount:(id)arg2 isWtlogin:(_Bool)arg3;
+ (void)setHttpCookieHost:(id)arg1 withAccount:(id)arg2 originalRequest:(id)arg3;
+ (id)_prepare:(id)arg1;
+ (id)genNewCookie:(id)arg1 uin:(id)arg2 appKey:(id)arg3 randomValue:(int)arg4 cookieKey:(id)arg5;
+ (id)genAppKeyMd5:(id)arg1 randomValue:(int)arg2;
+ (id)_getCookiesForGeneral:(id)arg1 withAccount:(id)arg2;
+ (id)_replaceBody:(id)arg1 withSid:(id)arg2;
+ (void)_setCallback:(id)arg1 withCallback:(id)arg2;
+ (id)_request:(id)arg1 withUrl:(id)arg2;
+ (void)loginWithVerifyByCgi:(id)arg1 callback:(id)arg2 accountid:(long long)arg3;
+ (void)loginWithSecondPassword:(id)arg1 callback:(id)arg2;
+ (void)loginWithSmsVerify:(id)arg1 callback:(id)arg2 accountid:(long long)arg3;
+ (void)loginWithVerify:(id)arg1 callback:(id)arg2 accountid:(long long)arg3;
+ (void)login:(id)arg1 password:(id)arg2 skey:(id)arg3 isBizMail:(_Bool)arg4 callback:(id)arg5;
+ (void)wtLogin:(id)arg1 password:(id)arg2 callback:(id)arg3 isBackGround:(_Bool)arg4;
+ (void)wtWebLogin:(id)arg1 WithCallback:(id)arg2;
+ (void)wtLoginAfterQuickLogin:(id)arg1 callback:(id)arg2;
+ (void)wtloginLogout:(long long)arg1;
+ (void)exchangeSid:(CDUnknownBlockType)arg1 withUin:(id)arg2;
+ (id)getWtloginA2Key:(long long)arg1;
+ (void)exchangeWtloginA2Key:(id)arg1 withAccountId:(long long)arg2;
+ (id)_domain:(int)arg1;
+ (id)_callback:(id)arg1 withNotification:(_Bool)arg2 withRequest:(id)arg3 withKey:(id)arg4;
+ (id)getLoginSvrTime:(id)arg1;
+ (void)autoLoginForGeneral:(id)arg1 withCallback:(id)arg2;
+ (void)wtAutologin:(id)arg1 withCallback:(id)arg2;
+ (void)newAutoLogin:(id)arg1 withCallback:(id)arg2;
+ (void)newAutoLogin:(id)arg1 withMailDelagate:(id)arg2;
+ (void)_rePeatAutoLogin:(id)arg1 utcTime:(id)arg2 withRequest:(id)arg3;
+ (void)rePeatAutoLogin:(id)arg1 withRequest:(id)arg2;
+ (void)autoLoginForFtn:(id)arg1;
+ (void)autoLogin:(id)arg1;
+ (void)autoLogin;
+ (_Bool)canAutoLogin;
+ (_Bool)isBizMail:(id)arg1;
+ (_Bool)isSidExpire;
+ (id)getSid;
+ (_Bool)isLogined;
+ (id)user;
+ (id)handleQuickLogin:(id)arg1 withCallback:(id)arg2;
+ (void)quickLogin;
+ (_Bool)canQuickLogin;
+ (void)clearLoginManager;
+ (id)loginManager;
+ (id)allLoginStatus;
+ (int)channelId;
+ (void)setUseTestHost:(_Bool)arg1;

@end

