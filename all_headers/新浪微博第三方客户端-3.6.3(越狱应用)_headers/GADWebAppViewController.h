//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "GADViewController.h"

@class GADInterstitial, GADWebAppWebViewDelegate, GADWebView, NSString, NSURL, UIButton, UIImageView, UIView, UIViewController;

@interface GADWebAppViewController : GADViewController
{
    _Bool _viewHasAppeared;
    NSURL *_URLToLoad;
    NSString *_HTMLToLoad;
    NSURL *_HTMLBaseURLToLoad;
    _Bool _useCustomClose;
    _Bool _transparentInterstitial;
    _Bool _isExpandable;
    _Bool _isCollapsing;
    _Bool _displayingAsTransparentInterstitial;
    GADWebView *_webView;
    UIViewController *_hostViewController;
    GADInterstitial *_interstitial;
    UIImageView *_renderedBanner;
    GADWebAppWebViewDelegate *_webViewDelegate;
    UIButton *_closeButton;
    UIView *_contentView;
}

@property(retain, nonatomic) UIView *contentView; // @synthesize contentView=_contentView;
@property(retain, nonatomic) UIButton *closeButton; // @synthesize closeButton=_closeButton;
@property(retain, nonatomic) GADWebAppWebViewDelegate *webViewDelegate; // @synthesize webViewDelegate=_webViewDelegate;
@property(nonatomic) _Bool displayingAsTransparentInterstitial; // @synthesize displayingAsTransparentInterstitial=_displayingAsTransparentInterstitial;
@property(retain, nonatomic) UIImageView *renderedBanner; // @synthesize renderedBanner=_renderedBanner;
@property(nonatomic) _Bool isCollapsing; // @synthesize isCollapsing=_isCollapsing;
@property(nonatomic) _Bool isExpandable; // @synthesize isExpandable=_isExpandable;
@property(nonatomic) __weak GADInterstitial *interstitial; // @synthesize interstitial=_interstitial;
@property(retain, nonatomic) UIViewController *hostViewController; // @synthesize hostViewController=_hostViewController;
@property(retain, nonatomic) GADWebView *webView; // @synthesize webView=_webView;
@property(nonatomic) _Bool transparentInterstitial; // @synthesize transparentInterstitial=_transparentInterstitial;
@property(nonatomic) _Bool useCustomClose; // @synthesize useCustomClose=_useCustomClose;
- (void).cxx_destruct;
- (void)loadHTML:(id)arg1 baseURL:(id)arg2;
- (void)load:(id)arg1;
- (void)didRotateFromInterfaceOrientation:(long long)arg1;
- (void)willRotateToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (void)configureView;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (struct CGRect)closeButtonFrameForContentFrame:(struct CGRect)arg1;
- (void)dismiss;
- (void)presentFrom:(id)arg1;
- (void)relinquishScreen;
- (_Bool)shouldDismissOnAppClose;
- (void)updateCloseButtonVisibilityAndImage;
@property(nonatomic, getter=isFileAccessAllowed) _Bool fileAccessAllowed;
- (void)dealloc;
- (id)initWithWebView:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (id)init;

@end

