//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <UIKit/UIView.h>

#import "BBAPlayerViewProtocol-Protocol.h"

@class BBAVideoPlayerController, NSMutableArray, NSString, NSURL;
@protocol BBAPlayerViewDelegate;

@interface BBAPlayerCloudMediaView : UIView <BBAPlayerViewProtocol>
{
    _Bool _isPlaying;
    _Bool isLoading;
    _Bool muted;
    _Bool enableCahce;
    _Bool _isReplay;
    _Bool _isChangeingURL;
    _Bool _isReachToend;
    _Bool _isFirstStartPlay;
    _Bool _isSeeking;
    _Bool _isDelayLoadingExcuting;
    double assetBufferSeconds;
    id <BBAPlayerViewDelegate> delegate;
    NSMutableArray *_loadSpeedMonitor;
    BBAVideoPlayerController *_player;
    NSURL *_loadedURL;
    CDUnknownBlockType _playerViewStatusChangeHandler;
    long long _status;
    double _initalSeconds;
    NSMutableArray *_events;
    long long _totalBytes;
    long long _fakeVideoCachedBytes;
    long long _retryCount;
    unsigned long long _type;
    NSString *_serverIP;
    long long _recordBufferCount;
}

@property(nonatomic) long long recordBufferCount; // @synthesize recordBufferCount=_recordBufferCount;
@property(retain, nonatomic) NSString *serverIP; // @synthesize serverIP=_serverIP;
@property(nonatomic) _Bool isDelayLoadingExcuting; // @synthesize isDelayLoadingExcuting=_isDelayLoadingExcuting;
@property(nonatomic) unsigned long long type; // @synthesize type=_type;
@property(nonatomic) long long retryCount; // @synthesize retryCount=_retryCount;
@property(nonatomic) long long fakeVideoCachedBytes; // @synthesize fakeVideoCachedBytes=_fakeVideoCachedBytes;
@property(nonatomic) long long totalBytes; // @synthesize totalBytes=_totalBytes;
@property(nonatomic) _Bool isSeeking; // @synthesize isSeeking=_isSeeking;
@property(retain, nonatomic) NSMutableArray *events; // @synthesize events=_events;
@property(nonatomic) _Bool isFirstStartPlay; // @synthesize isFirstStartPlay=_isFirstStartPlay;
@property(nonatomic) _Bool isReachToend; // @synthesize isReachToend=_isReachToend;
@property(nonatomic) _Bool isChangeingURL; // @synthesize isChangeingURL=_isChangeingURL;
@property(nonatomic) double initalSeconds; // @synthesize initalSeconds=_initalSeconds;
@property(nonatomic) long long status; // @synthesize status=_status;
@property(copy, nonatomic) CDUnknownBlockType playerViewStatusChangeHandler; // @synthesize playerViewStatusChangeHandler=_playerViewStatusChangeHandler;
@property(retain, nonatomic) NSURL *loadedURL; // @synthesize loadedURL=_loadedURL;
@property(nonatomic) _Bool isReplay; // @synthesize isReplay=_isReplay;
@property(retain, nonatomic) BBAVideoPlayerController *player; // @synthesize player=_player;
@property(retain, nonatomic) NSMutableArray *loadSpeedMonitor; // @synthesize loadSpeedMonitor=_loadSpeedMonitor;
@property(nonatomic) _Bool enableCahce; // @synthesize enableCahce;
@property(nonatomic) __weak id <BBAPlayerViewDelegate> delegate; // @synthesize delegate;
@property(nonatomic) _Bool isLoading; // @synthesize isLoading;
@property(nonatomic) _Bool isPlaying; // @synthesize isPlaying=_isPlaying;
@property(nonatomic) double assetBufferSeconds; // @synthesize assetBufferSeconds;
- (void).cxx_destruct;
- (void)checkCurPlayerStaus:(long long)arg1;
- (void)postLoadSpeedMonitorNotification;
- (void)postPlayerDidReachEndNotification;
- (void)postPlayerNotiName:(id)arg1;
- (void)postLoadPlayerURLNotification;
- (void)clearReference;
- (unsigned long long)bufferSize;
- (void)setInitPlayerURL:(id)arg1 playSeconds:(double)arg2;
- (void)addPlayerNotification;
- (void)switchVideo:(id)arg1 initSeconds:(double)arg2;
@property(nonatomic) _Bool muted; // @synthesize muted;
- (void)setShouldAutoStop:(_Bool)arg1;
- (id)getServerIP;
- (_Bool)delayHideLoading;
- (double)delayLoadingTime;
- (id)performanceLog;
- (long long)videoTotalBytes;
- (long long)videoCachedBytes;
- (_Bool)postNoticeWhenLoadedTimeChange;
- (_Bool)isStartPlay;
- (_Bool)isAVPlayerInPausedState;
- (_Bool)needScreenShot;
- (id)screenshot:(double)arg1;
- (id)currentTimeScreenshot;
- (id)statisticsPerformanceData;
- (double)currentDownloadBitrate;
- (struct CGSize)currentNaturalSize;
- (double)currentLoadedTime;
- (double)currentTime;
- (double)currentDuration;
- (void)setVideoGravity:(long long)arg1;
- (_Bool)playDidReachEnd;
- (_Bool)playbackLikelyToKeepUp;
- (_Bool)playbackBufferEmpty;
- (_Bool)isReadyToPlay;
- (void)precisionSeekToSeconds:(double)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)precisionSeekToSeconds:(double)arg1;
- (void)seekToSeconds:(double)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)seekToSecondsAccurate:(double)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)close;
- (void)stop;
- (void)pause;
- (void)play:(_Bool)arg1;
- (void)play;
- (void)loadURL:(id)arg1 initalSeconds:(double)arg2 duration:(double)arg3 statusChangeHandler:(CDUnknownBlockType)arg4;
- (id)initWithURL:(id)arg1 enableCache:(_Bool)arg2 seconds:(double)arg3;
- (void)tryPlayOnErrorCode:(long long)arg1 errorInfo:(id)arg2;
- (void)playerFailedNotifiErrorCode:(long long)arg1 errorInfo:(id)arg2;
- (void)playerFailedNotifiNetNotConnect;
- (void)playerOnError:(long long)arg1;
- (void)onPlayerReplay:(id)arg1;
- (void)onPlayerActived:(id)arg1;
- (void)onPlayerStalled:(id)arg1;
- (void)onPlayerSeekCompleted:(id)arg1;
- (void)onPlayerFinish:(id)arg1;
- (void)onPlayerFirstVideoFrameRendered:(id)arg1;
- (void)onPlayerBufferingEnd:(id)arg1;
- (void)onPlayerBufferingStart:(id)arg1;
- (void)onPlayerPrepared:(id)arg1;
- (void)seekToSeconds:(double)arg1;
- (void)readyToStop;
- (void)readyToPause;
- (void)readyToPlay;
- (void)prepareToPlay;
- (void)startPlayer;
- (void)setupPlayer;
- (void)dealloc;
- (void)updateLoadSpeedMonitor;
- (void)loopUpdateLoadSpeedMonitor;
- (id)playerClosePerformanceData:(id)arg1;
- (id)playerKernelError;
- (void)postNotificationName:(id)arg1 object:(id)arg2 userInfo:(id)arg3;
- (void)addNotice:(id)arg1 action:(SEL)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

