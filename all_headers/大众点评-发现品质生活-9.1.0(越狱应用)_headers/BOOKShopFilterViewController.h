//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "NVBaseFilterViewController.h"

#import "NVDuoTableViewDataSource-Protocol.h"
#import "NVDuoTableViewDelegate-Protocol.h"
#import "NVFilterViewDelegate-Protocol.h"
#import "NVPopoverViewDelegate-Protocol.h"

@class BOOKSearchResultViewModel, NSArray, NSString, NVDuoTableView, NVFilterView, Pair, Region, TCategory;
@protocol SEARCHBaseFilterViewControllerDelegate;

@interface BOOKShopFilterViewController : NVBaseFilterViewController <NVDuoTableViewDataSource, NVDuoTableViewDelegate, NVPopoverViewDelegate, NVFilterViewDelegate>
{
    NVDuoTableView *_duoTableView;
    NVDuoTableView *_categoryDuoTableView;
    NVDuoTableView *_sortTypeDuoTableView;
    NSArray *_categoryPickerArray;
    NSArray *_regionPickerArray;
    NSArray *_rangeNavs;
    NSArray *_sortNavs;
    id <SEARCHBaseFilterViewControllerDelegate> _delegate;
    NVFilterView *_filterView;
    BOOKSearchResultViewModel *_viewModel;
    Region *_curRegion;
    TCategory *_curCategory;
    Pair *_curSortPair;
    Pair *_curRange;
    NSString *_filterConditionGA;
}

@property(copy, nonatomic) NSString *filterConditionGA; // @synthesize filterConditionGA=_filterConditionGA;
@property(retain, nonatomic) Pair *curRange; // @synthesize curRange=_curRange;
@property(retain, nonatomic) Pair *curSortPair; // @synthesize curSortPair=_curSortPair;
@property(retain, nonatomic) TCategory *curCategory; // @synthesize curCategory=_curCategory;
@property(retain, nonatomic) Region *curRegion; // @synthesize curRegion=_curRegion;
@property(nonatomic) __weak BOOKSearchResultViewModel *viewModel; // @synthesize viewModel=_viewModel;
@property(retain, nonatomic) NVFilterView *filterView; // @synthesize filterView=_filterView;
- (void)setDelegate:(id)arg1;
- (id)delegate;
- (void).cxx_destruct;
- (void)dealloc;
- (void)didReceiveMemoryWarning;
- (void)popoverViewDidDismiss:(id)arg1;
- (void)popoverViewDidAppear:(id)arg1;
- (void)taskFinish;
- (id)checkFilter3Titile:(id)arg1;
- (void)updateFilter3Label;
- (void)updateFilter2Label;
- (void)updateFilter1Label;
- (void)updateFilterLabel;
- (void)detailedTableView:(id)arg1 ofgeneralTableItem:(id)arg2 didSelectRowAtIndexPath:(id)arg3;
- (void)ga_logDetailTableView:(id)arg1 indexPath:(id)arg2;
- (id)ga_labelForDetailTableView:(id)arg1 indexPath:(id)arg2;
- (void)generalTableView:(id)arg1 didDeselectRowAtIndexPath:(id)arg2;
- (void)generalTableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (void)ga_logGeneralTableView:(id)arg1 indexPath:(id)arg2;
- (id)ga_labelForGeneralTableView:(id)arg1;
- (id)detailedTableView:(id)arg1 ofgeneralTableItem:(id)arg2 cellForRowAtIndexPath:(id)arg3;
- (id)generalTableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (id)detailedTableView:(id)arg1 itemInGeneralTableViewAtIndex:(long long)arg2;
- (long long)detailedTableView:(id)arg1 ofgeneralTableItem:(id)arg2 numberOfRowsInSection:(long long)arg3;
- (long long)generalTableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (id)setUpPopoverViewAppearanceForComponenetsView:(id)arg1;
- (void)setUpDuoTableViewAppearance:(id)arg1;
- (void)filter3Clicked:(id)arg1 filterType:(long long)arg2 filterNeedsOn:(_Bool)arg3;
- (void)filter2Clicked:(id)arg1 filterType:(long long)arg2 filterNeedsOn:(_Bool)arg3;
- (void)filterView:(id)arg1 touchedFilter:(long long)arg2 filterNeedsOn:(_Bool)arg3;
- (id)getTopRegionByParentId:(unsigned long long)arg1 fromTopRegions:(id)arg2;
- (void)setCategoryNavs:(id)arg1 regionNavs:(id)arg2 rangeNavs:(id)arg3 sortNavs:(id)arg4 currentRange:(id)arg5 curSort:(id)arg6 currentRegion:(id)arg7 currentCategory:(id)arg8;
- (void)refreshData;
- (void)viewDidLoad;
- (void)loadView;
- (void)filter1Clicked:(id)arg1 filterType:(long long)arg2 filterNeedsOn:(_Bool)arg3;
- (long long)getFilterCount;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

