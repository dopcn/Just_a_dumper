//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

#import "NBBookServiceManagerObserver-Protocol.h"
#import "NBChapterIndexProviderDelegate-Protocol.h"
#import "NBChapterProviderProtocol-Protocol.h"
#import "NBPAChaptersInfoAquireDelegate-Protocol.h"
#import "NBPAOnlineChapterDataDelegate-Protocol.h"
#import "NBPAPageIndexProviderDelegate-Protocol.h"
#import "NBPAPrereadPolicyDataSource-Protocol.h"
#import "NBPageIndexHandlerDelegate-Protocol.h"

@class NBBookItem, NBBookLayoutConfig, NBChapterIndexProvider, NBPAChaptersInfo, NBPAChaptersInfoAquire, NBPAOnlineDataQueue, NBPAPageIndexProvider, NBPAPrereadPolicy, NBPageIndexHandler, NBPrereadManager, NSString;
@protocol NBChapterItemProtocol, NBChapterProviderDelegate;

@interface NBPAChapterProvider : NSObject <NBPAPrereadPolicyDataSource, NBPAChaptersInfoAquireDelegate, NBPAOnlineChapterDataDelegate, NBPAPageIndexProviderDelegate, NBChapterIndexProviderDelegate, NBBookServiceManagerObserver, NBPageIndexHandlerDelegate, NBChapterProviderProtocol>
{
    _Bool _shouldRefreshChapterContent;
    _Bool _hasRetryRequestData;
    _Bool _isUsePreReading;
    _Bool _prereadAllPaiedChapters;
    id <NBChapterProviderDelegate> _delegate;
    NBBookLayoutConfig *_layoutConfig;
    NBPageIndexHandler *_pageIndexHandler;
    id <NBChapterItemProtocol> _curChapterItem;
    NBPrereadManager *_prereadManager;
    NBBookItem *_bookItem;
    NBPAChaptersInfo *_chaptersInfo;
    NBPAPrereadPolicy *_prereadPolicy;
    NBPAChaptersInfoAquire *_chaptersInfoAquire;
    NBPAPageIndexProvider *_pageIndexProvider;
    NBPAOnlineDataQueue *_onlineChapterDataRequestQueue;
    NBChapterIndexProvider *_chapterIndexProvider;
    long long _batchCount;
    unsigned long long _purchasePrereadPolicy;
    long long _batchPurchaseFirstPaiedChapter;
}

@property(nonatomic) long long batchPurchaseFirstPaiedChapter; // @synthesize batchPurchaseFirstPaiedChapter=_batchPurchaseFirstPaiedChapter;
@property(nonatomic) unsigned long long purchasePrereadPolicy; // @synthesize purchasePrereadPolicy=_purchasePrereadPolicy;
@property(nonatomic) long long batchCount; // @synthesize batchCount=_batchCount;
@property(nonatomic) _Bool prereadAllPaiedChapters; // @synthesize prereadAllPaiedChapters=_prereadAllPaiedChapters;
@property(retain, nonatomic) NBChapterIndexProvider *chapterIndexProvider; // @synthesize chapterIndexProvider=_chapterIndexProvider;
@property(retain, nonatomic) NBPAOnlineDataQueue *onlineChapterDataRequestQueue; // @synthesize onlineChapterDataRequestQueue=_onlineChapterDataRequestQueue;
@property(nonatomic) _Bool isUsePreReading; // @synthesize isUsePreReading=_isUsePreReading;
@property(retain, nonatomic) NBPAPageIndexProvider *pageIndexProvider; // @synthesize pageIndexProvider=_pageIndexProvider;
@property(retain, nonatomic) NBPAChaptersInfoAquire *chaptersInfoAquire; // @synthesize chaptersInfoAquire=_chaptersInfoAquire;
@property(retain, nonatomic) NBPAPrereadPolicy *prereadPolicy; // @synthesize prereadPolicy=_prereadPolicy;
@property(retain) NBPAChaptersInfo *chaptersInfo; // @synthesize chaptersInfo=_chaptersInfo;
@property(retain, nonatomic) NBBookItem *bookItem; // @synthesize bookItem=_bookItem;
@property(retain, nonatomic) NBPrereadManager *prereadManager; // @synthesize prereadManager=_prereadManager;
@property(retain) id <NBChapterItemProtocol> curChapterItem; // @synthesize curChapterItem=_curChapterItem;
@property(retain, nonatomic) NBPageIndexHandler *pageIndexHandler; // @synthesize pageIndexHandler=_pageIndexHandler;
@property(nonatomic) _Bool hasRetryRequestData; // @synthesize hasRetryRequestData=_hasRetryRequestData;
@property(nonatomic) _Bool shouldRefreshChapterContent; // @synthesize shouldRefreshChapterContent=_shouldRefreshChapterContent;
@property(retain) NBBookLayoutConfig *layoutConfig; // @synthesize layoutConfig=_layoutConfig;
@property(nonatomic) id <NBChapterProviderDelegate> delegate; // @synthesize delegate=_delegate;
- (void)addCoverPageChapteItem;
- (_Bool)isCanRevert:(id)arg1 originChapterItem:(id)arg2;
- (void)didPurchaseFinished:(id)arg1;
- (void)handleIncrNewOnlineChapters;
- (void)saveLastLatestChapterCount;
- (void)clearAllNewChapterFlag;
- (_Bool)isNewChapter:(id)arg1;
- (void)bookServiceManager:(id)arg1 didFinishIncrCacheForChapter:(id)arg2 forBookItem:(id)arg3;
- (void)bookServiceManager:(id)arg1 hasErrorCorrectionForBookItem:(id)arg2;
- (void)bookServiceManager:(id)arg1 didFinishDownloadForBookItem:(id)arg2 andType:(int)arg3;
- (void)retryReadOnlineChapterData:(id)arg1;
- (void)didErrorOnlineChapterData:(id)arg1 chapterItem:(id)arg2;
- (void)didFinishOnlineChapterData:(id)arg1 chapterItem:(id)arg2;
- (long long)batchPurchaseRealFirstPaiedChapterIndex;
- (unsigned long long)paPurchasePrereadPolicy;
- (_Bool)forceToPrereadAllPaiedChapters;
- (long long)batchPurchaseChapterCount;
- (id)prereadPolicyChapterInfo;
- (void)handleErrorCorrection;
- (void)aquire:(id)arg1 didFailedWithChaptersInfo:(id)arg2 isIncrUpdate:(_Bool)arg3;
- (void)aquire:(id)arg1 didFinishedWithChaptersInfo:(id)arg2 andBookItem:(id)arg3 isIncrUpdate:(_Bool)arg4;
- (void)updateChapterInfoIfNeeded:(id)arg1;
- (_Bool)isLastChapter:(id)arg1;
- (void)resetBuyStateForBookItem:(id)arg1;
- (_Bool)hasChapterNotPurchased;
- (_Bool)isNeedAutoBuyOfChapterItem:(id)arg1;
- (_Bool)isPermitReadOfChapterItem:(id)arg1;
- (_Bool)isBuy:(id)arg1;
- (id)getNextChapterItem:(id)arg1;
- (id)getPreChapterItem:(id)arg1;
@property(readonly) _Bool isReadingOnlineChapterInfo;
@property(readonly) _Bool isReadingChapterInfo;
- (void)refreshOnlineChaptersInfo;
- (id)getPageIndexWithChapterItem:(id)arg1 pageIndex:(long long)arg2 withType:(long long)arg3;
- (void)cancelAnalyze;
- (void)clearBookItem;
- (void)handlePreReadingWithChapter:(id)arg1;
- (int)convertPageIndexWithChapter:(id)arg1 fromLayoutConfig:(id)arg2 fromPageIndex:(int)arg3 toLayoutConfig:(id)arg4;
- (id)getLayoutConfig;
- (long long)getChapterCount;
- (id)getPageItemsForChapterItem:(id)arg1;
- (long long)getPageCountWithChapter:(id)arg1;
- (id)getChapterItemAtIndex:(long long)arg1;
- (id)getChapterItem:(long long)arg1;
- (id)getChapterItemWithCid:(long long)arg1;
- (id)getChapterItemWithContentKey:(id)arg1;
- (id)getChapterInfo;
- (void)setLiveLastLatestChapterCount:(long long)arg1;
- (void)setCurrentChapterItem:(id)arg1;
- (void)prepareChapterDataAndPreReading:(id)arg1;
- (void)splitPageInfoWithOnlineChapter:(id)arg1;
- (void)prepareOnlineChapterData:(id)arg1;
- (void)sendDidErrorPageInfoWithChapterIndex:(id)arg1;
- (void)prepareChapterData:(id)arg1;
- (long long)correctIndexInChapterArrayForChapterItem:(id)arg1;
- (void)prepareOnlineChapterInfo;
- (void)prepareChapterInfo;
- (void)releaseChaptersInfoAquire;
- (void)dealloc;
- (id)initWithBookItem:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

