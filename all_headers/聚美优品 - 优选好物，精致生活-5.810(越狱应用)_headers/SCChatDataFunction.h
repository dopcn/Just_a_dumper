//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

@class NSArray, NSMutableArray, NSMutableDictionary, NSTimer, SCUser;
@protocol OS_dispatch_semaphore;

@interface SCChatDataFunction : NSObject
{
    _Bool _anyStrangerMessage;
    _Bool _imStandby;
    NSMutableArray *_noReplyList;
    NSMutableArray *_replyList;
    NSMutableDictionary *_noReplyCache;
    NSMutableDictionary *_replyCache;
    NSMutableArray *_conversationCache;
    NSMutableDictionary *_messagesBeforeStandby;
    NSMutableDictionary *_targetUserCache;
    NSMutableArray *_targetUserArray;
    CDUnknownBlockType _unreadHandler;
    CDUnknownBlockType _noReplyUnreadHandler;
    CDUnknownBlockType _friendshipChangedHandler;
    NSTimer *_updateTimer;
    NSTimer *_targetUserTimer;
    NSMutableArray *_fromBlockList;
    NSMutableArray *_toBlockList;
    SCUser *_currentUser;
    NSMutableArray *_chatUsers;
    NSObject<OS_dispatch_semaphore> *_theLock;
    CDUnknownBlockType _unreadByUidsHandler;
    NSArray *_queryUids;
    NSMutableArray *_accumulativeMessages;
    NSTimer *_reloadTableTimer;
}

+ (id)sharedInstance;
@property(retain, nonatomic) NSTimer *reloadTableTimer; // @synthesize reloadTableTimer=_reloadTableTimer;
@property(retain, nonatomic) NSMutableArray *accumulativeMessages; // @synthesize accumulativeMessages=_accumulativeMessages;
@property(retain, nonatomic) NSArray *queryUids; // @synthesize queryUids=_queryUids;
@property(copy, nonatomic) CDUnknownBlockType unreadByUidsHandler; // @synthesize unreadByUidsHandler=_unreadByUidsHandler;
@property(retain, nonatomic) NSObject<OS_dispatch_semaphore> *theLock; // @synthesize theLock=_theLock;
@property(nonatomic) _Bool imStandby; // @synthesize imStandby=_imStandby;
@property(retain, nonatomic) NSMutableArray *chatUsers; // @synthesize chatUsers=_chatUsers;
@property(retain, nonatomic) SCUser *currentUser; // @synthesize currentUser=_currentUser;
@property(retain, nonatomic) NSMutableArray *toBlockList; // @synthesize toBlockList=_toBlockList;
@property(retain, nonatomic) NSMutableArray *fromBlockList; // @synthesize fromBlockList=_fromBlockList;
@property(retain, nonatomic) NSTimer *targetUserTimer; // @synthesize targetUserTimer=_targetUserTimer;
@property(retain, nonatomic) NSTimer *updateTimer; // @synthesize updateTimer=_updateTimer;
@property(copy, nonatomic) CDUnknownBlockType friendshipChangedHandler; // @synthesize friendshipChangedHandler=_friendshipChangedHandler;
@property(copy, nonatomic) CDUnknownBlockType noReplyUnreadHandler; // @synthesize noReplyUnreadHandler=_noReplyUnreadHandler;
@property(copy, nonatomic) CDUnknownBlockType unreadHandler; // @synthesize unreadHandler=_unreadHandler;
@property(retain, nonatomic) NSMutableArray *targetUserArray; // @synthesize targetUserArray=_targetUserArray;
@property(retain, nonatomic) NSMutableDictionary *targetUserCache; // @synthesize targetUserCache=_targetUserCache;
@property(retain, nonatomic) NSMutableDictionary *messagesBeforeStandby; // @synthesize messagesBeforeStandby=_messagesBeforeStandby;
@property(retain, nonatomic) NSMutableArray *conversationCache; // @synthesize conversationCache=_conversationCache;
@property(retain, nonatomic) NSMutableDictionary *replyCache; // @synthesize replyCache=_replyCache;
@property(retain, nonatomic) NSMutableDictionary *noReplyCache; // @synthesize noReplyCache=_noReplyCache;
@property(retain, nonatomic) NSMutableArray *replyList; // @synthesize replyList=_replyList;
@property(retain, nonatomic) NSMutableArray *noReplyList; // @synthesize noReplyList=_noReplyList;
- (void).cxx_destruct;
- (void)postReloadNotification:(id)arg1;
@property(nonatomic) _Bool anyStrangerMessage; // @synthesize anyStrangerMessage=_anyStrangerMessage;
- (id)getDraftByUserId:(id)arg1;
- (void)clearDraftByUserId:(id)arg1;
- (void)setDraft:(id)arg1;
- (_Bool)canPushByUserId:(id)arg1;
- (_Bool)hasStrangerMessage;
- (void)markNewStrangerMessage:(_Bool)arg1;
- (void)invokeNoReplyUnreadHandler;
- (void)invokeUnreadHandler;
- (long long)messagesUnreadCount:(id)arg1 uids:(id)arg2;
- (long long)messagesUnreadCount:(id)arg1;
- (id)getNoReplylistUnReadCountStr;
- (id)convertCountToStr:(long long)arg1;
- (id)getUnreadCountStrByUids:(id)arg1;
- (id)getUnreadCountStr;
- (void)totalUnreadChangeByUids:(id)arg1 handler:(CDUnknownBlockType)arg2;
- (void)noReplyUnreadChanged:(CDUnknownBlockType)arg1;
- (void)totalUnreadChanged:(CDUnknownBlockType)arg1;
- (void)updateAccumulativeMessage;
- (void)updateMessages:(id)arg1;
- (void)refresh;
- (void)logout;
- (void)loginSuccessed;
- (id)init;
- (void)versionPlus;
- (void)addReplyByUid:(id)arg1;
- (void)removeReplyByUid:(id)arg1;
- (void)onFriendshipChanged:(CDUnknownBlockType)arg1;
- (void)removeFriend:(id)arg1;
- (void)addFriend:(id)arg1;
- (_Bool)isFriend:(id)arg1;
- (id)findFriendByUid:(id)arg1;
- (void)getFriendsFromApiWithCount:(long long)arg1 success:(CDUnknownBlockType)arg2 failure:(CDUnknownBlockType)arg3;
- (void)getFriendsSuccess:(CDUnknownBlockType)arg1 failure:(CDUnknownBlockType)arg2;
- (void)addLatestMessageBeforeStandBy:(id)arg1;
- (void)saveConversationsWhenLive:(id)arg1;
- (void)sortConversations:(id)arg1;
- (void)clearCurrentConversationUnread;
- (void)insertMessage:(id)arg1 isFriend:(_Bool)arg2;
- (void)saveTargetConversation:(id)arg1;
- (void)removeConversationByUid:(id)arg1 isStranger:(_Bool)arg2;
- (void)conversationsLimitByIsStranger:(_Bool)arg1;
- (_Bool)tryToUpdateReplyList:(id)arg1;
- (_Bool)tryToUpdateNoreplyList:(id)arg1;
- (void)deleteAllStrangers:(id)arg1;
- (void)deleteNoReplylist;
- (void)updateConversationsByRemoveUser:(id)arg1;
- (void)updateConversationsByAddUser:(id)arg1;
- (void)deleteMessageInMemory:(id)arg1;
- (void)updateConversationByMessages:(id)arg1;
- (void)batchAddTargetConversations;
- (void)batchAddConversations;
- (void)updateConversationByMessage:(id)arg1;
- (id)setupFromConversations:(id)arg1 isStranger:(_Bool)arg2;
- (void)getConversationsSuccess:(CDUnknownBlockType)arg1 failure:(CDUnknownBlockType)arg2;
- (void)unlock;
- (void)lock;
- (void)limitList;
- (void)clearNoreplyList;
- (void)clearReplyList;
- (void)updateNoreplyListByMessage:(id)arg1;
- (void)updateReplyListByMessage:(id)arg1;

@end

