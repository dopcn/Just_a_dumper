//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

@interface ImageFilter_Cosmetic : NSObject
{
}

+ (id)excuteImageTeethWhiten:(id)arg1 faceInfo:(id)arg2 index:(id)arg3 opacity:(int)arg4;
+ (_Bool)executeLipSpreadSensitive:(float *)arg1 imageSize:(struct CGSize)arg2;
+ (id)executeCreateCosmeticTeethWhitenMaskImage:(float *)arg1 imageSize:(struct CGSize)arg2 original:(struct CGPoint *)arg3;
+ (id)MakeUpLipstick:(id)arg1 colorTable:(id)arg2 colors:(id)arg3 ComOp:(int)arg4 alpha:(int)arg5 TextureMask:(id)arg6 texCom:(int)arg7 texAlpha:(int)arg8 lipsHighLightUpMask:(id)arg9 u_ctrpts:(id)arg10 HLUMaskCom:(int)arg11 HLUMaskAlpha:(int)arg12 lipsHighLightDownMask:(id)arg13 d_ctrpts:(id)arg14 HLDMaskCom:(int)arg15 HLDMaskAlpha:(int)arg16 features:(float *)arg17 lipType:(unsigned long long)arg18;
+ (id)MakeUpLipstick:(id)arg1 colorTable:(id)arg2 colors:(id)arg3 ComOp:(int)arg4 alpha:(int)arg5 TextureMask:(id)arg6 texCom:(int)arg7 texAlpha:(int)arg8 lipsHighLightUpMask:(id)arg9 u_ctrpts:(id)arg10 HLUMaskCom:(int)arg11 HLUMaskAlpha:(int)arg12 lipsHighLightDownMask:(id)arg13 d_ctrpts:(id)arg14 HLDMaskCom:(int)arg15 HLDMaskAlpha:(int)arg16 faceInfo:(id)arg17 index:(id)arg18 lipType:(unsigned long long)arg19;
+ (id)AmaniLittleRedPipeLipstick:(id)arg1 color:(int)arg2 faceInfo:(id)arg3 index:(id)arg4 a:(int)arg5;
+ (id)eyecontactCalenAd:(id)arg1 contact:(id)arg2 features:(float *)arg3 isRight:(unsigned char)arg4 ncom:(int)arg5;
+ (id)TheFaceShopLipstick:(id)arg1 color:(int)arg2 faceInfo:(id)arg3 index:(id)arg4 a:(int)arg5;
+ (id)BenefitDoubleLipstick:(id)arg1 c1:(int)arg2 c2:(int)arg3 faceInfo:(id)arg4 index:(id)arg5 a:(int)arg6;
+ (id)ShuuemuraLipstick:(id)arg1 c:(int)arg2 faceInfo:(id)arg3 index:(id)arg4 a:(int)arg5;
+ (id)ArMaNiLipstick:(id)arg1 c:(int)arg2 faceInfo:(id)arg3 index:(id)arg4 a:(int)arg5;
+ (void)GetAntlersPos:(float *)arg1 width:(int)arg2 height:(int)arg3 result:(struct CGPoint *)arg4;
+ (id)YSLD_OvalAndBlushFix:(id)arg1 fixPoints:(float *)arg2;
+ (void)YSLD_fixPoints:(int)arg1 height:(int)arg2 fixPoints:(float *)arg3 faceorg:(float *)arg4 featureorg:(float *)arg5;
+ (id)Ad_YSLDBlushFix:(id)arg1 blus:(id)arg2 features:(float *)arg3 isRight:(unsigned char)arg4 ncom:(int)arg5;
+ (id)YSLD_OvalAndBlush:(id)arg1 detpts:(float *)arg2 feapts:(float *)arg3;
+ (id)Ad_YSLDBlush:(id)arg1 blus:(id)arg2 features:(float *)arg3 isRight:(unsigned char)arg4 ncom:(int)arg5;
+ (id)Lipstick_imga:(id)arg1 lipmask:(id)arg2 alpha:(int)arg3 features:(float *)arg4;
+ (id)blush:(id)arg1 blus:(id)arg2 features:(float *)arg3 isRight:(unsigned char)arg4 ncom:(int)arg5;
+ (id)eyeshadow:(id)arg1 shodow:(id)arg2 ctrpts:(int *)arg3 features:(float *)arg4 isRight:(unsigned char)arg5 comop:(int)arg6 ncom:(int)arg7;
+ (id)eyecontact:(id)arg1 contact:(id)arg2 features:(float *)arg3 isRight:(unsigned char)arg4 ncom:(int)arg5;
+ (id)eyeline_down:(id)arg1 line:(id)arg2 ctrpts:(int *)arg3 features:(float *)arg4 isRight:(unsigned char)arg5 ncom:(int)arg6 comop:(int)arg7;
+ (id)eyeline_up:(id)arg1 line:(id)arg2 ctrpts:(int *)arg3 features:(float *)arg4 isRight:(unsigned char)arg5 ncom:(int)arg6 comop:(int)arg7;
+ (id)eyelash_down:(id)arg1 lash:(id)arg2 ctrpts:(int *)arg3 features:(float *)arg4 isRight:(unsigned char)arg5 ncom:(int)arg6 comop:(int)arg7;
+ (id)eyelash_up:(id)arg1 lashlayer1:(id)arg2 lashlayer2:(id)arg3 ctrpts:(int *)arg4 alpha:(float *)arg5 features:(float *)arg6 isRight:(unsigned char)arg7 comop:(int)arg8 ncom:(int)arg9;
+ (id)eyebrow:(id)arg1 brow:(id)arg2 ctrpts:(const int *)arg3 features:(float *)arg4 isRight:(unsigned char)arg5 ncom:(int)arg6 comop:(int)arg7;
+ (id)LipstickHighLight:(id)arg1 mask:(id)arg2 isDown:(_Bool)arg3 features:(float *)arg4 ctrpts:(int *)arg5 size:(int)arg6 alpha:(float *)arg7 comoperator:(int)arg8 com:(int)arg9;
+ (id)makeupCom:(id)arg1 warp:(id)arg2 degree:(float)arg3 ctrpts:(int *)arg4 dstpts:(int *)arg5 comop:(int)arg6 ncom:(int)arg7;
+ (id)pbwarpTri:(id)arg1 ctrpts:(int *)arg2 alignpts:(int *)arg3 len:(int)arg4;
+ (id)abswarp_Tri:(id)arg1 ctrpts:(int *)arg2 dstpts:(int *)arg3 size:(int)arg4 isRight:(unsigned char)arg5 width:(int)arg6 height:(int)arg7 degree:(float *)arg8;
+ (id)abswarp:(id)arg1 ctrpts:(int *)arg2 dstpts:(int *)arg3 size:(int)arg4 isRight:(unsigned char)arg5 width:(int)arg6 height:(int)arg7 degree:(float *)arg8;
+ (id)scaleImageSize:(id)arg1 viewsize:(struct CGSize)arg2 xscale:(double)arg3 yscale:(double)arg4;
+ (id)scaleImageSize:(id)arg1 viewsize:(struct CGSize)arg2 scale:(double)arg3;
+ (void)SetMouthPos:(float *)arg1 mouthPos:(float *)arg2 isDown:(_Bool)arg3;
+ (void)SetBlushPosition:(float *)arg1 fixBlushPos:(float *)arg2 isRight:(unsigned char)arg3;
+ (void)SetLipPos:(float *)arg1 fixLipPos:(float *)arg2;
+ (void)SetEyeContactPos:(float *)arg1 fixContactPos:(float *)arg2 isRight:(unsigned char)arg3;
+ (void)SetEyelashlineshadowPos:(float *)arg1 fixEyePos:(float *)arg2 isRight:(unsigned char)arg3;
+ (void)SetEyebrowPos:(float *)arg1 fixBrowPos:(float *)arg2 isRight:(unsigned char)arg3;
+ (void)GetBlushPos2:(float *)arg1 features:(float *)arg2 isRight:(unsigned char)arg3;
+ (float *)GetMouthPos:(float *)arg1 isDown:(_Bool)arg2 length:(unsigned int *)arg3;
+ (void)GetLipPos:(float *)arg1 features:(float *)arg2;
+ (void)GetEyeContactPos:(float *)arg1 feature:(float *)arg2 isRight:(unsigned char)arg3;
+ (void)GetEyelashlineshowPos:(float *)arg1 features:(float *)arg2 isRight:(unsigned char)arg3;
+ (void)GetEyebrowPos:(float *)arg1 features:(float *)arg2 isRight:(unsigned char)arg3;
+ (id)image:(id)arg1 addSubImage:(id)arg2 withSubRect:(struct CGRect)arg3 subAlpha:(int)arg4;
+ (id)image:(id)arg1 withAngle:(float)arg2 fixPoint:(inout struct CGPoint *)arg3;
+ (id)image:(id)arg1 alpha1:(float)arg2 addSubImage:(id)arg3 alpha2:(float)arg4;

@end

