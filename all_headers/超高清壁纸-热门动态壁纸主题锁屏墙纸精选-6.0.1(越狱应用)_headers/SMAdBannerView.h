//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <UIKit/UIView.h>

#import "MFMailComposeViewControllerDelegate-Protocol.h"
#import "MFMessageComposeViewControllerDelegate-Protocol.h"
#import "SKStoreProductViewControllerDelegate-Protocol.h"
#import "SmartMadAdvertisingManagerDelegate-Protocol.h"
#import "SmartMadBaseWebViewDelegate-Protocol.h"
#import "SmartMadCalendarDelegate-Protocol.h"
#import "SmartMadCoreViewDelegate-Protocol.h"
#import "SmartMadRequestDelegate-Protocol.h"
#import "SmartMadSKStoreProductViewControllerDelegate-Protocol.h"
#import "SmartMadTimerDelegate-Protocol.h"

@class CATransition, NSString, SmartMadAdvertisingConfig, SmartMadBaseWebView, SmartMadCalendar, SmartMadCoreView, SmartMadParameters, SmartMadReachability, SmartMadRequest, SmartMadSKStoreProductViewController, SmartMadTimer, SmartMadViewController, UIImageView, UIViewController;
@protocol SMAdBannerViewDelegate;

@interface SMAdBannerView : UIView <SmartMadCoreViewDelegate, SmartMadRequestDelegate, SmartMadTimerDelegate, SmartMadAdvertisingManagerDelegate, SKStoreProductViewControllerDelegate, MFMailComposeViewControllerDelegate, MFMessageComposeViewControllerDelegate, SmartMadCalendarDelegate, SmartMadBaseWebViewDelegate, SmartMadSKStoreProductViewControllerDelegate>
{
    SmartMadCoreView *_CoreView;
    SmartMadRequest *_AdvertisingRequest;
    _Bool _IsDestruct444;
    _Bool _IsDestruct000;
    SmartMadRequest *_JsDownloadRequest;
    SmartMadReachability *_HostReach;
    NSString *_CurrentChecksum;
    SmartMadTimer *_TimerForRefresh;
    _Bool _IsNeedWaitingFirstRequestSuccess;
    _Bool _IsFirstAdvertising;
    UIImageView *_ImageViewOfScreenShot;
    CATransition *_TransactionPrior;
    CATransition *_TransactionLater;
    long long _MillisecondsSince1970;
    long long _SecondsCount;
    _Bool _IsValidAdvertisingPositionIdentity;
    long long _LoadTimes;
    _Bool _IsActive;
    int _CurrentState;
    long long _ModalityCounter;
    struct CGRect _FrameDefault;
    struct CGPoint _ClickPoint;
    NSString *_PreviousChecksum;
    int _CurrentExpandType;
    _Bool _StatusbarHidden;
    _Bool _HaveRegistAdManagerDelegate;
    struct CGSize _MaxSize;
    _Bool _IsUsingRichMediaUrl;
    _Bool _HaveSetFrameByUserImmediatelyAfterInit;
    long long _StatusBarOldStyle;
    SmartMadViewController *_ViewController;
    SmartMadCalendar *_Calendar;
    UIView *_FullscreenExpandView;
    SmartMadAdvertisingConfig *_AdvertisingConfig;
    _Bool _IsLockOrientationWhenExpand;
    _Bool _IsGeneratingDeviceOrientationNotifications;
    _Bool _IsCurrentRequestFirstRequest;
    long long _CountFrameStartLoad;
    SmartMadParameters *_ParametersForRequest;
    SmartMadSKStoreProductViewController *_StoreViewController;
    long long _PreviousInterfaceOrientation;
    UIView *_BlockingView;
    _Bool _IsNeedSendOrientationToJS;
    struct CGRect _FrameInitWithCoder;
    SmartMadBaseWebView *_BaseWebView;
    _Bool _IsClickActionComplete;
    long long _CountNotAddToWindow;
    _Bool _HaveInjectAIM;
    _Bool _HaveReceivedAd;
    int _adSize;
    int _adBannerAnimationType;
    id <SMAdBannerViewDelegate> _delegate;
    UIViewController *_rootViewController;
    NSString *_adSpaceId;
}

@property(nonatomic) int adBannerAnimationType; // @synthesize adBannerAnimationType=_adBannerAnimationType;
@property(nonatomic) int adSize; // @synthesize adSize=_adSize;
@property(copy, nonatomic) NSString *adSpaceId; // @synthesize adSpaceId=_adSpaceId;
@property(nonatomic) UIViewController *rootViewController; // @synthesize rootViewController=_rootViewController;
@property(nonatomic) id <SMAdBannerViewDelegate> delegate; // @synthesize delegate=_delegate;
- (_Bool)webView:(id)arg1 shouldStartLoadWithRequest:(id)arg2 navigationType:(long long)arg3;
- (void)viewControllerDidClickStore:(id)arg1;
- (void)viewControllerDidClickCancel:(id)arg1;
- (void)productViewControllerDidFinish:(id)arg1;
- (void)closeSKProductViewControllerWithStatus:(id)arg1;
- (void)openStoreViewControllerWithUrlString:(id)arg1;
- (void)downloadApplication:(id)arg1;
- (void)smartMadCalendarDidFinished;
- (void)rotateToOrientation:(long long)arg1 forView:(id)arg2;
- (struct CGSize)screenSizeForOrientation:(long long)arg1;
- (long long)angleFromOrientation:(long long)arg1;
- (void)injectORMMAStateIntoWebView;
- (id)executeJavascript:(id)arg1 withVarArgs:(char *)arg2;
- (id)executeJavascript:(id)arg1;
- (id)correctViewController;
- (id)correctRootViewController;
- (void)fireAdWillLeaveApplication;
- (void)fireAdDidDismissScreen;
- (void)fireAdWillDissmissScreen;
- (void)fireAdWillPresentScreen:(int)arg1;
- (void)fireAdDidCloseExpand;
- (void)fireAdWillExpand;
- (void)fireReceiveAdOK;
- (void)fireAppShouldResume;
- (void)fireAppShouldSuspend;
- (void)fireReceiveAdFail:(int)arg1;
- (void)fireAdBeenClicked;
- (void)messageComposeViewController:(id)arg1 didFinishWithResult:(int)arg2;
- (void)mailComposeController:(id)arg1 didFinishWithResult:(int)arg2 error:(id)arg3;
- (id)currentAdvertisingConfig;
- (void)willLeaveApplication;
- (void)didDismissFullscreen;
- (void)willPresentFullscreen;
- (struct CGRect)rectAccordingToOrientation:(struct CGRect)arg1;
- (struct CGRect)getAdFrameInWindowCoordinates;
- (void)enableOrientationChange:(_Bool)arg1;
- (void)handleCustomClose:(_Bool)arg1;
- (void)openMapWithUrlString:(id)arg1 andFullScreen:(_Bool)arg2;
- (void)addEventToCalenderForDate:(id)arg1 withEndDate:(id)arg2 withTitle:(id)arg3 withBody:(id)arg4 withLocation:(id)arg5;
- (void)sendSMSTo:(id)arg1 withBody:(id)arg2;
- (void)sendEMailTo:(id)arg1 withSubject:(id)arg2 withBody:(id)arg3 isHTML:(_Bool)arg4;
- (void)resizeToWidth:(double)arg1 height:(double)arg2;
- (void)ExpandToWindowCoordinatesFrame:(struct CGRect)arg1 withURL:(id)arg2 lockOrientation:(_Bool)arg3 useCustomClose:(_Bool)arg4 useBackground:(_Bool)arg5 blockingColor:(id)arg6 blockingOpacity:(double)arg7;
- (void)CloseAdvertising;
- (void)openSystemBrowserWithUrl:(id)arg1;
- (void)openEmbeddedBrowserWithUrl:(id)arg1;
- (void)secondClick;
- (void)firstClick;
- (void)rightClick;
- (void)normalClick:(id)arg1;
- (void)sendACM;
- (void)OpenBrowserWithUrlString:(id)arg1 enableBack:(_Bool)arg2 enableForward:(_Bool)arg3 enableRefresh:(_Bool)arg4;
- (void)hideAd;
- (void)showAd;
- (void)actionsWhenAddToWindow;
- (void)OnClickExitButton;
- (void)videoPlayCompleteWithResult:(id)arg1;
- (void)coreViewWillLeaveApplication:(id)arg1;
- (void)coreView:(id)arg1 beenClickedAtPoint:(struct CGPoint)arg2;
- (void)coreView:(id)arg1 didFailLoadWithError:(id)arg2;
- (void)coreViewDidFinishLoad:(id)arg1;
- (void)coreViewDidStartLoad:(id)arg1;
- (_Bool)coreView:(id)arg1 shouldStartLoadWithRequest:(id)arg2 navigationType:(long long)arg3;
- (void)request:(id)arg1 didFailWithError:(id)arg2;
- (void)requestDidFinish:(id)arg1;
- (void)requestParseConfigReady:(id)arg1;
- (void)removeScreenShotIfNeed;
- (void)newAdAnimationDidStopWithAnimationID:(id)arg1 finished:(_Bool)arg2 context:(void *)arg3;
- (void)doSliderAnimation;
- (void)animationDidStop:(id)arg1 finished:(_Bool)arg2;
- (void)doFlipAnimation;
- (void)doFadeInOutAnimation;
- (int)correctAnimationType;
- (void)sendUnhandledRequest:(id)arg1;
- (long long)currentInterfaceOrientation;
- (void)handleCurrentInterfaceOrientation:(long long)arg1;
- (void)checkValidAreaVisibility;
- (_Bool)canRefresh;
- (void)loadAdvertising;
- (void)advertisingReceived;
- (void)cancelRequestAdvertising;
- (void)startNormalAdvertising;
- (void)startFirstAdvertising;
- (_Bool)canRequestAdvertising;
- (void)timerDidReach:(id)arg1;
- (void)stopTimer;
- (void)startTimer;
- (_Bool)isAuthorizationOK;
- (void)deleteCoreView;
- (void)createCoreView;
- (void)willMoveToWindow:(id)arg1;
- (void)setFrame:(struct CGRect)arg1;
- (void)reachabilityChanged:(id)arg1;
- (void)deviceOrientationDidChange:(id)arg1;
- (void)applicationDidReceiveMemoryWaring;
- (void)applicationWillResignActive;
- (void)applicationDidBecomeActive;
- (void)commonInitialization;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithAdSpaceId:(id)arg1 smAdSize:(int)arg2;
- (id)initWithAdSpaceId:(id)arg1;
- (id)init;
- (void)dealloc;

@end

