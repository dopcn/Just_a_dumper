//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "NTESRemoteAudioProviderDownloadDelegate-Protocol.h"

@class NMEffector, NMSong, NSString, NSURL, NTESAudioProvider, NTESAudioStreamer;
@protocol NMPlayerDeleagate;

@interface NMPlayer : NSObject <NTESRemoteAudioProviderDownloadDelegate>
{
    id <NMPlayerDeleagate> _delegate;
    NMEffector *_effector;
    NTESAudioProvider *_provider;
    NTESAudioStreamer *_streamer;
    _Bool _streamerObserving;
    long long _lastStatus;
    _Bool _stopped;
    _Bool _shouldPostNotification;
    _Bool _preload;
    _Bool _fetchingUrl;
    _Bool _playAfterUrlFetched;
    _Bool _disableCrossFade;
    _Bool _isAudition;
    double _seekTime;
    _Bool _enableHttps;
    NMSong *_song;
    NSURL *_url;
    double _ratio;
    double _timingOffset;
    double _lastSongInfoFixTime;
    long long _nextQuality;
    unsigned long long _fileType;
}

@property(nonatomic) unsigned long long fileType; // @synthesize fileType=_fileType;
@property(nonatomic) long long nextQuality; // @synthesize nextQuality=_nextQuality;
@property(readonly, nonatomic) NTESAudioStreamer *streamer; // @synthesize streamer=_streamer;
@property(nonatomic) double lastSongInfoFixTime; // @synthesize lastSongInfoFixTime=_lastSongInfoFixTime;
@property(nonatomic) double seekTime; // @synthesize seekTime=_seekTime;
@property(readonly, nonatomic) double timingOffset; // @synthesize timingOffset=_timingOffset;
@property(readonly, nonatomic) double ratio; // @synthesize ratio=_ratio;
@property(readonly, nonatomic) NSURL *url; // @synthesize url=_url;
@property(readonly, nonatomic) NMSong *song; // @synthesize song=_song;
@property(readonly, nonatomic) _Bool isPreload; // @synthesize isPreload=_preload;
@property(nonatomic) _Bool stopped; // @synthesize stopped=_stopped;
@property(nonatomic) _Bool playAfterUrlFetched; // @synthesize playAfterUrlFetched=_playAfterUrlFetched;
@property(nonatomic) _Bool fetchingUrl; // @synthesize fetchingUrl=_fetchingUrl;
@property(nonatomic) _Bool shouldPostNotification; // @synthesize shouldPostNotification=_shouldPostNotification;
@property(readonly, nonatomic) long long lastStatus; // @synthesize lastStatus=_lastStatus;
@property(retain, nonatomic) NTESAudioProvider *provider; // @synthesize provider=_provider;
@property(nonatomic) __weak id <NMPlayerDeleagate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)resetPausedByInterrupt;
- (void)seekToPercent:(double)arg1;
- (void)setStartTime:(double)arg1;
- (void)seekToTime:(double)arg1;
- (void)stop;
- (void)pause;
- (void)play;
- (void)playOrPause;
- (void)setEffector:(id)arg1;
@property(readonly, nonatomic) double percent; // @dynamic percent;
@property(readonly, nonatomic) double progress; // @dynamic progress;
@property(readonly, nonatomic) double duration; // @dynamic duration;
@property(readonly, nonatomic) double bufferingPercent; // @dynamic bufferingPercent;
@property(readonly, nonatomic) _Bool isIdle; // @dynamic isIdle;
@property(readonly, nonatomic) _Bool isFinished; // @dynamic isFinished;
@property(readonly, nonatomic) _Bool isSeeking; // @dynamic isSeeking;
@property(readonly, nonatomic) _Bool isPauseCrossFading; // @dynamic isPauseCrossFading;
@property(readonly, nonatomic) _Bool isSwitching;
@property(readonly, nonatomic) _Bool isWaiting; // @dynamic isWaiting;
@property(readonly, nonatomic) _Bool isPlaying; // @dynamic isPlaying;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)removeStreamerObserver;
- (void)addStreamerObserver;
- (void)_handleStreamerSeekingChanged:(id)arg1;
- (void)_handleStreamerStatusChanged:(id)arg1;
- (void)setNextDomain:(id)arg1;
- (void)addRetryMarkWithRemoteProvider:(id)arg1;
- (_Bool)remoteProviderDownloadFailed:(id)arg1 response:(id)arg2 request:(id)arg3 retry:(_Bool)arg4 error:(id)arg5;
- (void)_addErrorLogForResponse:(id)arg1;
- (void)_resendRequestWithInHttps:(id)arg1 response:(id)arg2 request:(id)arg3;
- (_Bool)remoteProviderResponseFailed:(id)arg1 response:(id)arg2 request:(id)arg3 retry:(_Bool)arg4;
- (void)remoteProviderBlockDownloadComplete:(id)arg1 responseTime:(double)arg2 request:(id)arg3 downloadSpeed:(unsigned long long)arg4;
- (id)remoteProvider:(id)arg1 willSendRequest:(id)arg2 redirectResponse:(id)arg3 originalRequest:(id)arg4;
- (void)remoteProviderDownloadWillStart:(id)arg1;
- (_Bool)remoteProviderShouldStartDownload:(id)arg1;
- (void)destoryStreamer;
- (void)setRemoteProviderBytesUpboundPerLoad:(id)arg1 song:(id)arg2;
- (void)createStreamer:(_Bool)arg1;
- (void)reset:(_Bool)arg1;
- (void)useFromPreload;
- (void)makeStreamerError:(unsigned long long)arg1;
- (void)cancelFixSongInfo;
- (void)fixSongInfoForSong:(id)arg1 completeBlock:(CDUnknownBlockType)arg2;
- (id)providerForSong:(id)arg1;
- (id)mediaLibProviderForMediaItem:(id)arg1;
- (unsigned long long)fileTypeWithProvider:(id)arg1 song:(id)arg2;
@property(readonly, nonatomic) _Bool isRemoteProvider;
- (_Bool)useOldRemoteClass;
- (Class)remoteProviderClass;
- (void)setProtocolClassesForProvider:(id)arg1;
- (id)remoteProviderForUrlInfo:(id)arg1;
- (id)localProviderForUrlInfo:(id)arg1 filePath:(id)arg2;
- (id)urlsForUrl:(id)arg1 timeout:(id *)arg2;
- (id)urlForUrl:(id)arg1 switchDomain:(id)arg2;
- (id)urlForAudioUrlString:(id)arg1;
- (void)commonInit;
- (void)dealloc;
- (id)initWithAuditionUrl:(id)arg1 useCrossFade:(_Bool)arg2;
- (id)initWithAuditionSong:(id)arg1 useCrossFade:(_Bool)arg2;
- (id)initWithSong:(id)arg1 preload:(_Bool)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

