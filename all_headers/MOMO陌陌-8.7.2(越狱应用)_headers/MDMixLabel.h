//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <UIKit/UIView.h>

#import "MDAsyncDisplayLayerDelegate-Protocol.h"

@class MDTextLayout, NSMutableAttributedString, NSString, UIColor, UIFont;
@protocol MDLabelDelegate;

@interface MDMixLabel : UIView <MDAsyncDisplayLayerDelegate>
{
    MDTextLayout *_layout;
    int _lock;
    _Bool _cleanBeforeUpdate;
    _Bool _displayOpaque;
    _Bool _underLineForLink;
    _Bool _displaysAsynchronously;
    _Bool _drawInOriginalCanvas;
    _Bool _touchEvent;
    int _textAlignment;
    int _textVerticalAlignment;
    int _lineBreakMode;
    int _attachmentAligmnet;
    NSMutableAttributedString *_attributedString;
    NSString *_text;
    UIFont *_font;
    UIColor *_textColor;
    UIColor *_highlightColor;
    UIColor *_linkColor;
    unsigned long long _matchLinkType;
    double _lineSpacing;
    double _paragraphSpacing;
    unsigned long long _numberOfLines;
    id <MDLabelDelegate> _delegate;
    long long _animationEmotionLimit;
    UIColor *_backupBackgroundColor;
    struct CGSize _maxSize;
    struct CGSize _attachmentMaxSize;
    struct UIEdgeInsets _attachmentEdgeInsets;
}

+ (Class)layerClass;
@property(retain) UIColor *backupBackgroundColor; // @synthesize backupBackgroundColor=_backupBackgroundColor;
@property(nonatomic, getter=isTouchEvent) _Bool touchEvent; // @synthesize touchEvent=_touchEvent;
@property(nonatomic) long long animationEmotionLimit; // @synthesize animationEmotionLimit=_animationEmotionLimit;
@property(nonatomic) int attachmentAligmnet; // @synthesize attachmentAligmnet=_attachmentAligmnet;
@property(nonatomic) struct UIEdgeInsets attachmentEdgeInsets; // @synthesize attachmentEdgeInsets=_attachmentEdgeInsets;
@property(nonatomic) struct CGSize attachmentMaxSize; // @synthesize attachmentMaxSize=_attachmentMaxSize;
@property(nonatomic) __weak id <MDLabelDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic, getter=isDrawInOriginalCanvas) _Bool drawInOriginalCanvas; // @synthesize drawInOriginalCanvas=_drawInOriginalCanvas;
@property(nonatomic) struct CGSize maxSize; // @synthesize maxSize=_maxSize;
@property(nonatomic) _Bool displaysAsynchronously; // @synthesize displaysAsynchronously=_displaysAsynchronously;
@property(nonatomic) unsigned long long numberOfLines; // @synthesize numberOfLines=_numberOfLines;
@property(nonatomic) double paragraphSpacing; // @synthesize paragraphSpacing=_paragraphSpacing;
@property(nonatomic) double lineSpacing; // @synthesize lineSpacing=_lineSpacing;
@property(nonatomic) int lineBreakMode; // @synthesize lineBreakMode=_lineBreakMode;
@property(nonatomic) int textVerticalAlignment; // @synthesize textVerticalAlignment=_textVerticalAlignment;
@property(nonatomic) int textAlignment; // @synthesize textAlignment=_textAlignment;
@property(nonatomic) unsigned long long matchLinkType; // @synthesize matchLinkType=_matchLinkType;
@property(nonatomic, getter=isUnderLineForLink) _Bool underLineForLink; // @synthesize underLineForLink=_underLineForLink;
@property(retain, nonatomic) UIColor *linkColor; // @synthesize linkColor=_linkColor;
@property(retain, nonatomic) UIColor *highlightColor; // @synthesize highlightColor=_highlightColor;
@property(retain, nonatomic) UIColor *textColor; // @synthesize textColor=_textColor;
@property(retain, nonatomic) UIFont *font; // @synthesize font=_font;
@property(copy, nonatomic) NSString *text; // @synthesize text=_text;
@property(retain, nonatomic) NSMutableAttributedString *attributedString; // @synthesize attributedString=_attributedString;
@property(nonatomic) _Bool displayOpaque; // @synthesize displayOpaque=_displayOpaque;
@property(nonatomic) _Bool cleanBeforeUpdate; // @synthesize cleanBeforeUpdate=_cleanBeforeUpdate;
- (void).cxx_destruct;
- (void)fitSize;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (_Bool)opaqueWhenDisplay;
- (_Bool)cleanBeforeDisplay;
- (void)drawEndCallBack:(id)arg1;
- (id)displayTask;
- (struct CGRect)getLineBounds:(struct __CTLine *)arg1 point:(struct CGPoint)arg2;
- (struct __CTFrame *)createFrame;
- (id)urlForPoint:(struct CGPoint)arg1;
- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;
- (void)touchesCancelled:(id)arg1 withEvent:(id)arg2;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (void)touchesMoved:(id)arg1 withEvent:(id)arg2;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (struct CGRect)rectForRange:(struct _NSRange)arg1 inLine:(struct __CTLine *)arg2 lineOrigin:(struct CGPoint)arg3;
- (void)clearAll;
- (void)setBackgroundColor:(id)arg1;
@property(readonly, nonatomic) struct CGSize realSize;
- (void)setupLayout;
@property(readonly, copy, nonatomic) NSString *visibleString;
@property(retain, nonatomic) MDTextLayout *layout;
@property(readonly, copy, nonatomic) NSString *originalString;
- (unsigned int)countOFCores;
- (void)baseSetup;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

