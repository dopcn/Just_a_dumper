//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

#import "IWebListManager-Protocol.h"
#import "SystemSettingObserver-Protocol.h"
#import "UCUserDefaultsObserver-Protocol.h"
#import "WebPageDelegate-Protocol.h"
#import "WebPageNavigationExtendProxy-Protocol.h"

@class NSMutableArray, NSString, NSTimer, UCWebPageManager, UCWindowGesture, UIView, WebAgent, WebViewWrapper;

@interface WebListManager : NSObject <WebPageDelegate, WebPageNavigationExtendProxy, UCUserDefaultsObserver, IWebListManager, SystemSettingObserver>
{
    UIView *m_parentView;
    _Bool _gestureDisabled;
    _Bool _isAddingNewWindow;
    NSTimer *_mUpdateTimer;
    UCWebPageManager *m_activeWebPage;
    WebAgent *_currentActiveWebAgent;
    NSMutableArray *_webPageList;
    UCWindowGesture *_windowGesture;
}

@property(retain, nonatomic) UCWindowGesture *windowGesture; // @synthesize windowGesture=_windowGesture;
@property(readonly, nonatomic) NSMutableArray *webPageList; // @synthesize webPageList=_webPageList;
@property(readonly, nonatomic) WebAgent *currentActiveWebAgent; // @synthesize currentActiveWebAgent=_currentActiveWebAgent;
@property(readonly, nonatomic) _Bool isAddingNewWindow; // @synthesize isAddingNewWindow=_isAddingNewWindow;
@property(nonatomic) _Bool gestureDisabled; // @synthesize gestureDisabled=_gestureDisabled;
@property(readonly, nonatomic) UIView *backgroundView; // @synthesize backgroundView=m_parentView;
@property(nonatomic) UCWebPageManager *currentWebPage; // @synthesize currentWebPage=m_activeWebPage;
@property(retain, nonatomic) NSTimer *mUpdateTimer; // @synthesize mUpdateTimer=_mUpdateTimer;
- (void)onMainUIDidFinishLoad;
- (void)searchSomething:(id)arg1;
- (id)chineseUrlConvertToLegalUrl:(id)arg1;
- (id)addAddressBarInputPrefix:(id)arg1;
- (id)urlConvertToSearchWord:(id)arg1;
- (void)saveSuggestTitle:(id)arg1 withHref:(id)arg2;
- (void)metaDataDidChange:(id)arg1;
- (void)settingRestoreAll;
- (void)settingChanged:(id)arg1;
- (_Bool)pageManager:(id)arg1 shouldForwardToLastPageUsingUrl:(id)arg2;
- (void)pageManagerWillOpenNewWebAgent:(id)arg1 url:(id)arg2 bizStyleId:(id)arg3 pageSource:(long long)arg4;
- (struct CGRect)webPageFrame;
- (void)releasInactiveWebViews;
- (void)addBizWebView:(id)arg1 inWebPage:(id)arg2;
- (void)setOrderIndex;
- (_Bool)canCloseWindow;
- (void)closeAllPrivateModeWindow;
- (void)closeNotCurrentModeWindow:(id)arg1;
- (void)closeOtherWindows:(int)arg1;
- (void)didWindowCountReachZero;
- (void)closeAllWindows:(_Bool)arg1;
- (void)closeWindow:(int)arg1 fromGesture:(_Bool)arg2;
- (void)closeWindow:(int)arg1;
- (void)setActiveWindow:(int)arg1 animated:(_Bool)arg2;
- (void)setActiveWindowOrignal:(int)arg1 animated:(_Bool)arg2;
- (void)setActivePage:(id)arg1;
- (id)addNewWindowWithParam:(id)arg1;
- (id)addNewWindowWithUrl:(id)arg1;
- (id)addNewWindowWithParam:(id)arg1 atIndex:(int)arg2;
- (id)addNewWindowWithUrl:(id)arg1 atIndex:(int)arg2;
- (id)addNewWindowWithParam:(id)arg1 atIndex:(int)arg2 inBackground:(_Bool)arg3 withTag:(int)arg4;
- (id)addNewWindowWithUrl:(id)arg1 atIndex:(int)arg2 inBackground:(_Bool)arg3 withTag:(int)arg4;
- (id)addNewWindowWithParam:(id)arg1 atIndex:(int)arg2 inBackground:(_Bool)arg3 withTag:(int)arg4 andPrivateMode:(_Bool)arg5 shouldPendingRequest:(_Bool)arg6;
- (id)addNewWindowWithUrl:(id)arg1 atIndex:(int)arg2 inBackground:(_Bool)arg3 withTag:(int)arg4 andPrivateMode:(_Bool)arg5 shouldPendingRequest:(_Bool)arg6;
- (id)addNewWindowWithParam:(id)arg1 atIndex:(int)arg2 inBackground:(_Bool)arg3 withTag:(int)arg4 andPrivateMode:(_Bool)arg5;
- (id)addNewWindowWithUrl:(id)arg1 atIndex:(int)arg2 inBackground:(_Bool)arg3 withTag:(int)arg4 andPrivateMode:(_Bool)arg5;
- (id)doAddNewWindowWithParam:(id)arg1 atIndex:(int)arg2 inBackground:(_Bool)arg3 withTag:(int)arg4 andPrivateMode:(_Bool)arg5 shouldPendingRequest:(_Bool)arg6;
- (void)openUrlWithNewWindow:(id)arg1 inBackground:(_Bool)arg2;
- (id)internalOpenNewWindowIfNeededWithUrl:(id)arg1;
- (int)getNewWindowTagIfNeededWithUrl:(id)arg1;
- (_Bool)openNewWindowIfNeededWithUrl:(id)arg1;
- (void)openUrl:(id)arg1 withRequestChannelOthers:(unsigned long long)arg2;
- (void)openUrl:(id)arg1;
- (void)openHomePageInNewWindowWithPendingRequest;
- (void)openHomePageInNewWindow;
- (void)openHomePage;
- (void)setWindowEndDoubleFingerGesture;
- (void)setWindowBeginDoubleFingerGesture;
- (id)getLatestActivatePage;
- (int)globalIndexFromCurrentModeIndex:(int)arg1;
- (_Bool)isCurrentMode:(id)arg1;
- (_Bool)isPrivateMode;
@property(readonly, nonatomic) int currentWebIndex;
@property(readonly, nonatomic) UIView *currentWindow;
@property(readonly, nonatomic) WebAgent *currentWebAgent;
@property(readonly, nonatomic) WebViewWrapper *currentWebView;
- (id)getHomePageToolBarButtonWithID:(long long)arg1;
- (id)getHomePageToolBarButtonWithIndex:(unsigned long long)arg1;
- (id)tipsLimitwindowCount;
- (void)resetHomepageToolbar:(long long)arg1;
- (int)getWebIndexForPrivateModeByPage:(id)arg1;
- (int)getWebIndexForPrivateMode:(id)arg1;
- (id)getWebPageForPrivateMode:(int)arg1;
- (id)getWebAgentForPrivateMode:(int)arg1;
- (int)windowCountForPrivateMode;
- (int)getWebIndexForNormalByPage:(id)arg1;
- (int)getWebIndexForNormal:(id)arg1;
- (id)getWebPageForNormal:(int)arg1;
- (id)getWebAgentForNormal:(int)arg1;
- (int)windowCountForNormal;
- (id)getWebPageForOriginal:(int)arg1;
- (int)windowCountForOriginal;
- (int)totalWindowCount;
- (int)getWebIndexByPage:(id)arg1;
- (int)getWebIndex:(id)arg1;
- (int)getPageIndex:(id)arg1;
- (id)getWebPage:(int)arg1;
- (id)getWebAgent:(int)arg1;
@property(readonly, nonatomic) int windowCount;
- (int)makeTag;
- (int)findMaxTag;
- (id)findWebPage:(int)arg1;
- (id)findWebAgent:(int)arg1;
- (void)updatePropertyOnTimer;
@property(readonly, copy) NSString *description;
- (void)dealloc;
- (void)addGestureRecognizerFunc;
- (id)initWithParent:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

