//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

#import "DownloadModel-Protocol.h"
#import "DownloadTaskDelegate-Protocol.h"

@class DownloadGlobalSetting, NSArray, NSDate, NSMutableArray, NSString;
@protocol DownloadModelObserver;

@interface DownloadModel : NSObject <DownloadTaskDelegate, DownloadModel>
{
    struct set<id<DownloadModelObserver>, std::__1::less<id<DownloadModelObserver>>, std::__1::allocator<id<DownloadModelObserver>>> m_observers;
    NSMutableArray *m_taskArray;
    unsigned int m_maxProgressingTaskCount;
    unsigned int m_maxConnectionCountOfEachTask;
    NSString *m_taskSavePath;
    NSString *m_taskListFullPath;
    NSString *m_globalTaskSettingPath;
    unsigned int m_maxID;
    NSString *m_userAgent;
    unsigned int m_maxRetryTimesOfEachTask;
    _Bool m_isSavingTasks;
    _Bool m_isWaitingSaveTasks;
    _Bool m_needSaveHLSTasksWhenResignActive;
    DownloadGlobalSetting *m_setting;
    id <DownloadModelObserver> _keepAliveObserver;
    NSString *_name;
    NSDate *m_lastSaveTasksTime;
}

+ (id)generateRelativePathFromAbsolutePath:(id)arg1;
+ (id)generateAbsolutePathFromRelativePath:(id)arg1;
+ (id)tempDirectoryPath;
+ (id)defalutTaskSavePath;
+ (id)defaultTaskListFullPath;
+ (void)createFolderIfNotExist:(id)arg1;
@property(nonatomic) _Bool needSaveHLSTasksWhenResignActive; // @synthesize needSaveHLSTasksWhenResignActive=m_needSaveHLSTasksWhenResignActive;
@property(retain, nonatomic) NSDate *lastSaveTasksTime; // @synthesize lastSaveTasksTime=m_lastSaveTasksTime;
@property(nonatomic) _Bool isWaitingSaveTasks; // @synthesize isWaitingSaveTasks=m_isWaitingSaveTasks;
@property(nonatomic) _Bool isSavingTasks; // @synthesize isSavingTasks=m_isSavingTasks;
@property(copy, nonatomic) NSString *name; // @synthesize name=_name;
@property(retain, nonatomic) id <DownloadModelObserver> keepAliveObserver; // @synthesize keepAliveObserver=_keepAliveObserver;
@property(readonly, nonatomic) DownloadGlobalSetting *setting; // @synthesize setting=m_setting;
@property(nonatomic) unsigned int maxProgressingTaskCount; // @synthesize maxProgressingTaskCount=m_maxProgressingTaskCount;
@property(copy, nonatomic) NSString *userAgent; // @synthesize userAgent=m_userAgent;
@property(copy, nonatomic) NSString *taskListFullPath; // @synthesize taskListFullPath=m_taskListFullPath;
@property(readonly, nonatomic) NSArray *taskListArray; // @synthesize taskListArray=m_taskArray;
@property(copy, nonatomic) NSString *taskSavePath; // @synthesize taskSavePath=m_taskSavePath;
- (id).cxx_construct;
- (void).cxx_destruct;
- (id)XUAgent;
- (void)resetSettings;
- (_Bool)loadSettings;
- (_Bool)saveSettings;
- (void)asyncSaveTasks:(id)arg1;
- (id)copyTasks;
- (_Bool)saveTasks;
- (_Bool)restoreTasks;
- (_Bool)shouldContinueRetryTask:(id)arg1;
- (void)reportOneSegmentDownloadedFromTask:(id)arg1;
- (void)reportStartReceiveDataFromTask:(id)arg1;
- (void)reportDataReceivedFromTask:(id)arg1;
- (void)reportTaskStop:(id)arg1;
- (void)reportTaskStart:(id)arg1;
- (void)notifyTaskNeedAlertBeforeRetry:(id)arg1;
- (_Bool)canHandleFailedTaskBeforeRetry:(id)arg1;
- (void)reportFailureHandlingErrorForTask:(id)arg1;
- (void)reportTaskShouldReplace:(id)arg1;
- (id)specialIconKeyPathOfTask:(id)arg1;
- (id)displayNameOfTask:(id)arg1;
- (void)task:(id)arg1 fileNameChangedTo:(id)arg2;
- (id)getFileExtensionFromObserverWithFilename:(id)arg1 contentType:(id)arg2 forTask:(id)arg3;
- (id)getFilePathFromObserverWithFilename:(id)arg1 forTask:(id)arg2 byRedirect:(_Bool)arg3;
- (void)reportFileNameChangedFromTask:(id)arg1;
- (void)notifyTaskArrayDidChanged;
- (void)notifyTaskDidChangeStatus:(id)arg1;
- (void)startTaskWithID:(unsigned int)arg1;
- (void)startTaskWithFileName:(id)arg1;
@property(readonly, nonatomic) int taskCount;
@property(readonly, nonatomic) _Bool isTaskListEmpty;
- (void)onTaskFailedRetry:(id)arg1 delay:(long long)arg2;
- (_Bool)sortListUsingFunction:(CDUnknownFunctionPointerType)arg1 context:(void *)arg2;
- (void)retryAllTasks;
- (void)stopAllLimitedTask;
- (_Bool)resumeAllLimitedTask;
- (_Bool)onAllTaskNetworkLimited;
- (void)onTaskNetworkLimited:(id)arg1;
- (void)deleteTaskByID:(unsigned int)arg1 shouldDeleteFile:(_Bool)arg2;
- (void)deleteAllTaskAndShouldDeleteFile:(_Bool)arg1;
- (void)notifyDeletedTaskBy:(id)arg1;
- (void)deleteTasksByArray:(id)arg1 shouldDeleteFile:(_Bool)arg2;
- (void)deleteTask:(id)arg1 shouldDeleteFile:(_Bool)arg2;
- (void)stopAllTasks;
- (void)stopTask:(id)arg1;
- (void)restartTask:(id)arg1 startImmediately:(_Bool)arg2;
- (void)resetAllProcessingTasks;
- (void)resetProcessingTask:(id)arg1;
- (void)startAllTasks;
- (void)startTask:(id)arg1;
- (id)addOldDBTask:(id)arg1 originalRequestUrl:(id)arg2 refUrl:(id)arg3 savePath:(id)arg4 fileName:(id)arg5 installState:(int)arg6 isFinish:(int)arg7 finishTime:(int)arg8;
- (void)addNBIncrUpdateTask:(id)arg1;
- (id)addTaskByReplacingM3U8Task:(id)arg1;
- (id)addM3U8Task:(id)arg1 replacingTask:(id)arg2;
- (id)addDownloadTasksByArray:(id)arg1;
- (id)addTask:(id)arg1 startImmediately:(_Bool)arg2;
- (void)startWaitingTasks;
- (_Bool)hasReachedMaxProgressingTaskCount;
- (int)progressingTaskCount;
- (id)findUnCompleteTasks;
- (id)findTaskByID:(unsigned int)arg1;
- (id)findTaskByfullPath:(id)arg1;
- (id)findTaskByFileName:(id)arg1;
- (id)findTaskByUrl:(id)arg1;
- (id)findTaskByStatus:(unsigned int)arg1;
- (id)findTaskByAtomicStatus:(unsigned int)arg1;
@property(nonatomic) _Bool enableBackgroundDownload;
- (void)removeObserver:(id)arg1;
- (void)addObserver:(id)arg1;
- (void)dealloc;
- (id)init;
- (id)initWithTaskLiskRecordPath:(id)arg1 taskSavePath:(id)arg2;
- (long long)retryDelayIntervalForTask:(id)arg1;
- (void)clearTaskRetriedTimes:(id)arg1;
- (_Bool)shouldHandleWhenTaskFailed:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

