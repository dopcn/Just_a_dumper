//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

@class NSDate, NSOperationQueue, NSString;
@protocol SAPILoginManagerDelegate;

@interface SAPILoginManager : NSObject
{
    _Bool _enableNoPwdRegister;
    _Bool _shouldResetAccountType;
    id <SAPILoginManagerDelegate> _loginDelegate;
    CDUnknownBlockType _switchToNativeInterfaceForLoginBlock;
    long long _accountType;
    NSString *_captchaStr;
    NSString *_captchaSign;
    unsigned long long _retriedTimes;
    NSString *_username;
    NSString *_password;
    NSDate *_startCheckingDate;
    double _upwardRegisterTimeout;
    NSString *_upwardRegisterSMS;
    CDUnknownBlockType _upwardRegisterSucceedBlock;
    CDUnknownBlockType _upwardRegisterFailedBlock;
    NSOperationQueue *_enhancedLoginQueue;
}

+ (id)sharedManager;
@property(retain, nonatomic) NSOperationQueue *enhancedLoginQueue; // @synthesize enhancedLoginQueue=_enhancedLoginQueue;
@property(copy, nonatomic) CDUnknownBlockType upwardRegisterFailedBlock; // @synthesize upwardRegisterFailedBlock=_upwardRegisterFailedBlock;
@property(copy, nonatomic) CDUnknownBlockType upwardRegisterSucceedBlock; // @synthesize upwardRegisterSucceedBlock=_upwardRegisterSucceedBlock;
@property(copy, nonatomic) NSString *upwardRegisterSMS; // @synthesize upwardRegisterSMS=_upwardRegisterSMS;
@property(nonatomic) double upwardRegisterTimeout; // @synthesize upwardRegisterTimeout=_upwardRegisterTimeout;
@property(retain, nonatomic) NSDate *startCheckingDate; // @synthesize startCheckingDate=_startCheckingDate;
@property(copy, nonatomic) NSString *password; // @synthesize password=_password;
@property(copy, nonatomic) NSString *username; // @synthesize username=_username;
@property(nonatomic) _Bool shouldResetAccountType; // @synthesize shouldResetAccountType=_shouldResetAccountType;
@property(nonatomic) unsigned long long retriedTimes; // @synthesize retriedTimes=_retriedTimes;
@property(copy, nonatomic) NSString *captchaSign; // @synthesize captchaSign=_captchaSign;
@property(copy, nonatomic) NSString *captchaStr; // @synthesize captchaStr=_captchaStr;
@property(nonatomic) _Bool enableNoPwdRegister; // @synthesize enableNoPwdRegister=_enableNoPwdRegister;
@property(nonatomic) long long accountType; // @synthesize accountType=_accountType;
@property(copy, nonatomic) CDUnknownBlockType switchToNativeInterfaceForLoginBlock; // @synthesize switchToNativeInterfaceForLoginBlock=_switchToNativeInterfaceForLoginBlock;
@property(nonatomic) __weak id <SAPILoginManagerDelegate> loginDelegate; // @synthesize loginDelegate=_loginDelegate;
- (void).cxx_destruct;
- (id)generateUUID;
- (id)genSig:(id)arg1;
- (id)trim4JSON:(id)arg1;
- (id)stringByReplaceHostForURLString:(id)arg1;
- (void)saveLoginActionInfo:(id)arg1;
- (void)resetLoginAdditionParams;
- (_Bool)handleLoginFailureForDelegateWithError:(id)arg1;
- (_Bool)handleLoginFailure:(CDUnknownBlockType)arg1 error:(id)arg2;
- (_Bool)handleLoginFailure:(CDUnknownBlockType)arg1;
- (_Bool)handleLoginSucceedInfoForDelegate:(id)arg1;
- (_Bool)handleLoginSucceedInfo:(id)arg1 success:(CDUnknownBlockType)arg2;
- (id)parseUserInfo:(id)arg1;
- (void)addBaseParamsWith:(id)arg1 interface:(id)arg2;
- (id)configureLoginParamsWithUsername:(id)arg1 password:(id)arg2 captcha:(id)arg3;
- (void)quickRegisterWithUsername:(id)arg1 password:(id)arg2 captcha:(id)arg3 needCaptcha:(CDUnknownBlockType)arg4 success:(CDUnknownBlockType)arg5 failure:(CDUnknownBlockType)arg6;
- (void)registerWithMobile:(id)arg1 password:(id)arg2 verifyCode:(id)arg3 success:(CDUnknownBlockType)arg4 failure:(CDUnknownBlockType)arg5;
- (void)getVerifyCodeForRegisterWithMobile:(id)arg1 success:(CDUnknownBlockType)arg2 failure:(CDUnknownBlockType)arg3;
- (void)getCaptchaForSMSLogin:(CDUnknownBlockType)arg1;
- (void)getCaptchaForQuickUser:(CDUnknownBlockType)arg1;
- (void)getCaptchaForLogin;
- (void)loginWithUsername:(id)arg1 password:(id)arg2 captcha:(id)arg3;
- (void)cancenlAllRequest;
- (void)sendLogForCertExpiredWithConnectionError:(id)arg1 underlyingErrorCode:(long long)arg2;
- (id)handleConnectionError:(id)arg1;
- (id)stringEncodedWith:(id)arg1;
- (id)dataEncodedWith:(id)arg1;
- (id)requestWithMethod:(id)arg1 path:(id)arg2 parameters:(id)arg3;
- (void)getPath:(id)arg1 parameters:(id)arg2 success:(CDUnknownBlockType)arg3 failure:(CDUnknownBlockType)arg4;
- (void)postPath:(id)arg1 parameters:(id)arg2 success:(CDUnknownBlockType)arg3 failure:(CDUnknownBlockType)arg4;
- (void)getWithInterface:(id)arg1 params:(id)arg2 success:(CDUnknownBlockType)arg3 failure:(CDUnknownBlockType)arg4;
- (void)postWithInterface:(id)arg1 params:(id)arg2 success:(CDUnknownBlockType)arg3 failure:(CDUnknownBlockType)arg4;
- (id)initSingleton;
- (id)init;
- (void)startCheckUpwardRegister;
- (void)registerBySendSMS:(id)arg1 timeout:(double)arg2 success:(CDUnknownBlockType)arg3 failure:(CDUnknownBlockType)arg4;
- (void)registerBySendSMS:(id)arg1 success:(CDUnknownBlockType)arg2 failure:(CDUnknownBlockType)arg3;
- (id)getUpwardSMSContentForRegister;
- (void)loginWithMobile:(id)arg1 dpass:(id)arg2 success:(CDUnknownBlockType)arg3 failure:(CDUnknownBlockType)arg4;
- (void)getDpassWithMobile:(id)arg1 captcha:(id)arg2 success:(CDUnknownBlockType)arg3 failure:(CDUnknownBlockType)arg4;
- (void)reloginWithUsername:(id)arg1 password:(id)arg2 success:(CDUnknownBlockType)arg3 failure:(CDUnknownBlockType)arg4;

@end

