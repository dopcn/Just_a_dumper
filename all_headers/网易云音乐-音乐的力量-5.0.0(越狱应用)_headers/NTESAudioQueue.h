//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class NTESSynchronousQueue;
@protocol NTESAudioQueueDelegate;

@interface NTESAudioQueue : NSObject
{
    id <NTESAudioQueueDelegate> _delegate;
    struct AudioStreamBasicDescription _format;
    struct OpaqueAudioQueue *_audioQueue;
    unsigned int _bufferCount;
    unsigned int _bufferSize;
    unsigned int _audioBufferSize;
    NTESSynchronousQueue *_buffers;
    NTESSynchronousQueue *_reusableBuffers;
    double _playedTime;
    long long _errorCode;
    _Bool _started;
    _Bool _isRunning;
    _Bool _interrupted;
    _Bool _switching;
    _Bool _playRateAdjustEnabled;
    struct _opaque_pthread_mutex_t _mutex;
    struct _opaque_pthread_cond_t _cond;
    struct AudioQueueLevelMeterState *_meterStateDB;
    _Bool _meteringEnabled;
    double _volume;
    double _gain;
    double _playRate;
}

+ (id)queue;
@property(nonatomic) _Bool meteringEnabled; // @synthesize meteringEnabled=_meteringEnabled;
@property(nonatomic) double playRate; // @synthesize playRate=_playRate;
@property(readonly, nonatomic) unsigned int audioBufferSize; // @synthesize audioBufferSize=_audioBufferSize;
@property(readonly, nonatomic) _Bool running; // @synthesize running=_isRunning;
@property(readonly, nonatomic) _Bool started; // @synthesize started=_started;
@property(nonatomic) double gain; // @synthesize gain=_gain;
@property(nonatomic) double volume; // @synthesize volume=_volume;
@property(nonatomic) _Bool switching; // @synthesize switching=_switching;
@property(nonatomic) _Bool interrupted; // @synthesize interrupted=_interrupted;
@property(readonly, nonatomic) long long errorCode; // @synthesize errorCode=_errorCode;
@property(nonatomic) __weak id <NTESAudioQueueDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)handleAudioQueuePropertyCallBack:(struct OpaqueAudioQueue *)arg1 property:(unsigned int)arg2;
- (void)handleAudioQueueOutputCallBack:(struct OpaqueAudioQueue *)arg1 buffer:(struct AudioQueueBuffer *)arg2;
- (void)_mutexSignal;
- (void)_mutexWait;
- (void)_mutexDestory;
- (void)_mutexInit;
- (float)averagePowerForChannel:(unsigned long long)arg1;
- (float)peakPowerForChannel:(unsigned long long)arg1;
- (void)updateMeters;
- (void)resetQueueVolume;
- (void)crossfadeFinished;
- (void)crossfade:(_Bool)arg1 inInterval:(double)arg2;
- (long long)playBytes:(const void *)arg1 length:(unsigned long long)arg2 isEof:(_Bool)arg3;
@property(readonly, nonatomic) double playedTime; // @dynamic playedTime;
- (_Bool)_flush;
- (_Bool)reset;
- (_Bool)stop:(_Bool)arg1;
- (_Bool)pause;
- (_Bool)resume;
- (int)_start;
- (void)resetPlayer;
@property(readonly, nonatomic) _Bool empty; // @dynamic empty;
- (void)_disposeAudioOutputQueue;
- (_Bool)prepareToPlay;
- (void)dealloc;
- (id)init;

@end

