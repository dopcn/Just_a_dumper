//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

#import "MLPlayerDelegate-Protocol.h"

@class MLPlayerConfiguration, MLPlayerStatistic, MLVideoLoadingView, NSArray, NSString, NSValue, UIImage, UIView;
@protocol MLPlayer, MLPlayerManagerDelegate;

@interface MLPlayerManager : NSObject <MLPlayerDelegate>
{
    _Bool _isDidRender;
    _Bool _isRendered;
    _Bool _needsReplayForInterruption;
    _Bool _mute;
    _Bool _playbackOnly;
    int _stopPlayErrorCode;
    id <MLPlayerManagerDelegate> _delegate;
    NSValue *_currentSourcePointerValue;
    UIView *_view;
    unsigned long long _state;
    CDUnknownBlockType _stopCompleteBlock;
    UIImage *_lastSnapShot;
    MLPlayerConfiguration *_configuration;
    NSArray *_subVideoDisplayFrames;
    UIView *_renderView;
    MLVideoLoadingView *_stallingView;
    UIView *_lastVideoFrameView;
    NSString *_roomidOfLastVideoFrame;
    id <MLPlayer> _player;
    MLPlayerStatistic *_currentStatistic;
    NSString *_oldUrl;
    NSString *_roomID;
}

+ (_Bool)isPlaying;
+ (id)sharedManager;
@property(copy, nonatomic) NSString *roomID; // @synthesize roomID=_roomID;
@property(copy, nonatomic) NSString *oldUrl; // @synthesize oldUrl=_oldUrl;
@property(nonatomic) _Bool playbackOnly; // @synthesize playbackOnly=_playbackOnly;
@property(nonatomic) _Bool mute; // @synthesize mute=_mute;
@property(retain, nonatomic) MLPlayerStatistic *currentStatistic; // @synthesize currentStatistic=_currentStatistic;
@property(retain, nonatomic) id <MLPlayer> player; // @synthesize player=_player;
@property(copy, nonatomic) NSString *roomidOfLastVideoFrame; // @synthesize roomidOfLastVideoFrame=_roomidOfLastVideoFrame;
@property(retain, nonatomic) UIView *lastVideoFrameView; // @synthesize lastVideoFrameView=_lastVideoFrameView;
@property(retain, nonatomic) MLVideoLoadingView *stallingView; // @synthesize stallingView=_stallingView;
@property(retain, nonatomic) UIView *renderView; // @synthesize renderView=_renderView;
@property(nonatomic) _Bool needsReplayForInterruption; // @synthesize needsReplayForInterruption=_needsReplayForInterruption;
@property(retain, nonatomic) NSArray *subVideoDisplayFrames; // @synthesize subVideoDisplayFrames=_subVideoDisplayFrames;
@property(nonatomic) _Bool isRendered; // @synthesize isRendered=_isRendered;
@property(retain, nonatomic) MLPlayerConfiguration *configuration; // @synthesize configuration=_configuration;
@property(retain, nonatomic) UIImage *lastSnapShot; // @synthesize lastSnapShot=_lastSnapShot;
@property(copy, nonatomic) CDUnknownBlockType stopCompleteBlock; // @synthesize stopCompleteBlock=_stopCompleteBlock;
@property(nonatomic) int stopPlayErrorCode; // @synthesize stopPlayErrorCode=_stopPlayErrorCode;
@property(nonatomic) _Bool isDidRender; // @synthesize isDidRender=_isDidRender;
@property(nonatomic) unsigned long long state; // @synthesize state=_state;
@property(retain, nonatomic) UIView *view; // @synthesize view=_view;
@property(retain, nonatomic) NSValue *currentSourcePointerValue; // @synthesize currentSourcePointerValue=_currentSourcePointerValue;
@property(nonatomic) __weak id <MLPlayerManagerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (id)getIJKPullWatchInfo;
- (void)setAudioPlaybackVolume:(float)arg1;
- (id)IJKPLayer;
- (_Bool)isIJKPlayer;
- (id)oldPlayUrl;
- (int)playbackErrorNo;
- (void)seek:(double)arg1;
- (struct CGSize)getVideoSize;
- (void)resetPlayViewFrame:(struct CGRect)arg1;
- (id)getConferencesDisplayFrames;
- (void)setConferences:(id)arg1;
- (_Bool)isPlayerOfConfiguration:(id)arg1;
- (void)recordAudio:(_Bool)arg1;
- (void)updateMute;
- (void)stopPlaying;
- (_Bool)stopPlayingFromSource:(id)arg1;
- (void)stopPlayingWithErrorCode:(int)arg1;
- (_Bool)startPlayingByConfiguration:(id)arg1 playback:(_Bool)arg2;
- (_Bool)startPlayingByConfiguration:(id)arg1 playback:(_Bool)arg2 source:(id)arg3;
- (void)isPreparedToPlay:(id)arg1;
- (void)player:(id)arg1 didVideoSizeChanged:(struct CGSize)arg2;
- (void)player:(id)arg1 didRecvUserInfo:(id)arg2;
- (void)player:(id)arg1 didRecvTS:(long long)arg2;
- (void)player:(id)arg1 didRecvUserInfoForScreens:(id)arg2;
- (void)player:(id)arg1 didChangeFramesOfConference:(id)arg2;
- (void)playerEndStalling:(id)arg1;
- (void)playerStartStalling:(id)arg1;
- (void)playerFailed:(id)arg1;
- (void)playerFailed:(id)arg1 errorCode:(int)arg2;
- (void)playerDidFinish:(id)arg1;
- (void)playerStartRendering:(id)arg1;
- (void)startPlayingFailed;
- (void)startPlayingStalled;
- (void)cleanStartPlayingDeadline;
- (void)setupStartPlayingDeadline;
- (void)cleanLastVideoFrame;
- (void)snapshotLastVideoFrame;
- (void)setStallingTextHidden:(_Bool)arg1;
- (void)dismissStallingView;
- (void)showStallingView;
- (void)observeAudioSessionEnd:(id)arg1;
- (void)observeAudioSessionBegin:(id)arg1;
- (void)observeApplicationDidBecomeActive:(id)arg1;
- (void)observeAudioSessionInterruption:(id)arg1;
- (long long)getPlayerReceiveSize;
- (void)dealloc;
- (id)init;
- (void)markStreamToConferenceRefetchFailedForRoomID:(id)arg1;
- (void)markStreamToConferenceRefetchEndForRoomID:(id)arg1;
- (void)markStreamToConferenceRefetchStartForRoomID:(id)arg1;
- (_Bool)isSwitchingStreamToConferenceForRoomID:(id)arg1;
- (id)playerGUIDebugInfo;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

