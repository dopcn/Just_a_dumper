//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "KSLiveAnchorViewModelChatDelegate-Protocol.h"
#import "KSLiveChatClientVideoDataDelegate-Protocol.h"
#import "KSLiveChatManager-Protocol.h"

@class KSGPUVideoFrameOutput, KSLiveAnchorViewModel, KSLiveChatCommunicator, KSLiveChatInvitationResponse, KSLiveChatMetadata, KSLiveChatRemoteAudioDataConsumer, KSState, KSStateMachine, KSStateMachineTransitionsHandler, KSULiveChatStatEvent, KSYAudioMixer, KSYStreamerBaseMetricInspector, KSYStreamerBaseMetricSnapshot, KS_user_info, NSDate, NSString, NSTimer;

@interface KSLiveChatAnchorManager : NSObject <KSLiveAnchorViewModelChatDelegate, KSLiveChatClientVideoDataDelegate, KSLiveChatManager>
{
    _Bool _hasReceivedGuestVideoFrame;
    int _retryPublishCountDuringLiveChat;
    double _maximumInvitationResponseWaitingTime;
    double _remoteAudioVolume;
    KSGPUVideoFrameOutput *_guestVideoFrameOutput;
    KSYStreamerBaseMetricInspector *_streamerMetricInspector;
    KSStateMachine *_stateMachine;
    KSStateMachineTransitionsHandler *_transitionHandler;
    KSState *_idleState;
    KSState *_sendingInvitationState;
    KSState *_waitingForInvitationResponseAndEstablishingConnectionState;
    KSState *_waitingForInvitationResponseFromGuestState;
    KSState *_establishingChatRoomConnectionState;
    KSState *_connectionEstablishedState;
    KSState *_terminatingChatRoomConnectionState;
    KS_user_info *_anchorUser;
    KSLiveAnchorViewModel *_anchorViewModel;
    KSYAudioMixer *_remoteMicMixer;
    KSLiveChatRemoteAudioDataConsumer *_remoteAudioDataConsumer;
    KSLiveChatCommunicator *_communicator;
    KSLiveChatInvitationResponse *_invitationResponse;
    KSLiveChatMetadata *_lastConnectionMetadata;
    KSLiveChatMetadata *_currentConnectionMetadata;
    long long _disconnectionReason;
    CDUnknownBlockType _hangingUpCompletion;
    NSTimer *_invitationResponseWaitingTimer;
    KSULiveChatStatEvent *_liveChatStatEvent;
    NSDate *_connectionEstablishedTime;
    KSYStreamerBaseMetricSnapshot *_snapshotWhenLiveChatEstablished;
}

+ (id)keyPathsForValuesAffectingCurrentConnectionState;
+ (id)keyPathsForValuesAffectingCoreCommunicatorActive;
@property(nonatomic) _Bool hasReceivedGuestVideoFrame; // @synthesize hasReceivedGuestVideoFrame=_hasReceivedGuestVideoFrame;
@property(nonatomic) int retryPublishCountDuringLiveChat; // @synthesize retryPublishCountDuringLiveChat=_retryPublishCountDuringLiveChat;
@property(retain, nonatomic) KSYStreamerBaseMetricSnapshot *snapshotWhenLiveChatEstablished; // @synthesize snapshotWhenLiveChatEstablished=_snapshotWhenLiveChatEstablished;
@property(retain, nonatomic) NSDate *connectionEstablishedTime; // @synthesize connectionEstablishedTime=_connectionEstablishedTime;
@property(retain, nonatomic) KSULiveChatStatEvent *liveChatStatEvent; // @synthesize liveChatStatEvent=_liveChatStatEvent;
@property(retain, nonatomic) NSTimer *invitationResponseWaitingTimer; // @synthesize invitationResponseWaitingTimer=_invitationResponseWaitingTimer;
@property(copy, nonatomic) CDUnknownBlockType hangingUpCompletion; // @synthesize hangingUpCompletion=_hangingUpCompletion;
@property(nonatomic) long long disconnectionReason; // @synthesize disconnectionReason=_disconnectionReason;
@property(retain, nonatomic) KSLiveChatMetadata *currentConnectionMetadata; // @synthesize currentConnectionMetadata=_currentConnectionMetadata;
@property(retain, nonatomic) KSLiveChatMetadata *lastConnectionMetadata; // @synthesize lastConnectionMetadata=_lastConnectionMetadata;
@property(retain, nonatomic) KSLiveChatInvitationResponse *invitationResponse; // @synthesize invitationResponse=_invitationResponse;
@property(retain, nonatomic) KSLiveChatCommunicator *communicator; // @synthesize communicator=_communicator;
@property(retain, nonatomic) KSLiveChatRemoteAudioDataConsumer *remoteAudioDataConsumer; // @synthesize remoteAudioDataConsumer=_remoteAudioDataConsumer;
@property(retain, nonatomic) KSYAudioMixer *remoteMicMixer; // @synthesize remoteMicMixer=_remoteMicMixer;
@property(retain, nonatomic) KSLiveAnchorViewModel *anchorViewModel; // @synthesize anchorViewModel=_anchorViewModel;
@property(retain, nonatomic) KS_user_info *anchorUser; // @synthesize anchorUser=_anchorUser;
@property(retain, nonatomic) KSState *terminatingChatRoomConnectionState; // @synthesize terminatingChatRoomConnectionState=_terminatingChatRoomConnectionState;
@property(retain, nonatomic) KSState *connectionEstablishedState; // @synthesize connectionEstablishedState=_connectionEstablishedState;
@property(retain, nonatomic) KSState *establishingChatRoomConnectionState; // @synthesize establishingChatRoomConnectionState=_establishingChatRoomConnectionState;
@property(retain, nonatomic) KSState *waitingForInvitationResponseFromGuestState; // @synthesize waitingForInvitationResponseFromGuestState=_waitingForInvitationResponseFromGuestState;
@property(retain, nonatomic) KSState *waitingForInvitationResponseAndEstablishingConnectionState; // @synthesize waitingForInvitationResponseAndEstablishingConnectionState=_waitingForInvitationResponseAndEstablishingConnectionState;
@property(retain, nonatomic) KSState *sendingInvitationState; // @synthesize sendingInvitationState=_sendingInvitationState;
@property(retain, nonatomic) KSState *idleState; // @synthesize idleState=_idleState;
@property(retain, nonatomic) KSStateMachineTransitionsHandler *transitionHandler; // @synthesize transitionHandler=_transitionHandler;
@property(retain, nonatomic) KSStateMachine *stateMachine; // @synthesize stateMachine=_stateMachine;
@property(retain, nonatomic) KSYStreamerBaseMetricInspector *streamerMetricInspector; // @synthesize streamerMetricInspector=_streamerMetricInspector;
@property(retain, nonatomic) KSGPUVideoFrameOutput *guestVideoFrameOutput; // @synthesize guestVideoFrameOutput=_guestVideoFrameOutput;
@property(nonatomic) double remoteAudioVolume; // @synthesize remoteAudioVolume=_remoteAudioVolume;
@property(nonatomic) double maximumInvitationResponseWaitingTime; // @synthesize maximumInvitationResponseWaitingTime=_maximumInvitationResponseWaitingTime;
- (void).cxx_destruct;
@property(readonly, nonatomic) long long currentConnectionState;
- (void)terminateChatRoomConnection;
- (void)leaveConnectionEstablishedState;
- (void)enterConnectionEstablishedState;
- (void)leaveWaitingForInvitationResponseFromGuestState;
- (void)leaveWaitingForInvitationResponseAndEstablishingConnectionStateToState:(id)arg1;
- (void)establishChatRoomConnectionAndSetUpTimeoutTimer;
- (void)leaveIdleState;
- (void)enterIdleState;
- (void)hangUpCurrentLiveChatWithReason:(long long)arg1 shouldSendShutRequest:(_Bool)arg2 withCompletion:(CDUnknownBlockType)arg3;
- (void)guestWithID:(long long)arg1 didHangUpChatWithRoomID:(long long)arg2 fromLiveAnchorViewModel:(id)arg3;
- (void)guestWithID:(long long)arg1 didRejectInvitationWithRoomID:(long long)arg2 fromLiveAnchorViewModel:(id)arg3;
- (void)guestWithID:(long long)arg1 didAcceptInvitationWithRoomID:(long long)arg2 mediaType:(long long)arg3 fromLiveAnchorViewModel:(id)arg4;
- (void)handleInvitationRequestResponse:(id)arg1 error:(id)arg2;
- (void)sendInvitationTo:(id)arg1 adminType:(short)arg2;
- (void)retryPublishLiveStreamingSuccessfully;
- (void)liveChatClient:(id)arg1 didReceiveRemoteVideoFrame:(id)arg2;
@property(readonly, nonatomic) _Bool coreCommunicatorActive;
- (void)processLocalVideoRawData:(char *)arg1 size:(struct CGSize)arg2 bytesPerRow:(int)arg3;
- (void)setRemoteMicMixerProcessingCallback:(CDUnknownBlockType)arg1;
- (void)processLocalAudioMixerData:(struct opaqueCMSampleBuffer *)arg1;
- (void)applicationDidEnterBackground:(id)arg1;
@property(retain, nonatomic) KSState *currentState;
- (void)dealloc;
- (id)initWithAnchorUser:(id)arg1 anchorViewModel:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

