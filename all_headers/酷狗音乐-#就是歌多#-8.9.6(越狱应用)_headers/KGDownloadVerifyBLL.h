//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "KGMusicAuthBLL.h"

@interface KGDownloadVerifyBLL : KGMusicAuthBLL
{
}

+ (unsigned long long)checkSongFailTypeForOtherType:(id)arg1;
+ (_Bool)ktvOpusPrerogativeAuthSucc;
+ (_Bool)hqMpkPrerogativeIntercept;
+ (_Bool)sqMpkPrerogativeIntercept;
+ (void)checkSongFailType:(id)arg1 goodEntity:(id)arg2;
+ (void)setPayInfoForDownTasks:(id)arg1 goodsEntity:(id)arg2;
+ (void)setPayInfoForDownTasks:(id)arg1 goodsEntitys:(id)arg2;
+ (id)sharedInstance;
- (id)resourceArrayWithDowntaskArray:(id)arg1;
- (id)resourceArrayWithSongArray:(id)arg1;
- (id)hashValue:(id)arg1 forQuality:(int)arg2;
- (_Bool)isAllQualityForbid:(id)arg1;
- (id)convertGoodsArrToDictionary:(id)arg1;
- (long long)musicBuyAlertTypeWithGoodsInfo:(unsigned long long)arg1 andPayType:(unsigned long long)arg2 andMusicPkgEnough:(_Bool)arg3;
- (id)goodsDictForSong:(id)arg1 queryGoodsInfo:(id)arg2;
- (id)goodsEntityForSong:(id)arg1 qualityType:(int)arg2 queryGoodsInfo:(id)arg3;
- (void)syncFilterSongs:(id)arg1 goodsInfo:(id)arg2 inQuality:(int)arg3 completedCallback:(CDUnknownBlockType)arg4;
- (void)asyncFilterSongs:(id)arg1 goodsInfo:(id)arg2 inQuality:(int)arg3 completedCallback:(CDUnknownBlockType)arg4;
- (void)asyncSortQueryPaySongs:(id)arg1 pPaySongs:(id)arg2 unknowSongs:(id)arg3 successCallback:(CDUnknownBlockType)arg4 errorCallback:(CDUnknownBlockType)arg5;
- (void)asyncFilterSongs:(id)arg1 completedCallback:(CDUnknownBlockType)arg2;
- (void)queryUserVipInfoAndComboRemain:(_Bool)arg1 withQueryCompleted:(CDUnknownBlockType)arg2 withErrorCallback:(CDUnknownBlockType)arg3;
- (void)queryMultiDowntasksPrivilige:(id)arg1 successCallback:(CDUnknownBlockType)arg2 andErrorCallback:(CDUnknownBlockType)arg3;
- (void)queryMultiSongsPriviligeContainBuy:(id)arg1 successCallback:(CDUnknownBlockType)arg2 andErrorCallback:(CDUnknownBlockType)arg3;
- (void)querySingleSongPrivilige:(id)arg1 successCallback:(CDUnknownBlockType)arg2 andErrorCallback:(CDUnknownBlockType)arg3;
- (void)endAPMForPrivilegeQueryWithSeqName:(id)arg1 nodeIndex:(long long)arg2;
- (void)middleAddAPMForPrivilegeQueryWithSeqName:(id)arg1 customParam:(id)arg2 nodeIndex:(long long)arg3 error:(id)arg4;
- (id)startAPMForPrivilegeQuery;
- (void)endAPMForPrivilegeQueryWithSeqName:(id)arg1 nodeIndex:(long long)arg2;
- (void)middleAddAPMForPrivilegeQueryWithSeqName:(id)arg1 customParam:(id)arg2 nodeIndex:(long long)arg3 error:(id)arg4;
- (id)startAPMForPrivilegeQuery;

@end

