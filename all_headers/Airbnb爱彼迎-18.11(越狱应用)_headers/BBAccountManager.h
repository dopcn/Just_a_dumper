//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class AIRAccount, BBAccountCachedUserInfo, NSMutableArray, NSString;
@protocol BBAccountManagerDelegate;

@interface BBAccountManager : NSObject
{
    BBAccountCachedUserInfo *_cachedUserInfo;
    _Bool _shouldPostInvalidAccountNotification;
    id <BBAccountManagerDelegate> _delegate;
    AIRAccount *_activeAccount;
    NSString *_activeUserId;
    NSString *_accessToken;
    NSMutableArray *_accountLoadedCompletionBlocks;
}

+ (id)sharedManager;
@property(nonatomic) _Bool shouldPostInvalidAccountNotification; // @synthesize shouldPostInvalidAccountNotification=_shouldPostInvalidAccountNotification;
@property(retain, nonatomic) NSMutableArray *accountLoadedCompletionBlocks; // @synthesize accountLoadedCompletionBlocks=_accountLoadedCompletionBlocks;
@property(readonly, copy, nonatomic) NSString *accessToken; // @synthesize accessToken=_accessToken;
@property(copy, nonatomic) NSString *activeUserId; // @synthesize activeUserId=_activeUserId;
@property(retain, nonatomic) AIRAccount *activeAccount; // @synthesize activeAccount=_activeAccount;
@property(nonatomic) __weak id <BBAccountManagerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)synchronizeSharedDefaults;
- (void)clearCookies;
- (void)removeAccessTokenFromKeychain;
- (void)saveAccessTokenInKeychain:(id)arg1;
- (id)retrieveAccessTokenFromKeychain;
@property(readonly, nonatomic) BBAccountCachedUserInfo *cachedUserInfo;
@property(copy, nonatomic) NSString *cachedUserId;
@property(readonly, nonatomic) _Bool isLoggedIn;
- (void)setAccessToken:(id)arg1;
- (void)activateSessionUsingLogin:(id)arg1 isInitial:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;
- (void)updateAccountTokenWithLogin:(id)arg1 source:(id)arg2;
- (void)purgeCachedUserInfo;
- (void)_loadActiveAccountIsInitial:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;
- (void)reloadActiveAccountWithCompletion:(CDUnknownBlockType)arg1;
- (void)restoreActiveAccountWithCompletion:(CDUnknownBlockType)arg1;
- (void)changePasswordWithPhone:(id)arg1 verificationCode:(id)arg2 newPassword:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)verifyForgotPasswordCode:(id)arg1 phone:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)sendForgotPasswordSMSToPhone:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)sendForgotPasswordEmailToEmail:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)resetState;
- (void)performLogOutCleanup;
- (void)logOutWithCompletion:(CDUnknownBlockType)arg1;
- (void)loadAccountWithAccessToken:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)dealloc;
- (id)init;
- (void)saveAccountForSwitcherIfNeededWithUsername:(id)arg1 token:(id)arg2;
- (void)accountDidLoad;
- (void)clearModelsCache;
- (_Bool)isInvalidPhotoError:(id)arg1;
- (_Bool)isInvalidPhoneSecurityCodeError:(id)arg1;
- (void)updateAccountTermsOfServiceWithCompletion:(CDUnknownBlockType)arg1;
- (void)updateUserEmail:(id)arg1 additionalParams:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)updateUserEmail:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)updateUserPhoneVerificationCode:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)_updateUserPhone:(id)arg1 callingCode:(id)arg2 params:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)updateUserPhoneByCallToPhone:(id)arg1 callingCode:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)updateUserPhoneBySMSToPhone:(id)arg1 callingCode:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)_uploadUserPhoto:(id)arg1 shouldDetectFace:(_Bool)arg2 shouldOverrideResult:(_Bool)arg3 completion:(CDUnknownBlockType)arg4;
- (void)uploadUserPhotoWithFaceDetection:(id)arg1 shouldOverrideResult:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;
- (void)uploadUserPhoto:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)updateAccountWithParams:(id)arg1 completion:(CDUnknownBlockType)arg2;

@end

