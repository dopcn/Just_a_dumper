//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

#import "HTSMediaExportable-Protocol.h"
#import "HTSMediaMixPlayerDelegate-Protocol.h"
#import "HTSMoviePlayerDelegate-Protocol.h"

@class AVMutableVideoComposition, HTSGLPicture, HTSGLPreview, HTSGLSpherePanoramaFilter, HTSMediaExporter, HTSMediaMixPlayer, HTSMoviePlayer, HTSVideoData, IESMediaTranscoder, IESVideoProcessBase, NSMutableArray, NSString, NSTimer;
@protocol HTSPlayerDelegate, OS_dispatch_queue;

@interface HTSPlayer : NSObject <HTSMediaMixPlayerDelegate, HTSMoviePlayerDelegate, HTSMediaExportable>
{
    void *operationQueueKey;
    _Bool _timeMachineReady;
    _Bool _isViewOnPresent;
    _Bool _isUsingSphere;
    _Bool _isUsingLittlePlanet;
    _Bool _reverseVideoStatus;
    _Bool _buseSenseTime;
    _Bool _isForeground;
    _Bool _effectProcessStatus;
    _Bool _effectReadyStatus;
    _Bool _converMode;
    int _mergeProgress;
    HTSMediaExporter *mediaExporter;
    id <HTSPlayerDelegate> _delegate;
    HTSMediaMixPlayer *_mixPlayer;
    long long _status;
    long long _previewModeType;
    unsigned long long _currFilterType;
    double _videoProcessCost;
    double _currentPlayerTime;
    CDUnknownBlockType _mixPlayerCompleteBlock;
    AVMutableVideoComposition *_videoComposition;
    HTSVideoData *_videoData;
    long long _encodeStatus;
    HTSGLPreview *_videoPreviewView;
    NSMutableArray *_observerArray;
    NSTimer *_timer;
    HTSGLPicture *_waterMarkImage;
    NSMutableArray *_movieWriterFilters;
    double _overTimeStart;
    double _lastMergeProgress;
    double _overTime;
    NSObject<OS_dispatch_queue> *_operationQueue;
    IESVideoProcessBase *_videoProcess;
    HTSMoviePlayer *_videoProcessPlayer;
    double _startTime;
    id _playerObserve;
    CDUnknownBlockType _completeBlock;
    IESMediaTranscoder *_mediaTranscoder;
    HTSGLSpherePanoramaFilter *_panoramaFilter;
    struct CGSize _outputVideoSize;
    struct CGSize _videoSize;
}

+ (void)getPreviewImageWithAsset:(id)arg1 videoComposition:(id)arg2 usingFilter:(unsigned long long)arg3 compeletion:(CDUnknownBlockType)arg4;
+ (void)getImageWithAsset:(id)arg1 videoComposition:(id)arg2 atTime:(double)arg3 preferredSize:(struct CGSize)arg4 usingFilter:(unsigned long long)arg5 compeletion:(CDUnknownBlockType)arg6;
+ (id)playerWithView:(id)arg1 videoData:(id)arg2 withBlock:(CDUnknownBlockType)arg3 needReverseVideo:(_Bool)arg4 isPanorama:(_Bool)arg5;
+ (id)playerWithView:(id)arg1 videoData:(id)arg2 withBlock:(CDUnknownBlockType)arg3 needReverseVideo:(_Bool)arg4;
+ (id)playerWithView:(id)arg1 videoData:(id)arg2 withBlock:(CDUnknownBlockType)arg3;
+ (id)playerWithView:(id)arg1 videoData:(id)arg2;
@property(retain, nonatomic) HTSGLSpherePanoramaFilter *panoramaFilter; // @synthesize panoramaFilter=_panoramaFilter;
@property(retain, nonatomic) IESMediaTranscoder *mediaTranscoder; // @synthesize mediaTranscoder=_mediaTranscoder;
@property(copy, nonatomic) CDUnknownBlockType completeBlock; // @synthesize completeBlock=_completeBlock;
@property(nonatomic) _Bool converMode; // @synthesize converMode=_converMode;
@property(nonatomic) _Bool effectReadyStatus; // @synthesize effectReadyStatus=_effectReadyStatus;
@property(nonatomic) _Bool effectProcessStatus; // @synthesize effectProcessStatus=_effectProcessStatus;
@property(nonatomic) id playerObserve; // @synthesize playerObserve=_playerObserve;
@property(nonatomic) struct CGSize videoSize; // @synthesize videoSize=_videoSize;
@property _Bool isForeground; // @synthesize isForeground=_isForeground;
@property(nonatomic) double startTime; // @synthesize startTime=_startTime;
@property(nonatomic) _Bool buseSenseTime; // @synthesize buseSenseTime=_buseSenseTime;
@property(retain, nonatomic) HTSMoviePlayer *videoProcessPlayer; // @synthesize videoProcessPlayer=_videoProcessPlayer;
@property(retain, nonatomic) IESVideoProcessBase *videoProcess; // @synthesize videoProcess=_videoProcess;
@property(nonatomic) _Bool reverseVideoStatus; // @synthesize reverseVideoStatus=_reverseVideoStatus;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *operationQueue; // @synthesize operationQueue=_operationQueue;
@property(nonatomic) double overTime; // @synthesize overTime=_overTime;
@property(nonatomic) double lastMergeProgress; // @synthesize lastMergeProgress=_lastMergeProgress;
@property(nonatomic) double overTimeStart; // @synthesize overTimeStart=_overTimeStart;
@property(retain, nonatomic) NSMutableArray *movieWriterFilters; // @synthesize movieWriterFilters=_movieWriterFilters;
@property(retain, nonatomic) HTSGLPicture *waterMarkImage; // @synthesize waterMarkImage=_waterMarkImage;
@property(retain, nonatomic) NSTimer *timer; // @synthesize timer=_timer;
@property(retain, nonatomic) NSMutableArray *observerArray; // @synthesize observerArray=_observerArray;
@property(retain, nonatomic) HTSGLPreview *videoPreviewView; // @synthesize videoPreviewView=_videoPreviewView;
@property(nonatomic) long long encodeStatus; // @synthesize encodeStatus=_encodeStatus;
@property(retain, nonatomic) HTSVideoData *videoData; // @synthesize videoData=_videoData;
@property(retain, nonatomic) AVMutableVideoComposition *videoComposition; // @synthesize videoComposition=_videoComposition;
@property(copy, nonatomic) CDUnknownBlockType mixPlayerCompleteBlock; // @synthesize mixPlayerCompleteBlock=_mixPlayerCompleteBlock;
@property(nonatomic) double currentPlayerTime; // @synthesize currentPlayerTime=_currentPlayerTime;
@property(nonatomic) _Bool isUsingLittlePlanet; // @synthesize isUsingLittlePlanet=_isUsingLittlePlanet;
@property(nonatomic) _Bool isUsingSphere; // @synthesize isUsingSphere=_isUsingSphere;
@property(nonatomic) _Bool isViewOnPresent; // @synthesize isViewOnPresent=_isViewOnPresent;
@property(nonatomic) double videoProcessCost; // @synthesize videoProcessCost=_videoProcessCost;
@property(nonatomic) int mergeProgress; // @synthesize mergeProgress=_mergeProgress;
@property(nonatomic) struct CGSize outputVideoSize; // @synthesize outputVideoSize=_outputVideoSize;
@property(nonatomic) _Bool timeMachineReady; // @synthesize timeMachineReady=_timeMachineReady;
@property(nonatomic) unsigned long long currFilterType; // @synthesize currFilterType=_currFilterType;
@property(nonatomic) long long previewModeType; // @synthesize previewModeType=_previewModeType;
@property(nonatomic) long long status; // @synthesize status=_status;
@property(retain, nonatomic) HTSMediaMixPlayer *mixPlayer; // @synthesize mixPlayer=_mixPlayer;
@property(nonatomic) __weak id <HTSPlayerDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) HTSMediaExporter *mediaExporter; // @synthesize mediaExporter;
- (void).cxx_destruct;
- (void)moviePlayerNeedReset;
- (void)switch360Panorama:(unsigned long long)arg1;
- (double)getTimeMachineBegineTime:(long long)arg1;
- (void)applyTimeMachine:(long long)arg1 beginTime:(double)arg2 startTime:(double)arg3;
- (void)applyTimeMachine:(long long)arg1 beginTime:(double)arg2;
- (unsigned long long)gpuImageRotationForAssetTrack:(id)arg1;
- (void)mediaMixPlayer:(id)arg1 didResetItem:(id)arg2;
- (void)mediaMixPlayer:(id)arg1 willResetItem:(id)arg2;
- (void)resetRefer;
- (_Bool)isOnWindow;
- (void)handleAppDidBecomeActive:(id)arg1;
- (void)handleAppWillResignActive:(id)arg1;
- (void)getVideoDuration:(id)arg1 andCompleteHandler:(CDUnknownBlockType)arg2;
- (void)getPreviewImageAtTime:(double)arg1 preferredSize:(struct CGSize)arg2 compeletion:(CDUnknownBlockType)arg3;
- (void)getPreviewImage:(CDUnknownBlockType)arg1;
- (void)clearOutputsForPlayerItem:(id)arg1;
- (void)getPreviewImageWithFilter:(unsigned long long)arg1 compeletion:(CDUnknownBlockType)arg2;
- (void)cancelVideoEditing;
- (double)getProgress;
- (id)getMetadataItem;
- (_Bool)applyVideoEditingWithCompleteBlock:(CDUnknownBlockType)arg1 enforceReencode:(_Bool)arg2;
- (_Bool)applyVideoEditingWithCompleteBlock:(CDUnknownBlockType)arg1;
- (_Bool)applyVideoEditing;
- (_Bool)applyVideoEditingWithCompleteBlock:(CDUnknownBlockType)arg1 waterMarkArray:(id)arg2 cropInfo:(id)arg3;
- (void)mergeCancel;
- (void)mergeCompleteWithUrl:(id)arg1 error:(id)arg2 progress:(int)arg3;
- (void)processImageFromSenseTime:(id)arg1 withFilter:(unsigned long long)arg2 withBlock:(CDUnknownBlockType)arg3;
- (void)setFilterLevel:(double)arg1;
- (void)stopCoverMode;
- (void)startCoverMode:(CDStruct_1b6d18a9)arg1;
- (void)updateVideoData:(id)arg1;
- (double)removeLastOperation;
- (void)stopEffectwithTime:(double)arg1;
- (void)startEffectWithType:(unsigned long long)arg1 withTime:(double)arg2;
- (void)exitProcessEffect;
- (void)readytoProcessEffect:(CDStruct_1b6d18a9)arg1;
- (void)applyFilter:(unsigned long long)arg1;
- (void)addWaterMarkFilter:(id)arg1;
- (id)getImageFromView:(id)arg1;
- (id)scaleImage:(id)arg1 andScale:(double)arg2;
- (struct CGRect)calcuWaterMarkerRect:(struct CGSize)arg1 andScale:(double)arg2;
- (void)startMoviePlayer;
- (void)stopMoviePlayer;
- (void)replay;
- (void)stop;
- (void)pause;
- (void)seekToTime:(CDStruct_1b6d18a9)arg1;
- (void)play;
- (void)playFromTime:(CDStruct_1b6d18a9)arg1;
- (id)audioOutputConfiguration;
- (id)videoOutputConfiguration:(struct CGSize)arg1;
- (void)runInOperationQueue:(CDUnknownBlockType)arg1;
- (void)dealloc;
- (void)resetPlayerWithView:(id)arg1 andIndex:(int)arg2;
- (void)resetPlayerWithView:(id)arg1;
- (void)reverseAssetIfNeeded;
- (void)restartReverseAsset;
- (void)resetPlayerWithError:(id)arg1;
- (void)addAllObserver;
- (id)initWithView:(id)arg1 videoData:(id)arg2 withBlock:(CDUnknownBlockType)arg3 useSenseTime:(_Bool)arg4 needReverseVideo:(_Bool)arg5 isPanorama:(_Bool)arg6;
- (id)init;
- (_Bool)exportVideo:(CDUnknownBlockType)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

