//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "KGMessageHandleProtocol-Protocol.h"

@class KGDirectoryMgr, KGDownloadCenter, KGPreferHostMgr, KGRecordMgr, NSLock, NSString;
@protocol KGFMStatisticsProtocol;

@interface KGRuntimeMgr : NSObject <KGMessageHandleProtocol>
{
    NSLock *_lockerRuntime;
    struct map<KGRuntimeJob *, KGRuntimeFile *, std::__1::less<KGRuntimeJob *>, std::__1::allocator<std::__1::pair<KGRuntimeJob *const, KGRuntimeFile *>>> _runtimeInfos;
    struct map<long long, KGDownloadQueue *, std::__1::less<long long>, std::__1::allocator<std::__1::pair<const long long, KGDownloadQueue *>>> _downQueues;
    struct map<long long, __weak id<KGDownloadProtocol>, std::__1::less<long long>, std::__1::allocator<std::__1::pair<const long long, __weak id<KGDownloadProtocol>>>> _downCallbacks;
    id <KGFMStatisticsProtocol> _statisticsHandler;
    KGDownloadCenter *_downCenter;
    int _privilegeHolder;
    KGPreferHostMgr *_preferHostMgr;
    KGRecordMgr *_pRecordMgr;
    KGDirectoryMgr *_pDirMgr;
}

@property(readonly, nonatomic) KGPreferHostMgr *preferHostMgr; // @synthesize preferHostMgr=_preferHostMgr;
@property(nonatomic) __weak KGDirectoryMgr *pDirMgr; // @synthesize pDirMgr=_pDirMgr;
@property(nonatomic) __weak KGRecordMgr *pRecordMgr; // @synthesize pRecordMgr=_pRecordMgr;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)netChanged;
- (void)runtimeInfos;
- (void)setPlayerDuration:(int)arg1 forJobId:(long long)arg2;
- (void)reinitNetWork;
- (void)reinitMvProxy;
- (struct DownEngine *)getEngine;
- (struct MVProxy *)getMvProxy;
- (struct StreamBase *)makeLoaclStream:(id)arg1;
-     // Error parsing type: ^{NetFileStream=^^?{atomic<int>=Ai}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=*QQ}{__short=[23c]{?=C}}{__raw=[3Q]})}}}qBiiI^{EncryptionFile}^{KeyFactroy}BBB{CBlockRanges={map<long long, long long, std::__1::less<long long>, std::__1::allocator<std::__1::pair<const long long, long long> > >={__tree<std::__1::__value_type<long long, long long>, std::__1::__map_value_compare<long long, std::__1::__value_type<long long, long long>, std::__1::less<long long>, true>, std::__1::allocator<std::__1::__value_type<long long, long long> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<long long, long long>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<long long, std::__1::__value_type<long long, long long>, std::__1::less<long long>, true> >=Q}}}}^{Locker}^{Locker}{vector<IStreamData *, std::__1::allocator<IStreamData *> >=^^{IStreamData}^^{IStreamData}{__compressed_pair<IStreamData **, std::__1::allocator<IStreamData *> >=^^{IStreamData}}}{function<void (long long, long long)>={type=[24C]}^{__base<void (long long, long long)>}}{function<void (bool, long long, long long)>={type=[24C]}^{__base<void (bool, long long, long long)>}}}32@0:8q16q24, name: makeStreamWithFileId:fileHolder:
-     // Error parsing type: ^{NetFileStream=^^?{atomic<int>=Ai}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=*QQ}{__short=[23c]{?=C}}{__raw=[3Q]})}}}qBiiI^{EncryptionFile}^{KeyFactroy}BBB{CBlockRanges={map<long long, long long, std::__1::less<long long>, std::__1::allocator<std::__1::pair<const long long, long long> > >={__tree<std::__1::__value_type<long long, long long>, std::__1::__map_value_compare<long long, std::__1::__value_type<long long, long long>, std::__1::less<long long>, true>, std::__1::allocator<std::__1::__value_type<long long, long long> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<long long, long long>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<long long, std::__1::__value_type<long long, long long>, std::__1::less<long long>, true> >=Q}}}}^{Locker}^{Locker}{vector<IStreamData *, std::__1::allocator<IStreamData *> >=^^{IStreamData}^^{IStreamData}{__compressed_pair<IStreamData **, std::__1::allocator<IStreamData *> >=^^{IStreamData}}}{function<void (long long, long long)>={type=[24C]}^{__base<void (long long, long long)>}}{function<void (bool, long long, long long)>={type=[24C]}^{__base<void (bool, long long, long long)>}}}24@0:8q16, name: makeStreamWithFileId:
- (_Bool)prepareForMakeStream:(long long)arg1 fileHolder:(long long)arg2;
- (_Bool)prepareForMakeStream:(long long)arg1;
- (id)delegateForHolder:(long long)arg1;
- (void)removeStatisticsHandler:(id)arg1;
- (void)addStatisticsHandler:(id)arg1;
- (void)removeCallbackFrom:(long long)arg1;
- (void)addCallback:(id)arg1 from:(long long)arg2;
- (void)handleUrlTracker:(id)arg1 forFileId:(long long)arg2;
- (void)pAjustAllPriority;
- (id)pFindJobsWithHolder:(id)arg1;
- (id)pFindJobsWithFile:(long long)arg1;
- (id)pFindRuntimeFileWithFileId:(long long)arg1;
- (id)pFindJobWithFileId:(long long)arg1 holder:(id)arg2;
- (id)pFindJobWithJobId:(long long)arg1;
- (id)infoDownJob:(long long)arg1 error:(id *)arg2;
- (void)deleteDownJobsForFileId:(long long)arg1;
- (void)deleteDownJobsForHolder:(id)arg1 except:(id)arg2;
- (void)deleteDownJobsForHolder:(id)arg1 files:(id)arg2;
- (void)deleteDownJobsForHolder:(id)arg1;
- (_Bool)stopDownJobsForHolder:(id)arg1 error:(id *)arg2;
- (_Bool)startDownJobsForHolder:(id)arg1 error:(id *)arg2;
- (void)startDownJobs:(long long *)arg1 count:(long long)arg2 forHolder:(id)arg3;
- (void)deleteDownJob:(long long)arg1 from:(id)arg2;
- (void)deleteDownJob:(long long)arg1;
- (_Bool)stopDownJob:(long long)arg1 error:(id *)arg2;
- (_Bool)startDownJob:(long long)arg1 preempt:(_Bool)arg2 isMoveJob:(_Bool)arg3 error:(id *)arg4;
- (_Bool)startDownJob:(long long)arg1 preempt:(_Bool)arg2 error:(id *)arg3;
- (_Bool)promotePriority:(long long)arg1 error:(id *)arg2;
- (_Bool)shouldRefreshTracker:(id)arg1 oldRuntimeFile:(id)arg2;
- (long long)generateJobForFile:(long long)arg1 fileSize:(long long)arg2 srcKGFile:(id)arg3 musicHash:(id)arg4 qualityType:(int)arg5 url:(id)arg6 holder:(id)arg7 tempPathWithName:(id)arg8 saveName:(id)arg9 orginExtName:(id)arg10 source:(id)arg11;
- (_Bool)hasPrivilegeHolder;
- (_Bool)isPrivilegeHolder:(long long)arg1;
- (void)releaseBandwidthForClient:(long long)arg1;
- (void)grabBandwidth:(long long)arg1 forClient:(long long)arg2;
- (_Bool)setQueueConcurrentCount:(int)arg1 forQueueId:(int)arg2;
- (id)init;
- (void)pHandleStatistics:(id)arg1 info:(id)arg2 runTimeJobHolderTypeMask:(unsigned long long)arg3;
- (void)handleStartResultForJob:(id)arg1 errorCode:(int)arg2;
- (void)completeEventHandler:(id)arg1 targetPath:(id)arg2;
- (void)stopEventHandler:(id)arg1;
- (void)failEventHandler:(id)arg1 errorCode:(int)arg2;
- (void)downloadingEventHandler:(id)arg1 fileSize:(long long)arg2;
- (void)postCompleteEventHandler:(long long)arg1;
- (_Bool)preFailEventHandler:(id)arg1 info:(id)arg2 runtimeHolderTypeMask:(unsigned long long)arg3;
- (_Bool)isTrackerError:(int)arg1;
- (_Bool)preCompleteEventHandler:(id)arg1 targetPath:(id)arg2;
- (void)pHandleStateChanged:(long long)arg1 info:(id)arg2;
- (void)pHandleUpadte:(long long)arg1 info:(id)arg2;
- (void)handleMessage:(int)arg1 fileId:(long long)arg2 info:(id)arg3;
- (_Bool)scheduleForQueue:(long long)arg1 onlyOnejob:(_Bool)arg2;
- (_Bool)scheduleAllQueue;
- (void)scheduleForJob:(id)arg1 isMoveJob:(_Bool)arg2;
- (_Bool)hasSimailarRuntimeJob:(id)arg1;
- (_Bool)allowDownOverseaForHolder:(id)arg1 error:(id *)arg2;
- (_Bool)getBoolConfigForKey:(id)arg1;
- (_Bool)preStartChecking:(id *)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

