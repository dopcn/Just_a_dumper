//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "NVBaseAsyncOperation.h"

@class NSCache, NSData, NSDictionary, NSLock, NSString, NSURLSessionTask, UIImage;

@interface UGCFetchImageOperation : NVBaseAsyncOperation
{
    _Bool _enableMemCache;
    _Bool _enableDiskCache;
    _Bool _syncReadFromDisk;
    _Bool _needImageData;
    CDUnknownBlockType _downloadHaveFinished;
    CDUnknownBlockType _downloadProgressHaveChanged;
    NSString *_businessName;
    long long _cacheType;
    double _timeoutIntervalForRequest;
    NSString *_ga_label;
    NSData *_imageData;
    long long _imageType;
    UIImage *_resultImage;
    double _decodeTimeForJPG;
    double _decodeTimeForWEBP;
    double _downloadTimeForImage;
    NSDictionary *_HTTPAdditionalHeaders;
    NSString *_identifier;
    NSURLSessionTask *_task;
    NSString *_picExtension;
    double _startTime;
    NSLock *_finishedLock;
    NSLock *_progressLock;
}

+ (id)signalForLoadingImage:(id)arg1;
@property(retain, nonatomic) NSLock *progressLock; // @synthesize progressLock=_progressLock;
@property(retain, nonatomic) NSLock *finishedLock; // @synthesize finishedLock=_finishedLock;
@property(nonatomic) double startTime; // @synthesize startTime=_startTime;
@property(copy, nonatomic) NSString *picExtension; // @synthesize picExtension=_picExtension;
@property(nonatomic) __weak NSURLSessionTask *task; // @synthesize task=_task;
@property(retain, nonatomic) NSString *identifier; // @synthesize identifier=_identifier;
@property(copy, nonatomic) NSDictionary *HTTPAdditionalHeaders; // @synthesize HTTPAdditionalHeaders=_HTTPAdditionalHeaders;
@property(nonatomic) double downloadTimeForImage; // @synthesize downloadTimeForImage=_downloadTimeForImage;
@property(nonatomic) double decodeTimeForWEBP; // @synthesize decodeTimeForWEBP=_decodeTimeForWEBP;
@property(nonatomic) double decodeTimeForJPG; // @synthesize decodeTimeForJPG=_decodeTimeForJPG;
@property(retain, nonatomic) UIImage *resultImage; // @synthesize resultImage=_resultImage;
@property(nonatomic) long long imageType; // @synthesize imageType=_imageType;
@property(retain, nonatomic) NSData *imageData; // @synthesize imageData=_imageData;
@property(copy, nonatomic) NSString *ga_label; // @synthesize ga_label=_ga_label;
@property(nonatomic) double timeoutIntervalForRequest; // @synthesize timeoutIntervalForRequest=_timeoutIntervalForRequest;
@property(nonatomic) long long cacheType; // @synthesize cacheType=_cacheType;
@property(retain, nonatomic) NSString *businessName; // @synthesize businessName=_businessName;
@property(nonatomic) _Bool needImageData; // @synthesize needImageData=_needImageData;
@property(nonatomic) _Bool syncReadFromDisk; // @synthesize syncReadFromDisk=_syncReadFromDisk;
@property(nonatomic) _Bool enableDiskCache; // @synthesize enableDiskCache=_enableDiskCache;
@property(nonatomic) _Bool enableMemCache; // @synthesize enableMemCache=_enableMemCache;
- (void).cxx_destruct;
- (id)myCache;
@property(copy, nonatomic) CDUnknownBlockType downloadProgressHaveChanged; // @synthesize downloadProgressHaveChanged=_downloadProgressHaveChanged;
@property(copy, nonatomic) CDUnknownBlockType downloadHaveFinished; // @synthesize downloadHaveFinished=_downloadHaveFinished;
- (void)downloadTaskDidFinishedWithStatus:(_Bool)arg1 andIsHitCache:(_Bool)arg2 error:(id)arg3;
- (void)downloadTaskHaveFinished:(id)arg1 andError:(id)arg2 code:(long long)arg3;
- (void)downloadTaskProgressChanged:(unsigned long long)arg1;
- (void)finishOperation;
- (double)runloopExpireData;
- (_Bool)needRunLoop;
- (id)decodeImageWithGifData:(id)arg1;
- (id)decodeImageWithWebpData:(id)arg1 hasAlpha:(_Bool *)arg2;
- (id)decodeImageWithOriginImage:(id)arg1;
- (void)saveToMemoryCacheWithImage:(id)arg1;
- (void)saveToDiskWithImageData:(id)arg1;
- (void)readFromRemote;
- (void)readFromDisk;
- (void)main;
- (_Bool)getImageFromImageData:(id)arg1;
- (void)fetch;
- (void)cancel;
@property(readonly, nonatomic) NSCache *cache;
- (id)initWithIdentifier:(id)arg1;

@end

