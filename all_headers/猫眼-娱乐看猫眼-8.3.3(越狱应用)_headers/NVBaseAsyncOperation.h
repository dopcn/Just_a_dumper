//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSOperation.h>

@class NSArray, NSDictionary, NSOperationQueue, NSThread;

@interface NVBaseAsyncOperation : NSOperation
{
    _Bool _internalReady;
    _Bool _internalExecuting;
    _Bool _internalFinished;
    _Bool _internalCancelled;
    NSOperationQueue *_queue;
    NSArray *_operations;
    long long _finishedCount;
    NSThread *_runThread;
    unsigned long long _waitingCount;
    NSDictionary *_userInfo;
    long long _UnfinishedOperationCount;
}

+ (_Bool)automaticallyNotifiesObserversForKey:(id)arg1;
@property(nonatomic) long long UnfinishedOperationCount; // @synthesize UnfinishedOperationCount=_UnfinishedOperationCount;
@property(nonatomic) _Bool internalCancelled; // @synthesize internalCancelled=_internalCancelled;
@property(nonatomic) _Bool internalFinished; // @synthesize internalFinished=_internalFinished;
@property(nonatomic) _Bool internalExecuting; // @synthesize internalExecuting=_internalExecuting;
@property(nonatomic) _Bool internalReady; // @synthesize internalReady=_internalReady;
@property(retain, nonatomic) NSDictionary *userInfo; // @synthesize userInfo=_userInfo;
@property(nonatomic) unsigned long long waitingCount; // @synthesize waitingCount=_waitingCount;
@property(nonatomic) __weak NSThread *runThread; // @synthesize runThread=_runThread;
@property(nonatomic) long long finishedCount; // @synthesize finishedCount=_finishedCount;
@property(retain, nonatomic) NSArray *operations; // @synthesize operations=_operations;
@property(retain, nonatomic) NSOperationQueue *queue; // @synthesize queue=_queue;
- (void).cxx_destruct;
- (_Bool)isCancelled;
- (_Bool)isFinished;
- (_Bool)isExecuting;
- (_Bool)isReady;
- (_Bool)isAsynchronous;
- (id)init;
- (void)cancel;
- (void)main;
- (double)runloopExpireData;
- (_Bool)needRunLoop;
- (void)start;
- (void)dealloc;
- (void)performSelectorOnRunThread:(SEL)arg1 withObject:(id)arg2;
- (void)subOperationHaveFinished:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (id)initWithOperations:(id)arg1;

@end

