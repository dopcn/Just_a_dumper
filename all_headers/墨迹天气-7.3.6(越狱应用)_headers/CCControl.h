//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "CCNode.h"

@interface CCControl : CCNode
{
    _Bool _needsLayout;
    _Bool _continuous;
    _Bool _tracking;
    _Bool _touchInside;
    unsigned long long _state;
    CDUnknownBlockType _block;
    struct CGSize _preferredSize;
    struct CGSize _maxSize;
}

@property(copy, nonatomic) CDUnknownBlockType block; // @synthesize block=_block;
@property(readonly, nonatomic) _Bool touchInside; // @synthesize touchInside=_touchInside;
@property(readonly, nonatomic) _Bool tracking; // @synthesize tracking=_tracking;
@property(nonatomic) _Bool continuous; // @synthesize continuous=_continuous;
@property(nonatomic) unsigned long long state; // @synthesize state=_state;
@property(nonatomic) struct CGSize maxSize; // @synthesize maxSize=_maxSize;
@property(nonatomic) struct CGSize preferredSize; // @synthesize preferredSize=_preferredSize;
- (void).cxx_destruct;
- (id)valueForKey:(id)arg1;
- (void)setValue:(id)arg1 forKey:(id)arg2;
- (id)valueForKey:(id)arg1 state:(unsigned long long)arg2;
- (void)setValue:(id)arg1 forKey:(id)arg2 state:(unsigned long long)arg3;
- (unsigned long long)controlStateFromString:(id)arg1;
@property(nonatomic) struct _CCSizeType maxSizeType;
@property(nonatomic) struct _CCSizeType preferredSizeType;
- (void)setContentSizeType:(struct _CCSizeType)arg1;
- (void)onEnter;
- (struct CGSize)contentSize;
- (void)visit:(id)arg1 parentTransform:(const union _GLKMatrix4 *)arg2;
- (void)layout;
- (void)needsLayout;
- (void)stateChanged;
@property(nonatomic) _Bool highlighted;
@property(nonatomic) _Bool selected;
@property(nonatomic) _Bool enabled;
- (void)touchUpOutside:(id)arg1 withEvent:(id)arg2;
- (void)touchUpInside:(id)arg1 withEvent:(id)arg2;
- (void)touchExited:(id)arg1 withEvent:(id)arg2;
- (void)touchEntered:(id)arg1 withEvent:(id)arg2;
- (void)touchCancelled:(id)arg1 withEvent:(id)arg2;
- (void)touchEnded:(id)arg1 withEvent:(id)arg2;
- (void)touchMoved:(id)arg1 withEvent:(id)arg2;
- (void)touchBegan:(id)arg1 withEvent:(id)arg2;
- (void)triggerAction;
- (void)setTarget:(id)arg1 selector:(SEL)arg2;
- (id)init;

@end

