//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <QuartzCore/CATextLayer.h>

@class NSString, NSTimer, UIColor, UIImage;

@interface AlignTextLayer : CATextLayer
{
    _Bool m_bShowCursor;
    int m_verticalAlign;
    double m_shadowWidth;
    _Bool showCursor;
    _Bool autoCorrectFont;
    _Bool _allowMultiLines;
    _Bool _isBlend;
    _Bool _useBlend;
    _Bool _isInPart;
    _Bool _isRelativeToBottom;
    _Bool _useBreakMode;
    _Bool _useAreaWidth;
    int verticalAlign;
    float _hSpace;
    float _vSpace;
    NSString *fontName;
    UIColor *textColor;
    double maxFontSize;
    double minFontSize;
    NSTimer *cursorTimer;
    double _blendFontSize;
    UIImage *_srcImage;
    double _lineStrokeWidth;
    UIColor *_lineStrokeColor;
    long long _textBreakMode;
    struct CGPoint _P0InUIView;
    struct CGPoint _P1InUIView;
    struct CGPoint _P2InUIView;
    struct CGPoint _P3InUIView;
    struct CGRect _partRect;
    struct CGRect _textFrame;
}

+ (id)rotateImage:(id)arg1;
+ (id)reSizeImage:(id)arg1 toSize:(struct CGSize)arg2;
+ (id)getImageFromImage:(id)arg1 withFrame:(struct CGRect)arg2;
@property(nonatomic) _Bool useAreaWidth; // @synthesize useAreaWidth=_useAreaWidth;
@property(nonatomic) long long textBreakMode; // @synthesize textBreakMode=_textBreakMode;
@property(nonatomic) _Bool useBreakMode; // @synthesize useBreakMode=_useBreakMode;
@property(nonatomic) struct CGPoint P3InUIView; // @synthesize P3InUIView=_P3InUIView;
@property(nonatomic) struct CGPoint P2InUIView; // @synthesize P2InUIView=_P2InUIView;
@property(nonatomic) struct CGPoint P1InUIView; // @synthesize P1InUIView=_P1InUIView;
@property(nonatomic) struct CGPoint P0InUIView; // @synthesize P0InUIView=_P0InUIView;
@property(retain, nonatomic) UIColor *lineStrokeColor; // @synthesize lineStrokeColor=_lineStrokeColor;
@property(nonatomic) double lineStrokeWidth; // @synthesize lineStrokeWidth=_lineStrokeWidth;
@property(retain, nonatomic) UIImage *srcImage; // @synthesize srcImage=_srcImage;
@property(nonatomic) struct CGRect textFrame; // @synthesize textFrame=_textFrame;
@property(nonatomic) float vSpace; // @synthesize vSpace=_vSpace;
@property(nonatomic) float hSpace; // @synthesize hSpace=_hSpace;
@property struct CGRect partRect; // @synthesize partRect=_partRect;
@property double blendFontSize; // @synthesize blendFontSize=_blendFontSize;
@property _Bool isRelativeToBottom; // @synthesize isRelativeToBottom=_isRelativeToBottom;
@property _Bool isInPart; // @synthesize isInPart=_isInPart;
@property _Bool useBlend; // @synthesize useBlend=_useBlend;
@property _Bool isBlend; // @synthesize isBlend=_isBlend;
@property _Bool allowMultiLines; // @synthesize allowMultiLines=_allowMultiLines;
@property _Bool autoCorrectFont; // @synthesize autoCorrectFont;
@property(retain) NSTimer *cursorTimer; // @synthesize cursorTimer;
@property double minFontSize; // @synthesize minFontSize;
@property double maxFontSize; // @synthesize maxFontSize;
@property(retain) UIColor *textColor; // @synthesize textColor;
@property(copy) NSString *fontName; // @synthesize fontName;
- (void).cxx_destruct;
- (id)actionForKey:(id)arg1;
- (void)setShadowWidth:(double)arg1;
- (double)shadowWidth;
@property int verticalAlign; // @synthesize verticalAlign;
- (void)cursorTimerRoutine;
@property _Bool showCursor; // @synthesize showCursor;
- (struct CGRect)getTextAreaByAreaSize;
- (struct CGRect)getTextArea;
- (struct CGRect)getBestFontSizeForText:(id)arg1 withFont:(id)arg2 bestFontSize:(double *)arg3;
- (id)subStringFromText:(id)arg1 font:(id)arg2 breakMode:(long long)arg3 inArea:(struct CGRect)arg4;
- (void)drawRegularText:(id)arg1 inRect:(struct CGRect)arg2 attributes:(id)arg3;
- (void)drawInContext:(struct CGContext *)arg1;
- (void)refreshText:(id)arg1;
- (void)useBlendMode;
- (void)dealloc;
- (id)init;

@end

