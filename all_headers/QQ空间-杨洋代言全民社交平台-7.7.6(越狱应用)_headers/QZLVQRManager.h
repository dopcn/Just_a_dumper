//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

@class NSDate, NSMutableDictionary, NSNumber, NSString;
@protocol OS_dispatch_queue, OS_dispatch_source;

@interface QZLVQRManager : NSObject
{
    long long _livePlayID;
    NSString *_roomID;
    NSString *_launcherUIN;
    NSNumber *_userIsLauncher;
    long long _roomStatus;
    long long _launcherType;
    NSNumber *_playbackBegin;
    NSString *_playbackUrl;
    NSString *_playVideoPlayID;
    NSString *_serverIP;
    _Bool _haveReportGetData;
    int _serverLauncherTime;
    int _serverWatcherTime;
    int _voiceDataDelay;
    NSString *_sectionTimeCost;
    _Bool _isEnterLiveUnNormal;
    _Bool _shouldIgnoreSdkEnterRoomResult;
    NSObject<OS_dispatch_queue> *_reportQueue;
    NSObject<OS_dispatch_source> *_timer;
    NSMutableDictionary *_allEventRetCodes;
    NSMutableDictionary *_eventStartTime;
    NSMutableDictionary *_musicDNSIP;
    NSMutableDictionary *_willReportEventDic;
    long long _eventIndex;
    unsigned int _s_videoPlayId_32bitSuffix;
    double _liveStartTime;
    double _liveDurationFromStartToEnd;
    double _liveEnterRoomTime;
    double _liveStayDuration;
    _Bool _waitEndModel;
    _Bool _isInLiving;
    NSDate *_liveStatusChangedTime;
    long long _liveStatusRetCode;
    long long _liveStatus;
    long long _wholeRoomStatus;
    id _viewController;
}

+ (id)sharedInstance;
+ (long long)getLiveRoomState;
+ (void)asyncGetDNSIPS:(id)arg1;
+ (void)setLastAudioStampSend:(int)arg1;
+ (int)getTickCount;
+ (int)serverClientTime:(int)arg1 serverReceive:(int)arg2 callRsp:(int)arg3;
+ (double)durationFromEventStart:(long long)arg1;
+ (void)changeToLiveState:(long long)arg1;
+ (void)endIfHaveStartedEvent:(long long)arg1 paramSet:(CDUnknownBlockType)arg2;
+ (void)startEvent:(long long)arg1 paramSet:(CDUnknownBlockType)arg2;
+ (void)reportEvent:(long long)arg1 paramSet:(CDUnknownBlockType)arg2;
+ (void)reportLog;
+ (void)uploadLogBeforeSeconds:(double)arg1 config:(id)arg2;
+ (void)feedBack:(id)arg1;
+ (void)reportLogForInterval:(double)arg1;
+ (long long)reportTimeCostThreshold;
+ (_Bool)isLogicError:(long long)arg1;
+ (id)client_time:(id)arg1;
+ (long long)notFound;
+ (double)eventTimeOverSeconds;
+ (int)getTickCountOut;
+ (long long)transportRetCode:(long long)arg1 errType:(long long)arg2 event:(long long)arg3;
+ (void)reportEventDic:(id)arg1;
+ (_Bool)isMainEvent:(long long)arg1;
+ (id)userUin;
+ (id)makeEventReportDic:(id)arg1;
+ (id)networkType;
+ (double)abTimeForDic:(id)arg1 key:(id)arg2;
+ (id)valForDic:(id)arg1 key:(id)arg2 valDefault:(id)arg3;
+ (id)client_time;
+ (id)dicFromEventModel:(id)arg1 event:(long long)arg2;
+ (id)eventChinaName:(long long)arg1;
+ (id)eventName:(long long)arg1;
+ (id)syncInfoDefault:(id)arg1;
+ (id)logicErrorDic;
+ (long long)reportWaitSecond;
@property(nonatomic) __weak id viewController; // @synthesize viewController=_viewController;
- (void).cxx_destruct;
- (void)startTimer;
- (void)changeToLiveState:(long long)arg1 syncInfo:(id)arg2;
- (void)dealloc;
- (long long)wholeRoomStatus;
- (void)setWholeRoomStatus:(long long)arg1;
- (long long)liveStatus;
- (void)setLiveStatus:(long long)arg1;
- (long long)liveStatusRetCode;
- (void)setLiveStatusRetCode:(long long)arg1;
- (id)liveStatusChangedTime;
- (void)setLiveStatusChangedTime:(id)arg1;
- (_Bool)isInLiving;
- (void)setIsInLiving:(_Bool)arg1;
- (_Bool)waitEndModel;
- (void)setWaitEndModel:(_Bool)arg1;
- (double)liveStayDuration;
- (void)setLiveStayDuration:(double)arg1;
- (double)liveEnterRoomTime;
- (void)setLiveEnterRoomTime:(double)arg1;
- (double)liveDurationFromStartToEnd;
- (void)setLiveDurationFromStartToEnd:(double)arg1;
- (double)liveStartTime;
- (void)setLiveStartTime:(double)arg1;
- (unsigned int)s_videoPlayId_32bitSuffix;
- (void)setS_videoPlayId_32bitSuffix:(unsigned int)arg1;
- (long long)eventIndex;
- (void)setEventIndex:(long long)arg1;
- (id)willReportEventDic;
- (void)setWillReportEventDic:(id)arg1;
- (_Bool)shouldIgnoreSdkEnterRoomResult;
- (void)setShouldIgnoreSdkEnterRoomResult:(_Bool)arg1;
- (_Bool)isEnterLiveUnNormal;
- (void)setIsEnterLiveUnNormal:(_Bool)arg1;
- (id)sectionTimeCost;
- (void)setSectionTimeCost:(id)arg1;
- (int)voiceDataDelay;
- (void)setVoiceDataDelay:(int)arg1;
- (int)serverWatcherTime;
- (void)setServerWatcherTime:(int)arg1;
- (int)serverLauncherTime;
- (void)setServerLauncherTime:(int)arg1;
- (_Bool)haveReportGetData;
- (void)setHaveReportGetData:(_Bool)arg1;
- (id)serverIP;
- (void)setServerIP:(id)arg1;
- (id)playVideoPlayID;
- (void)setPlayVideoPlayID:(id)arg1;
- (id)playbackUrl;
- (void)setPlaybackUrl:(id)arg1;
- (id)playbackBegin;
- (void)setPlaybackBegin:(id)arg1;
- (long long)launcherType;
- (void)setLauncherType:(long long)arg1;
- (long long)roomStatus;
- (void)setRoomStatus:(long long)arg1;
- (id)userIsLauncher;
- (void)setUserIsLauncher:(id)arg1;
- (id)launcherUIN;
- (void)setLauncherUIN:(id)arg1;
- (id)roomID;
- (void)setRoomID:(id)arg1;
- (long long)livePlayID;
- (id)init;
- (void)asyncEnterBackground:(id)arg1;
- (void)enterBackground;
- (void)clearAndReportEvents:(_Bool)arg1;
- (void)timerRun;
- (void)waitEventTimeOver:(id)arg1;
- (void)endOfReportEvent:(long long)arg1;
- (void)reportEvent:(long long)arg1 paramSet:(CDUnknownBlockType)arg2 isStart:(_Bool)arg3 syncInfo:(id)arg4;
- (long long)getRetCode:(_Bool)arg1;
- (_Bool)isHighLeverError:(long long)arg1;
- (id)makeEventModel:(long long)arg1 paramSet:(CDUnknownBlockType)arg2 isStart:(_Bool)arg3 syncInfo:(id)arg4;
- (_Bool)beforeMakeReportEvent:(long long)arg1 isStart:(_Bool)arg2 syncInfo:(id)arg3;
- (void)resetManagerWhenLiveStart;
- (void)reportEndEvent:(id)arg1;
- (void)reportEvent:(long long)arg1 paramSet:(CDUnknownBlockType)arg2 syncInfo:(id)arg3;
- (long long)createlivePlayID;
- (double)endAndGetDurationFromEventStart:(long long)arg1 syncInfo:(id)arg2;
- (void)endIfHaveStartedEvent:(long long)arg1 paramSet:(CDUnknownBlockType)arg2 syncInfo:(id)arg3;
- (void)startEvent:(long long)arg1 paramSet:(CDUnknownBlockType)arg2 syncInfo:(id)arg3;
- (id)reportQueue;
- (void)registToAppBackground:(SEL)arg1;

@end

