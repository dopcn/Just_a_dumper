//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "CorePlayer.h"

#import "MediaPlayerFeature-Protocol.h"
#import "PlayerCommonDelegate-Protocol.h"

@class Advs, MPSetting, NSDateFormatter, NSDictionary, NSString, UIView, UIViewController, UIWindow;
@protocol MediaPlayerDelegate;

@interface MediaPlayer : CorePlayer <MediaPlayerFeature, PlayerCommonDelegate>
{
    NSDateFormatter *_sessionFormat;
    MPSetting *_mpsetting;
    CDStruct_17ed53ef mpstate;
    UIWindow *display;
    _Bool fullScreen;
    _Bool resignAirPlayState;
    _Bool _lockScreen;
    _Bool _terminateObserved;
    long long _sequence;
    long long _err;
    unsigned long long _style;
    id _item;
    UIViewController<MediaPlayerDelegate> *_controller;
    Advs *_preadvs;
    Advs *_sufadvs;
    NSString *_adext;
    NSString *_session;
}

@property _Bool terminateObserved; // @synthesize terminateObserved=_terminateObserved;
@property(copy, nonatomic) NSString *session; // @synthesize session=_session;
@property(nonatomic) _Bool lockScreen; // @synthesize lockScreen=_lockScreen;
@property(copy, nonatomic) NSString *adext; // @synthesize adext=_adext;
@property(retain, nonatomic) Advs *sufadvs; // @synthesize sufadvs=_sufadvs;
@property(retain, nonatomic) Advs *preadvs; // @synthesize preadvs=_preadvs;
@property(readonly, nonatomic) UIViewController<MediaPlayerDelegate> *controller; // @synthesize controller=_controller;
@property(retain, nonatomic) id item; // @synthesize item=_item;
@property(nonatomic) unsigned long long style; // @synthesize style=_style;
@property(nonatomic) _Bool resignAirPlayState; // @synthesize resignAirPlayState;
@property(nonatomic) _Bool fullScreen; // @synthesize fullScreen;
@property(nonatomic) long long err; // @synthesize err=_err;
@property(nonatomic) long long sequence; // @synthesize sequence=_sequence;
- (void).cxx_destruct;
- (void)encryptLocalVideoFileWhenTerminate;
- (void)dencryptLocalVideoFileWithVID:(id)arg1 success:(CDUnknownBlockType)arg2 failure:(CDUnknownBlockType)arg3;
- (void)encryptLocalVideoFileWithVideo:(id)arg1 success:(CDUnknownBlockType)arg2 failure:(CDUnknownBlockType)arg3;
- (void)encryptLocalVideoFileWithVID:(id)arg1 success:(CDUnknownBlockType)arg2 failure:(CDUnknownBlockType)arg3;
- (id)errorMessage;
- (void)endRecommend:(id)arg1;
- (void)backAction;
- (void)pauseVideo;
- (void)showQuestionnaire:(_Bool)arg1;
- (void)showADView:(int)arg1 withUrl:(id)arg2 withBlock:(id)arg3;
- (void)playNextVideo;
- (void)becomeVip:(_Bool)arg1;
- (void)skipAD:(long long)arg1;
- (id)createSession:(id)arg1;
- (void)externDisplayDisconnect:(id)arg1;
- (void)externDisplayConnect:(id)arg1;
- (void)handleDisplay:(id)arg1;
- (void)destroyDisplay;
- (void)createDisplay;
- (_Bool)isViewOnScreen;
- (double)adRequestTimeout;
- (_Bool)isRequireAd;
- (id)moreCard;
- (id)nextCard;
- (_Bool)isGeneralPlayer;
- (_Bool)isPlayerTypeTopic;
- (_Bool)realQualityIsResolutionNormal;
- (long long)videoDuration;
- (_Bool)isReqADSucceed;
- (_Bool)isPaid;
- (id)audioTrack;
- (id)trackPoint;
- (id)cardList;
- (id)aid;
- (id)sid;
- (id)vid;
- (id)pvid;
- (id)img;
- (_Bool)isTrailer;
- (void)setTitle:(id)arg1;
- (id)title;
- (void)setFrom:(unsigned long long)arg1;
- (double)from;
- (id)siddata;
- (long long)code;
- (id)urlForResolution:(int)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)setController:(id)arg1;
- (void)getPlayReady:(id)arg1 sid:(id)arg2 password:(id)arg3 title:(id)arg4 cardListReady:(_Bool)arg5 ad:(_Bool)arg6 seq:(long long)arg7 click:(_Bool)arg8;
- (void)getPlayReady:(id)arg1 sid:(id)arg2 password:(id)arg3 title:(id)arg4 cardListReady:(_Bool)arg5 ad:(_Bool)arg6 seq:(long long)arg7;
- (void)getPlayReady:(id)arg1 sid:(id)arg2 password:(id)arg3 title:(id)arg4 cardListReady:(_Bool)arg5 ad:(_Bool)arg6;
- (void)getPlayReady:(id)arg1 sid:(id)arg2 title:(id)arg3 cardListReady:(_Bool)arg4 ad:(_Bool)arg5;
- (void)getPlayAudio:(id)arg1 duration:(double)arg2;
- (_Bool)isControllsOn;
- (int)currentResolution;
- (id)currentLangCode;
- (void)setCurrentLangCode:(id)arg1;
- (_Bool)isPortrait;
- (_Bool)isLandscape;
- (_Bool)isDevicePortrait;
- (void)playItem:(id)arg1 from:(double)arg2;
- (void)playItem:(id)arg1;
- (void)appendPlayAdvs;
- (void)playFrom:(double)arg1;
- (void)seekTo:(double)arg1 seekOnly:(_Bool)arg2;
- (void)seekTo:(double)arg1;
- (long long)durationSpan;
- (void)handlePlayEnd;
- (void)localADPlayError;
- (void)handleError;
- (_Bool)rotate:(long long)arg1;
- (void)layoutFull:(_Bool)arg1;
- (void)wantsFull:(_Bool)arg1;
- (void)layout:(struct CGRect)arg1;
- (void)scaleLayoutForiPad:(struct CGRect)arg1;
- (void)fullScreen:(_Bool)arg1;
- (id)moduleManager;
- (_Bool)isFullScreen;
- (void)error:(long long)arg1;
- (void)preload;
@property(nonatomic) float volume; // @dynamic volume;
@property(nonatomic, getter=isUpdateAddress) _Bool updateAddress;
@property(nonatomic, getter=isLocal) _Bool local; // @dynamic local;
- (void)deinit;
- (void)dealloc;
- (void)appWillEnterForeground:(id)arg1;
- (void)appDidEnterBackground:(id)arg1;
- (void)airplayStateChanged:(id)arg1;
- (void)appWillResignActive:(id)arg1;
- (void)delayPlay;
- (id)initWithDelegate:(id)arg1 adv:(_Bool)arg2;
- (id)initWithDelegate:(id)arg1;

// Remaining properties
@property(retain, nonatomic) NSDictionary *app_buy_info;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(nonatomic) _Bool scaleFill;
@property(nonatomic) long long screenMode;
@property(copy, nonatomic) NSString *subscribeOwnFansCount;
@property(copy, nonatomic) NSString *subscribeOwnName;
@property(copy, nonatomic) NSString *subscribeOwnPhoto;
@property(copy, nonatomic) NSString *subscribeOwnUid;
@property(readonly) Class superclass;
@property(copy, nonatomic) NSString *videoOwner;
@property(retain, nonatomic) UIView *view;
@property(retain, nonatomic) NSDictionary *vipPayInfo;

@end

