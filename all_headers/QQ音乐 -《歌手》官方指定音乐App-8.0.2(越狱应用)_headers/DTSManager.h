//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

@class CustomGeq, DCAAudioAccessory, DCAAudioProcessingController, NSArray, NSMutableArray, NSMutableData;

@interface DTSManager : NSObject
{
    _Bool _isAuthenticated;
    _Bool _isAdvancedSetting;
    int _lastSelectedHeadPhoneType;
    int _selectedAccessoryTag;
    int _selectedPreferenceTag;
    int _currentAudioRoute;
    int _lastSampleRate;
    unsigned int _lastBitsPerChannel;
    DCAAudioProcessingController *audioProcessingController;
    NSArray *accessories;
    CustomGeq *currentGeqPreset;
    DCAAudioAccessory *_currentAccessory;
    NSMutableArray *_factoryGEQs;
    NSMutableData *_audioData;
    NSMutableData *_leftData;
    NSMutableData *_len24Data;
    NSMutableData *_len16Data;
}

+ (_Bool)supportDTS;
+ (id)sharedDTSManager;
@property(retain, nonatomic) NSMutableData *len16Data; // @synthesize len16Data=_len16Data;
@property(retain, nonatomic) NSMutableData *len24Data; // @synthesize len24Data=_len24Data;
@property(retain, nonatomic) NSMutableData *leftData; // @synthesize leftData=_leftData;
@property(retain, nonatomic) NSMutableData *audioData; // @synthesize audioData=_audioData;
@property(nonatomic) unsigned int lastBitsPerChannel; // @synthesize lastBitsPerChannel=_lastBitsPerChannel;
@property(nonatomic) int lastSampleRate; // @synthesize lastSampleRate=_lastSampleRate;
@property(nonatomic) int currentAudioRoute; // @synthesize currentAudioRoute=_currentAudioRoute;
@property(nonatomic) int selectedPreferenceTag; // @synthesize selectedPreferenceTag=_selectedPreferenceTag;
@property(nonatomic) int selectedAccessoryTag; // @synthesize selectedAccessoryTag=_selectedAccessoryTag;
@property(nonatomic) int lastSelectedHeadPhoneType; // @synthesize lastSelectedHeadPhoneType=_lastSelectedHeadPhoneType;
@property(retain, nonatomic) NSMutableArray *factoryGEQs; // @synthesize factoryGEQs=_factoryGEQs;
@property(retain, nonatomic) DCAAudioAccessory *currentAccessory; // @synthesize currentAccessory=_currentAccessory;
@property(nonatomic) _Bool isAdvancedSetting; // @synthesize isAdvancedSetting=_isAdvancedSetting;
@property(nonatomic) _Bool isAuthenticated; // @synthesize isAuthenticated=_isAuthenticated;
@property(retain, nonatomic) CustomGeq *currentGeqPreset; // @synthesize currentGeqPreset;
@property(retain, nonatomic) NSArray *accessories; // @synthesize accessories;
@property(retain) DCAAudioProcessingController *audioProcessingController; // @synthesize audioProcessingController;
- (void).cxx_destruct;
- (void)onLoginSuccess;
- (id)toBasicSetting:(id)arg1;
- (id)toAdvancedSetting:(id)arg1;
- (id)accessoryWithModuleName:(id)arg1 brandName:(id)arg2;
- (id)accessoryWithName:(id)arg1;
- (id)accessoryWithTag:(int)arg1;
- (long long)stereoPreferenceWithTag:(int)arg1;
- (void)readSetting;
- (_Bool)checkDTS;
- (int)currentPreferenceForStat;
- (int)currentGeqForStat;
- (id)supportedHeadPhones;
- (id)selectedAccessoryDescription;
- (void)handleCurrentAudioProcessingSetting:(_Bool)arg1;
- (_Bool)selectAccessoryByTag:(int)arg1 onComplete:(CDUnknownBlockType)arg2;
- (_Bool)selectPreferenceByTag:(int)arg1 onComplete:(CDUnknownBlockType)arg2;
- (void)HeadsetUnplugged;
- (void)audioRouteChanged;
- (void)audioProcessingStateChanged;
- (void)superSoundStateChanged:(id)arg1;
- (void)getFactoryGEQs;
- (id)getGeqByName:(id)arg1;
- (_Bool)updateCustomGeq:(id)arg1 basicValues:(id)arg2;
- (_Bool)selectEqByName:(id)arg1;
- (id)getLastGeq;
- (void)setGeqPreset:(id)arg1 ApplyNow:(_Bool)arg2;
- (void)initGeq;
- (id)Convert16To24:(id)arg1;
- (id)Convert24To16:(id)arg1;
- (id)processPCM:(id)arg1;
- (void)setDTSPrefrences:(int)arg1 BitPerChannel:(unsigned int)arg2;
- (_Bool)supportDTS:(id)arg1 showTips:(_Bool)arg2;
- (_Bool)isAttachSpeaker;
- (void)setEnable:(_Bool)arg1;
- (_Bool)isEnableDTS;
- (unsigned long long)currentHeadPhoneMode;
- (_Bool)isFreeToChooseAccessory;
- (_Bool)isIPodEnableDTS;
- (void)authenticateForDTS;
- (void)authenticateForDTSAsync;
- (_Bool)isDtsDccDspSoftwareSuccessInit;
- (void)dealloc;
- (id)init;
- (void)showSoundEffectQPlayNotSupportedTips;
- (void)showSoundEffectiTunesNotSupportTips;
- (void)updateDTSTimeToServer;
- (void)setLocalDTSExpireTimeIFNeed;
- (void)showDTSTipsIFFirstTimeUse;
- (void)showSuperGreenDiamondNeedAlertView;
- (long long)daysToExpire;
- (struct SFlexInteger)canTryDTS;

@end

