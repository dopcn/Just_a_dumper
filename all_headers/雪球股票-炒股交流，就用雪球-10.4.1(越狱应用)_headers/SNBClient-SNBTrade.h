//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <SNBClient/SNBClient.h>

@interface SNBClient (SNBTrade)
+ (id)postBrokerLogWithPageId:(unsigned long long)arg1 eventId:(unsigned long long)arg2 content:(id)arg3 success:(CDUnknownBlockType)arg4 failure:(CDUnknownBlockType)arg5;
+ (id)getMidTokenWithAid:(id)arg1 success:(CDUnknownBlockType)arg2 failure:(CDUnknownBlockType)arg3;
+ (id)getXianJinBaoStatusWithAid:(id)arg1 success:(CDUnknownBlockType)arg2 failure:(CDUnknownBlockType)arg3;
+ (id)postBankSecuritesTransactionWithTid:(id)arg1 aid:(id)arg2 action:(id)arg3 bankNo:(id)arg4 balance:(id)arg5 fundPassword:(id)arg6 bankPassword:(id)arg7 success:(CDUnknownBlockType)arg8 error:(CDUnknownBlockType)arg9 failure:(CDUnknownBlockType)arg10;
+ (id)getBankTransferQueryWithTid:(id)arg1 aid:(id)arg2 bankNo:(id)arg3 pos:(id)arg4 success:(CDUnknownBlockType)arg5 error:(CDUnknownBlockType)arg6 failure:(CDUnknownBlockType)arg7;
+ (id)getFundBalanceInfoWithTid:(id)arg1 aid:(id)arg2 success:(CDUnknownBlockType)arg3 error:(CDUnknownBlockType)arg4 failure:(CDUnknownBlockType)arg5;
+ (id)getBankBalanceInfoWithTid:(id)arg1 aid:(id)arg2 bankNo:(id)arg3 bankPassword:(id)arg4 success:(CDUnknownBlockType)arg5 error:(CDUnknownBlockType)arg6 failure:(CDUnknownBlockType)arg7;
+ (id)getBankInfoWithTid:(id)arg1 aid:(id)arg2 success:(CDUnknownBlockType)arg3 error:(CDUnknownBlockType)arg4 failure:(CDUnknownBlockType)arg5;
+ (id)postCallbackOfRemindWithTid:(id)arg1 aid:(id)arg2 key:(id)arg3 callbackType:(id)arg4 success:(CDUnknownBlockType)arg5 failure:(CDUnknownBlockType)arg6;
+ (id)getTradeRemindWithTid:(id)arg1 aid:(id)arg2 key:(id)arg3 success:(CDUnknownBlockType)arg4 failure:(CDUnknownBlockType)arg5;
+ (id)searchTradeStockWithCode:(id)arg1 size:(id)arg2 etype:(id)arg3 stockType:(id)arg4 otype:(id)arg5 success:(CDUnknownBlockType)arg6 failure:(CDUnknownBlockType)arg7;
+ (id)changeSnowxTradeSetting:(id)arg1 value:(id)arg2 success:(CDUnknownBlockType)arg3 error:(CDUnknownBlockType)arg4 failure:(CDUnknownBlockType)arg5;
+ (id)getSnowxTradeSetting:(id)arg1 success:(CDUnknownBlockType)arg2 failure:(CDUnknownBlockType)arg3;
+ (id)getFundIncomeWithAid:(id)arg1 tid:(id)arg2 success:(CDUnknownBlockType)arg3 errorBlock:(CDUnknownBlockType)arg4 failure:(CDUnknownBlockType)arg5;
+ (id)getSnowxPankouWithStockSymbol:(id)arg1 success:(CDUnknownBlockType)arg2 failure:(CDUnknownBlockType)arg3;
+ (id)getBrokerOpenStatusWithTid:(id)arg1 mid:(id)arg2 success:(CDUnknownBlockType)arg3 error:(CDUnknownBlockType)arg4 failure:(CDUnknownBlockType)arg5;
+ (id)getTradeStatementWithAid:(id)arg1 tid:(id)arg2 position:(id)arg3 success:(CDUnknownBlockType)arg4 error:(CDUnknownBlockType)arg5 failure:(CDUnknownBlockType)arg6;
+ (id)getTradeOrderHistoryWithAid:(id)arg1 tid:(id)arg2 position:(id)arg3 success:(CDUnknownBlockType)arg4 error:(CDUnknownBlockType)arg5 failure:(CDUnknownBlockType)arg6;
+ (id)getStockTradeAttributesWithSymbol:(id)arg1 currentTid:(id)arg2 stockType:(id)arg3 orderType:(id)arg4 fixOrderTypeList:(id)arg5 success:(CDUnknownBlockType)arg6 error:(CDUnknownBlockType)arg7 failure:(CDUnknownBlockType)arg8;
+ (id)cancelOrderWithAid:(id)arg1 tid:(id)arg2 oid:(id)arg3 etype:(id)arg4 writeToken:(id)arg5 success:(CDUnknownBlockType)arg6 error:(CDUnknownBlockType)arg7 failure:(CDUnknownBlockType)arg8;
+ (id)getTradeOrderListWithAid:(id)arg1 tid:(id)arg2 position:(id)arg3 success:(CDUnknownBlockType)arg4 error:(CDUnknownBlockType)arg5 failure:(CDUnknownBlockType)arg6;
+ (id)getUndbindBrokerWithAid:(id)arg1 tid:(id)arg2 mid:(id)arg3 success:(CDUnknownBlockType)arg4 error:(CDUnknownBlockType)arg5 failure:(CDUnknownBlockType)arg6;
+ (id)getBindedBrokersSuccess:(CDUnknownBlockType)arg1 error:(CDUnknownBlockType)arg2 failure:(CDUnknownBlockType)arg3;
+ (id)getLoginableBrokersListSuccess:(CDUnknownBlockType)arg1 error:(CDUnknownBlockType)arg2 failure:(CDUnknownBlockType)arg3;
+ (id)getBrokersSuccess:(CDUnknownBlockType)arg1 failure:(CDUnknownBlockType)arg2;
+ (id)setDefaultBroker:(id)arg1 success:(CDUnknownBlockType)arg2 failure:(CDUnknownBlockType)arg3;
+ (id)refreshOAuthInfo:(id)arg1 verifyCode:(id)arg2 hashCode:(id)arg3 password:(id)arg4 PIN:(id)arg5 success:(CDUnknownBlockType)arg6 error:(CDUnknownBlockType)arg7 failure:(CDUnknownBlockType)arg8;
+ (id)lockRewardWithAid:(id)arg1 tid:(id)arg2 rewardOwnerID:(id)arg3 orderID:(id)arg4 success:(CDUnknownBlockType)arg5 failure:(CDUnknownBlockType)arg6;
+ (id)tradeFeeWithTid:(id)arg1 price:(id)arg2 amount:(id)arg3 action:(id)arg4 symbol:(id)arg5 success:(CDUnknownBlockType)arg6 failure:(CDUnknownBlockType)arg7;
+ (id)tradeExpiredQuery:(id)arg1 tid:(id)arg2 success:(CDUnknownBlockType)arg3 failure:(CDUnknownBlockType)arg4;
+ (id)bestRewardWithTid:(id)arg1 commission:(id)arg2 stockSymbol:(id)arg3 stockType:(id)arg4 etype:(id)arg5 stockOrder:(id)arg6 success:(CDUnknownBlockType)arg7 failure:(CDUnknownBlockType)arg8;
+ (id)placeOrderWithAid:(id)arg1 tid:(id)arg2 etype:(id)arg3 writeToken:(id)arg4 order:(id)arg5 orderCondition:(id)arg6 success:(CDUnknownBlockType)arg7 error:(CDUnknownBlockType)arg8 failure:(CDUnknownBlockType)arg9;
+ (id)conditionQueryWithAid:(id)arg1 tid:(id)arg2 action:(id)arg3 scode:(id)arg4 etype:(id)arg5 price:(id)arg6 otype:(id)arg7 exchangeType:(id)arg8 secuAccount:(id)arg9 success:(CDUnknownBlockType)arg10 failure:(CDUnknownBlockType)arg11;
+ (id)saveBindedWithTid:(id)arg1 success:(CDUnknownBlockType)arg2 failure:(CDUnknownBlockType)arg3;
+ (id)bindBrokerWithTid:(id)arg1 authCode:(id)arg2 renew:(_Bool)arg3 success:(CDUnknownBlockType)arg4 failure:(CDUnknownBlockType)arg5;
+ (id)setTradeExpireTimeWithTime:(id)arg1 success:(CDUnknownBlockType)arg2 failure:(CDUnknownBlockType)arg3;
+ (id)getTradeExpireTimeSuccess:(CDUnknownBlockType)arg1 failure:(CDUnknownBlockType)arg2;
+ (id)getPositionListByAid:(id)arg1 tid:(id)arg2 scode:(id)arg3 etype:(id)arg4 stype:(id)arg5 success:(CDUnknownBlockType)arg6 error:(CDUnknownBlockType)arg7 failure:(CDUnknownBlockType)arg8;
+ (id)getFundQueryByAid:(id)arg1 tid:(id)arg2 success:(CDUnknownBlockType)arg3 error:(CDUnknownBlockType)arg4 failure:(CDUnknownBlockType)arg5;
+ (void)syncTradePublicKey;
+ (id)getTradeRSAPublicKeySuccess:(CDUnknownBlockType)arg1 failure:(CDUnknownBlockType)arg2;
+ (id)getAllTradeConfigSuccess:(CDUnknownBlockType)arg1 failure:(CDUnknownBlockType)arg2;
+ (id)getTradeConfigWithTid:(id)arg1 configKey:(id)arg2 success:(CDUnknownBlockType)arg3 failure:(CDUnknownBlockType)arg4;
+ (id)ordersJSONStringWithOrders:(id)arg1;
+ (id)placeBatchOrderWithAid:(id)arg1 tid:(id)arg2 writeToken:(id)arg3 source:(id)arg4 orders:(id)arg5 successs:(CDUnknownBlockType)arg6 error:(CDUnknownBlockType)arg7 failure:(CDUnknownBlockType)arg8;
+ (id)getAdDataWithType:(id)arg1 success:(CDUnknownBlockType)arg2 failure:(CDUnknownBlockType)arg3;
@end

