//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

#import "AVDataDelegate-Protocol.h"
#import "QYAVPlayerDelegate-Protocol.h"
#import "QYVideoPushDelegate-Protocol.h"
#import "QYVideoPushProtocol-Protocol.h"

@class NSArray, NSDictionary, NSString, PlayerDataItem, QYAVPlayerController, UIView;
@protocol QYAVPlayerManagerDataDelegate, QYAVPlayerManagerDelegate, QYVideoPushDelegate;

@interface QYAVPlayerManager : NSObject <QYVideoPushDelegate, QYVideoPushProtocol, QYAVPlayerDelegate, AVDataDelegate>
{
    _Bool _isbroadcastSupportReplay;
    _Bool _isReplayBroadcast;
    _Bool _isEPGClosed;
    _Bool _isearphone;
    id <QYVideoPushDelegate> videoPushDelegate;
    id <QYAVPlayerManagerDelegate> _delegate;
    id <QYAVPlayerManagerDataDelegate> _controller;
    PlayerDataItem *_requestData;
    NSString *_playFromType;
    NSDictionary *_avDataDict;
    long long _broadcastStartTime;
    long long _broadcastEndTime;
    long long _broadcastServerTime;
    QYAVPlayerController *_avPlayer;
}

@property(retain, nonatomic) QYAVPlayerController *avPlayer; // @synthesize avPlayer=_avPlayer;
@property(nonatomic) _Bool isearphone; // @synthesize isearphone=_isearphone;
@property(nonatomic) _Bool isEPGClosed; // @synthesize isEPGClosed=_isEPGClosed;
@property(nonatomic) _Bool isReplayBroadcast; // @synthesize isReplayBroadcast=_isReplayBroadcast;
@property(nonatomic) _Bool isbroadcastSupportReplay; // @synthesize isbroadcastSupportReplay=_isbroadcastSupportReplay;
@property(nonatomic) long long broadcastServerTime; // @synthesize broadcastServerTime=_broadcastServerTime;
@property(nonatomic) long long broadcastEndTime; // @synthesize broadcastEndTime=_broadcastEndTime;
@property(nonatomic) long long broadcastStartTime; // @synthesize broadcastStartTime=_broadcastStartTime;
@property(retain, nonatomic) NSDictionary *avDataDict; // @synthesize avDataDict=_avDataDict;
@property(copy, nonatomic) NSString *playFromType; // @synthesize playFromType=_playFromType;
@property(retain, nonatomic) PlayerDataItem *requestData; // @synthesize requestData=_requestData;
@property(nonatomic) __weak id <QYAVPlayerManagerDataDelegate> controller; // @synthesize controller=_controller;
@property(nonatomic) __weak id <QYAVPlayerManagerDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) __weak id <QYVideoPushDelegate> videoPushDelegate; // @dynamic videoPushDelegate;
- (void).cxx_destruct;
- (void)sendAdPingbackWithAdType:(long long)arg1 actionType:(int)arg2 adsId:(int)arg3 url:(id)arg4 properties:(id)arg5;
- (void)requestForType:(long long)arg1 withData:(id)arg2;
- (id)getSvpArray;
- (id)getSoundtrackDic;
- (id)getAviliableAudioTrack:(int)arg1 onlyDoby:(_Bool *)arg2;
- (_Bool)isCurrentVideoSupportAudioMode;
- (void)playerBeginPlayAndResumeFoldState;
- (void)stopBackgroundAudioFromTimingStopManager;
- (_Bool)isCurrentHDROn;
- (_Bool)isCurrentDolbyVisionHDR;
- (_Bool)isHasDolbyVisionHDR;
- (void)userQiDianDoPayInterfaceFailed:(id)arg1 otherInfo:(id)arg2;
- (void)userQiDianDoPayInterfaceSuccessed:(id)arg1 otherInfo:(id)arg2;
- (void)useConsumeVodCouponInterfaceFailed:(id)arg1 otherInfo:(id)arg2;
- (void)useConsumeVodCouponInterfaceSucceeded:(id)arg1 otherInfo:(id)arg2;
- (void)loadContentBuyDataFailed:(id)arg1 otherInfo:(id)arg2;
- (void)loadContentBuyDataSuccess:(id)arg1 otherInfo:(id)arg2;
@property(readonly, nonatomic) NSArray *hdrBitStreams;
- (void)onPumaContentPlayError:(id)arg1;
- (id)pumaContentInfo;
- (id)getVideoVIPTypeList;
- (void)checkNextVideo;
- (void)preloadPlayDataList:(id)arg1;
- (void)replayVideo;
- (_Bool)shouldReopenPlayer:(id)arg1;
- (void)set3GPlayErrorState:(long long)arg1;
- (long long)get3GPlayErrorState;
- (_Bool)getResLImitFreeFlag;
- (_Bool)getAVLiveDolbyFlag;
- (void)resetKeepAliveForFengting;
- (id)getErrorCodeDic;
- (void)updateNextTvDic;
- (id)getJustLookAtHerStateForVV;
- (id)getMultiPlaySpeedForVV;
- (id)onFinishedVVLogRecordisFan;
- (id)onFinishedVVLogRecordUploadId;
- (void)changePlayerMultiPlaySpeed:(int)arg1;
- (void)changePlayerGyroEnabled:(_Bool)arg1;
- (void)changeOverallViewAngle:(double)arg1 y:(double)arg2 z:(double)arg3 scale:(double)arg4;
- (void)renderEffect:(int)arg1;
- (id)getCurTaId;
- (void)setJustLookAtHerState:(_Bool)arg1 taId:(id)arg2;
- (void)playLogicTryDolbyWillEnd;
- (void)playLogicPreWatchNoticeStart;
- (void)resetPPShowTime;
- (double)getPPShowTime;
- (_Bool)isPlayFromReplayBtn;
- (_Bool)isPushVideoPlay:(id)arg1;
- (void)updateProgressStartAndEnd:(id)arg1;
- (void)updateStartTimeByPlayer:(long long)arg1;
- (void)stopLoading:(id)arg1;
- (void)startLoading:(id)arg1;
- (_Bool)autoPlay:(id)arg1;
- (id)updateNextPlayInfo:(id)arg1;
- (id)getNextTvidForRecord:(id)arg1 order:(long long)arg2;
- (id)getNextVideoInfo:(id)arg1;
- (void)showPlayEndRecommendView:(id)arg1;
- (void)loadPipDataFailed;
- (void)loadPipDataFinish:(id)arg1 needOpen:(_Bool)arg2;
- (void)loadVIPDataFailed:(id)arg1 message:(id)arg2;
- (void)loadDataFailed:(id)arg1;
- (void)changeClarityNoNetwork:(id)arg1;
- (void)retryVplayDataFinish:(id)arg1;
- (void)loadDataFinshForSecond:(id)arg1;
- (void)loadUIDataFinsh:(id)arg1;
- (void)loadDataFinsh:(id)arg1;
- (_Bool)isHDREnabledForMode:(unsigned long long)arg1;
- (long long)shouldPHMediaAutoJumpStart;
- (_Bool)shouldAutoJumpStart;
- (_Bool)getPlayerInstanceDolbyState;
- (void)checkCountDownState;
- (void)OnVideoRenderAreaChanged;
- (_Bool)isShowMessageView;
- (_Bool)isShowAdWebView;
- (void)onPlayStuckWithParam:(long long)arg1;
- (void)hiddenDanmuForAirplay;
- (void)avAdRemovePingback;
- (void)avShowContinue:(id)arg1;
- (void)av:(id)arg1 mrAdClicked:(id)arg2;
- (_Bool)avCloseMRAidAdView:(id)arg1;
- (void)av:(id)arg1 createMRAidAdWithURL:(id)arg2;
- (void)localPlayerNetworkChange:(id)arg1;
- (_Bool)isFullScreenModel;
- (_Bool)airPlaySwitch:(id)arg1;
- (void)printMessageToLogs:(id)arg1 message:(id)arg2;
- (void)printMessageToPlayer:(id)arg1 message:(id)arg2;
- (void)OnSnapShot:(void *)arg1 width:(unsigned int)arg2 height:(unsigned int)arg3 format:(unsigned int)arg4;
- (void)OnSubtitleChanged:(int)arg1;
- (void)onSubtitleStateChange:(id)arg1 codec_id:(int)arg2 is_inside:(_Bool)arg3 is_success:(_Bool)arg4 is_close:(_Bool)arg5;
- (void)onSubtitle:(id)arg1 subtitle_len:(int)arg2;
- (void)onTrialAndListen:(int)arg1 start_time:(long long)arg2 end_time:(long long)arg3 auth_result:(id)arg4;
- (void)onTryAndSee:(int)arg1 start_time:(long long)arg2 end_time:(long long)arg3 auth_result:(id)arg4;
- (void)onDolbyAudioTrackChanged:(id)arg1 to:(id)arg2;
- (void)onDolbyAudioTrackChanging:(id)arg1 to:(id)arg2 duration:(long long)arg3;
- (void)onBitStreamChanged;
- (void)onBitStreamChanging;
- (void)contentPlaying:(id)arg1 isPreAdsFinish:(_Bool)arg2 isSwitchResTypeForDanmu:(_Bool)arg3;
- (void)adsPlaying:(id)arg1 startTime:(int)arg2;
- (void)retryOpenPlayer;
- (_Bool)canPlayer:(id)arg1;
- (void)onDolbyAudioPlayFailed;
- (void)showPlayTimeLimitView:(id)arg1;
- (void)keepAliveWithPlayerError:(id)arg1;
- (void)OnEpisodeMessage:(id)arg1;
- (void)epgCallBackWithType:(id)arg1 info:(id)arg2;
- (void)onPlayerError:(id)arg1;
- (void)onStart;
- (void)sendSkipAdsPingback;
- (void)AdPlayNext:(long long)arg1 model:(id)arg2;
- (void)AdplayEnd:(long long)arg1;
- (void)AdPlayBegin:(long long)arg1 model:(id)arg2;
- (void)recordRealPlayTime:(id)arg1 albumId:(id)arg2 tvId:(id)arg3 realTime:(int)arg4;
- (void)updateAdModel:(id)arg1 modelType:(int)arg2 templateType:(int)arg3;
- (void)showRenderAdsViewWithData:(id)arg1;
- (void)removeNextPlayTipView;
- (void)showPreloadAlbumInfo:(id)arg1;
- (void)handlePlayAlert:(id)arg1;
- (void)playerNetworkChanged:(id)arg1;
- (_Bool)checkCanAdSeekProgress:(id)arg1;
- (_Bool)checkIsHasPopViewByAvPlayer:(id)arg1;
- (long long)getCurrentPushTime:(id)arg1;
- (void)avQuitQimo;
- (void)enableAirPlayBtn:(_Bool)arg1;
- (void)stopActivity:(id)arg1;
- (void)startActivity:(id)arg1;
- (void)playbackFinishedForReplay:(id)arg1;
- (void)playbackFinshed:(id)arg1;
- (_Bool)isShortResType;
- (void)onPlayerStateChangedToPlaying:(id)arg1;
- (void)playerLoadStateChanged:(id)arg1;
- (void)playerStateChanged:(id)arg1;
- (void)playbackTimeChanged:(id)arg1;
- (void)preparedToPlay:(id)arg1;
- (void)playLogicDataReady:(id)arg1;
- (void)OnPumaPlayerCallback:(int)arg1 params:(id)arg2;
- (void)systemPlayerUpdateCurrentClarity:(long long)arg1;
- (_Bool)isSystemPlayer;
- (void)setLiveMessage:(int)arg1 msg_params:(id)arg2;
- (void)deletePumaPlayController;
- (long long)getEPGServerTime;
- (void)switchSubtitle:(int)arg1;
- (int)currentSubtitleLanguage;
- (id)subtitleLanguageArray;
- (void)showNext3GToast;
- (long long)getSeekTimeByTvid:(id)arg1 isLocal:(_Bool)arg2;
- (void)insertPlayHistory;
- (void)pumaRetryLogin;
- (struct CGRect)playAreaFrame;
- (struct CGSize)pumaVideoSize;
- (void)mrAdViewClicked;
- (void)mrAdViewClosed;
- (_Bool)isAirPlayState;
- (void)snapShot;
- (void)setDanmuSwitchL;
- (_Bool)isPumaCoreUsed;
- (void)avSendSkipAdsPingback;
- (_Bool)isPumaUploadLog;
- (_Bool)getSlideFlag;
- (void)updateSlideFlag:(_Bool)arg1;
- (_Bool)isCanContinueToPlay;
- (_Bool)isAdPlayState;
- (void)onPlayCardShow:(unsigned int)arg1 event:(int)arg2;
- (void)sendAdsCreativePingbackWithAdId:(unsigned int)arg1 event:(int)arg2 index:(int)arg3 url:(id)arg4;
- (void)updateAdProgress:(unsigned int)arg1 progress:(unsigned int)arg2;
- (void)sendWebViewLoadPingback:(int)arg1;
- (void)onAdTouched;
- (void)pauseAndRequestAds;
- (void)jumpTitlesTrailer:(_Bool)arg1;
- (void)login;
- (void)jumpTrueviewAd;
- (void)jumpVIPAd;
- (void)jumpAd;
- (void)recordVideoLog:(id)arg1 value:(id)arg2;
- (id)getPlayDefaultResList;
- (id)getPumaLog;
- (void)refreshPlayer;
- (void)reOpenPlayer;
- (void)reOpenPlayerForMode:(unsigned long long)arg1;
- (void)retryPlay;
- (void)retryForVpalyRequest;
- (void)requestPIPDataAndPlay;
- (void)openPlayerByAvItem:(id)arg1;
- (long long)panoType;
- (void)actionPlayer;
- (void)showDolbyTurnOnAnimationC;
- (void)showDolbyTurnOnAnimationB;
- (id)getCurrentPlayAudioTrack;
- (void)setCurrentAudioTrack:(id)arg1;
- (_Bool)setHDRStatus:(_Bool)arg1 forRes:(id)arg2;
- (void)setCurrentRes:(id)arg1;
- (void)setAutoPlay:(_Bool)arg1;
- (void)shadowStickPause;
- (void)pauseAndStopLoad;
- (void)pause;
- (void)stop;
- (void)play;
- (void)setMute:(_Bool)arg1;
- (id)getCurrentBitStream;
- (id)error;
- (_Bool)isAdsCanClick;
- (void)videoWatermarkHidden:(_Bool)arg1;
- (void)adWaterInit;
- (float)getScale;
- (void)seekToRealTime;
- (void)seekToTime:(long long)arg1;
- (void)updateWaterFrameIsFullMode:(_Bool)arg1;
- (void)setAvPlayerFrame:(struct CGRect)arg1;
- (void)setScreenSize:(float)arg1 isFull:(_Bool)arg2;
- (void)resetRequestDataByItem:(id)arg1;
@property(readonly, nonatomic) _Bool isOnstart;
@property(readonly, nonatomic) int loadState;
@property(readonly, nonatomic) int requestState;
@property(readonly, nonatomic) _Bool isLoading;
@property(readonly, nonatomic) _Bool seekFlag;
@property(readonly, nonatomic) long long adType;
@property(readonly, nonatomic) float adLeftTime;
@property(readonly, nonatomic) long long liveRealPlayTime;
@property(readonly, nonatomic) int realPlayTime;
@property(readonly, nonatomic) double playableDuration;
@property(readonly, nonatomic) double duration;
@property(readonly, nonatomic) double currentPlaybackTime;
@property(readonly, nonatomic) float playStartTime;
@property(readonly, nonatomic) float p_end;
@property(readonly, nonatomic) float p_start;
@property(readonly, nonatomic) int from;
@property(readonly, nonatomic) _Bool isFullScreen;
@property(readonly, nonatomic) _Bool isLocalDownloadingFile;
@property(readonly, nonatomic) _Bool isLocalFile;
@property(readonly, nonatomic) NSString *resType;
@property(readonly, nonatomic) NSArray *resInfo;
@property(readonly, nonatomic) _Bool isPlaying;
@property(readonly, nonatomic) _Bool playerIsFront;
- (void)setAdSDKStateIsVertical:(_Bool)arg1;
@property(readonly, nonatomic) UIView *playerView;
- (_Bool)isVideoToolBoxUsed;
- (void)createAVPlayerWithFrame:(struct CGRect)arg1;
- (void)closeAVPlayer;
- (void)dealloc;
- (void)pushVideoToAirplay:(id)arg1;
- (id)getPlayerTvidForTestModleExchangeAirplayFirst;
- (long long)getPushdPlayingTime;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

