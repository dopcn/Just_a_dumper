//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <UIKit/UIView.h>

@class CTCoreTextRun, NSArray, NSAttributedString, NSMutableArray;
@protocol CTCoreTextRunTouchDelegate;

@interface CTCoreTextLabel : UIView
{
    NSMutableArray *runs_;
    CTCoreTextRun *theRunTouchBegin;
    long long lastTouchPhase;
    int _textVerticalAlignment;
    long long _textAlignment;
    long long _lineBreakMode;
    long long _numberOfLines;
    double _maxWidth;
    double _maxHeight;
    double _lineSpacing;
    id <CTCoreTextRunTouchDelegate> _touchDelegate;
    NSAttributedString *_calculatedAttributedString;
    struct __CTFrame *_calculatedTextFrame;
    struct CGSize _calculatedTextSize;
}

@property(nonatomic) struct CGSize calculatedTextSize; // @synthesize calculatedTextSize=_calculatedTextSize;
@property(nonatomic) struct __CTFrame *calculatedTextFrame; // @synthesize calculatedTextFrame=_calculatedTextFrame;
@property(retain, nonatomic) NSAttributedString *calculatedAttributedString; // @synthesize calculatedAttributedString=_calculatedAttributedString;
@property(nonatomic) __weak id <CTCoreTextRunTouchDelegate> touchDelegate; // @synthesize touchDelegate=_touchDelegate;
@property(nonatomic) double lineSpacing; // @synthesize lineSpacing=_lineSpacing;
@property(nonatomic) double maxHeight; // @synthesize maxHeight=_maxHeight;
@property(nonatomic) double maxWidth; // @synthesize maxWidth=_maxWidth;
@property(nonatomic) long long numberOfLines; // @synthesize numberOfLines=_numberOfLines;
@property(nonatomic) long long lineBreakMode; // @synthesize lineBreakMode=_lineBreakMode;
@property(nonatomic) int textVerticalAlignment; // @synthesize textVerticalAlignment=_textVerticalAlignment;
@property(nonatomic) long long textAlignment; // @synthesize textAlignment=_textAlignment;
@property(retain, nonatomic) NSArray *runs; // @synthesize runs=runs_;
- (void).cxx_destruct;
- (void)reArrange;
- (struct CGSize)desiredSize;
- (void)removeAllRun;
- (void)removeRun:(id)arg1;
- (id)addRunWithText:(id)arg1 TextColor:(id)arg2 Font:(id)arg3;
- (void)addRunsFromArray:(id)arg1;
- (void)addRun:(id)arg1;
- (void)touchesMoved:(id)arg1 withEvent:(id)arg2;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (void)touchesCancelled:(id)arg1 withEvent:(id)arg2;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (id)runOfTouches:(id)arg1;
- (id)runOfTouch:(struct CGPoint)arg1;
- (void)drawAttributedStringInContextByRun:(struct CGContext *)arg1 TextFrame:(struct __CTFrame *)arg2;
- (struct __CTLine *)createTuncateLine:(struct __CTLine *)arg1 CurrentLine:(long long)arg2 TotalLine:(long long)arg3;
- (struct CGRect)calculateRunRect:(struct __CTRun *)arg1 Line:(struct __CTLine *)arg2 Origin:(struct CGPoint)arg3;
- (double)verticalOffset;
- (void)drawAttributedStringInContext:(struct CGContext *)arg1 ByTextFrame:(struct __CTFrame *)arg2;
- (void)drawAttributedStringInContext:(struct CGContext *)arg1;
- (unsigned char)paragraphLineBreakMode;
- (unsigned char)paragraphTextAlignment;
- (void)drawRect:(struct CGRect)arg1;
- (void)initData;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)init;
- (void)dealloc;

@end

