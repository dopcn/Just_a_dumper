//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "TIMMessageListener-Protocol.h"
#import "TIMRefreshListener-Protocol.h"
#import "TIMUserStatusListener-Protocol.h"

@class NSString, TIMUserProfile, VSILShowHost;

@interface VSIMCommonManager : NSObject <TIMMessageListener, TIMUserStatusListener, TIMRefreshListener>
{
    _Bool _shouldShowLoginErrorAlert;
    _Bool _isILShowHost;
    _Bool _isCurrentUserHost;
    _Bool _isInBlacklistForAvatar;
    _Bool _isAvatarPassed;
    _Bool _isAvatarSet;
    _Bool _isRefresh;
    _Bool _isLogining;
    NSString *_liveGroupID;
    NSString *_groupID;
    TIMUserProfile *_userProfile;
    NSString *_selfAvatar;
    VSILShowHost *_host;
    CDUnknownBlockType _offlineExitLivingBlock;
    long long _loginStatus;
    long long _showMode;
    unsigned long long _networkType;
    NSString *_defaultAvatarURLString;
    NSString *_encryptedUserID;
}

+ (id)sharedManager;
+ (void)initialize;
@property(copy, nonatomic) NSString *encryptedUserID; // @synthesize encryptedUserID=_encryptedUserID;
@property(copy, nonatomic) NSString *defaultAvatarURLString; // @synthesize defaultAvatarURLString=_defaultAvatarURLString;
@property(nonatomic) _Bool isLogining; // @synthesize isLogining=_isLogining;
@property(nonatomic) _Bool isRefresh; // @synthesize isRefresh=_isRefresh;
@property(nonatomic) _Bool isAvatarSet; // @synthesize isAvatarSet=_isAvatarSet;
@property(nonatomic) _Bool isAvatarPassed; // @synthesize isAvatarPassed=_isAvatarPassed;
@property(nonatomic) _Bool isInBlacklistForAvatar; // @synthesize isInBlacklistForAvatar=_isInBlacklistForAvatar;
@property(nonatomic) unsigned long long networkType; // @synthesize networkType=_networkType;
@property(nonatomic) long long showMode; // @synthesize showMode=_showMode;
@property(nonatomic) long long loginStatus; // @synthesize loginStatus=_loginStatus;
@property(nonatomic) _Bool isCurrentUserHost; // @synthesize isCurrentUserHost=_isCurrentUserHost;
@property(copy, nonatomic) CDUnknownBlockType offlineExitLivingBlock; // @synthesize offlineExitLivingBlock=_offlineExitLivingBlock;
@property(retain, nonatomic) VSILShowHost *host; // @synthesize host=_host;
@property(retain, nonatomic) NSString *selfAvatar; // @synthesize selfAvatar=_selfAvatar;
@property(retain, nonatomic) TIMUserProfile *userProfile; // @synthesize userProfile=_userProfile;
@property(copy, nonatomic) NSString *groupID; // @synthesize groupID=_groupID;
@property(copy, nonatomic) NSString *liveGroupID; // @synthesize liveGroupID=_liveGroupID;
@property(nonatomic) _Bool isILShowHost; // @synthesize isILShowHost=_isILShowHost;
@property(nonatomic) _Bool shouldShowLoginErrorAlert; // @synthesize shouldShowLoginErrorAlert=_shouldShowLoginErrorAlert;
- (void).cxx_destruct;
- (void)onRefresh;
- (void)onHandleNewMessage:(id)arg1;
- (void)onHandleNewQARoomMsg:(id)arg1;
- (void)onNewMessage:(id)arg1;
- (void)showShutupMessageView;
- (void)sendLikeMessage:(id)arg1 forConversation:(id)arg2 success:(CDUnknownBlockType)arg3 failure:(CDUnknownBlockType)arg4;
- (void)sendMessage:(id)arg1 forConversation:(id)arg2 success:(CDUnknownBlockType)arg3 failure:(CDUnknownBlockType)arg4;
- (id)conversationForGroupID:(id)arg1;
- (void)createAVChatRoomWithID:(id)arg1 title:(id)arg2 success:(CDUnknownBlockType)arg3 failure:(CDUnknownBlockType)arg4;
- (void)exitAVChatRoomWithID:(id)arg1 isHost:(_Bool)arg2 success:(CDUnknownBlockType)arg3 failure:(CDUnknownBlockType)arg4;
- (void)enterAVChatRoomWithGroupID:(id)arg1 title:(id)arg2 isHost:(_Bool)arg3 success:(CDUnknownBlockType)arg4 failure:(CDUnknownBlockType)arg5;
- (void)exitLiveRoomWithID:(id)arg1 success:(CDUnknownBlockType)arg2 failure:(CDUnknownBlockType)arg3;
- (void)enterLiveRoomWithGroupID:(id)arg1 success:(CDUnknownBlockType)arg2 failure:(CDUnknownBlockType)arg3;
- (void)exitAnswerRoomWithID:(id)arg1 success:(CDUnknownBlockType)arg2 failure:(CDUnknownBlockType)arg3;
- (void)enterAnswerRoomWithGroupID:(id)arg1 success:(CDUnknownBlockType)arg2 failure:(CDUnknownBlockType)arg3;
- (void)joinGroupWithGroupID:(id)arg1 success:(CDUnknownBlockType)arg2;
- (void)checkGroupID:(id)arg1 success:(CDUnknownBlockType)arg2;
- (void)quitIMGroupWithID:(id)arg1 success:(CDUnknownBlockType)arg2 failure:(CDUnknownBlockType)arg3;
- (void)joinIMGroupWithID:(id)arg1 success:(CDUnknownBlockType)arg2 failure:(CDUnknownBlockType)arg3;
- (void)releaseIMSDKListener;
- (void)setupIMSDKListenerWithMode:(long long)arg1;
- (_Bool)willShowAlert;
- (void)showSessionLogoutAlertView;
- (void)showLogInIMFailureAlertView;
- (void)showLogInIMTimeOutAlertView;
- (void)showForceIMOfflineAlertView;
- (void)showShouldLogInIMAlertViewWithLogInHandler:(CDUnknownBlockType)arg1;
- (void)showJoinGroupFailureAlertViewWithGroupID:(id)arg1;
- (CDUnknownBlockType)logInFailureHandler;
- (void)onUserSigExpired;
- (void)onReConnFailed:(int)arg1 err:(id)arg2;
- (void)onForceOffline;
- (void)handleBadAvatarNotice:(id)arg1;
- (void)logInIMWithUserID:(id)arg1 success:(CDUnknownBlockType)arg2 failure:(CDUnknownBlockType)arg3;
- (long long)imLoginStatus;
- (_Bool)isLogedInIMForID:(id)arg1;
- (void)logOutIMWithSuccess:(CDUnknownBlockType)arg1 failure:(CDUnknownBlockType)arg2;
- (void)logInIMAsUserSuccess:(CDUnknownBlockType)arg1 failure:(CDUnknownBlockType)arg2;
- (void)logInIMAsGuestSuccess:(CDUnknownBlockType)arg1 failure:(CDUnknownBlockType)arg2;
- (void)logInIMWithIdentifier:(id)arg1 success:(CDUnknownBlockType)arg2 failure:(CDUnknownBlockType)arg3;
- (void)prepareLogInIMWithIdentifier:(id)arg1 success:(CDUnknownBlockType)arg2 failure:(CDUnknownBlockType)arg3;
- (CDUnknownBlockType)logInIMSuccessHandlerWithGroupID:(id)arg1 success:(CDUnknownBlockType)arg2;
- (void)logInIMAsUserWithGroupID:(id)arg1 success:(CDUnknownBlockType)arg2 failure:(CDUnknownBlockType)arg3;
- (void)logInIMAsGuestWithGroupID:(id)arg1 success:(CDUnknownBlockType)arg2 failure:(CDUnknownBlockType)arg3;
- (void)logInIMWithGroupID:(id)arg1 success:(CDUnknownBlockType)arg2 failure:(CDUnknownBlockType)arg3;
- (void)logInIMSuccess:(CDUnknownBlockType)arg1 failure:(CDUnknownBlockType)arg2;
- (void)updateUserProfileWithUserInfo:(id)arg1 nickname:(id)arg2 success:(CDUnknownBlockType)arg3 failure:(CDUnknownBlockType)arg4;
- (void)updateUserInfo;
- (id)currentUserId;
- (id)currentUserNickname;
- (_Bool)isLoggedInAsUser;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

