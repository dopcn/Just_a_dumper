//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

#import "QLAirPlayDelegate-Protocol.h"
#import "QLDLNAPlayDelegate-Protocol.h"
#import "QQMediaPlaybackDelegate-Protocol.h"

@class KKMediaPlayInfo, KKMediaRootViewController, KKVideoInfo, NSError, NSMutableArray, NSString, QLDLNADevice, QQMediaPlayerController, StatusReportCtl;
@protocol KKMediaPlayerDelegate, KKMediaPlayerUrlExchange;

@interface KKMediaPlayer : NSObject <QQMediaPlaybackDelegate, QLDLNAPlayDelegate, QLAirPlayDelegate>
{
    long long _drmCacheProxyFailedIndex;
    long long _drmProxyRetryTimes;
    long long _currentClipIndex;
    _Bool _moviePlayerCacheStarted;
    long long _replayCountForPresentError;
    _Bool _palyerDidChange;
    _Bool _disableAirplay;
    _Bool _didOfflineToOnlinePlay;
    int _playRequestSeq;
    QQMediaPlayerController *_moviePlayerController;
    KKMediaPlayInfo *_mediaPlayInfo;
    KKVideoInfo *_videoInfo;
    StatusReportCtl *_reportCtrl;
    NSMutableArray *_videoUrlsArray;
    NSMutableArray *_videoTimeArray;
    NSError *_lastPlayerError;
    int *_lastP2pPlayErrorCode;
    NSString *_lastPlayerErrorURL;
    KKMediaRootViewController *_mainCtrl;
    id <KKMediaPlayerUrlExchange> _urlExchange;
    QLDLNADevice *_dlnaRenderDevice;
    id <KKMediaPlayerDelegate> _delegate;
}

@property(nonatomic) _Bool didOfflineToOnlinePlay; // @synthesize didOfflineToOnlinePlay=_didOfflineToOnlinePlay;
@property(nonatomic) __weak id <KKMediaPlayerDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) QLDLNADevice *dlnaRenderDevice; // @synthesize dlnaRenderDevice=_dlnaRenderDevice;
@property(nonatomic) int playRequestSeq; // @synthesize playRequestSeq=_playRequestSeq;
@property(nonatomic) _Bool disableAirplay; // @synthesize disableAirplay=_disableAirplay;
@property(nonatomic) __weak id <KKMediaPlayerUrlExchange> urlExchange; // @synthesize urlExchange=_urlExchange;
@property(nonatomic) __weak KKMediaRootViewController *mainCtrl; // @synthesize mainCtrl=_mainCtrl;
@property(retain) NSString *lastPlayerErrorURL; // @synthesize lastPlayerErrorURL=_lastPlayerErrorURL;
@property(nonatomic) int *lastP2pPlayErrorCode; // @synthesize lastP2pPlayErrorCode=_lastP2pPlayErrorCode;
@property(retain) NSError *lastPlayerError; // @synthesize lastPlayerError=_lastPlayerError;
@property(readonly, nonatomic) NSMutableArray *videoTimeArray; // @synthesize videoTimeArray=_videoTimeArray;
@property(readonly, nonatomic) NSMutableArray *videoUrlsArray; // @synthesize videoUrlsArray=_videoUrlsArray;
@property(retain) StatusReportCtl *reportCtrl; // @synthesize reportCtrl=_reportCtrl;
@property(retain) KKVideoInfo *videoInfo; // @synthesize videoInfo=_videoInfo;
@property(retain) KKMediaPlayInfo *mediaPlayInfo; // @synthesize mediaPlayInfo=_mediaPlayInfo;
@property(retain) QQMediaPlayerController *moviePlayerController; // @synthesize moviePlayerController=_moviePlayerController;
- (void).cxx_destruct;
- (_Bool)isHls;
- (void)rePlayCurrentVideoUsingPlayerType:(int)arg1;
- (id)getChangeAvplayerToSelfPlayerInfo;
- (void)sendSwitchPlayerEventMsg:(id)arg1 eventid:(int)arg2 currenttime:(CDStruct_1b6d18a9)arg3;
- (void)updateQQPlayerSetting;
- (void)rePlayCurrentOfflineVideoToOnlineWithError:(id)arg1 withFileCacheOrder:(long long)arg2;
- (_Bool)isNeedOfflineToOnlinePlay;
- (void)didAirPlayStopToPlay;
- (void)didAirPlayFailToPlayWithError:(id)arg1;
- (void)didAirPlayReadyToPlay;
- (void)didAirPlayPrepareToPlay;
- (void)didAirPlayStartToPlay;
- (void)didDeviceRenderStatusUpdate:(id)arg1 renderStatus:(int)arg2;
- (void)didDeviceStopToPlay:(id)arg1;
- (void)didDeviceFailToPlay:(id)arg1 error:(id)arg2;
- (void)didDeviceStartToPlay:(id)arg1;
- (void)didDevicePrepareToPlay:(id)arg1;
- (void)setVRManager:(id)arg1;
- (void)cleanDLNAPlayDelegate;
- (id)getCurrentScreenShot;
- (void)reportP2PLog;
- (void)reportP2PLogErrorCode:(id)arg1;
- (_Bool)automaticallyWaitsToMinimizeStallingValue;
- (void)mediaPlayerPresentationSize:(struct CGSize)arg1 withFileCacheOrder:(long long)arg2 isAirPlayActive:(_Bool)arg3;
- (void)mediaPlayerError:(id)arg1 log:(id)arg2;
- (void)mediaPlayerKeyPath:(id)arg1 change:(id)arg2;
- (void)airPlayVideoDidActive:(_Bool)arg1;
- (void)onAVErrorOccurs:(id)arg1;
- (void)sendMediaPlayerLog:(int)arg1 withLogInfo:(id)arg2;
- (void)mediaPlayerCacheStateDidChangeUpdateCanPlayTime:(id)arg1;
- (void)mediaPlayerCacheStateDidChange:(id)arg1 withError:(id)arg2 withFileCacheOrder:(long long)arg3 withCacheState:(long long)arg4 withIsCurrentPlayFile:(_Bool)arg5;
- (void)mediaPlayerDidExitFullscreen:(id)arg1;
- (void)mediaPlayerDidEnterFullscreen:(id)arg1;
- (_Bool)cancelAssetLoading;
- (void)mediaPlayerCheckMediaUrlError:(id)arg1 withError:(id)arg2 withFileCacheOrder:(long long)arg3 withIsCurrentFile:(_Bool)arg4;
- (_Bool)preLoadFailNotCallBack:(_Bool)arg1;
- (_Bool)shouldNeedRequstAgain:(_Bool)arg1 isCurrentFile:(_Bool)arg2;
- (void)playerEndBuffering;
- (void)playerStartBuffering;
- (void)mediaPlayerRequestStateChange:(id)arg1 withError:(id)arg2 withFileCacheOrder:(long long)arg3 withIsCurrentFile:(_Bool)arg4;
- (void)mediaPlayerPlaybackDidFinish:(id)arg1;
- (_Bool)downloadAndPlayShouldCallBackNetError;
- (void)mediaPlayerPlaybackStateDidChange:(id)arg1 withError:(id)arg2 withFileCacheOrder:(long long)arg3 withIsCurrentFile:(_Bool)arg4;
- (void)mediaPlayerLoadStateDidChange:(id)arg1 withError:(id)arg2 withFileCacheOrder:(long long)arg3 withIsCurrentFile:(_Bool)arg4;
- (void)mediaPlayerNaturalSizeAvailable:(id)arg1;
- (id)deviceIPAddress;
- (long long)getQQMediaTypeByVideoDataType:(long long)arg1;
- (int)getPlayerFlag;
- (id)getAndComponentCurSInfoUrl;
- (id)getAndComponentCurHlsUrl;
- (_Bool)checkCachingTimeWithDuration;
- (double)checkCachingTimeThanPlayingTime;
- (_Bool)checkMediaPlayerStateIsPlayed;
- (void)onPlayerMediaState:(long long)arg1 withError:(id)arg2 withFileCacheOrder:(long long)arg3;
- (_Bool)isNetworkAvaliable;
- (void)onHLSProxyReady:(id)arg1 mediaID:(id)arg2 mediaIndex:(long long)arg3;
- (void)onContentProxyReady:(id)arg1 mediaID:(id)arg2 mediaIndex:(long long)arg3;
- (void)onDrmProxyResult:(id)arg1;
- (_Bool)checkDrmContentProxy:(long long)arg1 currentClipFlag:(long long)arg2 delayedTime:(double)arg3;
- (_Bool)checkDrmHlsProxy:(id)arg1;
- (void)prepareForDrmVideoPlay;
- (long long)playbackState;
- (double)playableDuration;
- (double)duration;
- (double)currentPlaybackTime;
- (void)slideToPlay:(double)arg1;
- (_Bool)testIfIpv4:(id)arg1;
- (void)updateVideoUrlsForIpv6;
- (void)moviePlayerStartToCache;
- (void)startToPlayVideo:(id)arg1 withVideoInfo:(id)arg2 withReportCtrl:(id)arg3;
- (void)rePlayCurrentVideo;
- (void)closePlayer;
- (void)updateVideoUrls:(id)arg1;
- (void)resetPlayer;
- (void)dealloc;
- (id)initWithPlayerController:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

