//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "BaseCore.h"

#import "AuthClient-Protocol.h"
#import "ChannelWrapperDelegate-Protocol.h"
#import "IChannelCore-Protocol.h"
#import "IMobileCoreConfigurable-Protocol.h"
#import "ReachabilityClient-Protocol.h"

@class ChannelAnchorInfo, ChannelAudienceInfo, ChannelChatFilterStatistic, ChannelCoreDb, ChannelDetailInfo, ChannelMicCore, ChannelOneChatInfo, ChannelWrapper, FixQueue, LunMaiAuthInfo, MediaCore, NSArray, NSDate, NSDictionary, NSMutableArray, NSMutableDictionary, NSObject, NSSet, NSString, NSTimer, YYChannelUserInfo, YYEarPhoneStatisticHelper, YYThreadSafeMutableDictionary;
@protocol IMediaVideoSDK, IProtoSDKSession, IProtoSDKSvc, OS_dispatch_queue;

@interface ChannelCore : BaseCore <ChannelWrapperDelegate, AuthClient, ReachabilityClient, IChannelCore, IMobileCoreConfigurable>
{
    NSArray *_svcTypes;
    NSString *_appIdConfigURL;
    NSDictionary *_appIdConfig;
    NSDate *_appIdConfigTimeStamp;
    NSTimer *_checkAppIdTimer;
    unsigned long long _loadAppIdConfigFailureCount;
    _Bool _hasReloadAppIdConfig;
    id <IProtoSDKSession> _isess;
    id <IProtoSDKSvc> _isvc;
    id <IMediaVideoSDK> _imedia;
    MediaCore *_mCore;
    ChannelMicCore *_micCore;
    NSObject<OS_dispatch_queue> *_filter_queue;
    NSObject<OS_dispatch_queue> *_respond_queue;
    NSObject<OS_dispatch_queue> *_sensitive_queue;
    double _lastNotifyOnlineStatTimeInterval;
    NSDate *_dateJoinSubChannel;
    ChannelOneChatInfo *_chatInfo;
    NSArray *_futureChannelAppIds;
    unsigned long long _micOpSeq;
    unsigned long long _lastMicOp;
    YYEarPhoneStatisticHelper *_EarPhoneStatisticHelper;
    NSTimer *_receivedNormalMessageTimer;
    ChannelChatFilterStatistic *_chatFilterStatistic;
    _Bool _isConformSystem;
    _Bool _isConformVersion;
    _Bool _isConformUid;
    FixQueue *_channelFixQueue;
    YYChannelUserInfo *_currentChannelUserInfo;
    NSMutableDictionary *_userInfoReqChan;
    ChannelWrapper *_wrapper;
    ChannelCoreDb *_db;
    ChannelDetailInfo *_currentChannelInfo;
    long long _channelState;
    NSArray *_channelAppIds;
    NSArray *_channelInfoList;
    NSMutableDictionary *_onlineCountInfos;
    NSMutableArray *_privateChatCacheList;
    NSArray *_chatCacheList;
    ChannelAudienceInfo *_currentUser;
    NSSet *_currentAdminList;
    YYThreadSafeMutableDictionary *_currentAdminInfoList;
    NSArray *_disableTextUserArray;
    FixQueue *_channelDetailFixQueue;
    NSMutableArray *_freeModeSpeakerArray;
    NSMutableArray *_channelOneChatCache;
    unsigned long long _channelUnreadOneChatNumber;
    NSDate *_whisperWarningDate;
    NSMutableArray *_sendingMessageQueue;
    NSMutableDictionary *_msgDic;
    NSMutableArray *_msgIndex;
    NSString *_specialAppid;
    NSMutableArray *_historyChannelCache;
}

+ (_Bool)resolveInstanceMethod:(SEL)arg1;
@property(retain, nonatomic) NSMutableArray *historyChannelCache; // @synthesize historyChannelCache=_historyChannelCache;
@property(retain, nonatomic) NSString *specialAppid; // @synthesize specialAppid=_specialAppid;
@property(retain, nonatomic) NSMutableArray *msgIndex; // @synthesize msgIndex=_msgIndex;
@property(retain, nonatomic) NSMutableDictionary *msgDic; // @synthesize msgDic=_msgDic;
@property(nonatomic) _Bool isConformUid; // @synthesize isConformUid=_isConformUid;
@property(nonatomic) _Bool isConformVersion; // @synthesize isConformVersion=_isConformVersion;
@property(nonatomic) _Bool isConformSystem; // @synthesize isConformSystem=_isConformSystem;
@property(retain, nonatomic) NSMutableArray *sendingMessageQueue; // @synthesize sendingMessageQueue=_sendingMessageQueue;
@property(retain, nonatomic) NSDate *whisperWarningDate; // @synthesize whisperWarningDate=_whisperWarningDate;
@property(nonatomic) unsigned long long channelUnreadOneChatNumber; // @synthesize channelUnreadOneChatNumber=_channelUnreadOneChatNumber;
@property(retain, nonatomic) NSMutableArray *channelOneChatCache; // @synthesize channelOneChatCache=_channelOneChatCache;
@property(retain, nonatomic) NSMutableArray *freeModeSpeakerArray; // @synthesize freeModeSpeakerArray=_freeModeSpeakerArray;
@property(retain, nonatomic) FixQueue *channelDetailFixQueue; // @synthesize channelDetailFixQueue=_channelDetailFixQueue;
@property(retain, nonatomic) NSArray *disableTextUserArray; // @synthesize disableTextUserArray=_disableTextUserArray;
@property(retain, nonatomic) YYThreadSafeMutableDictionary *currentAdminInfoList; // @synthesize currentAdminInfoList=_currentAdminInfoList;
@property(retain, nonatomic) NSSet *currentAdminList; // @synthesize currentAdminList=_currentAdminList;
@property(retain, nonatomic) ChannelAudienceInfo *currentUser; // @synthesize currentUser=_currentUser;
@property(retain, nonatomic) NSArray *chatCacheList; // @synthesize chatCacheList=_chatCacheList;
@property(retain, nonatomic) NSMutableArray *privateChatCacheList; // @synthesize privateChatCacheList=_privateChatCacheList;
@property(retain, nonatomic) NSMutableDictionary *onlineCountInfos; // @synthesize onlineCountInfos=_onlineCountInfos;
@property(retain, nonatomic) NSArray *channelInfoList; // @synthesize channelInfoList=_channelInfoList;
@property(retain, nonatomic) NSArray *channelAppIds; // @synthesize channelAppIds=_channelAppIds;
@property(nonatomic) long long channelState; // @synthesize channelState=_channelState;
@property(retain, nonatomic) ChannelDetailInfo *currentChannelInfo; // @synthesize currentChannelInfo=_currentChannelInfo;
@property(readonly, nonatomic) ChannelCoreDb *db; // @synthesize db=_db;
@property(readonly, nonatomic) ChannelWrapper *wrapper; // @synthesize wrapper=_wrapper;
@property(retain, nonatomic) NSMutableDictionary *userInfoReqChan; // @synthesize userInfoReqChan=_userInfoReqChan;
@property(retain, nonatomic) YYChannelUserInfo *currentChannelUserInfo; // @synthesize currentChannelUserInfo=_currentChannelUserInfo;
@property(retain, nonatomic) FixQueue *channelFixQueue; // @synthesize channelFixQueue=_channelFixQueue;
- (void).cxx_destruct;
- (_Bool)validateAudienceNick:(id)arg1;
- (void)getUserPermission;
- (id)appidForTopsid:(unsigned int)arg1 subSid:(unsigned int)arg2;
- (void)setPreferSyncBufferMin:(unsigned int)arg1 max:(unsigned int)arg2;
- (void)setSDKConfigWithTopId:(unsigned int)arg1 subId:(unsigned int)arg2;
- (void)saveChannelSid:(id)arg1 specialAppid:(id)arg2;
- (void)prepareChannelID;
- (id)getLastChooseCodeRate;
- (void)rememberCodeRate:(id)arg1;
- (_Bool)getAppHardDecodeSwitch;
- (void)changeAppHardDecodeSwitch:(_Bool)arg1;
- (void)requestVideoHardDecode;
- (_Bool)conformsUidEnable:(id)arg1;
- (_Bool)conformAppVersion:(id)arg1;
- (_Bool)conformSystem:(float)arg1;
- (void)initializeHardDecodeWithRefresh:(_Bool)arg1;
- (void)setAppIdConfigURL:(id)arg1;
- (id)configurationList;
- (id)configurableDescription;
- (id)configurableName;
- (id)configurableKey;
- (void)reloadAppIdConfig;
- (id)validAppIdConfigURL;
- (id)_appIdsOfChannel:(id)arg1 subSid:(id)arg2;
- (id)_appIdsOf:(id)arg1 From:(id)arg2;
- (double)_waitToCheckAppIdConfig;
- (void)_checkAppIdConfigTimerFireMethod:(id)arg1;
- (void)_scheduleAppIdConfigCheckTimer:(double)arg1;
- (void)reachabilityDidChange:(long long)arg1;
- (void)onApplicationWillResignActive:(id)arg1;
- (void)onApplicationDidBecomeActive:(id)arg1;
- (void)_checkAppIdConfig;
- (void)handleAppIdConfig:(id)arg1;
- (void)_retryAppIdConfigCheckLater;
- (id)decodeExpiresFrom:(id)arg1;
- (id)createHttpDateFormatter:(id)arg1;
- (void)clearUnreadOneChatMessageNumber;
- (unsigned long long)unreadOneChatMessageNumber;
- (void)_clearOneChatInfo;
- (void)_saveOneChatMessage:(id)arg1 userId:(long long)arg2;
- (void)setCurrentOneChatInfo:(long long)arg1 nickname:(id)arg2;
- (id)currentOneChatInfo;
- (id)cachedOneChatMessage;
- (void)sendOneChatMessage:(id)arg1;
- (void)sendOneChatMessage:(long long)arg1 message:(id)arg2;
- (void)normalChatMsgBroadcastWithNobleChatMsgArray:(id)arg1;
- (void)nobleChatMsgBroadcastWithNobleChatMsgArray:(id)arg1;
- (void)nobleChatRspWithIsSucc:(_Bool)arg1 remainTimes:(unsigned long long)arg2 errorCode:(long long)arg3 errorMsg:(id)arg4;
- (void)nobleChatFromUid:(long long)arg1 fromNickname:(id)arg2 fromNobleLevel:(unsigned int)arg3 inTopId:(unsigned int)arg4 subId:(unsigned int)arg5 chatMsg:(id)arg6 medalUrl:(id)arg7;
- (void)nobleRemainChatTimesRspWithUid:(long long)arg1 remainTimes:(unsigned long long)arg2 dayMaxTimes:(unsigned long long)arg3 remainSource:(unsigned long long)arg4;
- (void)queryNobleRemainChatTimesWithNobleLevel:(long long)arg1;
- (void)updateSpeakerArray;
- (void)updateSpeakerArrayWhenStopSpeakWithUid:(long long)arg1;
- (void)updateSpeakerArrayWhenStartSpeakWithUid:(long long)arg1;
- (id)speakerArrayInFreeMode;
- (void)onAudioStreamStatusUpdate:(id)arg1;
- (_Bool)isMicOpened;
- (void)setMicState:(_Bool)arg1;
- (void)setMicState:(_Bool)arg1 delay:(double)arg2;
- (void)closeMicWhenQuitChannel;
- (void)closeMic;
- (void)openMicWithResultBlock:(CDUnknownBlockType)arg1;
- (int)canSpeakInFreeMode;
- (_Bool)isCurrentChannelFreeMode;
- (id)channelVpInfoList;
- (void)updateChannelUserRoler:(unsigned int)arg1 uid:(long long)arg2 origRoler:(long long)arg3 targetRoler:(long long)arg4;
- (void)updateChannelUserId:(long long)arg1 origRoler:(long long)arg2 targetRoler:(long long)arg3 isPersmission:(_Bool)arg4;
- (long long)getChannelUserRolerWithUid:(long long)arg1;
- (id)getAudienceInfoWithUid:(long long)arg1;
- (void)switchChannelChatCtrlWithTopSid:(unsigned int)arg1 subSid:(unsigned int)arg2 isDisable:(_Bool)arg3;
- (void)switchUserChatCtrlWithUid:(long long)arg1 isDisable:(_Bool)arg2 subSid:(unsigned int)arg3;
- (void)queryChannelDisableUserInfosWithSubSid:(unsigned int)arg1;
- (void)queryChannelChatCtrlInfoWithSubSid:(unsigned int)arg1;
- (void)queryUserChatCtrlInfoWithUid:(long long)arg1 subSid:(unsigned int)arg2;
- (void)onFansCount:(unsigned int)arg1 withAnchor:(long long)arg2;
- (void)requestSearchChannelWithKeyword:(id)arg1 success:(CDUnknownBlockType)arg2 failure:(CDUnknownBlockType)arg3;
- (void)requestChannelLivingStatusWithChannelIDs:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)onUserOnLineListRequested:(id)arg1 topId:(unsigned int)arg2 subId:(unsigned int)arg3 offset:(unsigned long long)arg4 size:(unsigned long long)arg5 isEnd:(_Bool)arg6;
- (void)requestUserOnLineListWithTopId:(unsigned int)arg1 subId:(unsigned int)arg2 from:(unsigned long long)arg3 size:(unsigned long long)arg4 completion:(CDUnknownBlockType)arg5;
- (void)requestUserOnLineListWithTopId:(unsigned int)arg1 subId:(unsigned int)arg2 from:(unsigned long long)arg3 size:(unsigned long long)arg4;
- (void)asynQueryChannelInfoWithTopSid:(unsigned long long)arg1 sid:(unsigned long long)arg2 completion:(CDUnknownBlockType)arg3;
- (id)synQueryChannelInfoWithTopSid:(unsigned long long)arg1 sid:(unsigned long long)arg2;
- (void)notifyChannelAdminListUpdateIfNeeded:(id)arg1;
- (void)notifyChannelUserRolerChanged:(id)arg1;
- (_Bool)_checkIfNotifyWithRolerInfo:(id)arg1;
- (void)clearAllAudienceInfos;
- (void)clearDisableTestUserArray;
- (_Bool)isUserTextForbiden:(long long)arg1;
- (id)disableTextUserList;
- (void)onTextChatHistoryRes:(id)arg1;
- (void)onBulletinUpdate:(id)arg1;
- (void)onBulletinRes:(id)arg1;
- (void)onSessUserInfos:(id)arg1;
- (void)onSessRequestOperResponse:(id)arg1;
- (void)onSessSubChAdminListUpdate:(id)arg1;
- (void)onSessSubChAdminList:(id)arg1;
- (void)onSessOneChatAuth:(id)arg1;
- (void)onSessOneChatText:(id)arg1;
- (void)_updateChanSid:(unsigned int)arg1 online:(unsigned int)arg2;
- (void)_notifyOnlineStat;
- (void)onLineStat:(id)arg1;
- (void)onSendChatResult:(id)arg1;
- (void)_appendChannelMessage:(id)arg1 isHistory:(_Bool)arg2;
- (_Bool)filterMessageTime:(id)arg1;
- (void)onChatText:(id)arg1;
- (void)_parseChannelMessage:(id)arg1 isFromLocal:(_Bool)arg2 isHistory:(_Bool)arg3;
- (void)onSessChannelDisableTextInfo:(id)arg1;
- (void)onUserPermissionUpdated:(id)arg1;
- (void)onGetUserPermission:(id)arg1;
- (void)onSessSetChannelText:(id)arg1;
- (void)onSessDisableVoiceText:(id)arg1;
- (void)onSessUserChatCtrl:(id)arg1;
- (void)onSessChannelRolers:(id)arg1;
- (void)onSessCommonAuthUnicastNotification:(id)arg1;
- (void)onSessChannelMemberUpdate:(id)arg1;
- (void)onSubChannelInfo:(id)arg1;
- (void)onChannelInfo:(id)arg1;
- (void)onNeedKickOffByMultiPort:(id)arg1;
- (void)onKickOffByMultiPort:(id)arg1;
- (void)onKickOffByAdmin:(id)arg1;
- (void)onDragByAdmin:(id)arg1;
- (void)onChannelRequestTimeout:(id)arg1;
- (void)onSubChJoin:(id)arg1;
- (void)onJoin:(id)arg1;
- (void)onApplicationWillTerminated:(id)arg1;
- (void)onCurrentAccountChanged:(long long)arg1;
- (long long)getCurrentAnchorId;
- (void)notifyReciveMessage:(id)arg1;
- (void)receivedNormalMessageNotify:(id)arg1;
- (void)addReceivedNormalMessageTimer;
- (void)stopReceivedNormalMessageTimer;
- (id)enterFromSource;
- (id)tinyVideoData;
- (_Bool)isInSpecialChannel;
- (void)addLocalChannelMessage:(id)arg1;
- (void)sendMessage:(id)arg1 wordNumber:(id)arg2 isDefaultChat:(_Bool)arg3;
- (void)appendChannelHistoryMessage:(id)arg1;
- (void)appendChannelMessage:(id)arg1;
- (void)wrapAppendChannelMessage:(id)arg1 isFromLocal:(_Bool)arg2 isHistory:(_Bool)arg3;
- (void)leaveChannel;
- (void)_joinedChannelNotifyServer;
- (void)performReJoinChannel;
- (void)joinChannel:(unsigned int)arg1 withSid:(unsigned int)arg2 checkOtherClient:(_Bool)arg3 kickToken:(id)arg4 appKey:(id)arg5 byAppToken:(id)arg6;
- (void)joinChannel:(unsigned int)arg1 withSid:(unsigned int)arg2 byPassWord:(id)arg3 appJoinType:(int)arg4;
- (void)joinChannel:(unsigned int)arg1 withSid:(unsigned int)arg2 byPassWord:(id)arg3;
- (void)joinChannel:(unsigned int)arg1 withSid:(unsigned int)arg2 byKickToken:(id)arg3;
- (void)joinChannel:(unsigned int)arg1 withSid:(unsigned int)arg2 appJoinType:(int)arg3;
- (void)joinChannel:(unsigned int)arg1 withSid:(unsigned int)arg2;
- (id)dateJoinCurrentChannel;
- (_Bool)isCurrentChannelOrNot:(unsigned int)arg1 sid:(unsigned int)arg2;
- (_Bool)isCurrentTopChannel:(unsigned int)arg1;
- (void)joinChannel:(unsigned int)arg1 withSid:(unsigned int)arg2 withProps:(id)arg3;
- (void)joinChannel:(unsigned int)arg1 withSid:(unsigned int)arg2 withProps:(id)arg3 appJoinType:(int)arg4;
- (void)_recordSubChanJoinDate;
- (void)_loadChatFilterSwitchConfig;
- (void)_initSubChannelData;
- (void)_clearChannelState;
- (_Bool)_isCurrentTopChannel:(unsigned int)arg1;
- (_Bool)_isCurrentChannel:(unsigned int)arg1 sid:(unsigned int)arg2;
- (_Bool)_isCurrentMicQueueMode;
- (void)_requestUInfosWithUids:(id)arg1;
- (void)getTextChatHistoryForBullets;
- (void)getTextChatHistory;
- (void)_requestBulletInContent;
- (void)_requestSubChAdminList;
- (void)_reuquestCurrentUserInfo;
- (void)_requestOnlineCnt;
- (void)_requestSubChannelInfo;
- (void)_requestChannelInfo;
- (void)requestCurrentChannelInfoIfNeed;
- (void)requestChannelInfo:(unsigned int)arg1;
- (void)_queryCurrentChannelInfoInDb;
- (id)_channelInfoInChannelInfoListWithChanInfo:(id)arg1;
- (void)_changeChInfoForSubChannel:(unsigned int)arg1;
- (void)_editThisChInfo;
- (void)_editSubChInfo:(id)arg1;
- (void)_editTopChInfo:(id)arg1;
- (void)_mergeAllChInfo;
- (void)_mergeBulletinForInfo:(id)arg1 referInfo:(id)arg2;
- (void)_mergeSomeDetailChInfoForInfo:(id)arg1 referInfo:(id)arg2;
- (void)_mergeBaseChInfoForInfo:(id)arg1 referInfo:(id)arg2;
- (void)_editThisChInfoWithInfo:(id)arg1;
- (void)_configOtherNtfy;
- (void)_configSessoinNtfy;
- (void)_configAppId;
- (void)_configSvc;
- (void)onChannelChanged:(id)arg1;
- (_Bool)_checkIsTemporaryChannelV1:(id)arg1;
- (id)historyVisitDetailChannels;
- (void)cleanVisitHistory;
- (id)historyVisitChannels;
- (void)clearChannelChatCacheList;
- (unsigned long long)currentChannelLevel;
- (void)dealloc;
- (id)init;
- (id)forwardingTargetForSelector:(SEL)arg1;

// Remaining properties
@property(readonly, nonatomic) unsigned long long channelType;
@property(readonly, nonatomic) ChannelAnchorInfo *currentAnchor;
@property(readonly, nonatomic) _Bool currentChannelHasLunMaiAuthInfo;
@property(readonly, nonatomic) _Bool currentUserHasCurrentChannelLunMicAuth;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly, nonatomic) _Bool hasLunMaiAuth;
@property(readonly) unsigned long long hash;
@property(readonly, nonatomic) _Bool isEnsureHaveNoAnchor;
@property(readonly, nonatomic) _Bool isLunMicChannel;
@property(readonly, nonatomic) _Bool isMicConrollOrNot;
@property(readonly, nonatomic) _Bool isMicForbiden;
@property(readonly, nonatomic) LunMaiAuthInfo *lunMaiAuthInfo;
@property(readonly, nonatomic) NSArray *micChorusList;
@property(readonly, nonatomic) NSArray *micList;
@property(readonly, nonatomic) NSArray *micListInfo;
@property(readonly) Class superclass;

@end

