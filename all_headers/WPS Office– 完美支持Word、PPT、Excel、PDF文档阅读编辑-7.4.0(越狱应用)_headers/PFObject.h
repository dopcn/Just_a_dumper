//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "PFObjectPrivateSubclass-Protocol.h"

@class NSArray, NSDate, NSMutableArray, NSMutableSet, NSString, PFACL, PFMulticastDelegate, PFObjectEstimatedData, PFObjectState, PFTaskQueue;

@interface PFObject : NSObject <PFObjectPrivateSubclass>
{
    NSObject *lock;
    PFObjectState *_pfinternal_state;
    PFObjectEstimatedData *_estimatedData;
    NSMutableSet *_availableKeys;
    unsigned long long _deletingEventuallyCount;
    NSString *localId;
    PFTaskQueue *_eventuallyTaskQueue;
    PFMulticastDelegate *saveDelegate;
    _Bool dirty;
    NSMutableArray *operationSetQueue;
    PFTaskQueue *taskQueue;
}

+ (id)subclassingController;
+ (id)currentUserController;
+ (id)pinningObjectStore;
+ (id)objectBatchController;
+ (id)objectFileCodingLogic;
+ (id)objectController;
+ (void)unpinAllInBackground:(id)arg1 withName:(id)arg2 block:(CDUnknownBlockType)arg3;
+ (id)unpinAllInBackground:(id)arg1 withName:(id)arg2;
+ (void)unpinAllInBackground:(id)arg1 block:(CDUnknownBlockType)arg2;
+ (id)unpinAllInBackground:(id)arg1;
+ (id)unpinAllObjectsInBackgroundWithName:(id)arg1;
+ (void)unpinAllObjectsInBackgroundWithName:(id)arg1 block:(CDUnknownBlockType)arg2;
+ (void)unpinAllObjectsInBackgroundWithBlock:(CDUnknownBlockType)arg1;
+ (id)unpinAllObjectsInBackground;
+ (id)_pinAllInBackground:(id)arg1 withName:(id)arg2 includeChildren:(_Bool)arg3;
+ (void)pinAllInBackground:(id)arg1 withName:(id)arg2 block:(CDUnknownBlockType)arg3;
+ (id)pinAllInBackground:(id)arg1 withName:(id)arg2;
+ (void)pinAllInBackground:(id)arg1 block:(CDUnknownBlockType)arg2;
+ (id)pinAllInBackground:(id)arg1;
+ (_Bool)resolveInstanceMethod:(SEL)arg1;
+ (void)deleteAllInBackground:(id)arg1 block:(CDUnknownBlockType)arg2;
+ (id)deleteAllInBackground:(id)arg1;
+ (void)saveAllInBackground:(id)arg1 block:(CDUnknownBlockType)arg2;
+ (id)saveAllInBackground:(id)arg1;
+ (void)fetchAllIfNeededInBackground:(id)arg1 block:(CDUnknownBlockType)arg2;
+ (id)fetchAllIfNeededInBackground:(id)arg1;
+ (void)fetchAllInBackground:(id)arg1 block:(CDUnknownBlockType)arg2;
+ (id)fetchAllInBackground:(id)arg1;
+ (void)assertSubclassIsRegistered:(Class)arg1;
+ (id)queryWithPredicate:(id)arg1;
+ (id)query;
+ (void)registerSubclass;
+ (id)_newObjectStateWithParseClassName:(id)arg1 objectId:(id)arg2 isComplete:(_Bool)arg3;
+ (id)objectWithoutDataWithClassName:(id)arg1 localId:(id)arg2;
+ (id)objectWithoutDataWithObjectId:(id)arg1;
+ (id)object;
+ (id)objectWithoutDataWithClassName:(id)arg1 objectId:(id)arg2;
+ (id)objectWithClassName:(id)arg1 dictionary:(id)arg2;
+ (id)objectWithClassName:(id)arg1;
+ (id)objectWithClassName:(id)arg1 objectId:(id)arg2 completeData:(_Bool)arg3;
+ (void)Help_saveAllInBackground:(id)arg1 block:(CDUnknownBlockType)arg2;
+ (id)_migrateObjectInBackgroundFromFile:(id)arg1 toPin:(id)arg2 usingMigrationBlock:(CDUnknownBlockType)arg3;
+ (id)_migrateObjectInBackgroundFromFile:(id)arg1 toPin:(id)arg2;
+ (id)_objectFromDictionary:(id)arg1 defaultClassName:(id)arg2 completeData:(_Bool)arg3 decoder:(id)arg4;
+ (id)_objectFromDictionary:(id)arg1 defaultClassName:(id)arg2 selectedKeys:(id)arg3;
+ (id)_objectFromDictionary:(id)arg1 defaultClassName:(id)arg2 completeData:(_Bool)arg3;
+ (void)_assertValidInstanceClassName:(id)arg1;
+ (id)_enqueueSaveEventuallyChildrenOfObject:(id)arg1 currentUser:(id)arg2;
+ (id)_deepSaveAsyncChildrenOfObject:(id)arg1 withCurrentUser:(id)arg2 sessionToken:(id)arg3;
+ (_Bool)canBeSerializedAsValue:(id)arg1 afterSaving:(id)arg2 error:(id *)arg3;
+ (void)collectDirtyChildren:(id)arg1 children:(id)arg2 files:(id)arg3 currentUser:(id)arg4;
+ (void)collectDirtyChildren:(id)arg1 children:(id)arg2 files:(id)arg3 seen:(id)arg4 seenNew:(id)arg5 currentUser:(id)arg6;
+ (id)_enqueue:(CDUnknownBlockType)arg1 forObjects:(id)arg2;
+ (void)unregisterSubclass:(Class)arg1;
+ (_Bool)unpinAll:(id)arg1 withName:(id)arg2 error:(id *)arg3;
+ (_Bool)unpinAll:(id)arg1 withName:(id)arg2;
+ (_Bool)unpinAll:(id)arg1 error:(id *)arg2;
+ (_Bool)unpinAll:(id)arg1;
+ (_Bool)unpinAllObjectsWithName:(id)arg1 error:(id *)arg2;
+ (_Bool)unpinAllObjectsWithName:(id)arg1;
+ (_Bool)unpinAllObjects:(id *)arg1;
+ (_Bool)unpinAllObjects;
+ (_Bool)pinAll:(id)arg1 withName:(id)arg2 error:(id *)arg3;
+ (_Bool)pinAll:(id)arg1 withName:(id)arg2;
+ (_Bool)pinAll:(id)arg1 error:(id *)arg2;
+ (_Bool)pinAll:(id)arg1;
+ (_Bool)deleteAll:(id)arg1 error:(id *)arg2;
+ (_Bool)deleteAll:(id)arg1;
+ (id)fetchAllIfNeeded:(id)arg1 error:(id *)arg2;
+ (id)fetchAllIfNeeded:(id)arg1;
+ (id)fetchAll:(id)arg1 error:(id *)arg2;
+ (id)fetchAll:(id)arg1;
+ (_Bool)saveAll:(id)arg1 error:(id *)arg2;
+ (_Bool)saveAll:(id)arg1;
+ (void)deleteAllInBackground:(id)arg1 target:(id)arg2 selector:(SEL)arg3;
+ (void)fetchAllIfNeededInBackground:(id)arg1 target:(id)arg2 selector:(SEL)arg3;
+ (void)fetchAllInBackground:(id)arg1 target:(id)arg2 selector:(SEL)arg3;
+ (void)saveAllInBackground:(id)arg1 target:(id)arg2 selector:(SEL)arg3;
@property(retain, nonatomic) PFMulticastDelegate *saveDelegate; // @synthesize saveDelegate;
@property(retain, nonatomic) PFTaskQueue *taskQueue; // @synthesize taskQueue;
@property(retain, nonatomic) NSString *localId; // @synthesize localId;
@property(copy, nonatomic) NSMutableSet *_availableKeys; // @synthesize _availableKeys;
- (void).cxx_destruct;
- (void)unpinInBackgroundWithName:(id)arg1 block:(CDUnknownBlockType)arg2;
- (id)unpinInBackgroundWithName:(id)arg1;
- (void)unpinInBackgroundWithBlock:(CDUnknownBlockType)arg1;
- (id)unpinInBackground;
- (id)_pinInBackgroundWithName:(id)arg1 includeChildren:(_Bool)arg2;
- (id)pinInBackgroundWithName:(id)arg1;
- (void)pinInBackgroundWithName:(id)arg1 block:(CDUnknownBlockType)arg2;
- (void)pinInBackgroundWithBlock:(CDUnknownBlockType)arg1;
- (id)pinInBackground;
- (void)forwardInvocation:(id)arg1;
- (id)_flatDescription;
- (id)_recursiveDescription;
@property(readonly, copy) NSString *description;
@property(readonly, copy, nonatomic) NSArray *allKeys;
- (void)setValuesForKeysWithDictionary:(id)arg1;
- (void)setValue:(id)arg1 forUndefinedKey:(id)arg2;
- (id)valueForUndefinedKey:(id)arg1;
- (void)incrementKey:(id)arg1 byAmount:(id)arg2;
- (void)incrementKey:(id)arg1;
- (void)removeObjectsInArray:(id)arg1 forKey:(id)arg2;
- (void)removeObject:(id)arg1 forKey:(id)arg2;
- (void)addUniqueObjectsFromArray:(id)arg1 forKey:(id)arg2;
- (void)addUniqueObject:(id)arg1 forKey:(id)arg2;
- (void)addObjectsFromArray:(id)arg1 forKey:(id)arg2;
- (void)addObject:(id)arg1 forKey:(id)arg2;
- (id)relationForKey:(id)arg1;
- (id)relationforKey:(id)arg1;
- (void)revertObjectForKey:(id)arg1;
- (void)revert;
- (void)removeObjectForKey:(id)arg1;
- (id)objectForKeyedSubscript:(id)arg1;
- (id)objectForKey:(id)arg1;
- (void)setObject:(id)arg1 forKeyedSubscript:(id)arg2;
- (void)setObject:(id)arg1 forKey:(id)arg2;
- (id)fetchFromLocalDatastoreInBackground;
- (void)fetchFromLocalDatastoreInBackgroundWithBlock:(CDUnknownBlockType)arg1;
- (void)fetchIfNeededInBackgroundWithBlock:(CDUnknownBlockType)arg1;
- (id)fetchIfNeededInBackground;
- (void)fetchInBackgroundWithBlock:(CDUnknownBlockType)arg1;
- (id)fetchInBackground;
- (void)refreshInBackgroundWithBlock:(CDUnknownBlockType)arg1;
- (id)refresh:(id *)arg1;
- (id)refresh;
@property(readonly, nonatomic, getter=isDataAvailable) _Bool dataAvailable;
- (_Bool)isDirtyForKey:(id)arg1;
@property(readonly, nonatomic, getter=isDirty) _Bool dirty;
- (id)deleteEventually;
- (void)saveEventually:(CDUnknownBlockType)arg1;
- (id)saveEventually;
- (void)saveInBackgroundWithBlock:(CDUnknownBlockType)arg1;
- (id)saveInBackground;
- (void)deleteInBackgroundWithBlock:(CDUnknownBlockType)arg1;
- (id)deleteInBackground;
@property(retain, nonatomic) PFACL *ACL;
@property(readonly, nonatomic) NSDate *createdAt;
@property(readonly, nonatomic) NSDate *updatedAt;
@property(readonly, nonatomic) NSString *parseClassName;
- (void)_notifyObjectIdChangedFrom:(id)arg1 toObjectId:(id)arg2;
@property(retain, nonatomic) NSString *objectId;
- (id)_estimatedData;
@property(copy, nonatomic) PFObjectState *_state;
- (void)_objectWillSave;
- (id)_validateSaveEventuallyAsync;
- (id)_validateDeleteAsync;
- (id)_validateFetchAsync;
- (id)initWithObjectState:(id)arg1;
- (id)initWithClassName:(id)arg1;
- (id)init;
- (void)Help_deleteInBackgroundWithBlock:(CDUnknownBlockType)arg1;
- (void)Help_saveInBackgroundWithBlock:(CDUnknownBlockType)arg1;
- (void)Help_saveEventually:(CDUnknownBlockType)arg1;
- (id)_collectFetchedObjects;
- (_Bool)needsDefaultACL;
- (void)setDefaultValues;
- (id)ACLWithoutCopying;
- (void)unregisterSaveListener:(CDUnknownBlockType)arg1;
- (void)registerSaveListener:(CDUnknownBlockType)arg1;
- (id)displayClassName;
- (id)displayObjectId;
- (void)_setObject:(id)arg1 forKey:(id)arg2 onlyIfDifferent:(_Bool)arg3;
- (id)_currentDeleteCommandWithSessionToken:(id)arg1;
- (id)_constructSaveCommandForChanges:(id)arg1 sessionToken:(id)arg2 objectEncoder:(id)arg3;
- (id)deleteAsync:(id)arg1;
- (id)fetchAsync:(id)arg1;
- (id)saveAsync:(id)arg1;
- (void)startSave;
- (id)handleSaveResultAsync:(id)arg1;
- (void)_mergeFromServerWithResult:(id)arg1 decoder:(id)arg2 completeData:(_Bool)arg3;
- (void)_mergeAfterSaveWithResult:(id)arg1 decoder:(id)arg2;
- (void)removeOldKeysAfterFetch:(id)arg1;
- (void)_mergeAfterFetchWithResult:(id)arg1 decoder:(id)arg2 completeData:(_Bool)arg3;
- (id)mergeFromObject:(id)arg1;
- (void)rebuildEstimatedData;
- (_Bool)_hasOutstandingOperations;
- (_Bool)_hasChanges;
- (id)unsavedChanges;
- (_Bool)_containsOperationSet:(id)arg1;
- (void)performOperation:(id)arg1 forKey:(id)arg2;
- (id)_convertToDictionaryForSaving:(id)arg1 withObjectEncoder:(id)arg2;
- (id)_enqueueSaveEventuallyOperationAsync:(id)arg1;
- (id)_enqueueSaveEventuallyWithChildren:(_Bool)arg1;
- (void)mergeFromRESTDictionary:(id)arg1 withDecoder:(id)arg2;
- (id)RESTDictionaryWithObjectEncoder:(id)arg1 operationSetUUIDs:(id *)arg2 state:(id)arg3 operationSetQueue:(id)arg4 deletingEventuallyCount:(unsigned long long)arg5;
- (id)RESTDictionaryWithObjectEncoder:(id)arg1 operationSetUUIDs:(id *)arg2;
- (void)resolveLocalId;
- (id)getOrCreateLocalId;
- (void)_checkSaveParametersWithCurrentUser:(id)arg1;
- (_Bool)isDataAvailableForKey:(id)arg1;
- (void)_setDeleted:(_Bool)arg1;
- (void)setHasBeenFetched:(_Bool)arg1;
- (_Bool)_areChildrenDirty:(id)arg1;
- (void)_setDirty:(_Bool)arg1;
- (_Bool)isDirty:(_Bool)arg1;
- (id)_saveChildrenInBackgroundWithCurrentUser:(id)arg1 sessionToken:(id)arg2;
- (_Bool)canBeSerializedAfterSaving:(id)arg1 withCurrentUser:(id)arg2 error:(id *)arg3;
- (void)waitUntilFinished;
- (id)lock;
- (_Bool)unpinWithName:(id)arg1 error:(id *)arg2;
- (_Bool)unpinWithName:(id)arg1;
- (_Bool)unpin:(id *)arg1;
- (_Bool)unpin;
- (_Bool)pinWithName:(id)arg1 error:(id *)arg2;
- (_Bool)pinWithName:(id)arg1;
- (_Bool)pin:(id *)arg1;
- (_Bool)pin;
- (_Bool)delete:(id *)arg1;
- (_Bool)delete;
- (id)fetchFromLocalDatastore:(id *)arg1;
- (id)fetchFromLocalDatastore;
- (id)fetchIfNeeded:(id *)arg1;
- (id)fetchIfNeeded;
- (id)fetch:(id *)arg1;
- (id)fetch;
- (_Bool)save:(id *)arg1;
- (_Bool)save;
- (void)deleteInBackgroundWithTarget:(id)arg1 selector:(SEL)arg2;
- (void)fetchIfNeededInBackgroundWithTarget:(id)arg1 selector:(SEL)arg2;
- (void)fetchInBackgroundWithTarget:(id)arg1 selector:(SEL)arg2;
- (void)refreshInBackgroundWithTarget:(id)arg1 selector:(SEL)arg2;
- (void)saveInBackgroundWithTarget:(id)arg1 selector:(SEL)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

