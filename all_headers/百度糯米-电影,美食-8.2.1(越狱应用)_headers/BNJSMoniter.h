//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

@class CADisplayLink, NSArray, NSMutableArray;
@protocol BNJSMoniterDelegate;

@interface BNJSMoniter : NSObject
{
    _Bool _isStart;
    long long _moniterType;
    double _timeInterval;
    NSArray<BNJSMoniterDelegate> *_delegateArray;
    NSArray *_cpuThresHoldArray;
    NSArray *_memeryThresHoldArray;
    double _networkTraffic;
    NSMutableArray *_tokenArray;
    long long _fps;
    long long _count;
    double _lastTime;
    CADisplayLink *_link;
}

+ (long long)getFPS;
+ (double)getAndResetNetworkTraffic;
+ (void)addNetworkTraffic:(double)arg1;
+ (void)initUpdateThreshold:(id)arg1;
+ (void)stopMoniter;
+ (void)startMoniter:(long long)arg1 intervalInSeconds:(double)arg2 delegates:(id)arg3;
@property(retain, nonatomic) CADisplayLink *link; // @synthesize link=_link;
@property(nonatomic) double lastTime; // @synthesize lastTime=_lastTime;
@property(nonatomic) long long count; // @synthesize count=_count;
@property(nonatomic) long long fps; // @synthesize fps=_fps;
@property(retain, nonatomic) NSMutableArray *tokenArray; // @synthesize tokenArray=_tokenArray;
@property(nonatomic) double networkTraffic; // @synthesize networkTraffic=_networkTraffic;
@property(retain, nonatomic) NSArray *memeryThresHoldArray; // @synthesize memeryThresHoldArray=_memeryThresHoldArray;
@property(copy, nonatomic) NSArray *cpuThresHoldArray; // @synthesize cpuThresHoldArray=_cpuThresHoldArray;
@property(copy, nonatomic) NSArray<BNJSMoniterDelegate> *delegateArray; // @synthesize delegateArray=_delegateArray;
@property(nonatomic) _Bool isStart; // @synthesize isStart=_isStart;
@property(nonatomic) double timeInterval; // @synthesize timeInterval=_timeInterval;
@property(nonatomic) long long moniterType; // @synthesize moniterType=_moniterType;
- (void).cxx_destruct;
- (void)tick:(id)arg1;
- (void)unRegisterAOP;
- (void)registerAOP;
- (double)usedMemery;
- (void)startMoniterMemery;
- (float)cpu_usage;
- (void)startMoniterCPU;
- (void)start;

@end

