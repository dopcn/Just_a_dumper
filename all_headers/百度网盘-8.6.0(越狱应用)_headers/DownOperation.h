//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "TransOperationBase.h"

#import "CloudP2PTransFileDelegate-Protocol.h"

@class NSMutableArray, NSNumber, NSString, TransLogRecorder;

@interface DownOperation : TransOperationBase <CloudP2PTransFileDelegate>
{
    _Bool _isRestart;
    unsigned long long tag;
    unsigned long long dlinkHttptag;
    unsigned long long cdntag;
    _Bool _isSuportSuspendRestart;
    _Bool _hasLogP2PSpeedTime;
    long long currentRetryCounts;
    long long _sendFileSize;
    NSString *_downloadCDNClientIp;
    NSString *_downloadCDNHost;
    NSMutableArray *_downloadCDNServerList;
    NSString *_downloadCDNPath;
    long long _cdnServerIndex;
    NSNumber *_downLoadSpeedLimit;
    TransLogRecorder *_transLogRecorder;
    NSNumber *_backupSpeedLimit;
    double _p2pTaskStartTime;
}

@property(nonatomic) _Bool hasLogP2PSpeedTime; // @synthesize hasLogP2PSpeedTime=_hasLogP2PSpeedTime;
@property(nonatomic) double p2pTaskStartTime; // @synthesize p2pTaskStartTime=_p2pTaskStartTime;
@property(retain, nonatomic) NSNumber *backupSpeedLimit; // @synthesize backupSpeedLimit=_backupSpeedLimit;
@property(retain, nonatomic) TransLogRecorder *transLogRecorder; // @synthesize transLogRecorder=_transLogRecorder;
@property(retain, nonatomic) NSNumber *downLoadSpeedLimit; // @synthesize downLoadSpeedLimit=_downLoadSpeedLimit;
@property(nonatomic) long long cdnServerIndex; // @synthesize cdnServerIndex=_cdnServerIndex;
@property(copy, nonatomic) NSString *downloadCDNPath; // @synthesize downloadCDNPath=_downloadCDNPath;
@property(retain, nonatomic) NSMutableArray *downloadCDNServerList; // @synthesize downloadCDNServerList=_downloadCDNServerList;
@property(copy, nonatomic) NSString *downloadCDNHost; // @synthesize downloadCDNHost=_downloadCDNHost;
@property(copy, nonatomic) NSString *downloadCDNClientIp; // @synthesize downloadCDNClientIp=_downloadCDNClientIp;
@property(nonatomic) long long sendFileSize; // @synthesize sendFileSize=_sendFileSize;
@property(nonatomic) _Bool isSuportSuspendRestart; // @synthesize isSuportSuspendRestart=_isSuportSuspendRestart;
@property(nonatomic) unsigned long long tag; // @synthesize tag;
@property(nonatomic) long long currentRetryCounts; // @synthesize currentRetryCounts;
@property(nonatomic) _Bool isRestart; // @synthesize isRestart=_isRestart;
- (void).cxx_destruct;
- (void)handleP2pDownloadFail:(long long)arg1;
- (void)handleP2PProgressCallback:(CDStruct_4346b47f)arg1 p2pID:(id)arg2;
- (void)handleP2PStartEventCallback:(id)arg1;
- (void)handleP2PCreateEventCallback:(id)arg1;
- (void)saveHeicConvertToJpgeStart;
- (void)transOperationFinish;
- (void)removeImageCacheInApp;
- (void)saveImageToLocalSpace;
- (void)downloadCDN;
- (id)calucateDownloadSpeedLimitForAllow:(_Bool)arg1;
- (id)calucateDownloadSpeedLimit;
- (void)allowAccelerateDownloadFile:(_Bool)arg1;
- (void)cancel;
- (void)start;
- (_Bool)isNullFile;
- (void)handleCurrentDownProgress:(CDStruct_33dcf794)arg1;
- (void)downWithServerFullPath:(id)arg1 localFullPath:(id)arg2 downsize:(long long)arg3;
- (_Bool)consumeInvalidHeadRespone:(id)arg1 responseStatus:(long long)arg2;
- (id)getLocateDownloadPath;
- (id)getDlinkDownloadpath;
- (_Bool)isDlinkDownloadType;
- (id)getDownloadPath;
- (void)deleteTmpFileWithTransFile:(id)arg1;
- (long long)tmpFileSizeWithTransFile:(id)arg1;
- (_Bool)checkAndRetry;
- (void)handleRetryEvent;
- (void)downFail:(long long)arg1;
- (void)handleDlinkExpiredEvent;
- (void)handleFileMetaCompleted:(id)arg1;
- (void)checkFileMetaInfo;
- (void)startDownTransFile;
- (_Bool)checkFileMetaAndRetry;
- (void)handleRetryFileMetaEvent;
- (void)downloadPostConnectionFail:(id)arg1;
- (void)postConnectionFail;
- (void)downSuccess;
- (id)currentDownTransFile;
- (void)finish;
- (void)dealloc;
- (id)init;
- (void)downSuccesslog;
- (void)downFaillog:(long long)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

