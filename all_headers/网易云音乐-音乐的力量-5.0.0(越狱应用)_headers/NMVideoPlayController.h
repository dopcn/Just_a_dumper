//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <UIKit/UIViewController.h>

#import "NMVideoPlayViewDelegate-Protocol.h"

@class CMMotionManager, NELivePlayerController, NMVideoPlayView, NMVideoWlanAlertView, NSError, NSMutableArray, NSString, NSTimer, NSURL;
@protocol NMVideoPlayControllerDelegate, NMVideoProtocol;

@interface NMVideoPlayController : UIViewController <NMVideoPlayViewDelegate>
{
    NSURL *_videoUrl;
    NSURL *_contentUrl;
    NSMutableArray *_resourceArray;
    double _initialPlaybackTime;
    double _lastPlaybackDuration;
    struct CGSize _videoSize;
    NSError *_playError;
    NSTimer *_playerTimer;
    CMMotionManager *_motionManager;
    long long _currentOrientation;
    struct CGRect lastPlayViewFrame;
    unsigned long long _screenState;
    _Bool _orientationObserverAdded;
    _Bool _isPlaying;
    _Bool _isFullScreen;
    _Bool _isManualPause;
    _Bool _isVerticalVideo;
    _Bool _isViewDisappear;
    _Bool _isInBackend;
    _Bool _isAlertViewShown;
    _Bool _shouldResumePlay;
    _Bool _isFirstLoaded;
    _Bool _isManualSeeking;
    _Bool _isSwitchingDefination;
    _Bool _hasCancelledPlayNext;
    double _stopPlayTime;
    double _audioPauseTime;
    double _playingDuration;
    double _startPlayTime;
    double _resourceBeginLoadingTime;
    _Bool _needResumeAudioPlay;
    _Bool _isPlayEnd;
    _Bool _didReceiveHttpHeader;
    _Bool _didReceiveFinishNotification;
    _Bool _isOpenVideoHttps;
    long long _httpCode;
    NMVideoWlanAlertView *_wlanAlertView;
    _Bool _disableNextAutoCounting;
    _Bool _holdNelPlayerWhileDealloc;
    NELivePlayerController *_nelPlayer;
    NMVideoPlayView *_playView;
    id <NMVideoPlayControllerDelegate> _delegate;
    id <NMVideoProtocol> _resource;
    unsigned long long _contextType;
}

@property(nonatomic) _Bool holdNelPlayerWhileDealloc; // @synthesize holdNelPlayerWhileDealloc=_holdNelPlayerWhileDealloc;
@property(nonatomic) _Bool disableNextAutoCounting; // @synthesize disableNextAutoCounting=_disableNextAutoCounting;
@property(nonatomic) unsigned long long contextType; // @synthesize contextType=_contextType;
@property(retain, nonatomic) id <NMVideoProtocol> resource; // @synthesize resource=_resource;
@property(nonatomic) __weak id <NMVideoPlayControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) NMVideoPlayView *playView; // @synthesize playView=_playView;
@property(retain, nonatomic) NELivePlayerController *nelPlayer; // @synthesize nelPlayer=_nelPlayer;
- (void).cxx_destruct;
- (id)downloadBIDes;
- (id)resourceTypeBIDes:(id)arg1;
- (void)addSysDebugBILog:(id)arg1;
- (void)addInteruptBILogIfNeed;
- (void)addFinishPlayBILog:(id)arg1 time:(double)arg2 extraDic:(id)arg3;
- (void)addStartPlayBILog;
- (void)addClickBILogWithType:(id)arg1 extraInfoDic:(id)arg2;
- (void)addClickBILogWithType:(id)arg1;
- (void)downloadStatusUpdated:(id)arg1;
- (void)reloadVideoAndPlayIfNeeded;
- (void)vipStatusUpdated:(id)arg1;
- (void)refreshDataForUMG;
- (void)abTestConfigurationRefreshed:(id)arg1;
- (void)loadABTestConfiguration;
- (void)videoNeedPauseDuePlay;
- (void)videoNeedPauseDueStackChange;
- (void)_outputDeviceChanged:(id)arg1;
- (void)keyboardWillShow:(id)arg1;
- (void)backgroundAdDidShow:(id)arg1;
- (void)_willEnterBackground;
- (void)_appDidBecomeActive;
- (void)alarmRingStateChange:(id)arg1;
- (void)networkStatusChanged;
- (void)videoPlayViewCancelNextTouched:(id)arg1;
- (void)videoPlayViewPlayNextTouched:(id)arg1 sender:(id)arg2;
- (void)videoPlayControlViewVolumeChanged:(id)arg1;
- (void)videoPlayControlView:(id)arg1 swtichToQuality:(id)arg2;
- (void)videoPlayControlViewResignComment:(id)arg1;
- (void)videoPlayControlView:(id)arg1 endSeekingToTime:(double)arg2 triggeredByGesture:(_Bool)arg3;
- (void)videoPlayControlView:(id)arg1 seekToTime:(double)arg2 triggeredByGesture:(_Bool)arg3;
- (void)videoPlayControlViewBeginSeeking:(id)arg1 triggeredByGesture:(_Bool)arg2;
- (void)videoPlayControlView:(id)arg1 switchToFullScreen:(_Bool)arg2 triggeredByGesture:(_Bool)arg3;
- (void)replayButtonClicked;
- (void)videoPlayControlViewReplayButtonClicked:(id)arg1;
- (void)videoPlayControlView:(id)arg1 playPauseClicked:(_Bool)arg2 triggeredByGesture:(_Bool)arg3;
- (void)videoPlayViewMoreOperationTouched:(id)arg1;
- (void)videoPlayViewDownloadTouched:(id)arg1;
- (void)videoPlayViewInformTouched:(id)arg1;
- (void)videoPlayViewFavoriteTouched:(id)arg1;
- (void)videoPlayViewPraiseTouched:(id)arg1;
- (void)videoPlayViewMiddleShareTouched:(id)arg1;
- (void)videoPlayControlViewShareAction:(id)arg1;
- (void)videoPlayControlViewBackButtonClicked:(id)arg1;
- (void)switchFullScreen:(_Bool)arg1 animated:(_Bool)arg2;
- (void)switchFullScreen:(_Bool)arg1;
- (void)orientationChanged:(id)arg1;
- (double)videoCurrentPlaybackTime;
- (double)videoDuration;
- (void)logHttpCode:(long long)arg1 header:(id)arg2;
- (void)handleVideoHttpCode:(long long)arg1 httpHeader:(id)arg2;
- (void)nelplayerDidReceiveHttpRespense:(id)arg1;
- (void)needCheckResumeFlagDueOtherVideoPlay:(id)arg1;
- (void)nelplayerFirstVideoDisplayedNotification:(id)arg1;
- (void)clearResourceUrlInfo;
- (void)nelplayerPlaybackFinishedNotification:(id)arg1;
- (void)checkNelPlayerPlayBackState;
- (void)nelplayerPlaybackStateDidChangeNotification:(id)arg1;
- (void)nelplayerLoadStateDidChangeNotification:(id)arg1;
- (void)nelplayerDidPreparedToPlayNotification:(id)arg1;
- (void)uninstallOrientationChangeObserver;
- (void)installOrientationChangeObserver;
- (void)checkResumeAudioPlay;
- (void)resetResumeAudioPlay;
- (void)_checkResumeFlagAndResumeIfNeeded;
- (void)_setResumeFlagIfNeeded;
- (void)checkPlayableCache;
- (void)refreshPlayingInfo;
- (void)updatePlayerInfo;
- (void)stopPlayerTimer;
- (void)startPlayerTimer;
- (void)addBILog:(id)arg1 trigger:(id)arg2 target:(id)arg3;
- (void)showWlanPlayAlertWithStartBlock:(CDUnknownBlockType)arg1;
- (_Bool)shouldShowWlanPlayAlertView;
- (void)display3GAlertWithStartBlock:(CDUnknownBlockType)arg1;
- (void)alertFailToPlay;
- (void)presetLoadingImage:(id)arg1 contentMode:(long long)arg2;
- (void)pauseAudioPlay;
- (void)videoNeedPause;
- (void)switchToVideoQuality:(id)arg1;
- (void)resetForPlay;
- (void)processPlayEnded;
- (void)processReplay;
- (void)processPausePlay:(_Bool)arg1;
- (_Bool)isCachedEnd;
- (_Bool)isPlayEnded;
- (void)shutdownPlayer;
- (void)stopPlay;
- (void)holdPlay;
- (_Bool)checkPlayVideoIn2G3G:(_Bool)arg1;
- (void)prepareForPlay;
- (_Bool)checkShouldDoPlay;
- (void)doStartPlay;
- (void)playURL:(id)arg1 initialPlaybackTime:(double)arg2;
- (void)loadAndPlayVideo:(id)arg1;
- (id)preFilledPlayUrl:(id)arg1 resolution:(long long)arg2;
- (void)parseAndLoadUrlInfoForVideo:(id)arg1;
- (void)loadAndPlayResource:(id)arg1;
- (void)showWebViewWithLinkUrl:(id)arg1;
- (void)showLimitedAlert:(id)arg1;
- (void)showNeedFeeAlert:(id)arg1 actionMessage:(id)arg2;
- (void)showSVIPAlert:(id)arg1;
- (void)showVIPAlert:(id)arg1;
- (_Bool)validateCopyRightForMV:(id)arg1 urlInfo:(id)arg2;
- (id)getNextResource;
- (_Bool)canPlayNext;
- (void)updateSelectedQuality:(id)arg1;
- (void)setupDefaultSelectedQuality:(unsigned long long)arg1;
- (id)findDefaultQualityToPlay:(unsigned long long)arg1;
- (id)localUrlForMV:(id)arg1;
- (id)mv;
- (_Bool)checkQualitySwitch;
- (void)cancelPlayNext;
- (void)startAutoPlayNext:(_Bool)arg1;
- (void)resetAutoPlayNextCountingDown;
- (void)resetForPlayNext;
- (double)totalPlayDuration;
- (double)startPlayTime;
- (double)currentPlayTime;
- (void)pause;
- (void)play;
@property(readonly, nonatomic) unsigned long long currentScreenState;
@property(readonly, nonatomic) _Bool isFullScreen;
@property(readonly, nonatomic) _Bool isVerticalVideo;
@property(readonly, nonatomic) _Bool isFinished;
@property(readonly, nonatomic) _Bool isPlaying;
- (_Bool)checkIsVerticalVideo;
- (void)didReceiveMemoryWarning;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (void)loadView;
- (void)dealloc;
- (void)clearNextResourceList;
- (void)addNextResourcelist:(id)arg1;
- (id)initWithResource:(id)arg1 nelPlayer:(id)arg2 contextType:(unsigned long long)arg3;
- (id)initWithResourceList:(id)arg1 contextType:(unsigned long long)arg2;
- (id)initWithResource:(id)arg1 contextType:(unsigned long long)arg2;
- (id)initWithResourceList:(id)arg1 nelPlayer:(id)arg2 contextType:(unsigned long long)arg3;
- (id)initWithContextType:(unsigned long long)arg1;
- (void)list_resetToFullscreenMode;
- (void)list_resetToVideoDetailMode;
- (void)list_resetToVideolistMode;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

