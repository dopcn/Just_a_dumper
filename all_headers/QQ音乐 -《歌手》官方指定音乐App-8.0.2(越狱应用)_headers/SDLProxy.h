//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

#import "NSStreamDelegate-Protocol.h"
#import "SDLProtocolListener-Protocol.h"

@class NSMutableDictionary, NSMutableSet, NSSet, NSString, SDLAbstractProtocol, SDLAbstractTransport, SDLDisplayCapabilities, SDLLockScreenStatusManager, SDLStreamingMediaManager, SDLTimer;

@interface SDLProxy : NSObject <SDLProtocolListener, NSStreamDelegate>
{
    unsigned char _version;
    unsigned char _bulkSessionID;
    _Bool _isConnected;
    _Bool _alreadyDestructed;
    SDLLockScreenStatusManager *_lsm;
    SDLAbstractProtocol *_protocol;
    SDLAbstractTransport *_transport;
    SDLTimer *_startSessionTimer;
    NSString *_debugConsoleGroupName;
    NSString *_appId;
    NSMutableSet *_mutableProxyListeners;
    SDLStreamingMediaManager *_streamingMediaManager;
    SDLDisplayCapabilities *_displayCapabilities;
    NSMutableDictionary *_securityManagers;
}

+ (void)disableSiphonDebug;
+ (void)enableSiphonDebug;
@property(retain, nonatomic) NSMutableDictionary *securityManagers; // @synthesize securityManagers=_securityManagers;
@property(retain, nonatomic) SDLDisplayCapabilities *displayCapabilities; // @synthesize displayCapabilities=_displayCapabilities;
@property(retain, nonatomic) SDLStreamingMediaManager *streamingMediaManager; // @synthesize streamingMediaManager=_streamingMediaManager;
@property(retain, nonatomic) NSMutableSet *mutableProxyListeners; // @synthesize mutableProxyListeners=_mutableProxyListeners;
@property(copy, nonatomic) NSString *appId; // @synthesize appId=_appId;
@property(copy) NSString *debugConsoleGroupName; // @synthesize debugConsoleGroupName=_debugConsoleGroupName;
@property(retain) SDLTimer *startSessionTimer; // @synthesize startSessionTimer=_startSessionTimer;
@property(retain) SDLAbstractTransport *transport; // @synthesize transport=_transport;
@property(retain) SDLAbstractProtocol *protocol; // @synthesize protocol=_protocol;
- (void).cxx_destruct;
- (void)stream:(id)arg1 handleEvent:(unsigned long long)arg2;
- (void)putFileStream:(id)arg1 withRequest:(id)arg2;
- (void)syncPDataNetworkRequestCompleteWithData:(id)arg1 response:(id)arg2 error:(id)arg3;
- (void)sendEncodedSyncPData:(id)arg1 toURL:(id)arg2 withTimeout:(id)arg3;
- (void)invokeMethodOnDelegates:(SEL)arg1 withObject:(id)arg2;
- (void)removeDelegate:(id)arg1;
- (void)addDelegate:(id)arg1;
- (void)uploadForBodyDataDictionary:(id)arg1 URLString:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)sdl_uploadData:(id)arg1 toURLString:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (id)validateAndParseSystemRequest:(id)arg1;
- (void)sdl_handleSystemRequestHTTP:(id)arg1;
- (void)handleSystemRequestLockScreenIconURL:(id)arg1;
- (void)handleSystemRequestProprietary:(id)arg1;
- (void)sdl_handleSystemRequestLaunchApp:(id)arg1;
- (void)handleAfterDriverDistraction:(id)arg1;
- (void)handleAfterHMIStatus:(id)arg1;
- (void)handleSystemRequestResponse:(id)arg1;
- (void)handleSystemRequest:(id)arg1;
- (void)handleSyncPData:(id)arg1;
- (void)handleRegisterAppInterfaceResponse:(id)arg1;
- (void)handleRPCUnregistered:(id)arg1;
- (void)handleRpcMessage:(id)arg1;
- (void)handleRPCDictionary:(id)arg1;
- (void)handleProtocolMessage:(id)arg1;
- (void)sendRPCRequest:(id)arg1;
- (void)sendRPC:(id)arg1;
- (void)onProtocolMessageReceived:(id)arg1;
- (void)handleProtocolStartSessionACK:(id)arg1;
- (void)onError:(id)arg1 exception:(id)arg2;
- (void)onProtocolClosed;
- (void)onProtocolOpened;
- (id)securityManagerForMake:(id)arg1;
- (void)addSecurityManagers:(id)arg1 forAppId:(id)arg2;
@property(readonly, copy) NSString *proxyVersion;
@property(readonly, copy) NSSet *proxyListeners;
- (void)sendMobileHMIState;
- (void)notifyProxyClosed;
- (void)dealloc;
- (void)dispose;
- (void)destructObjects;
- (id)initWithTransport:(id)arg1 protocol:(id)arg2 delegate:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

