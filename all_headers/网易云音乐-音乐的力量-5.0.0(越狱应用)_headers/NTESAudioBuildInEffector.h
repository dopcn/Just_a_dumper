//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "NTESAudioEffector.h"

@class NSArray, NSLock, NSMutableArray, NSMutableDictionary;

@interface NTESAudioBuildInEffector : NTESAudioEffector
{
    NSLock *_lock;
    struct AudioEffectProcessor *_audioEffectProcessor;
    unsigned long long _bassBoostStrength;
    unsigned long long _trebleBoostStrength;
    unsigned long long _virtualizerStrength;
    long long _volumeBalanceStrength;
    unsigned long long _equalizerBandCount;
    struct _NTESValueRange _bassBoostValidRange;
    struct _NTESValueRange _trebleBoostValidRange;
    struct _NTESValueRange _virtualizerValidRange;
    struct _NTESValueRange _equalizerGainValidRange;
    long long _equalizer;
    long long _firstEqualizer;
    long long _lastEqualizer;
    long long _reverberator;
    long long _firstReverberator;
    long long _lastReverberator;
    NSMutableArray *_allEqualizers;
    NSMutableArray *_allReverberators;
    NSMutableArray *_equalizerBandFrequency;
    NSMutableDictionary *_equalizersSettings;
    struct _NTESValueRange _volumeBalanceValidRange;
}

+ (id)effector;
+ (id)englishNameForReverberator:(long long)arg1;
+ (id)chineseNameForReverberator:(long long)arg1;
+ (id)englishNameForEqualizer:(long long)arg1;
+ (id)chineseNameForEqualizer:(long long)arg1;
@property(readonly, nonatomic) struct _NTESValueRange volumeBalanceValidRange; // @synthesize volumeBalanceValidRange=_volumeBalanceValidRange;
@property(readonly, retain, nonatomic) NSArray *equalizerBandFrequency; // @synthesize equalizerBandFrequency=_equalizerBandFrequency;
@property(readonly, retain, nonatomic) NSArray *allReverberators; // @synthesize allReverberators=_allReverberators;
@property(readonly, retain, nonatomic) NSArray *allEqualizers; // @synthesize allEqualizers=_allEqualizers;
@property(nonatomic) long long reverberator; // @synthesize reverberator=_reverberator;
@property(nonatomic) long long equalizer; // @synthesize equalizer=_equalizer;
@property(readonly, nonatomic) struct _NTESValueRange equalizerGainValidRange; // @synthesize equalizerGainValidRange=_equalizerGainValidRange;
@property(readonly, nonatomic) struct _NTESValueRange virtualizerValidRange; // @synthesize virtualizerValidRange=_virtualizerValidRange;
@property(readonly, nonatomic) struct _NTESValueRange trebleBoostValidRange; // @synthesize trebleBoostValidRange=_trebleBoostValidRange;
@property(readonly, nonatomic) struct _NTESValueRange bassBoostValidRange; // @synthesize bassBoostValidRange=_bassBoostValidRange;
@property(nonatomic) long long volumeBalanceStrength; // @synthesize volumeBalanceStrength=_volumeBalanceStrength;
@property(nonatomic) unsigned long long virtualizerStrength; // @synthesize virtualizerStrength=_virtualizerStrength;
@property(nonatomic) unsigned long long trebleBoostStrength; // @synthesize trebleBoostStrength=_trebleBoostStrength;
@property(nonatomic) unsigned long long bassBoostStrength; // @synthesize bassBoostStrength=_bassBoostStrength;
@property(readonly, nonatomic) unsigned long long equalizerBandCount; // @synthesize equalizerBandCount=_equalizerBandCount;
- (void).cxx_destruct;
- (void)processWithInput:(const void *)arg1 output:(void *)arg2 sampleNumber:(unsigned int)arg3;
- (_Bool)prepareToProcess;
- (void)resetWhenSeeking;
- (void)resetWhenSwitching;
- (_Bool)setCustomEqualizerSetting:(id)arg1;
- (id)equalizerSettingForForEqualizer:(long long)arg1;
@property(nonatomic) _Bool avoidDistortionEnabled; // @dynamic avoidDistortionEnabled;
@property(nonatomic) _Bool volumeBalanceEnable;
@property(nonatomic) _Bool virtualizerEnabled; // @dynamic virtualizerEnabled;
@property(nonatomic) _Bool trebleBoostEnabled; // @dynamic trebleBoostEnabled;
@property(nonatomic) _Bool bassBoostEnabled; // @dynamic bassBoostEnabled;
@property(nonatomic) _Bool equalizerEnabled; // @dynamic equalizerEnabled;
@property(nonatomic) _Bool reverberatorEnabled; // @dynamic reverberatorEnabled;
- (void)dealloc;
- (id)init;

@end

