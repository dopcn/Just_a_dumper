//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class AVPlayer, AVPlayerItem, AVPlayerItemVideoOutput, AVURLAsset, NSError, NSURL;
@protocol KGCorePlayerListenerProtocol;

@interface KGAVPlayer : NSObject
{
    _Bool _playing;
    _Bool _seeking;
    _Bool _buffering;
    _Bool _hasPixelBuffer;
    int _state;
    int _loadState;
    float _volume;
    int _stateBeforBuffering;
    double _playableTime;
    AVPlayer *_avPlayer;
    double _playableBufferInterval;
    AVPlayerItem *_avPlayerItem;
    AVURLAsset *_avAsset;
    AVPlayerItemVideoOutput *_videoOutput;
    double _readyToPlayTime;
    id _playBackTimeObserver;
    NSURL *_contentURL;
    NSError *_playError;
    id <KGCorePlayerListenerProtocol> _listener;
    CDStruct_1b6d18a9 _nowduration;
}

+ (id)AVAssetloadKeys;
@property(nonatomic) __weak id <KGCorePlayerListenerProtocol> listener; // @synthesize listener=_listener;
@property(nonatomic) CDStruct_1b6d18a9 nowduration; // @synthesize nowduration=_nowduration;
@property(retain, nonatomic) NSError *playError; // @synthesize playError=_playError;
@property(copy, nonatomic) NSURL *contentURL; // @synthesize contentURL=_contentURL;
@property _Bool hasPixelBuffer; // @synthesize hasPixelBuffer=_hasPixelBuffer;
@property _Bool buffering; // @synthesize buffering=_buffering;
@property(nonatomic) int stateBeforBuffering; // @synthesize stateBeforBuffering=_stateBeforBuffering;
@property(retain) id playBackTimeObserver; // @synthesize playBackTimeObserver=_playBackTimeObserver;
@property double readyToPlayTime; // @synthesize readyToPlayTime=_readyToPlayTime;
@property(retain) AVPlayerItemVideoOutput *videoOutput; // @synthesize videoOutput=_videoOutput;
@property(retain) AVURLAsset *avAsset; // @synthesize avAsset=_avAsset;
@property(retain, nonatomic) AVPlayerItem *avPlayerItem; // @synthesize avPlayerItem=_avPlayerItem;
@property(nonatomic) double playableBufferInterval; // @synthesize playableBufferInterval=_playableBufferInterval;
@property(retain, nonatomic) AVPlayer *avPlayer; // @synthesize avPlayer=_avPlayer;
@property(nonatomic) _Bool seeking; // @synthesize seeking=_seeking;
@property(nonatomic) float volume; // @synthesize volume=_volume;
@property _Bool playing; // @synthesize playing=_playing;
@property(nonatomic) double playableTime; // @synthesize playableTime=_playableTime;
@property(nonatomic) int loadState; // @synthesize loadState=_loadState;
@property(nonatomic) int state; // @synthesize state=_state;
- (void).cxx_destruct;
- (void)postStateMessage:(int)arg1;
- (id)getVideoSnapshot;
- (struct __CVBuffer *)getVideoBuffer;
- (double)percentForTime:(double)arg1 duration:(double)arg2;
- (void)resetNowDuration;
@property(readonly, nonatomic) double duration;
@property(readonly, nonatomic) double progress;
- (void)reloadPlayableTime;
- (void)avplayerItemDidPlayToEnd:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)dealloc;
- (void)cleanOutput;
- (void)setupOutput;
- (void)cleanAVPlayerItem;
- (void)setupAVPlayerItemAutoLoadedAsset:(_Bool)arg1;
- (void)cleanAVPlayer;
- (void)setupAVPlayer;
- (void)seekToTime:(double)arg1 completeHandler:(CDUnknownBlockType)arg2;
- (void)seekToTime:(double)arg1;
@property(readonly, nonatomic) _Bool seekEnable;
- (void)stop;
- (void)pause;
- (void)play;
- (_Bool)playIfNeed;
- (void)resumeStateAfterBuffering;
- (void)stopBuffering;
- (void)startBuffering;
- (void)replaceEmpty;
- (void)seekComplete;
- (void)endPrepare;
- (void)startPrepare;
- (void)endInitialize;
- (void)startInitialize;
- (void)reloadVolume;
- (void)replaceVideo;
- (void)replaceVideoWithURL:(id)arg1;
- (void)setupListen:(id)arg1;

@end

