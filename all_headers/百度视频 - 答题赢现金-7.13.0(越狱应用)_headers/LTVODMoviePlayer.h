//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

#import "APSPlayerStatusDelegate-Protocol.h"
#import "LTPlayerCoreDelegate-Protocol.h"

@class FSEvent, FSMachine, FSState, LTDevice, LTGSLBService, LTNetworkServiceHandler, LTPlayerCore, LTServerTimestampManager, LTVODFSMContext, LTVideoFileService, LTVideoMergeService, LeTVAdvertiseService, LeTVCDEModule, LeTVCDEService, LeTVLinkShellService, LeTViResearchModule, LeTViResearchPlaySession, NSMutableArray, NSString, UIView;
@protocol LTVODMoviePlayerDelegate, OS_dispatch_queue;

@interface LTVODMoviePlayer : NSObject <LTPlayerCoreDelegate, APSPlayerStatusDelegate>
{
    _Bool _allowsAirPlayVideo;
    _Bool _useVideoMerge;
    _Bool _useCDEService;
    _Bool _isAdvertiseOn;
    _Bool _shouldPausePlayer;
    _Bool _isAirPlayActive;
    _Bool _fsmActived;
    id <LTVODMoviePlayerDelegate> _delegate;
    UIView *_displayView;
    double _currentPlaybackTime;
    double _duration;
    double _prerollAdvertiseDuration;
    double _prerollAdvertisePlaybackTime;
    long long _scalingMode;
    long long _playCodeType;
    NSMutableArray *_advertiseMetaDatas;
    long long _currentAdvertiseMetaDataIndex;
    double _playStageBeginTime;
    NSString *_playUuid;
    LeTViResearchModule *_iResearchModule;
    LeTViResearchPlaySession *_iResearchPlaySession;
    double _playableDuration;
    long long _playbackState;
    LTServerTimestampManager *_servertimestampManager;
    LTVideoFileService *_videoFileService;
    LeTVAdvertiseService *_advertiseService;
    LeTVLinkShellService *_linkShellService;
    LTGSLBService *_gslbService;
    LeTVCDEService *_cdeService;
    LTVideoMergeService *_videoMergeService;
    LeTVCDEModule *_cdeModule;
    LTDevice *_device;
    LTPlayerCore *_player;
    LTNetworkServiceHandler *_serverTimestampHandler;
    NSObject<OS_dispatch_queue> *_fsmDispatchQueue;
    FSMachine *_vodPlayFSMachine;
    LTVODFSMContext *_vodFSMContext;
    FSState *_fsmIdleState;
    CDUnknownBlockType _fsmIdleStateEnterAction;
    CDUnknownBlockType _fsmIdleStateExitAction;
    FSState *_fsmRequestServerTMAndDispatchUrlState;
    CDUnknownBlockType _fsmRequestServerTMAndDispatchUrlStateEnterAction;
    CDUnknownBlockType _fsmRequestServerTMAndDispatchUrlStateExitAction;
    FSState *_fsmRequestPrerollAdvertiseAndGSLBState;
    CDUnknownBlockType _fsmRequestPrerollAdvertiseAndGSLBStateEnterAction;
    CDUnknownBlockType _fsmRequestPrerollAdvertiseAndGSLBStateExitAction;
    FSState *_fsmWaitPrerollAdvertiseAndRetryRequestGSLBState;
    CDUnknownBlockType _fsmWaitPrerollAdvertiseAndRetryRequestGSLBStateEnterAction;
    CDUnknownBlockType _fsmWaitPrerollAdvertiseAndRetryRequestGSLBStateExitAction;
    FSState *_fsmWaitPrerollAdvertiseState;
    CDUnknownBlockType _fsmWaitPrerollAdvertiseStateEnterAction;
    CDUnknownBlockType _fsmWaitPrerollAdvertiseStateExitAction;
    FSState *_fsmRetryRequestGSLBState;
    CDUnknownBlockType _fsmRetryRequestGSLBStateEnterAction;
    CDUnknownBlockType _fsmRetryRequestGSLBStateExitAction;
    FSState *_fsmWaitGSLBState;
    CDUnknownBlockType _fsmWaitGSLBStateEnterAction;
    CDUnknownBlockType _fsmWaitGSLBStateExitAction;
    FSState *_fsmIgnorePrerollAdvertiseWaitGSLBState;
    CDUnknownBlockType _fsmIgnorePrerollAdvertiseWaitGSLBStateEnterAction;
    CDUnknownBlockType _fsmIgnorePrerollAdvertiseWaitGSLBStateExitAction;
    FSState *_fsmIgnorePrerollAdvertiseRetryGSLBState;
    CDUnknownBlockType _fsmIgnorePrerollAdvertiseRetryGSLBStateEnterAction;
    CDUnknownBlockType _fsmIgnorePrerollAdvertiseRetryGSLBStateExitAction;
    FSState *_fsmRequestPrerollAdvertiseState;
    CDUnknownBlockType _fsmRequestPrerollAdvertiseStateEnterAction;
    CDUnknownBlockType _fsmRequestPrerollAdvertiseStateExitAction;
    FSState *_fsmRequestVideoMergedUrlState;
    CDUnknownBlockType _fsmRequestVideoMergedUrlStateEnterAction;
    CDUnknownBlockType _fsmRequestVideoMergedUrlStateExitAction;
    FSState *_fsmPrerollAdvertiseStartPlayState;
    CDUnknownBlockType _fsmPrerollAdvertiseStartPlayStateEnterAction;
    CDUnknownBlockType _fsmPrerollAdvertiseStartPlayStateExitAction;
    FSState *_fsmPrerollAdvertisePlayState;
    CDUnknownBlockType _fsmPrerollAdvertisePlayStateEnterAction;
    CDUnknownBlockType _fsmPrerollAdvertisePlayStateExitAction;
    FSState *_fsmPrerollAdvertisePlayErrorState;
    CDUnknownBlockType _fsmPrerollAdvertisePlayErrorStateEnterAction;
    CDUnknownBlockType _fsmPrerollAdvertisePlayErrorStateExitAction;
    FSState *_fsmPrerollAdvertiseRunState;
    CDUnknownBlockType _fsmPrerollAdvertiseRunStateEnterAction;
    CDUnknownBlockType _fsmPrerollAdvertiseRunStateExitAction;
    FSState *_fsmPositiveVideoStartPlayState;
    CDUnknownBlockType _fsmPositiveVideoStartPlayStateEnterAction;
    CDUnknownBlockType _fsmPositiveVideoStartPlayStateExitAction;
    FSState *_fsmPositiveVideoStartPlaySkipAdvertiseState;
    CDUnknownBlockType _fsmPositiveVideoStartPlaySkipAdvertiseStateEnterAction;
    CDUnknownBlockType _fsmPositiveVideoStartPlaySkipAdvertiseStateExitAction;
    FSState *_fsmPositiveVideoPlayState;
    CDUnknownBlockType _fsmPositiveVideoPlayStateEnterAction;
    CDUnknownBlockType _fsmPositiveVideoPlayStateExitAction;
    FSState *_fsmPositiveChangeVideoQualityState;
    CDUnknownBlockType _fsmPositiveChangeVideoQualityStateEnterAction;
    CDUnknownBlockType _fsmPositiveChangeVideoQualityStateExitAction;
    FSState *_fsmPositiveVideoPauseNoAdvertiseState;
    CDUnknownBlockType _fsmPositiveVideoPauseNoAdvertiseStateEnterAction;
    CDUnknownBlockType _fsmPositiveVideoPauseNoAdvertiseStateExitAction;
    FSState *_fsmPositiveVideoPauseWithAdvertiseState;
    CDUnknownBlockType _fsmPositiveVideoPauseWithAdvertiseStateEnterAction;
    CDUnknownBlockType _fsmPositiveVideoPauseWithAdvertiseStateExitAction;
    FSState *_fsmPositiveVideoPauseAdvertiseDisplayState;
    CDUnknownBlockType _fsmPositiveVideoPauseAdvertiseDisplayStateEnterAction;
    CDUnknownBlockType _fsmPositiveVideoPauseAdvertiseDisplayStateExitAction;
    FSState *_fsmPositiveVideoPauseAdvertiseRunState;
    CDUnknownBlockType _fsmPositiveVideoPauseAdvertiseRunStateEnterAction;
    CDUnknownBlockType _fsmPositiveVideoPauseAdvertiseRunStateExitAction;
    FSState *_fsmPositiveVideoStopState;
    CDUnknownBlockType _fsmPositiveVideoStopStateEnterAction;
    CDUnknownBlockType _fsmPositiveVideoStopStateExitAction;
    FSState *_fsmPlayErrorState;
    CDUnknownBlockType _fsmPlayErrorStateEnterAction;
    CDUnknownBlockType _fsmPlayErrorStateExitAction;
    FSEvent *_fsmActiveEvent;
    FSEvent *_fsmIdleEvent;
    FSEvent *_fsmDispatchUrlSuccessEvent;
    FSEvent *_fsmDispatchUrlFailureEvent;
    FSEvent *_fsmGSLBSuccessEvent;
    FSEvent *_fsmGSLBFailureEvent;
    FSEvent *_fsmVideoMergeSuccessEvent;
    FSEvent *_fsmVideoMergeFailureEvent;
    FSEvent *_fsmChangeVideoQualityEvent;
    FSEvent *_fsmMergeVideoSuccessEvent;
    FSEvent *_fsmMergeVideoFailureEvent;
    FSEvent *_fsmPrerollAdvertiseSuccessEvent;
    FSEvent *_fsmPrerollAdvertiseFailureEvent;
    FSEvent *_fsmPlayPrerollAdvertiseEvent;
    FSEvent *_fsmPrerollAdvertiseClickEvent;
    FSEvent *_fsmPrerollAdvertiseClickReturnEvent;
    FSEvent *_fsmBeginPrerollAdvertiseEvent;
    FSEvent *_fsmFinishPrerollAdvertiseEvent;
    FSEvent *_fsmPlayPositiveVideoEvent;
    FSEvent *_fsmPausePositiveVideoEvent;
    FSEvent *_fsmPositiveVideoPauseAdvertiseSuccessEvent;
    FSEvent *_fsmPositiveVideoPauseAdvertiseFailureEvent;
    FSEvent *_fsmPositiveVideoPauseAdvertiseClickEvent;
    FSEvent *_fsmPositiveVideoPauseAdvertiseClickReturnEvent;
    FSEvent *_fsmStopPositiveVideoEvent;
    FSEvent *_fsmBeginPositiveVideoEvent;
    FSEvent *_fsmFinishPositiveVideoEvent;
    FSEvent *_fsmChangePositiveVideoQuality;
    FSEvent *_fsmPlayerFirstFrameDisplayEvent;
    FSEvent *_fsmPlayErrorEvent;
}

+ (_Bool)automaticallyNotifiesObserversForKey:(id)arg1;
@property(retain, nonatomic) FSEvent *fsmPlayErrorEvent; // @synthesize fsmPlayErrorEvent=_fsmPlayErrorEvent;
@property(retain, nonatomic) FSEvent *fsmPlayerFirstFrameDisplayEvent; // @synthesize fsmPlayerFirstFrameDisplayEvent=_fsmPlayerFirstFrameDisplayEvent;
@property(retain, nonatomic) FSEvent *fsmChangePositiveVideoQuality; // @synthesize fsmChangePositiveVideoQuality=_fsmChangePositiveVideoQuality;
@property(retain, nonatomic) FSEvent *fsmFinishPositiveVideoEvent; // @synthesize fsmFinishPositiveVideoEvent=_fsmFinishPositiveVideoEvent;
@property(retain, nonatomic) FSEvent *fsmBeginPositiveVideoEvent; // @synthesize fsmBeginPositiveVideoEvent=_fsmBeginPositiveVideoEvent;
@property(retain, nonatomic) FSEvent *fsmStopPositiveVideoEvent; // @synthesize fsmStopPositiveVideoEvent=_fsmStopPositiveVideoEvent;
@property(retain, nonatomic) FSEvent *fsmPositiveVideoPauseAdvertiseClickReturnEvent; // @synthesize fsmPositiveVideoPauseAdvertiseClickReturnEvent=_fsmPositiveVideoPauseAdvertiseClickReturnEvent;
@property(retain, nonatomic) FSEvent *fsmPositiveVideoPauseAdvertiseClickEvent; // @synthesize fsmPositiveVideoPauseAdvertiseClickEvent=_fsmPositiveVideoPauseAdvertiseClickEvent;
@property(retain, nonatomic) FSEvent *fsmPositiveVideoPauseAdvertiseFailureEvent; // @synthesize fsmPositiveVideoPauseAdvertiseFailureEvent=_fsmPositiveVideoPauseAdvertiseFailureEvent;
@property(retain, nonatomic) FSEvent *fsmPositiveVideoPauseAdvertiseSuccessEvent; // @synthesize fsmPositiveVideoPauseAdvertiseSuccessEvent=_fsmPositiveVideoPauseAdvertiseSuccessEvent;
@property(retain, nonatomic) FSEvent *fsmPausePositiveVideoEvent; // @synthesize fsmPausePositiveVideoEvent=_fsmPausePositiveVideoEvent;
@property(retain, nonatomic) FSEvent *fsmPlayPositiveVideoEvent; // @synthesize fsmPlayPositiveVideoEvent=_fsmPlayPositiveVideoEvent;
@property(retain, nonatomic) FSEvent *fsmFinishPrerollAdvertiseEvent; // @synthesize fsmFinishPrerollAdvertiseEvent=_fsmFinishPrerollAdvertiseEvent;
@property(retain, nonatomic) FSEvent *fsmBeginPrerollAdvertiseEvent; // @synthesize fsmBeginPrerollAdvertiseEvent=_fsmBeginPrerollAdvertiseEvent;
@property(retain, nonatomic) FSEvent *fsmPrerollAdvertiseClickReturnEvent; // @synthesize fsmPrerollAdvertiseClickReturnEvent=_fsmPrerollAdvertiseClickReturnEvent;
@property(retain, nonatomic) FSEvent *fsmPrerollAdvertiseClickEvent; // @synthesize fsmPrerollAdvertiseClickEvent=_fsmPrerollAdvertiseClickEvent;
@property(retain, nonatomic) FSEvent *fsmPlayPrerollAdvertiseEvent; // @synthesize fsmPlayPrerollAdvertiseEvent=_fsmPlayPrerollAdvertiseEvent;
@property(retain, nonatomic) FSEvent *fsmPrerollAdvertiseFailureEvent; // @synthesize fsmPrerollAdvertiseFailureEvent=_fsmPrerollAdvertiseFailureEvent;
@property(retain, nonatomic) FSEvent *fsmPrerollAdvertiseSuccessEvent; // @synthesize fsmPrerollAdvertiseSuccessEvent=_fsmPrerollAdvertiseSuccessEvent;
@property(retain, nonatomic) FSEvent *fsmMergeVideoFailureEvent; // @synthesize fsmMergeVideoFailureEvent=_fsmMergeVideoFailureEvent;
@property(retain, nonatomic) FSEvent *fsmMergeVideoSuccessEvent; // @synthesize fsmMergeVideoSuccessEvent=_fsmMergeVideoSuccessEvent;
@property(retain, nonatomic) FSEvent *fsmChangeVideoQualityEvent; // @synthesize fsmChangeVideoQualityEvent=_fsmChangeVideoQualityEvent;
@property(retain, nonatomic) FSEvent *fsmVideoMergeFailureEvent; // @synthesize fsmVideoMergeFailureEvent=_fsmVideoMergeFailureEvent;
@property(retain, nonatomic) FSEvent *fsmVideoMergeSuccessEvent; // @synthesize fsmVideoMergeSuccessEvent=_fsmVideoMergeSuccessEvent;
@property(retain, nonatomic) FSEvent *fsmGSLBFailureEvent; // @synthesize fsmGSLBFailureEvent=_fsmGSLBFailureEvent;
@property(retain, nonatomic) FSEvent *fsmGSLBSuccessEvent; // @synthesize fsmGSLBSuccessEvent=_fsmGSLBSuccessEvent;
@property(retain, nonatomic) FSEvent *fsmDispatchUrlFailureEvent; // @synthesize fsmDispatchUrlFailureEvent=_fsmDispatchUrlFailureEvent;
@property(retain, nonatomic) FSEvent *fsmDispatchUrlSuccessEvent; // @synthesize fsmDispatchUrlSuccessEvent=_fsmDispatchUrlSuccessEvent;
@property(retain, nonatomic) FSEvent *fsmIdleEvent; // @synthesize fsmIdleEvent=_fsmIdleEvent;
@property(retain, nonatomic) FSEvent *fsmActiveEvent; // @synthesize fsmActiveEvent=_fsmActiveEvent;
@property(copy, nonatomic) CDUnknownBlockType fsmPlayErrorStateExitAction; // @synthesize fsmPlayErrorStateExitAction=_fsmPlayErrorStateExitAction;
@property(copy, nonatomic) CDUnknownBlockType fsmPlayErrorStateEnterAction; // @synthesize fsmPlayErrorStateEnterAction=_fsmPlayErrorStateEnterAction;
@property(retain, nonatomic) FSState *fsmPlayErrorState; // @synthesize fsmPlayErrorState=_fsmPlayErrorState;
@property(copy, nonatomic) CDUnknownBlockType fsmPositiveVideoStopStateExitAction; // @synthesize fsmPositiveVideoStopStateExitAction=_fsmPositiveVideoStopStateExitAction;
@property(copy, nonatomic) CDUnknownBlockType fsmPositiveVideoStopStateEnterAction; // @synthesize fsmPositiveVideoStopStateEnterAction=_fsmPositiveVideoStopStateEnterAction;
@property(retain, nonatomic) FSState *fsmPositiveVideoStopState; // @synthesize fsmPositiveVideoStopState=_fsmPositiveVideoStopState;
@property(copy, nonatomic) CDUnknownBlockType fsmPositiveVideoPauseAdvertiseRunStateExitAction; // @synthesize fsmPositiveVideoPauseAdvertiseRunStateExitAction=_fsmPositiveVideoPauseAdvertiseRunStateExitAction;
@property(copy, nonatomic) CDUnknownBlockType fsmPositiveVideoPauseAdvertiseRunStateEnterAction; // @synthesize fsmPositiveVideoPauseAdvertiseRunStateEnterAction=_fsmPositiveVideoPauseAdvertiseRunStateEnterAction;
@property(retain, nonatomic) FSState *fsmPositiveVideoPauseAdvertiseRunState; // @synthesize fsmPositiveVideoPauseAdvertiseRunState=_fsmPositiveVideoPauseAdvertiseRunState;
@property(copy, nonatomic) CDUnknownBlockType fsmPositiveVideoPauseAdvertiseDisplayStateExitAction; // @synthesize fsmPositiveVideoPauseAdvertiseDisplayStateExitAction=_fsmPositiveVideoPauseAdvertiseDisplayStateExitAction;
@property(copy, nonatomic) CDUnknownBlockType fsmPositiveVideoPauseAdvertiseDisplayStateEnterAction; // @synthesize fsmPositiveVideoPauseAdvertiseDisplayStateEnterAction=_fsmPositiveVideoPauseAdvertiseDisplayStateEnterAction;
@property(retain, nonatomic) FSState *fsmPositiveVideoPauseAdvertiseDisplayState; // @synthesize fsmPositiveVideoPauseAdvertiseDisplayState=_fsmPositiveVideoPauseAdvertiseDisplayState;
@property(copy, nonatomic) CDUnknownBlockType fsmPositiveVideoPauseWithAdvertiseStateExitAction; // @synthesize fsmPositiveVideoPauseWithAdvertiseStateExitAction=_fsmPositiveVideoPauseWithAdvertiseStateExitAction;
@property(copy, nonatomic) CDUnknownBlockType fsmPositiveVideoPauseWithAdvertiseStateEnterAction; // @synthesize fsmPositiveVideoPauseWithAdvertiseStateEnterAction=_fsmPositiveVideoPauseWithAdvertiseStateEnterAction;
@property(retain, nonatomic) FSState *fsmPositiveVideoPauseWithAdvertiseState; // @synthesize fsmPositiveVideoPauseWithAdvertiseState=_fsmPositiveVideoPauseWithAdvertiseState;
@property(copy, nonatomic) CDUnknownBlockType fsmPositiveVideoPauseNoAdvertiseStateExitAction; // @synthesize fsmPositiveVideoPauseNoAdvertiseStateExitAction=_fsmPositiveVideoPauseNoAdvertiseStateExitAction;
@property(copy, nonatomic) CDUnknownBlockType fsmPositiveVideoPauseNoAdvertiseStateEnterAction; // @synthesize fsmPositiveVideoPauseNoAdvertiseStateEnterAction=_fsmPositiveVideoPauseNoAdvertiseStateEnterAction;
@property(retain, nonatomic) FSState *fsmPositiveVideoPauseNoAdvertiseState; // @synthesize fsmPositiveVideoPauseNoAdvertiseState=_fsmPositiveVideoPauseNoAdvertiseState;
@property(copy, nonatomic) CDUnknownBlockType fsmPositiveChangeVideoQualityStateExitAction; // @synthesize fsmPositiveChangeVideoQualityStateExitAction=_fsmPositiveChangeVideoQualityStateExitAction;
@property(copy, nonatomic) CDUnknownBlockType fsmPositiveChangeVideoQualityStateEnterAction; // @synthesize fsmPositiveChangeVideoQualityStateEnterAction=_fsmPositiveChangeVideoQualityStateEnterAction;
@property(retain, nonatomic) FSState *fsmPositiveChangeVideoQualityState; // @synthesize fsmPositiveChangeVideoQualityState=_fsmPositiveChangeVideoQualityState;
@property(copy, nonatomic) CDUnknownBlockType fsmPositiveVideoPlayStateExitAction; // @synthesize fsmPositiveVideoPlayStateExitAction=_fsmPositiveVideoPlayStateExitAction;
@property(copy, nonatomic) CDUnknownBlockType fsmPositiveVideoPlayStateEnterAction; // @synthesize fsmPositiveVideoPlayStateEnterAction=_fsmPositiveVideoPlayStateEnterAction;
@property(retain, nonatomic) FSState *fsmPositiveVideoPlayState; // @synthesize fsmPositiveVideoPlayState=_fsmPositiveVideoPlayState;
@property(copy, nonatomic) CDUnknownBlockType fsmPositiveVideoStartPlaySkipAdvertiseStateExitAction; // @synthesize fsmPositiveVideoStartPlaySkipAdvertiseStateExitAction=_fsmPositiveVideoStartPlaySkipAdvertiseStateExitAction;
@property(copy, nonatomic) CDUnknownBlockType fsmPositiveVideoStartPlaySkipAdvertiseStateEnterAction; // @synthesize fsmPositiveVideoStartPlaySkipAdvertiseStateEnterAction=_fsmPositiveVideoStartPlaySkipAdvertiseStateEnterAction;
@property(retain, nonatomic) FSState *fsmPositiveVideoStartPlaySkipAdvertiseState; // @synthesize fsmPositiveVideoStartPlaySkipAdvertiseState=_fsmPositiveVideoStartPlaySkipAdvertiseState;
@property(copy, nonatomic) CDUnknownBlockType fsmPositiveVideoStartPlayStateExitAction; // @synthesize fsmPositiveVideoStartPlayStateExitAction=_fsmPositiveVideoStartPlayStateExitAction;
@property(copy, nonatomic) CDUnknownBlockType fsmPositiveVideoStartPlayStateEnterAction; // @synthesize fsmPositiveVideoStartPlayStateEnterAction=_fsmPositiveVideoStartPlayStateEnterAction;
@property(retain, nonatomic) FSState *fsmPositiveVideoStartPlayState; // @synthesize fsmPositiveVideoStartPlayState=_fsmPositiveVideoStartPlayState;
@property(copy, nonatomic) CDUnknownBlockType fsmPrerollAdvertiseRunStateExitAction; // @synthesize fsmPrerollAdvertiseRunStateExitAction=_fsmPrerollAdvertiseRunStateExitAction;
@property(copy, nonatomic) CDUnknownBlockType fsmPrerollAdvertiseRunStateEnterAction; // @synthesize fsmPrerollAdvertiseRunStateEnterAction=_fsmPrerollAdvertiseRunStateEnterAction;
@property(retain, nonatomic) FSState *fsmPrerollAdvertiseRunState; // @synthesize fsmPrerollAdvertiseRunState=_fsmPrerollAdvertiseRunState;
@property(copy, nonatomic) CDUnknownBlockType fsmPrerollAdvertisePlayErrorStateExitAction; // @synthesize fsmPrerollAdvertisePlayErrorStateExitAction=_fsmPrerollAdvertisePlayErrorStateExitAction;
@property(copy, nonatomic) CDUnknownBlockType fsmPrerollAdvertisePlayErrorStateEnterAction; // @synthesize fsmPrerollAdvertisePlayErrorStateEnterAction=_fsmPrerollAdvertisePlayErrorStateEnterAction;
@property(retain, nonatomic) FSState *fsmPrerollAdvertisePlayErrorState; // @synthesize fsmPrerollAdvertisePlayErrorState=_fsmPrerollAdvertisePlayErrorState;
@property(copy, nonatomic) CDUnknownBlockType fsmPrerollAdvertisePlayStateExitAction; // @synthesize fsmPrerollAdvertisePlayStateExitAction=_fsmPrerollAdvertisePlayStateExitAction;
@property(copy, nonatomic) CDUnknownBlockType fsmPrerollAdvertisePlayStateEnterAction; // @synthesize fsmPrerollAdvertisePlayStateEnterAction=_fsmPrerollAdvertisePlayStateEnterAction;
@property(retain, nonatomic) FSState *fsmPrerollAdvertisePlayState; // @synthesize fsmPrerollAdvertisePlayState=_fsmPrerollAdvertisePlayState;
@property(copy, nonatomic) CDUnknownBlockType fsmPrerollAdvertiseStartPlayStateExitAction; // @synthesize fsmPrerollAdvertiseStartPlayStateExitAction=_fsmPrerollAdvertiseStartPlayStateExitAction;
@property(copy, nonatomic) CDUnknownBlockType fsmPrerollAdvertiseStartPlayStateEnterAction; // @synthesize fsmPrerollAdvertiseStartPlayStateEnterAction=_fsmPrerollAdvertiseStartPlayStateEnterAction;
@property(retain, nonatomic) FSState *fsmPrerollAdvertiseStartPlayState; // @synthesize fsmPrerollAdvertiseStartPlayState=_fsmPrerollAdvertiseStartPlayState;
@property(copy, nonatomic) CDUnknownBlockType fsmRequestVideoMergedUrlStateExitAction; // @synthesize fsmRequestVideoMergedUrlStateExitAction=_fsmRequestVideoMergedUrlStateExitAction;
@property(copy, nonatomic) CDUnknownBlockType fsmRequestVideoMergedUrlStateEnterAction; // @synthesize fsmRequestVideoMergedUrlStateEnterAction=_fsmRequestVideoMergedUrlStateEnterAction;
@property(retain, nonatomic) FSState *fsmRequestVideoMergedUrlState; // @synthesize fsmRequestVideoMergedUrlState=_fsmRequestVideoMergedUrlState;
@property(copy, nonatomic) CDUnknownBlockType fsmRequestPrerollAdvertiseStateExitAction; // @synthesize fsmRequestPrerollAdvertiseStateExitAction=_fsmRequestPrerollAdvertiseStateExitAction;
@property(copy, nonatomic) CDUnknownBlockType fsmRequestPrerollAdvertiseStateEnterAction; // @synthesize fsmRequestPrerollAdvertiseStateEnterAction=_fsmRequestPrerollAdvertiseStateEnterAction;
@property(retain, nonatomic) FSState *fsmRequestPrerollAdvertiseState; // @synthesize fsmRequestPrerollAdvertiseState=_fsmRequestPrerollAdvertiseState;
@property(copy, nonatomic) CDUnknownBlockType fsmIgnorePrerollAdvertiseRetryGSLBStateExitAction; // @synthesize fsmIgnorePrerollAdvertiseRetryGSLBStateExitAction=_fsmIgnorePrerollAdvertiseRetryGSLBStateExitAction;
@property(copy, nonatomic) CDUnknownBlockType fsmIgnorePrerollAdvertiseRetryGSLBStateEnterAction; // @synthesize fsmIgnorePrerollAdvertiseRetryGSLBStateEnterAction=_fsmIgnorePrerollAdvertiseRetryGSLBStateEnterAction;
@property(retain, nonatomic) FSState *fsmIgnorePrerollAdvertiseRetryGSLBState; // @synthesize fsmIgnorePrerollAdvertiseRetryGSLBState=_fsmIgnorePrerollAdvertiseRetryGSLBState;
@property(copy, nonatomic) CDUnknownBlockType fsmIgnorePrerollAdvertiseWaitGSLBStateExitAction; // @synthesize fsmIgnorePrerollAdvertiseWaitGSLBStateExitAction=_fsmIgnorePrerollAdvertiseWaitGSLBStateExitAction;
@property(copy, nonatomic) CDUnknownBlockType fsmIgnorePrerollAdvertiseWaitGSLBStateEnterAction; // @synthesize fsmIgnorePrerollAdvertiseWaitGSLBStateEnterAction=_fsmIgnorePrerollAdvertiseWaitGSLBStateEnterAction;
@property(retain, nonatomic) FSState *fsmIgnorePrerollAdvertiseWaitGSLBState; // @synthesize fsmIgnorePrerollAdvertiseWaitGSLBState=_fsmIgnorePrerollAdvertiseWaitGSLBState;
@property(copy, nonatomic) CDUnknownBlockType fsmWaitGSLBStateExitAction; // @synthesize fsmWaitGSLBStateExitAction=_fsmWaitGSLBStateExitAction;
@property(copy, nonatomic) CDUnknownBlockType fsmWaitGSLBStateEnterAction; // @synthesize fsmWaitGSLBStateEnterAction=_fsmWaitGSLBStateEnterAction;
@property(retain, nonatomic) FSState *fsmWaitGSLBState; // @synthesize fsmWaitGSLBState=_fsmWaitGSLBState;
@property(copy, nonatomic) CDUnknownBlockType fsmRetryRequestGSLBStateExitAction; // @synthesize fsmRetryRequestGSLBStateExitAction=_fsmRetryRequestGSLBStateExitAction;
@property(copy, nonatomic) CDUnknownBlockType fsmRetryRequestGSLBStateEnterAction; // @synthesize fsmRetryRequestGSLBStateEnterAction=_fsmRetryRequestGSLBStateEnterAction;
@property(retain, nonatomic) FSState *fsmRetryRequestGSLBState; // @synthesize fsmRetryRequestGSLBState=_fsmRetryRequestGSLBState;
@property(copy, nonatomic) CDUnknownBlockType fsmWaitPrerollAdvertiseStateExitAction; // @synthesize fsmWaitPrerollAdvertiseStateExitAction=_fsmWaitPrerollAdvertiseStateExitAction;
@property(copy, nonatomic) CDUnknownBlockType fsmWaitPrerollAdvertiseStateEnterAction; // @synthesize fsmWaitPrerollAdvertiseStateEnterAction=_fsmWaitPrerollAdvertiseStateEnterAction;
@property(retain, nonatomic) FSState *fsmWaitPrerollAdvertiseState; // @synthesize fsmWaitPrerollAdvertiseState=_fsmWaitPrerollAdvertiseState;
@property(copy, nonatomic) CDUnknownBlockType fsmWaitPrerollAdvertiseAndRetryRequestGSLBStateExitAction; // @synthesize fsmWaitPrerollAdvertiseAndRetryRequestGSLBStateExitAction=_fsmWaitPrerollAdvertiseAndRetryRequestGSLBStateExitAction;
@property(copy, nonatomic) CDUnknownBlockType fsmWaitPrerollAdvertiseAndRetryRequestGSLBStateEnterAction; // @synthesize fsmWaitPrerollAdvertiseAndRetryRequestGSLBStateEnterAction=_fsmWaitPrerollAdvertiseAndRetryRequestGSLBStateEnterAction;
@property(retain, nonatomic) FSState *fsmWaitPrerollAdvertiseAndRetryRequestGSLBState; // @synthesize fsmWaitPrerollAdvertiseAndRetryRequestGSLBState=_fsmWaitPrerollAdvertiseAndRetryRequestGSLBState;
@property(copy, nonatomic) CDUnknownBlockType fsmRequestPrerollAdvertiseAndGSLBStateExitAction; // @synthesize fsmRequestPrerollAdvertiseAndGSLBStateExitAction=_fsmRequestPrerollAdvertiseAndGSLBStateExitAction;
@property(copy, nonatomic) CDUnknownBlockType fsmRequestPrerollAdvertiseAndGSLBStateEnterAction; // @synthesize fsmRequestPrerollAdvertiseAndGSLBStateEnterAction=_fsmRequestPrerollAdvertiseAndGSLBStateEnterAction;
@property(retain, nonatomic) FSState *fsmRequestPrerollAdvertiseAndGSLBState; // @synthesize fsmRequestPrerollAdvertiseAndGSLBState=_fsmRequestPrerollAdvertiseAndGSLBState;
@property(copy, nonatomic) CDUnknownBlockType fsmRequestServerTMAndDispatchUrlStateExitAction; // @synthesize fsmRequestServerTMAndDispatchUrlStateExitAction=_fsmRequestServerTMAndDispatchUrlStateExitAction;
@property(copy, nonatomic) CDUnknownBlockType fsmRequestServerTMAndDispatchUrlStateEnterAction; // @synthesize fsmRequestServerTMAndDispatchUrlStateEnterAction=_fsmRequestServerTMAndDispatchUrlStateEnterAction;
@property(retain, nonatomic) FSState *fsmRequestServerTMAndDispatchUrlState; // @synthesize fsmRequestServerTMAndDispatchUrlState=_fsmRequestServerTMAndDispatchUrlState;
@property(copy, nonatomic) CDUnknownBlockType fsmIdleStateExitAction; // @synthesize fsmIdleStateExitAction=_fsmIdleStateExitAction;
@property(copy, nonatomic) CDUnknownBlockType fsmIdleStateEnterAction; // @synthesize fsmIdleStateEnterAction=_fsmIdleStateEnterAction;
@property(retain, nonatomic) FSState *fsmIdleState; // @synthesize fsmIdleState=_fsmIdleState;
@property(retain, nonatomic) LTVODFSMContext *vodFSMContext; // @synthesize vodFSMContext=_vodFSMContext;
@property(retain, nonatomic) FSMachine *vodPlayFSMachine; // @synthesize vodPlayFSMachine=_vodPlayFSMachine;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *fsmDispatchQueue; // @synthesize fsmDispatchQueue=_fsmDispatchQueue;
@property _Bool fsmActived; // @synthesize fsmActived=_fsmActived;
@property(retain, nonatomic) LTNetworkServiceHandler *serverTimestampHandler; // @synthesize serverTimestampHandler=_serverTimestampHandler;
@property(retain, nonatomic) LTPlayerCore *player; // @synthesize player=_player;
@property(retain, nonatomic) LTDevice *device; // @synthesize device=_device;
@property(retain, nonatomic) LeTVCDEModule *cdeModule; // @synthesize cdeModule=_cdeModule;
@property(retain, nonatomic) LTVideoMergeService *videoMergeService; // @synthesize videoMergeService=_videoMergeService;
@property(retain, nonatomic) LeTVCDEService *cdeService; // @synthesize cdeService=_cdeService;
@property(retain, nonatomic) LTGSLBService *gslbService; // @synthesize gslbService=_gslbService;
@property(retain, nonatomic) LeTVLinkShellService *linkShellService; // @synthesize linkShellService=_linkShellService;
@property(retain, nonatomic) LeTVAdvertiseService *advertiseService; // @synthesize advertiseService=_advertiseService;
@property(retain, nonatomic) LTVideoFileService *videoFileService; // @synthesize videoFileService=_videoFileService;
@property(retain, nonatomic) LTServerTimestampManager *servertimestampManager; // @synthesize servertimestampManager=_servertimestampManager;
@property(nonatomic) _Bool isAirPlayActive; // @synthesize isAirPlayActive=_isAirPlayActive;
@property(nonatomic) long long playbackState; // @synthesize playbackState=_playbackState;
@property(nonatomic) double playableDuration; // @synthesize playableDuration=_playableDuration;
@property(nonatomic) _Bool shouldPausePlayer; // @synthesize shouldPausePlayer=_shouldPausePlayer;
@property(retain, nonatomic) LeTViResearchPlaySession *iResearchPlaySession; // @synthesize iResearchPlaySession=_iResearchPlaySession;
@property(retain, nonatomic) LeTViResearchModule *iResearchModule; // @synthesize iResearchModule=_iResearchModule;
@property(copy, nonatomic) NSString *playUuid; // @synthesize playUuid=_playUuid;
@property(nonatomic) double playStageBeginTime; // @synthesize playStageBeginTime=_playStageBeginTime;
@property(nonatomic) long long currentAdvertiseMetaDataIndex; // @synthesize currentAdvertiseMetaDataIndex=_currentAdvertiseMetaDataIndex;
@property(retain, nonatomic) NSMutableArray *advertiseMetaDatas; // @synthesize advertiseMetaDatas=_advertiseMetaDatas;
@property(nonatomic) _Bool isAdvertiseOn; // @synthesize isAdvertiseOn=_isAdvertiseOn;
@property(nonatomic) _Bool useCDEService; // @synthesize useCDEService=_useCDEService;
@property(nonatomic) _Bool useVideoMerge; // @synthesize useVideoMerge=_useVideoMerge;
@property(nonatomic) long long playCodeType; // @synthesize playCodeType=_playCodeType;
@property(nonatomic) long long scalingMode; // @synthesize scalingMode=_scalingMode;
@property(nonatomic) double prerollAdvertisePlaybackTime; // @synthesize prerollAdvertisePlaybackTime=_prerollAdvertisePlaybackTime;
@property(nonatomic) double prerollAdvertiseDuration; // @synthesize prerollAdvertiseDuration=_prerollAdvertiseDuration;
@property(nonatomic) double duration; // @synthesize duration=_duration;
@property(nonatomic) double currentPlaybackTime; // @synthesize currentPlaybackTime=_currentPlaybackTime;
@property(readonly, nonatomic) UIView *displayView; // @synthesize displayView=_displayView;
@property(nonatomic) __weak id <LTVODMoviePlayerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (double)adCurrentTime;
- (double)videoCurrentTime;
- (void)postErrorEvent;
- (void)moviePlayer:(id)arg1 itemDidPlayFinishOfIndex:(long long)arg2;
- (void)moviePlayer:(id)arg1 detectedItemDuration:(double)arg2 forItemIndex:(long long)arg3;
- (void)moviePlayer:(id)arg1 playbackError:(long long)arg2;
- (void)moviePlayerDidFinish:(id)arg1;
- (void)moviePlayerDidPreload:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
@property(nonatomic) _Bool allowsAirPlayVideo;
- (void)processMergedMetaData:(double)arg1;
- (void)prerollAdvertiseReturn;
- (void)prerollAdvertiseEnter;
- (void)resumeBuffering;
- (void)pauseBuffering;
- (void)seek:(double)arg1;
- (void)stop;
- (void)pause;
- (void)play;
- (void)cleanUpMoviePlayer;
- (void)setupMoviePlayerWithVideoUrls:(id)arg1 seekDuration:(double)arg2;
- (void)terminateFSM;
- (void)setupStateMachine;
- (void)checkPlayingCorrectAfterAppBecomeActive;
- (void)cleanupAppSchedule;
- (void)setupAppSchedule;
- (void)startPlayWithVideoId:(id)arg1 orAlbumId:(id)arg2 orSubjectId:(id)arg3 withOffset:(double)arg4;
- (id)init;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

