//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

#import "PLPlayContextDelegate-Protocol.h"

@class AVPlayer, AVPlayerItem, NSDictionary, NSRecursiveLock, NSString, NSURL, PLIPSorter, PLPlayerOption, PLPlayerQoS, PLPlayerReachability, QNDnsManager, UIImageView, UIView;
@protocol OS_dispatch_queue, PLPlayContextProtocol, PLPlayerDelegate;

@interface PLPlayer : NSObject <PLPlayContextDelegate>
{
    _Bool _mute;
    _Bool _backgroundPlayEnable;
    _Bool _playing;
    _Bool _autoReconnectEnable;
    _Bool _enableRender;
    _Bool _beInterruptedByOtherAudio;
    _Bool _isScreenShot;
    float _playerVolume;
    int _playurlCount;
    int _reconnectCount;
    id <PLPlayerDelegate> _delegate;
    NSObject<OS_dispatch_queue> *_delegateQueue;
    NSURL *_URL;
    long long _status;
    PLPlayerOption *_option;
    UIView *_playerView;
    long long _rotationMode;
    NSString *_referer;
    AVPlayer *_avplayer;
    AVPlayerItem *_avplayerItem;
    id <PLPlayContextProtocol> _playContext;
    NSRecursiveLock *_statusLock;
    NSURL *_playURL;
    NSObject<OS_dispatch_queue> *_workQueue;
    QNDnsManager *_dns;
    PLIPSorter *_ipSorter;
    PLPlayerQoS *_playQoS;
    CDUnknownBlockType _screenShotWithCompletionHandler;
    PLPlayerReachability *_reachability;
}

+ (id)playerWithURL:(id)arg1 option:(id)arg2;
+ (id)playerLiveWithURL:(id)arg1 option:(id)arg2;
+ (void)preDNSHost:(id)arg1;
+ (void)setupHappyDNS;
@property(retain, nonatomic) PLPlayerReachability *reachability; // @synthesize reachability=_reachability;
@property(copy, nonatomic) CDUnknownBlockType screenShotWithCompletionHandler; // @synthesize screenShotWithCompletionHandler=_screenShotWithCompletionHandler;
@property(nonatomic) _Bool isScreenShot; // @synthesize isScreenShot=_isScreenShot;
@property(retain, nonatomic) PLPlayerQoS *playQoS; // @synthesize playQoS=_playQoS;
@property(nonatomic) int reconnectCount; // @synthesize reconnectCount=_reconnectCount;
@property(readonly, nonatomic) PLIPSorter *ipSorter; // @synthesize ipSorter=_ipSorter;
@property(readonly, nonatomic) QNDnsManager *dns; // @synthesize dns=_dns;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *workQueue; // @synthesize workQueue=_workQueue;
@property(nonatomic) _Bool beInterruptedByOtherAudio; // @synthesize beInterruptedByOtherAudio=_beInterruptedByOtherAudio;
@property int playurlCount; // @synthesize playurlCount=_playurlCount;
@property(nonatomic) float playerVolume; // @synthesize playerVolume=_playerVolume;
@property(retain, nonatomic) NSURL *playURL; // @synthesize playURL=_playURL;
@property(retain, nonatomic) NSRecursiveLock *statusLock; // @synthesize statusLock=_statusLock;
@property(retain, nonatomic) id <PLPlayContextProtocol> playContext; // @synthesize playContext=_playContext;
@property(retain, nonatomic) AVPlayerItem *avplayerItem; // @synthesize avplayerItem=_avplayerItem;
@property(retain, nonatomic) AVPlayer *avplayer; // @synthesize avplayer=_avplayer;
@property(retain, nonatomic) NSString *referer; // @synthesize referer=_referer;
@property(nonatomic) _Bool enableRender; // @synthesize enableRender=_enableRender;
@property(nonatomic) long long rotationMode; // @synthesize rotationMode=_rotationMode;
@property(nonatomic, getter=isAutoReconnectEnable) _Bool autoReconnectEnable; // @synthesize autoReconnectEnable=_autoReconnectEnable;
@property(readonly, nonatomic) UIView *playerView; // @synthesize playerView=_playerView;
@property(nonatomic, getter=isPlaying) _Bool playing; // @synthesize playing=_playing;
@property(retain) PLPlayerOption *option; // @synthesize option=_option;
@property(nonatomic) long long status; // @synthesize status=_status;
@property(readonly, copy, nonatomic) NSURL *URL; // @synthesize URL=_URL;
@property(nonatomic, getter=isBackgroundPlayEnable) _Bool backgroundPlayEnable; // @synthesize backgroundPlayEnable=_backgroundPlayEnable;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *delegateQueue; // @synthesize delegateQueue=_delegateQueue;
@property(nonatomic) __weak id <PLPlayerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)playContext:(id)arg1 loadedTimeRange:(CDStruct_e83c9415)arg2;
- (void)playContext:(id)arg1 codecError:(id)arg2;
- (id)playContext:(id)arg1 willAudioRenderBuffer:(id)arg2;
- (void)playContext:(id)arg1 willRenderFrame:(id)arg2;
- (void)playContextEndPlaying:(id)arg1;
- (void)playContextStartPlaying:(id)arg1;
- (void)playContextStartCaching:(id)arg1;
- (void)playContext:(id)arg1 stoppedWithError:(id)arg2;
@property(readonly, nonatomic) double downSpeed;
@property(readonly, nonatomic) double bitrate;
@property(readonly, nonatomic) int renderFPS;
@property(readonly, nonatomic) int videoFPS;
@property(readonly, nonatomic) int displayRatioHeight;
@property(readonly, nonatomic) int displayRatioWidth;
@property(readonly, nonatomic) int height;
@property(readonly, nonatomic) int width;
@property(readonly, nonatomic) double firstVideoTime;
@property(readonly, nonatomic) double connectTime;
@property(readonly, nonatomic) NSDictionary *metadata;
@property(nonatomic, getter=isMute) _Bool mute; // @synthesize mute=_mute;
@property(readonly, nonatomic) UIImageView *launchView; // @dynamic launchView;
@property(readonly, nonatomic) CDStruct_1b6d18a9 totalDuration; // @dynamic totalDuration;
@property(readonly, nonatomic) CDStruct_1b6d18a9 currentTime; // @dynamic currentTime;
- (void)getScreenShotWithCompletionHandler:(CDUnknownBlockType)arg1;
- (float)getVolume;
- (void)setVolume:(float)arg1;
- (void)seekTo:(CDStruct_1b6d18a9)arg1;
- (void)stopInternal;
- (void)stop;
- (void)pauseInternal;
- (void)pause;
- (void)resumeInternal;
- (void)resume;
- (void)playInternal;
- (void)playWithURL:(id)arg1;
- (void)play;
- (void)prepareToPlay;
- (void)setPlayerStatus:(long long)arg1 error:(id)arg2;
- (void)dealloc;
- (void)onUIApplicationWillEnterForeground:(id)arg1;
- (void)onUIApplicationDidEnterBackground:(id)arg1;
- (void)onAVAudioSessionInterruption:(id)arg1;
- (void)networkStateChange;
- (void)onUIApplicationWillTerminateNotification;
- (id)initWithURL:(id)arg1 option:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

