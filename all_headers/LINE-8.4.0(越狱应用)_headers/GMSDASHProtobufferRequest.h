//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "GMSDASHConnectionRequest.h"

@class GMSx_GPBExtensionRegistry, GMSx_GPBMessage, NSObject;
@protocol OS_dispatch_queue;

@interface GMSDASHProtobufferRequest : GMSDASHConnectionRequest
{
    _Bool _bypassRequestHooks;
    _Bool _bypassResponseHooks;
    _Bool _retryEnabled;
    unsigned long long _retryCount;
    double _startingRetryInterval;
    double _retryFactor;
    unsigned long long _maxRetries;
    CDUnknownBlockType _retryBlock;
    GMSx_GPBMessage *_protobuffer;
    GMSx_GPBExtensionRegistry *_extensionRegistry;
    Class _responseProtoClass;
    CDUnknownBlockType _handler;
    NSObject<OS_dispatch_queue> *_handlerQueue;
}

+ (_Bool)isRetryableError:(id)arg1;
+ (void)removeAllResponseHooks;
+ (void)removeResponseHookWithID:(id)arg1;
+ (void)addResponseHookWithID:(id)arg1 forHook:(CDUnknownBlockType)arg2;
+ (id)requestWithID:(int)arg1 protobuffer:(id)arg2 responseProtoClass:(Class)arg3 handlerQueue:(id)arg4 handler:(CDUnknownBlockType)arg5;
@property _Bool bypassResponseHooks; // @synthesize bypassResponseHooks=_bypassResponseHooks;
@property _Bool bypassRequestHooks; // @synthesize bypassRequestHooks=_bypassRequestHooks;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *handlerQueue; // @synthesize handlerQueue=_handlerQueue;
@property(readonly, copy, nonatomic) CDUnknownBlockType handler; // @synthesize handler=_handler;
@property(readonly, nonatomic) Class responseProtoClass; // @synthesize responseProtoClass=_responseProtoClass;
@property(retain) GMSx_GPBExtensionRegistry *extensionRegistry; // @synthesize extensionRegistry=_extensionRegistry;
@property(retain) GMSx_GPBMessage *protobuffer; // @synthesize protobuffer=_protobuffer;
@property(copy, nonatomic) CDUnknownBlockType retryBlock; // @synthesize retryBlock=_retryBlock;
@property(nonatomic) unsigned long long maxRetries; // @synthesize maxRetries=_maxRetries;
@property(nonatomic) double retryFactor; // @synthesize retryFactor=_retryFactor;
@property(nonatomic) double startingRetryInterval; // @synthesize startingRetryInterval=_startingRetryInterval;
@property(readonly, nonatomic) unsigned long long retryCount; // @synthesize retryCount=_retryCount;
@property(nonatomic, getter=isRetryEnabled) _Bool retryEnabled; // @synthesize retryEnabled=_retryEnabled;
- (void).cxx_destruct;
- (void)retryRequestNow:(id)arg1;
- (void)scheduleRetryIfApplicableForResponse:(id)arg1 error:(id)arg2 connection:(id)arg3;
- (double)nextRetryInterval;
- (void)logResponsePayload:(id)arg1;
- (void)dispatchHandlerWithResponse:(id)arg1 error:(id)arg2 connection:(id)arg3;
- (void)asyncRequestFailed:(id)arg1 connection:(id)arg2;
- (_Bool)asyncReadResponse:(struct JavaDataInput *)arg1 connection:(id)arg2;
- (void)asyncSerializeRequestData:(struct JavaDataOutput *)arg1 connection:(id)arg2;
- (void)abandon;
- (id)description;
- (id)initWithRequestID:(int)arg1 protobuffer:(id)arg2 responseProtoClass:(Class)arg3 handlerQueue:(id)arg4 handler:(CDUnknownBlockType)arg5;

@end

