//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <UIKit/UIViewController.h>

#import "AddTrackToLocalListViewDelegate-Protocol.h"
#import "AirPlayButtonOverLayDelegate-Protocol.h"
#import "LRCViewDelegate-Protocol.h"
#import "MFMessageComposeViewControllerDelegate-Protocol.h"
#import "MusicAPlayerDelegate-Protocol.h"
#import "MusicGestureViewDelegate-Protocol.h"
#import "ThemeObj-Protocol.h"
#import "UIScrollViewDelegate-Protocol.h"
#import "UITableViewDataSource-Protocol.h"
#import "UITableViewDelegate-Protocol.h"

@class ActionView, AdvMaterialModel, LRCView, MPVolumeView, MusicGestureView, NSArray, NSObject, NSString, OnlinePlayerProgressView, ScrollTextView, UIButton, UIImage, UIImageView, UILabel, UIScrollView, UITableView, UIView, UIWebView;
@protocol OS_dispatch_semaphore;

@interface BasePlayer : UIViewController <MFMessageComposeViewControllerDelegate, AddTrackToLocalListViewDelegate, UITableViewDelegate, UITableViewDataSource, MusicGestureViewDelegate, UIScrollViewDelegate, LRCViewDelegate, AirPlayButtonOverLayDelegate, MusicAPlayerDelegate, ThemeObj>
{
    MusicGestureView *frontViewBg;
    UIView *frontView;
    UIButton *frontViewMaskView;
    UIImageView *originAlbumImgView;
    _Bool playViewAppear;
    int playMode;
    NSArray *_modeImageNormalNames;
    NSArray *_modeImagePressNames;
    UIImageView *_musicControl;
    UIImageView *_playBtnBg;
    UIButton *_playBtn;
    UIButton *_pauseBtn;
    UIButton *_modeBtn;
    UIButton *_prevBtn;
    UIButton *_nextBtn;
    OnlinePlayerProgressView *_onlinePlayProgress;
    _Bool isMoreStatus;
    UIImageView *artistAlbumNameImgView;
    UILabel *artistNameLabel;
    UIImageView *thirdPartyMark;
    UIImageView *fromIPodListMark;
    MPVolumeView *_airplayVolumeView;
    UIButton *playerFavBtn;
    UIImageView *hdMusicMark;
    UIImageView *kingSongMark;
    UIImageView *_KTVMark;
    UIImageView *_hasMVMark;
    UIView *shareFavDownBtnBgView;
    UIButton *_favBtn;
    UIButton *trashBtn;
    UIButton *playerDownloadBtn;
    int deviceType;
    MusicGestureView *playPageNavView;
    UIButton *quitPlayPageBtn;
    UIButton *lrcAlbumImageBtn;
    UIButton *commentButton;
    UILabel *commentNumLabel;
    ScrollTextView *trackNameLabel;
    UIButton *trackNameButton;
    UILabel *versionLabel;
    ScrollTextView *artistAlbumScrollView;
    UIButton *shareBtn;
    UIScrollView *bgScrollView;
    UIView *pageView1;
    MusicGestureView *pageView2;
    UIView *pageView3;
    NSArray *indecators;
    int currentPage;
    double currentOriginX;
    UIButton *searchPicBtn;
    UILabel *searchPicLabel;
    UIButton *searchLrcBtn;
    UILabel *searchLrcLabel;
    UITableView *playListTableView;
    LRCView *_lrcView;
    _Bool showLrcView;
    _Bool scrollViewMoving;
    UILabel *currentTimeLabel;
    double viewWidth;
    UIView *playTipView;
    _Bool toKtvPlayer;
    UIButton *_closeAdButton;
    UIView *_adTimeBgView;
    UIButton *_adImageViewBtn;
    UILabel *_adTimeLabel;
    UILabel *_adTitleLabel;
    UILabel *_adDetailTitleLabel;
    AdvMaterialModel *_advMaterialModel;
    _Bool lrcAlertViewIsShowing;
    NSObject<OS_dispatch_semaphore> *_lock;
    _Bool _hasShowKingPrompt;
    long long _moreViewBgHeight;
    UIImageView *_albumImage;
    UIImage *_screenLockedAlbumImage;
    UIView *_lrcAdjustView;
    UIImageView *_lrcAdjustAlert;
    UILabel *_lrcAdjustLabel;
    UIButton *_lrcAdjustBtn;
    long long _lrcAdjustValue;
    long long _musicControlHeight;
    long long _artistAlbumNameImgViewHeight;
    long long _artistAlbumNameViewWidth;
    long long _albumImageOriginX;
    ActionView *_playerActionView;
    long long _adTotalDuration;
    UIWebView *_telWebView;
}

@property(retain, nonatomic) UIWebView *telWebView; // @synthesize telWebView=_telWebView;
@property _Bool hasShowKingPrompt; // @synthesize hasShowKingPrompt=_hasShowKingPrompt;
@property(nonatomic) long long adTotalDuration; // @synthesize adTotalDuration=_adTotalDuration;
@property(retain, nonatomic) AdvMaterialModel *advMaterialModel; // @synthesize advMaterialModel=_advMaterialModel;
@property(retain, nonatomic) UILabel *adDetailTitleLabel; // @synthesize adDetailTitleLabel=_adDetailTitleLabel;
@property(retain, nonatomic) UILabel *adTitleLabel; // @synthesize adTitleLabel=_adTitleLabel;
@property(retain, nonatomic) UILabel *adTimeLabel; // @synthesize adTimeLabel=_adTimeLabel;
@property(retain, nonatomic) UIButton *adImageViewBtn; // @synthesize adImageViewBtn=_adImageViewBtn;
@property(retain, nonatomic) UIView *adTimeBgView; // @synthesize adTimeBgView=_adTimeBgView;
@property(retain, nonatomic) UIButton *closeAdButton; // @synthesize closeAdButton=_closeAdButton;
@property(retain, nonatomic) ActionView *playerActionView; // @synthesize playerActionView=_playerActionView;
@property(nonatomic) long long albumImageOriginX; // @synthesize albumImageOriginX=_albumImageOriginX;
@property(nonatomic) long long artistAlbumNameViewWidth; // @synthesize artistAlbumNameViewWidth=_artistAlbumNameViewWidth;
@property(nonatomic) long long artistAlbumNameImgViewHeight; // @synthesize artistAlbumNameImgViewHeight=_artistAlbumNameImgViewHeight;
@property(nonatomic) long long musicControlHeight; // @synthesize musicControlHeight=_musicControlHeight;
@property(nonatomic) long long lrcAdjustValue; // @synthesize lrcAdjustValue=_lrcAdjustValue;
@property(retain, nonatomic) UIButton *lrcAdjustBtn; // @synthesize lrcAdjustBtn=_lrcAdjustBtn;
@property(retain, nonatomic) UILabel *lrcAdjustLabel; // @synthesize lrcAdjustLabel=_lrcAdjustLabel;
@property(retain, nonatomic) UIImageView *lrcAdjustAlert; // @synthesize lrcAdjustAlert=_lrcAdjustAlert;
@property(retain, nonatomic) UIView *lrcAdjustView; // @synthesize lrcAdjustView=_lrcAdjustView;
@property(retain, nonatomic) UIImage *screenLockedAlbumImage; // @synthesize screenLockedAlbumImage=_screenLockedAlbumImage;
@property(retain, nonatomic) UIImageView *albumImage; // @synthesize albumImage=_albumImage;
@property(retain, nonatomic) LRCView *lrcView; // @synthesize lrcView=_lrcView;
@property(retain, nonatomic) UIButton *favBtn; // @synthesize favBtn=_favBtn;
@property(retain, nonatomic) OnlinePlayerProgressView *onlinePlayProgress; // @synthesize onlinePlayProgress=_onlinePlayProgress;
@property(retain, nonatomic) UIButton *nextBtn; // @synthesize nextBtn=_nextBtn;
@property(retain, nonatomic) UIButton *prevBtn; // @synthesize prevBtn=_prevBtn;
@property(retain, nonatomic) UIButton *modeBtn; // @synthesize modeBtn=_modeBtn;
@property(retain, nonatomic) UIButton *pauseBtn; // @synthesize pauseBtn=_pauseBtn;
@property(retain, nonatomic) UIButton *playBtn; // @synthesize playBtn=_playBtn;
@property(retain, nonatomic) UIImageView *playBtnBg; // @synthesize playBtnBg=_playBtnBg;
@property(retain, nonatomic) UIImageView *musicControl; // @synthesize musicControl=_musicControl;
@property(retain, nonatomic) NSArray *modeImagePressNames; // @synthesize modeImagePressNames=_modeImagePressNames;
@property(retain, nonatomic) NSArray *modeImageNormalNames; // @synthesize modeImageNormalNames=_modeImageNormalNames;
@property(readonly, nonatomic) UIButton *commentButton; // @synthesize commentButton;
@property(retain, nonatomic) UITableView *playListTableView; // @synthesize playListTableView;
@property(nonatomic) long long moreViewBgHeight; // @synthesize moreViewBgHeight=_moreViewBgHeight;
@property(nonatomic) int deviceType; // @synthesize deviceType;
- (void).cxx_destruct;
- (void)refreshPlayingCenterInfo:(id)arg1;
- (void)messageComposeViewController:(id)arg1 didFinishWithResult:(long long)arg2;
- (void)trackNameLabelView;
- (void)setTrackNameLabelText:(id)arg1;
- (void)showKingLabel;
- (void)player:(id)arg1 onAdStateChange:(id)arg2 newStatus:(long long)arg3 atPosition:(int)arg4;
- (void)showAd;
- (_Bool)setFileSegmentRangeFromStart:(double)arg1 ToEndTime:(double)arg2;
- (_Bool)setFadeIn:(double)arg1 AndFadeOut:(double)arg2;
- (_Bool)playerViewSupportDrag;
- (unsigned long long)supportedInterfaceOrientations;
- (_Bool)shouldAutorotate;
- (_Bool)shouldAutorotateToInterfaceOrientation:(long long)arg1;
- (void)lrcByTrackIdFetched:(id)arg1 userInfo:(id)arg2;
- (void)fetchLrcByTrackId:(id)arg1 userInfo:(id)arg2;
- (void)loadLrcFromTrackInfo:(id)arg1;
- (void)searchLrcyssFetched:(id)arg1 userInfo:(id)arg2;
- (void)updateLRCLink:(id)arg1 lrclink:(id)arg2;
- (void)fetchSearchLrcyssASI:(id)arg1 artistName:(id)arg2 userInfo:(id)arg3;
- (void)searchLrcyss:(id)arg1 userInfo:(id)arg2;
- (_Bool)_loadLrcFromLocalFile:(id)arg1;
- (_Bool)fetchLrcForDownloadedTrack:(id)arg1;
- (void)_loadLrcFailed;
- (_Bool)fetchLrcForIpodTrack:(id)arg1;
- (_Bool)parseLRCData:(id)arg1;
- (_Bool)_fetchLRCByTrack:(id)arg1 readLocal:(_Bool)arg2;
- (void)searchLrcPicFetched:(id)arg1 userInfo:(id)arg2;
- (void)fetchSearchLrcPicASI:(id)arg1 artistName:(id)arg2 type:(long long)arg3 userInfo:(id)arg4;
- (void)picturesByTrackIdFetched:(id)arg1 userInfo:(id)arg2;
- (void)fetchPicturesByTrackId:(id)arg1 userInfo:(id)arg2;
- (void)searchLrcPic:(id)arg1 userInfo:(id)arg2;
- (_Bool)fetchCoverForLocalTrack:(id)arg1;
- (void)applyTheme;
- (void)fadeOutPause;
- (void)sleepTimer;
- (void)playerTrackCachedFinished:(id)arg1;
- (void)setNowPlayingCenterInfo:(id)arg1;
- (void)httpFailed:(id)arg1 userInfo:(id)arg2;
- (void)AirPlayButtonIsTouched;
- (void)dragOnView:(id)arg1 gestureDidEnd:(id)arg2;
- (void)dragOnView:(id)arg1 gestureIsDragging:(id)arg2;
- (void)dragOnView:(id)arg1 gestureDidBegin:(id)arg2;
- (void)lrcView:(id)arg1 playAt:(double)arg2;
- (void)singleTapOnView:(id)arg1 gesture:(id)arg2;
- (_Bool)shouldBeginDragGesture:(id)arg1 receiveTouch:(id)arg2;
- (void)scrollViewDidEndDecelerating:(id)arg1;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (void)showPlayerTipView:(_Bool)arg1;
- (void)removePlayerAnimateTip;
- (void)playerAnimateTip:(id)arg1;
- (void)addFavSongToLikeSongList:(id)arg1;
- (void)addFavSongAction:(id)arg1;
- (void)addToPlaylist;
- (void)actionSearchBtn:(id)arg1;
- (void)actionKingInfoContexTrack:(id)arg1;
- (void)actionSleepSettingCell;
- (void)actionEqSettingButton;
- (void)actionAlbumDetailBtn:(id)arg1;
- (void)actionSingerDetailBtn:(id)arg1;
- (void)resetMoreStatus;
- (void)actionMoreButton;
- (void)actionLrcAlbumImageBtn;
- (void)commentButtonClick;
- (void)dismissMobileAd;
- (void)rewriteLrcFile;
- (void)resetLrcAdjustView:(_Bool)arg1;
- (void)lrcAdjustViewRemoveFinished;
- (void)showLrcAdjustView;
- (void)lrcAlertViewDisappear;
- (void)showLrcAlertView;
- (void)adjustLrcSpeed:(id)arg1;
- (void)actionQuitPlayPageBtn;
- (void)playerTrackDidEndPlaying:(id)arg1;
- (void)_trackDidEndPlaying:(id)arg1;
- (void)playerTrackDidBecomeAvailable:(id)arg1;
- (void)handleDidSelectTrack:(id)arg1;
- (void)playerTrackReadyToPlay:(id)arg1;
- (void)progressChangeTo:(id)arg1;
- (void)handleProgressNotif:(id)arg1;
- (void)playerDragDidFinish:(id)arg1;
- (void)BDTMCConnected:(id)arg1;
- (void)handleFadeOut:(id)arg1;
- (void)skip;
- (void)pre;
- (void)pauseBtnTaped;
- (void)playBtnTaped;
- (_Bool)isLocalPlayList;
- (void)updatePlayBtnState;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)initFrontViewMaskView;
- (void)initArtistAlbumNameImgView;
- (void)initScrollViewPages;
- (void)initBgScrollView;
- (void)initPageIndecators:(id)arg1 press:(id)arg2 parentView:(id)arg3 originY:(double)arg4;
- (void)initPlayListTableView;
- (void)initAlbumBgView;
- (void)initAirPlayView;
- (void)initPlayPageNavView;
- (void)initFrontView;
- (void)actionadImageViewBtn;
- (void)actionCloseAdButton;
- (void)dealloc;
- (void)viewWillAppear:(_Bool)arg1;
- (void)doBlurOrShowDefault;
- (void)playerViewWillAppear;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)playerViewWillDisappear;
- (void)handleBufferCached:(id)arg1;
- (void)refreshPlayerView:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (void)loadView;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

