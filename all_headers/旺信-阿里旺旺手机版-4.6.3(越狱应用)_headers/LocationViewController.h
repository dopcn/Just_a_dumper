//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <UIKit/UIViewController.h>

#import "CLLocationManagerDelegate-Protocol.h"
#import "MKMapViewDelegate-Protocol.h"
#import "MKReverseGeocoderDelegate-Protocol.h"
#import "UIAlertViewDelegate-Protocol.h"

@class CLGeocoder, CLLocationManager, DetailGeoInfoView, MKMapView, MKReverseGeocoder, NSString, NSTimer, UIButton, UIImageView;
@protocol LocationViewDelegate;

__attribute__((visibility("hidden")))
@interface LocationViewController : UIViewController <MKMapViewDelegate, CLLocationManagerDelegate, UIAlertViewDelegate, MKReverseGeocoderDelegate>
{
    _Bool _displayErrors;
    _Bool _successLocate;
    int _domain;
    id <LocationViewDelegate> _delegate;
    MKMapView *_mapView;
    UIButton *_btnBack;
    DetailGeoInfoView *_viGeoInfo;
    UIImageView *_viPinAnn;
    CLLocationManager *_locationMgr;
    CLGeocoder *_geoCoder;
    MKReverseGeocoder *_geoCoderPreVersion;
    NSTimer *_timer;
    NSString *_siteName;
    struct CLLocationCoordinate2D _userLocation;
    struct CLLocationCoordinate2D _curLocation;
}

@property(retain, nonatomic) NSString *siteName; // @synthesize siteName=_siteName;
@property(nonatomic) int domain; // @synthesize domain=_domain;
@property(retain, nonatomic) NSTimer *timer; // @synthesize timer=_timer;
@property(retain, nonatomic) MKReverseGeocoder *geoCoderPreVersion; // @synthesize geoCoderPreVersion=_geoCoderPreVersion;
@property(retain, nonatomic) CLGeocoder *geoCoder; // @synthesize geoCoder=_geoCoder;
@property(nonatomic) struct CLLocationCoordinate2D curLocation; // @synthesize curLocation=_curLocation;
@property(nonatomic) struct CLLocationCoordinate2D userLocation; // @synthesize userLocation=_userLocation;
@property(retain, nonatomic) CLLocationManager *locationMgr; // @synthesize locationMgr=_locationMgr;
@property(retain, nonatomic) UIImageView *viPinAnn; // @synthesize viPinAnn=_viPinAnn;
@property(retain, nonatomic) DetailGeoInfoView *viGeoInfo; // @synthesize viGeoInfo=_viGeoInfo;
@property(retain, nonatomic) UIButton *btnBack; // @synthesize btnBack=_btnBack;
@property(retain, nonatomic) MKMapView *mapView; // @synthesize mapView=_mapView;
@property(nonatomic) __weak id <LocationViewDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)reverseGeocoder:(id)arg1 didFailWithError:(id)arg2;
- (void)reverseGeocoder:(id)arg1 didFindPlacemark:(id)arg2;
- (id)mapView:(id)arg1 viewForAnnotation:(id)arg2;
- (void)mapView:(id)arg1 didFailToLocateUserWithError:(id)arg2;
- (void)mapView:(id)arg1 didUpdateUserLocation:(id)arg2;
- (void)mapView:(id)arg1 regionDidChangeAnimated:(_Bool)arg2;
- (void)mapView:(id)arg1 regionWillChangeAnimated:(_Bool)arg2;
- (void)mapViewDidFailLoadingMap:(id)arg1 withError:(id)arg2;
- (void)locationManager:(id)arg1 didChangeAuthorizationStatus:(int)arg2;
- (void)locationManager:(id)arg1 didFailWithError:(id)arg2;
- (void)locationManager:(id)arg1 didUpdateToLocation:(id)arg2 fromLocation:(id)arg3;
- (void)siteLocation;
- (void)updateGeoInfo:(struct CLLocationCoordinate2D)arg1;
- (void)updateMapViewWithLocation:(struct CLLocationCoordinate2D)arg1;
- (void)setupMapViewWithLocation:(struct CLLocationCoordinate2D)arg1;
- (void)locationManagerDidTimeout:(id)arg1;
- (void)resetTimer;
- (void)showLocationFailAlert;
- (void)showEnableLocationAlert;
- (void)locateCurPosition;
- (void)onResetMapView:(id)arg1;
- (void)onLocationCancled:(id)arg1;
- (void)onLocationDone:(id)arg1;
- (long long)preferredInterfaceOrientationForPresentation;
- (_Bool)shouldAutorotate;
- (_Bool)shouldAutorotateToInterfaceOrientation:(long long)arg1;
- (void)dealloc;
- (void)viewDidUnload;
- (void)viewDidLoad;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (id)initWithQuery:(id)arg1 query:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

